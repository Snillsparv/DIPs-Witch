
./Debug/graphicdisplay.elf:     file format elf32-littlearm


Disassembly of section .text:

20000000 <startup>:
#endif
}

void startup ( void )
{
__asm volatile(
20000000:	4802      	ldr	r0, [pc, #8]	; (2000000c <_exit+0x4>)
20000002:	4685      	mov	sp, r0
20000004:	f000 f8fa 	bl	200001fc <main>

20000008 <_exit>:
20000008:	e7fe      	b.n	20000008 <_exit>
	" LDR R0,=0x2001C000\n"		/* set stack */
	" MOV SP,R0\n"
	" BL main\n"				/* call main */
	"_exit: B .\n"				/* never return */
	) ;
}
2000000a:	46c0      	nop			; (mov r8, r8)
2000000c:	2001c000 	andcs	ip, r1, r0

20000010 <init_app>:
void init_app( void ) {
20000010:	b580      	push	{r7, lr}
20000012:	af00      	add	r7, sp, #0
	*portModer = 0x55555555;
20000014:	4b05      	ldr	r3, [pc, #20]	; (2000002c <init_app+0x1c>)
20000016:	4a06      	ldr	r2, [pc, #24]	; (20000030 <init_app+0x20>)
20000018:	601a      	str	r2, [r3, #0]
	set_up_DIL();
2000001a:	f002 fa87 	bl	2000252c <set_up_DIL>
	graphic_initialize();
2000001e:	f001 fd87 	bl	20001b30 <graphic_initialize>
	graphic_clear_screen();
20000022:	f001 fdbc 	bl	20001b9e <graphic_clear_screen>
}
20000026:	46c0      	nop			; (mov r8, r8)
20000028:	46bd      	mov	sp, r7
2000002a:	bd80      	pop	{r7, pc}
2000002c:	40021000 	andmi	r1, r2, r0
20000030:	55555555 	ldrbpl	r5, [r5, #-1365]	; 0xfffffaab

20000034 <initSprites>:
sprite tempTitleLight;
sprite tempPressBlack;
sprite tempPressGray;
sprite tempPressLight;

void initSprites( void ) {
20000034:	b580      	push	{r7, lr}
20000036:	b08a      	sub	sp, #40	; 0x28
20000038:	af00      	add	r7, sp, #0
	sprite *monsterPointer = &tempMonster;
2000003a:	4b49      	ldr	r3, [pc, #292]	; (20000160 <initSprites+0x12c>)
2000003c:	627b      	str	r3, [r7, #36]	; 0x24
	load_sprite(monsterPointer, monster_black_bits, monster_black_width, monster_black_height);
2000003e:	4949      	ldr	r1, [pc, #292]	; (20000164 <initSprites+0x130>)
20000040:	6a78      	ldr	r0, [r7, #36]	; 0x24
20000042:	231e      	movs	r3, #30
20000044:	221e      	movs	r2, #30
20000046:	f002 fa5d 	bl	20002504 <load_sprite>
	monster = monsterPointer;
2000004a:	4b47      	ldr	r3, [pc, #284]	; (20000168 <initSprites+0x134>)
2000004c:	6a7a      	ldr	r2, [r7, #36]	; 0x24
2000004e:	601a      	str	r2, [r3, #0]
	
	sprite *monsterPointer2 = &tempMonsterLight;
20000050:	4b46      	ldr	r3, [pc, #280]	; (2000016c <initSprites+0x138>)
20000052:	623b      	str	r3, [r7, #32]
	load_sprite(monsterPointer2, monster_light_bits, monster_light_width, monster_light_height);
20000054:	4946      	ldr	r1, [pc, #280]	; (20000170 <initSprites+0x13c>)
20000056:	6a38      	ldr	r0, [r7, #32]
20000058:	231e      	movs	r3, #30
2000005a:	221e      	movs	r2, #30
2000005c:	f002 fa52 	bl	20002504 <load_sprite>
	monsterLight = monsterPointer2;
20000060:	4b44      	ldr	r3, [pc, #272]	; (20000174 <initSprites+0x140>)
20000062:	6a3a      	ldr	r2, [r7, #32]
20000064:	601a      	str	r2, [r3, #0]

	sprite *monsterPointer3 = &tempMonsterGray;
20000066:	4b44      	ldr	r3, [pc, #272]	; (20000178 <initSprites+0x144>)
20000068:	61fb      	str	r3, [r7, #28]
	load_sprite(monsterPointer3, monster_gray_bits, monster_gray_width, monster_gray_height);
2000006a:	4944      	ldr	r1, [pc, #272]	; (2000017c <initSprites+0x148>)
2000006c:	69f8      	ldr	r0, [r7, #28]
2000006e:	231e      	movs	r3, #30
20000070:	221e      	movs	r2, #30
20000072:	f002 fa47 	bl	20002504 <load_sprite>
	monsterGray = monsterPointer3;
20000076:	4b42      	ldr	r3, [pc, #264]	; (20000180 <initSprites+0x14c>)
20000078:	69fa      	ldr	r2, [r7, #28]
2000007a:	601a      	str	r2, [r3, #0]

	sprite *pointer4 = &tempBg;
2000007c:	4b41      	ldr	r3, [pc, #260]	; (20000184 <initSprites+0x150>)
2000007e:	61bb      	str	r3, [r7, #24]
	load_sprite(pointer4, bg_bits, bg_width, bg_height);
20000080:	4941      	ldr	r1, [pc, #260]	; (20000188 <initSprites+0x154>)
20000082:	69b8      	ldr	r0, [r7, #24]
20000084:	2340      	movs	r3, #64	; 0x40
20000086:	2280      	movs	r2, #128	; 0x80
20000088:	f002 fa3c 	bl	20002504 <load_sprite>
	bg = pointer4;
2000008c:	4b3f      	ldr	r3, [pc, #252]	; (2000018c <initSprites+0x158>)
2000008e:	69ba      	ldr	r2, [r7, #24]
20000090:	601a      	str	r2, [r3, #0]
	
	sprite *pointer5 = &tempCastleBlack;
20000092:	4b3f      	ldr	r3, [pc, #252]	; (20000190 <initSprites+0x15c>)
20000094:	617b      	str	r3, [r7, #20]
	load_sprite(pointer5, castle_black_bits, castle_black_width, castle_black_height);
20000096:	493f      	ldr	r1, [pc, #252]	; (20000194 <initSprites+0x160>)
20000098:	6978      	ldr	r0, [r7, #20]
2000009a:	2340      	movs	r3, #64	; 0x40
2000009c:	2280      	movs	r2, #128	; 0x80
2000009e:	f002 fa31 	bl	20002504 <load_sprite>
	castleBlack = pointer5;
200000a2:	4b3d      	ldr	r3, [pc, #244]	; (20000198 <initSprites+0x164>)
200000a4:	697a      	ldr	r2, [r7, #20]
200000a6:	601a      	str	r2, [r3, #0]
	
	sprite *pointer6 = &tempCastleGray;
200000a8:	4b3c      	ldr	r3, [pc, #240]	; (2000019c <initSprites+0x168>)
200000aa:	613b      	str	r3, [r7, #16]
	load_sprite(pointer6, castle_gray_bits, castle_black_width, castle_black_height);
200000ac:	493c      	ldr	r1, [pc, #240]	; (200001a0 <initSprites+0x16c>)
200000ae:	6938      	ldr	r0, [r7, #16]
200000b0:	2340      	movs	r3, #64	; 0x40
200000b2:	2280      	movs	r2, #128	; 0x80
200000b4:	f002 fa26 	bl	20002504 <load_sprite>
	castleGray = pointer6;
200000b8:	4b3a      	ldr	r3, [pc, #232]	; (200001a4 <initSprites+0x170>)
200000ba:	693a      	ldr	r2, [r7, #16]
200000bc:	601a      	str	r2, [r3, #0]
	
	sprite *pointer7 = &tempCastleLight;
200000be:	4b3a      	ldr	r3, [pc, #232]	; (200001a8 <initSprites+0x174>)
200000c0:	60fb      	str	r3, [r7, #12]
	load_sprite(pointer7, castle_light_bits, castle_black_width, castle_black_height);
200000c2:	493a      	ldr	r1, [pc, #232]	; (200001ac <initSprites+0x178>)
200000c4:	68f8      	ldr	r0, [r7, #12]
200000c6:	2340      	movs	r3, #64	; 0x40
200000c8:	2280      	movs	r2, #128	; 0x80
200000ca:	f002 fa1b 	bl	20002504 <load_sprite>
	castleLight = pointer7;
200000ce:	4b38      	ldr	r3, [pc, #224]	; (200001b0 <initSprites+0x17c>)
200000d0:	68fa      	ldr	r2, [r7, #12]
200000d2:	601a      	str	r2, [r3, #0]
	
	sprite *pointer8 = &tempTitleLight;
200000d4:	4b37      	ldr	r3, [pc, #220]	; (200001b4 <initSprites+0x180>)
200000d6:	60bb      	str	r3, [r7, #8]
	load_sprite(pointer8, title_light_bits, title_black_width, title_black_height);
200000d8:	4937      	ldr	r1, [pc, #220]	; (200001b8 <initSprites+0x184>)
200000da:	68b8      	ldr	r0, [r7, #8]
200000dc:	231e      	movs	r3, #30
200000de:	2232      	movs	r2, #50	; 0x32
200000e0:	f002 fa10 	bl	20002504 <load_sprite>
	titleLight = pointer8;
200000e4:	4b35      	ldr	r3, [pc, #212]	; (200001bc <initSprites+0x188>)
200000e6:	68ba      	ldr	r2, [r7, #8]
200000e8:	601a      	str	r2, [r3, #0]
	sprite *pointer9 = &tempTitleGray;
200000ea:	4b35      	ldr	r3, [pc, #212]	; (200001c0 <initSprites+0x18c>)
200000ec:	607b      	str	r3, [r7, #4]
	load_sprite(pointer9, title_gray_bits, title_black_width, title_black_height);
200000ee:	4935      	ldr	r1, [pc, #212]	; (200001c4 <initSprites+0x190>)
200000f0:	6878      	ldr	r0, [r7, #4]
200000f2:	231e      	movs	r3, #30
200000f4:	2232      	movs	r2, #50	; 0x32
200000f6:	f002 fa05 	bl	20002504 <load_sprite>
	titleGray = pointer9;
200000fa:	4b33      	ldr	r3, [pc, #204]	; (200001c8 <initSprites+0x194>)
200000fc:	687a      	ldr	r2, [r7, #4]
200000fe:	601a      	str	r2, [r3, #0]
	sprite *pointer10 = &tempTitleBlack;
20000100:	4b32      	ldr	r3, [pc, #200]	; (200001cc <initSprites+0x198>)
20000102:	603b      	str	r3, [r7, #0]
	load_sprite(pointer10, title_black_bits, title_black_width, title_black_height);
20000104:	4932      	ldr	r1, [pc, #200]	; (200001d0 <initSprites+0x19c>)
20000106:	6838      	ldr	r0, [r7, #0]
20000108:	231e      	movs	r3, #30
2000010a:	2232      	movs	r2, #50	; 0x32
2000010c:	f002 f9fa 	bl	20002504 <load_sprite>
	titleBlack = pointer10;	
20000110:	4b30      	ldr	r3, [pc, #192]	; (200001d4 <initSprites+0x1a0>)
20000112:	683a      	ldr	r2, [r7, #0]
20000114:	601a      	str	r2, [r3, #0]
	
	pointer8 = &tempPressLight;
20000116:	4b30      	ldr	r3, [pc, #192]	; (200001d8 <initSprites+0x1a4>)
20000118:	60bb      	str	r3, [r7, #8]
	load_sprite(pointer8, press_light_bits, press_black_width, press_black_height);
2000011a:	4930      	ldr	r1, [pc, #192]	; (200001dc <initSprites+0x1a8>)
2000011c:	68b8      	ldr	r0, [r7, #8]
2000011e:	2323      	movs	r3, #35	; 0x23
20000120:	223c      	movs	r2, #60	; 0x3c
20000122:	f002 f9ef 	bl	20002504 <load_sprite>
	pressLight = pointer8;
20000126:	4b2e      	ldr	r3, [pc, #184]	; (200001e0 <initSprites+0x1ac>)
20000128:	68ba      	ldr	r2, [r7, #8]
2000012a:	601a      	str	r2, [r3, #0]
	pointer9 = &tempPressGray;
2000012c:	4b2d      	ldr	r3, [pc, #180]	; (200001e4 <initSprites+0x1b0>)
2000012e:	607b      	str	r3, [r7, #4]
	load_sprite(pointer9, press_gray_bits, press_black_width, press_black_height);
20000130:	492d      	ldr	r1, [pc, #180]	; (200001e8 <initSprites+0x1b4>)
20000132:	6878      	ldr	r0, [r7, #4]
20000134:	2323      	movs	r3, #35	; 0x23
20000136:	223c      	movs	r2, #60	; 0x3c
20000138:	f002 f9e4 	bl	20002504 <load_sprite>
	pressGray = pointer9;
2000013c:	4b2b      	ldr	r3, [pc, #172]	; (200001ec <initSprites+0x1b8>)
2000013e:	687a      	ldr	r2, [r7, #4]
20000140:	601a      	str	r2, [r3, #0]
	pointer10 = &tempPressBlack;
20000142:	4b2b      	ldr	r3, [pc, #172]	; (200001f0 <initSprites+0x1bc>)
20000144:	603b      	str	r3, [r7, #0]
	load_sprite(pointer10, press_black_bits, press_black_width, press_black_height);
20000146:	492b      	ldr	r1, [pc, #172]	; (200001f4 <initSprites+0x1c0>)
20000148:	6838      	ldr	r0, [r7, #0]
2000014a:	2323      	movs	r3, #35	; 0x23
2000014c:	223c      	movs	r2, #60	; 0x3c
2000014e:	f002 f9d9 	bl	20002504 <load_sprite>
	pressBlack = pointer10;	
20000152:	4b29      	ldr	r3, [pc, #164]	; (200001f8 <initSprites+0x1c4>)
20000154:	683a      	ldr	r2, [r7, #0]
20000156:	601a      	str	r2, [r3, #0]
	
	
}
20000158:	46c0      	nop			; (mov r8, r8)
2000015a:	46bd      	mov	sp, r7
2000015c:	b00a      	add	sp, #40	; 0x28
2000015e:	bd80      	pop	{r7, pc}
20000160:	20002f34 	andcs	r2, r0, r4, lsr pc
20000164:	20005248 	andcs	r5, r0, r8, asr #4
20000168:	20002f08 	andcs	r2, r0, r8, lsl #30
2000016c:	20002f8c 	andcs	r2, r0, ip, lsl #31
20000170:	200052c0 	andcs	r5, r0, r0, asr #5
20000174:	20002fb4 			; <UNDEFINED> instruction: 0x20002fb4
20000178:	20002f54 	andcs	r2, r0, r4, asr pc
2000017c:	20005338 	andcs	r5, r0, r8, lsr r3
20000180:	20002fc8 	andcs	r2, r0, r8, asr #31
20000184:	20002fcc 	andcs	r2, r0, ip, asr #31
20000188:	20006574 	andcs	r6, r0, r4, ror r5
2000018c:	20002f50 	andcs	r2, r0, r0, asr pc
20000190:	20002f0c 	andcs	r2, r0, ip, lsl #30
20000194:	200056f8 	strdcs	r5, [r0], -r8
20000198:	20002f30 	andcs	r2, r0, r0, lsr pc
2000019c:	20002fa8 	andcs	r2, r0, r8, lsr #31
200001a0:	20005af8 	strdcs	r5, [r0], -r8
200001a4:	20002fbc 			; <UNDEFINED> instruction: 0x20002fbc
200001a8:	20002f7c 	andcs	r2, r0, ip, ror pc
200001ac:	20005ef8 	strdcs	r5, [r0], -r8
200001b0:	20002f6c 	andcs	r2, r0, ip, ror #30
200001b4:	20002f60 	andcs	r2, r0, r0, ror #30
200001b8:	200062f8 	strdcs	r6, [r0], -r8
200001bc:	20002fb8 			; <UNDEFINED> instruction: 0x20002fb8
200001c0:	20002f24 	andcs	r2, r0, r4, lsr #30
200001c4:	200063cc 	andcs	r6, r0, ip, asr #7
200001c8:	20002fa4 	andcs	r2, r0, r4, lsr #31
200001cc:	20002f44 	andcs	r2, r0, r4, asr #30
200001d0:	200064a0 	andcs	r6, r0, r0, lsr #9
200001d4:	20002fd8 	ldrdcs	r2, [r0], -r8
200001d8:	20002f70 	andcs	r2, r0, r0, ror pc
200001dc:	200054c8 	andcs	r5, r0, r8, asr #9
200001e0:	20002f40 	andcs	r2, r0, r0, asr #30
200001e4:	20002f18 	andcs	r2, r0, r8, lsl pc
200001e8:	200055e0 	andcs	r5, r0, r0, ror #11
200001ec:	20002f88 	andcs	r2, r0, r8, lsl #31
200001f0:	20002f98 	mulcs	r0, r8, pc	; <UNPREDICTABLE>
200001f4:	200053b0 			; <UNDEFINED> instruction: 0x200053b0
200001f8:	20002fc4 	andcs	r2, r0, r4, asr #31

200001fc <main>:
	
int counter = 0;
int current_screen = START_SCREEN;
void main(void)
{
200001fc:	b590      	push	{r4, r7, lr}
200001fe:	4cfe      	ldr	r4, [pc, #1016]	; (200005f8 <main+0x3fc>)
20000200:	44a5      	add	sp, r4
20000202:	af00      	add	r7, sp, #0
 * 2. Draw it with method above.
 * 3. Show frame with some long fram_length for testing.
 * 
 * */
	
	init_app();	
20000204:	f7ff ff04 	bl	20000010 <init_app>
	initSprites();
20000208:	f7ff ff14 	bl	20000034 <initSprites>
	
	GameObject monsterObj;
	Image monsterImage;
	Image monsterImages[] = {monsterImage};
2000020c:	23bf      	movs	r3, #191	; 0xbf
2000020e:	009b      	lsls	r3, r3, #2
20000210:	18fb      	adds	r3, r7, r3
20000212:	22c2      	movs	r2, #194	; 0xc2
20000214:	0092      	lsls	r2, r2, #2
20000216:	18ba      	adds	r2, r7, r2
20000218:	ca13      	ldmia	r2!, {r0, r1, r4}
2000021a:	c313      	stmia	r3!, {r0, r1, r4}
	monsterObj.images = monsterImages;
2000021c:	23c5      	movs	r3, #197	; 0xc5
2000021e:	009b      	lsls	r3, r3, #2
20000220:	18fb      	adds	r3, r7, r3
20000222:	22bf      	movs	r2, #191	; 0xbf
20000224:	0092      	lsls	r2, r2, #2
20000226:	18ba      	adds	r2, r7, r2
20000228:	601a      	str	r2, [r3, #0]
	load_image(&monsterObj.images[0], monster, monsterGray, monsterLight);
2000022a:	23c5      	movs	r3, #197	; 0xc5
2000022c:	009b      	lsls	r3, r3, #2
2000022e:	18fb      	adds	r3, r7, r3
20000230:	6818      	ldr	r0, [r3, #0]
20000232:	4bf2      	ldr	r3, [pc, #968]	; (200005fc <main+0x400>)
20000234:	6819      	ldr	r1, [r3, #0]
20000236:	4bf2      	ldr	r3, [pc, #968]	; (20000600 <main+0x404>)
20000238:	681a      	ldr	r2, [r3, #0]
2000023a:	4bf2      	ldr	r3, [pc, #968]	; (20000604 <main+0x408>)
2000023c:	681b      	ldr	r3, [r3, #0]
2000023e:	f002 f94d 	bl	200024dc <load_image>
	monsterObj.xPos = 30;
20000242:	23c5      	movs	r3, #197	; 0xc5
20000244:	009b      	lsls	r3, r3, #2
20000246:	18fb      	adds	r3, r7, r3
20000248:	221e      	movs	r2, #30
2000024a:	605a      	str	r2, [r3, #4]
	monsterObj.yPos = 4;
2000024c:	23c5      	movs	r3, #197	; 0xc5
2000024e:	009b      	lsls	r3, r3, #2
20000250:	18fb      	adds	r3, r7, r3
20000252:	2204      	movs	r2, #4
20000254:	609a      	str	r2, [r3, #8]
	monsterObj.current_frame = 0;
20000256:	23c5      	movs	r3, #197	; 0xc5
20000258:	009b      	lsls	r3, r3, #2
2000025a:	18fb      	adds	r3, r7, r3
2000025c:	2200      	movs	r2, #0
2000025e:	615a      	str	r2, [r3, #20]
	monsterObj.update = playerUpdate;
20000260:	23c5      	movs	r3, #197	; 0xc5
20000262:	009b      	lsls	r3, r3, #2
20000264:	18fb      	adds	r3, r7, r3
20000266:	4ae8      	ldr	r2, [pc, #928]	; (20000608 <main+0x40c>)
20000268:	60da      	str	r2, [r3, #12]
	
	GameObject titleObj;
	Image titleImage;
	Image titleImages[] = {titleImage};
2000026a:	23b0      	movs	r3, #176	; 0xb0
2000026c:	009b      	lsls	r3, r3, #2
2000026e:	18fb      	adds	r3, r7, r3
20000270:	22b3      	movs	r2, #179	; 0xb3
20000272:	0092      	lsls	r2, r2, #2
20000274:	18ba      	adds	r2, r7, r2
20000276:	ca13      	ldmia	r2!, {r0, r1, r4}
20000278:	c313      	stmia	r3!, {r0, r1, r4}
	titleObj.images = titleImages;
2000027a:	23b6      	movs	r3, #182	; 0xb6
2000027c:	009b      	lsls	r3, r3, #2
2000027e:	18fb      	adds	r3, r7, r3
20000280:	22b0      	movs	r2, #176	; 0xb0
20000282:	0092      	lsls	r2, r2, #2
20000284:	18ba      	adds	r2, r7, r2
20000286:	601a      	str	r2, [r3, #0]
	load_image(&titleObj.images[0], titleBlack, titleGray, titleLight);
20000288:	23b6      	movs	r3, #182	; 0xb6
2000028a:	009b      	lsls	r3, r3, #2
2000028c:	18fb      	adds	r3, r7, r3
2000028e:	6818      	ldr	r0, [r3, #0]
20000290:	4bde      	ldr	r3, [pc, #888]	; (2000060c <main+0x410>)
20000292:	6819      	ldr	r1, [r3, #0]
20000294:	4bde      	ldr	r3, [pc, #888]	; (20000610 <main+0x414>)
20000296:	681a      	ldr	r2, [r3, #0]
20000298:	4bde      	ldr	r3, [pc, #888]	; (20000614 <main+0x418>)
2000029a:	681b      	ldr	r3, [r3, #0]
2000029c:	f002 f91e 	bl	200024dc <load_image>
	titleObj.xPos = 1;
200002a0:	23b6      	movs	r3, #182	; 0xb6
200002a2:	009b      	lsls	r3, r3, #2
200002a4:	18fb      	adds	r3, r7, r3
200002a6:	2201      	movs	r2, #1
200002a8:	605a      	str	r2, [r3, #4]
	titleObj.yPos = -40;
200002aa:	23b6      	movs	r3, #182	; 0xb6
200002ac:	009b      	lsls	r3, r3, #2
200002ae:	18fb      	adds	r3, r7, r3
200002b0:	2228      	movs	r2, #40	; 0x28
200002b2:	4252      	negs	r2, r2
200002b4:	609a      	str	r2, [r3, #8]
	titleObj.current_frame = 0;
200002b6:	23b6      	movs	r3, #182	; 0xb6
200002b8:	009b      	lsls	r3, r3, #2
200002ba:	18fb      	adds	r3, r7, r3
200002bc:	2200      	movs	r2, #0
200002be:	615a      	str	r2, [r3, #20]
	
	GameObject pressObj;
	Image pressImage;
	Image pressImages[] = {pressImage};
200002c0:	23a1      	movs	r3, #161	; 0xa1
200002c2:	009b      	lsls	r3, r3, #2
200002c4:	18fb      	adds	r3, r7, r3
200002c6:	22a4      	movs	r2, #164	; 0xa4
200002c8:	0092      	lsls	r2, r2, #2
200002ca:	18ba      	adds	r2, r7, r2
200002cc:	ca13      	ldmia	r2!, {r0, r1, r4}
200002ce:	c313      	stmia	r3!, {r0, r1, r4}
	pressObj.images = pressImages;
200002d0:	23a7      	movs	r3, #167	; 0xa7
200002d2:	009b      	lsls	r3, r3, #2
200002d4:	18fb      	adds	r3, r7, r3
200002d6:	22a1      	movs	r2, #161	; 0xa1
200002d8:	0092      	lsls	r2, r2, #2
200002da:	18ba      	adds	r2, r7, r2
200002dc:	601a      	str	r2, [r3, #0]
	load_image(&pressObj.images[0], pressBlack, pressLight, pressGray);
200002de:	23a7      	movs	r3, #167	; 0xa7
200002e0:	009b      	lsls	r3, r3, #2
200002e2:	18fb      	adds	r3, r7, r3
200002e4:	6818      	ldr	r0, [r3, #0]
200002e6:	4bcc      	ldr	r3, [pc, #816]	; (20000618 <main+0x41c>)
200002e8:	6819      	ldr	r1, [r3, #0]
200002ea:	4bcc      	ldr	r3, [pc, #816]	; (2000061c <main+0x420>)
200002ec:	681a      	ldr	r2, [r3, #0]
200002ee:	4bcc      	ldr	r3, [pc, #816]	; (20000620 <main+0x424>)
200002f0:	681b      	ldr	r3, [r3, #0]
200002f2:	f002 f8f3 	bl	200024dc <load_image>
	pressObj.xPos = 65-30;
200002f6:	23a7      	movs	r3, #167	; 0xa7
200002f8:	009b      	lsls	r3, r3, #2
200002fa:	18fb      	adds	r3, r7, r3
200002fc:	2223      	movs	r2, #35	; 0x23
200002fe:	605a      	str	r2, [r3, #4]
	pressObj.yPos = 29-15;
20000300:	23a7      	movs	r3, #167	; 0xa7
20000302:	009b      	lsls	r3, r3, #2
20000304:	18fb      	adds	r3, r7, r3
20000306:	220e      	movs	r2, #14
20000308:	609a      	str	r2, [r3, #8]
	pressObj.current_frame = 0;
2000030a:	23a7      	movs	r3, #167	; 0xa7
2000030c:	009b      	lsls	r3, r3, #2
2000030e:	18fb      	adds	r3, r7, r3
20000310:	2200      	movs	r2, #0
20000312:	615a      	str	r2, [r3, #20]
	
	GameObject castleObj;
	Image castleImage;
	Image castleImages[] = {castleImage};
20000314:	2392      	movs	r3, #146	; 0x92
20000316:	009b      	lsls	r3, r3, #2
20000318:	18fb      	adds	r3, r7, r3
2000031a:	2295      	movs	r2, #149	; 0x95
2000031c:	0092      	lsls	r2, r2, #2
2000031e:	18ba      	adds	r2, r7, r2
20000320:	ca13      	ldmia	r2!, {r0, r1, r4}
20000322:	c313      	stmia	r3!, {r0, r1, r4}
	castleObj.images = castleImages;
20000324:	2398      	movs	r3, #152	; 0x98
20000326:	009b      	lsls	r3, r3, #2
20000328:	18fb      	adds	r3, r7, r3
2000032a:	2292      	movs	r2, #146	; 0x92
2000032c:	0092      	lsls	r2, r2, #2
2000032e:	18ba      	adds	r2, r7, r2
20000330:	601a      	str	r2, [r3, #0]
	load_image(&castleObj.images[0], castleBlack, castleGray, castleLight);
20000332:	2398      	movs	r3, #152	; 0x98
20000334:	009b      	lsls	r3, r3, #2
20000336:	18fb      	adds	r3, r7, r3
20000338:	6818      	ldr	r0, [r3, #0]
2000033a:	4bba      	ldr	r3, [pc, #744]	; (20000624 <main+0x428>)
2000033c:	6819      	ldr	r1, [r3, #0]
2000033e:	4bba      	ldr	r3, [pc, #744]	; (20000628 <main+0x42c>)
20000340:	681a      	ldr	r2, [r3, #0]
20000342:	4bba      	ldr	r3, [pc, #744]	; (2000062c <main+0x430>)
20000344:	681b      	ldr	r3, [r3, #0]
20000346:	f002 f8c9 	bl	200024dc <load_image>
	castleObj.xPos = 1;
2000034a:	2398      	movs	r3, #152	; 0x98
2000034c:	009b      	lsls	r3, r3, #2
2000034e:	18fb      	adds	r3, r7, r3
20000350:	2201      	movs	r2, #1
20000352:	605a      	str	r2, [r3, #4]
	castleObj.yPos = 1;
20000354:	2398      	movs	r3, #152	; 0x98
20000356:	009b      	lsls	r3, r3, #2
20000358:	18fb      	adds	r3, r7, r3
2000035a:	2201      	movs	r2, #1
2000035c:	609a      	str	r2, [r3, #8]
	castleObj.current_frame = 0;
2000035e:	2398      	movs	r3, #152	; 0x98
20000360:	009b      	lsls	r3, r3, #2
20000362:	18fb      	adds	r3, r7, r3
20000364:	2200      	movs	r2, #0
20000366:	615a      	str	r2, [r3, #20]
	
	GameObject indoors;
	init_indoors( &indoors );
20000368:	2389      	movs	r3, #137	; 0x89
2000036a:	009b      	lsls	r3, r3, #2
2000036c:	18fb      	adds	r3, r7, r3
2000036e:	0018      	movs	r0, r3
20000370:	f002 fc26 	bl	20002bc0 <init_indoors>
	indoors.xPos = 1;
20000374:	4bae      	ldr	r3, [pc, #696]	; (20000630 <main+0x434>)
20000376:	22ce      	movs	r2, #206	; 0xce
20000378:	0092      	lsls	r2, r2, #2
2000037a:	4694      	mov	ip, r2
2000037c:	44bc      	add	ip, r7
2000037e:	4463      	add	r3, ip
20000380:	2201      	movs	r2, #1
20000382:	605a      	str	r2, [r3, #4]
	indoors.yPos = 1;
20000384:	4baa      	ldr	r3, [pc, #680]	; (20000630 <main+0x434>)
20000386:	22ce      	movs	r2, #206	; 0xce
20000388:	0092      	lsls	r2, r2, #2
2000038a:	4694      	mov	ip, r2
2000038c:	44bc      	add	ip, r7
2000038e:	4463      	add	r3, ip
20000390:	2201      	movs	r2, #1
20000392:	609a      	str	r2, [r3, #8]
	
	GameObject indoors2;
	init_indoors2( &indoors2 );
20000394:	2380      	movs	r3, #128	; 0x80
20000396:	009b      	lsls	r3, r3, #2
20000398:	18fb      	adds	r3, r7, r3
2000039a:	0018      	movs	r0, r3
2000039c:	f002 fc84 	bl	20002ca8 <init_indoors2>
	indoors2.xPos = 1;
200003a0:	4ba4      	ldr	r3, [pc, #656]	; (20000634 <main+0x438>)
200003a2:	22ce      	movs	r2, #206	; 0xce
200003a4:	0092      	lsls	r2, r2, #2
200003a6:	4694      	mov	ip, r2
200003a8:	44bc      	add	ip, r7
200003aa:	4463      	add	r3, ip
200003ac:	2201      	movs	r2, #1
200003ae:	605a      	str	r2, [r3, #4]
	indoors2.yPos = 1;
200003b0:	4ba0      	ldr	r3, [pc, #640]	; (20000634 <main+0x438>)
200003b2:	22ce      	movs	r2, #206	; 0xce
200003b4:	0092      	lsls	r2, r2, #2
200003b6:	4694      	mov	ip, r2
200003b8:	44bc      	add	ip, r7
200003ba:	4463      	add	r3, ip
200003bc:	2201      	movs	r2, #1
200003be:	609a      	str	r2, [r3, #8]
	
	GameObject bird;
	init_bird( &bird );
200003c0:	23ee      	movs	r3, #238	; 0xee
200003c2:	005b      	lsls	r3, r3, #1
200003c4:	18fb      	adds	r3, r7, r3
200003c6:	0018      	movs	r0, r3
200003c8:	f000 ff9e 	bl	20001308 <init_bird>
	bird.xPos = 180;
200003cc:	4b9a      	ldr	r3, [pc, #616]	; (20000638 <main+0x43c>)
200003ce:	22ce      	movs	r2, #206	; 0xce
200003d0:	0092      	lsls	r2, r2, #2
200003d2:	4694      	mov	ip, r2
200003d4:	44bc      	add	ip, r7
200003d6:	4463      	add	r3, ip
200003d8:	22b4      	movs	r2, #180	; 0xb4
200003da:	605a      	str	r2, [r3, #4]
	bird.yPos = 40;
200003dc:	4b96      	ldr	r3, [pc, #600]	; (20000638 <main+0x43c>)
200003de:	22ce      	movs	r2, #206	; 0xce
200003e0:	0092      	lsls	r2, r2, #2
200003e2:	4694      	mov	ip, r2
200003e4:	44bc      	add	ip, r7
200003e6:	4463      	add	r3, ip
200003e8:	2228      	movs	r2, #40	; 0x28
200003ea:	609a      	str	r2, [r3, #8]
	bird.update = gameObjectUpdate;
200003ec:	4b92      	ldr	r3, [pc, #584]	; (20000638 <main+0x43c>)
200003ee:	22ce      	movs	r2, #206	; 0xce
200003f0:	0092      	lsls	r2, r2, #2
200003f2:	4694      	mov	ip, r2
200003f4:	44bc      	add	ip, r7
200003f6:	4463      	add	r3, ip
200003f8:	4a90      	ldr	r2, [pc, #576]	; (2000063c <main+0x440>)
200003fa:	60da      	str	r2, [r3, #12]
	
	GameObject player;
	init_witch( &player );
200003fc:	23dc      	movs	r3, #220	; 0xdc
200003fe:	005b      	lsls	r3, r3, #1
20000400:	18fb      	adds	r3, r7, r3
20000402:	0018      	movs	r0, r3
20000404:	f001 f8cc 	bl	200015a0 <init_witch>
	player.xPos = 3;
20000408:	4b8d      	ldr	r3, [pc, #564]	; (20000640 <main+0x444>)
2000040a:	22ce      	movs	r2, #206	; 0xce
2000040c:	0092      	lsls	r2, r2, #2
2000040e:	4694      	mov	ip, r2
20000410:	44bc      	add	ip, r7
20000412:	4463      	add	r3, ip
20000414:	2203      	movs	r2, #3
20000416:	605a      	str	r2, [r3, #4]
	player.yPos = 64-18-7; //player position
20000418:	4b89      	ldr	r3, [pc, #548]	; (20000640 <main+0x444>)
2000041a:	22ce      	movs	r2, #206	; 0xce
2000041c:	0092      	lsls	r2, r2, #2
2000041e:	4694      	mov	ip, r2
20000420:	44bc      	add	ip, r7
20000422:	4463      	add	r3, ip
20000424:	2227      	movs	r2, #39	; 0x27
20000426:	609a      	str	r2, [r3, #8]
	player.update = playerUpdate;
20000428:	4b85      	ldr	r3, [pc, #532]	; (20000640 <main+0x444>)
2000042a:	22ce      	movs	r2, #206	; 0xce
2000042c:	0092      	lsls	r2, r2, #2
2000042e:	4694      	mov	ip, r2
20000430:	44bc      	add	ip, r7
20000432:	4463      	add	r3, ip
20000434:	4a74      	ldr	r2, [pc, #464]	; (20000608 <main+0x40c>)
20000436:	60da      	str	r2, [r3, #12]
	
	GameObject fire2;
	init_fire( &fire2 );
20000438:	23ca      	movs	r3, #202	; 0xca
2000043a:	005b      	lsls	r3, r3, #1
2000043c:	18fb      	adds	r3, r7, r3
2000043e:	0018      	movs	r0, r3
20000440:	f000 fd4c 	bl	20000edc <init_fire>
	GameObject fire3;
	init_fire( &fire3 );
20000444:	23b8      	movs	r3, #184	; 0xb8
20000446:	005b      	lsls	r3, r3, #1
20000448:	18fb      	adds	r3, r7, r3
2000044a:	0018      	movs	r0, r3
2000044c:	f000 fd46 	bl	20000edc <init_fire>
	GameObject fire4;
	init_fire( &fire4 );
20000450:	23a6      	movs	r3, #166	; 0xa6
20000452:	005b      	lsls	r3, r3, #1
20000454:	18fb      	adds	r3, r7, r3
20000456:	0018      	movs	r0, r3
20000458:	f000 fd40 	bl	20000edc <init_fire>
	GameObject fire1;
	init_fire( &fire1 );
2000045c:	2394      	movs	r3, #148	; 0x94
2000045e:	005b      	lsls	r3, r3, #1
20000460:	18fb      	adds	r3, r7, r3
20000462:	0018      	movs	r0, r3
20000464:	f000 fd3a 	bl	20000edc <init_fire>
	GameObject fire1_indoors;
	init_fire( &fire1_indoors );
20000468:	1d7b      	adds	r3, r7, #5
2000046a:	33ff      	adds	r3, #255	; 0xff
2000046c:	0018      	movs	r0, r3
2000046e:	f000 fd35 	bl	20000edc <init_fire>
	fire1_indoors.xPos = 105;		//FIRE1_INDO
20000472:	4b74      	ldr	r3, [pc, #464]	; (20000644 <main+0x448>)
20000474:	22ce      	movs	r2, #206	; 0xce
20000476:	0092      	lsls	r2, r2, #2
20000478:	4694      	mov	ip, r2
2000047a:	44bc      	add	ip, r7
2000047c:	4463      	add	r3, ip
2000047e:	2269      	movs	r2, #105	; 0x69
20000480:	605a      	str	r2, [r3, #4]
	fire1_indoors.yPos = 64-11-7;
20000482:	4b70      	ldr	r3, [pc, #448]	; (20000644 <main+0x448>)
20000484:	22ce      	movs	r2, #206	; 0xce
20000486:	0092      	lsls	r2, r2, #2
20000488:	4694      	mov	ip, r2
2000048a:	44bc      	add	ip, r7
2000048c:	4463      	add	r3, ip
2000048e:	222e      	movs	r2, #46	; 0x2e
20000490:	609a      	str	r2, [r3, #8]
	fire1_indoors.update = gameObjectUpdate;
20000492:	4b6c      	ldr	r3, [pc, #432]	; (20000644 <main+0x448>)
20000494:	22ce      	movs	r2, #206	; 0xce
20000496:	0092      	lsls	r2, r2, #2
20000498:	4694      	mov	ip, r2
2000049a:	44bc      	add	ip, r7
2000049c:	4463      	add	r3, ip
2000049e:	4a67      	ldr	r2, [pc, #412]	; (2000063c <main+0x440>)
200004a0:	60da      	str	r2, [r3, #12]
	
	fire2.xPos = 98;
200004a2:	4b69      	ldr	r3, [pc, #420]	; (20000648 <main+0x44c>)
200004a4:	22ce      	movs	r2, #206	; 0xce
200004a6:	0092      	lsls	r2, r2, #2
200004a8:	4694      	mov	ip, r2
200004aa:	44bc      	add	ip, r7
200004ac:	4463      	add	r3, ip
200004ae:	2262      	movs	r2, #98	; 0x62
200004b0:	605a      	str	r2, [r3, #4]
	fire2.yPos = 26-12;
200004b2:	4b65      	ldr	r3, [pc, #404]	; (20000648 <main+0x44c>)
200004b4:	22ce      	movs	r2, #206	; 0xce
200004b6:	0092      	lsls	r2, r2, #2
200004b8:	4694      	mov	ip, r2
200004ba:	44bc      	add	ip, r7
200004bc:	4463      	add	r3, ip
200004be:	220e      	movs	r2, #14
200004c0:	609a      	str	r2, [r3, #8]
	fire3.xPos = 115;
200004c2:	4b62      	ldr	r3, [pc, #392]	; (2000064c <main+0x450>)
200004c4:	22ce      	movs	r2, #206	; 0xce
200004c6:	0092      	lsls	r2, r2, #2
200004c8:	4694      	mov	ip, r2
200004ca:	44bc      	add	ip, r7
200004cc:	4463      	add	r3, ip
200004ce:	2273      	movs	r2, #115	; 0x73
200004d0:	605a      	str	r2, [r3, #4]
	fire3.yPos = 34-12;
200004d2:	4b5e      	ldr	r3, [pc, #376]	; (2000064c <main+0x450>)
200004d4:	22ce      	movs	r2, #206	; 0xce
200004d6:	0092      	lsls	r2, r2, #2
200004d8:	4694      	mov	ip, r2
200004da:	44bc      	add	ip, r7
200004dc:	4463      	add	r3, ip
200004de:	2216      	movs	r2, #22
200004e0:	609a      	str	r2, [r3, #8]
	
	fire1.xPos = 85;
200004e2:	4b5b      	ldr	r3, [pc, #364]	; (20000650 <main+0x454>)
200004e4:	22ce      	movs	r2, #206	; 0xce
200004e6:	0092      	lsls	r2, r2, #2
200004e8:	4694      	mov	ip, r2
200004ea:	44bc      	add	ip, r7
200004ec:	4463      	add	r3, ip
200004ee:	2255      	movs	r2, #85	; 0x55
200004f0:	605a      	str	r2, [r3, #4]
	fire1.yPos = 23-12;
200004f2:	4b57      	ldr	r3, [pc, #348]	; (20000650 <main+0x454>)
200004f4:	22ce      	movs	r2, #206	; 0xce
200004f6:	0092      	lsls	r2, r2, #2
200004f8:	4694      	mov	ip, r2
200004fa:	44bc      	add	ip, r7
200004fc:	4463      	add	r3, ip
200004fe:	220b      	movs	r2, #11
20000500:	609a      	str	r2, [r3, #8]
	fire4.xPos = 71;
20000502:	4b54      	ldr	r3, [pc, #336]	; (20000654 <main+0x458>)
20000504:	22ce      	movs	r2, #206	; 0xce
20000506:	0092      	lsls	r2, r2, #2
20000508:	4694      	mov	ip, r2
2000050a:	44bc      	add	ip, r7
2000050c:	4463      	add	r3, ip
2000050e:	2247      	movs	r2, #71	; 0x47
20000510:	605a      	str	r2, [r3, #4]
	fire4.yPos = 27-11;
20000512:	4b50      	ldr	r3, [pc, #320]	; (20000654 <main+0x458>)
20000514:	22ce      	movs	r2, #206	; 0xce
20000516:	0092      	lsls	r2, r2, #2
20000518:	4694      	mov	ip, r2
2000051a:	44bc      	add	ip, r7
2000051c:	4463      	add	r3, ip
2000051e:	2210      	movs	r2, #16
20000520:	609a      	str	r2, [r3, #8]
	//draw_game_object(&castleObj);
	
	fire2.animation_speed = 2;
20000522:	4b49      	ldr	r3, [pc, #292]	; (20000648 <main+0x44c>)
20000524:	22ce      	movs	r2, #206	; 0xce
20000526:	0092      	lsls	r2, r2, #2
20000528:	4694      	mov	ip, r2
2000052a:	44bc      	add	ip, r7
2000052c:	4463      	add	r3, ip
2000052e:	2202      	movs	r2, #2
20000530:	61da      	str	r2, [r3, #28]
	fire3.animation_speed = 2;
20000532:	4b46      	ldr	r3, [pc, #280]	; (2000064c <main+0x450>)
20000534:	22ce      	movs	r2, #206	; 0xce
20000536:	0092      	lsls	r2, r2, #2
20000538:	4694      	mov	ip, r2
2000053a:	44bc      	add	ip, r7
2000053c:	4463      	add	r3, ip
2000053e:	2202      	movs	r2, #2
20000540:	61da      	str	r2, [r3, #28]
	fire1.animation_speed = 2;
20000542:	4b43      	ldr	r3, [pc, #268]	; (20000650 <main+0x454>)
20000544:	22ce      	movs	r2, #206	; 0xce
20000546:	0092      	lsls	r2, r2, #2
20000548:	4694      	mov	ip, r2
2000054a:	44bc      	add	ip, r7
2000054c:	4463      	add	r3, ip
2000054e:	2202      	movs	r2, #2
20000550:	61da      	str	r2, [r3, #28]
	fire4.animation_speed = 2;
20000552:	4b40      	ldr	r3, [pc, #256]	; (20000654 <main+0x458>)
20000554:	22ce      	movs	r2, #206	; 0xce
20000556:	0092      	lsls	r2, r2, #2
20000558:	4694      	mov	ip, r2
2000055a:	44bc      	add	ip, r7
2000055c:	4463      	add	r3, ip
2000055e:	2202      	movs	r2, #2
20000560:	61da      	str	r2, [r3, #28]
	
	fire2.update = gameObjectUpdate;
20000562:	4b39      	ldr	r3, [pc, #228]	; (20000648 <main+0x44c>)
20000564:	22ce      	movs	r2, #206	; 0xce
20000566:	0092      	lsls	r2, r2, #2
20000568:	4694      	mov	ip, r2
2000056a:	44bc      	add	ip, r7
2000056c:	4463      	add	r3, ip
2000056e:	4a33      	ldr	r2, [pc, #204]	; (2000063c <main+0x440>)
20000570:	60da      	str	r2, [r3, #12]
	fire3.update = gameObjectUpdate;
20000572:	4b36      	ldr	r3, [pc, #216]	; (2000064c <main+0x450>)
20000574:	22ce      	movs	r2, #206	; 0xce
20000576:	0092      	lsls	r2, r2, #2
20000578:	4694      	mov	ip, r2
2000057a:	44bc      	add	ip, r7
2000057c:	4463      	add	r3, ip
2000057e:	4a2f      	ldr	r2, [pc, #188]	; (2000063c <main+0x440>)
20000580:	60da      	str	r2, [r3, #12]
	fire1.update = gameObjectUpdate;
20000582:	4b33      	ldr	r3, [pc, #204]	; (20000650 <main+0x454>)
20000584:	22ce      	movs	r2, #206	; 0xce
20000586:	0092      	lsls	r2, r2, #2
20000588:	4694      	mov	ip, r2
2000058a:	44bc      	add	ip, r7
2000058c:	4463      	add	r3, ip
2000058e:	4a2b      	ldr	r2, [pc, #172]	; (2000063c <main+0x440>)
20000590:	60da      	str	r2, [r3, #12]
	fire4.update = gameObjectUpdate;
20000592:	4b30      	ldr	r3, [pc, #192]	; (20000654 <main+0x458>)
20000594:	22ce      	movs	r2, #206	; 0xce
20000596:	0092      	lsls	r2, r2, #2
20000598:	4694      	mov	ip, r2
2000059a:	44bc      	add	ip, r7
2000059c:	4463      	add	r3, ip
2000059e:	4a27      	ldr	r2, [pc, #156]	; (2000063c <main+0x440>)
200005a0:	60da      	str	r2, [r3, #12]
	SlowText text8;
	SlowText text9;
	SlowText text10;
	SlowText text11;
	SlowText text12;
	init_slow_text(&text_kra, "*KRA!* *KRA!*", "   ", 1);
200005a2:	4a2d      	ldr	r2, [pc, #180]	; (20000658 <main+0x45c>)
200005a4:	492d      	ldr	r1, [pc, #180]	; (2000065c <main+0x460>)
200005a6:	23f0      	movs	r3, #240	; 0xf0
200005a8:	18f8      	adds	r0, r7, r3
200005aa:	2301      	movs	r3, #1
200005ac:	f002 fab1 	bl	20002b12 <init_slow_text>
	init_slow_text(&text1, "For centuries the", "DILs-witches have", 1);
200005b0:	4a2b      	ldr	r2, [pc, #172]	; (20000660 <main+0x464>)
200005b2:	492c      	ldr	r1, [pc, #176]	; (20000664 <main+0x468>)
200005b4:	23dc      	movs	r3, #220	; 0xdc
200005b6:	18f8      	adds	r0, r7, r3
200005b8:	2301      	movs	r3, #1
200005ba:	f002 faaa 	bl	20002b12 <init_slow_text>
	init_slow_text(&text2, "coiled in fear,", "    ", 1);
200005be:	4a2a      	ldr	r2, [pc, #168]	; (20000668 <main+0x46c>)
200005c0:	492a      	ldr	r1, [pc, #168]	; (2000066c <main+0x470>)
200005c2:	23c8      	movs	r3, #200	; 0xc8
200005c4:	18f8      	adds	r0, r7, r3
200005c6:	2301      	movs	r3, #1
200005c8:	f002 faa3 	bl	20002b12 <init_slow_text>
	init_slow_text(&text3, "whenever they hear", "that a DIPs-witch", 1);
200005cc:	4a28      	ldr	r2, [pc, #160]	; (20000670 <main+0x474>)
200005ce:	4929      	ldr	r1, [pc, #164]	; (20000674 <main+0x478>)
200005d0:	23b4      	movs	r3, #180	; 0xb4
200005d2:	18f8      	adds	r0, r7, r3
200005d4:	2301      	movs	r3, #1
200005d6:	f002 fa9c 	bl	20002b12 <init_slow_text>
	init_slow_text(&text4, "is near.", "   ", 1);
200005da:	4a1f      	ldr	r2, [pc, #124]	; (20000658 <main+0x45c>)
200005dc:	4926      	ldr	r1, [pc, #152]	; (20000678 <main+0x47c>)
200005de:	23a0      	movs	r3, #160	; 0xa0
200005e0:	18f8      	adds	r0, r7, r3
200005e2:	2301      	movs	r3, #1
200005e4:	f002 fa95 	bl	20002b12 <init_slow_text>
	init_slow_text(&text5, "So it is quite", "surprising, finding", 1);
200005e8:	4a24      	ldr	r2, [pc, #144]	; (2000067c <main+0x480>)
200005ea:	4925      	ldr	r1, [pc, #148]	; (20000680 <main+0x484>)
200005ec:	238c      	movs	r3, #140	; 0x8c
200005ee:	18f8      	adds	r0, r7, r3
200005f0:	2301      	movs	r3, #1
200005f2:	f002 fa8e 	bl	20002b12 <init_slow_text>
200005f6:	e045      	b.n	20000684 <main+0x488>
200005f8:	fffffcc4 			; <UNDEFINED> instruction: 0xfffffcc4
200005fc:	20002f08 	andcs	r2, r0, r8, lsl #30
20000600:	20002fc8 	andcs	r2, r0, r8, asr #31
20000604:	20002fb4 			; <UNDEFINED> instruction: 0x20002fb4
20000608:	20001001 	andcs	r1, r0, r1
2000060c:	20002fd8 	ldrdcs	r2, [r0], -r8
20000610:	20002fa4 	andcs	r2, r0, r4, lsr #31
20000614:	20002fb8 			; <UNDEFINED> instruction: 0x20002fb8
20000618:	20002fc4 	andcs	r2, r0, r4, asr #31
2000061c:	20002f40 	andcs	r2, r0, r0, asr #30
20000620:	20002f88 	andcs	r2, r0, r8, lsl #31
20000624:	20002f30 	andcs	r2, r0, r0, lsr pc
20000628:	20002fbc 			; <UNDEFINED> instruction: 0x20002fbc
2000062c:	20002f6c 	andcs	r2, r0, ip, ror #30
20000630:	fffffeec 			; <UNDEFINED> instruction: 0xfffffeec
20000634:	fffffec8 			; <UNDEFINED> instruction: 0xfffffec8
20000638:	fffffea4 			; <UNDEFINED> instruction: 0xfffffea4
2000063c:	20000d11 	andcs	r0, r0, r1, lsl sp
20000640:	fffffe80 			; <UNDEFINED> instruction: 0xfffffe80
20000644:	fffffdcc 			; <UNDEFINED> instruction: 0xfffffdcc
20000648:	fffffe5c 			; <UNDEFINED> instruction: 0xfffffe5c
2000064c:	fffffe38 			; <UNDEFINED> instruction: 0xfffffe38
20000650:	fffffdf0 			; <UNDEFINED> instruction: 0xfffffdf0
20000654:	fffffe14 			; <UNDEFINED> instruction: 0xfffffe14
20000658:	200089f0 	strdcs	r8, [r0], -r0
2000065c:	200089f4 	strdcs	r8, [r0], -r4
20000660:	20008a04 	andcs	r8, r0, r4, lsl #20
20000664:	20008a18 	andcs	r8, r0, r8, lsl sl
20000668:	20008a2c 	andcs	r8, r0, ip, lsr #20
2000066c:	20008a34 	andcs	r8, r0, r4, lsr sl
20000670:	20008a44 	andcs	r8, r0, r4, asr #20
20000674:	20008a58 	andcs	r8, r0, r8, asr sl
20000678:	20008a6c 	andcs	r8, r0, ip, ror #20
2000067c:	20008a78 	andcs	r8, r0, r8, ror sl
20000680:	20008a8c 	andcs	r8, r0, ip, lsl #21
	init_slow_text(&text6, "you here,", "    ", 1);
20000684:	4ae2      	ldr	r2, [pc, #904]	; (20000a10 <main+0x814>)
20000686:	49e3      	ldr	r1, [pc, #908]	; (20000a14 <main+0x818>)
20000688:	2378      	movs	r3, #120	; 0x78
2000068a:	18f8      	adds	r0, r7, r3
2000068c:	2301      	movs	r3, #1
2000068e:	f002 fa40 	bl	20002b12 <init_slow_text>
	init_slow_text(&text7, "queen Daffo of DILs,", "heir to king Lear.", 1);
20000692:	4ae1      	ldr	r2, [pc, #900]	; (20000a18 <main+0x81c>)
20000694:	49e1      	ldr	r1, [pc, #900]	; (20000a1c <main+0x820>)
20000696:	2364      	movs	r3, #100	; 0x64
20000698:	18f8      	adds	r0, r7, r3
2000069a:	2301      	movs	r3, #1
2000069c:	f002 fa39 	bl	20002b12 <init_slow_text>
	init_slow_text(&text8, "But maybe you're", "tempted, to loot", 1);
200006a0:	4adf      	ldr	r2, [pc, #892]	; (20000a20 <main+0x824>)
200006a2:	49e0      	ldr	r1, [pc, #896]	; (20000a24 <main+0x828>)
200006a4:	2350      	movs	r3, #80	; 0x50
200006a6:	18f8      	adds	r0, r7, r3
200006a8:	2301      	movs	r3, #1
200006aa:	f002 fa32 	bl	20002b12 <init_slow_text>
	init_slow_text(&text9, "from the riches,", "    ", 1);
200006ae:	4ad8      	ldr	r2, [pc, #864]	; (20000a10 <main+0x814>)
200006b0:	49dd      	ldr	r1, [pc, #884]	; (20000a28 <main+0x82c>)
200006b2:	233c      	movs	r3, #60	; 0x3c
200006b4:	18f8      	adds	r0, r7, r3
200006b6:	2301      	movs	r3, #1
200006b8:	f002 fa2b 	bl	20002b12 <init_slow_text>
	init_slow_text(&text12, "wicked DIPs-witches.", "    ", 1);
200006bc:	4ad4      	ldr	r2, [pc, #848]	; (20000a10 <main+0x814>)
200006be:	49db      	ldr	r1, [pc, #876]	; (20000a2c <main+0x830>)
200006c0:	0038      	movs	r0, r7
200006c2:	2301      	movs	r3, #1
200006c4:	f002 fa25 	bl	20002b12 <init_slow_text>
	init_slow_text(&text10, "so grippily trea-", "sured by", 1);
200006c8:	4ad9      	ldr	r2, [pc, #868]	; (20000a30 <main+0x834>)
200006ca:	49da      	ldr	r1, [pc, #872]	; (20000a34 <main+0x838>)
200006cc:	2328      	movs	r3, #40	; 0x28
200006ce:	18f8      	adds	r0, r7, r3
200006d0:	2301      	movs	r3, #1
200006d2:	f002 fa1e 	bl	20002b12 <init_slow_text>
	init_slow_text(&text11, "Enter, brave witch,", "- reset the switch!", 1);
200006d6:	4ad8      	ldr	r2, [pc, #864]	; (20000a38 <main+0x83c>)
200006d8:	49d8      	ldr	r1, [pc, #864]	; (20000a3c <main+0x840>)
200006da:	2314      	movs	r3, #20
200006dc:	18f8      	adds	r0, r7, r3
200006de:	2301      	movs	r3, #1
200006e0:	f002 fa17 	bl	20002b12 <init_slow_text>
	//ascii_write_part("Yeeaaah!!!", "This is working! :)", 5, 10);
	set_up_ascii();
200006e4:	f002 f8f2 	bl	200028cc <set_up_ascii>
	set_up_DIL();
200006e8:	f001 ff20 	bl	2000252c <set_up_DIL>
	clear_ascii();
200006ec:	f002 f8f7 	bl	200028de <clear_ascii>
	
	if(read_DIL() == 0) {
200006f0:	f001 ff28 	bl	20002544 <read_DIL>
200006f4:	1e03      	subs	r3, r0, #0
200006f6:	d102      	bne.n	200006fe <main+0x502>
		current_screen = SWITCH_LOCK; 
200006f8:	4bd1      	ldr	r3, [pc, #836]	; (20000a40 <main+0x844>)
200006fa:	2200      	movs	r2, #0
200006fc:	601a      	str	r2, [r3, #0]
	}
	
	//Game loop
	while(1) {
			
		switch(current_screen) {
200006fe:	4bd0      	ldr	r3, [pc, #832]	; (20000a40 <main+0x844>)
20000700:	681b      	ldr	r3, [r3, #0]
20000702:	2b01      	cmp	r3, #1
20000704:	d019      	beq.n	2000073a <main+0x53e>
20000706:	2b02      	cmp	r3, #2
20000708:	d100      	bne.n	2000070c <main+0x510>
2000070a:	e29a      	b.n	20000c42 <main+0xa46>
2000070c:	2b00      	cmp	r3, #0
2000070e:	d1f6      	bne.n	200006fe <main+0x502>
			
			case SWITCH_LOCK: //before

				while(read_DIL() == 0){
20000710:	e008      	b.n	20000724 <main+0x528>
					draw_game_object(&pressObj);
20000712:	23a7      	movs	r3, #167	; 0xa7
20000714:	009b      	lsls	r3, r3, #2
20000716:	18fb      	adds	r3, r7, r3
20000718:	0018      	movs	r0, r3
2000071a:	f001 fe69 	bl	200023f0 <draw_game_object>
					show_frame(1);
2000071e:	2001      	movs	r0, #1
20000720:	f001 fea7 	bl	20002472 <show_frame>
				while(read_DIL() == 0){
20000724:	f001 ff0e 	bl	20002544 <read_DIL>
20000728:	1e03      	subs	r3, r0, #0
2000072a:	d0f2      	beq.n	20000712 <main+0x516>
				}
				
				counter = 0;
2000072c:	4bc5      	ldr	r3, [pc, #788]	; (20000a44 <main+0x848>)
2000072e:	2200      	movs	r2, #0
20000730:	601a      	str	r2, [r3, #0]
				current_screen = START_SCREEN;
20000732:	4bc3      	ldr	r3, [pc, #780]	; (20000a40 <main+0x844>)
20000734:	2201      	movs	r2, #1
20000736:	601a      	str	r2, [r3, #0]
				break;
20000738:	e2c1      	b.n	20000cbe <main+0xac2>
			
			
			case START_SCREEN: //outside
				
				counter++;
2000073a:	4bc2      	ldr	r3, [pc, #776]	; (20000a44 <main+0x848>)
2000073c:	681b      	ldr	r3, [r3, #0]
2000073e:	1c5a      	adds	r2, r3, #1
20000740:	4bc0      	ldr	r3, [pc, #768]	; (20000a44 <main+0x848>)
20000742:	601a      	str	r2, [r3, #0]
				
				if(titleObj.yPos < 1) {
20000744:	23b6      	movs	r3, #182	; 0xb6
20000746:	009b      	lsls	r3, r3, #2
20000748:	18fb      	adds	r3, r7, r3
2000074a:	689b      	ldr	r3, [r3, #8]
2000074c:	2b00      	cmp	r3, #0
2000074e:	dc08      	bgt.n	20000762 <main+0x566>
					titleObj.yPos++;
20000750:	23b6      	movs	r3, #182	; 0xb6
20000752:	009b      	lsls	r3, r3, #2
20000754:	18fb      	adds	r3, r7, r3
20000756:	689b      	ldr	r3, [r3, #8]
20000758:	1c5a      	adds	r2, r3, #1
2000075a:	23b6      	movs	r3, #182	; 0xb6
2000075c:	009b      	lsls	r3, r3, #2
2000075e:	18fb      	adds	r3, r7, r3
20000760:	609a      	str	r2, [r3, #8]
				}
				
				draw_game_object(&castleObj);
20000762:	2398      	movs	r3, #152	; 0x98
20000764:	009b      	lsls	r3, r3, #2
20000766:	18fb      	adds	r3, r7, r3
20000768:	0018      	movs	r0, r3
2000076a:	f001 fe41 	bl	200023f0 <draw_game_object>
				draw_game_object(&fire2);
2000076e:	23ca      	movs	r3, #202	; 0xca
20000770:	005b      	lsls	r3, r3, #1
20000772:	18fb      	adds	r3, r7, r3
20000774:	0018      	movs	r0, r3
20000776:	f001 fe3b 	bl	200023f0 <draw_game_object>
				draw_game_object(&fire3);
2000077a:	23b8      	movs	r3, #184	; 0xb8
2000077c:	005b      	lsls	r3, r3, #1
2000077e:	18fb      	adds	r3, r7, r3
20000780:	0018      	movs	r0, r3
20000782:	f001 fe35 	bl	200023f0 <draw_game_object>
				draw_game_object(&fire1);
20000786:	2394      	movs	r3, #148	; 0x94
20000788:	005b      	lsls	r3, r3, #1
2000078a:	18fb      	adds	r3, r7, r3
2000078c:	0018      	movs	r0, r3
2000078e:	f001 fe2f 	bl	200023f0 <draw_game_object>
				draw_game_object(&fire4);
20000792:	23a6      	movs	r3, #166	; 0xa6
20000794:	005b      	lsls	r3, r3, #1
20000796:	18fb      	adds	r3, r7, r3
20000798:	0018      	movs	r0, r3
2000079a:	f001 fe29 	bl	200023f0 <draw_game_object>
				draw_game_object(&titleObj);
2000079e:	23b6      	movs	r3, #182	; 0xb6
200007a0:	009b      	lsls	r3, r3, #2
200007a2:	18fb      	adds	r3, r7, r3
200007a4:	0018      	movs	r0, r3
200007a6:	f001 fe23 	bl	200023f0 <draw_game_object>
				draw_game_object(&bird);
200007aa:	23ee      	movs	r3, #238	; 0xee
200007ac:	005b      	lsls	r3, r3, #1
200007ae:	18fb      	adds	r3, r7, r3
200007b0:	0018      	movs	r0, r3
200007b2:	f001 fe1d 	bl	200023f0 <draw_game_object>
				show_frame(1);
200007b6:	2001      	movs	r0, #1
200007b8:	f001 fe5b 	bl	20002472 <show_frame>
				
				static int long_text = 40;
				static int short_text = 20;
				static int delay_until_text = 130;
				
				if (counter < delay_until_text - 55 && counter > delay_until_text - 90)
200007bc:	4ba2      	ldr	r3, [pc, #648]	; (20000a48 <main+0x84c>)
200007be:	681b      	ldr	r3, [r3, #0]
200007c0:	3b37      	subs	r3, #55	; 0x37
200007c2:	001a      	movs	r2, r3
200007c4:	4b9f      	ldr	r3, [pc, #636]	; (20000a44 <main+0x848>)
200007c6:	681b      	ldr	r3, [r3, #0]
200007c8:	429a      	cmp	r2, r3
200007ca:	dd13      	ble.n	200007f4 <main+0x5f8>
200007cc:	4b9e      	ldr	r3, [pc, #632]	; (20000a48 <main+0x84c>)
200007ce:	681b      	ldr	r3, [r3, #0]
200007d0:	3b5a      	subs	r3, #90	; 0x5a
200007d2:	001a      	movs	r2, r3
200007d4:	4b9b      	ldr	r3, [pc, #620]	; (20000a44 <main+0x848>)
200007d6:	681b      	ldr	r3, [r3, #0]
200007d8:	429a      	cmp	r2, r3
200007da:	da0b      	bge.n	200007f4 <main+0x5f8>
					text_kra.display(&text_kra, 20);
200007dc:	4b9b      	ldr	r3, [pc, #620]	; (20000a4c <main+0x850>)
200007de:	22ce      	movs	r2, #206	; 0xce
200007e0:	0092      	lsls	r2, r2, #2
200007e2:	4694      	mov	ip, r2
200007e4:	44bc      	add	ip, r7
200007e6:	4463      	add	r3, ip
200007e8:	691b      	ldr	r3, [r3, #16]
200007ea:	22f0      	movs	r2, #240	; 0xf0
200007ec:	18ba      	adds	r2, r7, r2
200007ee:	2114      	movs	r1, #20
200007f0:	0010      	movs	r0, r2
200007f2:	4798      	blx	r3
				if (counter == delay_until_text - 25)
200007f4:	4b94      	ldr	r3, [pc, #592]	; (20000a48 <main+0x84c>)
200007f6:	681b      	ldr	r3, [r3, #0]
200007f8:	3b19      	subs	r3, #25
200007fa:	001a      	movs	r2, r3
200007fc:	4b91      	ldr	r3, [pc, #580]	; (20000a44 <main+0x848>)
200007fe:	681b      	ldr	r3, [r3, #0]
20000800:	429a      	cmp	r2, r3
20000802:	d101      	bne.n	20000808 <main+0x60c>
					clear_ascii();
20000804:	f002 f86b 	bl	200028de <clear_ascii>
				
				if (counter < delay_until_text);
20000808:	4b8e      	ldr	r3, [pc, #568]	; (20000a44 <main+0x848>)
2000080a:	681a      	ldr	r2, [r3, #0]
2000080c:	4b8e      	ldr	r3, [pc, #568]	; (20000a48 <main+0x84c>)
2000080e:	681b      	ldr	r3, [r3, #0]
20000810:	429a      	cmp	r2, r3
20000812:	da00      	bge.n	20000816 <main+0x61a>
20000814:	e1a3      	b.n	20000b5e <main+0x962>
				else if (counter < delay_until_text + 1*long_text)
20000816:	4b8c      	ldr	r3, [pc, #560]	; (20000a48 <main+0x84c>)
20000818:	681a      	ldr	r2, [r3, #0]
2000081a:	4b8d      	ldr	r3, [pc, #564]	; (20000a50 <main+0x854>)
2000081c:	681b      	ldr	r3, [r3, #0]
2000081e:	18d2      	adds	r2, r2, r3
20000820:	4b88      	ldr	r3, [pc, #544]	; (20000a44 <main+0x848>)
20000822:	681b      	ldr	r3, [r3, #0]
20000824:	429a      	cmp	r2, r3
20000826:	dd0c      	ble.n	20000842 <main+0x646>
					text1.display(&text1, 20);
20000828:	4b8a      	ldr	r3, [pc, #552]	; (20000a54 <main+0x858>)
2000082a:	22ce      	movs	r2, #206	; 0xce
2000082c:	0092      	lsls	r2, r2, #2
2000082e:	4694      	mov	ip, r2
20000830:	44bc      	add	ip, r7
20000832:	4463      	add	r3, ip
20000834:	691b      	ldr	r3, [r3, #16]
20000836:	22dc      	movs	r2, #220	; 0xdc
20000838:	18ba      	adds	r2, r7, r2
2000083a:	2114      	movs	r1, #20
2000083c:	0010      	movs	r0, r2
2000083e:	4798      	blx	r3
20000840:	e18d      	b.n	20000b5e <main+0x962>
				else if(counter < delay_until_text + 1*long_text + 1*short_text)
20000842:	4b81      	ldr	r3, [pc, #516]	; (20000a48 <main+0x84c>)
20000844:	681a      	ldr	r2, [r3, #0]
20000846:	4b82      	ldr	r3, [pc, #520]	; (20000a50 <main+0x854>)
20000848:	681b      	ldr	r3, [r3, #0]
2000084a:	18d2      	adds	r2, r2, r3
2000084c:	4b82      	ldr	r3, [pc, #520]	; (20000a58 <main+0x85c>)
2000084e:	681b      	ldr	r3, [r3, #0]
20000850:	18d2      	adds	r2, r2, r3
20000852:	4b7c      	ldr	r3, [pc, #496]	; (20000a44 <main+0x848>)
20000854:	681b      	ldr	r3, [r3, #0]
20000856:	429a      	cmp	r2, r3
20000858:	dd0c      	ble.n	20000874 <main+0x678>
					text2.display(&text2, 20);
2000085a:	4b80      	ldr	r3, [pc, #512]	; (20000a5c <main+0x860>)
2000085c:	22ce      	movs	r2, #206	; 0xce
2000085e:	0092      	lsls	r2, r2, #2
20000860:	4694      	mov	ip, r2
20000862:	44bc      	add	ip, r7
20000864:	4463      	add	r3, ip
20000866:	691b      	ldr	r3, [r3, #16]
20000868:	22c8      	movs	r2, #200	; 0xc8
2000086a:	18ba      	adds	r2, r7, r2
2000086c:	2114      	movs	r1, #20
2000086e:	0010      	movs	r0, r2
20000870:	4798      	blx	r3
20000872:	e174      	b.n	20000b5e <main+0x962>
				else if(counter < delay_until_text + 2*long_text + 1*short_text)
20000874:	4b76      	ldr	r3, [pc, #472]	; (20000a50 <main+0x854>)
20000876:	681b      	ldr	r3, [r3, #0]
20000878:	005a      	lsls	r2, r3, #1
2000087a:	4b73      	ldr	r3, [pc, #460]	; (20000a48 <main+0x84c>)
2000087c:	681b      	ldr	r3, [r3, #0]
2000087e:	18d2      	adds	r2, r2, r3
20000880:	4b75      	ldr	r3, [pc, #468]	; (20000a58 <main+0x85c>)
20000882:	681b      	ldr	r3, [r3, #0]
20000884:	18d2      	adds	r2, r2, r3
20000886:	4b6f      	ldr	r3, [pc, #444]	; (20000a44 <main+0x848>)
20000888:	681b      	ldr	r3, [r3, #0]
2000088a:	429a      	cmp	r2, r3
2000088c:	dd0c      	ble.n	200008a8 <main+0x6ac>
					text3.display(&text3, 20);
2000088e:	4b74      	ldr	r3, [pc, #464]	; (20000a60 <main+0x864>)
20000890:	22ce      	movs	r2, #206	; 0xce
20000892:	0092      	lsls	r2, r2, #2
20000894:	4694      	mov	ip, r2
20000896:	44bc      	add	ip, r7
20000898:	4463      	add	r3, ip
2000089a:	691b      	ldr	r3, [r3, #16]
2000089c:	22b4      	movs	r2, #180	; 0xb4
2000089e:	18ba      	adds	r2, r7, r2
200008a0:	2114      	movs	r1, #20
200008a2:	0010      	movs	r0, r2
200008a4:	4798      	blx	r3
200008a6:	e15a      	b.n	20000b5e <main+0x962>
				else if(counter < delay_until_text + 2*long_text + 2*short_text)
200008a8:	4b69      	ldr	r3, [pc, #420]	; (20000a50 <main+0x854>)
200008aa:	681b      	ldr	r3, [r3, #0]
200008ac:	005a      	lsls	r2, r3, #1
200008ae:	4b66      	ldr	r3, [pc, #408]	; (20000a48 <main+0x84c>)
200008b0:	681b      	ldr	r3, [r3, #0]
200008b2:	18d2      	adds	r2, r2, r3
200008b4:	4b68      	ldr	r3, [pc, #416]	; (20000a58 <main+0x85c>)
200008b6:	681b      	ldr	r3, [r3, #0]
200008b8:	005b      	lsls	r3, r3, #1
200008ba:	18d2      	adds	r2, r2, r3
200008bc:	4b61      	ldr	r3, [pc, #388]	; (20000a44 <main+0x848>)
200008be:	681b      	ldr	r3, [r3, #0]
200008c0:	429a      	cmp	r2, r3
200008c2:	dd0c      	ble.n	200008de <main+0x6e2>
					text4.display(&text4, 20);
200008c4:	4b67      	ldr	r3, [pc, #412]	; (20000a64 <main+0x868>)
200008c6:	22ce      	movs	r2, #206	; 0xce
200008c8:	0092      	lsls	r2, r2, #2
200008ca:	4694      	mov	ip, r2
200008cc:	44bc      	add	ip, r7
200008ce:	4463      	add	r3, ip
200008d0:	691b      	ldr	r3, [r3, #16]
200008d2:	22a0      	movs	r2, #160	; 0xa0
200008d4:	18ba      	adds	r2, r7, r2
200008d6:	2114      	movs	r1, #20
200008d8:	0010      	movs	r0, r2
200008da:	4798      	blx	r3
200008dc:	e13f      	b.n	20000b5e <main+0x962>
				else if(counter < delay_until_text + 3*long_text + 2*short_text)
200008de:	4b5c      	ldr	r3, [pc, #368]	; (20000a50 <main+0x854>)
200008e0:	681a      	ldr	r2, [r3, #0]
200008e2:	0013      	movs	r3, r2
200008e4:	005b      	lsls	r3, r3, #1
200008e6:	189a      	adds	r2, r3, r2
200008e8:	4b57      	ldr	r3, [pc, #348]	; (20000a48 <main+0x84c>)
200008ea:	681b      	ldr	r3, [r3, #0]
200008ec:	18d2      	adds	r2, r2, r3
200008ee:	4b5a      	ldr	r3, [pc, #360]	; (20000a58 <main+0x85c>)
200008f0:	681b      	ldr	r3, [r3, #0]
200008f2:	005b      	lsls	r3, r3, #1
200008f4:	18d2      	adds	r2, r2, r3
200008f6:	4b53      	ldr	r3, [pc, #332]	; (20000a44 <main+0x848>)
200008f8:	681b      	ldr	r3, [r3, #0]
200008fa:	429a      	cmp	r2, r3
200008fc:	dd0c      	ble.n	20000918 <main+0x71c>
					text5.display(&text5, 15);
200008fe:	4b5a      	ldr	r3, [pc, #360]	; (20000a68 <main+0x86c>)
20000900:	22ce      	movs	r2, #206	; 0xce
20000902:	0092      	lsls	r2, r2, #2
20000904:	4694      	mov	ip, r2
20000906:	44bc      	add	ip, r7
20000908:	4463      	add	r3, ip
2000090a:	691b      	ldr	r3, [r3, #16]
2000090c:	228c      	movs	r2, #140	; 0x8c
2000090e:	18ba      	adds	r2, r7, r2
20000910:	210f      	movs	r1, #15
20000912:	0010      	movs	r0, r2
20000914:	4798      	blx	r3
20000916:	e122      	b.n	20000b5e <main+0x962>
				else if(counter < delay_until_text + 3*long_text + 3*short_text)
20000918:	4b4d      	ldr	r3, [pc, #308]	; (20000a50 <main+0x854>)
2000091a:	681a      	ldr	r2, [r3, #0]
2000091c:	0013      	movs	r3, r2
2000091e:	005b      	lsls	r3, r3, #1
20000920:	189a      	adds	r2, r3, r2
20000922:	4b49      	ldr	r3, [pc, #292]	; (20000a48 <main+0x84c>)
20000924:	681b      	ldr	r3, [r3, #0]
20000926:	18d1      	adds	r1, r2, r3
20000928:	4b4b      	ldr	r3, [pc, #300]	; (20000a58 <main+0x85c>)
2000092a:	681a      	ldr	r2, [r3, #0]
2000092c:	0013      	movs	r3, r2
2000092e:	005b      	lsls	r3, r3, #1
20000930:	189b      	adds	r3, r3, r2
20000932:	18ca      	adds	r2, r1, r3
20000934:	4b43      	ldr	r3, [pc, #268]	; (20000a44 <main+0x848>)
20000936:	681b      	ldr	r3, [r3, #0]
20000938:	429a      	cmp	r2, r3
2000093a:	dd0c      	ble.n	20000956 <main+0x75a>
					text6.display(&text6, 20);
2000093c:	4b4b      	ldr	r3, [pc, #300]	; (20000a6c <main+0x870>)
2000093e:	22ce      	movs	r2, #206	; 0xce
20000940:	0092      	lsls	r2, r2, #2
20000942:	4694      	mov	ip, r2
20000944:	44bc      	add	ip, r7
20000946:	4463      	add	r3, ip
20000948:	691b      	ldr	r3, [r3, #16]
2000094a:	2278      	movs	r2, #120	; 0x78
2000094c:	18ba      	adds	r2, r7, r2
2000094e:	2114      	movs	r1, #20
20000950:	0010      	movs	r0, r2
20000952:	4798      	blx	r3
20000954:	e103      	b.n	20000b5e <main+0x962>
				else if(counter < delay_until_text + 4*long_text + 3*short_text + 3)
20000956:	4b3e      	ldr	r3, [pc, #248]	; (20000a50 <main+0x854>)
20000958:	681b      	ldr	r3, [r3, #0]
2000095a:	009a      	lsls	r2, r3, #2
2000095c:	4b3a      	ldr	r3, [pc, #232]	; (20000a48 <main+0x84c>)
2000095e:	681b      	ldr	r3, [r3, #0]
20000960:	18d1      	adds	r1, r2, r3
20000962:	4b3d      	ldr	r3, [pc, #244]	; (20000a58 <main+0x85c>)
20000964:	681a      	ldr	r2, [r3, #0]
20000966:	0013      	movs	r3, r2
20000968:	005b      	lsls	r3, r3, #1
2000096a:	189b      	adds	r3, r3, r2
2000096c:	18cb      	adds	r3, r1, r3
2000096e:	1cda      	adds	r2, r3, #3
20000970:	4b34      	ldr	r3, [pc, #208]	; (20000a44 <main+0x848>)
20000972:	681b      	ldr	r3, [r3, #0]
20000974:	429a      	cmp	r2, r3
20000976:	dd0c      	ble.n	20000992 <main+0x796>
					text7.display(&text7, 20);
20000978:	4b3d      	ldr	r3, [pc, #244]	; (20000a70 <main+0x874>)
2000097a:	22ce      	movs	r2, #206	; 0xce
2000097c:	0092      	lsls	r2, r2, #2
2000097e:	4694      	mov	ip, r2
20000980:	44bc      	add	ip, r7
20000982:	4463      	add	r3, ip
20000984:	691b      	ldr	r3, [r3, #16]
20000986:	2264      	movs	r2, #100	; 0x64
20000988:	18ba      	adds	r2, r7, r2
2000098a:	2114      	movs	r1, #20
2000098c:	0010      	movs	r0, r2
2000098e:	4798      	blx	r3
20000990:	e0e5      	b.n	20000b5e <main+0x962>
				else if(counter < delay_until_text + 5*long_text + 3*short_text + 2)
20000992:	4b2f      	ldr	r3, [pc, #188]	; (20000a50 <main+0x854>)
20000994:	681a      	ldr	r2, [r3, #0]
20000996:	0013      	movs	r3, r2
20000998:	009b      	lsls	r3, r3, #2
2000099a:	189a      	adds	r2, r3, r2
2000099c:	4b2a      	ldr	r3, [pc, #168]	; (20000a48 <main+0x84c>)
2000099e:	681b      	ldr	r3, [r3, #0]
200009a0:	18d1      	adds	r1, r2, r3
200009a2:	4b2d      	ldr	r3, [pc, #180]	; (20000a58 <main+0x85c>)
200009a4:	681a      	ldr	r2, [r3, #0]
200009a6:	0013      	movs	r3, r2
200009a8:	005b      	lsls	r3, r3, #1
200009aa:	189b      	adds	r3, r3, r2
200009ac:	18cb      	adds	r3, r1, r3
200009ae:	1c9a      	adds	r2, r3, #2
200009b0:	4b24      	ldr	r3, [pc, #144]	; (20000a44 <main+0x848>)
200009b2:	681b      	ldr	r3, [r3, #0]
200009b4:	429a      	cmp	r2, r3
200009b6:	dd0c      	ble.n	200009d2 <main+0x7d6>
					text8.display(&text8, 20);
200009b8:	4b2e      	ldr	r3, [pc, #184]	; (20000a74 <main+0x878>)
200009ba:	22ce      	movs	r2, #206	; 0xce
200009bc:	0092      	lsls	r2, r2, #2
200009be:	4694      	mov	ip, r2
200009c0:	44bc      	add	ip, r7
200009c2:	4463      	add	r3, ip
200009c4:	691b      	ldr	r3, [r3, #16]
200009c6:	2250      	movs	r2, #80	; 0x50
200009c8:	18ba      	adds	r2, r7, r2
200009ca:	2114      	movs	r1, #20
200009cc:	0010      	movs	r0, r2
200009ce:	4798      	blx	r3
200009d0:	e0c5      	b.n	20000b5e <main+0x962>
				else if(counter < delay_until_text + 5*long_text + 4*short_text + 2)
200009d2:	4b1f      	ldr	r3, [pc, #124]	; (20000a50 <main+0x854>)
200009d4:	681a      	ldr	r2, [r3, #0]
200009d6:	0013      	movs	r3, r2
200009d8:	009b      	lsls	r3, r3, #2
200009da:	189a      	adds	r2, r3, r2
200009dc:	4b1a      	ldr	r3, [pc, #104]	; (20000a48 <main+0x84c>)
200009de:	681b      	ldr	r3, [r3, #0]
200009e0:	18d2      	adds	r2, r2, r3
200009e2:	4b1d      	ldr	r3, [pc, #116]	; (20000a58 <main+0x85c>)
200009e4:	681b      	ldr	r3, [r3, #0]
200009e6:	009b      	lsls	r3, r3, #2
200009e8:	18d3      	adds	r3, r2, r3
200009ea:	1c9a      	adds	r2, r3, #2
200009ec:	4b15      	ldr	r3, [pc, #84]	; (20000a44 <main+0x848>)
200009ee:	681b      	ldr	r3, [r3, #0]
200009f0:	429a      	cmp	r2, r3
200009f2:	dd43      	ble.n	20000a7c <main+0x880>
					text9.display(&text9, 20);
200009f4:	4b20      	ldr	r3, [pc, #128]	; (20000a78 <main+0x87c>)
200009f6:	22ce      	movs	r2, #206	; 0xce
200009f8:	0092      	lsls	r2, r2, #2
200009fa:	4694      	mov	ip, r2
200009fc:	44bc      	add	ip, r7
200009fe:	4463      	add	r3, ip
20000a00:	691b      	ldr	r3, [r3, #16]
20000a02:	223c      	movs	r2, #60	; 0x3c
20000a04:	18ba      	adds	r2, r7, r2
20000a06:	2114      	movs	r1, #20
20000a08:	0010      	movs	r0, r2
20000a0a:	4798      	blx	r3
20000a0c:	e0a7      	b.n	20000b5e <main+0x962>
20000a0e:	46c0      	nop			; (mov r8, r8)
20000a10:	20008a2c 	andcs	r8, r0, ip, lsr #20
20000a14:	20008a9c 	mulcs	r0, ip, sl
20000a18:	20008aa8 	andcs	r8, r0, r8, lsr #21
20000a1c:	20008abc 			; <UNDEFINED> instruction: 0x20008abc
20000a20:	20008ad4 	ldrdcs	r8, [r0], -r4
20000a24:	20008ae8 	andcs	r8, r0, r8, ror #21
20000a28:	20008afc 	strdcs	r8, [r0], -ip
20000a2c:	20008b10 	andcs	r8, r0, r0, lsl fp
20000a30:	20008b28 	andcs	r8, r0, r8, lsr #22
20000a34:	20008b34 	andcs	r8, r0, r4, lsr fp
20000a38:	20008b48 	andcs	r8, r0, r8, asr #22
20000a3c:	20008b5c 	andcs	r8, r0, ip, asr fp
20000a40:	20006974 	andcs	r6, r0, r4, ror r9
20000a44:	20002ef4 	strdcs	r2, [r0], -r4
20000a48:	20006978 	andcs	r6, r0, r8, ror r9
20000a4c:	fffffdb8 			; <UNDEFINED> instruction: 0xfffffdb8
20000a50:	2000697c 	andcs	r6, r0, ip, ror r9
20000a54:	fffffda4 			; <UNDEFINED> instruction: 0xfffffda4
20000a58:	20006980 	andcs	r6, r0, r0, lsl #19
20000a5c:	fffffd90 			; <UNDEFINED> instruction: 0xfffffd90
20000a60:	fffffd7c 			; <UNDEFINED> instruction: 0xfffffd7c
20000a64:	fffffd68 			; <UNDEFINED> instruction: 0xfffffd68
20000a68:	fffffd54 			; <UNDEFINED> instruction: 0xfffffd54
20000a6c:	fffffd40 			; <UNDEFINED> instruction: 0xfffffd40
20000a70:	fffffd2c 			; <UNDEFINED> instruction: 0xfffffd2c
20000a74:	fffffd18 			; <UNDEFINED> instruction: 0xfffffd18
20000a78:	fffffd04 			; <UNDEFINED> instruction: 0xfffffd04
				else if(counter < delay_until_text + 6*long_text + 4*short_text - 2 + 2)
20000a7c:	4b90      	ldr	r3, [pc, #576]	; (20000cc0 <main+0xac4>)
20000a7e:	681a      	ldr	r2, [r3, #0]
20000a80:	0013      	movs	r3, r2
20000a82:	005b      	lsls	r3, r3, #1
20000a84:	189b      	adds	r3, r3, r2
20000a86:	005b      	lsls	r3, r3, #1
20000a88:	001a      	movs	r2, r3
20000a8a:	4b8e      	ldr	r3, [pc, #568]	; (20000cc4 <main+0xac8>)
20000a8c:	681b      	ldr	r3, [r3, #0]
20000a8e:	18d2      	adds	r2, r2, r3
20000a90:	4b8d      	ldr	r3, [pc, #564]	; (20000cc8 <main+0xacc>)
20000a92:	681b      	ldr	r3, [r3, #0]
20000a94:	009b      	lsls	r3, r3, #2
20000a96:	18d2      	adds	r2, r2, r3
20000a98:	4b8c      	ldr	r3, [pc, #560]	; (20000ccc <main+0xad0>)
20000a9a:	681b      	ldr	r3, [r3, #0]
20000a9c:	429a      	cmp	r2, r3
20000a9e:	dd0c      	ble.n	20000aba <main+0x8be>
					text10.display(&text10, 15);
20000aa0:	4b8b      	ldr	r3, [pc, #556]	; (20000cd0 <main+0xad4>)
20000aa2:	22ce      	movs	r2, #206	; 0xce
20000aa4:	0092      	lsls	r2, r2, #2
20000aa6:	4694      	mov	ip, r2
20000aa8:	44bc      	add	ip, r7
20000aaa:	4463      	add	r3, ip
20000aac:	691b      	ldr	r3, [r3, #16]
20000aae:	2228      	movs	r2, #40	; 0x28
20000ab0:	18ba      	adds	r2, r7, r2
20000ab2:	210f      	movs	r1, #15
20000ab4:	0010      	movs	r0, r2
20000ab6:	4798      	blx	r3
20000ab8:	e051      	b.n	20000b5e <main+0x962>
				else if(counter < delay_until_text + 6*long_text + 5*short_text + 3 + 2)
20000aba:	4b81      	ldr	r3, [pc, #516]	; (20000cc0 <main+0xac4>)
20000abc:	681a      	ldr	r2, [r3, #0]
20000abe:	0013      	movs	r3, r2
20000ac0:	005b      	lsls	r3, r3, #1
20000ac2:	189b      	adds	r3, r3, r2
20000ac4:	005b      	lsls	r3, r3, #1
20000ac6:	001a      	movs	r2, r3
20000ac8:	4b7e      	ldr	r3, [pc, #504]	; (20000cc4 <main+0xac8>)
20000aca:	681b      	ldr	r3, [r3, #0]
20000acc:	18d1      	adds	r1, r2, r3
20000ace:	4b7e      	ldr	r3, [pc, #504]	; (20000cc8 <main+0xacc>)
20000ad0:	681a      	ldr	r2, [r3, #0]
20000ad2:	0013      	movs	r3, r2
20000ad4:	009b      	lsls	r3, r3, #2
20000ad6:	189b      	adds	r3, r3, r2
20000ad8:	18cb      	adds	r3, r1, r3
20000ada:	1d5a      	adds	r2, r3, #5
20000adc:	4b7b      	ldr	r3, [pc, #492]	; (20000ccc <main+0xad0>)
20000ade:	681b      	ldr	r3, [r3, #0]
20000ae0:	429a      	cmp	r2, r3
20000ae2:	dd0b      	ble.n	20000afc <main+0x900>
					text12.display(&text12, 15);
20000ae4:	4b7b      	ldr	r3, [pc, #492]	; (20000cd4 <main+0xad8>)
20000ae6:	22ce      	movs	r2, #206	; 0xce
20000ae8:	0092      	lsls	r2, r2, #2
20000aea:	4694      	mov	ip, r2
20000aec:	44bc      	add	ip, r7
20000aee:	4463      	add	r3, ip
20000af0:	691b      	ldr	r3, [r3, #16]
20000af2:	003a      	movs	r2, r7
20000af4:	210f      	movs	r1, #15
20000af6:	0010      	movs	r0, r2
20000af8:	4798      	blx	r3
20000afa:	e030      	b.n	20000b5e <main+0x962>
				else if(counter < delay_until_text + 7*long_text + 5*short_text + 6 + 2) {
20000afc:	4b70      	ldr	r3, [pc, #448]	; (20000cc0 <main+0xac4>)
20000afe:	681a      	ldr	r2, [r3, #0]
20000b00:	0013      	movs	r3, r2
20000b02:	00db      	lsls	r3, r3, #3
20000b04:	1a9a      	subs	r2, r3, r2
20000b06:	4b6f      	ldr	r3, [pc, #444]	; (20000cc4 <main+0xac8>)
20000b08:	681b      	ldr	r3, [r3, #0]
20000b0a:	18d1      	adds	r1, r2, r3
20000b0c:	4b6e      	ldr	r3, [pc, #440]	; (20000cc8 <main+0xacc>)
20000b0e:	681a      	ldr	r2, [r3, #0]
20000b10:	0013      	movs	r3, r2
20000b12:	009b      	lsls	r3, r3, #2
20000b14:	189b      	adds	r3, r3, r2
20000b16:	18cb      	adds	r3, r1, r3
20000b18:	3308      	adds	r3, #8
20000b1a:	001a      	movs	r2, r3
20000b1c:	4b6b      	ldr	r3, [pc, #428]	; (20000ccc <main+0xad0>)
20000b1e:	681b      	ldr	r3, [r3, #0]
20000b20:	429a      	cmp	r2, r3
20000b22:	dd0c      	ble.n	20000b3e <main+0x942>
					text11.display(&text11, 20);
20000b24:	4b6c      	ldr	r3, [pc, #432]	; (20000cd8 <main+0xadc>)
20000b26:	22ce      	movs	r2, #206	; 0xce
20000b28:	0092      	lsls	r2, r2, #2
20000b2a:	4694      	mov	ip, r2
20000b2c:	44bc      	add	ip, r7
20000b2e:	4463      	add	r3, ip
20000b30:	691b      	ldr	r3, [r3, #16]
20000b32:	2214      	movs	r2, #20
20000b34:	18ba      	adds	r2, r7, r2
20000b36:	2114      	movs	r1, #20
20000b38:	0010      	movs	r0, r2
20000b3a:	4798      	blx	r3
20000b3c:	e00f      	b.n	20000b5e <main+0x962>
				} else {
					if (read_DIL() == 0) {
20000b3e:	f001 fd01 	bl	20002544 <read_DIL>
20000b42:	1e03      	subs	r3, r0, #0
20000b44:	d10b      	bne.n	20000b5e <main+0x962>
						current_screen = GAME_SCREEN;
20000b46:	4b65      	ldr	r3, [pc, #404]	; (20000cdc <main+0xae0>)
20000b48:	2202      	movs	r2, #2
20000b4a:	601a      	str	r2, [r3, #0]
						random_seed = counter;
20000b4c:	4b5f      	ldr	r3, [pc, #380]	; (20000ccc <main+0xad0>)
20000b4e:	681a      	ldr	r2, [r3, #0]
20000b50:	4b63      	ldr	r3, [pc, #396]	; (20000ce0 <main+0xae4>)
20000b52:	601a      	str	r2, [r3, #0]
						counter = 0;
20000b54:	4b5d      	ldr	r3, [pc, #372]	; (20000ccc <main+0xad0>)
20000b56:	2200      	movs	r2, #0
20000b58:	601a      	str	r2, [r3, #0]
						clear_ascii();
20000b5a:	f001 fec0 	bl	200028de <clear_ascii>
					}
				}
				
				if(read_DIL() == SKIP_VALUE) {
20000b5e:	f001 fcf1 	bl	20002544 <read_DIL>
20000b62:	0003      	movs	r3, r0
20000b64:	2b8f      	cmp	r3, #143	; 0x8f
20000b66:	d10b      	bne.n	20000b80 <main+0x984>
					current_screen = GAME_SCREEN;
20000b68:	4b5c      	ldr	r3, [pc, #368]	; (20000cdc <main+0xae0>)
20000b6a:	2202      	movs	r2, #2
20000b6c:	601a      	str	r2, [r3, #0]
					random_seed = counter;
20000b6e:	4b57      	ldr	r3, [pc, #348]	; (20000ccc <main+0xad0>)
20000b70:	681a      	ldr	r2, [r3, #0]
20000b72:	4b5b      	ldr	r3, [pc, #364]	; (20000ce0 <main+0xae4>)
20000b74:	601a      	str	r2, [r3, #0]
					counter = 0;
20000b76:	4b55      	ldr	r3, [pc, #340]	; (20000ccc <main+0xad0>)
20000b78:	2200      	movs	r2, #0
20000b7a:	601a      	str	r2, [r3, #0]
					clear_ascii();
20000b7c:	f001 feaf 	bl	200028de <clear_ascii>
				}
				
				
				fire2.update(&fire2);
20000b80:	4b58      	ldr	r3, [pc, #352]	; (20000ce4 <main+0xae8>)
20000b82:	22ce      	movs	r2, #206	; 0xce
20000b84:	0092      	lsls	r2, r2, #2
20000b86:	4694      	mov	ip, r2
20000b88:	44bc      	add	ip, r7
20000b8a:	4463      	add	r3, ip
20000b8c:	68db      	ldr	r3, [r3, #12]
20000b8e:	22ca      	movs	r2, #202	; 0xca
20000b90:	0052      	lsls	r2, r2, #1
20000b92:	18ba      	adds	r2, r7, r2
20000b94:	0010      	movs	r0, r2
20000b96:	4798      	blx	r3
				fire3.update(&fire3);
20000b98:	4b53      	ldr	r3, [pc, #332]	; (20000ce8 <main+0xaec>)
20000b9a:	22ce      	movs	r2, #206	; 0xce
20000b9c:	0092      	lsls	r2, r2, #2
20000b9e:	4694      	mov	ip, r2
20000ba0:	44bc      	add	ip, r7
20000ba2:	4463      	add	r3, ip
20000ba4:	68db      	ldr	r3, [r3, #12]
20000ba6:	22b8      	movs	r2, #184	; 0xb8
20000ba8:	0052      	lsls	r2, r2, #1
20000baa:	18ba      	adds	r2, r7, r2
20000bac:	0010      	movs	r0, r2
20000bae:	4798      	blx	r3
				fire1.update(&fire1);
20000bb0:	4b4e      	ldr	r3, [pc, #312]	; (20000cec <main+0xaf0>)
20000bb2:	22ce      	movs	r2, #206	; 0xce
20000bb4:	0092      	lsls	r2, r2, #2
20000bb6:	4694      	mov	ip, r2
20000bb8:	44bc      	add	ip, r7
20000bba:	4463      	add	r3, ip
20000bbc:	68db      	ldr	r3, [r3, #12]
20000bbe:	2294      	movs	r2, #148	; 0x94
20000bc0:	0052      	lsls	r2, r2, #1
20000bc2:	18ba      	adds	r2, r7, r2
20000bc4:	0010      	movs	r0, r2
20000bc6:	4798      	blx	r3
				fire4.update(&fire4);
20000bc8:	4b49      	ldr	r3, [pc, #292]	; (20000cf0 <main+0xaf4>)
20000bca:	22ce      	movs	r2, #206	; 0xce
20000bcc:	0092      	lsls	r2, r2, #2
20000bce:	4694      	mov	ip, r2
20000bd0:	44bc      	add	ip, r7
20000bd2:	4463      	add	r3, ip
20000bd4:	68db      	ldr	r3, [r3, #12]
20000bd6:	22a6      	movs	r2, #166	; 0xa6
20000bd8:	0052      	lsls	r2, r2, #1
20000bda:	18ba      	adds	r2, r7, r2
20000bdc:	0010      	movs	r0, r2
20000bde:	4798      	blx	r3
				bird.update(&bird);
20000be0:	4b44      	ldr	r3, [pc, #272]	; (20000cf4 <main+0xaf8>)
20000be2:	22ce      	movs	r2, #206	; 0xce
20000be4:	0092      	lsls	r2, r2, #2
20000be6:	4694      	mov	ip, r2
20000be8:	44bc      	add	ip, r7
20000bea:	4463      	add	r3, ip
20000bec:	68db      	ldr	r3, [r3, #12]
20000bee:	22ee      	movs	r2, #238	; 0xee
20000bf0:	0052      	lsls	r2, r2, #1
20000bf2:	18ba      	adds	r2, r7, r2
20000bf4:	0010      	movs	r0, r2
20000bf6:	4798      	blx	r3
				bird.xPos -= 2;
20000bf8:	4b3e      	ldr	r3, [pc, #248]	; (20000cf4 <main+0xaf8>)
20000bfa:	22ce      	movs	r2, #206	; 0xce
20000bfc:	0092      	lsls	r2, r2, #2
20000bfe:	4694      	mov	ip, r2
20000c00:	44bc      	add	ip, r7
20000c02:	4463      	add	r3, ip
20000c04:	685b      	ldr	r3, [r3, #4]
20000c06:	1e9a      	subs	r2, r3, #2
20000c08:	4b3a      	ldr	r3, [pc, #232]	; (20000cf4 <main+0xaf8>)
20000c0a:	21ce      	movs	r1, #206	; 0xce
20000c0c:	0089      	lsls	r1, r1, #2
20000c0e:	468c      	mov	ip, r1
20000c10:	44bc      	add	ip, r7
20000c12:	4463      	add	r3, ip
20000c14:	605a      	str	r2, [r3, #4]
				if (counter % 2 == 0) {
20000c16:	4b2d      	ldr	r3, [pc, #180]	; (20000ccc <main+0xad0>)
20000c18:	681b      	ldr	r3, [r3, #0]
20000c1a:	001a      	movs	r2, r3
20000c1c:	2301      	movs	r3, #1
20000c1e:	4013      	ands	r3, r2
20000c20:	d14c      	bne.n	20000cbc <main+0xac0>
					bird.yPos--;
20000c22:	4b34      	ldr	r3, [pc, #208]	; (20000cf4 <main+0xaf8>)
20000c24:	22ce      	movs	r2, #206	; 0xce
20000c26:	0092      	lsls	r2, r2, #2
20000c28:	4694      	mov	ip, r2
20000c2a:	44bc      	add	ip, r7
20000c2c:	4463      	add	r3, ip
20000c2e:	689b      	ldr	r3, [r3, #8]
20000c30:	1e5a      	subs	r2, r3, #1
20000c32:	4b30      	ldr	r3, [pc, #192]	; (20000cf4 <main+0xaf8>)
20000c34:	21ce      	movs	r1, #206	; 0xce
20000c36:	0089      	lsls	r1, r1, #2
20000c38:	468c      	mov	ip, r1
20000c3a:	44bc      	add	ip, r7
20000c3c:	4463      	add	r3, ip
20000c3e:	609a      	str	r2, [r3, #8]
				}
				
				break;
20000c40:	e03c      	b.n	20000cbc <main+0xac0>
				
			case GAME_SCREEN: //inside
				
				
				counter++;
20000c42:	4b22      	ldr	r3, [pc, #136]	; (20000ccc <main+0xad0>)
20000c44:	681b      	ldr	r3, [r3, #0]
20000c46:	1c5a      	adds	r2, r3, #1
20000c48:	4b20      	ldr	r3, [pc, #128]	; (20000ccc <main+0xad0>)
20000c4a:	601a      	str	r2, [r3, #0]
				if(read_DIL_single( LIGHT_TRIGGER )) {
20000c4c:	2006      	movs	r0, #6
20000c4e:	f001 fc89 	bl	20002564 <read_DIL_single>
20000c52:	1e03      	subs	r3, r0, #0
20000c54:	d006      	beq.n	20000c64 <main+0xa68>
					draw_game_object( &indoors2 );
20000c56:	2380      	movs	r3, #128	; 0x80
20000c58:	009b      	lsls	r3, r3, #2
20000c5a:	18fb      	adds	r3, r7, r3
20000c5c:	0018      	movs	r0, r3
20000c5e:	f001 fbc7 	bl	200023f0 <draw_game_object>
20000c62:	e00a      	b.n	20000c7a <main+0xa7e>
				} else {
					draw_game_object( &indoors );
20000c64:	2389      	movs	r3, #137	; 0x89
20000c66:	009b      	lsls	r3, r3, #2
20000c68:	18fb      	adds	r3, r7, r3
20000c6a:	0018      	movs	r0, r3
20000c6c:	f001 fbc0 	bl	200023f0 <draw_game_object>
					draw_game_object( &fire1_indoors );
20000c70:	1d7b      	adds	r3, r7, #5
20000c72:	33ff      	adds	r3, #255	; 0xff
20000c74:	0018      	movs	r0, r3
20000c76:	f001 fbbb 	bl	200023f0 <draw_game_object>
				}
				
				draw_game_object( &player );
20000c7a:	23dc      	movs	r3, #220	; 0xdc
20000c7c:	005b      	lsls	r3, r3, #1
20000c7e:	18fb      	adds	r3, r7, r3
20000c80:	0018      	movs	r0, r3
20000c82:	f001 fbb5 	bl	200023f0 <draw_game_object>
				show_frame(1);
20000c86:	2001      	movs	r0, #1
20000c88:	f001 fbf3 	bl	20002472 <show_frame>
				
				
				player.update(&player);
20000c8c:	4b1a      	ldr	r3, [pc, #104]	; (20000cf8 <main+0xafc>)
20000c8e:	22ce      	movs	r2, #206	; 0xce
20000c90:	0092      	lsls	r2, r2, #2
20000c92:	4694      	mov	ip, r2
20000c94:	44bc      	add	ip, r7
20000c96:	4463      	add	r3, ip
20000c98:	68db      	ldr	r3, [r3, #12]
20000c9a:	22dc      	movs	r2, #220	; 0xdc
20000c9c:	0052      	lsls	r2, r2, #1
20000c9e:	18ba      	adds	r2, r7, r2
20000ca0:	0010      	movs	r0, r2
20000ca2:	4798      	blx	r3
				fire1_indoors.update(&fire1_indoors);
20000ca4:	4b15      	ldr	r3, [pc, #84]	; (20000cfc <main+0xb00>)
20000ca6:	22ce      	movs	r2, #206	; 0xce
20000ca8:	0092      	lsls	r2, r2, #2
20000caa:	4694      	mov	ip, r2
20000cac:	44bc      	add	ip, r7
20000cae:	4463      	add	r3, ip
20000cb0:	68db      	ldr	r3, [r3, #12]
20000cb2:	1d7a      	adds	r2, r7, #5
20000cb4:	32ff      	adds	r2, #255	; 0xff
20000cb6:	0010      	movs	r0, r2
20000cb8:	4798      	blx	r3
				
				break;
20000cba:	e000      	b.n	20000cbe <main+0xac2>
				break;
20000cbc:	46c0      	nop			; (mov r8, r8)
		switch(current_screen) {
20000cbe:	e51e      	b.n	200006fe <main+0x502>
20000cc0:	2000697c 	andcs	r6, r0, ip, ror r9
20000cc4:	20006978 	andcs	r6, r0, r8, ror r9
20000cc8:	20006980 	andcs	r6, r0, r0, lsl #19
20000ccc:	20002ef4 	strdcs	r2, [r0], -r4
20000cd0:	fffffcf0 			; <UNDEFINED> instruction: 0xfffffcf0
20000cd4:	fffffcc8 			; <UNDEFINED> instruction: 0xfffffcc8
20000cd8:	fffffcdc 			; <UNDEFINED> instruction: 0xfffffcdc
20000cdc:	20006974 	andcs	r6, r0, r4, ror r9
20000ce0:	20002fc0 	andcs	r2, r0, r0, asr #31
20000ce4:	fffffe5c 			; <UNDEFINED> instruction: 0xfffffe5c
20000ce8:	fffffe38 			; <UNDEFINED> instruction: 0xfffffe38
20000cec:	fffffdf0 			; <UNDEFINED> instruction: 0xfffffdf0
20000cf0:	fffffe14 			; <UNDEFINED> instruction: 0xfffffe14
20000cf4:	fffffea4 			; <UNDEFINED> instruction: 0xfffffea4
20000cf8:	fffffe80 			; <UNDEFINED> instruction: 0xfffffe80
20000cfc:	fffffdcc 			; <UNDEFINED> instruction: 0xfffffdcc

20000d00 <render>:
GameObject* gameObjects[100];
int nGameObjects = 0;


void render(GameObject* this)
{
20000d00:	b580      	push	{r7, lr}
20000d02:	b082      	sub	sp, #8
20000d04:	af00      	add	r7, sp, #0
20000d06:	6078      	str	r0, [r7, #4]
    
}
20000d08:	46c0      	nop			; (mov r8, r8)
20000d0a:	46bd      	mov	sp, r7
20000d0c:	b002      	add	sp, #8
20000d0e:	bd80      	pop	{r7, pc}

20000d10 <gameObjectUpdate>:

void gameObjectUpdate(GameObject *this) {
20000d10:	b580      	push	{r7, lr}
20000d12:	b082      	sub	sp, #8
20000d14:	af00      	add	r7, sp, #0
20000d16:	6078      	str	r0, [r7, #4]
	this->animation_counter++;
20000d18:	687b      	ldr	r3, [r7, #4]
20000d1a:	6a1b      	ldr	r3, [r3, #32]
20000d1c:	1c5a      	adds	r2, r3, #1
20000d1e:	687b      	ldr	r3, [r7, #4]
20000d20:	621a      	str	r2, [r3, #32]
	if (this->animation_counter == this->animation_speed) {
20000d22:	687b      	ldr	r3, [r7, #4]
20000d24:	6a1a      	ldr	r2, [r3, #32]
20000d26:	687b      	ldr	r3, [r7, #4]
20000d28:	69db      	ldr	r3, [r3, #28]
20000d2a:	429a      	cmp	r2, r3
20000d2c:	d10f      	bne.n	20000d4e <gameObjectUpdate+0x3e>
		this->animation_counter = 0;
20000d2e:	687b      	ldr	r3, [r7, #4]
20000d30:	2200      	movs	r2, #0
20000d32:	621a      	str	r2, [r3, #32]
		this->current_frame = (this->current_frame + 1) % this->n_frames;
20000d34:	687b      	ldr	r3, [r7, #4]
20000d36:	695b      	ldr	r3, [r3, #20]
20000d38:	1c5a      	adds	r2, r3, #1
20000d3a:	687b      	ldr	r3, [r7, #4]
20000d3c:	699b      	ldr	r3, [r3, #24]
20000d3e:	0019      	movs	r1, r3
20000d40:	0010      	movs	r0, r2
20000d42:	f002 f8d1 	bl	20002ee8 <__aeabi_idivmod>
20000d46:	000b      	movs	r3, r1
20000d48:	001a      	movs	r2, r3
20000d4a:	687b      	ldr	r3, [r7, #4]
20000d4c:	615a      	str	r2, [r3, #20]
	}
}
20000d4e:	46c0      	nop			; (mov r8, r8)
20000d50:	46bd      	mov	sp, r7
20000d52:	b002      	add	sp, #8
20000d54:	bd80      	pop	{r7, pc}
	...

20000d58 <initSprites>:
Image fire2Image;
Image fire3Image;
Image fire4Image;
Image fire5Image;
Image fireImages[5];
static void initSprites( void ) {	
20000d58:	b580      	push	{r7, lr}
20000d5a:	b08c      	sub	sp, #48	; 0x30
20000d5c:	af00      	add	r7, sp, #0
	sprite *pointer0 = &tempFireBlack;
20000d5e:	4b3e      	ldr	r3, [pc, #248]	; (20000e58 <initSprites+0x100>)
20000d60:	62fb      	str	r3, [r7, #44]	; 0x2c
	load_sprite(pointer0, fire_black_2_bits, fire1_gray_width, fire1_gray_height);
20000d62:	493e      	ldr	r1, [pc, #248]	; (20000e5c <initSprites+0x104>)
20000d64:	6af8      	ldr	r0, [r7, #44]	; 0x2c
20000d66:	230c      	movs	r3, #12
20000d68:	2208      	movs	r2, #8
20000d6a:	f001 fbcb 	bl	20002504 <load_sprite>
	fireBlack = pointer0;
20000d6e:	4b3c      	ldr	r3, [pc, #240]	; (20000e60 <initSprites+0x108>)
20000d70:	6afa      	ldr	r2, [r7, #44]	; 0x2c
20000d72:	601a      	str	r2, [r3, #0]
	
	sprite *pointer1 = &tempFire1Gray;
20000d74:	4b3b      	ldr	r3, [pc, #236]	; (20000e64 <initSprites+0x10c>)
20000d76:	62bb      	str	r3, [r7, #40]	; 0x28
	load_sprite(pointer1, fire1_gray_bits, fire1_gray_width, fire1_gray_height);
20000d78:	493b      	ldr	r1, [pc, #236]	; (20000e68 <initSprites+0x110>)
20000d7a:	6ab8      	ldr	r0, [r7, #40]	; 0x28
20000d7c:	230c      	movs	r3, #12
20000d7e:	2208      	movs	r2, #8
20000d80:	f001 fbc0 	bl	20002504 <load_sprite>
	fire1Gray = pointer1;
20000d84:	4b39      	ldr	r3, [pc, #228]	; (20000e6c <initSprites+0x114>)
20000d86:	6aba      	ldr	r2, [r7, #40]	; 0x28
20000d88:	601a      	str	r2, [r3, #0]

	sprite *pointer2 = &tempFire1Light;
20000d8a:	4b39      	ldr	r3, [pc, #228]	; (20000e70 <initSprites+0x118>)
20000d8c:	627b      	str	r3, [r7, #36]	; 0x24
	load_sprite(pointer2, fire1_light_bits, fire1_gray_width, fire1_gray_height);
20000d8e:	4939      	ldr	r1, [pc, #228]	; (20000e74 <initSprites+0x11c>)
20000d90:	6a78      	ldr	r0, [r7, #36]	; 0x24
20000d92:	230c      	movs	r3, #12
20000d94:	2208      	movs	r2, #8
20000d96:	f001 fbb5 	bl	20002504 <load_sprite>
	fire1Light = pointer2;
20000d9a:	4b37      	ldr	r3, [pc, #220]	; (20000e78 <initSprites+0x120>)
20000d9c:	6a7a      	ldr	r2, [r7, #36]	; 0x24
20000d9e:	601a      	str	r2, [r3, #0]

	sprite *pointer3 = &tempFire2Gray;
20000da0:	4b36      	ldr	r3, [pc, #216]	; (20000e7c <initSprites+0x124>)
20000da2:	623b      	str	r3, [r7, #32]
	load_sprite(pointer3, fire2_gray_bits, fire1_gray_width, fire1_gray_height);
20000da4:	4936      	ldr	r1, [pc, #216]	; (20000e80 <initSprites+0x128>)
20000da6:	6a38      	ldr	r0, [r7, #32]
20000da8:	230c      	movs	r3, #12
20000daa:	2208      	movs	r2, #8
20000dac:	f001 fbaa 	bl	20002504 <load_sprite>
	fire2Gray = pointer3;
20000db0:	4b34      	ldr	r3, [pc, #208]	; (20000e84 <initSprites+0x12c>)
20000db2:	6a3a      	ldr	r2, [r7, #32]
20000db4:	601a      	str	r2, [r3, #0]

	sprite *pointer4 = &tempFire2Light;
20000db6:	4b34      	ldr	r3, [pc, #208]	; (20000e88 <initSprites+0x130>)
20000db8:	61fb      	str	r3, [r7, #28]
	load_sprite(pointer4, fire2_light_bits, fire1_gray_width, fire1_gray_height);
20000dba:	4934      	ldr	r1, [pc, #208]	; (20000e8c <initSprites+0x134>)
20000dbc:	69f8      	ldr	r0, [r7, #28]
20000dbe:	230c      	movs	r3, #12
20000dc0:	2208      	movs	r2, #8
20000dc2:	f001 fb9f 	bl	20002504 <load_sprite>
	fire2Light = pointer4;
20000dc6:	4b32      	ldr	r3, [pc, #200]	; (20000e90 <initSprites+0x138>)
20000dc8:	69fa      	ldr	r2, [r7, #28]
20000dca:	601a      	str	r2, [r3, #0]

	sprite *pointer5 = &tempFire3Gray;
20000dcc:	4b31      	ldr	r3, [pc, #196]	; (20000e94 <initSprites+0x13c>)
20000dce:	61bb      	str	r3, [r7, #24]
	load_sprite(pointer5, fire3_gray_bits, fire1_gray_width, fire1_gray_height);
20000dd0:	4931      	ldr	r1, [pc, #196]	; (20000e98 <initSprites+0x140>)
20000dd2:	69b8      	ldr	r0, [r7, #24]
20000dd4:	230c      	movs	r3, #12
20000dd6:	2208      	movs	r2, #8
20000dd8:	f001 fb94 	bl	20002504 <load_sprite>
	fire3Gray = pointer5;
20000ddc:	4b2f      	ldr	r3, [pc, #188]	; (20000e9c <initSprites+0x144>)
20000dde:	69ba      	ldr	r2, [r7, #24]
20000de0:	601a      	str	r2, [r3, #0]

	sprite *pointer6 = &tempFire3Light;
20000de2:	4b2f      	ldr	r3, [pc, #188]	; (20000ea0 <initSprites+0x148>)
20000de4:	617b      	str	r3, [r7, #20]
	load_sprite(pointer6, fire3_light_bits, fire1_gray_width, fire1_gray_height);
20000de6:	492f      	ldr	r1, [pc, #188]	; (20000ea4 <initSprites+0x14c>)
20000de8:	6978      	ldr	r0, [r7, #20]
20000dea:	230c      	movs	r3, #12
20000dec:	2208      	movs	r2, #8
20000dee:	f001 fb89 	bl	20002504 <load_sprite>
	fire3Light = pointer6;
20000df2:	4b2d      	ldr	r3, [pc, #180]	; (20000ea8 <initSprites+0x150>)
20000df4:	697a      	ldr	r2, [r7, #20]
20000df6:	601a      	str	r2, [r3, #0]

	sprite *pointer7 = &tempFire4Gray;
20000df8:	4b2c      	ldr	r3, [pc, #176]	; (20000eac <initSprites+0x154>)
20000dfa:	613b      	str	r3, [r7, #16]
	load_sprite(pointer7, fire4_gray_bits, fire1_gray_width, fire1_gray_height);
20000dfc:	492c      	ldr	r1, [pc, #176]	; (20000eb0 <initSprites+0x158>)
20000dfe:	6938      	ldr	r0, [r7, #16]
20000e00:	230c      	movs	r3, #12
20000e02:	2208      	movs	r2, #8
20000e04:	f001 fb7e 	bl	20002504 <load_sprite>
	fire4Gray = pointer7;
20000e08:	4b2a      	ldr	r3, [pc, #168]	; (20000eb4 <initSprites+0x15c>)
20000e0a:	693a      	ldr	r2, [r7, #16]
20000e0c:	601a      	str	r2, [r3, #0]

	sprite *pointer8 = &tempFire4Light;
20000e0e:	4b2a      	ldr	r3, [pc, #168]	; (20000eb8 <initSprites+0x160>)
20000e10:	60fb      	str	r3, [r7, #12]
	load_sprite(pointer8, fire4_light_bits, fire1_gray_width, fire1_gray_height);
20000e12:	492a      	ldr	r1, [pc, #168]	; (20000ebc <initSprites+0x164>)
20000e14:	68f8      	ldr	r0, [r7, #12]
20000e16:	230c      	movs	r3, #12
20000e18:	2208      	movs	r2, #8
20000e1a:	f001 fb73 	bl	20002504 <load_sprite>
	fire4Light = pointer8;
20000e1e:	4b28      	ldr	r3, [pc, #160]	; (20000ec0 <initSprites+0x168>)
20000e20:	68fa      	ldr	r2, [r7, #12]
20000e22:	601a      	str	r2, [r3, #0]

	sprite *pointer9 = &tempFire5Gray;
20000e24:	4b27      	ldr	r3, [pc, #156]	; (20000ec4 <initSprites+0x16c>)
20000e26:	60bb      	str	r3, [r7, #8]
	load_sprite(pointer9, fire5_gray_bits, fire1_gray_width, fire1_gray_height);
20000e28:	4927      	ldr	r1, [pc, #156]	; (20000ec8 <initSprites+0x170>)
20000e2a:	68b8      	ldr	r0, [r7, #8]
20000e2c:	230c      	movs	r3, #12
20000e2e:	2208      	movs	r2, #8
20000e30:	f001 fb68 	bl	20002504 <load_sprite>
	fire5Gray = pointer9;
20000e34:	4b25      	ldr	r3, [pc, #148]	; (20000ecc <initSprites+0x174>)
20000e36:	68ba      	ldr	r2, [r7, #8]
20000e38:	601a      	str	r2, [r3, #0]

	sprite *pointer10 = &tempFire5Light;
20000e3a:	4b25      	ldr	r3, [pc, #148]	; (20000ed0 <initSprites+0x178>)
20000e3c:	607b      	str	r3, [r7, #4]
	load_sprite(pointer10, fire5_light_bits, fire1_gray_width, fire1_gray_height);
20000e3e:	4925      	ldr	r1, [pc, #148]	; (20000ed4 <initSprites+0x17c>)
20000e40:	6878      	ldr	r0, [r7, #4]
20000e42:	230c      	movs	r3, #12
20000e44:	2208      	movs	r2, #8
20000e46:	f001 fb5d 	bl	20002504 <load_sprite>
	fire5Light = pointer10;
20000e4a:	4b23      	ldr	r3, [pc, #140]	; (20000ed8 <initSprites+0x180>)
20000e4c:	687a      	ldr	r2, [r7, #4]
20000e4e:	601a      	str	r2, [r3, #0]
}
20000e50:	46c0      	nop			; (mov r8, r8)
20000e52:	46bd      	mov	sp, r7
20000e54:	b00c      	add	sp, #48	; 0x30
20000e56:	bd80      	pop	{r7, pc}
20000e58:	200031a4 	andcs	r3, r0, r4, lsr #3
20000e5c:	20006984 	andcs	r6, r0, r4, lsl #19
20000e60:	2000329c 	mulcs	r0, ip, r2
20000e64:	20003290 	mulcs	r0, r0, r2
20000e68:	20006990 	mulcs	r0, r0, r9
20000e6c:	200032b4 			; <UNDEFINED> instruction: 0x200032b4
20000e70:	2000326c 	andcs	r3, r0, ip, ror #4
20000e74:	2000699c 	mulcs	r0, ip, r9
20000e78:	2000316c 	andcs	r3, r0, ip, ror #2
20000e7c:	20003198 	mulcs	r0, r8, r1
20000e80:	200069a8 	andcs	r6, r0, r8, lsr #19
20000e84:	200032b0 			; <UNDEFINED> instruction: 0x200032b0
20000e88:	200032a0 	andcs	r3, r0, r0, lsr #5
20000e8c:	200069b4 			; <UNDEFINED> instruction: 0x200069b4
20000e90:	20003288 	andcs	r3, r0, r8, lsl #5
20000e94:	20003250 	andcs	r3, r0, r0, asr r2
20000e98:	200069c0 	andcs	r6, r0, r0, asr #19
20000e9c:	2000317c 	andcs	r3, r0, ip, ror r1
20000ea0:	20003170 	andcs	r3, r0, r0, ror r1
20000ea4:	200069cc 	andcs	r6, r0, ip, asr #19
20000ea8:	200032ac 	andcs	r3, r0, ip, lsr #5
20000eac:	20003180 	andcs	r3, r0, r0, lsl #3
20000eb0:	200069d8 	ldrdcs	r6, [r0], -r8
20000eb4:	20003268 	andcs	r3, r0, r8, ror #4
20000eb8:	200031bc 			; <UNDEFINED> instruction: 0x200031bc
20000ebc:	200069e4 	andcs	r6, r0, r4, ror #19
20000ec0:	200031d4 	ldrdcs	r3, [r0], -r4
20000ec4:	20003244 	andcs	r3, r0, r4, asr #4
20000ec8:	200069f0 	strdcs	r6, [r0], -r0
20000ecc:	20003284 	andcs	r3, r0, r4, lsl #5
20000ed0:	20003278 	andcs	r3, r0, r8, ror r2
20000ed4:	200069fc 	strdcs	r6, [r0], -ip
20000ed8:	2000328c 	andcs	r3, r0, ip, lsl #5

20000edc <init_fire>:
	
void init_fire( GameObject *fireObj ) {
20000edc:	b590      	push	{r4, r7, lr}
20000ede:	b083      	sub	sp, #12
20000ee0:	af00      	add	r7, sp, #0
20000ee2:	6078      	str	r0, [r7, #4]
	static int firstTime = 1;
	if (firstTime) {
20000ee4:	4b30      	ldr	r3, [pc, #192]	; (20000fa8 <init_fire+0xcc>)
20000ee6:	681b      	ldr	r3, [r3, #0]
20000ee8:	2b00      	cmp	r3, #0
20000eea:	d049      	beq.n	20000f80 <init_fire+0xa4>
		initSprites();
20000eec:	f7ff ff34 	bl	20000d58 <initSprites>
		firstTime = 0;			
20000ef0:	4b2d      	ldr	r3, [pc, #180]	; (20000fa8 <init_fire+0xcc>)
20000ef2:	2200      	movs	r2, #0
20000ef4:	601a      	str	r2, [r3, #0]

		fireImages[0] = fire1Image;
20000ef6:	4b2d      	ldr	r3, [pc, #180]	; (20000fac <init_fire+0xd0>)
20000ef8:	4a2d      	ldr	r2, [pc, #180]	; (20000fb0 <init_fire+0xd4>)
20000efa:	ca13      	ldmia	r2!, {r0, r1, r4}
20000efc:	c313      	stmia	r3!, {r0, r1, r4}
		fireImages[1] = fire2Image;
20000efe:	4b2b      	ldr	r3, [pc, #172]	; (20000fac <init_fire+0xd0>)
20000f00:	4a2c      	ldr	r2, [pc, #176]	; (20000fb4 <init_fire+0xd8>)
20000f02:	330c      	adds	r3, #12
20000f04:	ca13      	ldmia	r2!, {r0, r1, r4}
20000f06:	c313      	stmia	r3!, {r0, r1, r4}
		fireImages[2] = fire3Image;
20000f08:	4b28      	ldr	r3, [pc, #160]	; (20000fac <init_fire+0xd0>)
20000f0a:	4a2b      	ldr	r2, [pc, #172]	; (20000fb8 <init_fire+0xdc>)
20000f0c:	3318      	adds	r3, #24
20000f0e:	ca13      	ldmia	r2!, {r0, r1, r4}
20000f10:	c313      	stmia	r3!, {r0, r1, r4}
		fireImages[3] = fire4Image;
20000f12:	4b26      	ldr	r3, [pc, #152]	; (20000fac <init_fire+0xd0>)
20000f14:	4a29      	ldr	r2, [pc, #164]	; (20000fbc <init_fire+0xe0>)
20000f16:	3324      	adds	r3, #36	; 0x24
20000f18:	ca13      	ldmia	r2!, {r0, r1, r4}
20000f1a:	c313      	stmia	r3!, {r0, r1, r4}
		fireImages[4] = fire5Image;
20000f1c:	4b23      	ldr	r3, [pc, #140]	; (20000fac <init_fire+0xd0>)
20000f1e:	4a28      	ldr	r2, [pc, #160]	; (20000fc0 <init_fire+0xe4>)
20000f20:	3330      	adds	r3, #48	; 0x30
20000f22:	ca13      	ldmia	r2!, {r0, r1, r4}
20000f24:	c313      	stmia	r3!, {r0, r1, r4}
		
		load_image(&fireImages[0], fire1Gray, fire1Light, fireBlack);
20000f26:	4b27      	ldr	r3, [pc, #156]	; (20000fc4 <init_fire+0xe8>)
20000f28:	6819      	ldr	r1, [r3, #0]
20000f2a:	4b27      	ldr	r3, [pc, #156]	; (20000fc8 <init_fire+0xec>)
20000f2c:	681a      	ldr	r2, [r3, #0]
20000f2e:	4b27      	ldr	r3, [pc, #156]	; (20000fcc <init_fire+0xf0>)
20000f30:	681b      	ldr	r3, [r3, #0]
20000f32:	481e      	ldr	r0, [pc, #120]	; (20000fac <init_fire+0xd0>)
20000f34:	f001 fad2 	bl	200024dc <load_image>
		load_image(&fireImages[1], fire2Gray, fire2Light, fireBlack);
20000f38:	4b25      	ldr	r3, [pc, #148]	; (20000fd0 <init_fire+0xf4>)
20000f3a:	6819      	ldr	r1, [r3, #0]
20000f3c:	4b25      	ldr	r3, [pc, #148]	; (20000fd4 <init_fire+0xf8>)
20000f3e:	681a      	ldr	r2, [r3, #0]
20000f40:	4b22      	ldr	r3, [pc, #136]	; (20000fcc <init_fire+0xf0>)
20000f42:	681b      	ldr	r3, [r3, #0]
20000f44:	4824      	ldr	r0, [pc, #144]	; (20000fd8 <init_fire+0xfc>)
20000f46:	f001 fac9 	bl	200024dc <load_image>
		load_image(&fireImages[2], fire3Gray, fire3Light, fireBlack);
20000f4a:	4b24      	ldr	r3, [pc, #144]	; (20000fdc <init_fire+0x100>)
20000f4c:	6819      	ldr	r1, [r3, #0]
20000f4e:	4b24      	ldr	r3, [pc, #144]	; (20000fe0 <init_fire+0x104>)
20000f50:	681a      	ldr	r2, [r3, #0]
20000f52:	4b1e      	ldr	r3, [pc, #120]	; (20000fcc <init_fire+0xf0>)
20000f54:	681b      	ldr	r3, [r3, #0]
20000f56:	4823      	ldr	r0, [pc, #140]	; (20000fe4 <init_fire+0x108>)
20000f58:	f001 fac0 	bl	200024dc <load_image>
		load_image(&fireImages[3], fire4Gray, fire4Light, fireBlack);
20000f5c:	4b22      	ldr	r3, [pc, #136]	; (20000fe8 <init_fire+0x10c>)
20000f5e:	6819      	ldr	r1, [r3, #0]
20000f60:	4b22      	ldr	r3, [pc, #136]	; (20000fec <init_fire+0x110>)
20000f62:	681a      	ldr	r2, [r3, #0]
20000f64:	4b19      	ldr	r3, [pc, #100]	; (20000fcc <init_fire+0xf0>)
20000f66:	681b      	ldr	r3, [r3, #0]
20000f68:	4821      	ldr	r0, [pc, #132]	; (20000ff0 <init_fire+0x114>)
20000f6a:	f001 fab7 	bl	200024dc <load_image>
		load_image(&fireImages[4], fire5Gray, fire5Light, fireBlack);
20000f6e:	4b21      	ldr	r3, [pc, #132]	; (20000ff4 <init_fire+0x118>)
20000f70:	6819      	ldr	r1, [r3, #0]
20000f72:	4b21      	ldr	r3, [pc, #132]	; (20000ff8 <init_fire+0x11c>)
20000f74:	681a      	ldr	r2, [r3, #0]
20000f76:	4b15      	ldr	r3, [pc, #84]	; (20000fcc <init_fire+0xf0>)
20000f78:	681b      	ldr	r3, [r3, #0]
20000f7a:	4820      	ldr	r0, [pc, #128]	; (20000ffc <init_fire+0x120>)
20000f7c:	f001 faae 	bl	200024dc <load_image>
	}
	
	fireObj->images = fireImages;
20000f80:	687b      	ldr	r3, [r7, #4]
20000f82:	4a0a      	ldr	r2, [pc, #40]	; (20000fac <init_fire+0xd0>)
20000f84:	601a      	str	r2, [r3, #0]

	fireObj->current_frame = 0;
20000f86:	687b      	ldr	r3, [r7, #4]
20000f88:	2200      	movs	r2, #0
20000f8a:	615a      	str	r2, [r3, #20]
	fireObj->n_frames = 5;
20000f8c:	687b      	ldr	r3, [r7, #4]
20000f8e:	2205      	movs	r2, #5
20000f90:	619a      	str	r2, [r3, #24]
	fireObj->animation_speed = 1;
20000f92:	687b      	ldr	r3, [r7, #4]
20000f94:	2201      	movs	r2, #1
20000f96:	61da      	str	r2, [r3, #28]
	fireObj->animation_counter = 0;
20000f98:	687b      	ldr	r3, [r7, #4]
20000f9a:	2200      	movs	r2, #0
20000f9c:	621a      	str	r2, [r3, #32]
}
20000f9e:	46c0      	nop			; (mov r8, r8)
20000fa0:	46bd      	mov	sp, r7
20000fa2:	b003      	add	sp, #12
20000fa4:	bd90      	pop	{r4, r7, pc}
20000fa6:	46c0      	nop			; (mov r8, r8)
20000fa8:	20006a08 	andcs	r6, r0, r8, lsl #20
20000fac:	20003208 	andcs	r3, r0, r8, lsl #4
20000fb0:	200031c8 	andcs	r3, r0, r8, asr #3
20000fb4:	2000318c 	andcs	r3, r0, ip, lsl #3
20000fb8:	200031b0 			; <UNDEFINED> instruction: 0x200031b0
20000fbc:	2000325c 	andcs	r3, r0, ip, asr r2
20000fc0:	200031fc 	strdcs	r3, [r0], -ip
20000fc4:	200032b4 			; <UNDEFINED> instruction: 0x200032b4
20000fc8:	2000316c 	andcs	r3, r0, ip, ror #2
20000fcc:	2000329c 	mulcs	r0, ip, r2
20000fd0:	200032b0 			; <UNDEFINED> instruction: 0x200032b0
20000fd4:	20003288 	andcs	r3, r0, r8, lsl #5
20000fd8:	20003214 	andcs	r3, r0, r4, lsl r2
20000fdc:	2000317c 	andcs	r3, r0, ip, ror r1
20000fe0:	200032ac 	andcs	r3, r0, ip, lsr #5
20000fe4:	20003220 	andcs	r3, r0, r0, lsr #4
20000fe8:	20003268 	andcs	r3, r0, r8, ror #4
20000fec:	200031d4 	ldrdcs	r3, [r0], -r4
20000ff0:	2000322c 	andcs	r3, r0, ip, lsr #4
20000ff4:	20003284 	andcs	r3, r0, r4, lsl #5
20000ff8:	2000328c 	andcs	r3, r0, ip, lsl #5
20000ffc:	20003238 	andcs	r3, r0, r8, lsr r2

20001000 <playerUpdate>:
#include "gpio.h"
#include "controls.h"
#include "gameobject.h"
#include "player.h"

void playerUpdate(GameObject *this) {
20001000:	b580      	push	{r7, lr}
20001002:	b082      	sub	sp, #8
20001004:	af00      	add	r7, sp, #0
20001006:	6078      	str	r0, [r7, #4]
	this->animation_counter++;
20001008:	687b      	ldr	r3, [r7, #4]
2000100a:	6a1b      	ldr	r3, [r3, #32]
2000100c:	1c5a      	adds	r2, r3, #1
2000100e:	687b      	ldr	r3, [r7, #4]
20001010:	621a      	str	r2, [r3, #32]
	if (this->animation_counter == this->animation_speed) {
20001012:	687b      	ldr	r3, [r7, #4]
20001014:	6a1a      	ldr	r2, [r3, #32]
20001016:	687b      	ldr	r3, [r7, #4]
20001018:	69db      	ldr	r3, [r3, #28]
2000101a:	429a      	cmp	r2, r3
2000101c:	d10f      	bne.n	2000103e <playerUpdate+0x3e>
		this->animation_counter = 0;
2000101e:	687b      	ldr	r3, [r7, #4]
20001020:	2200      	movs	r2, #0
20001022:	621a      	str	r2, [r3, #32]
		this->current_frame = (this->current_frame + 1) % this->n_frames;
20001024:	687b      	ldr	r3, [r7, #4]
20001026:	695b      	ldr	r3, [r3, #20]
20001028:	1c5a      	adds	r2, r3, #1
2000102a:	687b      	ldr	r3, [r7, #4]
2000102c:	699b      	ldr	r3, [r3, #24]
2000102e:	0019      	movs	r1, r3
20001030:	0010      	movs	r0, r2
20001032:	f001 ff59 	bl	20002ee8 <__aeabi_idivmod>
20001036:	000b      	movs	r3, r1
20001038:	001a      	movs	r2, r3
2000103a:	687b      	ldr	r3, [r7, #4]
2000103c:	615a      	str	r2, [r3, #20]
	
	static lastRightValue = 0;
	static lastLeftValue = 0; 
	static speed = 0;
	
	if (!lastRightValue && read_DIL_single(RIGHT_TRIGGER)){
2000103e:	4b2c      	ldr	r3, [pc, #176]	; (200010f0 <playerUpdate+0xf0>)
20001040:	681b      	ldr	r3, [r3, #0]
20001042:	2b00      	cmp	r3, #0
20001044:	d109      	bne.n	2000105a <playerUpdate+0x5a>
20001046:	2000      	movs	r0, #0
20001048:	f001 fa8c 	bl	20002564 <read_DIL_single>
2000104c:	1e03      	subs	r3, r0, #0
2000104e:	d004      	beq.n	2000105a <playerUpdate+0x5a>
		speed += SPEED_ADD;
20001050:	4b28      	ldr	r3, [pc, #160]	; (200010f4 <playerUpdate+0xf4>)
20001052:	681b      	ldr	r3, [r3, #0]
20001054:	1cda      	adds	r2, r3, #3
20001056:	4b27      	ldr	r3, [pc, #156]	; (200010f4 <playerUpdate+0xf4>)
20001058:	601a      	str	r2, [r3, #0]
	}
	
	if (!lastLeftValue && read_DIL_single(LEFT_TRIGGER)){
2000105a:	4b27      	ldr	r3, [pc, #156]	; (200010f8 <playerUpdate+0xf8>)
2000105c:	681b      	ldr	r3, [r3, #0]
2000105e:	2b00      	cmp	r3, #0
20001060:	d109      	bne.n	20001076 <playerUpdate+0x76>
20001062:	2007      	movs	r0, #7
20001064:	f001 fa7e 	bl	20002564 <read_DIL_single>
20001068:	1e03      	subs	r3, r0, #0
2000106a:	d004      	beq.n	20001076 <playerUpdate+0x76>
		speed -= SPEED_ADD;
2000106c:	4b21      	ldr	r3, [pc, #132]	; (200010f4 <playerUpdate+0xf4>)
2000106e:	681b      	ldr	r3, [r3, #0]
20001070:	1eda      	subs	r2, r3, #3
20001072:	4b20      	ldr	r3, [pc, #128]	; (200010f4 <playerUpdate+0xf4>)
20001074:	601a      	str	r2, [r3, #0]
	}
	
	if (this->xPos + speed > LIMIT_RIGHT || this->xPos + speed < LIMIT_LEFT){
20001076:	687b      	ldr	r3, [r7, #4]
20001078:	685a      	ldr	r2, [r3, #4]
2000107a:	4b1e      	ldr	r3, [pc, #120]	; (200010f4 <playerUpdate+0xf4>)
2000107c:	681b      	ldr	r3, [r3, #0]
2000107e:	18d3      	adds	r3, r2, r3
20001080:	2b6e      	cmp	r3, #110	; 0x6e
20001082:	dc06      	bgt.n	20001092 <playerUpdate+0x92>
20001084:	687b      	ldr	r3, [r7, #4]
20001086:	685a      	ldr	r2, [r3, #4]
20001088:	4b1a      	ldr	r3, [pc, #104]	; (200010f4 <playerUpdate+0xf4>)
2000108a:	681b      	ldr	r3, [r3, #0]
2000108c:	18d3      	adds	r3, r2, r3
2000108e:	2b00      	cmp	r3, #0
20001090:	da04      	bge.n	2000109c <playerUpdate+0x9c>
		speed *= -1;	
20001092:	4b18      	ldr	r3, [pc, #96]	; (200010f4 <playerUpdate+0xf4>)
20001094:	681b      	ldr	r3, [r3, #0]
20001096:	425a      	negs	r2, r3
20001098:	4b16      	ldr	r3, [pc, #88]	; (200010f4 <playerUpdate+0xf4>)
2000109a:	601a      	str	r2, [r3, #0]
	}
	
	this->xPos += speed;	
2000109c:	687b      	ldr	r3, [r7, #4]
2000109e:	685a      	ldr	r2, [r3, #4]
200010a0:	4b14      	ldr	r3, [pc, #80]	; (200010f4 <playerUpdate+0xf4>)
200010a2:	681b      	ldr	r3, [r3, #0]
200010a4:	18d2      	adds	r2, r2, r3
200010a6:	687b      	ldr	r3, [r7, #4]
200010a8:	605a      	str	r2, [r3, #4]
	
	if (speed > 0){
200010aa:	4b12      	ldr	r3, [pc, #72]	; (200010f4 <playerUpdate+0xf4>)
200010ac:	681b      	ldr	r3, [r3, #0]
200010ae:	2b00      	cmp	r3, #0
200010b0:	dd05      	ble.n	200010be <playerUpdate+0xbe>
		speed--;
200010b2:	4b10      	ldr	r3, [pc, #64]	; (200010f4 <playerUpdate+0xf4>)
200010b4:	681b      	ldr	r3, [r3, #0]
200010b6:	1e5a      	subs	r2, r3, #1
200010b8:	4b0e      	ldr	r3, [pc, #56]	; (200010f4 <playerUpdate+0xf4>)
200010ba:	601a      	str	r2, [r3, #0]
200010bc:	e008      	b.n	200010d0 <playerUpdate+0xd0>
	}
	else if (speed < 0){
200010be:	4b0d      	ldr	r3, [pc, #52]	; (200010f4 <playerUpdate+0xf4>)
200010c0:	681b      	ldr	r3, [r3, #0]
200010c2:	2b00      	cmp	r3, #0
200010c4:	da04      	bge.n	200010d0 <playerUpdate+0xd0>
		speed++;
200010c6:	4b0b      	ldr	r3, [pc, #44]	; (200010f4 <playerUpdate+0xf4>)
200010c8:	681b      	ldr	r3, [r3, #0]
200010ca:	1c5a      	adds	r2, r3, #1
200010cc:	4b09      	ldr	r3, [pc, #36]	; (200010f4 <playerUpdate+0xf4>)
200010ce:	601a      	str	r2, [r3, #0]
	}
	
	lastRightValue = read_DIL_single(RIGHT_TRIGGER);
200010d0:	2000      	movs	r0, #0
200010d2:	f001 fa47 	bl	20002564 <read_DIL_single>
200010d6:	0002      	movs	r2, r0
200010d8:	4b05      	ldr	r3, [pc, #20]	; (200010f0 <playerUpdate+0xf0>)
200010da:	601a      	str	r2, [r3, #0]
	lastLeftValue = read_DIL_single(LEFT_TRIGGER);
200010dc:	2007      	movs	r0, #7
200010de:	f001 fa41 	bl	20002564 <read_DIL_single>
200010e2:	0002      	movs	r2, r0
200010e4:	4b04      	ldr	r3, [pc, #16]	; (200010f8 <playerUpdate+0xf8>)
200010e6:	601a      	str	r2, [r3, #0]
	
200010e8:	46c0      	nop			; (mov r8, r8)
200010ea:	46bd      	mov	sp, r7
200010ec:	b002      	add	sp, #8
200010ee:	bd80      	pop	{r7, pc}
200010f0:	20002efc 	strdcs	r2, [r0], -ip
200010f4:	20002f00 	andcs	r2, r0, r0, lsl #30
200010f8:	20002f04 	andcs	r2, r0, r4, lsl #30

200010fc <initSprites>:
Image bird5Image;
Image bird6Image;
//Image bird7Image;
//Image bird8Image;
Image birdImages[6];
static void initSprites( void ) {	
200010fc:	b580      	push	{r7, lr}
200010fe:	b090      	sub	sp, #64	; 0x40
20001100:	af00      	add	r7, sp, #0
	
	sprite *pointer11 = &tempBirdLight;
20001102:	4b54      	ldr	r3, [pc, #336]	; (20001254 <initSprites+0x158>)
20001104:	63fb      	str	r3, [r7, #60]	; 0x3c
	load_sprite(pointer11, bird1_light_bits, bird1_black_width, bird1_black_height);
20001106:	4954      	ldr	r1, [pc, #336]	; (20001258 <initSprites+0x15c>)
20001108:	6bf8      	ldr	r0, [r7, #60]	; 0x3c
2000110a:	2319      	movs	r3, #25
2000110c:	2219      	movs	r2, #25
2000110e:	f001 f9f9 	bl	20002504 <load_sprite>
	bird1Light = pointer11;
20001112:	4b52      	ldr	r3, [pc, #328]	; (2000125c <initSprites+0x160>)
20001114:	6bfa      	ldr	r2, [r7, #60]	; 0x3c
20001116:	601a      	str	r2, [r3, #0]
	sprite *pointer12 = &tempBirdGray;
20001118:	4b51      	ldr	r3, [pc, #324]	; (20001260 <initSprites+0x164>)
2000111a:	63bb      	str	r3, [r7, #56]	; 0x38
	load_sprite(pointer12, bird1_gray_bits, bird1_black_width, bird1_black_height);
2000111c:	4951      	ldr	r1, [pc, #324]	; (20001264 <initSprites+0x168>)
2000111e:	6bb8      	ldr	r0, [r7, #56]	; 0x38
20001120:	2319      	movs	r3, #25
20001122:	2219      	movs	r2, #25
20001124:	f001 f9ee 	bl	20002504 <load_sprite>
	bird1Gray = pointer12;
20001128:	4b4f      	ldr	r3, [pc, #316]	; (20001268 <initSprites+0x16c>)
2000112a:	6bba      	ldr	r2, [r7, #56]	; 0x38
2000112c:	601a      	str	r2, [r3, #0]
	sprite *pointer13 = &tempBirdBlack;
2000112e:	4b4f      	ldr	r3, [pc, #316]	; (2000126c <initSprites+0x170>)
20001130:	637b      	str	r3, [r7, #52]	; 0x34
	load_sprite(pointer13, bird1_black_bits, bird1_black_width, bird1_black_height);
20001132:	494f      	ldr	r1, [pc, #316]	; (20001270 <initSprites+0x174>)
20001134:	6b78      	ldr	r0, [r7, #52]	; 0x34
20001136:	2319      	movs	r3, #25
20001138:	2219      	movs	r2, #25
2000113a:	f001 f9e3 	bl	20002504 <load_sprite>
	bird1Black = pointer13;	
2000113e:	4b4d      	ldr	r3, [pc, #308]	; (20001274 <initSprites+0x178>)
20001140:	6b7a      	ldr	r2, [r7, #52]	; 0x34
20001142:	601a      	str	r2, [r3, #0]
	
	sprite *pointer14 = &tempBird2Light;
20001144:	4b4c      	ldr	r3, [pc, #304]	; (20001278 <initSprites+0x17c>)
20001146:	633b      	str	r3, [r7, #48]	; 0x30
	load_sprite(pointer14, bird2_light_bits, bird2_black_width, bird2_black_height);
20001148:	494c      	ldr	r1, [pc, #304]	; (2000127c <initSprites+0x180>)
2000114a:	6b38      	ldr	r0, [r7, #48]	; 0x30
2000114c:	2319      	movs	r3, #25
2000114e:	2219      	movs	r2, #25
20001150:	f001 f9d8 	bl	20002504 <load_sprite>
	bird2Light = pointer14;
20001154:	4b4a      	ldr	r3, [pc, #296]	; (20001280 <initSprites+0x184>)
20001156:	6b3a      	ldr	r2, [r7, #48]	; 0x30
20001158:	601a      	str	r2, [r3, #0]
	sprite *pointer15 = &tempBird2Gray;
2000115a:	4b4a      	ldr	r3, [pc, #296]	; (20001284 <initSprites+0x188>)
2000115c:	62fb      	str	r3, [r7, #44]	; 0x2c
	load_sprite(pointer15, bird2_gray_bits, bird2_black_width, bird2_black_height);
2000115e:	494a      	ldr	r1, [pc, #296]	; (20001288 <initSprites+0x18c>)
20001160:	6af8      	ldr	r0, [r7, #44]	; 0x2c
20001162:	2319      	movs	r3, #25
20001164:	2219      	movs	r2, #25
20001166:	f001 f9cd 	bl	20002504 <load_sprite>
	bird2Gray = pointer15;
2000116a:	4b48      	ldr	r3, [pc, #288]	; (2000128c <initSprites+0x190>)
2000116c:	6afa      	ldr	r2, [r7, #44]	; 0x2c
2000116e:	601a      	str	r2, [r3, #0]
	sprite *pointer16 = &tempBird2Black;
20001170:	4b47      	ldr	r3, [pc, #284]	; (20001290 <initSprites+0x194>)
20001172:	62bb      	str	r3, [r7, #40]	; 0x28
	load_sprite(pointer16, bird2_black_bits, bird2_black_width, bird2_black_height);
20001174:	4947      	ldr	r1, [pc, #284]	; (20001294 <initSprites+0x198>)
20001176:	6ab8      	ldr	r0, [r7, #40]	; 0x28
20001178:	2319      	movs	r3, #25
2000117a:	2219      	movs	r2, #25
2000117c:	f001 f9c2 	bl	20002504 <load_sprite>
	bird2Black = pointer16;
20001180:	4b45      	ldr	r3, [pc, #276]	; (20001298 <initSprites+0x19c>)
20001182:	6aba      	ldr	r2, [r7, #40]	; 0x28
20001184:	601a      	str	r2, [r3, #0]
	
	
	sprite *finalPointer = &tempBird3Light;
20001186:	4b45      	ldr	r3, [pc, #276]	; (2000129c <initSprites+0x1a0>)
20001188:	627b      	str	r3, [r7, #36]	; 0x24
	load_sprite(finalPointer, bird3_light_bits, bird3_black_width, bird3_black_height);
2000118a:	4945      	ldr	r1, [pc, #276]	; (200012a0 <initSprites+0x1a4>)
2000118c:	6a78      	ldr	r0, [r7, #36]	; 0x24
2000118e:	2319      	movs	r3, #25
20001190:	2219      	movs	r2, #25
20001192:	f001 f9b7 	bl	20002504 <load_sprite>
	bird3Light = finalPointer;
20001196:	4b43      	ldr	r3, [pc, #268]	; (200012a4 <initSprites+0x1a8>)
20001198:	6a7a      	ldr	r2, [r7, #36]	; 0x24
2000119a:	601a      	str	r2, [r3, #0]
	sprite *pointer17 = &tempBird3Gray;
2000119c:	4b42      	ldr	r3, [pc, #264]	; (200012a8 <initSprites+0x1ac>)
2000119e:	623b      	str	r3, [r7, #32]
	load_sprite(pointer17, bird3_gray_bits, bird3_black_width, bird3_black_height);
200011a0:	4942      	ldr	r1, [pc, #264]	; (200012ac <initSprites+0x1b0>)
200011a2:	6a38      	ldr	r0, [r7, #32]
200011a4:	2319      	movs	r3, #25
200011a6:	2219      	movs	r2, #25
200011a8:	f001 f9ac 	bl	20002504 <load_sprite>
	bird3Gray = pointer17;
200011ac:	4b40      	ldr	r3, [pc, #256]	; (200012b0 <initSprites+0x1b4>)
200011ae:	6a3a      	ldr	r2, [r7, #32]
200011b0:	601a      	str	r2, [r3, #0]
	sprite *pointer18 = &tempBird3Black;
200011b2:	4b40      	ldr	r3, [pc, #256]	; (200012b4 <initSprites+0x1b8>)
200011b4:	61fb      	str	r3, [r7, #28]
	load_sprite(pointer18, bird3_black_bits, bird3_black_width, bird3_black_height);
200011b6:	4940      	ldr	r1, [pc, #256]	; (200012b8 <initSprites+0x1bc>)
200011b8:	69f8      	ldr	r0, [r7, #28]
200011ba:	2319      	movs	r3, #25
200011bc:	2219      	movs	r2, #25
200011be:	f001 f9a1 	bl	20002504 <load_sprite>
	bird3Black = pointer18;	
200011c2:	4b3e      	ldr	r3, [pc, #248]	; (200012bc <initSprites+0x1c0>)
200011c4:	69fa      	ldr	r2, [r7, #28]
200011c6:	601a      	str	r2, [r3, #0]
	
	sprite *pointer19 = &tempBird4Light;
200011c8:	4b3d      	ldr	r3, [pc, #244]	; (200012c0 <initSprites+0x1c4>)
200011ca:	61bb      	str	r3, [r7, #24]
	load_sprite(pointer19, bird4_light_bits, bird4_black_width, bird4_black_height);
200011cc:	493d      	ldr	r1, [pc, #244]	; (200012c4 <initSprites+0x1c8>)
200011ce:	69b8      	ldr	r0, [r7, #24]
200011d0:	2319      	movs	r3, #25
200011d2:	2219      	movs	r2, #25
200011d4:	f001 f996 	bl	20002504 <load_sprite>
	bird4Light = pointer19;
200011d8:	4b3b      	ldr	r3, [pc, #236]	; (200012c8 <initSprites+0x1cc>)
200011da:	69ba      	ldr	r2, [r7, #24]
200011dc:	601a      	str	r2, [r3, #0]
	sprite *pointer20 = &tempBird4Gray;
200011de:	4b3b      	ldr	r3, [pc, #236]	; (200012cc <initSprites+0x1d0>)
200011e0:	617b      	str	r3, [r7, #20]
	load_sprite(pointer20, bird4_gray_bits, bird4_black_width, bird4_black_height);
200011e2:	493b      	ldr	r1, [pc, #236]	; (200012d0 <initSprites+0x1d4>)
200011e4:	6978      	ldr	r0, [r7, #20]
200011e6:	2319      	movs	r3, #25
200011e8:	2219      	movs	r2, #25
200011ea:	f001 f98b 	bl	20002504 <load_sprite>
	bird4Gray = pointer20;
200011ee:	4b39      	ldr	r3, [pc, #228]	; (200012d4 <initSprites+0x1d8>)
200011f0:	697a      	ldr	r2, [r7, #20]
200011f2:	601a      	str	r2, [r3, #0]
	sprite *pointer21 = &tempBird4Black;
200011f4:	4b38      	ldr	r3, [pc, #224]	; (200012d8 <initSprites+0x1dc>)
200011f6:	613b      	str	r3, [r7, #16]
	load_sprite(pointer21, bird4_black_bits, bird4_black_width, bird4_black_height);
200011f8:	4938      	ldr	r1, [pc, #224]	; (200012dc <initSprites+0x1e0>)
200011fa:	6938      	ldr	r0, [r7, #16]
200011fc:	2319      	movs	r3, #25
200011fe:	2219      	movs	r2, #25
20001200:	f001 f980 	bl	20002504 <load_sprite>
	bird4Black = pointer21;	
20001204:	4b36      	ldr	r3, [pc, #216]	; (200012e0 <initSprites+0x1e4>)
20001206:	693a      	ldr	r2, [r7, #16]
20001208:	601a      	str	r2, [r3, #0]
	
	sprite *pointer22 = &tempBird5Light;
2000120a:	4b36      	ldr	r3, [pc, #216]	; (200012e4 <initSprites+0x1e8>)
2000120c:	60fb      	str	r3, [r7, #12]
	load_sprite(pointer22, bird5_light_bits, bird5_black_width, bird5_black_height);
2000120e:	4936      	ldr	r1, [pc, #216]	; (200012e8 <initSprites+0x1ec>)
20001210:	68f8      	ldr	r0, [r7, #12]
20001212:	2319      	movs	r3, #25
20001214:	2219      	movs	r2, #25
20001216:	f001 f975 	bl	20002504 <load_sprite>
	bird5Light = pointer22;
2000121a:	4b34      	ldr	r3, [pc, #208]	; (200012ec <initSprites+0x1f0>)
2000121c:	68fa      	ldr	r2, [r7, #12]
2000121e:	601a      	str	r2, [r3, #0]
	sprite *pointer23 = &tempBird5Gray;
20001220:	4b33      	ldr	r3, [pc, #204]	; (200012f0 <initSprites+0x1f4>)
20001222:	60bb      	str	r3, [r7, #8]
	load_sprite(pointer23, bird5_gray_bits, bird5_black_width, bird5_black_height);
20001224:	4933      	ldr	r1, [pc, #204]	; (200012f4 <initSprites+0x1f8>)
20001226:	68b8      	ldr	r0, [r7, #8]
20001228:	2319      	movs	r3, #25
2000122a:	2219      	movs	r2, #25
2000122c:	f001 f96a 	bl	20002504 <load_sprite>
	bird5Gray = pointer23;
20001230:	4b31      	ldr	r3, [pc, #196]	; (200012f8 <initSprites+0x1fc>)
20001232:	68ba      	ldr	r2, [r7, #8]
20001234:	601a      	str	r2, [r3, #0]
	sprite *pointer24 = &tempBird5Black;
20001236:	4b31      	ldr	r3, [pc, #196]	; (200012fc <initSprites+0x200>)
20001238:	607b      	str	r3, [r7, #4]
	load_sprite(pointer24, bird5_black_bits, bird5_black_width, bird5_black_height);
2000123a:	4931      	ldr	r1, [pc, #196]	; (20001300 <initSprites+0x204>)
2000123c:	6878      	ldr	r0, [r7, #4]
2000123e:	2319      	movs	r3, #25
20001240:	2219      	movs	r2, #25
20001242:	f001 f95f 	bl	20002504 <load_sprite>
	bird5Black = pointer24;
20001246:	4b2f      	ldr	r3, [pc, #188]	; (20001304 <initSprites+0x208>)
20001248:	687a      	ldr	r2, [r7, #4]
2000124a:	601a      	str	r2, [r3, #0]
}
2000124c:	46c0      	nop			; (mov r8, r8)
2000124e:	46bd      	mov	sp, r7
20001250:	b010      	add	sp, #64	; 0x40
20001252:	bd80      	pop	{r7, pc}
20001254:	200033a8 	andcs	r3, r0, r8, lsr #7
20001258:	20006ad4 	ldrdcs	r6, [r0], -r4
2000125c:	200033b4 			; <UNDEFINED> instruction: 0x200033b4
20001260:	20003344 	andcs	r3, r0, r4, asr #6
20001264:	20006a70 	andcs	r6, r0, r0, ror sl
20001268:	200032bc 			; <UNDEFINED> instruction: 0x200032bc
2000126c:	20003334 	andcs	r3, r0, r4, lsr r3
20001270:	20006a0c 	andcs	r6, r0, ip, lsl #20
20001274:	20003324 	andcs	r3, r0, r4, lsr #6
20001278:	200033b8 			; <UNDEFINED> instruction: 0x200033b8
2000127c:	20006c00 	andcs	r6, r0, r0, lsl #24
20001280:	20003458 	andcs	r3, r0, r8, asr r4
20001284:	20003360 	andcs	r3, r0, r0, ror #6
20001288:	20006b9c 	mulcs	r0, ip, fp
2000128c:	200033a4 	andcs	r3, r0, r4, lsr #7
20001290:	20003440 	andcs	r3, r0, r0, asr #8
20001294:	20006b38 	andcs	r6, r0, r8, lsr fp
20001298:	20003320 	andcs	r3, r0, r0, lsr #6
2000129c:	200033dc 	ldrdcs	r3, [r0], -ip
200012a0:	20006d2c 	andcs	r6, r0, ip, lsr #26
200012a4:	2000336c 	andcs	r3, r0, ip, ror #6
200012a8:	200033e8 	andcs	r3, r0, r8, ror #7
200012ac:	20006cc8 	andcs	r6, r0, r8, asr #25
200012b0:	20003340 	andcs	r3, r0, r0, asr #6
200012b4:	20003398 	mulcs	r0, r8, r3
200012b8:	20006c64 	andcs	r6, r0, r4, ror #24
200012bc:	20003318 	andcs	r3, r0, r8, lsl r3
200012c0:	200033d0 	ldrdcs	r3, [r0], -r0
200012c4:	20006e58 	andcs	r6, r0, r8, asr lr
200012c8:	200032b8 			; <UNDEFINED> instruction: 0x200032b8
200012cc:	2000344c 	andcs	r3, r0, ip, asr #8
200012d0:	20006df4 	strdcs	r6, [r0], -r4
200012d4:	2000331c 	andcs	r3, r0, ip, lsl r3
200012d8:	200032d0 	ldrdcs	r3, [r0], -r0
200012dc:	20006d90 	mulcs	r0, r0, sp
200012e0:	2000343c 	andcs	r3, r0, ip, lsr r4
200012e4:	20003354 	andcs	r3, r0, r4, asr r3
200012e8:	20006f84 	andcs	r6, r0, r4, lsl #31
200012ec:	20003394 	mulcs	r0, r4, r3
200012f0:	20003370 	andcs	r3, r0, r0, ror r3
200012f4:	20006f20 	andcs	r6, r0, r0, lsr #30
200012f8:	20003350 	andcs	r3, r0, r0, asr r3
200012fc:	2000337c 	andcs	r3, r0, ip, ror r3
20001300:	20006ebc 			; <UNDEFINED> instruction: 0x20006ebc
20001304:	200032cc 	andcs	r3, r0, ip, asr #5

20001308 <init_bird>:
	
void init_bird( GameObject *birdObj ) {
20001308:	b590      	push	{r4, r7, lr}
2000130a:	b083      	sub	sp, #12
2000130c:	af00      	add	r7, sp, #0
2000130e:	6078      	str	r0, [r7, #4]
	static int firstTime = 1;
	if (firstTime) {
20001310:	4b37      	ldr	r3, [pc, #220]	; (200013f0 <init_bird+0xe8>)
20001312:	681b      	ldr	r3, [r3, #0]
20001314:	2b00      	cmp	r3, #0
20001316:	d057      	beq.n	200013c8 <init_bird+0xc0>
		initSprites();
20001318:	f7ff fef0 	bl	200010fc <initSprites>
		firstTime = 0;			
2000131c:	4b34      	ldr	r3, [pc, #208]	; (200013f0 <init_bird+0xe8>)
2000131e:	2200      	movs	r2, #0
20001320:	601a      	str	r2, [r3, #0]

		birdImages[0] = bird1Image;
20001322:	4b34      	ldr	r3, [pc, #208]	; (200013f4 <init_bird+0xec>)
20001324:	4a34      	ldr	r2, [pc, #208]	; (200013f8 <init_bird+0xf0>)
20001326:	ca13      	ldmia	r2!, {r0, r1, r4}
20001328:	c313      	stmia	r3!, {r0, r1, r4}
		birdImages[1] = bird2Image;
2000132a:	4b32      	ldr	r3, [pc, #200]	; (200013f4 <init_bird+0xec>)
2000132c:	4a33      	ldr	r2, [pc, #204]	; (200013fc <init_bird+0xf4>)
2000132e:	330c      	adds	r3, #12
20001330:	ca13      	ldmia	r2!, {r0, r1, r4}
20001332:	c313      	stmia	r3!, {r0, r1, r4}
		birdImages[2] = bird3Image;
20001334:	4b2f      	ldr	r3, [pc, #188]	; (200013f4 <init_bird+0xec>)
20001336:	4a32      	ldr	r2, [pc, #200]	; (20001400 <init_bird+0xf8>)
20001338:	3318      	adds	r3, #24
2000133a:	ca13      	ldmia	r2!, {r0, r1, r4}
2000133c:	c313      	stmia	r3!, {r0, r1, r4}
		birdImages[3] = bird4Image;
2000133e:	4b2d      	ldr	r3, [pc, #180]	; (200013f4 <init_bird+0xec>)
20001340:	4a30      	ldr	r2, [pc, #192]	; (20001404 <init_bird+0xfc>)
20001342:	3324      	adds	r3, #36	; 0x24
20001344:	ca13      	ldmia	r2!, {r0, r1, r4}
20001346:	c313      	stmia	r3!, {r0, r1, r4}
		birdImages[4] = bird5Image;
20001348:	4b2a      	ldr	r3, [pc, #168]	; (200013f4 <init_bird+0xec>)
2000134a:	4a2f      	ldr	r2, [pc, #188]	; (20001408 <init_bird+0x100>)
2000134c:	3330      	adds	r3, #48	; 0x30
2000134e:	ca13      	ldmia	r2!, {r0, r1, r4}
20001350:	c313      	stmia	r3!, {r0, r1, r4}
		birdImages[5] = bird6Image;
20001352:	4b28      	ldr	r3, [pc, #160]	; (200013f4 <init_bird+0xec>)
20001354:	4a2d      	ldr	r2, [pc, #180]	; (2000140c <init_bird+0x104>)
20001356:	333c      	adds	r3, #60	; 0x3c
20001358:	ca13      	ldmia	r2!, {r0, r1, r4}
2000135a:	c313      	stmia	r3!, {r0, r1, r4}
//		birdImages[6] = bird7Image;
		//birdImages[7] = bird8Image;
		
		load_image(&birdImages[0], bird1Black, bird1Gray, bird1Light);
2000135c:	4b2c      	ldr	r3, [pc, #176]	; (20001410 <init_bird+0x108>)
2000135e:	6819      	ldr	r1, [r3, #0]
20001360:	4b2c      	ldr	r3, [pc, #176]	; (20001414 <init_bird+0x10c>)
20001362:	681a      	ldr	r2, [r3, #0]
20001364:	4b2c      	ldr	r3, [pc, #176]	; (20001418 <init_bird+0x110>)
20001366:	681b      	ldr	r3, [r3, #0]
20001368:	4822      	ldr	r0, [pc, #136]	; (200013f4 <init_bird+0xec>)
2000136a:	f001 f8b7 	bl	200024dc <load_image>
		load_image(&birdImages[1], bird2Black, bird2Gray, bird2Light);
2000136e:	4b2b      	ldr	r3, [pc, #172]	; (2000141c <init_bird+0x114>)
20001370:	6819      	ldr	r1, [r3, #0]
20001372:	4b2b      	ldr	r3, [pc, #172]	; (20001420 <init_bird+0x118>)
20001374:	681a      	ldr	r2, [r3, #0]
20001376:	4b2b      	ldr	r3, [pc, #172]	; (20001424 <init_bird+0x11c>)
20001378:	681b      	ldr	r3, [r3, #0]
2000137a:	482b      	ldr	r0, [pc, #172]	; (20001428 <init_bird+0x120>)
2000137c:	f001 f8ae 	bl	200024dc <load_image>
		load_image(&birdImages[2], bird3Black, bird3Gray, bird3Light);
20001380:	4b2a      	ldr	r3, [pc, #168]	; (2000142c <init_bird+0x124>)
20001382:	6819      	ldr	r1, [r3, #0]
20001384:	4b2a      	ldr	r3, [pc, #168]	; (20001430 <init_bird+0x128>)
20001386:	681a      	ldr	r2, [r3, #0]
20001388:	4b2a      	ldr	r3, [pc, #168]	; (20001434 <init_bird+0x12c>)
2000138a:	681b      	ldr	r3, [r3, #0]
2000138c:	482a      	ldr	r0, [pc, #168]	; (20001438 <init_bird+0x130>)
2000138e:	f001 f8a5 	bl	200024dc <load_image>
		load_image(&birdImages[3], bird4Black, bird4Gray, bird4Light);
20001392:	4b2a      	ldr	r3, [pc, #168]	; (2000143c <init_bird+0x134>)
20001394:	6819      	ldr	r1, [r3, #0]
20001396:	4b2a      	ldr	r3, [pc, #168]	; (20001440 <init_bird+0x138>)
20001398:	681a      	ldr	r2, [r3, #0]
2000139a:	4b2a      	ldr	r3, [pc, #168]	; (20001444 <init_bird+0x13c>)
2000139c:	681b      	ldr	r3, [r3, #0]
2000139e:	482a      	ldr	r0, [pc, #168]	; (20001448 <init_bird+0x140>)
200013a0:	f001 f89c 	bl	200024dc <load_image>
		load_image(&birdImages[4], bird5Black, bird5Gray, bird5Light);
200013a4:	4b29      	ldr	r3, [pc, #164]	; (2000144c <init_bird+0x144>)
200013a6:	6819      	ldr	r1, [r3, #0]
200013a8:	4b29      	ldr	r3, [pc, #164]	; (20001450 <init_bird+0x148>)
200013aa:	681a      	ldr	r2, [r3, #0]
200013ac:	4b29      	ldr	r3, [pc, #164]	; (20001454 <init_bird+0x14c>)
200013ae:	681b      	ldr	r3, [r3, #0]
200013b0:	4829      	ldr	r0, [pc, #164]	; (20001458 <init_bird+0x150>)
200013b2:	f001 f893 	bl	200024dc <load_image>
		
		//load_image(&birdImages[7], bird2Black, bird2Gray, bird2Light);
		load_image(&birdImages[5], bird3Black, bird3Gray, bird3Light);
200013b6:	4b1d      	ldr	r3, [pc, #116]	; (2000142c <init_bird+0x124>)
200013b8:	6819      	ldr	r1, [r3, #0]
200013ba:	4b1d      	ldr	r3, [pc, #116]	; (20001430 <init_bird+0x128>)
200013bc:	681a      	ldr	r2, [r3, #0]
200013be:	4b1d      	ldr	r3, [pc, #116]	; (20001434 <init_bird+0x12c>)
200013c0:	681b      	ldr	r3, [r3, #0]
200013c2:	4826      	ldr	r0, [pc, #152]	; (2000145c <init_bird+0x154>)
200013c4:	f001 f88a 	bl	200024dc <load_image>
		//load_image(&birdImages[5], bird4Black, bird4Gray, bird4Light);
	}
	
	birdObj->images = birdImages;
200013c8:	687b      	ldr	r3, [r7, #4]
200013ca:	4a0a      	ldr	r2, [pc, #40]	; (200013f4 <init_bird+0xec>)
200013cc:	601a      	str	r2, [r3, #0]

	birdObj->current_frame = 0;
200013ce:	687b      	ldr	r3, [r7, #4]
200013d0:	2200      	movs	r2, #0
200013d2:	615a      	str	r2, [r3, #20]
	birdObj->n_frames = 6;
200013d4:	687b      	ldr	r3, [r7, #4]
200013d6:	2206      	movs	r2, #6
200013d8:	619a      	str	r2, [r3, #24]
	birdObj->animation_speed = 1;
200013da:	687b      	ldr	r3, [r7, #4]
200013dc:	2201      	movs	r2, #1
200013de:	61da      	str	r2, [r3, #28]
	birdObj->animation_counter = 0;
200013e0:	687b      	ldr	r3, [r7, #4]
200013e2:	2200      	movs	r2, #0
200013e4:	621a      	str	r2, [r3, #32]
}
200013e6:	46c0      	nop			; (mov r8, r8)
200013e8:	46bd      	mov	sp, r7
200013ea:	b003      	add	sp, #12
200013ec:	bd90      	pop	{r4, r7, pc}
200013ee:	46c0      	nop			; (mov r8, r8)
200013f0:	20006fe8 	andcs	r6, r0, r8, ror #31
200013f4:	200033f4 	strdcs	r3, [r0], -r4
200013f8:	2000330c 	andcs	r3, r0, ip, lsl #6
200013fc:	200032dc 	ldrdcs	r3, [r0], -ip
20001400:	200033c4 	andcs	r3, r0, r4, asr #7
20001404:	20003328 	andcs	r3, r0, r8, lsr #6
20001408:	20003388 	andcs	r3, r0, r8, lsl #7
2000140c:	200032c0 	andcs	r3, r0, r0, asr #5
20001410:	20003324 	andcs	r3, r0, r4, lsr #6
20001414:	200032bc 			; <UNDEFINED> instruction: 0x200032bc
20001418:	200033b4 			; <UNDEFINED> instruction: 0x200033b4
2000141c:	20003320 	andcs	r3, r0, r0, lsr #6
20001420:	200033a4 	andcs	r3, r0, r4, lsr #7
20001424:	20003458 	andcs	r3, r0, r8, asr r4
20001428:	20003400 	andcs	r3, r0, r0, lsl #8
2000142c:	20003318 	andcs	r3, r0, r8, lsl r3
20001430:	20003340 	andcs	r3, r0, r0, asr #6
20001434:	2000336c 	andcs	r3, r0, ip, ror #6
20001438:	2000340c 	andcs	r3, r0, ip, lsl #8
2000143c:	2000343c 	andcs	r3, r0, ip, lsr r4
20001440:	2000331c 	andcs	r3, r0, ip, lsl r3
20001444:	200032b8 			; <UNDEFINED> instruction: 0x200032b8
20001448:	20003418 	andcs	r3, r0, r8, lsl r4
2000144c:	200032cc 	andcs	r3, r0, ip, asr #5
20001450:	20003350 	andcs	r3, r0, r0, asr r3
20001454:	20003394 	mulcs	r0, r4, r3
20001458:	20003424 	andcs	r3, r0, r4, lsr #8
2000145c:	20003430 	andcs	r3, r0, r0, lsr r4

20001460 <initSprites>:
Image witch1Image;
Image witch2Image;
Image witch3Image;
Image witch4Image;
Image witchImages[4];
static void initSprites( void ) {	
20001460:	b580      	push	{r7, lr}
20001462:	b08a      	sub	sp, #40	; 0x28
20001464:	af00      	add	r7, sp, #0
	
	sprite *pointer11 = &tempWitchLight;
20001466:	4b33      	ldr	r3, [pc, #204]	; (20001534 <initSprites+0xd4>)
20001468:	627b      	str	r3, [r7, #36]	; 0x24
	load_sprite(pointer11, witch1_light_bits, witch1_black_width, witch1_black_height);
2000146a:	4933      	ldr	r1, [pc, #204]	; (20001538 <initSprites+0xd8>)
2000146c:	6a78      	ldr	r0, [r7, #36]	; 0x24
2000146e:	2312      	movs	r3, #18
20001470:	2212      	movs	r2, #18
20001472:	f001 f847 	bl	20002504 <load_sprite>
	witch1Light = pointer11;
20001476:	4b31      	ldr	r3, [pc, #196]	; (2000153c <initSprites+0xdc>)
20001478:	6a7a      	ldr	r2, [r7, #36]	; 0x24
2000147a:	601a      	str	r2, [r3, #0]
	sprite *pointer12 = &tempWitchGray;
2000147c:	4b30      	ldr	r3, [pc, #192]	; (20001540 <initSprites+0xe0>)
2000147e:	623b      	str	r3, [r7, #32]
	load_sprite(pointer12, witch1_gray_bits, witch1_black_width, witch1_black_height);
20001480:	4930      	ldr	r1, [pc, #192]	; (20001544 <initSprites+0xe4>)
20001482:	6a38      	ldr	r0, [r7, #32]
20001484:	2312      	movs	r3, #18
20001486:	2212      	movs	r2, #18
20001488:	f001 f83c 	bl	20002504 <load_sprite>
	witch1Gray = pointer12;
2000148c:	4b2e      	ldr	r3, [pc, #184]	; (20001548 <initSprites+0xe8>)
2000148e:	6a3a      	ldr	r2, [r7, #32]
20001490:	601a      	str	r2, [r3, #0]
	sprite *pointer13 = &tempWitchBlack;
20001492:	4b2e      	ldr	r3, [pc, #184]	; (2000154c <initSprites+0xec>)
20001494:	61fb      	str	r3, [r7, #28]
	load_sprite(pointer13, witch1_black_bits, witch1_black_width, witch1_black_height);
20001496:	492e      	ldr	r1, [pc, #184]	; (20001550 <initSprites+0xf0>)
20001498:	69f8      	ldr	r0, [r7, #28]
2000149a:	2312      	movs	r3, #18
2000149c:	2212      	movs	r2, #18
2000149e:	f001 f831 	bl	20002504 <load_sprite>
	witch1Black = pointer13;	
200014a2:	4b2c      	ldr	r3, [pc, #176]	; (20001554 <initSprites+0xf4>)
200014a4:	69fa      	ldr	r2, [r7, #28]
200014a6:	601a      	str	r2, [r3, #0]
	
	sprite *pointer14 = &tempWitch2Light;
200014a8:	4b2b      	ldr	r3, [pc, #172]	; (20001558 <initSprites+0xf8>)
200014aa:	61bb      	str	r3, [r7, #24]
	load_sprite(pointer14, witch2_light_bits, witch2_black_width, witch2_black_height);
200014ac:	492b      	ldr	r1, [pc, #172]	; (2000155c <initSprites+0xfc>)
200014ae:	69b8      	ldr	r0, [r7, #24]
200014b0:	2312      	movs	r3, #18
200014b2:	2212      	movs	r2, #18
200014b4:	f001 f826 	bl	20002504 <load_sprite>
	witch2Light = pointer14;
200014b8:	4b29      	ldr	r3, [pc, #164]	; (20001560 <initSprites+0x100>)
200014ba:	69ba      	ldr	r2, [r7, #24]
200014bc:	601a      	str	r2, [r3, #0]
	sprite *pointer15 = &tempWitch2Gray;
200014be:	4b29      	ldr	r3, [pc, #164]	; (20001564 <initSprites+0x104>)
200014c0:	617b      	str	r3, [r7, #20]
	load_sprite(pointer15, witch2_gray_bits, witch2_black_width, witch2_black_height);
200014c2:	4929      	ldr	r1, [pc, #164]	; (20001568 <initSprites+0x108>)
200014c4:	6978      	ldr	r0, [r7, #20]
200014c6:	2312      	movs	r3, #18
200014c8:	2212      	movs	r2, #18
200014ca:	f001 f81b 	bl	20002504 <load_sprite>
	witch2Gray = pointer15;
200014ce:	4b27      	ldr	r3, [pc, #156]	; (2000156c <initSprites+0x10c>)
200014d0:	697a      	ldr	r2, [r7, #20]
200014d2:	601a      	str	r2, [r3, #0]
	sprite *pointer16 = &tempWitch2Black;
200014d4:	4b26      	ldr	r3, [pc, #152]	; (20001570 <initSprites+0x110>)
200014d6:	613b      	str	r3, [r7, #16]
	load_sprite(pointer16, witch2_black_bits, witch2_black_width, witch2_black_height);
200014d8:	4926      	ldr	r1, [pc, #152]	; (20001574 <initSprites+0x114>)
200014da:	6938      	ldr	r0, [r7, #16]
200014dc:	2312      	movs	r3, #18
200014de:	2212      	movs	r2, #18
200014e0:	f001 f810 	bl	20002504 <load_sprite>
	witch2Black = pointer16;
200014e4:	4b24      	ldr	r3, [pc, #144]	; (20001578 <initSprites+0x118>)
200014e6:	693a      	ldr	r2, [r7, #16]
200014e8:	601a      	str	r2, [r3, #0]
	
	
	sprite *finalPointer = &tempWitch3Light;
200014ea:	4b24      	ldr	r3, [pc, #144]	; (2000157c <initSprites+0x11c>)
200014ec:	60fb      	str	r3, [r7, #12]
	load_sprite(finalPointer, witch3_light_bits, witch3_black_width, witch3_black_height);
200014ee:	4924      	ldr	r1, [pc, #144]	; (20001580 <initSprites+0x120>)
200014f0:	68f8      	ldr	r0, [r7, #12]
200014f2:	2312      	movs	r3, #18
200014f4:	2212      	movs	r2, #18
200014f6:	f001 f805 	bl	20002504 <load_sprite>
	witch3Light = finalPointer;
200014fa:	4b22      	ldr	r3, [pc, #136]	; (20001584 <initSprites+0x124>)
200014fc:	68fa      	ldr	r2, [r7, #12]
200014fe:	601a      	str	r2, [r3, #0]
	sprite *pointer17 = &tempWitch3Gray;
20001500:	4b21      	ldr	r3, [pc, #132]	; (20001588 <initSprites+0x128>)
20001502:	60bb      	str	r3, [r7, #8]
	load_sprite(pointer17, witch3_gray_bits, witch3_black_width, witch3_black_height);
20001504:	4921      	ldr	r1, [pc, #132]	; (2000158c <initSprites+0x12c>)
20001506:	68b8      	ldr	r0, [r7, #8]
20001508:	2312      	movs	r3, #18
2000150a:	2212      	movs	r2, #18
2000150c:	f000 fffa 	bl	20002504 <load_sprite>
	witch3Gray = pointer17;
20001510:	4b1f      	ldr	r3, [pc, #124]	; (20001590 <initSprites+0x130>)
20001512:	68ba      	ldr	r2, [r7, #8]
20001514:	601a      	str	r2, [r3, #0]
	sprite *pointer18 = &tempWitch3Black;
20001516:	4b1f      	ldr	r3, [pc, #124]	; (20001594 <initSprites+0x134>)
20001518:	607b      	str	r3, [r7, #4]
	load_sprite(pointer18, witch3_black_bits, witch3_black_width, witch3_black_height);
2000151a:	491f      	ldr	r1, [pc, #124]	; (20001598 <initSprites+0x138>)
2000151c:	6878      	ldr	r0, [r7, #4]
2000151e:	2312      	movs	r3, #18
20001520:	2212      	movs	r2, #18
20001522:	f000 ffef 	bl	20002504 <load_sprite>
	witch3Black = pointer18;	
20001526:	4b1d      	ldr	r3, [pc, #116]	; (2000159c <initSprites+0x13c>)
20001528:	687a      	ldr	r2, [r7, #4]
2000152a:	601a      	str	r2, [r3, #0]
	
}
2000152c:	46c0      	nop			; (mov r8, r8)
2000152e:	46bd      	mov	sp, r7
20001530:	b00a      	add	sp, #40	; 0x28
20001532:	bd80      	pop	{r7, pc}
20001534:	20003544 	andcs	r3, r0, r4, asr #10
20001538:	2000705c 	andcs	r7, r0, ip, asr r0
2000153c:	2000355c 	andcs	r3, r0, ip, asr r5
20001540:	200034d4 	ldrdcs	r3, [r0], -r4
20001544:	20007024 	andcs	r7, r0, r4, lsr #32
20001548:	2000345c 	andcs	r3, r0, ip, asr r4
2000154c:	200034ac 	andcs	r3, r0, ip, lsr #9
20001550:	20006fec 	andcs	r6, r0, ip, ror #31
20001554:	20003530 	andcs	r3, r0, r0, lsr r5
20001558:	20003550 	andcs	r3, r0, r0, asr r5
2000155c:	20007104 	andcs	r7, r0, r4, lsl #2
20001560:	20003460 	andcs	r3, r0, r0, ror #8
20001564:	200034ec 	andcs	r3, r0, ip, ror #9
20001568:	200070cc 	andcs	r7, r0, ip, asr #1
2000156c:	200034d0 	ldrdcs	r3, [r0], -r0
20001570:	200034a0 	andcs	r3, r0, r0, lsr #9
20001574:	20007094 	mulcs	r0, r4, r0
20001578:	2000356c 	andcs	r3, r0, ip, ror #10
2000157c:	200034b8 			; <UNDEFINED> instruction: 0x200034b8
20001580:	200071ac 	andcs	r7, r0, ip, lsr #3
20001584:	20003520 	andcs	r3, r0, r0, lsr #10
20001588:	20003524 	andcs	r3, r0, r4, lsr #10
2000158c:	20007174 	andcs	r7, r0, r4, ror r1
20001590:	20003534 	andcs	r3, r0, r4, lsr r5
20001594:	200034e0 	andcs	r3, r0, r0, ror #9
20001598:	2000713c 	andcs	r7, r0, ip, lsr r1
2000159c:	200034f8 	strdcs	r3, [r0], -r8

200015a0 <init_witch>:
	
void init_witch( GameObject *witchObj ) {
200015a0:	b590      	push	{r4, r7, lr}
200015a2:	b083      	sub	sp, #12
200015a4:	af00      	add	r7, sp, #0
200015a6:	6078      	str	r0, [r7, #4]
	static int firstTime = 1;
	if (firstTime) {
200015a8:	4b29      	ldr	r3, [pc, #164]	; (20001650 <init_witch+0xb0>)
200015aa:	681b      	ldr	r3, [r3, #0]
200015ac:	2b00      	cmp	r3, #0
200015ae:	d03b      	beq.n	20001628 <init_witch+0x88>
		initSprites();
200015b0:	f7ff ff56 	bl	20001460 <initSprites>
		firstTime = 0;			
200015b4:	4b26      	ldr	r3, [pc, #152]	; (20001650 <init_witch+0xb0>)
200015b6:	2200      	movs	r2, #0
200015b8:	601a      	str	r2, [r3, #0]

		witchImages[0] = witch1Image;
200015ba:	4b26      	ldr	r3, [pc, #152]	; (20001654 <init_witch+0xb4>)
200015bc:	4a26      	ldr	r2, [pc, #152]	; (20001658 <init_witch+0xb8>)
200015be:	ca13      	ldmia	r2!, {r0, r1, r4}
200015c0:	c313      	stmia	r3!, {r0, r1, r4}
		witchImages[1] = witch2Image;
200015c2:	4b24      	ldr	r3, [pc, #144]	; (20001654 <init_witch+0xb4>)
200015c4:	4a25      	ldr	r2, [pc, #148]	; (2000165c <init_witch+0xbc>)
200015c6:	330c      	adds	r3, #12
200015c8:	ca13      	ldmia	r2!, {r0, r1, r4}
200015ca:	c313      	stmia	r3!, {r0, r1, r4}
		witchImages[2] = witch3Image;
200015cc:	4b21      	ldr	r3, [pc, #132]	; (20001654 <init_witch+0xb4>)
200015ce:	4a24      	ldr	r2, [pc, #144]	; (20001660 <init_witch+0xc0>)
200015d0:	3318      	adds	r3, #24
200015d2:	ca13      	ldmia	r2!, {r0, r1, r4}
200015d4:	c313      	stmia	r3!, {r0, r1, r4}
		witchImages[3] = witch4Image;
200015d6:	4b1f      	ldr	r3, [pc, #124]	; (20001654 <init_witch+0xb4>)
200015d8:	4a22      	ldr	r2, [pc, #136]	; (20001664 <init_witch+0xc4>)
200015da:	3324      	adds	r3, #36	; 0x24
200015dc:	ca13      	ldmia	r2!, {r0, r1, r4}
200015de:	c313      	stmia	r3!, {r0, r1, r4}
		
		
		load_image(&witchImages[0], witch1Black, witch1Gray, witch1Light);
200015e0:	4b21      	ldr	r3, [pc, #132]	; (20001668 <init_witch+0xc8>)
200015e2:	6819      	ldr	r1, [r3, #0]
200015e4:	4b21      	ldr	r3, [pc, #132]	; (2000166c <init_witch+0xcc>)
200015e6:	681a      	ldr	r2, [r3, #0]
200015e8:	4b21      	ldr	r3, [pc, #132]	; (20001670 <init_witch+0xd0>)
200015ea:	681b      	ldr	r3, [r3, #0]
200015ec:	4819      	ldr	r0, [pc, #100]	; (20001654 <init_witch+0xb4>)
200015ee:	f000 ff75 	bl	200024dc <load_image>
		load_image(&witchImages[1], witch2Black, witch2Gray, witch2Light);
200015f2:	4b20      	ldr	r3, [pc, #128]	; (20001674 <init_witch+0xd4>)
200015f4:	6819      	ldr	r1, [r3, #0]
200015f6:	4b20      	ldr	r3, [pc, #128]	; (20001678 <init_witch+0xd8>)
200015f8:	681a      	ldr	r2, [r3, #0]
200015fa:	4b20      	ldr	r3, [pc, #128]	; (2000167c <init_witch+0xdc>)
200015fc:	681b      	ldr	r3, [r3, #0]
200015fe:	4820      	ldr	r0, [pc, #128]	; (20001680 <init_witch+0xe0>)
20001600:	f000 ff6c 	bl	200024dc <load_image>
		load_image(&witchImages[2], witch3Black, witch3Gray, witch3Light);
20001604:	4b1f      	ldr	r3, [pc, #124]	; (20001684 <init_witch+0xe4>)
20001606:	6819      	ldr	r1, [r3, #0]
20001608:	4b1f      	ldr	r3, [pc, #124]	; (20001688 <init_witch+0xe8>)
2000160a:	681a      	ldr	r2, [r3, #0]
2000160c:	4b1f      	ldr	r3, [pc, #124]	; (2000168c <init_witch+0xec>)
2000160e:	681b      	ldr	r3, [r3, #0]
20001610:	481f      	ldr	r0, [pc, #124]	; (20001690 <init_witch+0xf0>)
20001612:	f000 ff63 	bl	200024dc <load_image>
		load_image(&witchImages[3], witch2Black, witch2Gray, witch2Light);
20001616:	4b17      	ldr	r3, [pc, #92]	; (20001674 <init_witch+0xd4>)
20001618:	6819      	ldr	r1, [r3, #0]
2000161a:	4b17      	ldr	r3, [pc, #92]	; (20001678 <init_witch+0xd8>)
2000161c:	681a      	ldr	r2, [r3, #0]
2000161e:	4b17      	ldr	r3, [pc, #92]	; (2000167c <init_witch+0xdc>)
20001620:	681b      	ldr	r3, [r3, #0]
20001622:	481c      	ldr	r0, [pc, #112]	; (20001694 <init_witch+0xf4>)
20001624:	f000 ff5a 	bl	200024dc <load_image>
		
	}
	
	witchObj->images = witchImages;
20001628:	687b      	ldr	r3, [r7, #4]
2000162a:	4a0a      	ldr	r2, [pc, #40]	; (20001654 <init_witch+0xb4>)
2000162c:	601a      	str	r2, [r3, #0]

	witchObj->current_frame = 0;
2000162e:	687b      	ldr	r3, [r7, #4]
20001630:	2200      	movs	r2, #0
20001632:	615a      	str	r2, [r3, #20]
	witchObj->n_frames = 4;
20001634:	687b      	ldr	r3, [r7, #4]
20001636:	2204      	movs	r2, #4
20001638:	619a      	str	r2, [r3, #24]
	witchObj->animation_speed = 1;
2000163a:	687b      	ldr	r3, [r7, #4]
2000163c:	2201      	movs	r2, #1
2000163e:	61da      	str	r2, [r3, #28]
	witchObj->animation_counter = 0;
20001640:	687b      	ldr	r3, [r7, #4]
20001642:	2200      	movs	r2, #0
20001644:	621a      	str	r2, [r3, #32]
}
20001646:	46c0      	nop			; (mov r8, r8)
20001648:	46bd      	mov	sp, r7
2000164a:	b003      	add	sp, #12
2000164c:	bd90      	pop	{r4, r7, pc}
2000164e:	46c0      	nop			; (mov r8, r8)
20001650:	200071e4 	andcs	r7, r0, r4, ror #3
20001654:	20003464 	andcs	r3, r0, r4, ror #8
20001658:	20003538 	andcs	r3, r0, r8, lsr r5
2000165c:	20003494 	mulcs	r0, r4, r4
20001660:	20003560 	andcs	r3, r0, r0, ror #10
20001664:	200034c4 	andcs	r3, r0, r4, asr #9
20001668:	20003530 	andcs	r3, r0, r0, lsr r5
2000166c:	2000345c 	andcs	r3, r0, ip, asr r4
20001670:	2000355c 	andcs	r3, r0, ip, asr r5
20001674:	2000356c 	andcs	r3, r0, ip, ror #10
20001678:	200034d0 	ldrdcs	r3, [r0], -r0
2000167c:	20003460 	andcs	r3, r0, r0, ror #8
20001680:	20003470 	andcs	r3, r0, r0, ror r4
20001684:	200034f8 	strdcs	r3, [r0], -r8
20001688:	20003534 	andcs	r3, r0, r4, lsr r5
2000168c:	20003520 	andcs	r3, r0, r0, lsr #10
20001690:	2000347c 	andcs	r3, r0, ip, ror r4
20001694:	20003488 	andcs	r3, r0, r8, lsl #9

20001698 <delay_250ns>:
#include "graphics.h"


void delay_250ns(void){
20001698:	b580      	push	{r7, lr}
2000169a:	af00      	add	r7, sp, #0
	/* SystemCoreClock = 168000000 */
	*STK_CTRL = 0;
2000169c:	4b0c      	ldr	r3, [pc, #48]	; (200016d0 <delay_250ns+0x38>)
2000169e:	2200      	movs	r2, #0
200016a0:	601a      	str	r2, [r3, #0]
	*STK_LOAD = ( (168/4) -1);
200016a2:	4b0c      	ldr	r3, [pc, #48]	; (200016d4 <delay_250ns+0x3c>)
200016a4:	2229      	movs	r2, #41	; 0x29
200016a6:	601a      	str	r2, [r3, #0]
	*STK_VAL = 0;
200016a8:	4b0b      	ldr	r3, [pc, #44]	; (200016d8 <delay_250ns+0x40>)
200016aa:	2200      	movs	r2, #0
200016ac:	601a      	str	r2, [r3, #0]
	*STK_CTRL = 5;
200016ae:	4b08      	ldr	r3, [pc, #32]	; (200016d0 <delay_250ns+0x38>)
200016b0:	2205      	movs	r2, #5
200016b2:	601a      	str	r2, [r3, #0]
	while( (*STK_CTRL & 0x10000)== 0 ){}
200016b4:	46c0      	nop			; (mov r8, r8)
200016b6:	4b06      	ldr	r3, [pc, #24]	; (200016d0 <delay_250ns+0x38>)
200016b8:	681a      	ldr	r2, [r3, #0]
200016ba:	2380      	movs	r3, #128	; 0x80
200016bc:	025b      	lsls	r3, r3, #9
200016be:	4013      	ands	r3, r2
200016c0:	d0f9      	beq.n	200016b6 <delay_250ns+0x1e>
	*STK_CTRL = 0;
200016c2:	4b03      	ldr	r3, [pc, #12]	; (200016d0 <delay_250ns+0x38>)
200016c4:	2200      	movs	r2, #0
200016c6:	601a      	str	r2, [r3, #0]
}
200016c8:	46c0      	nop			; (mov r8, r8)
200016ca:	46bd      	mov	sp, r7
200016cc:	bd80      	pop	{r7, pc}
200016ce:	46c0      	nop			; (mov r8, r8)
200016d0:	e000e010 	and	lr, r0, r0, lsl r0
200016d4:	e000e014 	and	lr, r0, r4, lsl r0
200016d8:	e000e018 	and	lr, r0, r8, lsl r0

200016dc <delay_500ns>:

void delay_500ns(void){
200016dc:	b580      	push	{r7, lr}
200016de:	af00      	add	r7, sp, #0
	/* SystemCoreClock = 168000000 */
	*STK_CTRL = 0;
200016e0:	4b0c      	ldr	r3, [pc, #48]	; (20001714 <delay_500ns+0x38>)
200016e2:	2200      	movs	r2, #0
200016e4:	601a      	str	r2, [r3, #0]
	*STK_LOAD = ( (168/2) -1);
200016e6:	4b0c      	ldr	r3, [pc, #48]	; (20001718 <delay_500ns+0x3c>)
200016e8:	2253      	movs	r2, #83	; 0x53
200016ea:	601a      	str	r2, [r3, #0]
	*STK_VAL = 0;
200016ec:	4b0b      	ldr	r3, [pc, #44]	; (2000171c <delay_500ns+0x40>)
200016ee:	2200      	movs	r2, #0
200016f0:	601a      	str	r2, [r3, #0]
	*STK_CTRL = 5;
200016f2:	4b08      	ldr	r3, [pc, #32]	; (20001714 <delay_500ns+0x38>)
200016f4:	2205      	movs	r2, #5
200016f6:	601a      	str	r2, [r3, #0]
	while( (*STK_CTRL & 0x10000)== 0 ){}
200016f8:	46c0      	nop			; (mov r8, r8)
200016fa:	4b06      	ldr	r3, [pc, #24]	; (20001714 <delay_500ns+0x38>)
200016fc:	681a      	ldr	r2, [r3, #0]
200016fe:	2380      	movs	r3, #128	; 0x80
20001700:	025b      	lsls	r3, r3, #9
20001702:	4013      	ands	r3, r2
20001704:	d0f9      	beq.n	200016fa <delay_500ns+0x1e>
	*STK_CTRL = 0;
20001706:	4b03      	ldr	r3, [pc, #12]	; (20001714 <delay_500ns+0x38>)
20001708:	2200      	movs	r2, #0
2000170a:	601a      	str	r2, [r3, #0]
}
2000170c:	46c0      	nop			; (mov r8, r8)
2000170e:	46bd      	mov	sp, r7
20001710:	bd80      	pop	{r7, pc}
20001712:	46c0      	nop			; (mov r8, r8)
20001714:	e000e010 	and	lr, r0, r0, lsl r0
20001718:	e000e014 	and	lr, r0, r4, lsl r0
2000171c:	e000e018 	and	lr, r0, r8, lsl r0

20001720 <delay_micro>:

void delay_micro(unsigned int us){
20001720:	b580      	push	{r7, lr}
20001722:	b082      	sub	sp, #8
20001724:	af00      	add	r7, sp, #0
20001726:	6078      	str	r0, [r7, #4]
	while(us--) {
20001728:	e007      	b.n	2000173a <delay_micro+0x1a>
		delay_250ns();
2000172a:	f7ff ffb5 	bl	20001698 <delay_250ns>
		delay_250ns();
2000172e:	f7ff ffb3 	bl	20001698 <delay_250ns>
		delay_250ns();
20001732:	f7ff ffb1 	bl	20001698 <delay_250ns>
		delay_250ns();
20001736:	f7ff ffaf 	bl	20001698 <delay_250ns>
	while(us--) {
2000173a:	687b      	ldr	r3, [r7, #4]
2000173c:	1e5a      	subs	r2, r3, #1
2000173e:	607a      	str	r2, [r7, #4]
20001740:	2b00      	cmp	r3, #0
20001742:	d1f2      	bne.n	2000172a <delay_micro+0xa>
	}
}
20001744:	46c0      	nop			; (mov r8, r8)
20001746:	46bd      	mov	sp, r7
20001748:	b002      	add	sp, #8
2000174a:	bd80      	pop	{r7, pc}

2000174c <delay_milli>:

void delay_milli(unsigned int ms){
2000174c:	b580      	push	{r7, lr}
2000174e:	b082      	sub	sp, #8
20001750:	af00      	add	r7, sp, #0
20001752:	6078      	str	r0, [r7, #4]
	#ifdef SIMULATOR
		while(ms--)
			delay_micro(1);
	#else
		while(ms--)
20001754:	e004      	b.n	20001760 <delay_milli+0x14>
			delay_micro(1000);
20001756:	23fa      	movs	r3, #250	; 0xfa
20001758:	009b      	lsls	r3, r3, #2
2000175a:	0018      	movs	r0, r3
2000175c:	f7ff ffe0 	bl	20001720 <delay_micro>
		while(ms--)
20001760:	687b      	ldr	r3, [r7, #4]
20001762:	1e5a      	subs	r2, r3, #1
20001764:	607a      	str	r2, [r7, #4]
20001766:	2b00      	cmp	r3, #0
20001768:	d1f5      	bne.n	20001756 <delay_milli+0xa>
	#endif
}
2000176a:	46c0      	nop			; (mov r8, r8)
2000176c:	46bd      	mov	sp, r7
2000176e:	b002      	add	sp, #8
20001770:	bd80      	pop	{r7, pc}

20001772 <clear_thisBackBuffer>:
uint8_t draw_buffer_black_light[1024]; // 128 * 64 / 8
uint8_t draw_buffer_black_gray_light[1024]; // 128 * 64 / 8
uint8_t backBuffer[1024]; // 128 * 64 / 8
uint8_t backBufferGray[1024]; // 128 * 64 / 8
uint8_t backBufferLight[1024]; // 128 * 64 / 8
void clear_thisBackBuffer(uint8_t *buffer) {
20001772:	b580      	push	{r7, lr}
20001774:	b084      	sub	sp, #16
20001776:	af00      	add	r7, sp, #0
20001778:	6078      	str	r0, [r7, #4]
	int i;
	for (i = 0; i < 1024; i++)
2000177a:	2300      	movs	r3, #0
2000177c:	60fb      	str	r3, [r7, #12]
2000177e:	e007      	b.n	20001790 <clear_thisBackBuffer+0x1e>
		buffer[i] = 0;
20001780:	68fb      	ldr	r3, [r7, #12]
20001782:	687a      	ldr	r2, [r7, #4]
20001784:	18d3      	adds	r3, r2, r3
20001786:	2200      	movs	r2, #0
20001788:	701a      	strb	r2, [r3, #0]
	for (i = 0; i < 1024; i++)
2000178a:	68fb      	ldr	r3, [r7, #12]
2000178c:	3301      	adds	r3, #1
2000178e:	60fb      	str	r3, [r7, #12]
20001790:	68fb      	ldr	r3, [r7, #12]
20001792:	4a03      	ldr	r2, [pc, #12]	; (200017a0 <clear_thisBackBuffer+0x2e>)
20001794:	4293      	cmp	r3, r2
20001796:	ddf3      	ble.n	20001780 <clear_thisBackBuffer+0xe>
}
20001798:	46c0      	nop			; (mov r8, r8)
2000179a:	46bd      	mov	sp, r7
2000179c:	b004      	add	sp, #16
2000179e:	bd80      	pop	{r7, pc}
200017a0:	000003ff 	strdeq	r0, [r0], -pc	; <UNPREDICTABLE>

200017a4 <clear_backBuffer>:
void clear_backBuffer() {
200017a4:	b580      	push	{r7, lr}
200017a6:	af00      	add	r7, sp, #0
	clear_thisBackBuffer(backBuffer);
200017a8:	4b03      	ldr	r3, [pc, #12]	; (200017b8 <clear_backBuffer+0x14>)
200017aa:	0018      	movs	r0, r3
200017ac:	f7ff ffe1 	bl	20001772 <clear_thisBackBuffer>
}
200017b0:	46c0      	nop			; (mov r8, r8)
200017b2:	46bd      	mov	sp, r7
200017b4:	bd80      	pop	{r7, pc}
200017b6:	46c0      	nop			; (mov r8, r8)
200017b8:	20003d70 	andcs	r3, r0, r0, ror sp

200017bc <clear_all_backBuffers>:
void clear_all_backBuffers() {
200017bc:	b580      	push	{r7, lr}
200017be:	af00      	add	r7, sp, #0
	clear_thisBackBuffer(backBuffer);
200017c0:	4b07      	ldr	r3, [pc, #28]	; (200017e0 <clear_all_backBuffers+0x24>)
200017c2:	0018      	movs	r0, r3
200017c4:	f7ff ffd5 	bl	20001772 <clear_thisBackBuffer>
	clear_thisBackBuffer(backBufferGray);
200017c8:	4b06      	ldr	r3, [pc, #24]	; (200017e4 <clear_all_backBuffers+0x28>)
200017ca:	0018      	movs	r0, r3
200017cc:	f7ff ffd1 	bl	20001772 <clear_thisBackBuffer>
	clear_thisBackBuffer(backBufferLight);
200017d0:	4b05      	ldr	r3, [pc, #20]	; (200017e8 <clear_all_backBuffers+0x2c>)
200017d2:	0018      	movs	r0, r3
200017d4:	f7ff ffcd 	bl	20001772 <clear_thisBackBuffer>
}
200017d8:	46c0      	nop			; (mov r8, r8)
200017da:	46bd      	mov	sp, r7
200017dc:	bd80      	pop	{r7, pc}
200017de:	46c0      	nop			; (mov r8, r8)
200017e0:	20003d70 	andcs	r3, r0, r0, ror sp
200017e4:	20003570 	andcs	r3, r0, r0, ror r5
200017e8:	20004d70 	andcs	r4, r0, r0, ror sp

200017ec <graphic_ctrl_bit_set>:

/* välj grafik-display och ettställ de bitar som är 1 i x */
static void graphic_ctrl_bit_set( uint8_t x) {
200017ec:	b580      	push	{r7, lr}
200017ee:	b084      	sub	sp, #16
200017f0:	af00      	add	r7, sp, #0
200017f2:	0002      	movs	r2, r0
200017f4:	1dfb      	adds	r3, r7, #7
200017f6:	701a      	strb	r2, [r3, #0]
	uint8_t c;
	c = *portOdrLow;
200017f8:	4a0f      	ldr	r2, [pc, #60]	; (20001838 <graphic_ctrl_bit_set+0x4c>)
200017fa:	230f      	movs	r3, #15
200017fc:	18fb      	adds	r3, r7, r3
200017fe:	7812      	ldrb	r2, [r2, #0]
20001800:	701a      	strb	r2, [r3, #0]
	c |= x;
20001802:	230f      	movs	r3, #15
20001804:	18fb      	adds	r3, r7, r3
20001806:	220f      	movs	r2, #15
20001808:	18b9      	adds	r1, r7, r2
2000180a:	1dfa      	adds	r2, r7, #7
2000180c:	7809      	ldrb	r1, [r1, #0]
2000180e:	7812      	ldrb	r2, [r2, #0]
20001810:	430a      	orrs	r2, r1
20001812:	701a      	strb	r2, [r3, #0]
	c &= ~B_SELECT; //Graphic display istället för alphanum
20001814:	230f      	movs	r3, #15
20001816:	18fb      	adds	r3, r7, r3
20001818:	220f      	movs	r2, #15
2000181a:	18ba      	adds	r2, r7, r2
2000181c:	7812      	ldrb	r2, [r2, #0]
2000181e:	2104      	movs	r1, #4
20001820:	438a      	bics	r2, r1
20001822:	701a      	strb	r2, [r3, #0]
	*portOdrLow = c;
20001824:	4a04      	ldr	r2, [pc, #16]	; (20001838 <graphic_ctrl_bit_set+0x4c>)
20001826:	230f      	movs	r3, #15
20001828:	18fb      	adds	r3, r7, r3
2000182a:	781b      	ldrb	r3, [r3, #0]
2000182c:	7013      	strb	r3, [r2, #0]
}
2000182e:	46c0      	nop			; (mov r8, r8)
20001830:	46bd      	mov	sp, r7
20001832:	b004      	add	sp, #16
20001834:	bd80      	pop	{r7, pc}
20001836:	46c0      	nop			; (mov r8, r8)
20001838:	40021014 	andmi	r1, r2, r4, lsl r0

2000183c <graphic_ctrl_bit_clear>:
/* välj grafik-display och nollställ de bitar som är 1 i x */
static void graphic_ctrl_bit_clear( uint8_t x) {
2000183c:	b580      	push	{r7, lr}
2000183e:	b084      	sub	sp, #16
20001840:	af00      	add	r7, sp, #0
20001842:	0002      	movs	r2, r0
20001844:	1dfb      	adds	r3, r7, #7
20001846:	701a      	strb	r2, [r3, #0]
	uint8_t c;
	c = *portOdrLow;
20001848:	4a11      	ldr	r2, [pc, #68]	; (20001890 <graphic_ctrl_bit_clear+0x54>)
2000184a:	230f      	movs	r3, #15
2000184c:	18fb      	adds	r3, r7, r3
2000184e:	7812      	ldrb	r2, [r2, #0]
20001850:	701a      	strb	r2, [r3, #0]
	c &= ~x;
20001852:	1dfb      	adds	r3, r7, #7
20001854:	781b      	ldrb	r3, [r3, #0]
20001856:	b25b      	sxtb	r3, r3
20001858:	43db      	mvns	r3, r3
2000185a:	b25b      	sxtb	r3, r3
2000185c:	220f      	movs	r2, #15
2000185e:	18ba      	adds	r2, r7, r2
20001860:	7812      	ldrb	r2, [r2, #0]
20001862:	b252      	sxtb	r2, r2
20001864:	4013      	ands	r3, r2
20001866:	b25a      	sxtb	r2, r3
20001868:	230f      	movs	r3, #15
2000186a:	18fb      	adds	r3, r7, r3
2000186c:	701a      	strb	r2, [r3, #0]
	c &= ~B_SELECT; //Graphic display istället för alphanum
2000186e:	230f      	movs	r3, #15
20001870:	18fb      	adds	r3, r7, r3
20001872:	220f      	movs	r2, #15
20001874:	18ba      	adds	r2, r7, r2
20001876:	7812      	ldrb	r2, [r2, #0]
20001878:	2104      	movs	r1, #4
2000187a:	438a      	bics	r2, r1
2000187c:	701a      	strb	r2, [r3, #0]
	*portOdrLow = c;
2000187e:	4a04      	ldr	r2, [pc, #16]	; (20001890 <graphic_ctrl_bit_clear+0x54>)
20001880:	230f      	movs	r3, #15
20001882:	18fb      	adds	r3, r7, r3
20001884:	781b      	ldrb	r3, [r3, #0]
20001886:	7013      	strb	r3, [r2, #0]
}
20001888:	46c0      	nop			; (mov r8, r8)
2000188a:	46bd      	mov	sp, r7
2000188c:	b004      	add	sp, #16
2000188e:	bd80      	pop	{r7, pc}
20001890:	40021014 	andmi	r1, r2, r4, lsl r0

20001894 <select_controller>:
void select_controller( uint8_t controller) {
20001894:	b580      	push	{r7, lr}
20001896:	b082      	sub	sp, #8
20001898:	af00      	add	r7, sp, #0
2000189a:	0002      	movs	r2, r0
2000189c:	1dfb      	adds	r3, r7, #7
2000189e:	701a      	strb	r2, [r3, #0]
	switch (controller) {
200018a0:	1dfb      	adds	r3, r7, #7
200018a2:	781b      	ldrb	r3, [r3, #0]
200018a4:	2b08      	cmp	r3, #8
200018a6:	d00f      	beq.n	200018c8 <select_controller+0x34>
200018a8:	dc02      	bgt.n	200018b0 <select_controller+0x1c>
200018aa:	2b00      	cmp	r3, #0
200018ac:	d005      	beq.n	200018ba <select_controller+0x26>
		case (B_CS1|B_CS2): 
			graphic_ctrl_bit_set(B_CS1); 
			graphic_ctrl_bit_set(B_CS2); 
			break;
	}
}
200018ae:	e020      	b.n	200018f2 <select_controller+0x5e>
	switch (controller) {
200018b0:	2b10      	cmp	r3, #16
200018b2:	d010      	beq.n	200018d6 <select_controller+0x42>
200018b4:	2b18      	cmp	r3, #24
200018b6:	d015      	beq.n	200018e4 <select_controller+0x50>
}
200018b8:	e01b      	b.n	200018f2 <select_controller+0x5e>
			graphic_ctrl_bit_clear(B_CS1); 
200018ba:	2008      	movs	r0, #8
200018bc:	f7ff ffbe 	bl	2000183c <graphic_ctrl_bit_clear>
			graphic_ctrl_bit_clear(B_CS2); 
200018c0:	2010      	movs	r0, #16
200018c2:	f7ff ffbb 	bl	2000183c <graphic_ctrl_bit_clear>
			break;
200018c6:	e014      	b.n	200018f2 <select_controller+0x5e>
			graphic_ctrl_bit_set(B_CS1); 
200018c8:	2008      	movs	r0, #8
200018ca:	f7ff ff8f 	bl	200017ec <graphic_ctrl_bit_set>
			graphic_ctrl_bit_clear(B_CS2); 
200018ce:	2010      	movs	r0, #16
200018d0:	f7ff ffb4 	bl	2000183c <graphic_ctrl_bit_clear>
			break;
200018d4:	e00d      	b.n	200018f2 <select_controller+0x5e>
			graphic_ctrl_bit_clear(B_CS1); 
200018d6:	2008      	movs	r0, #8
200018d8:	f7ff ffb0 	bl	2000183c <graphic_ctrl_bit_clear>
			graphic_ctrl_bit_set(B_CS2); 
200018dc:	2010      	movs	r0, #16
200018de:	f7ff ff85 	bl	200017ec <graphic_ctrl_bit_set>
			break;
200018e2:	e006      	b.n	200018f2 <select_controller+0x5e>
			graphic_ctrl_bit_set(B_CS1); 
200018e4:	2008      	movs	r0, #8
200018e6:	f7ff ff81 	bl	200017ec <graphic_ctrl_bit_set>
			graphic_ctrl_bit_set(B_CS2); 
200018ea:	2010      	movs	r0, #16
200018ec:	f7ff ff7e 	bl	200017ec <graphic_ctrl_bit_set>
			break;
200018f0:	46c0      	nop			; (mov r8, r8)
}
200018f2:	46c0      	nop			; (mov r8, r8)
200018f4:	46bd      	mov	sp, r7
200018f6:	b002      	add	sp, #8
200018f8:	bd80      	pop	{r7, pc}

200018fa <graphic_wait_ready>:

void graphic_wait_ready( void ) {
200018fa:	b580      	push	{r7, lr}
200018fc:	b082      	sub	sp, #8
200018fe:	af00      	add	r7, sp, #0
	uint8_t c;
	graphic_ctrl_bit_clear(B_E);
20001900:	2040      	movs	r0, #64	; 0x40
20001902:	f7ff ff9b 	bl	2000183c <graphic_ctrl_bit_clear>
	*portModer = 0x00005555;
20001906:	4b14      	ldr	r3, [pc, #80]	; (20001958 <graphic_wait_ready+0x5e>)
20001908:	4a14      	ldr	r2, [pc, #80]	; (2000195c <graphic_wait_ready+0x62>)
2000190a:	601a      	str	r2, [r3, #0]
	graphic_ctrl_bit_clear(B_RS);
2000190c:	2001      	movs	r0, #1
2000190e:	f7ff ff95 	bl	2000183c <graphic_ctrl_bit_clear>
	graphic_ctrl_bit_set(B_RW);
20001912:	2002      	movs	r0, #2
20001914:	f7ff ff6a 	bl	200017ec <graphic_ctrl_bit_set>
	delay_500ns();
20001918:	f7ff fee0 	bl	200016dc <delay_500ns>
	
	while(1) {
		graphic_ctrl_bit_set(B_E);
2000191c:	2040      	movs	r0, #64	; 0x40
2000191e:	f7ff ff65 	bl	200017ec <graphic_ctrl_bit_set>
		delay_500ns();
20001922:	f7ff fedb 	bl	200016dc <delay_500ns>
		c = *portIdrHigh & LCD_BUSY; //...
20001926:	4b0e      	ldr	r3, [pc, #56]	; (20001960 <graphic_wait_ready+0x66>)
20001928:	781b      	ldrb	r3, [r3, #0]
2000192a:	b2da      	uxtb	r2, r3
2000192c:	1dfb      	adds	r3, r7, #7
2000192e:	217f      	movs	r1, #127	; 0x7f
20001930:	438a      	bics	r2, r1
20001932:	701a      	strb	r2, [r3, #0]
		graphic_ctrl_bit_clear(B_E);
20001934:	2040      	movs	r0, #64	; 0x40
20001936:	f7ff ff81 	bl	2000183c <graphic_ctrl_bit_clear>
		delay_500ns();
2000193a:	f7ff fecf 	bl	200016dc <delay_500ns>
		/*if (*portIdrHigh & 0x80 == 0x80) {
			break; }*/
		if (c == 0) break;
2000193e:	1dfb      	adds	r3, r7, #7
20001940:	781b      	ldrb	r3, [r3, #0]
20001942:	2b00      	cmp	r3, #0
20001944:	d000      	beq.n	20001948 <graphic_wait_ready+0x4e>
		graphic_ctrl_bit_set(B_E);
20001946:	e7e9      	b.n	2000191c <graphic_wait_ready+0x22>
		if (c == 0) break;
20001948:	46c0      	nop			; (mov r8, r8)
	}
	//graphic_ctrl_bit_set(B_E); //<--
	*portModer = 0x55555555;	
2000194a:	4b03      	ldr	r3, [pc, #12]	; (20001958 <graphic_wait_ready+0x5e>)
2000194c:	4a05      	ldr	r2, [pc, #20]	; (20001964 <graphic_wait_ready+0x6a>)
2000194e:	601a      	str	r2, [r3, #0]
}
20001950:	46c0      	nop			; (mov r8, r8)
20001952:	46bd      	mov	sp, r7
20001954:	b002      	add	sp, #8
20001956:	bd80      	pop	{r7, pc}
20001958:	40021000 	andmi	r1, r2, r0
2000195c:	00005555 	andeq	r5, r0, r5, asr r5
20001960:	40021011 	andmi	r1, r2, r1, lsl r0
20001964:	55555555 	ldrbpl	r5, [r5, #-1365]	; 0xfffffaab

20001968 <graphic_read>:

static uint8_t graphic_read(uint8_t controller) {
20001968:	b580      	push	{r7, lr}
2000196a:	b084      	sub	sp, #16
2000196c:	af00      	add	r7, sp, #0
2000196e:	0002      	movs	r2, r0
20001970:	1dfb      	adds	r3, r7, #7
20001972:	701a      	strb	r2, [r3, #0]
	graphic_ctrl_bit_clear(B_E);
20001974:	2040      	movs	r0, #64	; 0x40
20001976:	f7ff ff61 	bl	2000183c <graphic_ctrl_bit_clear>
	*portModer = 0x00005555;
2000197a:	4b1c      	ldr	r3, [pc, #112]	; (200019ec <graphic_read+0x84>)
2000197c:	4a1c      	ldr	r2, [pc, #112]	; (200019f0 <graphic_read+0x88>)
2000197e:	601a      	str	r2, [r3, #0]
	graphic_ctrl_bit_set(B_RS);
20001980:	2001      	movs	r0, #1
20001982:	f7ff ff33 	bl	200017ec <graphic_ctrl_bit_set>
	graphic_ctrl_bit_set(B_RW);
20001986:	2002      	movs	r0, #2
20001988:	f7ff ff30 	bl	200017ec <graphic_ctrl_bit_set>
	select_controller(controller);
2000198c:	1dfb      	adds	r3, r7, #7
2000198e:	781b      	ldrb	r3, [r3, #0]
20001990:	0018      	movs	r0, r3
20001992:	f7ff ff7f 	bl	20001894 <select_controller>
	delay_500ns();
20001996:	f7ff fea1 	bl	200016dc <delay_500ns>
	graphic_ctrl_bit_set(B_E);
2000199a:	2040      	movs	r0, #64	; 0x40
2000199c:	f7ff ff26 	bl	200017ec <graphic_ctrl_bit_set>
	delay_500ns();
200019a0:	f7ff fe9c 	bl	200016dc <delay_500ns>
	unsigned char rv = *portIdrHigh;
200019a4:	4a13      	ldr	r2, [pc, #76]	; (200019f4 <graphic_read+0x8c>)
200019a6:	230f      	movs	r3, #15
200019a8:	18fb      	adds	r3, r7, r3
200019aa:	7812      	ldrb	r2, [r2, #0]
200019ac:	701a      	strb	r2, [r3, #0]
	graphic_ctrl_bit_clear(B_E);
200019ae:	2040      	movs	r0, #64	; 0x40
200019b0:	f7ff ff44 	bl	2000183c <graphic_ctrl_bit_clear>
	*portModer = 0x55555555;
200019b4:	4b0d      	ldr	r3, [pc, #52]	; (200019ec <graphic_read+0x84>)
200019b6:	4a10      	ldr	r2, [pc, #64]	; (200019f8 <graphic_read+0x90>)
200019b8:	601a      	str	r2, [r3, #0]
	
	if(controller == B_CS1) {
200019ba:	1dfb      	adds	r3, r7, #7
200019bc:	781b      	ldrb	r3, [r3, #0]
200019be:	2b08      	cmp	r3, #8
200019c0:	d104      	bne.n	200019cc <graphic_read+0x64>
		select_controller(B_CS1);
200019c2:	2008      	movs	r0, #8
200019c4:	f7ff ff66 	bl	20001894 <select_controller>
		graphic_wait_ready();
200019c8:	f7ff ff97 	bl	200018fa <graphic_wait_ready>
	}
	if(controller == B_CS2) {
200019cc:	1dfb      	adds	r3, r7, #7
200019ce:	781b      	ldrb	r3, [r3, #0]
200019d0:	2b10      	cmp	r3, #16
200019d2:	d104      	bne.n	200019de <graphic_read+0x76>
		select_controller(B_CS2);
200019d4:	2010      	movs	r0, #16
200019d6:	f7ff ff5d 	bl	20001894 <select_controller>
		graphic_wait_ready();
200019da:	f7ff ff8e 	bl	200018fa <graphic_wait_ready>
	}
	
	return rv;
200019de:	230f      	movs	r3, #15
200019e0:	18fb      	adds	r3, r7, r3
200019e2:	781b      	ldrb	r3, [r3, #0]
}
200019e4:	0018      	movs	r0, r3
200019e6:	46bd      	mov	sp, r7
200019e8:	b004      	add	sp, #16
200019ea:	bd80      	pop	{r7, pc}
200019ec:	40021000 	andmi	r1, r2, r0
200019f0:	00005555 	andeq	r5, r0, r5, asr r5
200019f4:	40021011 	andmi	r1, r2, r1, lsl r0
200019f8:	55555555 	ldrbpl	r5, [r5, #-1365]	; 0xfffffaab

200019fc <graphic_read_data>:

graphic_read_data(uint8_t controller) {
200019fc:	b580      	push	{r7, lr}
200019fe:	b082      	sub	sp, #8
20001a00:	af00      	add	r7, sp, #0
20001a02:	0002      	movs	r2, r0
20001a04:	1dfb      	adds	r3, r7, #7
20001a06:	701a      	strb	r2, [r3, #0]
	graphic_read(controller);
20001a08:	1dfb      	adds	r3, r7, #7
20001a0a:	781b      	ldrb	r3, [r3, #0]
20001a0c:	0018      	movs	r0, r3
20001a0e:	f7ff ffab 	bl	20001968 <graphic_read>
	graphic_read(controller);
20001a12:	1dfb      	adds	r3, r7, #7
20001a14:	781b      	ldrb	r3, [r3, #0]
20001a16:	0018      	movs	r0, r3
20001a18:	f7ff ffa6 	bl	20001968 <graphic_read>
}
20001a1c:	46c0      	nop			; (mov r8, r8)
20001a1e:	0018      	movs	r0, r3
20001a20:	46bd      	mov	sp, r7
20001a22:	b002      	add	sp, #8
20001a24:	bd80      	pop	{r7, pc}

20001a26 <graphic_write>:

void graphic_write(uint8_t value, uint8_t controller) {
20001a26:	b580      	push	{r7, lr}
20001a28:	b082      	sub	sp, #8
20001a2a:	af00      	add	r7, sp, #0
20001a2c:	0002      	movs	r2, r0
20001a2e:	1dfb      	adds	r3, r7, #7
20001a30:	701a      	strb	r2, [r3, #0]
20001a32:	1dbb      	adds	r3, r7, #6
20001a34:	1c0a      	adds	r2, r1, #0
20001a36:	701a      	strb	r2, [r3, #0]
	*portOdrHigh = value; //I
20001a38:	4a19      	ldr	r2, [pc, #100]	; (20001aa0 <graphic_write+0x7a>)
20001a3a:	1dfb      	adds	r3, r7, #7
20001a3c:	781b      	ldrb	r3, [r3, #0]
20001a3e:	7013      	strb	r3, [r2, #0]
	select_controller(controller);
20001a40:	1dbb      	adds	r3, r7, #6
20001a42:	781b      	ldrb	r3, [r3, #0]
20001a44:	0018      	movs	r0, r3
20001a46:	f7ff ff25 	bl	20001894 <select_controller>
	delay_500ns();
20001a4a:	f7ff fe47 	bl	200016dc <delay_500ns>
	graphic_ctrl_bit_set(B_E);
20001a4e:	2040      	movs	r0, #64	; 0x40
20001a50:	f7ff fecc 	bl	200017ec <graphic_ctrl_bit_set>
	delay_500ns();
20001a54:	f7ff fe42 	bl	200016dc <delay_500ns>
	graphic_ctrl_bit_clear(B_E);
20001a58:	2040      	movs	r0, #64	; 0x40
20001a5a:	f7ff feef 	bl	2000183c <graphic_ctrl_bit_clear>
	
	if(controller & B_CS1) {
20001a5e:	1dbb      	adds	r3, r7, #6
20001a60:	781b      	ldrb	r3, [r3, #0]
20001a62:	2208      	movs	r2, #8
20001a64:	4013      	ands	r3, r2
20001a66:	d004      	beq.n	20001a72 <graphic_write+0x4c>
		select_controller(B_CS1);
20001a68:	2008      	movs	r0, #8
20001a6a:	f7ff ff13 	bl	20001894 <select_controller>
		graphic_wait_ready();
20001a6e:	f7ff ff44 	bl	200018fa <graphic_wait_ready>
	}
	if(controller & B_CS2) {
20001a72:	1dbb      	adds	r3, r7, #6
20001a74:	781b      	ldrb	r3, [r3, #0]
20001a76:	2210      	movs	r2, #16
20001a78:	4013      	ands	r3, r2
20001a7a:	d004      	beq.n	20001a86 <graphic_write+0x60>
		select_controller(B_CS2);
20001a7c:	2010      	movs	r0, #16
20001a7e:	f7ff ff09 	bl	20001894 <select_controller>
		graphic_wait_ready();
20001a82:	f7ff ff3a 	bl	200018fa <graphic_wait_ready>
	}
	
	*portOdrHigh = 0;	//I
20001a86:	4b06      	ldr	r3, [pc, #24]	; (20001aa0 <graphic_write+0x7a>)
20001a88:	2200      	movs	r2, #0
20001a8a:	701a      	strb	r2, [r3, #0]
	graphic_ctrl_bit_set(B_E);
20001a8c:	2040      	movs	r0, #64	; 0x40
20001a8e:	f7ff fead 	bl	200017ec <graphic_ctrl_bit_set>
	select_controller(0);
20001a92:	2000      	movs	r0, #0
20001a94:	f7ff fefe 	bl	20001894 <select_controller>
}
20001a98:	46c0      	nop			; (mov r8, r8)
20001a9a:	46bd      	mov	sp, r7
20001a9c:	b002      	add	sp, #8
20001a9e:	bd80      	pop	{r7, pc}
20001aa0:	40021015 	andmi	r1, r2, r5, lsl r0

20001aa4 <graphic_write_command>:
void graphic_write_command(uint8_t command, uint8_t controller) {
20001aa4:	b580      	push	{r7, lr}
20001aa6:	b082      	sub	sp, #8
20001aa8:	af00      	add	r7, sp, #0
20001aaa:	0002      	movs	r2, r0
20001aac:	1dfb      	adds	r3, r7, #7
20001aae:	701a      	strb	r2, [r3, #0]
20001ab0:	1dbb      	adds	r3, r7, #6
20001ab2:	1c0a      	adds	r2, r1, #0
20001ab4:	701a      	strb	r2, [r3, #0]
	graphic_ctrl_bit_clear(B_E);
20001ab6:	2040      	movs	r0, #64	; 0x40
20001ab8:	f7ff fec0 	bl	2000183c <graphic_ctrl_bit_clear>
	select_controller(controller);
20001abc:	1dbb      	adds	r3, r7, #6
20001abe:	781b      	ldrb	r3, [r3, #0]
20001ac0:	0018      	movs	r0, r3
20001ac2:	f7ff fee7 	bl	20001894 <select_controller>
	graphic_ctrl_bit_clear(B_RS);
20001ac6:	2001      	movs	r0, #1
20001ac8:	f7ff feb8 	bl	2000183c <graphic_ctrl_bit_clear>
	graphic_ctrl_bit_clear(B_RW);
20001acc:	2002      	movs	r0, #2
20001ace:	f7ff feb5 	bl	2000183c <graphic_ctrl_bit_clear>
	graphic_write(command, controller);
20001ad2:	1dbb      	adds	r3, r7, #6
20001ad4:	781a      	ldrb	r2, [r3, #0]
20001ad6:	1dfb      	adds	r3, r7, #7
20001ad8:	781b      	ldrb	r3, [r3, #0]
20001ada:	0011      	movs	r1, r2
20001adc:	0018      	movs	r0, r3
20001ade:	f7ff ffa2 	bl	20001a26 <graphic_write>
}
20001ae2:	46c0      	nop			; (mov r8, r8)
20001ae4:	46bd      	mov	sp, r7
20001ae6:	b002      	add	sp, #8
20001ae8:	bd80      	pop	{r7, pc}

20001aea <graphic_write_data>:
void graphic_write_data(uint8_t command, uint8_t controller) {
20001aea:	b580      	push	{r7, lr}
20001aec:	b082      	sub	sp, #8
20001aee:	af00      	add	r7, sp, #0
20001af0:	0002      	movs	r2, r0
20001af2:	1dfb      	adds	r3, r7, #7
20001af4:	701a      	strb	r2, [r3, #0]
20001af6:	1dbb      	adds	r3, r7, #6
20001af8:	1c0a      	adds	r2, r1, #0
20001afa:	701a      	strb	r2, [r3, #0]
	graphic_ctrl_bit_clear(B_E);
20001afc:	2040      	movs	r0, #64	; 0x40
20001afe:	f7ff fe9d 	bl	2000183c <graphic_ctrl_bit_clear>
	select_controller(controller);
20001b02:	1dbb      	adds	r3, r7, #6
20001b04:	781b      	ldrb	r3, [r3, #0]
20001b06:	0018      	movs	r0, r3
20001b08:	f7ff fec4 	bl	20001894 <select_controller>
	graphic_ctrl_bit_set(B_RS);
20001b0c:	2001      	movs	r0, #1
20001b0e:	f7ff fe6d 	bl	200017ec <graphic_ctrl_bit_set>
	graphic_ctrl_bit_clear(B_RW);
20001b12:	2002      	movs	r0, #2
20001b14:	f7ff fe92 	bl	2000183c <graphic_ctrl_bit_clear>
	graphic_write(command, controller);
20001b18:	1dbb      	adds	r3, r7, #6
20001b1a:	781a      	ldrb	r2, [r3, #0]
20001b1c:	1dfb      	adds	r3, r7, #7
20001b1e:	781b      	ldrb	r3, [r3, #0]
20001b20:	0011      	movs	r1, r2
20001b22:	0018      	movs	r0, r3
20001b24:	f7ff ff7f 	bl	20001a26 <graphic_write>
}
20001b28:	46c0      	nop			; (mov r8, r8)
20001b2a:	46bd      	mov	sp, r7
20001b2c:	b002      	add	sp, #8
20001b2e:	bd80      	pop	{r7, pc}

20001b30 <graphic_initialize>:

void graphic_initialize( void ) {
20001b30:	b580      	push	{r7, lr}
20001b32:	af00      	add	r7, sp, #0
	graphic_ctrl_bit_set(B_E);
20001b34:	2040      	movs	r0, #64	; 0x40
20001b36:	f7ff fe59 	bl	200017ec <graphic_ctrl_bit_set>
	delay_micro(10);
20001b3a:	200a      	movs	r0, #10
20001b3c:	f7ff fdf0 	bl	20001720 <delay_micro>
	
	graphic_ctrl_bit_clear(B_CS1);
20001b40:	2008      	movs	r0, #8
20001b42:	f7ff fe7b 	bl	2000183c <graphic_ctrl_bit_clear>
	graphic_ctrl_bit_clear(B_CS2);
20001b46:	2010      	movs	r0, #16
20001b48:	f7ff fe78 	bl	2000183c <graphic_ctrl_bit_clear>
	graphic_ctrl_bit_clear(B_RST);
20001b4c:	2020      	movs	r0, #32
20001b4e:	f7ff fe75 	bl	2000183c <graphic_ctrl_bit_clear>
	graphic_ctrl_bit_clear(B_E);
20001b52:	2040      	movs	r0, #64	; 0x40
20001b54:	f7ff fe72 	bl	2000183c <graphic_ctrl_bit_clear>
	//#define SIMULATOR
	delay_milli(30);
20001b58:	201e      	movs	r0, #30
20001b5a:	f7ff fdf7 	bl	2000174c <delay_milli>
	graphic_ctrl_bit_set(B_RST);
20001b5e:	2020      	movs	r0, #32
20001b60:	f7ff fe44 	bl	200017ec <graphic_ctrl_bit_set>
	delay_milli(100); //...
20001b64:	2064      	movs	r0, #100	; 0x64
20001b66:	f7ff fdf1 	bl	2000174c <delay_milli>
	
	graphic_write_command(LCD_OFF, B_CS1|B_CS2);
20001b6a:	2118      	movs	r1, #24
20001b6c:	203e      	movs	r0, #62	; 0x3e
20001b6e:	f7ff ff99 	bl	20001aa4 <graphic_write_command>
	graphic_write_command(LCD_ON, B_CS1|B_CS2);
20001b72:	2118      	movs	r1, #24
20001b74:	203f      	movs	r0, #63	; 0x3f
20001b76:	f7ff ff95 	bl	20001aa4 <graphic_write_command>
	graphic_write_command(LCD_DISP_START, B_CS1|B_CS2);
20001b7a:	2118      	movs	r1, #24
20001b7c:	20c0      	movs	r0, #192	; 0xc0
20001b7e:	f7ff ff91 	bl	20001aa4 <graphic_write_command>
	graphic_write_command(LCD_SET_ADD, B_CS1|B_CS2);
20001b82:	2118      	movs	r1, #24
20001b84:	2040      	movs	r0, #64	; 0x40
20001b86:	f7ff ff8d 	bl	20001aa4 <graphic_write_command>
	graphic_write_command(LCD_SET_PAGE, B_CS1|B_CS2);
20001b8a:	2118      	movs	r1, #24
20001b8c:	20b8      	movs	r0, #184	; 0xb8
20001b8e:	f7ff ff89 	bl	20001aa4 <graphic_write_command>
	select_controller(0);
20001b92:	2000      	movs	r0, #0
20001b94:	f7ff fe7e 	bl	20001894 <select_controller>
}
20001b98:	46c0      	nop			; (mov r8, r8)
20001b9a:	46bd      	mov	sp, r7
20001b9c:	bd80      	pop	{r7, pc}

20001b9e <graphic_clear_screen>:
void graphic_clear_screen( void ) {	//Annat i slidesen
20001b9e:	b580      	push	{r7, lr}
20001ba0:	b082      	sub	sp, #8
20001ba2:	af00      	add	r7, sp, #0
	uint8_t page;
	for (page = 0; page < 8; page++) {
20001ba4:	1dfb      	adds	r3, r7, #7
20001ba6:	2200      	movs	r2, #0
20001ba8:	701a      	strb	r2, [r3, #0]
20001baa:	e023      	b.n	20001bf4 <graphic_clear_screen+0x56>
		graphic_write_command(LCD_SET_PAGE | page, B_CS1|B_CS2);
20001bac:	1dfb      	adds	r3, r7, #7
20001bae:	781b      	ldrb	r3, [r3, #0]
20001bb0:	2248      	movs	r2, #72	; 0x48
20001bb2:	4252      	negs	r2, r2
20001bb4:	4313      	orrs	r3, r2
20001bb6:	b2db      	uxtb	r3, r3
20001bb8:	2118      	movs	r1, #24
20001bba:	0018      	movs	r0, r3
20001bbc:	f7ff ff72 	bl	20001aa4 <graphic_write_command>
		graphic_write_command(LCD_SET_ADD | 0, B_CS1|B_CS2);
20001bc0:	2118      	movs	r1, #24
20001bc2:	2040      	movs	r0, #64	; 0x40
20001bc4:	f7ff ff6e 	bl	20001aa4 <graphic_write_command>
		uint8_t add;
		for (add = 0; add < 64; add++) {
20001bc8:	1dbb      	adds	r3, r7, #6
20001bca:	2200      	movs	r2, #0
20001bcc:	701a      	strb	r2, [r3, #0]
20001bce:	e008      	b.n	20001be2 <graphic_clear_screen+0x44>
			graphic_write_data(0, B_CS1|B_CS2);
20001bd0:	2118      	movs	r1, #24
20001bd2:	2000      	movs	r0, #0
20001bd4:	f7ff ff89 	bl	20001aea <graphic_write_data>
		for (add = 0; add < 64; add++) {
20001bd8:	1dbb      	adds	r3, r7, #6
20001bda:	781a      	ldrb	r2, [r3, #0]
20001bdc:	1dbb      	adds	r3, r7, #6
20001bde:	3201      	adds	r2, #1
20001be0:	701a      	strb	r2, [r3, #0]
20001be2:	1dbb      	adds	r3, r7, #6
20001be4:	781b      	ldrb	r3, [r3, #0]
20001be6:	2b3f      	cmp	r3, #63	; 0x3f
20001be8:	d9f2      	bls.n	20001bd0 <graphic_clear_screen+0x32>
	for (page = 0; page < 8; page++) {
20001bea:	1dfb      	adds	r3, r7, #7
20001bec:	781a      	ldrb	r2, [r3, #0]
20001bee:	1dfb      	adds	r3, r7, #7
20001bf0:	3201      	adds	r2, #1
20001bf2:	701a      	strb	r2, [r3, #0]
20001bf4:	1dfb      	adds	r3, r7, #7
20001bf6:	781b      	ldrb	r3, [r3, #0]
20001bf8:	2b07      	cmp	r3, #7
20001bfa:	d9d7      	bls.n	20001bac <graphic_clear_screen+0xe>
		}
	}
}
20001bfc:	46c0      	nop			; (mov r8, r8)
20001bfe:	46bd      	mov	sp, r7
20001c00:	b002      	add	sp, #8
20001c02:	bd80      	pop	{r7, pc}

20001c04 <pixel>:

/** Color: 1=light 2=gray 3=black*/
void pixel(int x, int y, int set, int color) {
20001c04:	b580      	push	{r7, lr}
20001c06:	b086      	sub	sp, #24
20001c08:	af00      	add	r7, sp, #0
20001c0a:	60f8      	str	r0, [r7, #12]
20001c0c:	60b9      	str	r1, [r7, #8]
20001c0e:	607a      	str	r2, [r7, #4]
20001c10:	603b      	str	r3, [r7, #0]
	uint8_t mask;
	int index = 0;
20001c12:	2300      	movs	r3, #0
20001c14:	613b      	str	r3, [r7, #16]
	if( (x > 128 ) || (x < 1) || (y > 64) || (y < 1) ) 
20001c16:	68fb      	ldr	r3, [r7, #12]
20001c18:	2b80      	cmp	r3, #128	; 0x80
20001c1a:	dd00      	ble.n	20001c1e <pixel+0x1a>
20001c1c:	e0a6      	b.n	20001d6c <pixel+0x168>
20001c1e:	68fb      	ldr	r3, [r7, #12]
20001c20:	2b00      	cmp	r3, #0
20001c22:	dc00      	bgt.n	20001c26 <pixel+0x22>
20001c24:	e0a2      	b.n	20001d6c <pixel+0x168>
20001c26:	68bb      	ldr	r3, [r7, #8]
20001c28:	2b40      	cmp	r3, #64	; 0x40
20001c2a:	dd00      	ble.n	20001c2e <pixel+0x2a>
20001c2c:	e09e      	b.n	20001d6c <pixel+0x168>
20001c2e:	68bb      	ldr	r3, [r7, #8]
20001c30:	2b00      	cmp	r3, #0
20001c32:	dc00      	bgt.n	20001c36 <pixel+0x32>
20001c34:	e09a      	b.n	20001d6c <pixel+0x168>
		return;
	mask = 1 << ((y-1)%8);
20001c36:	68bb      	ldr	r3, [r7, #8]
20001c38:	3b01      	subs	r3, #1
20001c3a:	4a4e      	ldr	r2, [pc, #312]	; (20001d74 <pixel+0x170>)
20001c3c:	4013      	ands	r3, r2
20001c3e:	d504      	bpl.n	20001c4a <pixel+0x46>
20001c40:	3b01      	subs	r3, #1
20001c42:	2208      	movs	r2, #8
20001c44:	4252      	negs	r2, r2
20001c46:	4313      	orrs	r3, r2
20001c48:	3301      	adds	r3, #1
20001c4a:	001a      	movs	r2, r3
20001c4c:	2301      	movs	r3, #1
20001c4e:	4093      	lsls	r3, r2
20001c50:	001a      	movs	r2, r3
20001c52:	2317      	movs	r3, #23
20001c54:	18fb      	adds	r3, r7, r3
20001c56:	701a      	strb	r2, [r3, #0]
	if(x > 64) {
20001c58:	68fb      	ldr	r3, [r7, #12]
20001c5a:	2b40      	cmp	r3, #64	; 0x40
20001c5c:	dd05      	ble.n	20001c6a <pixel+0x66>
		x -= 65;
20001c5e:	68fb      	ldr	r3, [r7, #12]
20001c60:	3b41      	subs	r3, #65	; 0x41
20001c62:	60fb      	str	r3, [r7, #12]
		index = 512;
20001c64:	2380      	movs	r3, #128	; 0x80
20001c66:	009b      	lsls	r3, r3, #2
20001c68:	613b      	str	r3, [r7, #16]
	}
	index += x + ((y-1)/8)*64;
20001c6a:	68bb      	ldr	r3, [r7, #8]
20001c6c:	3b01      	subs	r3, #1
20001c6e:	2b00      	cmp	r3, #0
20001c70:	da00      	bge.n	20001c74 <pixel+0x70>
20001c72:	3307      	adds	r3, #7
20001c74:	10db      	asrs	r3, r3, #3
20001c76:	019a      	lsls	r2, r3, #6
20001c78:	68fb      	ldr	r3, [r7, #12]
20001c7a:	18d3      	adds	r3, r2, r3
20001c7c:	693a      	ldr	r2, [r7, #16]
20001c7e:	18d3      	adds	r3, r2, r3
20001c80:	613b      	str	r3, [r7, #16]

	if(set == 0)
20001c82:	687b      	ldr	r3, [r7, #4]
20001c84:	2b00      	cmp	r3, #0
20001c86:	d106      	bne.n	20001c96 <pixel+0x92>
		mask = ~mask;
20001c88:	2317      	movs	r3, #23
20001c8a:	18fb      	adds	r3, r7, r3
20001c8c:	2217      	movs	r2, #23
20001c8e:	18ba      	adds	r2, r7, r2
20001c90:	7812      	ldrb	r2, [r2, #0]
20001c92:	43d2      	mvns	r2, r2
20001c94:	701a      	strb	r2, [r3, #0]

	switch (color) {
20001c96:	683b      	ldr	r3, [r7, #0]
20001c98:	2b02      	cmp	r3, #2
20001c9a:	d024      	beq.n	20001ce6 <pixel+0xe2>
20001c9c:	2b03      	cmp	r3, #3
20001c9e:	d043      	beq.n	20001d28 <pixel+0x124>
20001ca0:	2b01      	cmp	r3, #1
20001ca2:	d164      	bne.n	20001d6e <pixel+0x16a>
		case 1:	
			if(set)
20001ca4:	687b      	ldr	r3, [r7, #4]
20001ca6:	2b00      	cmp	r3, #0
20001ca8:	d00e      	beq.n	20001cc8 <pixel+0xc4>
				backBufferLight[index] |= mask;
20001caa:	4a33      	ldr	r2, [pc, #204]	; (20001d78 <pixel+0x174>)
20001cac:	693b      	ldr	r3, [r7, #16]
20001cae:	18d3      	adds	r3, r2, r3
20001cb0:	781a      	ldrb	r2, [r3, #0]
20001cb2:	2317      	movs	r3, #23
20001cb4:	18fb      	adds	r3, r7, r3
20001cb6:	781b      	ldrb	r3, [r3, #0]
20001cb8:	4313      	orrs	r3, r2
20001cba:	b2d9      	uxtb	r1, r3
20001cbc:	4a2e      	ldr	r2, [pc, #184]	; (20001d78 <pixel+0x174>)
20001cbe:	693b      	ldr	r3, [r7, #16]
20001cc0:	18d3      	adds	r3, r2, r3
20001cc2:	1c0a      	adds	r2, r1, #0
20001cc4:	701a      	strb	r2, [r3, #0]
			else
				backBufferLight[index] &= mask;
			break;
20001cc6:	e052      	b.n	20001d6e <pixel+0x16a>
				backBufferLight[index] &= mask;
20001cc8:	4a2b      	ldr	r2, [pc, #172]	; (20001d78 <pixel+0x174>)
20001cca:	693b      	ldr	r3, [r7, #16]
20001ccc:	18d3      	adds	r3, r2, r3
20001cce:	781b      	ldrb	r3, [r3, #0]
20001cd0:	2217      	movs	r2, #23
20001cd2:	18ba      	adds	r2, r7, r2
20001cd4:	7812      	ldrb	r2, [r2, #0]
20001cd6:	4013      	ands	r3, r2
20001cd8:	b2d9      	uxtb	r1, r3
20001cda:	4a27      	ldr	r2, [pc, #156]	; (20001d78 <pixel+0x174>)
20001cdc:	693b      	ldr	r3, [r7, #16]
20001cde:	18d3      	adds	r3, r2, r3
20001ce0:	1c0a      	adds	r2, r1, #0
20001ce2:	701a      	strb	r2, [r3, #0]
			break;
20001ce4:	e043      	b.n	20001d6e <pixel+0x16a>
		
		case 2:	
			if(set)
20001ce6:	687b      	ldr	r3, [r7, #4]
20001ce8:	2b00      	cmp	r3, #0
20001cea:	d00e      	beq.n	20001d0a <pixel+0x106>
				backBufferGray[index] |= mask;
20001cec:	4a23      	ldr	r2, [pc, #140]	; (20001d7c <pixel+0x178>)
20001cee:	693b      	ldr	r3, [r7, #16]
20001cf0:	18d3      	adds	r3, r2, r3
20001cf2:	781a      	ldrb	r2, [r3, #0]
20001cf4:	2317      	movs	r3, #23
20001cf6:	18fb      	adds	r3, r7, r3
20001cf8:	781b      	ldrb	r3, [r3, #0]
20001cfa:	4313      	orrs	r3, r2
20001cfc:	b2d9      	uxtb	r1, r3
20001cfe:	4a1f      	ldr	r2, [pc, #124]	; (20001d7c <pixel+0x178>)
20001d00:	693b      	ldr	r3, [r7, #16]
20001d02:	18d3      	adds	r3, r2, r3
20001d04:	1c0a      	adds	r2, r1, #0
20001d06:	701a      	strb	r2, [r3, #0]
			else
				backBufferGray[index] &= mask;
			break;
20001d08:	e031      	b.n	20001d6e <pixel+0x16a>
				backBufferGray[index] &= mask;
20001d0a:	4a1c      	ldr	r2, [pc, #112]	; (20001d7c <pixel+0x178>)
20001d0c:	693b      	ldr	r3, [r7, #16]
20001d0e:	18d3      	adds	r3, r2, r3
20001d10:	781b      	ldrb	r3, [r3, #0]
20001d12:	2217      	movs	r2, #23
20001d14:	18ba      	adds	r2, r7, r2
20001d16:	7812      	ldrb	r2, [r2, #0]
20001d18:	4013      	ands	r3, r2
20001d1a:	b2d9      	uxtb	r1, r3
20001d1c:	4a17      	ldr	r2, [pc, #92]	; (20001d7c <pixel+0x178>)
20001d1e:	693b      	ldr	r3, [r7, #16]
20001d20:	18d3      	adds	r3, r2, r3
20001d22:	1c0a      	adds	r2, r1, #0
20001d24:	701a      	strb	r2, [r3, #0]
			break;
20001d26:	e022      	b.n	20001d6e <pixel+0x16a>
		
		case 3:	
			if(set)
20001d28:	687b      	ldr	r3, [r7, #4]
20001d2a:	2b00      	cmp	r3, #0
20001d2c:	d00e      	beq.n	20001d4c <pixel+0x148>
				backBuffer[index] |= mask;
20001d2e:	4a14      	ldr	r2, [pc, #80]	; (20001d80 <pixel+0x17c>)
20001d30:	693b      	ldr	r3, [r7, #16]
20001d32:	18d3      	adds	r3, r2, r3
20001d34:	781a      	ldrb	r2, [r3, #0]
20001d36:	2317      	movs	r3, #23
20001d38:	18fb      	adds	r3, r7, r3
20001d3a:	781b      	ldrb	r3, [r3, #0]
20001d3c:	4313      	orrs	r3, r2
20001d3e:	b2d9      	uxtb	r1, r3
20001d40:	4a0f      	ldr	r2, [pc, #60]	; (20001d80 <pixel+0x17c>)
20001d42:	693b      	ldr	r3, [r7, #16]
20001d44:	18d3      	adds	r3, r2, r3
20001d46:	1c0a      	adds	r2, r1, #0
20001d48:	701a      	strb	r2, [r3, #0]
			else
				backBuffer[index] &= mask;
			break;
20001d4a:	e010      	b.n	20001d6e <pixel+0x16a>
				backBuffer[index] &= mask;
20001d4c:	4a0c      	ldr	r2, [pc, #48]	; (20001d80 <pixel+0x17c>)
20001d4e:	693b      	ldr	r3, [r7, #16]
20001d50:	18d3      	adds	r3, r2, r3
20001d52:	781b      	ldrb	r3, [r3, #0]
20001d54:	2217      	movs	r2, #23
20001d56:	18ba      	adds	r2, r7, r2
20001d58:	7812      	ldrb	r2, [r2, #0]
20001d5a:	4013      	ands	r3, r2
20001d5c:	b2d9      	uxtb	r1, r3
20001d5e:	4a08      	ldr	r2, [pc, #32]	; (20001d80 <pixel+0x17c>)
20001d60:	693b      	ldr	r3, [r7, #16]
20001d62:	18d3      	adds	r3, r2, r3
20001d64:	1c0a      	adds	r2, r1, #0
20001d66:	701a      	strb	r2, [r3, #0]
			break;
20001d68:	46c0      	nop			; (mov r8, r8)
20001d6a:	e000      	b.n	20001d6e <pixel+0x16a>
		return;
20001d6c:	46c0      	nop			; (mov r8, r8)
			
	}

}
20001d6e:	46bd      	mov	sp, r7
20001d70:	b006      	add	sp, #24
20001d72:	bd80      	pop	{r7, pc}
20001d74:	80000007 	andhi	r0, r0, r7
20001d78:	20004d70 	andcs	r4, r0, r0, ror sp
20001d7c:	20003570 	andcs	r3, r0, r0, ror r5
20001d80:	20003d70 	andcs	r3, r0, r0, ror sp

20001d84 <pixel2>:


void pixel2(int x, int y, int set) {
20001d84:	b580      	push	{r7, lr}
20001d86:	b088      	sub	sp, #32
20001d88:	af00      	add	r7, sp, #0
20001d8a:	60f8      	str	r0, [r7, #12]
20001d8c:	60b9      	str	r1, [r7, #8]
20001d8e:	607a      	str	r2, [r7, #4]
	uint8_t mask, c, controller;
	int index;
	if((x < 1) || (y < 1) || (x > 128) || (y > 64)) return;
20001d90:	68fb      	ldr	r3, [r7, #12]
20001d92:	2b00      	cmp	r3, #0
20001d94:	dc00      	bgt.n	20001d98 <pixel2+0x14>
20001d96:	e0bc      	b.n	20001f12 <pixel2+0x18e>
20001d98:	68bb      	ldr	r3, [r7, #8]
20001d9a:	2b00      	cmp	r3, #0
20001d9c:	dc00      	bgt.n	20001da0 <pixel2+0x1c>
20001d9e:	e0b8      	b.n	20001f12 <pixel2+0x18e>
20001da0:	68fb      	ldr	r3, [r7, #12]
20001da2:	2b80      	cmp	r3, #128	; 0x80
20001da4:	dd00      	ble.n	20001da8 <pixel2+0x24>
20001da6:	e0b4      	b.n	20001f12 <pixel2+0x18e>
20001da8:	68bb      	ldr	r3, [r7, #8]
20001daa:	2b40      	cmp	r3, #64	; 0x40
20001dac:	dd00      	ble.n	20001db0 <pixel2+0x2c>
20001dae:	e0b0      	b.n	20001f12 <pixel2+0x18e>
	index = (y-1)/8;
20001db0:	68bb      	ldr	r3, [r7, #8]
20001db2:	3b01      	subs	r3, #1
20001db4:	2b00      	cmp	r3, #0
20001db6:	da00      	bge.n	20001dba <pixel2+0x36>
20001db8:	3307      	adds	r3, #7
20001dba:	10db      	asrs	r3, r3, #3
20001dbc:	61bb      	str	r3, [r7, #24]
	switch( (y-1)%8 ) {
20001dbe:	68bb      	ldr	r3, [r7, #8]
20001dc0:	3b01      	subs	r3, #1
20001dc2:	4a56      	ldr	r2, [pc, #344]	; (20001f1c <pixel2+0x198>)
20001dc4:	4013      	ands	r3, r2
20001dc6:	d504      	bpl.n	20001dd2 <pixel2+0x4e>
20001dc8:	3b01      	subs	r3, #1
20001dca:	2208      	movs	r2, #8
20001dcc:	4252      	negs	r2, r2
20001dce:	4313      	orrs	r3, r2
20001dd0:	3301      	adds	r3, #1
20001dd2:	2b07      	cmp	r3, #7
20001dd4:	d82c      	bhi.n	20001e30 <pixel2+0xac>
20001dd6:	009a      	lsls	r2, r3, #2
20001dd8:	4b51      	ldr	r3, [pc, #324]	; (20001f20 <pixel2+0x19c>)
20001dda:	18d3      	adds	r3, r2, r3
20001ddc:	681b      	ldr	r3, [r3, #0]
20001dde:	469f      	mov	pc, r3
		case 0: mask = 1; break;
20001de0:	231f      	movs	r3, #31
20001de2:	18fb      	adds	r3, r7, r3
20001de4:	2201      	movs	r2, #1
20001de6:	701a      	strb	r2, [r3, #0]
20001de8:	e022      	b.n	20001e30 <pixel2+0xac>
		case 1: mask = 2; break;
20001dea:	231f      	movs	r3, #31
20001dec:	18fb      	adds	r3, r7, r3
20001dee:	2202      	movs	r2, #2
20001df0:	701a      	strb	r2, [r3, #0]
20001df2:	e01d      	b.n	20001e30 <pixel2+0xac>
		case 2: mask = 4; break;
20001df4:	231f      	movs	r3, #31
20001df6:	18fb      	adds	r3, r7, r3
20001df8:	2204      	movs	r2, #4
20001dfa:	701a      	strb	r2, [r3, #0]
20001dfc:	e018      	b.n	20001e30 <pixel2+0xac>
		case 3: mask = 8; break;
20001dfe:	231f      	movs	r3, #31
20001e00:	18fb      	adds	r3, r7, r3
20001e02:	2208      	movs	r2, #8
20001e04:	701a      	strb	r2, [r3, #0]
20001e06:	e013      	b.n	20001e30 <pixel2+0xac>
		case 4: mask = 0x10; break;
20001e08:	231f      	movs	r3, #31
20001e0a:	18fb      	adds	r3, r7, r3
20001e0c:	2210      	movs	r2, #16
20001e0e:	701a      	strb	r2, [r3, #0]
20001e10:	e00e      	b.n	20001e30 <pixel2+0xac>
		case 5: mask = 0x20; break;
20001e12:	231f      	movs	r3, #31
20001e14:	18fb      	adds	r3, r7, r3
20001e16:	2220      	movs	r2, #32
20001e18:	701a      	strb	r2, [r3, #0]
20001e1a:	e009      	b.n	20001e30 <pixel2+0xac>
		case 6: mask = 0x40; break;
20001e1c:	231f      	movs	r3, #31
20001e1e:	18fb      	adds	r3, r7, r3
20001e20:	2240      	movs	r2, #64	; 0x40
20001e22:	701a      	strb	r2, [r3, #0]
20001e24:	e004      	b.n	20001e30 <pixel2+0xac>
		case 7: mask = 0x80; break;
20001e26:	231f      	movs	r3, #31
20001e28:	18fb      	adds	r3, r7, r3
20001e2a:	2280      	movs	r2, #128	; 0x80
20001e2c:	701a      	strb	r2, [r3, #0]
20001e2e:	46c0      	nop			; (mov r8, r8)
	}
	
	if(set == 0)
20001e30:	687b      	ldr	r3, [r7, #4]
20001e32:	2b00      	cmp	r3, #0
20001e34:	d106      	bne.n	20001e44 <pixel2+0xc0>
		mask = ~mask;
20001e36:	231f      	movs	r3, #31
20001e38:	18fb      	adds	r3, r7, r3
20001e3a:	221f      	movs	r2, #31
20001e3c:	18ba      	adds	r2, r7, r2
20001e3e:	7812      	ldrb	r2, [r2, #0]
20001e40:	43d2      	mvns	r2, r2
20001e42:	701a      	strb	r2, [r3, #0]
	
	if(x > 64){
20001e44:	68fb      	ldr	r3, [r7, #12]
20001e46:	2b40      	cmp	r3, #64	; 0x40
20001e48:	dd07      	ble.n	20001e5a <pixel2+0xd6>
		controller = B_CS2;
20001e4a:	231e      	movs	r3, #30
20001e4c:	18fb      	adds	r3, r7, r3
20001e4e:	2210      	movs	r2, #16
20001e50:	701a      	strb	r2, [r3, #0]
		x = x - 65;
20001e52:	68fb      	ldr	r3, [r7, #12]
20001e54:	3b41      	subs	r3, #65	; 0x41
20001e56:	60fb      	str	r3, [r7, #12]
20001e58:	e006      	b.n	20001e68 <pixel2+0xe4>
	} else {
		controller = B_CS1;
20001e5a:	231e      	movs	r3, #30
20001e5c:	18fb      	adds	r3, r7, r3
20001e5e:	2208      	movs	r2, #8
20001e60:	701a      	strb	r2, [r3, #0]
		x = x-1;
20001e62:	68fb      	ldr	r3, [r7, #12]
20001e64:	3b01      	subs	r3, #1
20001e66:	60fb      	str	r3, [r7, #12]
	}
	graphic_write_command(LCD_SET_ADD | x, controller );
20001e68:	68fb      	ldr	r3, [r7, #12]
20001e6a:	b25b      	sxtb	r3, r3
20001e6c:	2240      	movs	r2, #64	; 0x40
20001e6e:	4313      	orrs	r3, r2
20001e70:	b25b      	sxtb	r3, r3
20001e72:	b2da      	uxtb	r2, r3
20001e74:	231e      	movs	r3, #30
20001e76:	18fb      	adds	r3, r7, r3
20001e78:	781b      	ldrb	r3, [r3, #0]
20001e7a:	0019      	movs	r1, r3
20001e7c:	0010      	movs	r0, r2
20001e7e:	f7ff fe11 	bl	20001aa4 <graphic_write_command>
	graphic_write_command(LCD_SET_PAGE | index, controller );
20001e82:	69bb      	ldr	r3, [r7, #24]
20001e84:	b25b      	sxtb	r3, r3
20001e86:	2248      	movs	r2, #72	; 0x48
20001e88:	4252      	negs	r2, r2
20001e8a:	4313      	orrs	r3, r2
20001e8c:	b25b      	sxtb	r3, r3
20001e8e:	b2da      	uxtb	r2, r3
20001e90:	231e      	movs	r3, #30
20001e92:	18fb      	adds	r3, r7, r3
20001e94:	781b      	ldrb	r3, [r3, #0]
20001e96:	0019      	movs	r1, r3
20001e98:	0010      	movs	r0, r2
20001e9a:	f7ff fe03 	bl	20001aa4 <graphic_write_command>
	
	c = graphic_read_data(controller);
20001e9e:	231e      	movs	r3, #30
20001ea0:	18fb      	adds	r3, r7, r3
20001ea2:	781b      	ldrb	r3, [r3, #0]
20001ea4:	0018      	movs	r0, r3
20001ea6:	f7ff fda9 	bl	200019fc <graphic_read_data>
20001eaa:	0002      	movs	r2, r0
20001eac:	2317      	movs	r3, #23
20001eae:	18fb      	adds	r3, r7, r3
20001eb0:	701a      	strb	r2, [r3, #0]
	graphic_write_command(LCD_SET_ADD | x, controller);
20001eb2:	68fb      	ldr	r3, [r7, #12]
20001eb4:	b25b      	sxtb	r3, r3
20001eb6:	2240      	movs	r2, #64	; 0x40
20001eb8:	4313      	orrs	r3, r2
20001eba:	b25b      	sxtb	r3, r3
20001ebc:	b2da      	uxtb	r2, r3
20001ebe:	231e      	movs	r3, #30
20001ec0:	18fb      	adds	r3, r7, r3
20001ec2:	781b      	ldrb	r3, [r3, #0]
20001ec4:	0019      	movs	r1, r3
20001ec6:	0010      	movs	r0, r2
20001ec8:	f7ff fdec 	bl	20001aa4 <graphic_write_command>
	
	if(set)
20001ecc:	687b      	ldr	r3, [r7, #4]
20001ece:	2b00      	cmp	r3, #0
20001ed0:	d00a      	beq.n	20001ee8 <pixel2+0x164>
		mask = mask | c;
20001ed2:	231f      	movs	r3, #31
20001ed4:	18fb      	adds	r3, r7, r3
20001ed6:	221f      	movs	r2, #31
20001ed8:	18b9      	adds	r1, r7, r2
20001eda:	2217      	movs	r2, #23
20001edc:	18ba      	adds	r2, r7, r2
20001ede:	7809      	ldrb	r1, [r1, #0]
20001ee0:	7812      	ldrb	r2, [r2, #0]
20001ee2:	430a      	orrs	r2, r1
20001ee4:	701a      	strb	r2, [r3, #0]
20001ee6:	e009      	b.n	20001efc <pixel2+0x178>
	else
		mask = mask & c;
20001ee8:	231f      	movs	r3, #31
20001eea:	18fb      	adds	r3, r7, r3
20001eec:	221f      	movs	r2, #31
20001eee:	18ba      	adds	r2, r7, r2
20001ef0:	2117      	movs	r1, #23
20001ef2:	1879      	adds	r1, r7, r1
20001ef4:	7812      	ldrb	r2, [r2, #0]
20001ef6:	7809      	ldrb	r1, [r1, #0]
20001ef8:	400a      	ands	r2, r1
20001efa:	701a      	strb	r2, [r3, #0]
	
	graphic_write_data(mask, controller);
20001efc:	231e      	movs	r3, #30
20001efe:	18fb      	adds	r3, r7, r3
20001f00:	781a      	ldrb	r2, [r3, #0]
20001f02:	231f      	movs	r3, #31
20001f04:	18fb      	adds	r3, r7, r3
20001f06:	781b      	ldrb	r3, [r3, #0]
20001f08:	0011      	movs	r1, r2
20001f0a:	0018      	movs	r0, r3
20001f0c:	f7ff fded 	bl	20001aea <graphic_write_data>
20001f10:	e000      	b.n	20001f14 <pixel2+0x190>
	if((x < 1) || (y < 1) || (x > 128) || (y > 64)) return;
20001f12:	46c0      	nop			; (mov r8, r8)
}
20001f14:	46bd      	mov	sp, r7
20001f16:	b008      	add	sp, #32
20001f18:	bd80      	pop	{r7, pc}
20001f1a:	46c0      	nop			; (mov r8, r8)
20001f1c:	80000007 	andhi	r0, r0, r7
20001f20:	20008b70 	andcs	r8, r0, r0, ror fp

20001f24 <graphic_draw_screen>:

void graphic_draw_screen(uint8_t *buffer) {
20001f24:	b580      	push	{r7, lr}
20001f26:	b086      	sub	sp, #24
20001f28:	af00      	add	r7, sp, #0
20001f2a:	6078      	str	r0, [r7, #4]
	uint8_t i, j, controller, c;
	unsigned int k = 0;
20001f2c:	2300      	movs	r3, #0
20001f2e:	613b      	str	r3, [r7, #16]
	for(c = 0; c < 2; c++) {
20001f30:	2315      	movs	r3, #21
20001f32:	18fb      	adds	r3, r7, r3
20001f34:	2200      	movs	r2, #0
20001f36:	701a      	strb	r2, [r3, #0]
20001f38:	e056      	b.n	20001fe8 <graphic_draw_screen+0xc4>
		controller = (c == 0) ? B_CS1 : B_CS2;
20001f3a:	2315      	movs	r3, #21
20001f3c:	18fb      	adds	r3, r7, r3
20001f3e:	781b      	ldrb	r3, [r3, #0]
20001f40:	2b00      	cmp	r3, #0
20001f42:	d101      	bne.n	20001f48 <graphic_draw_screen+0x24>
20001f44:	2208      	movs	r2, #8
20001f46:	e000      	b.n	20001f4a <graphic_draw_screen+0x26>
20001f48:	2210      	movs	r2, #16
20001f4a:	230f      	movs	r3, #15
20001f4c:	18fb      	adds	r3, r7, r3
20001f4e:	701a      	strb	r2, [r3, #0]
		for(j = 0; j < 8; j++) {
20001f50:	2316      	movs	r3, #22
20001f52:	18fb      	adds	r3, r7, r3
20001f54:	2200      	movs	r2, #0
20001f56:	701a      	strb	r2, [r3, #0]
20001f58:	e03a      	b.n	20001fd0 <graphic_draw_screen+0xac>
			graphic_write_command(LCD_SET_PAGE | j, controller);
20001f5a:	2316      	movs	r3, #22
20001f5c:	18fb      	adds	r3, r7, r3
20001f5e:	781b      	ldrb	r3, [r3, #0]
20001f60:	2248      	movs	r2, #72	; 0x48
20001f62:	4252      	negs	r2, r2
20001f64:	4313      	orrs	r3, r2
20001f66:	b2da      	uxtb	r2, r3
20001f68:	230f      	movs	r3, #15
20001f6a:	18fb      	adds	r3, r7, r3
20001f6c:	781b      	ldrb	r3, [r3, #0]
20001f6e:	0019      	movs	r1, r3
20001f70:	0010      	movs	r0, r2
20001f72:	f7ff fd97 	bl	20001aa4 <graphic_write_command>
			graphic_write_command(LCD_SET_ADD | 0, controller);
20001f76:	230f      	movs	r3, #15
20001f78:	18fb      	adds	r3, r7, r3
20001f7a:	781b      	ldrb	r3, [r3, #0]
20001f7c:	0019      	movs	r1, r3
20001f7e:	2040      	movs	r0, #64	; 0x40
20001f80:	f7ff fd90 	bl	20001aa4 <graphic_write_command>
			for(i = 0; i <= 63; i++, k++) {
20001f84:	2317      	movs	r3, #23
20001f86:	18fb      	adds	r3, r7, r3
20001f88:	2200      	movs	r2, #0
20001f8a:	701a      	strb	r2, [r3, #0]
20001f8c:	e014      	b.n	20001fb8 <graphic_draw_screen+0x94>
				graphic_write_data(buffer[k], controller);
20001f8e:	687a      	ldr	r2, [r7, #4]
20001f90:	693b      	ldr	r3, [r7, #16]
20001f92:	18d3      	adds	r3, r2, r3
20001f94:	781a      	ldrb	r2, [r3, #0]
20001f96:	230f      	movs	r3, #15
20001f98:	18fb      	adds	r3, r7, r3
20001f9a:	781b      	ldrb	r3, [r3, #0]
20001f9c:	0019      	movs	r1, r3
20001f9e:	0010      	movs	r0, r2
20001fa0:	f7ff fda3 	bl	20001aea <graphic_write_data>
			for(i = 0; i <= 63; i++, k++) {
20001fa4:	2317      	movs	r3, #23
20001fa6:	18fb      	adds	r3, r7, r3
20001fa8:	781a      	ldrb	r2, [r3, #0]
20001faa:	2317      	movs	r3, #23
20001fac:	18fb      	adds	r3, r7, r3
20001fae:	3201      	adds	r2, #1
20001fb0:	701a      	strb	r2, [r3, #0]
20001fb2:	693b      	ldr	r3, [r7, #16]
20001fb4:	3301      	adds	r3, #1
20001fb6:	613b      	str	r3, [r7, #16]
20001fb8:	2317      	movs	r3, #23
20001fba:	18fb      	adds	r3, r7, r3
20001fbc:	781b      	ldrb	r3, [r3, #0]
20001fbe:	2b3f      	cmp	r3, #63	; 0x3f
20001fc0:	d9e5      	bls.n	20001f8e <graphic_draw_screen+0x6a>
		for(j = 0; j < 8; j++) {
20001fc2:	2316      	movs	r3, #22
20001fc4:	18fb      	adds	r3, r7, r3
20001fc6:	781a      	ldrb	r2, [r3, #0]
20001fc8:	2316      	movs	r3, #22
20001fca:	18fb      	adds	r3, r7, r3
20001fcc:	3201      	adds	r2, #1
20001fce:	701a      	strb	r2, [r3, #0]
20001fd0:	2316      	movs	r3, #22
20001fd2:	18fb      	adds	r3, r7, r3
20001fd4:	781b      	ldrb	r3, [r3, #0]
20001fd6:	2b07      	cmp	r3, #7
20001fd8:	d9bf      	bls.n	20001f5a <graphic_draw_screen+0x36>
	for(c = 0; c < 2; c++) {
20001fda:	2315      	movs	r3, #21
20001fdc:	18fb      	adds	r3, r7, r3
20001fde:	781a      	ldrb	r2, [r3, #0]
20001fe0:	2315      	movs	r3, #21
20001fe2:	18fb      	adds	r3, r7, r3
20001fe4:	3201      	adds	r2, #1
20001fe6:	701a      	strb	r2, [r3, #0]
20001fe8:	2315      	movs	r3, #21
20001fea:	18fb      	adds	r3, r7, r3
20001fec:	781b      	ldrb	r3, [r3, #0]
20001fee:	2b01      	cmp	r3, #1
20001ff0:	d9a3      	bls.n	20001f3a <graphic_draw_screen+0x16>
			}
		}
	}
}
20001ff2:	46c0      	nop			; (mov r8, r8)
20001ff4:	46bd      	mov	sp, r7
20001ff6:	b006      	add	sp, #24
20001ff8:	bd80      	pop	{r7, pc}

20001ffa <draw_sprite>:


void grayScaleTest( void );


void draw_sprite(sprite* s, int x, int y, int set, int color) {
20001ffa:	b5b0      	push	{r4, r5, r7, lr}
20001ffc:	b08a      	sub	sp, #40	; 0x28
20001ffe:	af00      	add	r7, sp, #0
20002000:	60f8      	str	r0, [r7, #12]
20002002:	60b9      	str	r1, [r7, #8]
20002004:	607a      	str	r2, [r7, #4]
20002006:	603b      	str	r3, [r7, #0]
	int i,j,k, width_in_bytes;
	if (s->width % 8 == 0)
20002008:	68fb      	ldr	r3, [r7, #12]
2000200a:	681b      	ldr	r3, [r3, #0]
2000200c:	2207      	movs	r2, #7
2000200e:	4013      	ands	r3, r2
20002010:	d104      	bne.n	2000201c <draw_sprite+0x22>
		width_in_bytes = s->width / 8;
20002012:	68fb      	ldr	r3, [r7, #12]
20002014:	681b      	ldr	r3, [r3, #0]
20002016:	08db      	lsrs	r3, r3, #3
20002018:	61bb      	str	r3, [r7, #24]
2000201a:	e004      	b.n	20002026 <draw_sprite+0x2c>
	else
		width_in_bytes = (s->width / 8) + 1;
2000201c:	68fb      	ldr	r3, [r7, #12]
2000201e:	681b      	ldr	r3, [r3, #0]
20002020:	08db      	lsrs	r3, r3, #3
20002022:	3301      	adds	r3, #1
20002024:	61bb      	str	r3, [r7, #24]
	for (i = 0; i < s->height; i++)
20002026:	2300      	movs	r3, #0
20002028:	627b      	str	r3, [r7, #36]	; 0x24
2000202a:	e06a      	b.n	20002102 <draw_sprite+0x108>
		for (j = 0; j < width_in_bytes; j++) {
2000202c:	2300      	movs	r3, #0
2000202e:	623b      	str	r3, [r7, #32]
20002030:	e060      	b.n	200020f4 <draw_sprite+0xfa>
			unsigned char byte = s->data[i * width_in_bytes + j];
20002032:	68fb      	ldr	r3, [r7, #12]
20002034:	689b      	ldr	r3, [r3, #8]
20002036:	6a7a      	ldr	r2, [r7, #36]	; 0x24
20002038:	69b9      	ldr	r1, [r7, #24]
2000203a:	4351      	muls	r1, r2
2000203c:	6a3a      	ldr	r2, [r7, #32]
2000203e:	188a      	adds	r2, r1, r2
20002040:	189a      	adds	r2, r3, r2
20002042:	2317      	movs	r3, #23
20002044:	18fb      	adds	r3, r7, r3
20002046:	7812      	ldrb	r2, [r2, #0]
20002048:	701a      	strb	r2, [r3, #0]
			for (k =0; k < 8; k++) {
2000204a:	2300      	movs	r3, #0
2000204c:	61fb      	str	r3, [r7, #28]
2000204e:	e04b      	b.n	200020e8 <draw_sprite+0xee>
				if (byte & (1 << k)){
20002050:	2317      	movs	r3, #23
20002052:	18fb      	adds	r3, r7, r3
20002054:	781a      	ldrb	r2, [r3, #0]
20002056:	69fb      	ldr	r3, [r7, #28]
20002058:	411a      	asrs	r2, r3
2000205a:	0013      	movs	r3, r2
2000205c:	2201      	movs	r2, #1
2000205e:	4013      	ands	r3, r2
20002060:	d03f      	beq.n	200020e2 <draw_sprite+0xe8>
					pixel(8 * j + k + x + 1, i + y + 1, set, color);
20002062:	6a3b      	ldr	r3, [r7, #32]
20002064:	00da      	lsls	r2, r3, #3
20002066:	69fb      	ldr	r3, [r7, #28]
20002068:	18d2      	adds	r2, r2, r3
2000206a:	68bb      	ldr	r3, [r7, #8]
2000206c:	18d3      	adds	r3, r2, r3
2000206e:	1c58      	adds	r0, r3, #1
20002070:	6a7a      	ldr	r2, [r7, #36]	; 0x24
20002072:	687b      	ldr	r3, [r7, #4]
20002074:	18d3      	adds	r3, r2, r3
20002076:	1c59      	adds	r1, r3, #1
20002078:	6bbb      	ldr	r3, [r7, #56]	; 0x38
2000207a:	683a      	ldr	r2, [r7, #0]
2000207c:	f7ff fdc2 	bl	20001c04 <pixel>
					
					if(set) {	//Remove the other colors from this pixel
20002080:	683b      	ldr	r3, [r7, #0]
20002082:	2b00      	cmp	r3, #0
20002084:	d02d      	beq.n	200020e2 <draw_sprite+0xe8>
						pixel(8 * j + k + x + 1, i + y + 1, 0, (color+1) % 3);
20002086:	6a3b      	ldr	r3, [r7, #32]
20002088:	00da      	lsls	r2, r3, #3
2000208a:	69fb      	ldr	r3, [r7, #28]
2000208c:	18d2      	adds	r2, r2, r3
2000208e:	68bb      	ldr	r3, [r7, #8]
20002090:	18d3      	adds	r3, r2, r3
20002092:	1c5c      	adds	r4, r3, #1
20002094:	6a7a      	ldr	r2, [r7, #36]	; 0x24
20002096:	687b      	ldr	r3, [r7, #4]
20002098:	18d3      	adds	r3, r2, r3
2000209a:	1c5d      	adds	r5, r3, #1
2000209c:	6bbb      	ldr	r3, [r7, #56]	; 0x38
2000209e:	3301      	adds	r3, #1
200020a0:	2103      	movs	r1, #3
200020a2:	0018      	movs	r0, r3
200020a4:	f000 ff20 	bl	20002ee8 <__aeabi_idivmod>
200020a8:	000b      	movs	r3, r1
200020aa:	2200      	movs	r2, #0
200020ac:	0029      	movs	r1, r5
200020ae:	0020      	movs	r0, r4
200020b0:	f7ff fda8 	bl	20001c04 <pixel>
						pixel(8 * j + k + x + 1, i + y + 1, 0, (color+2) % 3);
200020b4:	6a3b      	ldr	r3, [r7, #32]
200020b6:	00da      	lsls	r2, r3, #3
200020b8:	69fb      	ldr	r3, [r7, #28]
200020ba:	18d2      	adds	r2, r2, r3
200020bc:	68bb      	ldr	r3, [r7, #8]
200020be:	18d3      	adds	r3, r2, r3
200020c0:	1c5c      	adds	r4, r3, #1
200020c2:	6a7a      	ldr	r2, [r7, #36]	; 0x24
200020c4:	687b      	ldr	r3, [r7, #4]
200020c6:	18d3      	adds	r3, r2, r3
200020c8:	1c5d      	adds	r5, r3, #1
200020ca:	6bbb      	ldr	r3, [r7, #56]	; 0x38
200020cc:	3302      	adds	r3, #2
200020ce:	2103      	movs	r1, #3
200020d0:	0018      	movs	r0, r3
200020d2:	f000 ff09 	bl	20002ee8 <__aeabi_idivmod>
200020d6:	000b      	movs	r3, r1
200020d8:	2200      	movs	r2, #0
200020da:	0029      	movs	r1, r5
200020dc:	0020      	movs	r0, r4
200020de:	f7ff fd91 	bl	20001c04 <pixel>
			for (k =0; k < 8; k++) {
200020e2:	69fb      	ldr	r3, [r7, #28]
200020e4:	3301      	adds	r3, #1
200020e6:	61fb      	str	r3, [r7, #28]
200020e8:	69fb      	ldr	r3, [r7, #28]
200020ea:	2b07      	cmp	r3, #7
200020ec:	ddb0      	ble.n	20002050 <draw_sprite+0x56>
		for (j = 0; j < width_in_bytes; j++) {
200020ee:	6a3b      	ldr	r3, [r7, #32]
200020f0:	3301      	adds	r3, #1
200020f2:	623b      	str	r3, [r7, #32]
200020f4:	6a3a      	ldr	r2, [r7, #32]
200020f6:	69bb      	ldr	r3, [r7, #24]
200020f8:	429a      	cmp	r2, r3
200020fa:	db9a      	blt.n	20002032 <draw_sprite+0x38>
	for (i = 0; i < s->height; i++)
200020fc:	6a7b      	ldr	r3, [r7, #36]	; 0x24
200020fe:	3301      	adds	r3, #1
20002100:	627b      	str	r3, [r7, #36]	; 0x24
20002102:	68fb      	ldr	r3, [r7, #12]
20002104:	685a      	ldr	r2, [r3, #4]
20002106:	6a7b      	ldr	r3, [r7, #36]	; 0x24
20002108:	429a      	cmp	r2, r3
2000210a:	d88f      	bhi.n	2000202c <draw_sprite+0x32>
					}
				}
			}
		}
}
2000210c:	46c0      	nop			; (mov r8, r8)
2000210e:	46bd      	mov	sp, r7
20002110:	b00a      	add	sp, #40	; 0x28
20002112:	bdb0      	pop	{r4, r5, r7, pc}

20002114 <fillRectangle>:

void fillRectangle( int x, int y, int width, int height ){
20002114:	b580      	push	{r7, lr}
20002116:	b086      	sub	sp, #24
20002118:	af00      	add	r7, sp, #0
2000211a:	60f8      	str	r0, [r7, #12]
2000211c:	60b9      	str	r1, [r7, #8]
2000211e:	607a      	str	r2, [r7, #4]
20002120:	603b      	str	r3, [r7, #0]
	int i;
	int j;
	for (i = x; i < x + width; i++) {
20002122:	68fb      	ldr	r3, [r7, #12]
20002124:	617b      	str	r3, [r7, #20]
20002126:	e014      	b.n	20002152 <fillRectangle+0x3e>
		for (j = y; j < y + height; j++) {
20002128:	68bb      	ldr	r3, [r7, #8]
2000212a:	613b      	str	r3, [r7, #16]
2000212c:	e008      	b.n	20002140 <fillRectangle+0x2c>
			pixel(i, j, 1, 3);
2000212e:	6939      	ldr	r1, [r7, #16]
20002130:	6978      	ldr	r0, [r7, #20]
20002132:	2303      	movs	r3, #3
20002134:	2201      	movs	r2, #1
20002136:	f7ff fd65 	bl	20001c04 <pixel>
		for (j = y; j < y + height; j++) {
2000213a:	693b      	ldr	r3, [r7, #16]
2000213c:	3301      	adds	r3, #1
2000213e:	613b      	str	r3, [r7, #16]
20002140:	68ba      	ldr	r2, [r7, #8]
20002142:	683b      	ldr	r3, [r7, #0]
20002144:	18d2      	adds	r2, r2, r3
20002146:	693b      	ldr	r3, [r7, #16]
20002148:	429a      	cmp	r2, r3
2000214a:	dcf0      	bgt.n	2000212e <fillRectangle+0x1a>
	for (i = x; i < x + width; i++) {
2000214c:	697b      	ldr	r3, [r7, #20]
2000214e:	3301      	adds	r3, #1
20002150:	617b      	str	r3, [r7, #20]
20002152:	68fa      	ldr	r2, [r7, #12]
20002154:	687b      	ldr	r3, [r7, #4]
20002156:	18d2      	adds	r2, r2, r3
20002158:	697b      	ldr	r3, [r7, #20]
2000215a:	429a      	cmp	r2, r3
2000215c:	dce4      	bgt.n	20002128 <fillRectangle+0x14>
		}
	}
}
2000215e:	46c0      	nop			; (mov r8, r8)
20002160:	46bd      	mov	sp, r7
20002162:	b006      	add	sp, #24
20002164:	bd80      	pop	{r7, pc}

20002166 <clearRectangle>:

void clearRectangle( int x, int y, int width, int height ){
20002166:	b580      	push	{r7, lr}
20002168:	b086      	sub	sp, #24
2000216a:	af00      	add	r7, sp, #0
2000216c:	60f8      	str	r0, [r7, #12]
2000216e:	60b9      	str	r1, [r7, #8]
20002170:	607a      	str	r2, [r7, #4]
20002172:	603b      	str	r3, [r7, #0]
	int i;
	int j;
	for (i = x; i < x + width; i++) {
20002174:	68fb      	ldr	r3, [r7, #12]
20002176:	617b      	str	r3, [r7, #20]
20002178:	e014      	b.n	200021a4 <clearRectangle+0x3e>
		for (j = y; j < y + height; j++) {
2000217a:	68bb      	ldr	r3, [r7, #8]
2000217c:	613b      	str	r3, [r7, #16]
2000217e:	e008      	b.n	20002192 <clearRectangle+0x2c>
			pixel(i, j, 0, 3);
20002180:	6939      	ldr	r1, [r7, #16]
20002182:	6978      	ldr	r0, [r7, #20]
20002184:	2303      	movs	r3, #3
20002186:	2200      	movs	r2, #0
20002188:	f7ff fd3c 	bl	20001c04 <pixel>
		for (j = y; j < y + height; j++) {
2000218c:	693b      	ldr	r3, [r7, #16]
2000218e:	3301      	adds	r3, #1
20002190:	613b      	str	r3, [r7, #16]
20002192:	68ba      	ldr	r2, [r7, #8]
20002194:	683b      	ldr	r3, [r7, #0]
20002196:	18d2      	adds	r2, r2, r3
20002198:	693b      	ldr	r3, [r7, #16]
2000219a:	429a      	cmp	r2, r3
2000219c:	dcf0      	bgt.n	20002180 <clearRectangle+0x1a>
	for (i = x; i < x + width; i++) {
2000219e:	697b      	ldr	r3, [r7, #20]
200021a0:	3301      	adds	r3, #1
200021a2:	617b      	str	r3, [r7, #20]
200021a4:	68fa      	ldr	r2, [r7, #12]
200021a6:	687b      	ldr	r3, [r7, #4]
200021a8:	18d2      	adds	r2, r2, r3
200021aa:	697b      	ldr	r3, [r7, #20]
200021ac:	429a      	cmp	r2, r3
200021ae:	dce4      	bgt.n	2000217a <clearRectangle+0x14>
		}
	}
}
200021b0:	46c0      	nop			; (mov r8, r8)
200021b2:	46bd      	mov	sp, r7
200021b4:	b006      	add	sp, #24
200021b6:	bd80      	pop	{r7, pc}

200021b8 <grayScaleTest>:


void grayScaleTest( void ) {
200021b8:	b590      	push	{r4, r7, lr}
200021ba:	b087      	sub	sp, #28
200021bc:	af00      	add	r7, sp, #0
	int x = 10;
200021be:	230a      	movs	r3, #10
200021c0:	617b      	str	r3, [r7, #20]
	int y = 10;
200021c2:	230a      	movs	r3, #10
200021c4:	613b      	str	r3, [r7, #16]
	int width = 70;
200021c6:	2346      	movs	r3, #70	; 0x46
200021c8:	60fb      	str	r3, [r7, #12]
	int height = 50;
200021ca:	2332      	movs	r3, #50	; 0x32
200021cc:	60bb      	str	r3, [r7, #8]
	
	int x2 = 50;
200021ce:	2332      	movs	r3, #50	; 0x32
200021d0:	607b      	str	r3, [r7, #4]
	
	fillRectangle(x, y, width, height);
200021d2:	68bb      	ldr	r3, [r7, #8]
200021d4:	68fa      	ldr	r2, [r7, #12]
200021d6:	6939      	ldr	r1, [r7, #16]
200021d8:	6978      	ldr	r0, [r7, #20]
200021da:	f7ff ff9b 	bl	20002114 <fillRectangle>
	
	int i;
	int k = 5;
200021de:	2305      	movs	r3, #5
200021e0:	603b      	str	r3, [r7, #0]
	while(1) {
		clear_backBuffer();
200021e2:	f7ff fadf 	bl	200017a4 <clear_backBuffer>
		fillRectangle(x, y, width, height);
200021e6:	68bb      	ldr	r3, [r7, #8]
200021e8:	68fa      	ldr	r2, [r7, #12]
200021ea:	6939      	ldr	r1, [r7, #16]
200021ec:	6978      	ldr	r0, [r7, #20]
200021ee:	f7ff ff91 	bl	20002114 <fillRectangle>
		clearRectangle(x+2+2, y+1, width-k, height-k); //outer square
200021f2:	697b      	ldr	r3, [r7, #20]
200021f4:	1d18      	adds	r0, r3, #4
200021f6:	693b      	ldr	r3, [r7, #16]
200021f8:	1c59      	adds	r1, r3, #1
200021fa:	68fa      	ldr	r2, [r7, #12]
200021fc:	683b      	ldr	r3, [r7, #0]
200021fe:	1ad4      	subs	r4, r2, r3
20002200:	68ba      	ldr	r2, [r7, #8]
20002202:	683b      	ldr	r3, [r7, #0]
20002204:	1ad3      	subs	r3, r2, r3
20002206:	0022      	movs	r2, r4
20002208:	f7ff ffad 	bl	20002166 <clearRectangle>
		clearRectangle(x+2+k, y+2, width-4-k, height-4-k); //inner square
2000220c:	697b      	ldr	r3, [r7, #20]
2000220e:	1c9a      	adds	r2, r3, #2
20002210:	683b      	ldr	r3, [r7, #0]
20002212:	18d0      	adds	r0, r2, r3
20002214:	693b      	ldr	r3, [r7, #16]
20002216:	1c99      	adds	r1, r3, #2
20002218:	68fb      	ldr	r3, [r7, #12]
2000221a:	1f1a      	subs	r2, r3, #4
2000221c:	683b      	ldr	r3, [r7, #0]
2000221e:	1ad4      	subs	r4, r2, r3
20002220:	68bb      	ldr	r3, [r7, #8]
20002222:	1f1a      	subs	r2, r3, #4
20002224:	683b      	ldr	r3, [r7, #0]
20002226:	1ad3      	subs	r3, r2, r3
20002228:	0022      	movs	r2, r4
2000222a:	f7ff ff9c 	bl	20002166 <clearRectangle>
		graphic_draw_screen(draw_buffer_black);
2000222e:	4b2d      	ldr	r3, [pc, #180]	; (200022e4 <grayScaleTest+0x12c>)
20002230:	0018      	movs	r0, r3
20002232:	f7ff fe77 	bl	20001f24 <graphic_draw_screen>
		clear_backBuffer();
20002236:	f7ff fab5 	bl	200017a4 <clear_backBuffer>
		fillRectangle(x, y, width, height);
2000223a:	68bb      	ldr	r3, [r7, #8]
2000223c:	68fa      	ldr	r2, [r7, #12]
2000223e:	6939      	ldr	r1, [r7, #16]
20002240:	6978      	ldr	r0, [r7, #20]
20002242:	f7ff ff67 	bl	20002114 <fillRectangle>
		
		fillRectangle(x+2+2, y+1, width-k, height-k); //outer white square
20002246:	697b      	ldr	r3, [r7, #20]
20002248:	1d18      	adds	r0, r3, #4
2000224a:	693b      	ldr	r3, [r7, #16]
2000224c:	1c59      	adds	r1, r3, #1
2000224e:	68fa      	ldr	r2, [r7, #12]
20002250:	683b      	ldr	r3, [r7, #0]
20002252:	1ad4      	subs	r4, r2, r3
20002254:	68ba      	ldr	r2, [r7, #8]
20002256:	683b      	ldr	r3, [r7, #0]
20002258:	1ad3      	subs	r3, r2, r3
2000225a:	0022      	movs	r2, r4
2000225c:	f7ff ff5a 	bl	20002114 <fillRectangle>
		fillRectangle(x+2+k, y+2, width-4-k, height-4-k); //inner square
20002260:	697b      	ldr	r3, [r7, #20]
20002262:	1c9a      	adds	r2, r3, #2
20002264:	683b      	ldr	r3, [r7, #0]
20002266:	18d0      	adds	r0, r2, r3
20002268:	693b      	ldr	r3, [r7, #16]
2000226a:	1c99      	adds	r1, r3, #2
2000226c:	68fb      	ldr	r3, [r7, #12]
2000226e:	1f1a      	subs	r2, r3, #4
20002270:	683b      	ldr	r3, [r7, #0]
20002272:	1ad4      	subs	r4, r2, r3
20002274:	68bb      	ldr	r3, [r7, #8]
20002276:	1f1a      	subs	r2, r3, #4
20002278:	683b      	ldr	r3, [r7, #0]
2000227a:	1ad3      	subs	r3, r2, r3
2000227c:	0022      	movs	r2, r4
2000227e:	f7ff ff49 	bl	20002114 <fillRectangle>
		clearRectangle(x+12, y+5, 5, 5);
20002282:	697b      	ldr	r3, [r7, #20]
20002284:	330c      	adds	r3, #12
20002286:	0018      	movs	r0, r3
20002288:	693b      	ldr	r3, [r7, #16]
2000228a:	1d59      	adds	r1, r3, #5
2000228c:	2305      	movs	r3, #5
2000228e:	2205      	movs	r2, #5
20002290:	f7ff ff69 	bl	20002166 <clearRectangle>
		
		graphic_draw_screen(draw_buffer_black);
20002294:	4b13      	ldr	r3, [pc, #76]	; (200022e4 <grayScaleTest+0x12c>)
20002296:	0018      	movs	r0, r3
20002298:	f7ff fe44 	bl	20001f24 <graphic_draw_screen>
		delay_milli(20);
2000229c:	2014      	movs	r0, #20
2000229e:	f7ff fa55 	bl	2000174c <delay_milli>
		
		clear_backBuffer();
200022a2:	f7ff fa7f 	bl	200017a4 <clear_backBuffer>
		fillRectangle(x, y, width, height);
200022a6:	68bb      	ldr	r3, [r7, #8]
200022a8:	68fa      	ldr	r2, [r7, #12]
200022aa:	6939      	ldr	r1, [r7, #16]
200022ac:	6978      	ldr	r0, [r7, #20]
200022ae:	f7ff ff31 	bl	20002114 <fillRectangle>
		clearRectangle(x+2+k, y+2, width-4-k, height-4-k); //inner square
200022b2:	697b      	ldr	r3, [r7, #20]
200022b4:	1c9a      	adds	r2, r3, #2
200022b6:	683b      	ldr	r3, [r7, #0]
200022b8:	18d0      	adds	r0, r2, r3
200022ba:	693b      	ldr	r3, [r7, #16]
200022bc:	1c99      	adds	r1, r3, #2
200022be:	68fb      	ldr	r3, [r7, #12]
200022c0:	1f1a      	subs	r2, r3, #4
200022c2:	683b      	ldr	r3, [r7, #0]
200022c4:	1ad4      	subs	r4, r2, r3
200022c6:	68bb      	ldr	r3, [r7, #8]
200022c8:	1f1a      	subs	r2, r3, #4
200022ca:	683b      	ldr	r3, [r7, #0]
200022cc:	1ad3      	subs	r3, r2, r3
200022ce:	0022      	movs	r2, r4
200022d0:	f7ff ff49 	bl	20002166 <clearRectangle>
		graphic_draw_screen(draw_buffer_black);
200022d4:	4b03      	ldr	r3, [pc, #12]	; (200022e4 <grayScaleTest+0x12c>)
200022d6:	0018      	movs	r0, r3
200022d8:	f7ff fe24 	bl	20001f24 <graphic_draw_screen>
		
		delay_milli(20);
200022dc:	2014      	movs	r0, #20
200022de:	f7ff fa35 	bl	2000174c <delay_milli>
		clear_backBuffer();
200022e2:	e77e      	b.n	200021e2 <grayScaleTest+0x2a>
200022e4:	20004570 	andcs	r4, r0, r0, ror r5

200022e8 <set_up_draw_buffers>:
	}
}

/** Should prepare the different drawing buffers, before the drawing of each frame.*/
void set_up_draw_buffers( void ) {
200022e8:	b580      	push	{r7, lr}
200022ea:	b082      	sub	sp, #8
200022ec:	af00      	add	r7, sp, #0
	int i;
	for(i = 0; i < 1024; i++) {
200022ee:	2300      	movs	r3, #0
200022f0:	607b      	str	r3, [r7, #4]
200022f2:	e065      	b.n	200023c0 <set_up_draw_buffers+0xd8>
		draw_buffer_black[i] = backBuffer[i] & (~backBufferGray[i] & ~backBufferLight[i]); //Had to work a bit on these
200022f4:	4a36      	ldr	r2, [pc, #216]	; (200023d0 <set_up_draw_buffers+0xe8>)
200022f6:	687b      	ldr	r3, [r7, #4]
200022f8:	18d3      	adds	r3, r2, r3
200022fa:	781b      	ldrb	r3, [r3, #0]
200022fc:	b25b      	sxtb	r3, r3
200022fe:	4935      	ldr	r1, [pc, #212]	; (200023d4 <set_up_draw_buffers+0xec>)
20002300:	687a      	ldr	r2, [r7, #4]
20002302:	188a      	adds	r2, r1, r2
20002304:	7811      	ldrb	r1, [r2, #0]
20002306:	4834      	ldr	r0, [pc, #208]	; (200023d8 <set_up_draw_buffers+0xf0>)
20002308:	687a      	ldr	r2, [r7, #4]
2000230a:	1882      	adds	r2, r0, r2
2000230c:	7812      	ldrb	r2, [r2, #0]
2000230e:	430a      	orrs	r2, r1
20002310:	b2d2      	uxtb	r2, r2
20002312:	b252      	sxtb	r2, r2
20002314:	43d2      	mvns	r2, r2
20002316:	b252      	sxtb	r2, r2
20002318:	4013      	ands	r3, r2
2000231a:	b25b      	sxtb	r3, r3
2000231c:	b2d9      	uxtb	r1, r3
2000231e:	4a2f      	ldr	r2, [pc, #188]	; (200023dc <set_up_draw_buffers+0xf4>)
20002320:	687b      	ldr	r3, [r7, #4]
20002322:	18d3      	adds	r3, r2, r3
20002324:	1c0a      	adds	r2, r1, #0
20002326:	701a      	strb	r2, [r3, #0]
		draw_buffer_black_gray[i] = (backBuffer[i] | backBufferGray[i]) & ~backBufferLight[i]; //in order to make it possible
20002328:	4a29      	ldr	r2, [pc, #164]	; (200023d0 <set_up_draw_buffers+0xe8>)
2000232a:	687b      	ldr	r3, [r7, #4]
2000232c:	18d3      	adds	r3, r2, r3
2000232e:	781a      	ldrb	r2, [r3, #0]
20002330:	4928      	ldr	r1, [pc, #160]	; (200023d4 <set_up_draw_buffers+0xec>)
20002332:	687b      	ldr	r3, [r7, #4]
20002334:	18cb      	adds	r3, r1, r3
20002336:	781b      	ldrb	r3, [r3, #0]
20002338:	4313      	orrs	r3, r2
2000233a:	b2db      	uxtb	r3, r3
2000233c:	b25b      	sxtb	r3, r3
2000233e:	4926      	ldr	r1, [pc, #152]	; (200023d8 <set_up_draw_buffers+0xf0>)
20002340:	687a      	ldr	r2, [r7, #4]
20002342:	188a      	adds	r2, r1, r2
20002344:	7812      	ldrb	r2, [r2, #0]
20002346:	b252      	sxtb	r2, r2
20002348:	43d2      	mvns	r2, r2
2000234a:	b252      	sxtb	r2, r2
2000234c:	4013      	ands	r3, r2
2000234e:	b25b      	sxtb	r3, r3
20002350:	b2d9      	uxtb	r1, r3
20002352:	4a23      	ldr	r2, [pc, #140]	; (200023e0 <set_up_draw_buffers+0xf8>)
20002354:	687b      	ldr	r3, [r7, #4]
20002356:	18d3      	adds	r3, r2, r3
20002358:	1c0a      	adds	r2, r1, #0
2000235a:	701a      	strb	r2, [r3, #0]
		draw_buffer_black_light[i] = (backBuffer[i] | backBufferLight[i]) & ~backBufferGray[i]; //to show a lighter sprite
2000235c:	4a1c      	ldr	r2, [pc, #112]	; (200023d0 <set_up_draw_buffers+0xe8>)
2000235e:	687b      	ldr	r3, [r7, #4]
20002360:	18d3      	adds	r3, r2, r3
20002362:	781a      	ldrb	r2, [r3, #0]
20002364:	491c      	ldr	r1, [pc, #112]	; (200023d8 <set_up_draw_buffers+0xf0>)
20002366:	687b      	ldr	r3, [r7, #4]
20002368:	18cb      	adds	r3, r1, r3
2000236a:	781b      	ldrb	r3, [r3, #0]
2000236c:	4313      	orrs	r3, r2
2000236e:	b2db      	uxtb	r3, r3
20002370:	b25b      	sxtb	r3, r3
20002372:	4918      	ldr	r1, [pc, #96]	; (200023d4 <set_up_draw_buffers+0xec>)
20002374:	687a      	ldr	r2, [r7, #4]
20002376:	188a      	adds	r2, r1, r2
20002378:	7812      	ldrb	r2, [r2, #0]
2000237a:	b252      	sxtb	r2, r2
2000237c:	43d2      	mvns	r2, r2
2000237e:	b252      	sxtb	r2, r2
20002380:	4013      	ands	r3, r2
20002382:	b25b      	sxtb	r3, r3
20002384:	b2d9      	uxtb	r1, r3
20002386:	4a17      	ldr	r2, [pc, #92]	; (200023e4 <set_up_draw_buffers+0xfc>)
20002388:	687b      	ldr	r3, [r7, #4]
2000238a:	18d3      	adds	r3, r2, r3
2000238c:	1c0a      	adds	r2, r1, #0
2000238e:	701a      	strb	r2, [r3, #0]
		draw_buffer_black_gray_light[i] = backBuffer[i] | backBufferGray[i] | backBufferLight[i]; //on top of a darker one.
20002390:	4a0f      	ldr	r2, [pc, #60]	; (200023d0 <set_up_draw_buffers+0xe8>)
20002392:	687b      	ldr	r3, [r7, #4]
20002394:	18d3      	adds	r3, r2, r3
20002396:	781a      	ldrb	r2, [r3, #0]
20002398:	490e      	ldr	r1, [pc, #56]	; (200023d4 <set_up_draw_buffers+0xec>)
2000239a:	687b      	ldr	r3, [r7, #4]
2000239c:	18cb      	adds	r3, r1, r3
2000239e:	781b      	ldrb	r3, [r3, #0]
200023a0:	4313      	orrs	r3, r2
200023a2:	b2da      	uxtb	r2, r3
200023a4:	490c      	ldr	r1, [pc, #48]	; (200023d8 <set_up_draw_buffers+0xf0>)
200023a6:	687b      	ldr	r3, [r7, #4]
200023a8:	18cb      	adds	r3, r1, r3
200023aa:	781b      	ldrb	r3, [r3, #0]
200023ac:	4313      	orrs	r3, r2
200023ae:	b2d9      	uxtb	r1, r3
200023b0:	4a0d      	ldr	r2, [pc, #52]	; (200023e8 <set_up_draw_buffers+0x100>)
200023b2:	687b      	ldr	r3, [r7, #4]
200023b4:	18d3      	adds	r3, r2, r3
200023b6:	1c0a      	adds	r2, r1, #0
200023b8:	701a      	strb	r2, [r3, #0]
	for(i = 0; i < 1024; i++) {
200023ba:	687b      	ldr	r3, [r7, #4]
200023bc:	3301      	adds	r3, #1
200023be:	607b      	str	r3, [r7, #4]
200023c0:	687b      	ldr	r3, [r7, #4]
200023c2:	4a0a      	ldr	r2, [pc, #40]	; (200023ec <set_up_draw_buffers+0x104>)
200023c4:	4293      	cmp	r3, r2
200023c6:	dd95      	ble.n	200022f4 <set_up_draw_buffers+0xc>
	}
}
200023c8:	46c0      	nop			; (mov r8, r8)
200023ca:	46bd      	mov	sp, r7
200023cc:	b002      	add	sp, #8
200023ce:	bd80      	pop	{r7, pc}
200023d0:	20003d70 	andcs	r3, r0, r0, ror sp
200023d4:	20003570 	andcs	r3, r0, r0, ror r5
200023d8:	20004d70 	andcs	r4, r0, r0, ror sp
200023dc:	20004570 	andcs	r4, r0, r0, ror r5
200023e0:	20003970 	andcs	r3, r0, r0, ror r9
200023e4:	20004170 	andcs	r4, r0, r0, ror r1
200023e8:	20004970 	andcs	r4, r0, r0, ror r9
200023ec:	000003ff 	strdeq	r0, [r0], -pc	; <UNPREDICTABLE>

200023f0 <draw_game_object>:

void draw_game_object(GameObject *gObj) {
200023f0:	b580      	push	{r7, lr}
200023f2:	b086      	sub	sp, #24
200023f4:	af02      	add	r7, sp, #8
200023f6:	6078      	str	r0, [r7, #4]
	int frame = gObj->current_frame;
200023f8:	687b      	ldr	r3, [r7, #4]
200023fa:	695b      	ldr	r3, [r3, #20]
200023fc:	60fb      	str	r3, [r7, #12]
	draw_sprite(gObj->images[frame].blackImage, gObj->xPos, gObj->yPos, 1, 3);
200023fe:	687b      	ldr	r3, [r7, #4]
20002400:	6819      	ldr	r1, [r3, #0]
20002402:	68fa      	ldr	r2, [r7, #12]
20002404:	0013      	movs	r3, r2
20002406:	005b      	lsls	r3, r3, #1
20002408:	189b      	adds	r3, r3, r2
2000240a:	009b      	lsls	r3, r3, #2
2000240c:	18cb      	adds	r3, r1, r3
2000240e:	6818      	ldr	r0, [r3, #0]
20002410:	687b      	ldr	r3, [r7, #4]
20002412:	6859      	ldr	r1, [r3, #4]
20002414:	687b      	ldr	r3, [r7, #4]
20002416:	689a      	ldr	r2, [r3, #8]
20002418:	2303      	movs	r3, #3
2000241a:	9300      	str	r3, [sp, #0]
2000241c:	2301      	movs	r3, #1
2000241e:	f7ff fdec 	bl	20001ffa <draw_sprite>
	draw_sprite(gObj->images[frame].grayImage, gObj->xPos, gObj->yPos, 1, 2);
20002422:	687b      	ldr	r3, [r7, #4]
20002424:	6819      	ldr	r1, [r3, #0]
20002426:	68fa      	ldr	r2, [r7, #12]
20002428:	0013      	movs	r3, r2
2000242a:	005b      	lsls	r3, r3, #1
2000242c:	189b      	adds	r3, r3, r2
2000242e:	009b      	lsls	r3, r3, #2
20002430:	18cb      	adds	r3, r1, r3
20002432:	6858      	ldr	r0, [r3, #4]
20002434:	687b      	ldr	r3, [r7, #4]
20002436:	6859      	ldr	r1, [r3, #4]
20002438:	687b      	ldr	r3, [r7, #4]
2000243a:	689a      	ldr	r2, [r3, #8]
2000243c:	2302      	movs	r3, #2
2000243e:	9300      	str	r3, [sp, #0]
20002440:	2301      	movs	r3, #1
20002442:	f7ff fdda 	bl	20001ffa <draw_sprite>
	draw_sprite(gObj->images[frame].lightImage, gObj->xPos, gObj->yPos, 1, 1);
20002446:	687b      	ldr	r3, [r7, #4]
20002448:	6819      	ldr	r1, [r3, #0]
2000244a:	68fa      	ldr	r2, [r7, #12]
2000244c:	0013      	movs	r3, r2
2000244e:	005b      	lsls	r3, r3, #1
20002450:	189b      	adds	r3, r3, r2
20002452:	009b      	lsls	r3, r3, #2
20002454:	18cb      	adds	r3, r1, r3
20002456:	6898      	ldr	r0, [r3, #8]
20002458:	687b      	ldr	r3, [r7, #4]
2000245a:	6859      	ldr	r1, [r3, #4]
2000245c:	687b      	ldr	r3, [r7, #4]
2000245e:	689a      	ldr	r2, [r3, #8]
20002460:	2301      	movs	r3, #1
20002462:	9300      	str	r3, [sp, #0]
20002464:	2301      	movs	r3, #1
20002466:	f7ff fdc8 	bl	20001ffa <draw_sprite>
}
2000246a:	46c0      	nop			; (mov r8, r8)
2000246c:	46bd      	mov	sp, r7
2000246e:	b004      	add	sp, #16
20002470:	bd80      	pop	{r7, pc}

20002472 <show_frame>:


void show_frame(int frame_length) {
20002472:	b580      	push	{r7, lr}
20002474:	b082      	sub	sp, #8
20002476:	af00      	add	r7, sp, #0
20002478:	6078      	str	r0, [r7, #4]
	set_up_draw_buffers();
2000247a:	f7ff ff35 	bl	200022e8 <set_up_draw_buffers>
	
	while(frame_length--) {
2000247e:	e01b      	b.n	200024b8 <show_frame+0x46>
		graphic_draw_screen(draw_buffer_black_gray_light);
20002480:	4b13      	ldr	r3, [pc, #76]	; (200024d0 <show_frame+0x5e>)
20002482:	0018      	movs	r0, r3
20002484:	f7ff fd4e 	bl	20001f24 <graphic_draw_screen>
		delay_milli(1);
20002488:	2001      	movs	r0, #1
2000248a:	f7ff f95f 	bl	2000174c <delay_milli>
		
		graphic_draw_screen(draw_buffer_black);
2000248e:	4b11      	ldr	r3, [pc, #68]	; (200024d4 <show_frame+0x62>)
20002490:	0018      	movs	r0, r3
20002492:	f7ff fd47 	bl	20001f24 <graphic_draw_screen>
		delay_milli(1);
20002496:	2001      	movs	r0, #1
20002498:	f7ff f958 	bl	2000174c <delay_milli>
		
		graphic_draw_screen(draw_buffer_black_gray);
2000249c:	4b0e      	ldr	r3, [pc, #56]	; (200024d8 <show_frame+0x66>)
2000249e:	0018      	movs	r0, r3
200024a0:	f7ff fd40 	bl	20001f24 <graphic_draw_screen>
		delay_milli(1);
200024a4:	2001      	movs	r0, #1
200024a6:	f7ff f951 	bl	2000174c <delay_milli>
		
		graphic_draw_screen(draw_buffer_black);
200024aa:	4b0a      	ldr	r3, [pc, #40]	; (200024d4 <show_frame+0x62>)
200024ac:	0018      	movs	r0, r3
200024ae:	f7ff fd39 	bl	20001f24 <graphic_draw_screen>
		delay_milli(1);
200024b2:	2001      	movs	r0, #1
200024b4:	f7ff f94a 	bl	2000174c <delay_milli>
	while(frame_length--) {
200024b8:	687b      	ldr	r3, [r7, #4]
200024ba:	1e5a      	subs	r2, r3, #1
200024bc:	607a      	str	r2, [r7, #4]
200024be:	2b00      	cmp	r3, #0
200024c0:	d1de      	bne.n	20002480 <show_frame+0xe>
	}
	
	clear_all_backBuffers();	//Maybe we could be more effective by only clearing the necessary stuff,
200024c2:	f7ff f97b 	bl	200017bc <clear_all_backBuffers>
								//but let's keep it like this if it works.
200024c6:	46c0      	nop			; (mov r8, r8)
200024c8:	46bd      	mov	sp, r7
200024ca:	b002      	add	sp, #8
200024cc:	bd80      	pop	{r7, pc}
200024ce:	46c0      	nop			; (mov r8, r8)
200024d0:	20004970 	andcs	r4, r0, r0, ror r9
200024d4:	20004570 	andcs	r4, r0, r0, ror r5
200024d8:	20003970 	andcs	r3, r0, r0, ror r9

200024dc <load_image>:
#include "image.h"

void load_image( Image *image, sprite *blackImage, sprite *grayImage, sprite *lightImage ) {
200024dc:	b580      	push	{r7, lr}
200024de:	b084      	sub	sp, #16
200024e0:	af00      	add	r7, sp, #0
200024e2:	60f8      	str	r0, [r7, #12]
200024e4:	60b9      	str	r1, [r7, #8]
200024e6:	607a      	str	r2, [r7, #4]
200024e8:	603b      	str	r3, [r7, #0]
	image->blackImage = blackImage;
200024ea:	68fb      	ldr	r3, [r7, #12]
200024ec:	68ba      	ldr	r2, [r7, #8]
200024ee:	601a      	str	r2, [r3, #0]
	image->grayImage = grayImage;
200024f0:	68fb      	ldr	r3, [r7, #12]
200024f2:	687a      	ldr	r2, [r7, #4]
200024f4:	605a      	str	r2, [r3, #4]
	image->lightImage = lightImage;
200024f6:	68fb      	ldr	r3, [r7, #12]
200024f8:	683a      	ldr	r2, [r7, #0]
200024fa:	609a      	str	r2, [r3, #8]
}
200024fc:	46c0      	nop			; (mov r8, r8)
200024fe:	46bd      	mov	sp, r7
20002500:	b004      	add	sp, #16
20002502:	bd80      	pop	{r7, pc}

20002504 <load_sprite>:
#include "sprite.h"

void load_sprite(sprite* s, unsigned char* data, int width, int height)
{
20002504:	b580      	push	{r7, lr}
20002506:	b084      	sub	sp, #16
20002508:	af00      	add	r7, sp, #0
2000250a:	60f8      	str	r0, [r7, #12]
2000250c:	60b9      	str	r1, [r7, #8]
2000250e:	607a      	str	r2, [r7, #4]
20002510:	603b      	str	r3, [r7, #0]
	s->width = width;
20002512:	687a      	ldr	r2, [r7, #4]
20002514:	68fb      	ldr	r3, [r7, #12]
20002516:	601a      	str	r2, [r3, #0]
	s->height = height;
20002518:	683a      	ldr	r2, [r7, #0]
2000251a:	68fb      	ldr	r3, [r7, #12]
2000251c:	605a      	str	r2, [r3, #4]
	s->data = data;
2000251e:	68fb      	ldr	r3, [r7, #12]
20002520:	68ba      	ldr	r2, [r7, #8]
20002522:	609a      	str	r2, [r3, #8]
}
20002524:	46c0      	nop			; (mov r8, r8)
20002526:	46bd      	mov	sp, r7
20002528:	b004      	add	sp, #16
2000252a:	bd80      	pop	{r7, pc}

2000252c <set_up_DIL>:
#include "gpio.h"

/** Sets up PE0-7 as inports and PE8-15 as outports. */
void set_up_DIL( void ) {
2000252c:	b580      	push	{r7, lr}
2000252e:	af00      	add	r7, sp, #0
	GPIO_D.Moder = 0x55550000;
20002530:	4b02      	ldr	r3, [pc, #8]	; (2000253c <set_up_DIL+0x10>)
20002532:	4a03      	ldr	r2, [pc, #12]	; (20002540 <set_up_DIL+0x14>)
20002534:	601a      	str	r2, [r3, #0]
}
20002536:	46c0      	nop			; (mov r8, r8)
20002538:	46bd      	mov	sp, r7
2000253a:	bd80      	pop	{r7, pc}
2000253c:	40020c00 	andmi	r0, r2, r0, lsl #24
20002540:	55550000 	ldrbpl	r0, [r5, #-0]

20002544 <read_DIL>:

char read_DIL( void ) {
20002544:	b580      	push	{r7, lr}
20002546:	af00      	add	r7, sp, #0
	GPIO_D.odrHigh = GPIO_D.idrLow; //Show on bargraph
20002548:	4b05      	ldr	r3, [pc, #20]	; (20002560 <read_DIL+0x1c>)
2000254a:	4a05      	ldr	r2, [pc, #20]	; (20002560 <read_DIL+0x1c>)
2000254c:	7c12      	ldrb	r2, [r2, #16]
2000254e:	b2d2      	uxtb	r2, r2
20002550:	755a      	strb	r2, [r3, #21]
	return GPIO_D.idrLow;
20002552:	4b03      	ldr	r3, [pc, #12]	; (20002560 <read_DIL+0x1c>)
20002554:	7c1b      	ldrb	r3, [r3, #16]
20002556:	b2db      	uxtb	r3, r3
}
20002558:	0018      	movs	r0, r3
2000255a:	46bd      	mov	sp, r7
2000255c:	bd80      	pop	{r7, pc}
2000255e:	46c0      	nop			; (mov r8, r8)
20002560:	40020c00 	andmi	r0, r2, r0, lsl #24

20002564 <read_DIL_single>:


int read_DIL_single( int bit ) {
20002564:	b590      	push	{r4, r7, lr}
20002566:	b085      	sub	sp, #20
20002568:	af00      	add	r7, sp, #0
2000256a:	6078      	str	r0, [r7, #4]
	char DIL = read_DIL();
2000256c:	230f      	movs	r3, #15
2000256e:	18fc      	adds	r4, r7, r3
20002570:	f7ff ffe8 	bl	20002544 <read_DIL>
20002574:	0003      	movs	r3, r0
20002576:	7023      	strb	r3, [r4, #0]
	if (DIL & (1<<bit)) {
20002578:	230f      	movs	r3, #15
2000257a:	18fb      	adds	r3, r7, r3
2000257c:	781a      	ldrb	r2, [r3, #0]
2000257e:	687b      	ldr	r3, [r7, #4]
20002580:	411a      	asrs	r2, r3
20002582:	0013      	movs	r3, r2
20002584:	2201      	movs	r2, #1
20002586:	4013      	ands	r3, r2
20002588:	d001      	beq.n	2000258e <read_DIL_single+0x2a>
		return 1;
2000258a:	2301      	movs	r3, #1
2000258c:	e000      	b.n	20002590 <read_DIL_single+0x2c>
	} else {
		return 0;
2000258e:	2300      	movs	r3, #0
	}
20002590:	0018      	movs	r0, r3
20002592:	46bd      	mov	sp, r7
20002594:	b005      	add	sp, #20
20002596:	bd90      	pop	{r4, r7, pc}

20002598 <ascii_ctrl_bit_set>:
void ascii_write_data(unsigned char data);
unsigned char ascii_read_status(void);
unsigned char ascii_read_data(void);


void ascii_ctrl_bit_set(unsigned char x){
20002598:	b580      	push	{r7, lr}
2000259a:	b084      	sub	sp, #16
2000259c:	af00      	add	r7, sp, #0
2000259e:	0002      	movs	r2, r0
200025a0:	1dfb      	adds	r3, r7, #7
200025a2:	701a      	strb	r2, [r3, #0]
//adressera ASCii-displayen och ettstÃƒÂ¤ll de bitar som ÃƒÂ¤r 1 i x
	unsigned char c;
	c = *portOdrLow;
200025a4:	4a0c      	ldr	r2, [pc, #48]	; (200025d8 <ascii_ctrl_bit_set+0x40>)
200025a6:	230f      	movs	r3, #15
200025a8:	18fb      	adds	r3, r7, r3
200025aa:	7812      	ldrb	r2, [r2, #0]
200025ac:	701a      	strb	r2, [r3, #0]
	c |= (B_SELECT | x);
200025ae:	1dfa      	adds	r2, r7, #7
200025b0:	230f      	movs	r3, #15
200025b2:	18fb      	adds	r3, r7, r3
200025b4:	7812      	ldrb	r2, [r2, #0]
200025b6:	781b      	ldrb	r3, [r3, #0]
200025b8:	4313      	orrs	r3, r2
200025ba:	b2da      	uxtb	r2, r3
200025bc:	230f      	movs	r3, #15
200025be:	18fb      	adds	r3, r7, r3
200025c0:	2104      	movs	r1, #4
200025c2:	430a      	orrs	r2, r1
200025c4:	701a      	strb	r2, [r3, #0]
	*portOdrLow = c;
200025c6:	4a04      	ldr	r2, [pc, #16]	; (200025d8 <ascii_ctrl_bit_set+0x40>)
200025c8:	230f      	movs	r3, #15
200025ca:	18fb      	adds	r3, r7, r3
200025cc:	781b      	ldrb	r3, [r3, #0]
200025ce:	7013      	strb	r3, [r2, #0]
}
200025d0:	46c0      	nop			; (mov r8, r8)
200025d2:	46bd      	mov	sp, r7
200025d4:	b004      	add	sp, #16
200025d6:	bd80      	pop	{r7, pc}
200025d8:	40021014 	andmi	r1, r2, r4, lsl r0

200025dc <ascii_ctrl_bit_clear>:

void ascii_ctrl_bit_clear(unsigned char x){
200025dc:	b580      	push	{r7, lr}
200025de:	b084      	sub	sp, #16
200025e0:	af00      	add	r7, sp, #0
200025e2:	0002      	movs	r2, r0
200025e4:	1dfb      	adds	r3, r7, #7
200025e6:	701a      	strb	r2, [r3, #0]
//adressera ASCii-displayen och nollstÃ¤ll de bitar som Ã¤r 1 i x
	unsigned char c;
	c = *portOdrLow;
200025e8:	4a0f      	ldr	r2, [pc, #60]	; (20002628 <ascii_ctrl_bit_clear+0x4c>)
200025ea:	230f      	movs	r3, #15
200025ec:	18fb      	adds	r3, r7, r3
200025ee:	7812      	ldrb	r2, [r2, #0]
200025f0:	701a      	strb	r2, [r3, #0]
	c = (B_SELECT | c & ~x);
200025f2:	1dfb      	adds	r3, r7, #7
200025f4:	781b      	ldrb	r3, [r3, #0]
200025f6:	b25b      	sxtb	r3, r3
200025f8:	43db      	mvns	r3, r3
200025fa:	b25b      	sxtb	r3, r3
200025fc:	220f      	movs	r2, #15
200025fe:	18ba      	adds	r2, r7, r2
20002600:	7812      	ldrb	r2, [r2, #0]
20002602:	b252      	sxtb	r2, r2
20002604:	4013      	ands	r3, r2
20002606:	b25b      	sxtb	r3, r3
20002608:	2204      	movs	r2, #4
2000260a:	4313      	orrs	r3, r2
2000260c:	b25a      	sxtb	r2, r3
2000260e:	230f      	movs	r3, #15
20002610:	18fb      	adds	r3, r7, r3
20002612:	701a      	strb	r2, [r3, #0]
	*portOdrLow = c;
20002614:	4a04      	ldr	r2, [pc, #16]	; (20002628 <ascii_ctrl_bit_clear+0x4c>)
20002616:	230f      	movs	r3, #15
20002618:	18fb      	adds	r3, r7, r3
2000261a:	781b      	ldrb	r3, [r3, #0]
2000261c:	7013      	strb	r3, [r2, #0]
}
2000261e:	46c0      	nop			; (mov r8, r8)
20002620:	46bd      	mov	sp, r7
20002622:	b004      	add	sp, #16
20002624:	bd80      	pop	{r7, pc}
20002626:	46c0      	nop			; (mov r8, r8)
20002628:	40021014 	andmi	r1, r2, r4, lsl r0

2000262c <ascii_write_cmd>:

void ascii_write_cmd(unsigned char command){
2000262c:	b580      	push	{r7, lr}
2000262e:	b082      	sub	sp, #8
20002630:	af00      	add	r7, sp, #0
20002632:	0002      	movs	r2, r0
20002634:	1dfb      	adds	r3, r7, #7
20002636:	701a      	strb	r2, [r3, #0]
	ascii_ctrl_bit_clear(B_RS);
20002638:	2001      	movs	r0, #1
2000263a:	f7ff ffcf 	bl	200025dc <ascii_ctrl_bit_clear>
	ascii_ctrl_bit_clear(B_RW);
2000263e:	2002      	movs	r0, #2
20002640:	f7ff ffcc 	bl	200025dc <ascii_ctrl_bit_clear>
	ascii_write_controller(command);
20002644:	1dfb      	adds	r3, r7, #7
20002646:	781b      	ldrb	r3, [r3, #0]
20002648:	0018      	movs	r0, r3
2000264a:	f000 f86d 	bl	20002728 <ascii_write_controller>
}
2000264e:	46c0      	nop			; (mov r8, r8)
20002650:	46bd      	mov	sp, r7
20002652:	b002      	add	sp, #8
20002654:	bd80      	pop	{r7, pc}

20002656 <ascii_write_data>:

void ascii_write_data(unsigned char data){
20002656:	b580      	push	{r7, lr}
20002658:	b082      	sub	sp, #8
2000265a:	af00      	add	r7, sp, #0
2000265c:	0002      	movs	r2, r0
2000265e:	1dfb      	adds	r3, r7, #7
20002660:	701a      	strb	r2, [r3, #0]
	ascii_ctrl_bit_set(B_RS);
20002662:	2001      	movs	r0, #1
20002664:	f7ff ff98 	bl	20002598 <ascii_ctrl_bit_set>
	ascii_ctrl_bit_clear(B_RW);
20002668:	2002      	movs	r0, #2
2000266a:	f7ff ffb7 	bl	200025dc <ascii_ctrl_bit_clear>
	ascii_write_controller(data);
2000266e:	1dfb      	adds	r3, r7, #7
20002670:	781b      	ldrb	r3, [r3, #0]
20002672:	0018      	movs	r0, r3
20002674:	f000 f858 	bl	20002728 <ascii_write_controller>
}
20002678:	46c0      	nop			; (mov r8, r8)
2000267a:	46bd      	mov	sp, r7
2000267c:	b002      	add	sp, #8
2000267e:	bd80      	pop	{r7, pc}

20002680 <ascii_read_status>:

unsigned char ascii_read_status(void){
20002680:	b590      	push	{r4, r7, lr}
20002682:	b083      	sub	sp, #12
20002684:	af00      	add	r7, sp, #0
	//sÃƒÂ¤tt Port E bit15-8 som ingÃƒÂ¥ngar
	*portModer &= 0x0000FFFF;
20002686:	4b11      	ldr	r3, [pc, #68]	; (200026cc <ascii_read_status+0x4c>)
20002688:	4a10      	ldr	r2, [pc, #64]	; (200026cc <ascii_read_status+0x4c>)
2000268a:	6812      	ldr	r2, [r2, #0]
2000268c:	0412      	lsls	r2, r2, #16
2000268e:	0c12      	lsrs	r2, r2, #16
20002690:	601a      	str	r2, [r3, #0]
	ascii_ctrl_bit_clear(B_RS);
20002692:	2001      	movs	r0, #1
20002694:	f7ff ffa2 	bl	200025dc <ascii_ctrl_bit_clear>
	ascii_ctrl_bit_set(B_RW);
20002698:	2002      	movs	r0, #2
2000269a:	f7ff ff7d 	bl	20002598 <ascii_ctrl_bit_set>
	unsigned char rv = ascii_read_controller();
2000269e:	1dfc      	adds	r4, r7, #7
200026a0:	f000 f85a 	bl	20002758 <ascii_read_controller>
200026a4:	0003      	movs	r3, r0
200026a6:	7023      	strb	r3, [r4, #0]
	//sÃƒÂ¤tt Port E bit15-8 som utgÃƒÂ¥ngar
	*portModer &= 0x0000FFFF;
200026a8:	4b08      	ldr	r3, [pc, #32]	; (200026cc <ascii_read_status+0x4c>)
200026aa:	4a08      	ldr	r2, [pc, #32]	; (200026cc <ascii_read_status+0x4c>)
200026ac:	6812      	ldr	r2, [r2, #0]
200026ae:	0412      	lsls	r2, r2, #16
200026b0:	0c12      	lsrs	r2, r2, #16
200026b2:	601a      	str	r2, [r3, #0]
	*portModer |= 0x55550000;
200026b4:	4b05      	ldr	r3, [pc, #20]	; (200026cc <ascii_read_status+0x4c>)
200026b6:	4a05      	ldr	r2, [pc, #20]	; (200026cc <ascii_read_status+0x4c>)
200026b8:	6812      	ldr	r2, [r2, #0]
200026ba:	4905      	ldr	r1, [pc, #20]	; (200026d0 <ascii_read_status+0x50>)
200026bc:	430a      	orrs	r2, r1
200026be:	601a      	str	r2, [r3, #0]
	return rv;
200026c0:	1dfb      	adds	r3, r7, #7
200026c2:	781b      	ldrb	r3, [r3, #0]
}
200026c4:	0018      	movs	r0, r3
200026c6:	46bd      	mov	sp, r7
200026c8:	b003      	add	sp, #12
200026ca:	bd90      	pop	{r4, r7, pc}
200026cc:	40021000 	andmi	r1, r2, r0
200026d0:	55550000 	ldrbpl	r0, [r5, #-0]

200026d4 <ascii_read_data>:

unsigned char ascii_read_data(void){
200026d4:	b590      	push	{r4, r7, lr}
200026d6:	b083      	sub	sp, #12
200026d8:	af00      	add	r7, sp, #0
	//sÃƒÂ¤tt Port E bit15-8 som ingÃƒÂ¥ngar
	*portModer &= 0x0000FFFF;
200026da:	4b11      	ldr	r3, [pc, #68]	; (20002720 <ascii_read_data+0x4c>)
200026dc:	4a10      	ldr	r2, [pc, #64]	; (20002720 <ascii_read_data+0x4c>)
200026de:	6812      	ldr	r2, [r2, #0]
200026e0:	0412      	lsls	r2, r2, #16
200026e2:	0c12      	lsrs	r2, r2, #16
200026e4:	601a      	str	r2, [r3, #0]
	ascii_ctrl_bit_set(B_RS);
200026e6:	2001      	movs	r0, #1
200026e8:	f7ff ff56 	bl	20002598 <ascii_ctrl_bit_set>
	ascii_ctrl_bit_set(B_RW);
200026ec:	2002      	movs	r0, #2
200026ee:	f7ff ff53 	bl	20002598 <ascii_ctrl_bit_set>
	unsigned char rv = ascii_read_controller();
200026f2:	1dfc      	adds	r4, r7, #7
200026f4:	f000 f830 	bl	20002758 <ascii_read_controller>
200026f8:	0003      	movs	r3, r0
200026fa:	7023      	strb	r3, [r4, #0]
	//sÃƒÂ¤tt Port E bit15-8 som utgÃƒÂ¥ngar
	*portModer &= 0x0000FFFF;
200026fc:	4b08      	ldr	r3, [pc, #32]	; (20002720 <ascii_read_data+0x4c>)
200026fe:	4a08      	ldr	r2, [pc, #32]	; (20002720 <ascii_read_data+0x4c>)
20002700:	6812      	ldr	r2, [r2, #0]
20002702:	0412      	lsls	r2, r2, #16
20002704:	0c12      	lsrs	r2, r2, #16
20002706:	601a      	str	r2, [r3, #0]
	*portModer |= 0x55550000;
20002708:	4b05      	ldr	r3, [pc, #20]	; (20002720 <ascii_read_data+0x4c>)
2000270a:	4a05      	ldr	r2, [pc, #20]	; (20002720 <ascii_read_data+0x4c>)
2000270c:	6812      	ldr	r2, [r2, #0]
2000270e:	4905      	ldr	r1, [pc, #20]	; (20002724 <ascii_read_data+0x50>)
20002710:	430a      	orrs	r2, r1
20002712:	601a      	str	r2, [r3, #0]
	return rv;
20002714:	1dfb      	adds	r3, r7, #7
20002716:	781b      	ldrb	r3, [r3, #0]
}
20002718:	0018      	movs	r0, r3
2000271a:	46bd      	mov	sp, r7
2000271c:	b003      	add	sp, #12
2000271e:	bd90      	pop	{r4, r7, pc}
20002720:	40021000 	andmi	r1, r2, r0
20002724:	55550000 	ldrbpl	r0, [r5, #-0]

20002728 <ascii_write_controller>:

void ascii_write_controller(unsigned char c){
20002728:	b580      	push	{r7, lr}
2000272a:	b082      	sub	sp, #8
2000272c:	af00      	add	r7, sp, #0
2000272e:	0002      	movs	r2, r0
20002730:	1dfb      	adds	r3, r7, #7
20002732:	701a      	strb	r2, [r3, #0]
	ascii_ctrl_bit_set(B_E);
20002734:	2040      	movs	r0, #64	; 0x40
20002736:	f7ff ff2f 	bl	20002598 <ascii_ctrl_bit_set>
	*portOdrHigh = c;
2000273a:	4a06      	ldr	r2, [pc, #24]	; (20002754 <ascii_write_controller+0x2c>)
2000273c:	1dfb      	adds	r3, r7, #7
2000273e:	781b      	ldrb	r3, [r3, #0]
20002740:	7013      	strb	r3, [r2, #0]
	delay_250ns();
20002742:	f7fe ffa9 	bl	20001698 <delay_250ns>
	ascii_ctrl_bit_clear(B_E);
20002746:	2040      	movs	r0, #64	; 0x40
20002748:	f7ff ff48 	bl	200025dc <ascii_ctrl_bit_clear>
}
2000274c:	46c0      	nop			; (mov r8, r8)
2000274e:	46bd      	mov	sp, r7
20002750:	b002      	add	sp, #8
20002752:	bd80      	pop	{r7, pc}
20002754:	40021015 	andmi	r1, r2, r5, lsl r0

20002758 <ascii_read_controller>:

unsigned char ascii_read_controller(void){
20002758:	b580      	push	{r7, lr}
2000275a:	b082      	sub	sp, #8
2000275c:	af00      	add	r7, sp, #0
	unsigned char c;
	ascii_ctrl_bit_set(B_E);
2000275e:	2040      	movs	r0, #64	; 0x40
20002760:	f7ff ff1a 	bl	20002598 <ascii_ctrl_bit_set>
	delay_250ns();
20002764:	f7fe ff98 	bl	20001698 <delay_250ns>
	delay_250ns();
20002768:	f7fe ff96 	bl	20001698 <delay_250ns>
	c = *portIdrHigh;
2000276c:	4a06      	ldr	r2, [pc, #24]	; (20002788 <ascii_read_controller+0x30>)
2000276e:	1dfb      	adds	r3, r7, #7
20002770:	7812      	ldrb	r2, [r2, #0]
20002772:	701a      	strb	r2, [r3, #0]
	ascii_ctrl_bit_clear(B_E);
20002774:	2040      	movs	r0, #64	; 0x40
20002776:	f7ff ff31 	bl	200025dc <ascii_ctrl_bit_clear>
	return c;
2000277a:	1dfb      	adds	r3, r7, #7
2000277c:	781b      	ldrb	r3, [r3, #0]
}
2000277e:	0018      	movs	r0, r3
20002780:	46bd      	mov	sp, r7
20002782:	b002      	add	sp, #8
20002784:	bd80      	pop	{r7, pc}
20002786:	46c0      	nop			; (mov r8, r8)
20002788:	40021011 	andmi	r1, r2, r1, lsl r0

2000278c <ascii_write_char>:

void ascii_write_char(unsigned char c){
2000278c:	b580      	push	{r7, lr}
2000278e:	b082      	sub	sp, #8
20002790:	af00      	add	r7, sp, #0
20002792:	0002      	movs	r2, r0
20002794:	1dfb      	adds	r3, r7, #7
20002796:	701a      	strb	r2, [r3, #0]
		while((ascii_read_status() & 0x80) == 0x80){} //VÃƒÂ¤nta tills displayed ÃƒÂ¤r redo
20002798:	46c0      	nop			; (mov r8, r8)
2000279a:	f7ff ff71 	bl	20002680 <ascii_read_status>
2000279e:	0003      	movs	r3, r0
200027a0:	001a      	movs	r2, r3
200027a2:	2380      	movs	r3, #128	; 0x80
200027a4:	4013      	ands	r3, r2
200027a6:	2b80      	cmp	r3, #128	; 0x80
200027a8:	d0f7      	beq.n	2000279a <ascii_write_char+0xe>
		delay_micro(8); //latenstid
200027aa:	2008      	movs	r0, #8
200027ac:	f7fe ffb8 	bl	20001720 <delay_micro>
		ascii_write_data(c);
200027b0:	1dfb      	adds	r3, r7, #7
200027b2:	781b      	ldrb	r3, [r3, #0]
200027b4:	0018      	movs	r0, r3
200027b6:	f7ff ff4e 	bl	20002656 <ascii_write_data>
		delay_micro(50); //istÃƒÂ¤llet fÃƒÂ¶r 43us
200027ba:	2032      	movs	r0, #50	; 0x32
200027bc:	f7fe ffb0 	bl	20001720 <delay_micro>
}
200027c0:	46c0      	nop			; (mov r8, r8)
200027c2:	46bd      	mov	sp, r7
200027c4:	b002      	add	sp, #8
200027c6:	bd80      	pop	{r7, pc}

200027c8 <ascii_goToXY>:

void ascii_goToXY(unsigned char row, unsigned char column){
200027c8:	b580      	push	{r7, lr}
200027ca:	b084      	sub	sp, #16
200027cc:	af00      	add	r7, sp, #0
200027ce:	0002      	movs	r2, r0
200027d0:	1dfb      	adds	r3, r7, #7
200027d2:	701a      	strb	r2, [r3, #0]
200027d4:	1dbb      	adds	r3, r7, #6
200027d6:	1c0a      	adds	r2, r1, #0
200027d8:	701a      	strb	r2, [r3, #0]
	unsigned char address = row-1;
200027da:	230f      	movs	r3, #15
200027dc:	18fb      	adds	r3, r7, r3
200027de:	1dfa      	adds	r2, r7, #7
200027e0:	7812      	ldrb	r2, [r2, #0]
200027e2:	3a01      	subs	r2, #1
200027e4:	701a      	strb	r2, [r3, #0]
	if(column == 2){
200027e6:	1dbb      	adds	r3, r7, #6
200027e8:	781b      	ldrb	r3, [r3, #0]
200027ea:	2b02      	cmp	r3, #2
200027ec:	d106      	bne.n	200027fc <ascii_goToXY+0x34>
		address += 0x40;
200027ee:	230f      	movs	r3, #15
200027f0:	18fb      	adds	r3, r7, r3
200027f2:	220f      	movs	r2, #15
200027f4:	18ba      	adds	r2, r7, r2
200027f6:	7812      	ldrb	r2, [r2, #0]
200027f8:	3240      	adds	r2, #64	; 0x40
200027fa:	701a      	strb	r2, [r3, #0]
	}
	ascii_write_cmd(0x80 | address);
200027fc:	230f      	movs	r3, #15
200027fe:	18fb      	adds	r3, r7, r3
20002800:	781b      	ldrb	r3, [r3, #0]
20002802:	2280      	movs	r2, #128	; 0x80
20002804:	4252      	negs	r2, r2
20002806:	4313      	orrs	r3, r2
20002808:	b2db      	uxtb	r3, r3
2000280a:	0018      	movs	r0, r3
2000280c:	f7ff ff0e 	bl	2000262c <ascii_write_cmd>
}
20002810:	46c0      	nop			; (mov r8, r8)
20002812:	46bd      	mov	sp, r7
20002814:	b004      	add	sp, #16
20002816:	bd80      	pop	{r7, pc}

20002818 <ascii_init>:

void ascii_init(void){
20002818:	b580      	push	{r7, lr}
2000281a:	af00      	add	r7, sp, #0
	//initiera displayen:
		while((ascii_read_status() & 0x80) == 0x80){} //VÃ¤nta tills displayed Ã¤r redo
2000281c:	46c0      	nop			; (mov r8, r8)
2000281e:	f7ff ff2f 	bl	20002680 <ascii_read_status>
20002822:	0003      	movs	r3, r0
20002824:	001a      	movs	r2, r3
20002826:	2380      	movs	r3, #128	; 0x80
20002828:	4013      	ands	r3, r2
2000282a:	2b80      	cmp	r3, #128	; 0x80
2000282c:	d0f7      	beq.n	2000281e <ascii_init+0x6>
		delay_micro(20); //latenstid 
2000282e:	2014      	movs	r0, #20
20002830:	f7fe ff76 	bl	20001720 <delay_micro>
		ascii_write_cmd(0x38); //Function set (39us), 000011NFXX, N = antal rader = 2, F = -->0=5x8<--, 1=5x11
20002834:	2038      	movs	r0, #56	; 0x38
20002836:	f7ff fef9 	bl	2000262c <ascii_write_cmd>
		delay_micro(100); //istÃƒÂ¤llet fÃƒÂ¶r 39us
2000283a:	2064      	movs	r0, #100	; 0x64
2000283c:	f7fe ff70 	bl	20001720 <delay_micro>
		
	// clear display
		while((ascii_read_status() & 0x80) == 0x80){} //VÃƒÂ¤nta tills displayed ÃƒÂ¤r redo
20002840:	46c0      	nop			; (mov r8, r8)
20002842:	f7ff ff1d 	bl	20002680 <ascii_read_status>
20002846:	0003      	movs	r3, r0
20002848:	001a      	movs	r2, r3
2000284a:	2380      	movs	r3, #128	; 0x80
2000284c:	4013      	ands	r3, r2
2000284e:	2b80      	cmp	r3, #128	; 0x80
20002850:	d0f7      	beq.n	20002842 <ascii_init+0x2a>
		delay_micro(20); //latenstid
20002852:	2014      	movs	r0, #20
20002854:	f7fe ff64 	bl	20001720 <delay_micro>
		ascii_write_cmd(0x01); 
20002858:	2001      	movs	r0, #1
2000285a:	f7ff fee7 	bl	2000262c <ascii_write_cmd>
		delay_micro(100); //istÃƒÂ¤llet fÃƒÂ¶r 39us
2000285e:	2064      	movs	r0, #100	; 0x64
20002860:	f7fe ff5e 	bl	20001720 <delay_micro>

	//display control:
		while((ascii_read_status() & 0x80) == 0x80){} //VÃƒÂ¤nta tills displayed ÃƒÂ¤r redo
20002864:	46c0      	nop			; (mov r8, r8)
20002866:	f7ff ff0b 	bl	20002680 <ascii_read_status>
2000286a:	0003      	movs	r3, r0
2000286c:	001a      	movs	r2, r3
2000286e:	2380      	movs	r3, #128	; 0x80
20002870:	4013      	ands	r3, r2
20002872:	2b80      	cmp	r3, #128	; 0x80
20002874:	d0f7      	beq.n	20002866 <ascii_init+0x4e>
		delay_micro(20); //latenstid
20002876:	2014      	movs	r0, #20
20002878:	f7fe ff52 	bl	20001720 <delay_micro>
		ascii_write_cmd(0x0C); //000001 + XXX. X:ena = 0:av / 1:pÃƒÂ¥ -  SkÃƒÂ¤rm/MarkÃƒÂ¶r/BlinkaMarkÃƒÂ¶ren
2000287c:	200c      	movs	r0, #12
2000287e:	f7ff fed5 	bl	2000262c <ascii_write_cmd>
		delay_micro(100); //istÃƒÂ¤llet fÃƒÂ¶r 39us
20002882:	2064      	movs	r0, #100	; 0x64
20002884:	f7fe ff4c 	bl	20001720 <delay_micro>
		
	// entry mode set
		while((ascii_read_status() & 0x80) == 0x80){} //VÃƒÂ¤nta tills displayed ÃƒÂ¤r redo
20002888:	46c0      	nop			; (mov r8, r8)
2000288a:	f7ff fef9 	bl	20002680 <ascii_read_status>
2000288e:	0003      	movs	r3, r0
20002890:	001a      	movs	r2, r3
20002892:	2380      	movs	r3, #128	; 0x80
20002894:	4013      	ands	r3, r2
20002896:	2b80      	cmp	r3, #128	; 0x80
20002898:	d0f7      	beq.n	2000288a <ascii_init+0x72>
		delay_micro(20); //latenstid
2000289a:	2014      	movs	r0, #20
2000289c:	f7fe ff40 	bl	20001720 <delay_micro>
		ascii_write_cmd(0x06); //00000001 + XY. X=0: markÃƒÂ¶ren vÃƒÂ¤nst. || X=1: marÃƒÂ¶kren hÃƒÂ¶g. - Y=0: skift av || Y=1: skift pÃƒÂ¥
200028a0:	2006      	movs	r0, #6
200028a2:	f7ff fec3 	bl	2000262c <ascii_write_cmd>
		delay_micro(100); //istÃƒÂ¤llet fÃƒÂ¶r 39us
200028a6:	2064      	movs	r0, #100	; 0x64
200028a8:	f7fe ff3a 	bl	20001720 <delay_micro>
		
		
}
200028ac:	46c0      	nop			; (mov r8, r8)
200028ae:	46bd      	mov	sp, r7
200028b0:	bd80      	pop	{r7, pc}

200028b2 <init_application>:

void init_application(void){
200028b2:	b580      	push	{r7, lr}
200028b4:	af00      	add	r7, sp, #0
	#ifdef USBDM
		*((unsigned long *) 0x40023830) = 0x18; //startar klockor pÃ¥ port D och E
		//__asm volatile ("LDR R0, =0x08000209\n BLX R0 \n"); //initiera PLL
	#endif
	//"initierar Port E med anvÃƒÂ¤ndning med LCD-modulen, dvs. sÃƒÂ¥vÃƒÂ¤l port E0-7 som E8-15 sÃƒÂ¤tts till utgÃƒÂ¥ngar
	* portModer = 0x55555555;
200028b6:	4b03      	ldr	r3, [pc, #12]	; (200028c4 <init_application+0x12>)
200028b8:	4a03      	ldr	r2, [pc, #12]	; (200028c8 <init_application+0x16>)
200028ba:	601a      	str	r2, [r3, #0]
}
200028bc:	46c0      	nop			; (mov r8, r8)
200028be:	46bd      	mov	sp, r7
200028c0:	bd80      	pop	{r7, pc}
200028c2:	46c0      	nop			; (mov r8, r8)
200028c4:	40021000 	andmi	r1, r2, r0
200028c8:	55555555 	ldrbpl	r5, [r5, #-1365]	; 0xfffffaab

200028cc <set_up_ascii>:

void set_up_ascii( void ) {
200028cc:	b580      	push	{r7, lr}
200028ce:	af00      	add	r7, sp, #0
	init_application();
200028d0:	f7ff ffef 	bl	200028b2 <init_application>
	ascii_init();
200028d4:	f7ff ffa0 	bl	20002818 <ascii_init>
}
200028d8:	46c0      	nop			; (mov r8, r8)
200028da:	46bd      	mov	sp, r7
200028dc:	bd80      	pop	{r7, pc}

200028de <clear_ascii>:

void clear_ascii( void ) {
200028de:	b590      	push	{r4, r7, lr}
200028e0:	b089      	sub	sp, #36	; 0x24
200028e2:	af00      	add	r7, sp, #0
	char *s;
	char clear[] = "                    ";
200028e4:	1d3b      	adds	r3, r7, #4
200028e6:	4a17      	ldr	r2, [pc, #92]	; (20002944 <clear_ascii+0x66>)
200028e8:	ca13      	ldmia	r2!, {r0, r1, r4}
200028ea:	c313      	stmia	r3!, {r0, r1, r4}
200028ec:	ca03      	ldmia	r2!, {r0, r1}
200028ee:	c303      	stmia	r3!, {r0, r1}
200028f0:	7812      	ldrb	r2, [r2, #0]
200028f2:	701a      	strb	r2, [r3, #0]
	
	s = clear;
200028f4:	1d3b      	adds	r3, r7, #4
200028f6:	61fb      	str	r3, [r7, #28]
	ascii_goToXY(1,1);
200028f8:	2101      	movs	r1, #1
200028fa:	2001      	movs	r0, #1
200028fc:	f7ff ff64 	bl	200027c8 <ascii_goToXY>
	while(*s){
20002900:	e006      	b.n	20002910 <clear_ascii+0x32>
		ascii_write_char(*s++);
20002902:	69fb      	ldr	r3, [r7, #28]
20002904:	1c5a      	adds	r2, r3, #1
20002906:	61fa      	str	r2, [r7, #28]
20002908:	781b      	ldrb	r3, [r3, #0]
2000290a:	0018      	movs	r0, r3
2000290c:	f7ff ff3e 	bl	2000278c <ascii_write_char>
	while(*s){
20002910:	69fb      	ldr	r3, [r7, #28]
20002912:	781b      	ldrb	r3, [r3, #0]
20002914:	2b00      	cmp	r3, #0
20002916:	d1f4      	bne.n	20002902 <clear_ascii+0x24>
	}
	s = clear;
20002918:	1d3b      	adds	r3, r7, #4
2000291a:	61fb      	str	r3, [r7, #28]
	ascii_goToXY(1,2);
2000291c:	2102      	movs	r1, #2
2000291e:	2001      	movs	r0, #1
20002920:	f7ff ff52 	bl	200027c8 <ascii_goToXY>
	while(*s){
20002924:	e006      	b.n	20002934 <clear_ascii+0x56>
		ascii_write_char(*s++);
20002926:	69fb      	ldr	r3, [r7, #28]
20002928:	1c5a      	adds	r2, r3, #1
2000292a:	61fa      	str	r2, [r7, #28]
2000292c:	781b      	ldrb	r3, [r3, #0]
2000292e:	0018      	movs	r0, r3
20002930:	f7ff ff2c 	bl	2000278c <ascii_write_char>
	while(*s){
20002934:	69fb      	ldr	r3, [r7, #28]
20002936:	781b      	ldrb	r3, [r3, #0]
20002938:	2b00      	cmp	r3, #0
2000293a:	d1f4      	bne.n	20002926 <clear_ascii+0x48>
	}
}
2000293c:	46c0      	nop			; (mov r8, r8)
2000293e:	46bd      	mov	sp, r7
20002940:	b009      	add	sp, #36	; 0x24
20002942:	bd90      	pop	{r4, r7, pc}
20002944:	20008b90 	mulcs	r0, r0, fp

20002948 <ascii_write>:

void ascii_write(char *row1, char *row2) {
20002948:	b580      	push	{r7, lr}
2000294a:	b082      	sub	sp, #8
2000294c:	af00      	add	r7, sp, #0
2000294e:	6078      	str	r0, [r7, #4]
20002950:	6039      	str	r1, [r7, #0]
	clear_ascii();
20002952:	f7ff ffc4 	bl	200028de <clear_ascii>
	
	ascii_goToXY(1,1);
20002956:	2101      	movs	r1, #1
20002958:	2001      	movs	r0, #1
2000295a:	f7ff ff35 	bl	200027c8 <ascii_goToXY>
	while(*row1){
2000295e:	e006      	b.n	2000296e <ascii_write+0x26>
		ascii_write_char(*row1++);
20002960:	687b      	ldr	r3, [r7, #4]
20002962:	1c5a      	adds	r2, r3, #1
20002964:	607a      	str	r2, [r7, #4]
20002966:	781b      	ldrb	r3, [r3, #0]
20002968:	0018      	movs	r0, r3
2000296a:	f7ff ff0f 	bl	2000278c <ascii_write_char>
	while(*row1){
2000296e:	687b      	ldr	r3, [r7, #4]
20002970:	781b      	ldrb	r3, [r3, #0]
20002972:	2b00      	cmp	r3, #0
20002974:	d1f4      	bne.n	20002960 <ascii_write+0x18>
	}	
	ascii_goToXY(1,2);
20002976:	2102      	movs	r1, #2
20002978:	2001      	movs	r0, #1
2000297a:	f7ff ff25 	bl	200027c8 <ascii_goToXY>
	while(*row2){
2000297e:	e006      	b.n	2000298e <ascii_write+0x46>
		ascii_write_char(*row2++);
20002980:	683b      	ldr	r3, [r7, #0]
20002982:	1c5a      	adds	r2, r3, #1
20002984:	603a      	str	r2, [r7, #0]
20002986:	781b      	ldrb	r3, [r3, #0]
20002988:	0018      	movs	r0, r3
2000298a:	f7ff feff 	bl	2000278c <ascii_write_char>
	while(*row2){
2000298e:	683b      	ldr	r3, [r7, #0]
20002990:	781b      	ldrb	r3, [r3, #0]
20002992:	2b00      	cmp	r3, #0
20002994:	d1f4      	bne.n	20002980 <ascii_write+0x38>
	}
	
	ascii_goToXY(21,1);
20002996:	2101      	movs	r1, #1
20002998:	2015      	movs	r0, #21
2000299a:	f7ff ff15 	bl	200027c8 <ascii_goToXY>
}
2000299e:	46c0      	nop			; (mov r8, r8)
200029a0:	46bd      	mov	sp, r7
200029a2:	b002      	add	sp, #8
200029a4:	bd80      	pop	{r7, pc}

200029a6 <ascii_write_part>:

void ascii_write_part(char *row1, char *row2, int limit1, int limit2) {
200029a6:	b580      	push	{r7, lr}
200029a8:	b086      	sub	sp, #24
200029aa:	af00      	add	r7, sp, #0
200029ac:	60f8      	str	r0, [r7, #12]
200029ae:	60b9      	str	r1, [r7, #8]
200029b0:	607a      	str	r2, [r7, #4]
200029b2:	603b      	str	r3, [r7, #0]
	clear_ascii();
200029b4:	f7ff ff93 	bl	200028de <clear_ascii>
	
	ascii_goToXY(1,1);
200029b8:	2101      	movs	r1, #1
200029ba:	2001      	movs	r0, #1
200029bc:	f7ff ff04 	bl	200027c8 <ascii_goToXY>
	int i = 0;
200029c0:	2300      	movs	r3, #0
200029c2:	617b      	str	r3, [r7, #20]
	if(limit1 > 0) {
200029c4:	687b      	ldr	r3, [r7, #4]
200029c6:	2b00      	cmp	r3, #0
200029c8:	dd11      	ble.n	200029ee <ascii_write_part+0x48>
		while(*row1 && (i++ < limit1)){
200029ca:	e006      	b.n	200029da <ascii_write_part+0x34>
			ascii_write_char(*row1++);
200029cc:	68fb      	ldr	r3, [r7, #12]
200029ce:	1c5a      	adds	r2, r3, #1
200029d0:	60fa      	str	r2, [r7, #12]
200029d2:	781b      	ldrb	r3, [r3, #0]
200029d4:	0018      	movs	r0, r3
200029d6:	f7ff fed9 	bl	2000278c <ascii_write_char>
		while(*row1 && (i++ < limit1)){
200029da:	68fb      	ldr	r3, [r7, #12]
200029dc:	781b      	ldrb	r3, [r3, #0]
200029de:	2b00      	cmp	r3, #0
200029e0:	d005      	beq.n	200029ee <ascii_write_part+0x48>
200029e2:	697b      	ldr	r3, [r7, #20]
200029e4:	1c5a      	adds	r2, r3, #1
200029e6:	617a      	str	r2, [r7, #20]
200029e8:	687a      	ldr	r2, [r7, #4]
200029ea:	4293      	cmp	r3, r2
200029ec:	dbee      	blt.n	200029cc <ascii_write_part+0x26>
		}			
	}

	ascii_goToXY(1,2);
200029ee:	2102      	movs	r1, #2
200029f0:	2001      	movs	r0, #1
200029f2:	f7ff fee9 	bl	200027c8 <ascii_goToXY>
	i = 0;
200029f6:	2300      	movs	r3, #0
200029f8:	617b      	str	r3, [r7, #20]
	if(limit2 > 0) {
200029fa:	683b      	ldr	r3, [r7, #0]
200029fc:	2b00      	cmp	r3, #0
200029fe:	dd11      	ble.n	20002a24 <ascii_write_part+0x7e>
		while(*row2 && (i++ < limit2)){
20002a00:	e006      	b.n	20002a10 <ascii_write_part+0x6a>
			ascii_write_char(*row2++);
20002a02:	68bb      	ldr	r3, [r7, #8]
20002a04:	1c5a      	adds	r2, r3, #1
20002a06:	60ba      	str	r2, [r7, #8]
20002a08:	781b      	ldrb	r3, [r3, #0]
20002a0a:	0018      	movs	r0, r3
20002a0c:	f7ff febe 	bl	2000278c <ascii_write_char>
		while(*row2 && (i++ < limit2)){
20002a10:	68bb      	ldr	r3, [r7, #8]
20002a12:	781b      	ldrb	r3, [r3, #0]
20002a14:	2b00      	cmp	r3, #0
20002a16:	d005      	beq.n	20002a24 <ascii_write_part+0x7e>
20002a18:	697b      	ldr	r3, [r7, #20]
20002a1a:	1c5a      	adds	r2, r3, #1
20002a1c:	617a      	str	r2, [r7, #20]
20002a1e:	683a      	ldr	r2, [r7, #0]
20002a20:	4293      	cmp	r3, r2
20002a22:	dbee      	blt.n	20002a02 <ascii_write_part+0x5c>
		}
	}
	
	ascii_goToXY(21,1);
20002a24:	2101      	movs	r1, #1
20002a26:	2015      	movs	r0, #21
20002a28:	f7ff fece 	bl	200027c8 <ascii_goToXY>
}
20002a2c:	46c0      	nop			; (mov r8, r8)
20002a2e:	46bd      	mov	sp, r7
20002a30:	b006      	add	sp, #24
20002a32:	bd80      	pop	{r7, pc}

20002a34 <ascii_test>:



void ascii_test(void) {
20002a34:	b590      	push	{r4, r7, lr}
20002a36:	b08b      	sub	sp, #44	; 0x2c
20002a38:	af00      	add	r7, sp, #0
	char *s;
	char test1[] = "Alfanumerisk";
20002a3a:	2314      	movs	r3, #20
20002a3c:	18fb      	adds	r3, r7, r3
20002a3e:	4a1c      	ldr	r2, [pc, #112]	; (20002ab0 <ascii_test+0x7c>)
20002a40:	ca13      	ldmia	r2!, {r0, r1, r4}
20002a42:	c313      	stmia	r3!, {r0, r1, r4}
20002a44:	7812      	ldrb	r2, [r2, #0]
20002a46:	701a      	strb	r2, [r3, #0]
	char test2[] = "hardåäöare suger";
20002a48:	003b      	movs	r3, r7
20002a4a:	4a1a      	ldr	r2, [pc, #104]	; (20002ab4 <ascii_test+0x80>)
20002a4c:	ca13      	ldmia	r2!, {r0, r1, r4}
20002a4e:	c313      	stmia	r3!, {r0, r1, r4}
20002a50:	ca03      	ldmia	r2!, {r0, r1}
20002a52:	c303      	stmia	r3!, {r0, r1}
	
	init_application();
20002a54:	f7ff ff2d 	bl	200028b2 <init_application>
	ascii_init();
20002a58:	f7ff fede 	bl	20002818 <ascii_init>
	ascii_goToXY(1,1);
20002a5c:	2101      	movs	r1, #1
20002a5e:	2001      	movs	r0, #1
20002a60:	f7ff feb2 	bl	200027c8 <ascii_goToXY>
	s = test1;
20002a64:	2314      	movs	r3, #20
20002a66:	18fb      	adds	r3, r7, r3
20002a68:	627b      	str	r3, [r7, #36]	; 0x24
	while(*s){
20002a6a:	e006      	b.n	20002a7a <ascii_test+0x46>
		ascii_write_char(*s++);
20002a6c:	6a7b      	ldr	r3, [r7, #36]	; 0x24
20002a6e:	1c5a      	adds	r2, r3, #1
20002a70:	627a      	str	r2, [r7, #36]	; 0x24
20002a72:	781b      	ldrb	r3, [r3, #0]
20002a74:	0018      	movs	r0, r3
20002a76:	f7ff fe89 	bl	2000278c <ascii_write_char>
	while(*s){
20002a7a:	6a7b      	ldr	r3, [r7, #36]	; 0x24
20002a7c:	781b      	ldrb	r3, [r3, #0]
20002a7e:	2b00      	cmp	r3, #0
20002a80:	d1f4      	bne.n	20002a6c <ascii_test+0x38>
	}
	ascii_goToXY(1,2);
20002a82:	2102      	movs	r1, #2
20002a84:	2001      	movs	r0, #1
20002a86:	f7ff fe9f 	bl	200027c8 <ascii_goToXY>
	s = test2;
20002a8a:	003b      	movs	r3, r7
20002a8c:	627b      	str	r3, [r7, #36]	; 0x24
	while(*s){
20002a8e:	e006      	b.n	20002a9e <ascii_test+0x6a>
		ascii_write_char(*s++);
20002a90:	6a7b      	ldr	r3, [r7, #36]	; 0x24
20002a92:	1c5a      	adds	r2, r3, #1
20002a94:	627a      	str	r2, [r7, #36]	; 0x24
20002a96:	781b      	ldrb	r3, [r3, #0]
20002a98:	0018      	movs	r0, r3
20002a9a:	f7ff fe77 	bl	2000278c <ascii_write_char>
	while(*s){
20002a9e:	6a7b      	ldr	r3, [r7, #36]	; 0x24
20002aa0:	781b      	ldrb	r3, [r3, #0]
20002aa2:	2b00      	cmp	r3, #0
20002aa4:	d1f4      	bne.n	20002a90 <ascii_test+0x5c>
	}
	return 0;
20002aa6:	46c0      	nop			; (mov r8, r8)
20002aa8:	46bd      	mov	sp, r7
20002aaa:	b00b      	add	sp, #44	; 0x2c
20002aac:	bd90      	pop	{r4, r7, pc}
20002aae:	46c0      	nop			; (mov r8, r8)
20002ab0:	20008ba8 	andcs	r8, r0, r8, lsr #23
20002ab4:	20008bb8 			; <UNDEFINED> instruction: 0x20008bb8

20002ab8 <display>:
#include "slow_text.h"
#include "ascii_display.h"

void display(SlowText *this, int length_of_row1) {
20002ab8:	b580      	push	{r7, lr}
20002aba:	b084      	sub	sp, #16
20002abc:	af00      	add	r7, sp, #0
20002abe:	6078      	str	r0, [r7, #4]
20002ac0:	6039      	str	r1, [r7, #0]
	int limit1 = this->counter / this->speed;
20002ac2:	687b      	ldr	r3, [r7, #4]
20002ac4:	689a      	ldr	r2, [r3, #8]
20002ac6:	687b      	ldr	r3, [r7, #4]
20002ac8:	68db      	ldr	r3, [r3, #12]
20002aca:	0019      	movs	r1, r3
20002acc:	0010      	movs	r0, r2
20002ace:	f000 f925 	bl	20002d1c <__divsi3>
20002ad2:	0003      	movs	r3, r0
20002ad4:	60fb      	str	r3, [r7, #12]
	int limit2 = this->counter / this->speed - length_of_row1;
20002ad6:	687b      	ldr	r3, [r7, #4]
20002ad8:	689a      	ldr	r2, [r3, #8]
20002ada:	687b      	ldr	r3, [r7, #4]
20002adc:	68db      	ldr	r3, [r3, #12]
20002ade:	0019      	movs	r1, r3
20002ae0:	0010      	movs	r0, r2
20002ae2:	f000 f91b 	bl	20002d1c <__divsi3>
20002ae6:	0003      	movs	r3, r0
20002ae8:	001a      	movs	r2, r3
20002aea:	683b      	ldr	r3, [r7, #0]
20002aec:	1ad3      	subs	r3, r2, r3
20002aee:	60bb      	str	r3, [r7, #8]
	ascii_write_part(this->row1, this->row2, limit1, limit2);
20002af0:	687b      	ldr	r3, [r7, #4]
20002af2:	6818      	ldr	r0, [r3, #0]
20002af4:	687b      	ldr	r3, [r7, #4]
20002af6:	6859      	ldr	r1, [r3, #4]
20002af8:	68bb      	ldr	r3, [r7, #8]
20002afa:	68fa      	ldr	r2, [r7, #12]
20002afc:	f7ff ff53 	bl	200029a6 <ascii_write_part>
	
	this->counter++;
20002b00:	687b      	ldr	r3, [r7, #4]
20002b02:	689b      	ldr	r3, [r3, #8]
20002b04:	1c5a      	adds	r2, r3, #1
20002b06:	687b      	ldr	r3, [r7, #4]
20002b08:	609a      	str	r2, [r3, #8]
}
20002b0a:	46c0      	nop			; (mov r8, r8)
20002b0c:	46bd      	mov	sp, r7
20002b0e:	b004      	add	sp, #16
20002b10:	bd80      	pop	{r7, pc}

20002b12 <init_slow_text>:

void init_slow_text(SlowText *obj, char *row1, char *row2, int speed) {
20002b12:	b580      	push	{r7, lr}
20002b14:	b084      	sub	sp, #16
20002b16:	af00      	add	r7, sp, #0
20002b18:	60f8      	str	r0, [r7, #12]
20002b1a:	60b9      	str	r1, [r7, #8]
20002b1c:	607a      	str	r2, [r7, #4]
20002b1e:	603b      	str	r3, [r7, #0]
	obj->row1 = row1;
20002b20:	68fb      	ldr	r3, [r7, #12]
20002b22:	68ba      	ldr	r2, [r7, #8]
20002b24:	601a      	str	r2, [r3, #0]
	obj->row2 = row2;
20002b26:	68fb      	ldr	r3, [r7, #12]
20002b28:	687a      	ldr	r2, [r7, #4]
20002b2a:	605a      	str	r2, [r3, #4]
	obj->speed = speed;
20002b2c:	68fb      	ldr	r3, [r7, #12]
20002b2e:	683a      	ldr	r2, [r7, #0]
20002b30:	60da      	str	r2, [r3, #12]
	obj->counter = 0;
20002b32:	68fb      	ldr	r3, [r7, #12]
20002b34:	2200      	movs	r2, #0
20002b36:	609a      	str	r2, [r3, #8]
	obj->display = display;
20002b38:	68fb      	ldr	r3, [r7, #12]
20002b3a:	4a03      	ldr	r2, [pc, #12]	; (20002b48 <init_slow_text+0x36>)
20002b3c:	611a      	str	r2, [r3, #16]
20002b3e:	46c0      	nop			; (mov r8, r8)
20002b40:	46bd      	mov	sp, r7
20002b42:	b004      	add	sp, #16
20002b44:	bd80      	pop	{r7, pc}
20002b46:	46c0      	nop			; (mov r8, r8)
20002b48:	20002ab9 			; <UNDEFINED> instruction: 0x20002ab9

20002b4c <initSprites>:


GameObject indoorsObj;
Image indoorsImage;
Image indoorsImages[1];
static void initSprites( void ) {	
20002b4c:	b580      	push	{r7, lr}
20002b4e:	b084      	sub	sp, #16
20002b50:	af00      	add	r7, sp, #0
	
	sprite *pointer11 = &tempIndoorsLight;
20002b52:	4b12      	ldr	r3, [pc, #72]	; (20002b9c <initSprites+0x50>)
20002b54:	60fb      	str	r3, [r7, #12]
	load_sprite(pointer11, indoors_light_bits, indoors_black_width, indoors_black_height);
20002b56:	4912      	ldr	r1, [pc, #72]	; (20002ba0 <initSprites+0x54>)
20002b58:	68f8      	ldr	r0, [r7, #12]
20002b5a:	2340      	movs	r3, #64	; 0x40
20002b5c:	2280      	movs	r2, #128	; 0x80
20002b5e:	f7ff fcd1 	bl	20002504 <load_sprite>
	indoorsLight = pointer11;
20002b62:	4b10      	ldr	r3, [pc, #64]	; (20002ba4 <initSprites+0x58>)
20002b64:	68fa      	ldr	r2, [r7, #12]
20002b66:	601a      	str	r2, [r3, #0]
	sprite *pointer12 = &tempIndoorsGray;
20002b68:	4b0f      	ldr	r3, [pc, #60]	; (20002ba8 <initSprites+0x5c>)
20002b6a:	60bb      	str	r3, [r7, #8]
	load_sprite(pointer12, indoors_gray_bits, indoors_black_width, indoors_black_height);
20002b6c:	490f      	ldr	r1, [pc, #60]	; (20002bac <initSprites+0x60>)
20002b6e:	68b8      	ldr	r0, [r7, #8]
20002b70:	2340      	movs	r3, #64	; 0x40
20002b72:	2280      	movs	r2, #128	; 0x80
20002b74:	f7ff fcc6 	bl	20002504 <load_sprite>
	indoorsGray = pointer12;
20002b78:	4b0d      	ldr	r3, [pc, #52]	; (20002bb0 <initSprites+0x64>)
20002b7a:	68ba      	ldr	r2, [r7, #8]
20002b7c:	601a      	str	r2, [r3, #0]
	sprite *pointer13 = &tempIndoorsBlack;
20002b7e:	4b0d      	ldr	r3, [pc, #52]	; (20002bb4 <initSprites+0x68>)
20002b80:	607b      	str	r3, [r7, #4]
	load_sprite(pointer13, indoors_black_bits, indoors_black_width, indoors_black_height);
20002b82:	490d      	ldr	r1, [pc, #52]	; (20002bb8 <initSprites+0x6c>)
20002b84:	6878      	ldr	r0, [r7, #4]
20002b86:	2340      	movs	r3, #64	; 0x40
20002b88:	2280      	movs	r2, #128	; 0x80
20002b8a:	f7ff fcbb 	bl	20002504 <load_sprite>
	indoorsBlack = pointer13;	
20002b8e:	4b0b      	ldr	r3, [pc, #44]	; (20002bbc <initSprites+0x70>)
20002b90:	687a      	ldr	r2, [r7, #4]
20002b92:	601a      	str	r2, [r3, #0]
	
}
20002b94:	46c0      	nop			; (mov r8, r8)
20002b96:	46bd      	mov	sp, r7
20002b98:	b004      	add	sp, #16
20002b9a:	bd80      	pop	{r7, pc}
20002b9c:	2000517c 	andcs	r5, r0, ip, ror r1
20002ba0:	200079e8 	andcs	r7, r0, r8, ror #19
20002ba4:	200051d8 	ldrdcs	r5, [r0], -r8
20002ba8:	20005170 	andcs	r5, r0, r0, ror r1
20002bac:	200075e8 	andcs	r7, r0, r8, ror #11
20002bb0:	20005194 	mulcs	r0, r4, r1
20002bb4:	20005188 	andcs	r5, r0, r8, lsl #3
20002bb8:	200071e8 	andcs	r7, r0, r8, ror #3
20002bbc:	200051c8 	andcs	r5, r0, r8, asr #3

20002bc0 <init_indoors>:
	
void init_indoors( GameObject *indoorsObj ) {
20002bc0:	b590      	push	{r4, r7, lr}
20002bc2:	b083      	sub	sp, #12
20002bc4:	af00      	add	r7, sp, #0
20002bc6:	6078      	str	r0, [r7, #4]
	static int firstTime = 1;
	if (firstTime) {
20002bc8:	4b14      	ldr	r3, [pc, #80]	; (20002c1c <init_indoors+0x5c>)
20002bca:	681b      	ldr	r3, [r3, #0]
20002bcc:	2b00      	cmp	r3, #0
20002bce:	d011      	beq.n	20002bf4 <init_indoors+0x34>
		initSprites();
20002bd0:	f7ff ffbc 	bl	20002b4c <initSprites>
		firstTime = 0;			
20002bd4:	4b11      	ldr	r3, [pc, #68]	; (20002c1c <init_indoors+0x5c>)
20002bd6:	2200      	movs	r2, #0
20002bd8:	601a      	str	r2, [r3, #0]

		indoorsImages[0] = indoorsImage;
20002bda:	4b11      	ldr	r3, [pc, #68]	; (20002c20 <init_indoors+0x60>)
20002bdc:	4a11      	ldr	r2, [pc, #68]	; (20002c24 <init_indoors+0x64>)
20002bde:	ca13      	ldmia	r2!, {r0, r1, r4}
20002be0:	c313      	stmia	r3!, {r0, r1, r4}
		
		load_image(&indoorsImages[0], indoorsBlack, indoorsGray, indoorsLight);
20002be2:	4b11      	ldr	r3, [pc, #68]	; (20002c28 <init_indoors+0x68>)
20002be4:	6819      	ldr	r1, [r3, #0]
20002be6:	4b11      	ldr	r3, [pc, #68]	; (20002c2c <init_indoors+0x6c>)
20002be8:	681a      	ldr	r2, [r3, #0]
20002bea:	4b11      	ldr	r3, [pc, #68]	; (20002c30 <init_indoors+0x70>)
20002bec:	681b      	ldr	r3, [r3, #0]
20002bee:	480c      	ldr	r0, [pc, #48]	; (20002c20 <init_indoors+0x60>)
20002bf0:	f7ff fc74 	bl	200024dc <load_image>
	}
	
	indoorsObj->images = indoorsImages;
20002bf4:	687b      	ldr	r3, [r7, #4]
20002bf6:	4a0a      	ldr	r2, [pc, #40]	; (20002c20 <init_indoors+0x60>)
20002bf8:	601a      	str	r2, [r3, #0]

	indoorsObj->current_frame = 0;
20002bfa:	687b      	ldr	r3, [r7, #4]
20002bfc:	2200      	movs	r2, #0
20002bfe:	615a      	str	r2, [r3, #20]
	indoorsObj->n_frames = 1;
20002c00:	687b      	ldr	r3, [r7, #4]
20002c02:	2201      	movs	r2, #1
20002c04:	619a      	str	r2, [r3, #24]
	indoorsObj->animation_speed = 1;
20002c06:	687b      	ldr	r3, [r7, #4]
20002c08:	2201      	movs	r2, #1
20002c0a:	61da      	str	r2, [r3, #28]
	indoorsObj->animation_counter = 0;
20002c0c:	687b      	ldr	r3, [r7, #4]
20002c0e:	2200      	movs	r2, #0
20002c10:	621a      	str	r2, [r3, #32]
}
20002c12:	46c0      	nop			; (mov r8, r8)
20002c14:	46bd      	mov	sp, r7
20002c16:	b003      	add	sp, #12
20002c18:	bd90      	pop	{r4, r7, pc}
20002c1a:	46c0      	nop			; (mov r8, r8)
20002c1c:	20007de8 	andcs	r7, r0, r8, ror #27
20002c20:	200051bc 			; <UNDEFINED> instruction: 0x200051bc
20002c24:	200051cc 	andcs	r5, r0, ip, asr #3
20002c28:	200051c8 	andcs	r5, r0, r8, asr #3
20002c2c:	20005194 	mulcs	r0, r4, r1
20002c30:	200051d8 	ldrdcs	r5, [r0], -r8

20002c34 <initSprites>:


GameObject indoors2Obj;
Image indoors2Image;
Image indoors2Images[1];
static void initSprites( void ) {	
20002c34:	b580      	push	{r7, lr}
20002c36:	b084      	sub	sp, #16
20002c38:	af00      	add	r7, sp, #0
	
	sprite *pointer11 = &tempIndoors2Light;
20002c3a:	4b12      	ldr	r3, [pc, #72]	; (20002c84 <initSprites+0x50>)
20002c3c:	60fb      	str	r3, [r7, #12]
	load_sprite(pointer11, indoors2_light_bits, indoors2_black_width, indoors2_black_height);
20002c3e:	4912      	ldr	r1, [pc, #72]	; (20002c88 <initSprites+0x54>)
20002c40:	68f8      	ldr	r0, [r7, #12]
20002c42:	2340      	movs	r3, #64	; 0x40
20002c44:	2280      	movs	r2, #128	; 0x80
20002c46:	f7ff fc5d 	bl	20002504 <load_sprite>
	indoors2Light = pointer11;
20002c4a:	4b10      	ldr	r3, [pc, #64]	; (20002c8c <initSprites+0x58>)
20002c4c:	68fa      	ldr	r2, [r7, #12]
20002c4e:	601a      	str	r2, [r3, #0]
	sprite *pointer12 = &tempIndoors2Gray;
20002c50:	4b0f      	ldr	r3, [pc, #60]	; (20002c90 <initSprites+0x5c>)
20002c52:	60bb      	str	r3, [r7, #8]
	load_sprite(pointer12, indoors2_gray_bits, indoors2_black_width, indoors2_black_height);
20002c54:	490f      	ldr	r1, [pc, #60]	; (20002c94 <initSprites+0x60>)
20002c56:	68b8      	ldr	r0, [r7, #8]
20002c58:	2340      	movs	r3, #64	; 0x40
20002c5a:	2280      	movs	r2, #128	; 0x80
20002c5c:	f7ff fc52 	bl	20002504 <load_sprite>
	indoors2Gray = pointer12;
20002c60:	4b0d      	ldr	r3, [pc, #52]	; (20002c98 <initSprites+0x64>)
20002c62:	68ba      	ldr	r2, [r7, #8]
20002c64:	601a      	str	r2, [r3, #0]
	sprite *pointer13 = &tempIndoors2Black;
20002c66:	4b0d      	ldr	r3, [pc, #52]	; (20002c9c <initSprites+0x68>)
20002c68:	607b      	str	r3, [r7, #4]
	load_sprite(pointer13, indoors2_black_bits, indoors2_black_width, indoors2_black_height);
20002c6a:	490d      	ldr	r1, [pc, #52]	; (20002ca0 <initSprites+0x6c>)
20002c6c:	6878      	ldr	r0, [r7, #4]
20002c6e:	2340      	movs	r3, #64	; 0x40
20002c70:	2280      	movs	r2, #128	; 0x80
20002c72:	f7ff fc47 	bl	20002504 <load_sprite>
	indoors2Black = pointer13;	
20002c76:	4b0b      	ldr	r3, [pc, #44]	; (20002ca4 <initSprites+0x70>)
20002c78:	687a      	ldr	r2, [r7, #4]
20002c7a:	601a      	str	r2, [r3, #0]
	
}
20002c7c:	46c0      	nop			; (mov r8, r8)
20002c7e:	46bd      	mov	sp, r7
20002c80:	b004      	add	sp, #16
20002c82:	bd80      	pop	{r7, pc}
20002c84:	20005238 	andcs	r5, r0, r8, lsr r2
20002c88:	200085ec 	andcs	r8, r0, ip, ror #11
20002c8c:	20005228 	andcs	r5, r0, r8, lsr #4
20002c90:	2000521c 	andcs	r5, r0, ip, lsl r2
20002c94:	200081ec 	andcs	r8, r0, ip, ror #3
20002c98:	20005200 	andcs	r5, r0, r0, lsl #4
20002c9c:	2000522c 	andcs	r5, r0, ip, lsr #4
20002ca0:	20007dec 	andcs	r7, r0, ip, ror #27
20002ca4:	20005244 	andcs	r5, r0, r4, asr #4

20002ca8 <init_indoors2>:
	
void init_indoors2( GameObject *indoors2Obj ) {
20002ca8:	b590      	push	{r4, r7, lr}
20002caa:	b083      	sub	sp, #12
20002cac:	af00      	add	r7, sp, #0
20002cae:	6078      	str	r0, [r7, #4]
	static int firstTime = 1;
	if (firstTime) {
20002cb0:	4b14      	ldr	r3, [pc, #80]	; (20002d04 <init_indoors2+0x5c>)
20002cb2:	681b      	ldr	r3, [r3, #0]
20002cb4:	2b00      	cmp	r3, #0
20002cb6:	d011      	beq.n	20002cdc <init_indoors2+0x34>
		initSprites();
20002cb8:	f7ff ffbc 	bl	20002c34 <initSprites>
		firstTime = 0;			
20002cbc:	4b11      	ldr	r3, [pc, #68]	; (20002d04 <init_indoors2+0x5c>)
20002cbe:	2200      	movs	r2, #0
20002cc0:	601a      	str	r2, [r3, #0]

		indoors2Images[0] = indoors2Image;
20002cc2:	4b11      	ldr	r3, [pc, #68]	; (20002d08 <init_indoors2+0x60>)
20002cc4:	4a11      	ldr	r2, [pc, #68]	; (20002d0c <init_indoors2+0x64>)
20002cc6:	ca13      	ldmia	r2!, {r0, r1, r4}
20002cc8:	c313      	stmia	r3!, {r0, r1, r4}
		
		load_image(&indoors2Images[0], indoors2Black, indoors2Gray, indoors2Light);
20002cca:	4b11      	ldr	r3, [pc, #68]	; (20002d10 <init_indoors2+0x68>)
20002ccc:	6819      	ldr	r1, [r3, #0]
20002cce:	4b11      	ldr	r3, [pc, #68]	; (20002d14 <init_indoors2+0x6c>)
20002cd0:	681a      	ldr	r2, [r3, #0]
20002cd2:	4b11      	ldr	r3, [pc, #68]	; (20002d18 <init_indoors2+0x70>)
20002cd4:	681b      	ldr	r3, [r3, #0]
20002cd6:	480c      	ldr	r0, [pc, #48]	; (20002d08 <init_indoors2+0x60>)
20002cd8:	f7ff fc00 	bl	200024dc <load_image>
	}
	
	indoors2Obj->images = indoors2Images;
20002cdc:	687b      	ldr	r3, [r7, #4]
20002cde:	4a0a      	ldr	r2, [pc, #40]	; (20002d08 <init_indoors2+0x60>)
20002ce0:	601a      	str	r2, [r3, #0]

	indoors2Obj->current_frame = 0;
20002ce2:	687b      	ldr	r3, [r7, #4]
20002ce4:	2200      	movs	r2, #0
20002ce6:	615a      	str	r2, [r3, #20]
	indoors2Obj->n_frames = 1;
20002ce8:	687b      	ldr	r3, [r7, #4]
20002cea:	2201      	movs	r2, #1
20002cec:	619a      	str	r2, [r3, #24]
	indoors2Obj->animation_speed = 1;
20002cee:	687b      	ldr	r3, [r7, #4]
20002cf0:	2201      	movs	r2, #1
20002cf2:	61da      	str	r2, [r3, #28]
	indoors2Obj->animation_counter = 0;
20002cf4:	687b      	ldr	r3, [r7, #4]
20002cf6:	2200      	movs	r2, #0
20002cf8:	621a      	str	r2, [r3, #32]
}
20002cfa:	46c0      	nop			; (mov r8, r8)
20002cfc:	46bd      	mov	sp, r7
20002cfe:	b003      	add	sp, #12
20002d00:	bd90      	pop	{r4, r7, pc}
20002d02:	46c0      	nop			; (mov r8, r8)
20002d04:	200089ec 	andcs	r8, r0, ip, ror #19
20002d08:	20005204 	andcs	r5, r0, r4, lsl #4
20002d0c:	20005210 	andcs	r5, r0, r0, lsl r2
20002d10:	20005244 	andcs	r5, r0, r4, asr #4
20002d14:	20005200 	andcs	r5, r0, r0, lsl #4
20002d18:	20005228 	andcs	r5, r0, r8, lsr #4

20002d1c <__divsi3>:
20002d1c:	4603      	mov	r3, r0
20002d1e:	430b      	orrs	r3, r1
20002d20:	d47f      	bmi.n	20002e22 <__divsi3+0x106>
20002d22:	2200      	movs	r2, #0
20002d24:	0843      	lsrs	r3, r0, #1
20002d26:	428b      	cmp	r3, r1
20002d28:	d374      	bcc.n	20002e14 <__divsi3+0xf8>
20002d2a:	0903      	lsrs	r3, r0, #4
20002d2c:	428b      	cmp	r3, r1
20002d2e:	d35f      	bcc.n	20002df0 <__divsi3+0xd4>
20002d30:	0a03      	lsrs	r3, r0, #8
20002d32:	428b      	cmp	r3, r1
20002d34:	d344      	bcc.n	20002dc0 <__divsi3+0xa4>
20002d36:	0b03      	lsrs	r3, r0, #12
20002d38:	428b      	cmp	r3, r1
20002d3a:	d328      	bcc.n	20002d8e <__divsi3+0x72>
20002d3c:	0c03      	lsrs	r3, r0, #16
20002d3e:	428b      	cmp	r3, r1
20002d40:	d30d      	bcc.n	20002d5e <__divsi3+0x42>
20002d42:	22ff      	movs	r2, #255	; 0xff
20002d44:	0209      	lsls	r1, r1, #8
20002d46:	ba12      	rev	r2, r2
20002d48:	0c03      	lsrs	r3, r0, #16
20002d4a:	428b      	cmp	r3, r1
20002d4c:	d302      	bcc.n	20002d54 <__divsi3+0x38>
20002d4e:	1212      	asrs	r2, r2, #8
20002d50:	0209      	lsls	r1, r1, #8
20002d52:	d065      	beq.n	20002e20 <__divsi3+0x104>
20002d54:	0b03      	lsrs	r3, r0, #12
20002d56:	428b      	cmp	r3, r1
20002d58:	d319      	bcc.n	20002d8e <__divsi3+0x72>
20002d5a:	e000      	b.n	20002d5e <__divsi3+0x42>
20002d5c:	0a09      	lsrs	r1, r1, #8
20002d5e:	0bc3      	lsrs	r3, r0, #15
20002d60:	428b      	cmp	r3, r1
20002d62:	d301      	bcc.n	20002d68 <__divsi3+0x4c>
20002d64:	03cb      	lsls	r3, r1, #15
20002d66:	1ac0      	subs	r0, r0, r3
20002d68:	4152      	adcs	r2, r2
20002d6a:	0b83      	lsrs	r3, r0, #14
20002d6c:	428b      	cmp	r3, r1
20002d6e:	d301      	bcc.n	20002d74 <__divsi3+0x58>
20002d70:	038b      	lsls	r3, r1, #14
20002d72:	1ac0      	subs	r0, r0, r3
20002d74:	4152      	adcs	r2, r2
20002d76:	0b43      	lsrs	r3, r0, #13
20002d78:	428b      	cmp	r3, r1
20002d7a:	d301      	bcc.n	20002d80 <__divsi3+0x64>
20002d7c:	034b      	lsls	r3, r1, #13
20002d7e:	1ac0      	subs	r0, r0, r3
20002d80:	4152      	adcs	r2, r2
20002d82:	0b03      	lsrs	r3, r0, #12
20002d84:	428b      	cmp	r3, r1
20002d86:	d301      	bcc.n	20002d8c <__divsi3+0x70>
20002d88:	030b      	lsls	r3, r1, #12
20002d8a:	1ac0      	subs	r0, r0, r3
20002d8c:	4152      	adcs	r2, r2
20002d8e:	0ac3      	lsrs	r3, r0, #11
20002d90:	428b      	cmp	r3, r1
20002d92:	d301      	bcc.n	20002d98 <__divsi3+0x7c>
20002d94:	02cb      	lsls	r3, r1, #11
20002d96:	1ac0      	subs	r0, r0, r3
20002d98:	4152      	adcs	r2, r2
20002d9a:	0a83      	lsrs	r3, r0, #10
20002d9c:	428b      	cmp	r3, r1
20002d9e:	d301      	bcc.n	20002da4 <__divsi3+0x88>
20002da0:	028b      	lsls	r3, r1, #10
20002da2:	1ac0      	subs	r0, r0, r3
20002da4:	4152      	adcs	r2, r2
20002da6:	0a43      	lsrs	r3, r0, #9
20002da8:	428b      	cmp	r3, r1
20002daa:	d301      	bcc.n	20002db0 <__divsi3+0x94>
20002dac:	024b      	lsls	r3, r1, #9
20002dae:	1ac0      	subs	r0, r0, r3
20002db0:	4152      	adcs	r2, r2
20002db2:	0a03      	lsrs	r3, r0, #8
20002db4:	428b      	cmp	r3, r1
20002db6:	d301      	bcc.n	20002dbc <__divsi3+0xa0>
20002db8:	020b      	lsls	r3, r1, #8
20002dba:	1ac0      	subs	r0, r0, r3
20002dbc:	4152      	adcs	r2, r2
20002dbe:	d2cd      	bcs.n	20002d5c <__divsi3+0x40>
20002dc0:	09c3      	lsrs	r3, r0, #7
20002dc2:	428b      	cmp	r3, r1
20002dc4:	d301      	bcc.n	20002dca <__divsi3+0xae>
20002dc6:	01cb      	lsls	r3, r1, #7
20002dc8:	1ac0      	subs	r0, r0, r3
20002dca:	4152      	adcs	r2, r2
20002dcc:	0983      	lsrs	r3, r0, #6
20002dce:	428b      	cmp	r3, r1
20002dd0:	d301      	bcc.n	20002dd6 <__divsi3+0xba>
20002dd2:	018b      	lsls	r3, r1, #6
20002dd4:	1ac0      	subs	r0, r0, r3
20002dd6:	4152      	adcs	r2, r2
20002dd8:	0943      	lsrs	r3, r0, #5
20002dda:	428b      	cmp	r3, r1
20002ddc:	d301      	bcc.n	20002de2 <__divsi3+0xc6>
20002dde:	014b      	lsls	r3, r1, #5
20002de0:	1ac0      	subs	r0, r0, r3
20002de2:	4152      	adcs	r2, r2
20002de4:	0903      	lsrs	r3, r0, #4
20002de6:	428b      	cmp	r3, r1
20002de8:	d301      	bcc.n	20002dee <__divsi3+0xd2>
20002dea:	010b      	lsls	r3, r1, #4
20002dec:	1ac0      	subs	r0, r0, r3
20002dee:	4152      	adcs	r2, r2
20002df0:	08c3      	lsrs	r3, r0, #3
20002df2:	428b      	cmp	r3, r1
20002df4:	d301      	bcc.n	20002dfa <__divsi3+0xde>
20002df6:	00cb      	lsls	r3, r1, #3
20002df8:	1ac0      	subs	r0, r0, r3
20002dfa:	4152      	adcs	r2, r2
20002dfc:	0883      	lsrs	r3, r0, #2
20002dfe:	428b      	cmp	r3, r1
20002e00:	d301      	bcc.n	20002e06 <__divsi3+0xea>
20002e02:	008b      	lsls	r3, r1, #2
20002e04:	1ac0      	subs	r0, r0, r3
20002e06:	4152      	adcs	r2, r2
20002e08:	0843      	lsrs	r3, r0, #1
20002e0a:	428b      	cmp	r3, r1
20002e0c:	d301      	bcc.n	20002e12 <__divsi3+0xf6>
20002e0e:	004b      	lsls	r3, r1, #1
20002e10:	1ac0      	subs	r0, r0, r3
20002e12:	4152      	adcs	r2, r2
20002e14:	1a41      	subs	r1, r0, r1
20002e16:	d200      	bcs.n	20002e1a <__divsi3+0xfe>
20002e18:	4601      	mov	r1, r0
20002e1a:	4152      	adcs	r2, r2
20002e1c:	4610      	mov	r0, r2
20002e1e:	4770      	bx	lr
20002e20:	e05d      	b.n	20002ede <__divsi3+0x1c2>
20002e22:	0fca      	lsrs	r2, r1, #31
20002e24:	d000      	beq.n	20002e28 <__divsi3+0x10c>
20002e26:	4249      	negs	r1, r1
20002e28:	1003      	asrs	r3, r0, #32
20002e2a:	d300      	bcc.n	20002e2e <__divsi3+0x112>
20002e2c:	4240      	negs	r0, r0
20002e2e:	4053      	eors	r3, r2
20002e30:	2200      	movs	r2, #0
20002e32:	469c      	mov	ip, r3
20002e34:	0903      	lsrs	r3, r0, #4
20002e36:	428b      	cmp	r3, r1
20002e38:	d32d      	bcc.n	20002e96 <__divsi3+0x17a>
20002e3a:	0a03      	lsrs	r3, r0, #8
20002e3c:	428b      	cmp	r3, r1
20002e3e:	d312      	bcc.n	20002e66 <__divsi3+0x14a>
20002e40:	22fc      	movs	r2, #252	; 0xfc
20002e42:	0189      	lsls	r1, r1, #6
20002e44:	ba12      	rev	r2, r2
20002e46:	0a03      	lsrs	r3, r0, #8
20002e48:	428b      	cmp	r3, r1
20002e4a:	d30c      	bcc.n	20002e66 <__divsi3+0x14a>
20002e4c:	0189      	lsls	r1, r1, #6
20002e4e:	1192      	asrs	r2, r2, #6
20002e50:	428b      	cmp	r3, r1
20002e52:	d308      	bcc.n	20002e66 <__divsi3+0x14a>
20002e54:	0189      	lsls	r1, r1, #6
20002e56:	1192      	asrs	r2, r2, #6
20002e58:	428b      	cmp	r3, r1
20002e5a:	d304      	bcc.n	20002e66 <__divsi3+0x14a>
20002e5c:	0189      	lsls	r1, r1, #6
20002e5e:	d03a      	beq.n	20002ed6 <__divsi3+0x1ba>
20002e60:	1192      	asrs	r2, r2, #6
20002e62:	e000      	b.n	20002e66 <__divsi3+0x14a>
20002e64:	0989      	lsrs	r1, r1, #6
20002e66:	09c3      	lsrs	r3, r0, #7
20002e68:	428b      	cmp	r3, r1
20002e6a:	d301      	bcc.n	20002e70 <__divsi3+0x154>
20002e6c:	01cb      	lsls	r3, r1, #7
20002e6e:	1ac0      	subs	r0, r0, r3
20002e70:	4152      	adcs	r2, r2
20002e72:	0983      	lsrs	r3, r0, #6
20002e74:	428b      	cmp	r3, r1
20002e76:	d301      	bcc.n	20002e7c <__divsi3+0x160>
20002e78:	018b      	lsls	r3, r1, #6
20002e7a:	1ac0      	subs	r0, r0, r3
20002e7c:	4152      	adcs	r2, r2
20002e7e:	0943      	lsrs	r3, r0, #5
20002e80:	428b      	cmp	r3, r1
20002e82:	d301      	bcc.n	20002e88 <__divsi3+0x16c>
20002e84:	014b      	lsls	r3, r1, #5
20002e86:	1ac0      	subs	r0, r0, r3
20002e88:	4152      	adcs	r2, r2
20002e8a:	0903      	lsrs	r3, r0, #4
20002e8c:	428b      	cmp	r3, r1
20002e8e:	d301      	bcc.n	20002e94 <__divsi3+0x178>
20002e90:	010b      	lsls	r3, r1, #4
20002e92:	1ac0      	subs	r0, r0, r3
20002e94:	4152      	adcs	r2, r2
20002e96:	08c3      	lsrs	r3, r0, #3
20002e98:	428b      	cmp	r3, r1
20002e9a:	d301      	bcc.n	20002ea0 <__divsi3+0x184>
20002e9c:	00cb      	lsls	r3, r1, #3
20002e9e:	1ac0      	subs	r0, r0, r3
20002ea0:	4152      	adcs	r2, r2
20002ea2:	0883      	lsrs	r3, r0, #2
20002ea4:	428b      	cmp	r3, r1
20002ea6:	d301      	bcc.n	20002eac <__divsi3+0x190>
20002ea8:	008b      	lsls	r3, r1, #2
20002eaa:	1ac0      	subs	r0, r0, r3
20002eac:	4152      	adcs	r2, r2
20002eae:	d2d9      	bcs.n	20002e64 <__divsi3+0x148>
20002eb0:	0843      	lsrs	r3, r0, #1
20002eb2:	428b      	cmp	r3, r1
20002eb4:	d301      	bcc.n	20002eba <__divsi3+0x19e>
20002eb6:	004b      	lsls	r3, r1, #1
20002eb8:	1ac0      	subs	r0, r0, r3
20002eba:	4152      	adcs	r2, r2
20002ebc:	1a41      	subs	r1, r0, r1
20002ebe:	d200      	bcs.n	20002ec2 <__divsi3+0x1a6>
20002ec0:	4601      	mov	r1, r0
20002ec2:	4663      	mov	r3, ip
20002ec4:	4152      	adcs	r2, r2
20002ec6:	105b      	asrs	r3, r3, #1
20002ec8:	4610      	mov	r0, r2
20002eca:	d301      	bcc.n	20002ed0 <__divsi3+0x1b4>
20002ecc:	4240      	negs	r0, r0
20002ece:	2b00      	cmp	r3, #0
20002ed0:	d500      	bpl.n	20002ed4 <__divsi3+0x1b8>
20002ed2:	4249      	negs	r1, r1
20002ed4:	4770      	bx	lr
20002ed6:	4663      	mov	r3, ip
20002ed8:	105b      	asrs	r3, r3, #1
20002eda:	d300      	bcc.n	20002ede <__divsi3+0x1c2>
20002edc:	4240      	negs	r0, r0
20002ede:	b501      	push	{r0, lr}
20002ee0:	2000      	movs	r0, #0
20002ee2:	f000 f805 	bl	20002ef0 <__aeabi_idiv0>
20002ee6:	bd02      	pop	{r1, pc}

20002ee8 <__aeabi_idivmod>:
20002ee8:	2900      	cmp	r1, #0
20002eea:	d0f8      	beq.n	20002ede <__divsi3+0x1c2>
20002eec:	e716      	b.n	20002d1c <__divsi3>
20002eee:	4770      	bx	lr

20002ef0 <__aeabi_idiv0>:
20002ef0:	4770      	bx	lr
20002ef2:	46c0      	nop			; (mov r8, r8)

20002ef4 <counter>:
20002ef4:	00000000 	andeq	r0, r0, r0

20002ef8 <nGameObjects>:
20002ef8:	00000000 	andeq	r0, r0, r0

20002efc <lastRightValue.4092>:
20002efc:	00000000 	andeq	r0, r0, r0

20002f00 <speed.4094>:
20002f00:	00000000 	andeq	r0, r0, r0

20002f04 <lastLeftValue.4093>:
20002f04:	00000000 	andeq	r0, r0, r0

20002f08 <monster>:
20002f08:	00000000 	andeq	r0, r0, r0

20002f0c <tempCastleBlack>:
	...

20002f18 <tempPressGray>:
	...

20002f24 <tempTitleGray>:
	...

20002f30 <castleBlack>:
20002f30:	00000000 	andeq	r0, r0, r0

20002f34 <tempMonster>:
	...

20002f40 <pressLight>:
20002f40:	00000000 	andeq	r0, r0, r0

20002f44 <tempTitleBlack>:
	...

20002f50 <bg>:
20002f50:	00000000 	andeq	r0, r0, r0

20002f54 <tempMonsterGray>:
	...

20002f60 <tempTitleLight>:
	...

20002f6c <castleLight>:
20002f6c:	00000000 	andeq	r0, r0, r0

20002f70 <tempPressLight>:
	...

20002f7c <tempCastleLight>:
	...

20002f88 <pressGray>:
20002f88:	00000000 	andeq	r0, r0, r0

20002f8c <tempMonsterLight>:
	...

20002f98 <tempPressBlack>:
	...

20002fa4 <titleGray>:
20002fa4:	00000000 	andeq	r0, r0, r0

20002fa8 <tempCastleGray>:
	...

20002fb4 <monsterLight>:
20002fb4:	00000000 	andeq	r0, r0, r0

20002fb8 <titleLight>:
20002fb8:	00000000 	andeq	r0, r0, r0

20002fbc <castleGray>:
20002fbc:	00000000 	andeq	r0, r0, r0

20002fc0 <random_seed>:
20002fc0:	00000000 	andeq	r0, r0, r0

20002fc4 <pressBlack>:
20002fc4:	00000000 	andeq	r0, r0, r0

20002fc8 <monsterGray>:
20002fc8:	00000000 	andeq	r0, r0, r0

20002fcc <tempBg>:
	...

20002fd8 <titleBlack>:
20002fd8:	00000000 	andeq	r0, r0, r0

20002fdc <gameObjects>:
	...

2000316c <fire1Light>:
2000316c:	00000000 	andeq	r0, r0, r0

20003170 <tempFire3Light>:
	...

2000317c <fire3Gray>:
2000317c:	00000000 	andeq	r0, r0, r0

20003180 <tempFire4Gray>:
	...

2000318c <fire2Image>:
	...

20003198 <tempFire2Gray>:
	...

200031a4 <tempFireBlack>:
	...

200031b0 <fire3Image>:
	...

200031bc <tempFire4Light>:
	...

200031c8 <fire1Image>:
	...

200031d4 <fire4Light>:
200031d4:	00000000 	andeq	r0, r0, r0

200031d8 <fireObj>:
	...

200031fc <fire5Image>:
	...

20003208 <fireImages>:
	...

20003244 <tempFire5Gray>:
	...

20003250 <tempFire3Gray>:
	...

2000325c <fire4Image>:
	...

20003268 <fire4Gray>:
20003268:	00000000 	andeq	r0, r0, r0

2000326c <tempFire1Light>:
	...

20003278 <tempFire5Light>:
	...

20003284 <fire5Gray>:
20003284:	00000000 	andeq	r0, r0, r0

20003288 <fire2Light>:
20003288:	00000000 	andeq	r0, r0, r0

2000328c <fire5Light>:
2000328c:	00000000 	andeq	r0, r0, r0

20003290 <tempFire1Gray>:
	...

2000329c <fireBlack>:
2000329c:	00000000 	andeq	r0, r0, r0

200032a0 <tempFire2Light>:
	...

200032ac <fire3Light>:
200032ac:	00000000 	andeq	r0, r0, r0

200032b0 <fire2Gray>:
200032b0:	00000000 	andeq	r0, r0, r0

200032b4 <fire1Gray>:
200032b4:	00000000 	andeq	r0, r0, r0

200032b8 <bird4Light>:
200032b8:	00000000 	andeq	r0, r0, r0

200032bc <bird1Gray>:
200032bc:	00000000 	andeq	r0, r0, r0

200032c0 <bird6Image>:
	...

200032cc <bird5Black>:
200032cc:	00000000 	andeq	r0, r0, r0

200032d0 <tempBird4Black>:
	...

200032dc <bird2Image>:
	...

200032e8 <birdObj>:
	...

2000330c <bird1Image>:
	...

20003318 <bird3Black>:
20003318:	00000000 	andeq	r0, r0, r0

2000331c <bird4Gray>:
2000331c:	00000000 	andeq	r0, r0, r0

20003320 <bird2Black>:
20003320:	00000000 	andeq	r0, r0, r0

20003324 <bird1Black>:
20003324:	00000000 	andeq	r0, r0, r0

20003328 <bird4Image>:
	...

20003334 <tempBirdBlack>:
	...

20003340 <bird3Gray>:
20003340:	00000000 	andeq	r0, r0, r0

20003344 <tempBirdGray>:
	...

20003350 <bird5Gray>:
20003350:	00000000 	andeq	r0, r0, r0

20003354 <tempBird5Light>:
	...

20003360 <tempBird2Gray>:
	...

2000336c <bird3Light>:
2000336c:	00000000 	andeq	r0, r0, r0

20003370 <tempBird5Gray>:
	...

2000337c <tempBird5Black>:
	...

20003388 <bird5Image>:
	...

20003394 <bird5Light>:
20003394:	00000000 	andeq	r0, r0, r0

20003398 <tempBird3Black>:
	...

200033a4 <bird2Gray>:
200033a4:	00000000 	andeq	r0, r0, r0

200033a8 <tempBirdLight>:
	...

200033b4 <bird1Light>:
200033b4:	00000000 	andeq	r0, r0, r0

200033b8 <tempBird2Light>:
	...

200033c4 <bird3Image>:
	...

200033d0 <tempBird4Light>:
	...

200033dc <tempBird3Light>:
	...

200033e8 <tempBird3Gray>:
	...

200033f4 <birdImages>:
	...

2000343c <bird4Black>:
2000343c:	00000000 	andeq	r0, r0, r0

20003440 <tempBird2Black>:
	...

2000344c <tempBird4Gray>:
	...

20003458 <bird2Light>:
20003458:	00000000 	andeq	r0, r0, r0

2000345c <witch1Gray>:
2000345c:	00000000 	andeq	r0, r0, r0

20003460 <witch2Light>:
20003460:	00000000 	andeq	r0, r0, r0

20003464 <witchImages>:
	...

20003494 <witch2Image>:
	...

200034a0 <tempWitch2Black>:
	...

200034ac <tempWitchBlack>:
	...

200034b8 <tempWitch3Light>:
	...

200034c4 <witch4Image>:
	...

200034d0 <witch2Gray>:
200034d0:	00000000 	andeq	r0, r0, r0

200034d4 <tempWitchGray>:
	...

200034e0 <tempWitch3Black>:
	...

200034ec <tempWitch2Gray>:
	...

200034f8 <witch3Black>:
200034f8:	00000000 	andeq	r0, r0, r0

200034fc <witchObj>:
	...

20003520 <witch3Light>:
20003520:	00000000 	andeq	r0, r0, r0

20003524 <tempWitch3Gray>:
	...

20003530 <witch1Black>:
20003530:	00000000 	andeq	r0, r0, r0

20003534 <witch3Gray>:
20003534:	00000000 	andeq	r0, r0, r0

20003538 <witch1Image>:
	...

20003544 <tempWitchLight>:
	...

20003550 <tempWitch2Light>:
	...

2000355c <witch1Light>:
2000355c:	00000000 	andeq	r0, r0, r0

20003560 <witch3Image>:
	...

2000356c <witch2Black>:
2000356c:	00000000 	andeq	r0, r0, r0

20003570 <backBufferGray>:
	...

20003970 <draw_buffer_black_gray>:
	...

20003d70 <backBuffer>:
	...

20004170 <draw_buffer_black_light>:
	...

20004570 <draw_buffer_black>:
	...

20004970 <draw_buffer_black_gray_light>:
	...

20004d70 <backBufferLight>:
	...

20005170 <tempIndoorsGray>:
	...

2000517c <tempIndoorsLight>:
	...

20005188 <tempIndoorsBlack>:
	...

20005194 <indoorsGray>:
20005194:	00000000 	andeq	r0, r0, r0

20005198 <indoorsObj>:
	...

200051bc <indoorsImages>:
	...

200051c8 <indoorsBlack>:
200051c8:	00000000 	andeq	r0, r0, r0

200051cc <indoorsImage>:
	...

200051d8 <indoorsLight>:
200051d8:	00000000 	andeq	r0, r0, r0

200051dc <indoors2Obj>:
	...

20005200 <indoors2Gray>:
20005200:	00000000 	andeq	r0, r0, r0

20005204 <indoors2Images>:
	...

20005210 <indoors2Image>:
	...

2000521c <tempIndoors2Gray>:
	...

20005228 <indoors2Light>:
20005228:	00000000 	andeq	r0, r0, r0

2000522c <tempIndoors2Black>:
	...

20005238 <tempIndoors2Light>:
	...

20005244 <indoors2Black>:
20005244:	00000000 	andeq	r0, r0, r0

20005248 <monster_black_bits>:
	...
20005258:	0001c000 	andeq	ip, r1, r0
2000525c:	00023000 	andeq	r3, r2, r0
20005260:	00021000 	andeq	r1, r2, r0
20005264:	00060800 	andeq	r0, r6, r0, lsl #16
20005268:	00040800 	andeq	r0, r4, r0, lsl #16
2000526c:	00040800 	andeq	r0, r4, r0, lsl #16
20005270:	00092800 	andeq	r2, r9, r0, lsl #16
20005274:	00092800 	andeq	r2, r9, r0, lsl #16
20005278:	00100400 	andseq	r0, r0, r0, lsl #8
2000527c:	00100400 	andseq	r0, r0, r0, lsl #8
20005280:	00200200 	eoreq	r0, r0, r0, lsl #4
20005284:	00661b00 	rsbeq	r1, r6, r0, lsl #22
20005288:	0043b100 	subeq	fp, r3, r0, lsl #2
2000528c:	0080e080 	addeq	lr, r0, r0, lsl #1
20005290:	01800080 	orreq	r0, r0, r0, lsl #1
20005294:	01000040 	tsteq	r0, r0, asr #32
20005298:	02000040 	andeq	r0, r0, #64	; 0x40
2000529c:	02000060 	andeq	r0, r0, #96	; 0x60
200052a0:	02000020 	andeq	r0, r0, #32
200052a4:	03ff03e0 	mvnseq	r0, #224, 6	; 0x80000003
200052a8:	0001fc00 	andeq	pc, r1, r0, lsl #24
	...

200052c0 <monster_light_bits>:
	...
200052d4:	00010000 	andeq	r0, r1, r0
200052d8:	00018000 	andeq	r8, r1, r0
200052dc:	0001f000 	andeq	pc, r1, r0
200052e0:	0001f000 	andeq	pc, r1, r0
200052e4:	00009000 	andeq	r9, r0, r0
200052e8:	00009000 	andeq	r9, r0, r0
200052ec:	0000d000 	andeq	sp, r0, r0
200052f0:	0001f800 	andeq	pc, r1, r0, lsl #16
200052f4:	0003f800 	andeq	pc, r3, r0, lsl #16
200052f8:	0003fc00 	andeq	pc, r3, r0, lsl #24
200052fc:	0001e400 	andeq	lr, r1, r0, lsl #8
20005300:	00044c00 	andeq	r4, r4, r0, lsl #24
20005304:	00060c00 	andeq	r0, r6, r0, lsl #24
20005308:	0006ee00 	andeq	lr, r6, r0, lsl #28
2000530c:	000ffe00 	andeq	pc, pc, r0, lsl #28
20005310:	000f3f00 	andeq	r3, pc, r0, lsl #30
20005314:	00000780 	andeq	r0, r0, r0, lsl #15
20005318:	000003c0 	andeq	r0, r0, r0, asr #7
	...

20005338 <monster_gray_bits>:
	...
20005358:	00020000 	andeq	r0, r2, r0
2000535c:	00000000 	andeq	r0, r0, r0
20005360:	00040000 	andeq	r0, r4, r0
20005364:	00060000 	andeq	r0, r6, r0
20005368:	000e0000 	andeq	r0, lr, r0
2000536c:	000c0000 	andeq	r0, ip, r0
20005370:	001c0000 	andseq	r0, ip, r0
20005374:	00180000 	andseq	r0, r8, r0
20005378:	00380000 	eorseq	r0, r8, r0
2000537c:	00780000 	rsbseq	r0, r8, r0
20005380:	00780000 	rsbseq	r0, r8, r0
20005384:	00f00000 	rscseq	r0, r0, r0
20005388:	01f0c000 	mvnseq	ip, r0
2000538c:	01fff800 	mvnseq	pc, r0, lsl #16
20005390:	01fffc00 	mvnseq	pc, r0, lsl #24
20005394:	0000fc00 	andeq	pc, r0, r0, lsl #24
	...

200053b0 <press_black_bits>:
	...
200053e8:	001c0000 	andseq	r0, ip, r0
200053ec:	00000000 	andeq	r0, r0, r0
200053f0:	00240000 	eoreq	r0, r4, r0
200053f4:	00000000 	andeq	r0, r0, r0
200053f8:	00440000 	subeq	r0, r4, r0
200053fc:	00000000 	andeq	r0, r0, r0
20005400:	c5240000 	strgt	r0, [r4, #-0]!
20005404:	00000198 	muleq	r0, r8, r1
20005408:	2b1c0000 	blcs	20705410 <firstTime.4040+0x6fca24>
2000540c:	00000045 	andeq	r0, r0, r5, asr #32
20005410:	e1040000 	mrs	r0, (UNDEF: 4)
20005414:	000000cd 	andeq	r0, r0, sp, asr #1
20005418:	21040000 	mrscs	r0, (UNDEF: 4)
2000541c:	00000110 	andeq	r0, r0, r0, lsl r1
20005420:	c1040000 	mrsgt	r0, (UNDEF: 4)
20005424:	000000cc 	andeq	r0, r0, ip, asr #1
	...
20005454:	00000004 	andeq	r0, r0, r4
20005458:	00000000 	andeq	r0, r0, r0
2000545c:	00000004 	andeq	r0, r0, r4
20005460:	00000000 	andeq	r0, r0, r0
20005464:	00000004 	andeq	r0, r0, r4
20005468:	0494e000 	ldreq	lr, [r4], #0
2000546c:	00009334 	andeq	r9, r0, r4, lsr r3
20005470:	04ac9000 	strteq	r9, [ip], #0
20005474:	00009494 	muleq	r0, r4, r4
20005478:	04a49000 	strteq	r9, [r4], #0
2000547c:	0000978c 	andeq	r9, r0, ip, lsl #15
20005480:	04a49000 	strteq	r9, [r4], #0
20005484:	00009094 	muleq	r0, r4, r0
20005488:	07256000 	streq	r6, [r5, -r0]!
2000548c:	0000e324 	andeq	lr, r0, r4, lsr #6
20005490:	04000000 	streq	r0, [r0], #-0
20005494:	00008000 	andeq	r8, r0, r0
20005498:	04000000 	streq	r0, [r0], #-0
2000549c:	00008000 	andeq	r8, r0, r0
200054a0:	03000000 	movweq	r0, #0
200054a4:	00006000 	andeq	r6, r0, r0
	...

200054c8 <press_light_bits>:
	...
20005508:	00000200 	andeq	r0, r0, r0, lsl #4
2000550c:	00000000 	andeq	r0, r0, r0
20005510:	00000700 	andeq	r0, r0, r0, lsl #14
20005514:	00000000 	andeq	r0, r0, r0
20005518:	00000200 	andeq	r0, r0, r0, lsl #4
	...
2000555c:	00800000 	addeq	r0, r0, r0
20005560:	00000000 	andeq	r0, r0, r0
20005564:	01c00000 	biceq	r0, r0, r0
20005568:	00000000 	andeq	r0, r0, r0
2000556c:	00800000 	addeq	r0, r0, r0
20005570:	00000010 	andeq	r0, r0, r0, lsl r0
20005574:	00000000 	andeq	r0, r0, r0
20005578:	00000038 	andeq	r0, r0, r8, lsr r0
2000557c:	00000000 	andeq	r0, r0, r0
20005580:	00000010 	andeq	r0, r0, r0, lsl r0
	...

200055e0 <press_gray_bits>:
	...
20005620:	00180000 	andseq	r0, r8, r0
20005624:	00000000 	andeq	r0, r0, r0
20005628:	00380000 	eorseq	r0, r8, r0
2000562c:	00000000 	andeq	r0, r0, r0
20005630:	00580000 	subseq	r0, r8, r0
20005634:	00000020 	andeq	r0, r0, r0, lsr #32
20005638:	d4200000 	strtle	r0, [r0], #-0
2000563c:	0000039a 	muleq	r0, sl, r3
20005640:	0a380000 	beq	20e05648 <firstTime.4040+0xdfcc5c>
20005644:	00000102 	andeq	r0, r0, r2, lsl #2
20005648:	c2080000 	andgt	r0, r8, #0
2000564c:	00000223 	andeq	r0, r0, r3, lsr #4
20005650:	02080000 	andeq	r0, r8, #0
20005654:	00000311 	andeq	r0, r0, r1, lsl r3
20005658:	c1080000 	mrsgt	r0, (UNDEF: 8)
2000565c:	000001dd 	ldrdeq	r0, [r0], -sp
	...
2000568c:	00000008 	andeq	r0, r0, r8
20005690:	00000000 	andeq	r0, r0, r0
20005694:	00000008 	andeq	r0, r0, r8
20005698:	00000000 	andeq	r0, r0, r0
2000569c:	00000008 	andeq	r0, r0, r8
200056a0:	09116000 	ldmdbeq	r1, {sp, lr}
200056a4:	00012328 	andeq	r2, r1, r8, lsr #6
200056a8:	09596000 	ldmdbeq	r9, {sp, lr}^
200056ac:	00012810 	andeq	r2, r1, r0, lsl r8
200056b0:	0b492000 	bleq	2124d6b8 <firstTime.4040+0x1244ccc>
200056b4:	00012f08 	andeq	r2, r1, r8, lsl #30
200056b8:	08488000 	stmdaeq	r8, {pc}^
200056bc:	00010458 	andeq	r0, r1, r8, asr r4
200056c0:	0b6be000 	bleq	21afd6c8 <firstTime.4040+0x1af4cdc>
200056c4:	00016768 	andeq	r6, r1, r8, ror #14
200056c8:	08000000 	stmdaeq	r0, {}	; <UNPREDICTABLE>
200056cc:	00010000 	andeq	r0, r1, r0
200056d0:	0c000000 	stceq	0, cr0, [r0], {-0}
200056d4:	00018000 	andeq	r8, r1, r0
200056d8:	06000000 	streq	r0, [r0], -r0
200056dc:	0000c000 	andeq	ip, r0, r0
	...

200056f8 <castle_black_bits>:
200056f8:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
200056fc:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
20005700:	000007ff 	strdeq	r0, [r0], -pc	; <UNPREDICTABLE>
20005704:	00000000 	andeq	r0, r0, r0
20005708:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
2000570c:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
20005710:	000001ff 	strdeq	r0, [r0], -pc	; <UNPREDICTABLE>
20005714:	00000000 	andeq	r0, r0, r0
20005718:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
2000571c:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
20005720:	00000001 	andeq	r0, r0, r1
20005724:	00000000 	andeq	r0, r0, r0
20005728:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
2000572c:	7fffffff 	svcvc	0x00ffffff
	...
20005738:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
2000573c:	3fffffff 	svccc	0x00ffffff
	...
20005748:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
2000574c:	1fffffff 	svcne	0x00ffffff
	...
20005758:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
2000575c:	07ffffff 			; <UNDEFINED> instruction: 0x07ffffff
	...
20005768:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
2000576c:	03ffffff 	mvnseq	pc, #1020	; 0x3fc
	...
20005778:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
2000577c:	01ffffff 	ldrsheq	pc, [pc, #255]	; 20005883 <castle_black_bits+0x18b>	; <UNPREDICTABLE>
	...
20005788:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
2000578c:	00ffffff 	ldrshteq	pc, [pc], #255	; <UNPREDICTABLE>
	...
20005798:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
2000579c:	007fffff 	ldrshteq	pc, [pc], #-255	; <UNPREDICTABLE>
	...
200057a8:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
200057ac:	003fffff 	ldrshteq	pc, [pc], -pc	; <UNPREDICTABLE>
	...
200057b8:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
200057bc:	003fffff 	ldrshteq	pc, [pc], -pc	; <UNPREDICTABLE>
	...
200057c8:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
200057cc:	003fffff 	ldrshteq	pc, [pc], -pc	; <UNPREDICTABLE>
	...
200057d8:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
200057dc:	001fffff 			; <UNDEFINED> instruction: 0x001fffff
	...
200057e8:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
200057ec:	001fffff 			; <UNDEFINED> instruction: 0x001fffff
	...
200057f8:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
200057fc:	000fffff 	strdeq	pc, [pc], -pc	; <UNPREDICTABLE>
	...
20005808:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
2000580c:	000fffff 	strdeq	pc, [pc], -pc	; <UNPREDICTABLE>
	...
20005818:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
2000581c:	0007ffff 	strdeq	pc, [r7], -pc	; <UNPREDICTABLE>
	...
20005828:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
2000582c:	0003ffff 	strdeq	pc, [r3], -pc	; <UNPREDICTABLE>
	...
20005838:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
2000583c:	0003ffff 	strdeq	pc, [r3], -pc	; <UNPREDICTABLE>
	...
20005848:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
2000584c:	0003ffff 	strdeq	pc, [r3], -pc	; <UNPREDICTABLE>
	...
20005858:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
2000585c:	0003ffff 	strdeq	pc, [r3], -pc	; <UNPREDICTABLE>
20005860:	04900000 	ldreq	r0, [r0], #0
20005864:	00000000 	andeq	r0, r0, r0
20005868:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
2000586c:	0003ffff 	strdeq	pc, [r3], -pc	; <UNPREDICTABLE>
20005870:	0b680000 	bleq	21a05878 <firstTime.4040+0x19fce8c>
20005874:	00000000 	andeq	r0, r0, r0
20005878:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
2000587c:	0001ffff 	strdeq	pc, [r1], -pc	; <UNPREDICTABLE>
20005880:	08080000 	stmdaeq	r8, {}	; <UNPREDICTABLE>
20005884:	00000000 	andeq	r0, r0, r0
20005888:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
2000588c:	0001ffff 	strdeq	pc, [r1], -pc	; <UNPREDICTABLE>
20005890:	08080000 	stmdaeq	r8, {}	; <UNPREDICTABLE>
20005894:	00000092 	muleq	r0, r2, r0
20005898:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
2000589c:	0001ffff 	strdeq	pc, [r1], -pc	; <UNPREDICTABLE>
200058a0:	04100000 	ldreq	r0, [r0], #-0
200058a4:	0000016d 	andeq	r0, r0, sp, ror #2
200058a8:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
200058ac:	0001ffff 	strdeq	pc, [r1], -pc	; <UNPREDICTABLE>
200058b0:	04101240 	ldreq	r1, [r0], #-576	; 0xfffffdc0
200058b4:	00000101 	andeq	r0, r0, r1, lsl #2
200058b8:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
200058bc:	0000ffff 	strdeq	pc, [r0], -pc	; <UNPREDICTABLE>
200058c0:	04102da0 	ldreq	r2, [r0], #-3488	; 0xfffff260
200058c4:	00000101 	andeq	r0, r0, r1, lsl #2
200058c8:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
200058cc:	0000ffff 	strdeq	pc, [r0], -pc	; <UNPREDICTABLE>
200058d0:	04102020 	ldreq	r2, [r0], #-32	; 0xffffffe0
200058d4:	00000101 	andeq	r0, r0, r1, lsl #2
200058d8:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
200058dc:	0000ffff 	strdeq	pc, [r0], -pc	; <UNPREDICTABLE>
200058e0:	04102020 	ldreq	r2, [r0], #-32	; 0xffffffe0
200058e4:	00000101 	andeq	r0, r0, r1, lsl #2
200058e8:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
200058ec:	0000ffff 	strdeq	pc, [r0], -pc	; <UNPREDICTABLE>
200058f0:	04101040 	ldreq	r1, [r0], #-64	; 0xffffffc0
200058f4:	00000082 	andeq	r0, r0, r2, lsl #1
200058f8:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
200058fc:	0000ffff 	strdeq	pc, [r0], -pc	; <UNPREDICTABLE>
20005900:	04101040 	ldreq	r1, [r0], #-64	; 0xffffffc0
20005904:	00000092 	muleq	r0, r2, r0
20005908:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
2000590c:	0000ffff 	strdeq	pc, [r0], -pc	; <UNPREDICTABLE>
20005910:	04101040 	ldreq	r1, [r0], #-64	; 0xffffffc0
20005914:	012400a2 	smulwbeq	r4, r2, r0
20005918:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
2000591c:	00007fff 	strdeq	r7, [r0], -pc	; <UNPREDICTABLE>
20005920:	04101040 	ldreq	r1, [r0], #-64	; 0xffffffc0
20005924:	02da00a2 	sbcseq	r0, sl, #162	; 0xa2
20005928:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
2000592c:	00004fff 	strdeq	r4, [r0], -pc	; <UNPREDICTABLE>
20005930:	04101040 	ldreq	r1, [r0], #-64	; 0xffffffc0
20005934:	020200a2 	andeq	r0, r2, #162	; 0xa2
20005938:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
2000593c:	000007ff 	strdeq	r0, [r0], -pc	; <UNPREDICTABLE>
20005940:	08081040 	stmdaeq	r8, {r6, ip}
20005944:	0202009a 	andeq	r0, r2, #154	; 0x9a
20005948:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
2000594c:	000003ff 	strdeq	r0, [r0], -pc	; <UNPREDICTABLE>
20005950:	08082020 	stmdaeq	r8, {r5, sp}
20005954:	01040082 	smlabbeq	r4, r2, r0, r0
20005958:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
2000595c:	000003ff 	strdeq	r0, [r0], -pc	; <UNPREDICTABLE>
20005960:	48082020 	stmdami	r8, {r5, sp}
20005964:	01040102 	tsteq	r4, r2, lsl #2
20005968:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
2000596c:	000003ff 	strdeq	r0, [r0], -pc	; <UNPREDICTABLE>
20005970:	b0082020 	andlt	r2, r8, r0, lsr #32
20005974:	01040101 	tsteq	r4, r1, lsl #2
20005978:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
2000597c:	000001ff 	strdeq	r0, [r0], -pc	; <UNPREDICTABLE>
20005980:	00082220 	andeq	r2, r8, r0, lsr #4
20005984:	01040100 	mrseq	r0, (UNDEF: 20)
20005988:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
2000598c:	000001ff 	strdeq	r0, [r0], -pc	; <UNPREDICTABLE>
20005990:	00882420 	addeq	r2, r8, r0, lsr #8
20005994:	01040100 	mrseq	r0, (UNDEF: 20)
20005998:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
2000599c:	000000ff 	strdeq	r0, [r0], -pc	; <UNPREDICTABLE>
200059a0:	01082420 	tsteq	r8, r0, lsr #8
200059a4:	01045a00 	tsteq	r4, r0, lsl #20
200059a8:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
200059ac:	0000007f 	andeq	r0, r0, pc, ror r0
200059b0:	01082420 	tsteq	r8, r0, lsr #8
200059b4:	0104a400 	tsteq	r4, r0, lsl #8
200059b8:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
200059bc:	00000001 	andeq	r0, r0, r1
200059c0:	010b2320 	tsteq	fp, r0, lsr #6
200059c4:	01030001 	tsteq	r3, r1
200059c8:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
200059cc:	00000000 	andeq	r0, r0, r0
200059d0:	00c4c020 	sbceq	ip, r4, r0, lsr #32
200059d4:	02000002 	andeq	r0, r0, #2
200059d8:	3fffffff 	svccc	0x00ffffff
200059dc:	00000000 	andeq	r0, r0, r0
200059e0:	00000020 	andeq	r0, r0, r0, lsr #32
200059e4:	02200002 	eoreq	r0, r0, #2
200059e8:	3fffffff 	svccc	0x00ffffff
200059ec:	00000000 	andeq	r0, r0, r0
200059f0:	00000020 	andeq	r0, r0, r0, lsr #32
200059f4:	02400002 	subeq	r0, r0, #2
200059f8:	1fffffff 	svcne	0x00ffffff
200059fc:	00000000 	andeq	r0, r0, r0
20005a00:	80000020 	andhi	r0, r0, r0, lsr #32
20005a04:	02400001 	subeq	r0, r0, #1
20005a08:	1fffffff 	svcne	0x00ffffff
20005a0c:	00000000 	andeq	r0, r0, r0
20005a10:	00000010 	andeq	r0, r0, r0, lsl r0
20005a14:	02400000 	subeq	r0, r0, #0
20005a18:	0fffffff 	svceq	0x00ffffff
20005a1c:	00000000 	andeq	r0, r0, r0
20005a20:	00000010 	andeq	r0, r0, r0, lsl r0
20005a24:	02300000 	eorseq	r0, r0, #0
20005a28:	0fffffff 	svceq	0x00ffffff
20005a2c:	00000000 	andeq	r0, r0, r0
20005a30:	00000010 	andeq	r0, r0, r0, lsl r0
20005a34:	02000000 	andeq	r0, r0, #0
20005a38:	07ffffff 			; <UNDEFINED> instruction: 0x07ffffff
20005a3c:	00000000 	andeq	r0, r0, r0
20005a40:	00000010 	andeq	r0, r0, r0, lsl r0
20005a44:	04000000 	streq	r0, [r0], #-0
20005a48:	03ffffff 	mvnseq	pc, #1020	; 0x3fc
20005a4c:	00000000 	andeq	r0, r0, r0
20005a50:	00000010 	andeq	r0, r0, r0, lsl r0
20005a54:	04000000 	streq	r0, [r0], #-0
20005a58:	01ffffff 	ldrsheq	pc, [pc, #255]	; 20005b5f <castle_gray_bits+0x67>	; <UNPREDICTABLE>
20005a5c:	00000000 	andeq	r0, r0, r0
20005a60:	00000008 	andeq	r0, r0, r8
20005a64:	04000000 	streq	r0, [r0], #-0
20005a68:	01ffffff 	ldrsheq	pc, [pc, #255]	; 20005b6f <castle_gray_bits+0x77>	; <UNPREDICTABLE>
20005a6c:	00000000 	andeq	r0, r0, r0
20005a70:	00000008 	andeq	r0, r0, r8
20005a74:	04000000 	streq	r0, [r0], #-0
20005a78:	00ffffff 	ldrshteq	pc, [pc], #255	; <UNPREDICTABLE>
20005a7c:	00000000 	andeq	r0, r0, r0
20005a80:	00000008 	andeq	r0, r0, r8
20005a84:	060001c0 	streq	r0, [r0], -r0, asr #3
20005a88:	00ffffff 	ldrshteq	pc, [pc], #255	; <UNPREDICTABLE>
20005a8c:	00000000 	andeq	r0, r0, r0
20005a90:	00000008 	andeq	r0, r0, r8
20005a94:	04000220 	streq	r0, [r0], #-544	; 0xfffffde0
20005a98:	007fffff 	ldrshteq	pc, [pc], #-255	; <UNPREDICTABLE>
20005a9c:	00000000 	andeq	r0, r0, r0
20005aa0:	00000008 	andeq	r0, r0, r8
20005aa4:	04100400 	ldreq	r0, [r0], #-1024	; 0xfffffc00
20005aa8:	003fffff 	ldrshteq	pc, [pc], -pc	; <UNPREDICTABLE>
20005aac:	00000000 	andeq	r0, r0, r0
20005ab0:	00000008 	andeq	r0, r0, r8
20005ab4:	04a00400 	strteq	r0, [r0], #1024	; 0x400
20005ab8:	001fffff 			; <UNDEFINED> instruction: 0x001fffff
20005abc:	00000000 	andeq	r0, r0, r0
20005ac0:	00000008 	andeq	r0, r0, r8
20005ac4:	04000400 	streq	r0, [r0], #-1024	; 0xfffffc00
20005ac8:	0007ffff 	strdeq	pc, [r7], -pc	; <UNPREDICTABLE>
20005acc:	00000000 	andeq	r0, r0, r0
20005ad0:	00000008 	andeq	r0, r0, r8
20005ad4:	07400400 	strbeq	r0, [r0, -r0, lsl #8]
20005ad8:	0001ffff 	strdeq	pc, [r1], -pc	; <UNPREDICTABLE>
20005adc:	00000000 	andeq	r0, r0, r0
20005ae0:	00000008 	andeq	r0, r0, r8
20005ae4:	04000400 	streq	r0, [r0], #-1024	; 0xfffffc00
20005ae8:	0000ffff 	strdeq	pc, [r0], -pc	; <UNPREDICTABLE>
20005aec:	00000000 	andeq	r0, r0, r0
20005af0:	00000008 	andeq	r0, r0, r8
20005af4:	04000400 	streq	r0, [r0], #-1024	; 0xfffffc00

20005af8 <castle_gray_bits>:
	...
20005b00:	fffff800 	vcmla.f32	d31, d15, d0[0], #270
20005b04:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
	...
20005b10:	fffffe00 			; <UNDEFINED> instruction: 0xfffffe00
20005b14:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
	...
20005b20:	fffffffe 			; <UNDEFINED> instruction: 0xfffffffe
20005b24:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
20005b28:	00000000 	andeq	r0, r0, r0
20005b2c:	80000000 	andhi	r0, r0, r0
20005b30:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
20005b34:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
20005b38:	00000000 	andeq	r0, r0, r0
20005b3c:	c0000000 	andgt	r0, r0, r0
20005b40:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
20005b44:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
20005b48:	00000000 	andeq	r0, r0, r0
20005b4c:	e0000000 	and	r0, r0, r0
20005b50:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
20005b54:	ffffffbf 			; <UNDEFINED> instruction: 0xffffffbf
20005b58:	00000000 	andeq	r0, r0, r0
20005b5c:	f8000000 			; <UNDEFINED> instruction: 0xf8000000
20005b60:	f3ffcfff 			; <UNDEFINED> instruction: 0xf3ffcfff
20005b64:	ffffffbf 			; <UNDEFINED> instruction: 0xffffffbf
20005b68:	00000000 	andeq	r0, r0, r0
20005b6c:	fc000000 	stc2	0, cr0, [r0], {-0}
20005b70:	f1ff8fff 			; <UNDEFINED> instruction: 0xf1ff8fff
20005b74:	fff9ff3f 			; <UNDEFINED> instruction: 0xfff9ff3f
20005b78:	00000000 	andeq	r0, r0, r0
20005b7c:	fe000000 	cdp2	0, 0, cr0, cr0, cr0, {0}
20005b80:	f0ff8fef 			; <UNDEFINED> instruction: 0xf0ff8fef
20005b84:	fff9fe1f 			; <UNDEFINED> instruction: 0xfff9fe1f
20005b88:	00000000 	andeq	r0, r0, r0
20005b8c:	ff000000 			; <UNDEFINED> instruction: 0xff000000
20005b90:	e0ff87ef 	rscs	r8, pc, pc, ror #15
20005b94:	fff9fe1f 			; <UNDEFINED> instruction: 0xfff9fe1f
20005b98:	00000000 	andeq	r0, r0, r0
20005b9c:	ff800000 			; <UNDEFINED> instruction: 0xff800000
20005ba0:	c07e07e7 	rsbsgt	r0, lr, r7, ror #15
20005ba4:	ffe0fc1f 			; <UNDEFINED> instruction: 0xffe0fc1f
20005ba8:	00000000 	andeq	r0, r0, r0
20005bac:	ffc00000 			; <UNDEFINED> instruction: 0xffc00000
20005bb0:	001c07e7 	andseq	r0, ip, r7, ror #15
20005bb4:	ffe0380e 	vcmla.f32	d19, d0, d14[0], #170
20005bb8:	00000000 	andeq	r0, r0, r0
20005bbc:	ffc00000 			; <UNDEFINED> instruction: 0xffc00000
20005bc0:	000003e3 	andeq	r0, r0, r3, ror #7
20005bc4:	f7c00000 			; <UNDEFINED> instruction: 0xf7c00000
20005bc8:	00000000 	andeq	r0, r0, r0
20005bcc:	ffc00000 			; <UNDEFINED> instruction: 0xffc00000
20005bd0:	000001c3 	andeq	r0, r0, r3, asr #3
20005bd4:	e7800000 	str	r0, [r0, r0]
20005bd8:	00000000 	andeq	r0, r0, r0
20005bdc:	ffe00000 			; <UNDEFINED> instruction: 0xffe00000
20005be0:	00000003 	andeq	r0, r0, r3
20005be4:	c3800000 	orrgt	r0, r0, #0
20005be8:	00000000 	andeq	r0, r0, r0
20005bec:	ffe00000 			; <UNDEFINED> instruction: 0xffe00000
20005bf0:	00000001 	andeq	r0, r0, r1
20005bf4:	c0000000 	andgt	r0, r0, r0
20005bf8:	00000000 	andeq	r0, r0, r0
20005bfc:	9ff00000 	svcls	0x00f00000	; IMB
20005c00:	00000001 	andeq	r0, r0, r1
20005c04:	80000000 	andhi	r0, r0, r0
20005c08:	00000000 	andeq	r0, r0, r0
20005c0c:	8ff00000 	svchi	0x00f00000	; IMB
20005c10:	00000000 	andeq	r0, r0, r0
20005c14:	80000000 	andhi	r0, r0, r0
20005c18:	00000000 	andeq	r0, r0, r0
20005c1c:	8ff80000 	svchi	0x00f80000
	...
20005c2c:	0ffc0000 	svceq	0x00fc0000
	...
20005c3c:	0ffc0000 	svceq	0x00fc0000
	...
20005c4c:	0ffc0000 	svceq	0x00fc0000
	...
20005c5c:	0ffc0000 	svceq	0x00fc0000
	...
20005c6c:	0ffc0000 	svceq	0x00fc0000
	...
20005c7c:	07fe0000 	ldrbeq	r0, [lr, r0]!
	...
20005c8c:	07fe0000 	ldrbeq	r0, [lr, r0]!
	...
20005c9c:	07fe0000 	ldrbeq	r0, [lr, r0]!
20005ca0:	03800000 	orreq	r0, r0, #0
	...
20005cac:	03fe0000 	mvnseq	r0, #0
20005cb0:	02000000 	andeq	r0, r0, #0
	...
20005cbc:	03ff0000 	mvnseq	r0, #0
20005cc0:	02000000 	andeq	r0, r0, #0
	...
20005ccc:	03ff0000 	mvnseq	r0, #0
20005cd0:	02000000 	andeq	r0, r0, #0
	...
20005cdc:	03ff0000 	mvnseq	r0, #0
20005ce0:	02000000 	andeq	r0, r0, #0
	...
20005cec:	03ff0000 	mvnseq	r0, #0
20005cf0:	02800c00 	addeq	r0, r0, #0, 24
20005cf4:	00000060 	andeq	r0, r0, r0, rrx
20005cf8:	00000000 	andeq	r0, r0, r0
20005cfc:	03ff0000 	mvnseq	r0, #0
20005d00:	03000800 	movweq	r0, #2048	; 0x800
20005d04:	00000040 	andeq	r0, r0, r0, asr #32
20005d08:	00000000 	andeq	r0, r0, r0
20005d0c:	03ff0000 	mvnseq	r0, #0
20005d10:	03000800 	movweq	r0, #2048	; 0x800
20005d14:	00000040 	andeq	r0, r0, r0, asr #32
20005d18:	00000000 	andeq	r0, r0, r0
20005d1c:	03ff8000 	mvnseq	r8, #0
20005d20:	03000a00 	movweq	r0, #2560	; 0xa00
20005d24:	00000040 	andeq	r0, r0, r0, asr #32
20005d28:	00000000 	andeq	r0, r0, r0
20005d2c:	01ffb000 	mvnseq	fp, r0
20005d30:	03000c00 	movweq	r0, #3072	; 0xc00
20005d34:	00000040 	andeq	r0, r0, r0, asr #32
20005d38:	00000000 	andeq	r0, r0, r0
20005d3c:	01fff800 	mvnseq	pc, r0, lsl #16
20005d40:	07800c00 	streq	r0, [r0, r0, lsl #24]
20005d44:	00000060 	andeq	r0, r0, r0, rrx
20005d48:	00000000 	andeq	r0, r0, r0
20005d4c:	01fffc00 	mvnseq	pc, r0, lsl #24
20005d50:	04001800 	streq	r1, [r0], #-2048	; 0xfffff800
20005d54:	00c00058 	sbceq	r0, r0, r8, asr r0
20005d58:	00000000 	andeq	r0, r0, r0
20005d5c:	00fffc00 	rscseq	pc, pc, r0, lsl #24
20005d60:	06001400 	streq	r1, [r0], -r0, lsl #8
20005d64:	00c000c0 	sbceq	r0, r0, r0, asr #1
20005d68:	00000000 	andeq	r0, r0, r0
20005d6c:	007ffc00 	rsbseq	pc, pc, r0, lsl #24
20005d70:	45001000 	strmi	r1, [r0, #-0]
20005d74:	008000a0 	addeq	r0, r0, r0, lsr #1
20005d78:	00000000 	andeq	r0, r0, r0
20005d7c:	007ffe00 	rsbseq	pc, pc, r0, lsl #28
20005d80:	80001000 	andhi	r1, r0, r0
20005d84:	008000c1 	addeq	r0, r0, r1, asr #1
20005d88:	00000000 	andeq	r0, r0, r0
20005d8c:	003ffe00 	eorseq	pc, pc, r0, lsl #28
20005d90:	00001000 	andeq	r1, r0, r0
20005d94:	00a000f0 	strdeq	r0, [r0], r0	; <UNPREDICTABLE>
20005d98:	00000000 	andeq	r0, r0, r0
20005d9c:	003fff00 	eorseq	pc, pc, r0, lsl #30
20005da0:	00001000 	andeq	r1, r0, r0
20005da4:	00c000e0 	sbceq	r0, r0, r0, ror #1
20005da8:	00000000 	andeq	r0, r0, r0
20005dac:	001fff80 	andseq	pc, pc, r0, lsl #31
20005db0:	02001800 	andeq	r1, r0, #0, 16
20005db4:	00c000c0 	sbceq	r0, r0, r0, asr #1
20005db8:	00000000 	andeq	r0, r0, r0
20005dbc:	0019fffe 			; <UNDEFINED> instruction: 0x0019fffe
20005dc0:	02001400 	andeq	r1, r0, #0, 8
20005dc4:	00803000 	addeq	r3, r0, r0
20005dc8:	00000000 	andeq	r0, r0, r0
20005dcc:	0018ffff 			; <UNDEFINED> instruction: 0x0018ffff
20005dd0:	05033f00 	streq	r3, [r3, #-3840]	; 0xfffff100
20005dd4:	01000000 	mrseq	r0, (UNDEF: 0)
20005dd8:	c0000000 	andgt	r0, r0, r0
20005ddc:	0008ffff 	strdeq	pc, [r8], -pc	; <UNPREDICTABLE>
20005de0:	00c0e400 	sbceq	lr, r0, r0, lsl #8
20005de4:	01000004 	tsteq	r0, r4
20005de8:	c0000000 	andgt	r0, r0, r0
20005dec:	00007fff 	strdeq	r7, [r0], -pc	; <UNPREDICTABLE>
20005df0:	00002000 	andeq	r2, r0, r0
20005df4:	01000008 	tsteq	r0, r8
20005df8:	e0000000 	and	r0, r0, r0
20005dfc:	00007fff 	strdeq	r7, [r0], -pc	; <UNPREDICTABLE>
20005e00:	00001000 	andeq	r1, r0, r0
20005e04:	01000006 	tsteq	r0, r6
20005e08:	e0000000 	and	r0, r0, r0
20005e0c:	00003fff 	strdeq	r3, [r0], -pc	; <UNPREDICTABLE>
20005e10:	80000000 	andhi	r0, r0, r0
20005e14:	01800001 	orreq	r0, r0, r1
20005e18:	f0000000 			; <UNDEFINED> instruction: 0xf0000000
20005e1c:	00003fff 	strdeq	r3, [r0], -pc	; <UNPREDICTABLE>
20005e20:	00400000 	subeq	r0, r0, r0
20005e24:	01400000 	mrseq	r0, (UNDEF: 64)
20005e28:	f0000000 			; <UNDEFINED> instruction: 0xf0000000
20005e2c:	00001fff 	strdeq	r1, [r0], -pc	; <UNPREDICTABLE>
20005e30:	03800000 	orreq	r0, r0, #0
20005e34:	01300000 	teqeq	r0, r0
20005e38:	f8000000 			; <UNDEFINED> instruction: 0xf8000000
20005e3c:	00001bff 	strdeq	r1, [r0], -pc	; <UNPREDICTABLE>
20005e40:	10e00000 	rscne	r0, r0, r0
20005e44:	03000000 	movweq	r0, #0
20005e48:	fc000000 	stc2	0, cr0, [r0], {-0}
20005e4c:	000001ff 	strdeq	r0, [r0], -pc	; <UNPREDICTABLE>
20005e50:	0f800000 	svceq	0x00800000
20005e54:	03900000 	orrseq	r0, r0, #0
20005e58:	fe000000 	cdp2	0, 0, cr0, cr0, cr0, {0}
20005e5c:	000001ff 	strdeq	r0, [r0], -pc	; <UNPREDICTABLE>
20005e60:	00000000 	andeq	r0, r0, r0
20005e64:	03e00000 	mvneq	r0, #0
20005e68:	fe000000 	cdp2	0, 0, cr0, cr0, cr0, {0}
20005e6c:	000000ff 	strdeq	r0, [r0], -pc	; <UNPREDICTABLE>
20005e70:	00000000 	andeq	r0, r0, r0
20005e74:	03f40000 	mvnseq	r0, #0
20005e78:	ff000000 			; <UNDEFINED> instruction: 0xff000000
20005e7c:	000000ff 	strdeq	r0, [r0], -pc	; <UNPREDICTABLE>
20005e80:	00002000 	andeq	r2, r0, r0
20005e84:	01f80000 	mvnseq	r0, r0
20005e88:	ff000000 			; <UNDEFINED> instruction: 0xff000000
20005e8c:	0000007f 	andeq	r0, r0, pc, ror r0
20005e90:	0010c000 	andseq	ip, r0, r0
20005e94:	03f80000 	mvnseq	r0, #0
20005e98:	ff800000 			; <UNDEFINED> instruction: 0xff800000
20005e9c:	0000003f 	andeq	r0, r0, pc, lsr r0
20005ea0:	000f0000 	andeq	r0, pc, r0
20005ea4:	03e000e0 	mvneq	r0, #224	; 0xe0
20005ea8:	ffc00000 			; <UNDEFINED> instruction: 0xffc00000
20005eac:	0000001f 	andeq	r0, r0, pc, lsl r0
20005eb0:	00026000 	andeq	r6, r2, r0
20005eb4:	035001f0 	cmpeq	r0, #240, 2	; 0x3c
20005eb8:	ffe00000 			; <UNDEFINED> instruction: 0xffe00000
20005ebc:	0000001f 	andeq	r0, r0, pc, lsl r0
20005ec0:	00118000 	andseq	r8, r1, r0
20005ec4:	03ec01f0 	mvneq	r0, #240, 2	; 0x3c
20005ec8:	fff80000 			; <UNDEFINED> instruction: 0xfff80000
20005ecc:	0000000f 	andeq	r0, r0, pc
20005ed0:	200e0000 	andcs	r0, lr, r0
20005ed4:	00a022f0 	strdeq	r2, [r0], r0	; <UNPREDICTABLE>
20005ed8:	fffe0000 			; <UNDEFINED> instruction: 0xfffe0000
20005edc:	00000007 	andeq	r0, r0, r7
20005ee0:	18000000 	stmdane	r0, {}	; <UNPREDICTABLE>
20005ee4:	03c0c170 	biceq	ip, r0, #112, 2
20005ee8:	ffff0000 			; <UNDEFINED> instruction: 0xffff0000
20005eec:	00000003 	andeq	r0, r0, r3
20005ef0:	e4000000 	str	r0, [r0], #-0
20005ef4:	03c270f3 	biceq	r7, r2, #243	; 0xf3

20005ef8 <castle_light_bits>:
	...
20005f54:	00000040 	andeq	r0, r0, r0, asr #32
	...
20005f60:	0c003000 	stceq	0, cr3, [r0], {-0}
20005f64:	00000040 	andeq	r0, r0, r0, asr #32
	...
20005f70:	0e007000 	cdpeq	0, 0, cr7, cr0, cr0, {0}
20005f74:	000600c0 	andeq	r0, r6, r0, asr #1
	...
20005f80:	0f007010 	svceq	0x00007010
20005f84:	000601e0 	andeq	r0, r6, r0, ror #3
	...
20005f90:	1f007810 	svcne	0x00007810
20005f94:	000601e0 	andeq	r0, r6, r0, ror #3
	...
20005fa0:	3f81f818 	svccc	0x0081f818
20005fa4:	001f03e0 	andseq	r0, pc, r0, ror #7
	...
20005fb0:	ffe3f818 			; <UNDEFINED> instruction: 0xffe3f818
20005fb4:	001fc7f1 			; <UNDEFINED> instruction: 0x001fc7f1
	...
20005fc0:	fffffc1c 			; <UNDEFINED> instruction: 0xfffffc1c
20005fc4:	083fffff 	ldmdaeq	pc!, {r0, r1, r2, r3, r4, r5, r6, r7, r8, r9, sl, fp, ip, sp, lr, pc}	; <UNPREDICTABLE>
	...
20005fd0:	fffffe3c 			; <UNDEFINED> instruction: 0xfffffe3c
20005fd4:	187fffff 	ldmdane	pc!, {r0, r1, r2, r3, r4, r5, r6, r7, r8, r9, sl, fp, ip, sp, lr, pc}^	; <UNPREDICTABLE>
	...
20005fe0:	fffffffc 			; <UNDEFINED> instruction: 0xfffffffc
20005fe4:	3c7fffff 	ldclcc	15, cr15, [pc], #-1020	; 20005bf0 <castle_gray_bits+0xf8>
	...
20005ff0:	fffffffe 			; <UNDEFINED> instruction: 0xfffffffe
20005ff4:	3fffffff 	svccc	0x00ffffff
20005ff8:	00000000 	andeq	r0, r0, r0
20005ffc:	60000000 	andvs	r0, r0, r0
20006000:	fffffffe 			; <UNDEFINED> instruction: 0xfffffffe
20006004:	7fffffff 	svcvc	0x00ffffff
20006008:	00000000 	andeq	r0, r0, r0
2000600c:	70000000 	andvc	r0, r0, r0
20006010:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
20006014:	7fffffff 	svcvc	0x00ffffff
20006018:	00000000 	andeq	r0, r0, r0
2000601c:	70000000 	andvc	r0, r0, r0
20006020:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
20006024:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
20006028:	00000000 	andeq	r0, r0, r0
2000602c:	f0000000 			; <UNDEFINED> instruction: 0xf0000000
20006030:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
20006034:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
20006038:	00000000 	andeq	r0, r0, r0
2000603c:	f0000000 			; <UNDEFINED> instruction: 0xf0000000
20006040:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
20006044:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
20006048:	00000000 	andeq	r0, r0, r0
2000604c:	f0000000 			; <UNDEFINED> instruction: 0xf0000000
20006050:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
20006054:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
20006058:	00000000 	andeq	r0, r0, r0
2000605c:	f0000000 			; <UNDEFINED> instruction: 0xf0000000
20006060:	fb6fffff 	blx	21c06066 <firstTime.4040+0x1bfd67a>
20006064:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
20006068:	00000000 	andeq	r0, r0, r0
2000606c:	f0000000 			; <UNDEFINED> instruction: 0xf0000000
20006070:	f007ffff 			; <UNDEFINED> instruction: 0xf007ffff
20006074:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
20006078:	00000000 	andeq	r0, r0, r0
2000607c:	f8000000 			; <UNDEFINED> instruction: 0xf8000000
20006080:	f407ffff 			; <UNDEFINED> instruction: 0xf407ffff
20006084:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
20006088:	00000000 	andeq	r0, r0, r0
2000608c:	f8000000 			; <UNDEFINED> instruction: 0xf8000000
20006090:	f007ffff 			; <UNDEFINED> instruction: 0xf007ffff
20006094:	ffffff6d 			; <UNDEFINED> instruction: 0xffffff6d
20006098:	00000000 	andeq	r0, r0, r0
2000609c:	f8000000 			; <UNDEFINED> instruction: 0xf8000000
200060a0:	f80fffff 			; <UNDEFINED> instruction: 0xf80fffff
200060a4:	fffffe00 			; <UNDEFINED> instruction: 0xfffffe00
200060a8:	00000000 	andeq	r0, r0, r0
200060ac:	fc000000 	stc2	0, cr0, [r0], {-0}
200060b0:	f80fedbf 			; <UNDEFINED> instruction: 0xf80fedbf
200060b4:	fffffe00 			; <UNDEFINED> instruction: 0xfffffe00
200060b8:	00000000 	andeq	r0, r0, r0
200060bc:	fc000000 	stc2	0, cr0, [r0], {-0}
200060c0:	f80fc01f 			; <UNDEFINED> instruction: 0xf80fc01f
200060c4:	fffffe80 			; <UNDEFINED> instruction: 0xfffffe80
200060c8:	00000000 	andeq	r0, r0, r0
200060cc:	fc000000 	stc2	0, cr0, [r0], {-0}
200060d0:	f90fc81f 			; <UNDEFINED> instruction: 0xf90fc81f
200060d4:	fffffe80 			; <UNDEFINED> instruction: 0xfffffe80
200060d8:	00000000 	andeq	r0, r0, r0
200060dc:	fc000000 	stc2	0, cr0, [r0], {-0}
200060e0:	f90fd41f 			; <UNDEFINED> instruction: 0xf90fd41f
200060e4:	fffffe00 			; <UNDEFINED> instruction: 0xfffffe00
200060e8:	00000000 	andeq	r0, r0, r0
200060ec:	fc000000 	stc2	0, cr0, [r0], {-0}
200060f0:	f90fe03f 			; <UNDEFINED> instruction: 0xf90fe03f
200060f4:	ffffff01 			; <UNDEFINED> instruction: 0xffffff01
200060f8:	00000000 	andeq	r0, r0, r0
200060fc:	fc000000 	stc2	0, cr0, [r0], {-0}
20006100:	f88fe03f 			; <UNDEFINED> instruction: 0xf88fe03f
20006104:	ffffff01 			; <UNDEFINED> instruction: 0xffffff01
20006108:	00000000 	andeq	r0, r0, r0
2000610c:	fc000000 	stc2	0, cr0, [r0], {-0}
20006110:	f88fe03f 			; <UNDEFINED> instruction: 0xf88fe03f
20006114:	fedbff19 	mrc2	15, 6, pc, cr11, cr9, {0}
20006118:	00000000 	andeq	r0, r0, r0
2000611c:	fc000000 	stc2	0, cr0, [r0], {-0}
20006120:	f80fe03f 			; <UNDEFINED> instruction: 0xf80fe03f
20006124:	fd01ff11 	stc2	15, cr15, [r1, #-68]	; 0xffffffbc
20006128:	00000000 	andeq	r0, r0, r0
2000612c:	fe000000 	cdp2	0, 0, cr0, cr0, cr0, {0}
20006130:	f80fe03f 			; <UNDEFINED> instruction: 0xf80fe03f
20006134:	fd01ff19 	stc2	15, cr15, [r1, #-100]	; 0xffffff9c
20006138:	00000000 	andeq	r0, r0, r0
2000613c:	fe000000 	cdp2	0, 0, cr0, cr0, cr0, {0}
20006140:	f007e03f 			; <UNDEFINED> instruction: 0xf007e03f
20006144:	fc01ff01 	stc2	15, cr15, [r1], {1}
20006148:	00000000 	andeq	r0, r0, r0
2000614c:	fe000000 	cdp2	0, 0, cr0, cr0, cr0, {0}
20006150:	f007c01f 			; <UNDEFINED> instruction: 0xf007c01f
20006154:	fe03ff01 	cdp2	15, 0, cr15, cr3, cr1, {0}
20006158:	00000000 	andeq	r0, r0, r0
2000615c:	ff000000 			; <UNDEFINED> instruction: 0xff000000
20006160:	b007c01f 	andlt	ip, r7, pc, lsl r0
20006164:	fe03fe01 	cdp2	14, 0, cr15, cr3, cr1, {0}
20006168:	00000000 	andeq	r0, r0, r0
2000616c:	ff800000 			; <UNDEFINED> instruction: 0xff800000
20006170:	0007c01f 	andeq	ip, r7, pc, lsl r0
20006174:	fe03fe00 	cdp2	14, 0, cr15, cr3, cr0, {0}
20006178:	00000000 	andeq	r0, r0, r0
2000617c:	ff800000 			; <UNDEFINED> instruction: 0xff800000
20006180:	0007c01f 	andeq	ip, r7, pc, lsl r0
20006184:	fe03fe10 	mcr2	14, 0, pc, cr3, cr0, {0}	; <UNPREDICTABLE>
20006188:	00000000 	andeq	r0, r0, r0
2000618c:	ffc00000 			; <UNDEFINED> instruction: 0xffc00000
20006190:	0007c21f 	andeq	ip, r7, pc, lsl r2
20006194:	fe03fe00 	cdp2	14, 0, cr15, cr3, cr0, {0}
20006198:	00000000 	andeq	r0, r0, r0
2000619c:	ffc00000 			; <UNDEFINED> instruction: 0xffc00000
200061a0:	0087c31f 	addeq	ip, r7, pc, lsl r3
200061a4:	fe03a400 	cdp2	4, 0, cr10, cr3, cr0, {0}
200061a8:	00000000 	andeq	r0, r0, r0
200061ac:	ffe00000 			; <UNDEFINED> instruction: 0xffe00000
200061b0:	00c7c31f 	sbceq	ip, r7, pc, lsl r3
200061b4:	fe030000 	cdp2	0, 0, cr0, cr3, cr0, {0}
200061b8:	00000000 	andeq	r0, r0, r0
200061bc:	ffe60000 			; <UNDEFINED> instruction: 0xffe60000
200061c0:	00c4c01f 	sbceq	ip, r4, pc, lsl r0
200061c4:	fe000000 	cdp2	0, 0, cr0, cr0, cr0, {0}
200061c8:	00000000 	andeq	r0, r0, r0
200061cc:	ffe70000 			; <UNDEFINED> instruction: 0xffe70000
200061d0:	8000001f 	andhi	r0, r0, pc, lsl r0
200061d4:	fc000001 	stc2	0, cr0, [r0], {1}
200061d8:	00000000 	andeq	r0, r0, r0
200061dc:	fff70000 			; <UNDEFINED> instruction: 0xfff70000
200061e0:	8000001f 	andhi	r0, r0, pc, lsl r0
200061e4:	fc000009 	stc2	0, cr0, [r0], {9}
200061e8:	00000000 	andeq	r0, r0, r0
200061ec:	ffff8000 			; <UNDEFINED> instruction: 0xffff8000
200061f0:	8000001f 	andhi	r0, r0, pc, lsl r0
200061f4:	fc200001 	stc2	0, cr0, [r0], #-4
200061f8:	00000000 	andeq	r0, r0, r0
200061fc:	ffff8000 			; <UNDEFINED> instruction: 0xffff8000
20006200:	0000001f 	andeq	r0, r0, pc, lsl r0
20006204:	fc300000 	ldc2	0, cr0, [r0], #-0
20006208:	00000000 	andeq	r0, r0, r0
2000620c:	ffffc000 			; <UNDEFINED> instruction: 0xffffc000
20006210:	0000000f 	andeq	r0, r0, pc
20006214:	fc300000 	ldc2	0, cr0, [r0], #-0
20006218:	00000000 	andeq	r0, r0, r0
2000621c:	ffffc000 			; <UNDEFINED> instruction: 0xffffc000
20006220:	0000000f 	andeq	r0, r0, pc
20006224:	fc000000 	stc2	0, cr0, [r0], {-0}
20006228:	00000000 	andeq	r0, r0, r0
2000622c:	ffffe000 			; <UNDEFINED> instruction: 0xffffe000
20006230:	1000000f 	andne	r0, r0, pc
20006234:	fc000000 	stc2	0, cr0, [r0], {-0}
20006238:	00000000 	andeq	r0, r0, r0
2000623c:	ffffe400 			; <UNDEFINED> instruction: 0xffffe400
20006240:	0800000f 	stmdaeq	r0, {r0, r1, r2, r3}
20006244:	f8080000 			; <UNDEFINED> instruction: 0xf8080000
20006248:	00000000 	andeq	r0, r0, r0
2000624c:	fffffe00 			; <UNDEFINED> instruction: 0xfffffe00
20006250:	0000000f 	andeq	r0, r0, pc
20006254:	f8000000 			; <UNDEFINED> instruction: 0xf8000000
20006258:	00000000 	andeq	r0, r0, r0
2000625c:	fffffe00 			; <UNDEFINED> instruction: 0xfffffe00
20006260:	00000007 	andeq	r0, r0, r7
20006264:	f8020000 			; <UNDEFINED> instruction: 0xf8020000
20006268:	00000000 	andeq	r0, r0, r0
2000626c:	ffffff00 			; <UNDEFINED> instruction: 0xffffff00
20006270:	00000007 	andeq	r0, r0, r7
20006274:	f8020000 			; <UNDEFINED> instruction: 0xf8020000
20006278:	00000000 	andeq	r0, r0, r0
2000627c:	ffffff00 			; <UNDEFINED> instruction: 0xffffff00
20006280:	00100007 	andseq	r0, r0, r7
20006284:	f8040000 			; <UNDEFINED> instruction: 0xf8040000
20006288:	00000000 	andeq	r0, r0, r0
2000628c:	ffffff80 			; <UNDEFINED> instruction: 0xffffff80
20006290:	00080007 	andeq	r0, r8, r7
20006294:	f80001c0 			; <UNDEFINED> instruction: 0xf80001c0
20006298:	00000000 	andeq	r0, r0, r0
2000629c:	ffffffc0 			; <UNDEFINED> instruction: 0xffffffc0
200062a0:	00000007 	andeq	r0, r0, r7
200062a4:	f8080300 			; <UNDEFINED> instruction: 0xf8080300
200062a8:	00000000 	andeq	r0, r0, r0
200062ac:	ffffffe0 			; <UNDEFINED> instruction: 0xffffffe0
200062b0:	00200007 	eoreq	r0, r0, r7
200062b4:	f8080200 			; <UNDEFINED> instruction: 0xf8080200
200062b8:	00000000 	andeq	r0, r0, r0
200062bc:	ffffffe0 			; <UNDEFINED> instruction: 0xffffffe0
200062c0:	00000007 	andeq	r0, r0, r7
200062c4:	f8000200 			; <UNDEFINED> instruction: 0xf8000200
200062c8:	00000000 	andeq	r0, r0, r0
200062cc:	fffffff0 			; <UNDEFINED> instruction: 0xfffffff0
200062d0:	00000007 	andeq	r0, r0, r7
200062d4:	f8000100 			; <UNDEFINED> instruction: 0xf8000100
200062d8:	00000000 	andeq	r0, r0, r0
200062dc:	fffffff8 			; <UNDEFINED> instruction: 0xfffffff8
200062e0:	01000007 	tsteq	r0, r7
200062e4:	f8100280 			; <UNDEFINED> instruction: 0xf8100280
200062e8:	00000000 	andeq	r0, r0, r0
200062ec:	fffffffc 			; <UNDEFINED> instruction: 0xfffffffc
200062f0:	02000007 	andeq	r0, r0, #7
200062f4:	f8000300 			; <UNDEFINED> instruction: 0xf8000300

200062f8 <title_light_bits>:
	...
20006314:	00000400 	andeq	r0, r0, r0, lsl #8
20006318:	30000000 	andcc	r0, r0, r0
2000631c:	f80f9e06 			; <UNDEFINED> instruction: 0xf80f9e06
20006320:	06300000 	ldrteq	r0, [r0], -r0
20006324:	00cb8cba 	strheq	r8, [fp], #202	; 0xca
20006328:	ba033000 	blt	200d2330 <firstTime.4040+0xc9944>
2000632c:	0000eb4f 	andeq	lr, r0, pc, asr #22
20006330:	439ef3f0 	orrsmi	pc, lr, #240, 6	; 0xc0000003
20006334:	f000003a 			; <UNDEFINED> instruction: 0xf000003a
20006338:	5a478e9b 	bpl	211e9dac <firstTime.4040+0x11e13c0>
2000633c:	9b300000 	blls	20c06344 <firstTime.4040+0xbfd958>
20006340:	019bcd36 	orrseq	ip, fp, r6, lsr sp
20006344:	66db3000 	ldrbvs	r3, [fp], r0
20006348:	000319d9 	ldrdeq	r1, [r3], -r9
2000634c:	19667330 	stmdbne	r6!, {r4, r5, r8, r9, ip, sp, lr}^
20006350:	30000310 	andcc	r0, r0, r0, lsl r3
20006354:	00000001 	andeq	r0, r0, r1
20006358:	80000000 	andhi	r0, r0, r0
2000635c:	001d3e7b 	andseq	r3, sp, fp, ror lr
20006360:	0ac00000 	beq	1f006368 <startup-0xff9c98>
20006364:	00000528 	andeq	r0, r0, r8, lsr #10
20006368:	ec3a4000 	ldc	0, cr4, [sl], #-0
2000636c:	0000000d 	andeq	r0, r0, sp
20006370:	05240bc0 	streq	r0, [r4, #-3008]!	; 0xfffff440
20006374:	00f00000 	rscseq	r0, r0, r0
20006378:	001c0000 	andseq	r0, ip, r0
2000637c:	03ebb000 	mvneq	fp, #0
20006380:	00000000 	andeq	r0, r0, r0
20006384:	0c032330 	stceq	3, cr2, [r3], {48}	; 0x30
20006388:	300123e4 	andcc	r2, r1, r4, ror #7
2000638c:	940c1b2a 	strls	r1, [ip], #-2858	; 0xfffff4d6
20006390:	ea300120 	b	20c06818 <firstTime.4040+0xbfde2c>
20006394:	ec860c3d 	stc	12, cr0, [r6], {61}	; 0x3d
20006398:	06ea3001 	strbteq	r3, [sl], r1
2000639c:	01e69648 	mvneq	r9, r8, asr #12
200063a0:	4b9e6b30 	blmi	1e7a1068 <startup-0x185ef98>
200063a4:	30012696 	mulcc	r1, r6, r6
200063a8:	92bbb06b 	adcsls	fp, fp, #107	; 0x6b
200063ac:	69f00126 	ldmibvs	r0!, {r1, r2, r5, r8}^
200063b0:	2691b832 			; <UNDEFINED> instruction: 0x2691b832
200063b4:	1e687001 	cdpne	0, 6, cr7, cr8, cr1, {0}
200063b8:	010e9110 	tsteq	lr, r0, lsl r1
	...

200063cc <title_gray_bits>:
	...
200063d4:	40000000 	andmi	r0, r0, r0
200063d8:	0f840000 	svceq	0x00840000
200063dc:	00b0c3fe 	ldrshteq	ip, [r0], lr
200063e0:	fffff800 	vcmla.f32	d31, d15, d0[0], #270
200063e4:	001f8f1f 	andseq	r8, pc, pc, lsl pc	; <UNPREDICTABLE>
200063e8:	fffffbf8 			; <UNDEFINED> instruction: 0xfffffbf8
200063ec:	c8001fff 	stmdagt	r0, {r0, r1, r2, r3, r4, r5, r6, r7, r8, r9, sl, fp, ip}
200063f0:	07f061f9 			; <UNDEFINED> instruction: 0x07f061f9
200063f4:	f1cc001f 			; <UNDEFINED> instruction: 0xf1cc001f
200063f8:	be347305 	cdplt	3, 3, cr7, cr4, cr5, {0}
200063fc:	05f0ce00 	ldrbeq	ip, [r0, #3584]!	; 0xe00
20006400:	007e1430 	rsbseq	r1, lr, r0, lsr r4
20006404:	2041080f 	subcs	r0, r1, pc, lsl #16
20006408:	0e003e01 	cdpeq	14, 0, cr3, cr0, cr1, {0}
2000640c:	01384060 	teqeq	r8, r0, rrx
20006410:	600c001e 	andvs	r0, ip, lr, lsl r0
20006414:	1c4030c0 	mcrrne	0, 12, r3, r0, cr0
20006418:	10208c00 	eorne	r8, r0, r0, lsl #24
2000641c:	0038c024 	eorseq	ip, r8, r4, lsr #32
20006420:	0411088c 	ldreq	r0, [r1], #-2188	; 0xfffff774
20006424:	c800f8ce 	stmdagt	r0, {r1, r2, r3, r6, r7, fp, ip, sp, lr, pc}
20006428:	ffe6990c 			; <UNDEFINED> instruction: 0xffe6990c
2000642c:	7cfa0178 	ldfvce	f0, [sl], #480	; 0x1e0
20006430:	3fe0c184 	svccc	0x00e0c184
20006434:	013ff400 	teqeq	pc, r0, lsl #8	; <UNPREDICTABLE>
20006438:	001fc0c7 	andseq	ip, pc, r7, asr #1
2000643c:	03c03ff0 	biceq	r3, r0, #240, 30	; 0x3c0
20006440:	fc0007e0 	stc2	7, cr0, [r0], {224}	; 0xe0
20006444:	e003803f 	and	r8, r3, pc, lsr r0
20006448:	7f0c009f 	svcvc	0x000c009f
2000644c:	ffc1fbe4 			; <UNDEFINED> instruction: 0xffc1fbe4
20006450:	fc140c03 	ldc2	12, cr0, [r4], {3}
20006454:	03ffc7ff 	mvnseq	ip, #66846720	; 0x3fc0000
20006458:	f3fc1c0c 	vdup.32	d17, d12[1]
2000645c:	0e02dc1b 	mcreq	12, 0, sp, cr2, cr11, {0}
20006460:	63f3e490 	mvnsvs	lr, #144, 8	; 0x90000000
20006464:	018e0218 	orreq	r0, lr, r8, lsl r2
20006468:	1251e382 	subsne	lr, r1, #134217730	; 0x8000002
2000646c:	88018e02 	stmdahi	r1, {r1, r9, sl, fp, pc}
20006470:	020061a7 	andeq	r6, r0, #-1073741783	; 0xc0000029
20006474:	2460008e 	strbtcs	r0, [r0], #-142	; 0xffffff72
20006478:	8e021041 	cdphi	0, 0, cr1, cr2, cr1, {2}
2000647c:	41000300 	mrsmi	r0, LR_irq
20006480:	000e0290 	muleq	lr, r0, r2
20006484:	9048008d 	subls	r0, r8, sp, lsl #1
20006488:	81040c02 	tsthi	r4, r2, lsl #24
2000648c:	02a04c87 	adceq	r4, r0, #34560	; 0x8700
20006490:	cffffffc 	svcgt	0x00fffffc
20006494:	8203e2fc 	andhi	lr, r3, #252, 4	; 0xc000000f
20006498:	e3f81c07 	mvns	r1, #1792	; 0x700
2000649c:	000001ff 	strdeq	r0, [r0], -pc	; <UNPREDICTABLE>

200064a0 <title_black_bits>:
	...
200064c8:	08000000 	stmdaeq	r0, {}	; <UNPREDICTABLE>
200064cc:	01000040 	tsteq	r0, r0, asr #32
200064d0:	400c0000 	andmi	r0, ip, r0
200064d4:	00010080 	andeq	r0, r1, r0, lsl #1
200064d8:	9c200400 	cfstrsls	mvf0, [r0], #-0
200064dc:	000001c4 	andeq	r0, r0, r4, asr #3
200064e0:	a4803104 	strge	r3, [r0], #260	; 0x104
200064e4:	04c00001 	strbeq	r0, [r0], #1
200064e8:	02240209 	eoreq	r0, r4, #-1879048192	; 0x90000000
200064ec:	89044000 	stmdbhi	r4, {lr}
200064f0:	00042602 	andeq	r2, r4, r2, lsl #12
200064f4:	e2888440 	add	r8, r8, #64, 8	; 0x40000000
200064f8:	00000421 	andeq	r0, r0, r1, lsr #8
200064fc:	001966f2 			; <UNDEFINED> instruction: 0x001966f2
20006500:	03000007 	movweq	r0, #7
20006504:	00020000 	andeq	r0, r2, r0
20006508:	f4000000 	vst4.8	{d0-d3}, [r0], r0
2000650c:	00003a10 	andeq	r3, r0, r0, lsl sl
20006510:	10058000 	andne	r8, r5, r0
20006514:	00000012 	andeq	r0, r0, r2, lsl r0
20006518:	1ad87400 	bne	1f623520 <startup-0x9dcae0>
2000651c:	80000000 	andhi	r0, r0, r0
20006520:	0022041b 	eoreq	r0, r2, fp, lsl r4
20006524:	00004000 	andeq	r4, r0, r0
20006528:	00003800 	andeq	r3, r0, r0, lsl #16
2000652c:	0000c0c0 	andeq	ip, r0, r0, asr #1
20006530:	c0000000 	andgt	r0, r0, r0
20006534:	08000045 	stmdaeq	r0, {r0, r2, r6}
20006538:	144000c7 	strbne	r0, [r0], #-199	; 0xffffff39
2000653c:	01281040 			; <UNDEFINED> instruction: 0x01281040
20006540:	71144000 	tstvc	r4, r0
20006544:	00190810 	andseq	r0, r9, r0, lsl r8
20006548:	90019440 	andls	r9, r1, r0, asr #8
2000654c:	4000c928 	andmi	ip, r0, r8, lsr #18
20006550:	2c444c94 	mcrrcs	12, 9, r4, r4, cr4
20006554:	96000049 	strls	r0, [r0], -r9, asr #32
20006558:	49264740 	stmdbmi	r6!, {r6, r8, r9, sl, lr}
2000655c:	60938000 	addsvs	r8, r3, r0
20006560:	00512268 	subseq	r2, r1, r8, ror #4
20006564:	30000000 	andcc	r0, r0, r0
20006568:	00001d03 	andeq	r1, r0, r3, lsl #26
	...

20006574 <bg_bits>:
	...
20006584:	fff80000 			; <UNDEFINED> instruction: 0xfff80000
20006588:	0000001f 	andeq	r0, r0, pc, lsl r0
	...
20006594:	fffe0000 			; <UNDEFINED> instruction: 0xfffe0000
20006598:	000003ff 	strdeq	r0, [r0], -pc	; <UNPREDICTABLE>
	...
200065a4:	ffff0000 			; <UNDEFINED> instruction: 0xffff0000
200065a8:	00001fff 	strdeq	r1, [r0], -pc	; <UNPREDICTABLE>
	...
200065b4:	ffff8000 			; <UNDEFINED> instruction: 0xffff8000
200065b8:	0000ffff 	strdeq	pc, [r0], -pc	; <UNPREDICTABLE>
	...
200065c4:	ffff8000 			; <UNDEFINED> instruction: 0xffff8000
200065c8:	0007ffff 	strdeq	pc, [r7], -pc	; <UNPREDICTABLE>
	...
200065d4:	ffffc000 			; <UNDEFINED> instruction: 0xffffc000
200065d8:	003fffff 	ldrshteq	pc, [pc], -pc	; <UNPREDICTABLE>
	...
200065e4:	ffffe000 			; <UNDEFINED> instruction: 0xffffe000
200065e8:	01ffffff 	ldrsheq	pc, [pc, #255]	; 200066ef <bg_bits+0x17b>	; <UNPREDICTABLE>
200065ec:	0001f000 	andeq	pc, r1, r0
200065f0:	00000000 	andeq	r0, r0, r0
200065f4:	007fe000 	rsbseq	lr, pc, r0
200065f8:	0ffffffe 	svceq	0x00fffffe
200065fc:	0003f800 	andeq	pc, r3, r0, lsl #16
20006600:	00000000 	andeq	r0, r0, r0
20006604:	003fe000 	eorseq	lr, pc, r0
20006608:	7fffffc0 	svcvc	0x00ffffc0
2000660c:	0003f800 	andeq	pc, r3, r0, lsl #16
20006610:	001f8000 	andseq	r8, pc, r0
20006614:	001fe000 	andseq	lr, pc, r0
20006618:	fffffe00 			; <UNDEFINED> instruction: 0xfffffe00
2000661c:	0003f801 	andeq	pc, r3, r1, lsl #16
20006620:	003fc000 	eorseq	ip, pc, r0
20006624:	003fe000 	eorseq	lr, pc, r0
20006628:	fffff000 			; <UNDEFINED> instruction: 0xfffff000
2000662c:	3f83f807 	svccc	0x0083f807
20006630:	003fe000 	eorseq	lr, pc, r0
20006634:	01ffe000 	mvnseq	lr, r0
20006638:	ffff8000 			; <UNDEFINED> instruction: 0xffff8000
2000663c:	7fc3f80f 	svcvc	0x00c3f80f
20006640:	003fe7f8 	ldrshteq	lr, [pc], -r8
20006644:	07ffe000 	ldrbeq	lr, [pc, r0]!
20006648:	fffc0000 			; <UNDEFINED> instruction: 0xfffc0000
2000664c:	7fe1f01f 	svcvc	0x00e1f01f
20006650:	003ffffc 	ldrshteq	pc, [pc], -ip	; <UNPREDICTABLE>
20006654:	3fffc000 	svccc	0x00ffc000
20006658:	ffe00000 			; <UNDEFINED> instruction: 0xffe00000
2000665c:	7ff0003f 	svcvc	0x00f0003f
20006660:	007ffffc 	ldrshteq	pc, [pc], #-252	; <UNPREDICTABLE>
20006664:	ffffc000 			; <UNDEFINED> instruction: 0xffffc000
20006668:	ff000000 			; <UNDEFINED> instruction: 0xff000000
2000666c:	7ff8007f 	svcvc	0x00f8007f
20006670:	3ffffffc 	svccc	0x00fffffc
20006674:	ffffc000 			; <UNDEFINED> instruction: 0xffffc000
20006678:	f8000003 			; <UNDEFINED> instruction: 0xf8000003
2000667c:	7ffc00ff 	svcvc	0x00fc00ff
20006680:	7ffffffc 	svcvc	0x00fffffc
20006684:	ffff8000 			; <UNDEFINED> instruction: 0xffff8000
20006688:	e000000f 	and	r0, r0, pc
2000668c:	7ffe01ff 	svcvc	0x00fe01ff
20006690:	fffffffc 			; <UNDEFINED> instruction: 0xfffffffc
20006694:	fffc0000 			; <UNDEFINED> instruction: 0xfffc0000
20006698:	8000001f 	andhi	r0, r0, pc, lsl r0
2000669c:	7fff01ff 	svcvc	0x00ff01ff
200066a0:	fffffffc 			; <UNDEFINED> instruction: 0xfffffffc
200066a4:	ffe00000 			; <UNDEFINED> instruction: 0xffe00000
200066a8:	0000007f 	andeq	r0, r0, pc, ror r0
200066ac:	7fff83ff 	svcvc	0x00ff83ff
200066b0:	fffffff8 			; <UNDEFINED> instruction: 0xfffffff8
200066b4:	ff800000 			; <UNDEFINED> instruction: 0xff800000
200066b8:	000000ff 	strdeq	r0, [r0], -pc	; <UNPREDICTABLE>
200066bc:	7fffc3fe 	svcvc	0x00ffc3fe
200066c0:	ffffffe0 			; <UNDEFINED> instruction: 0xffffffe0
200066c4:	fc7ffff0 	ldc2l	15, cr15, [pc], #-960	; 2000630c <title_light_bits+0x14>
200066c8:	07c001ff 			; <UNDEFINED> instruction: 0x07c001ff
200066cc:	7fffe7fc 	svcvc	0x00ffe7fc
200066d0:	ffffffc0 			; <UNDEFINED> instruction: 0xffffffc0
200066d4:	f0fffffe 			; <UNDEFINED> instruction: 0xf0fffffe
200066d8:	0fe007ff 	svceq	0x00e007ff
200066dc:	7ffff7fc 	svcvc	0x00fff7fc
200066e0:	ffffff80 			; <UNDEFINED> instruction: 0xffffff80
200066e4:	c0ffffff 	ldrshtgt	pc, [pc], #255	; <UNPREDICTABLE>
200066e8:	0fe00fff 	svceq	0x00e00fff
200066ec:	7ffffff8 	svcvc	0x00fffff8
200066f0:	ffffff00 			; <UNDEFINED> instruction: 0xffffff00
200066f4:	01ffffff 	ldrsheq	pc, [pc, #255]	; 200067fb <bg_bits+0x287>	; <UNPREDICTABLE>
200066f8:	0fe01fff 	svceq	0x00e01fff
200066fc:	7ffffff8 	svcvc	0x00fffff8
20006700:	7ffffc00 	svcvc	0x00fffc00
20006704:	01ffffff 	ldrsheq	pc, [pc, #255]	; 2000680b <bg_bits+0x297>	; <UNPREDICTABLE>
20006708:	0fe03ffe 	svceq	0x00e03ffe
2000670c:	3fdffff0 	svccc	0x00dffff0
20006710:	3ffffe00 	svccc	0x00fffe00
20006714:	01ffffff 	ldrsheq	pc, [pc, #255]	; 2000681b <bg_bits+0x2a7>	; <UNPREDICTABLE>
20006718:	0fe03ff8 	svceq	0x00e03ff8
2000671c:	3fe7fff0 	svccc	0x00e7fff0
20006720:	07fffe00 	ldrbeq	pc, [pc, r0, lsl #28]!	; <UNPREDICTABLE>
20006724:	03ffffff 	mvnseq	pc, #1020	; 0x3fc
20006728:	07c07ff0 			; <UNDEFINED> instruction: 0x07c07ff0
2000672c:	1fe7fff0 	svcne	0x00e7fff0
20006730:	0ffffe00 	svceq	0x00fffe00
20006734:	03fc00ff 	mvnseq	r0, #255	; 0xff
20006738:	0000ffe0 	andeq	pc, r0, r0, ror #31
2000673c:	1ff3ffe0 	svcne	0x00f3ffe0
20006740:	1ffffe00 	svcne	0x00fffe00
20006744:	03fc001f 	mvnseq	r0, #31
20006748:	0001ff80 	andeq	pc, r1, r0, lsl #31
2000674c:	1ff9ffe0 	svcne	0x00f9ffe0
20006750:	3ffffe00 	svccc	0x00fffe00
20006754:	03fc0007 	mvnseq	r0, #7
20006758:	0001ff80 	andeq	pc, r1, r0, lsl #31
2000675c:	0ffcffe0 	svceq	0x00fcffe0
20006760:	3ffdfe00 	svccc	0x00fdfe00
20006764:	07f80007 	ldrbeq	r0, [r8, r7]!
20006768:	0003ff00 	andeq	pc, r3, r0, lsl #30
2000676c:	0ffe7ff0 	svceq	0x00fe7ff0
20006770:	3ffcfe00 	svccc	0x00fcfe00
20006774:	07f80003 	ldrbeq	r0, [r8, r3]!
20006778:	0007fe00 	andeq	pc, r7, r0, lsl #28
2000677c:	07fe7ff8 			; <UNDEFINED> instruction: 0x07fe7ff8
20006780:	3ff8fe00 	svccc	0x00f8fe00
20006784:	0ff80003 	svceq	0x00f80003
20006788:	0007fc00 	andeq	pc, r7, r0, lsl #24
2000678c:	03fffffc 	mvnseq	pc, #252, 30	; 0x3f0
20006790:	3ff87c00 	svccc	0x00f87c00
20006794:	0ff80003 	svceq	0x00f80003
20006798:	0007fc00 	andeq	pc, r7, r0, lsl #24
2000679c:	01fffffe 	ldrsheq	pc, [pc, #254]	; 200068a2 <bg_bits+0x32e>	; <UNPREDICTABLE>
200067a0:	1ff00000 	svcne	0x00f00000	; IMB
200067a4:	0ff00007 	svceq	0x00f00007
200067a8:	000ff800 	andeq	pc, pc, r0, lsl #16
200067ac:	01ffffff 	ldrsheq	pc, [pc, #255]	; 200068b3 <bg_bits+0x33f>	; <UNPREDICTABLE>
200067b0:	07f0003e 			; <UNDEFINED> instruction: 0x07f0003e
200067b4:	0ff00007 	svceq	0x00f00007
200067b8:	800ff000 	andhi	pc, pc, r0
200067bc:	00ffffff 	ldrshteq	pc, [pc], #255	; <UNPREDICTABLE>
200067c0:	03e0007f 	mvneq	r0, #127	; 0x7f
200067c4:	0fe00007 	svceq	0x00e00007
200067c8:	c00ff000 	andgt	pc, pc, r0
200067cc:	007fffff 	ldrshteq	pc, [pc], #-255	; <UNPREDICTABLE>
200067d0:	0000007f 	andeq	r0, r0, pc, ror r0
200067d4:	0fe00007 	svceq	0x00e00007
200067d8:	e00ff000 	and	pc, pc, r0
200067dc:	007ffeff 	ldrshteq	pc, [pc], #-239	; <UNPREDICTABLE>
200067e0:	0000007f 	andeq	r0, r0, pc, ror r0
200067e4:	0fe00007 	svceq	0x00e00007
200067e8:	f00ff000 			; <UNDEFINED> instruction: 0xf00ff000
200067ec:	003ffe7f 	eorseq	pc, pc, pc, ror lr	; <UNPREDICTABLE>
200067f0:	0000007f 	andeq	r0, r0, pc, ror r0
200067f4:	0fe00007 	svceq	0x00e00007
200067f8:	f80ff000 			; <UNDEFINED> instruction: 0xf80ff000
200067fc:	001ffc3f 	andseq	pc, pc, pc, lsr ip	; <UNPREDICTABLE>
20006800:	0000007f 	andeq	r0, r0, pc, ror r0
20006804:	1fe0000f 	svcne	0x00e0000f
20006808:	fc0ff000 	stc2	0, cr15, [pc], {-0}
2000680c:	000ff81f 	andeq	pc, pc, pc, lsl r8	; <UNPREDICTABLE>
20006810:	0000003e 	andeq	r0, r0, lr, lsr r0
20006814:	1fe0000f 	svcne	0x00e0000f
20006818:	fc07f000 	stc2	0, cr15, [r7], {-0}
2000681c:	0007f00f 	andeq	pc, r7, pc
20006820:	00000000 	andeq	r0, r0, r0
20006824:	1fe0000f 	svcne	0x00e0000f
20006828:	fc07f000 	stc2	0, cr15, [r7], {-0}
2000682c:	00000007 	andeq	r0, r0, r7
20006830:	00000000 	andeq	r0, r0, r0
20006834:	1fe0000f 	svcne	0x00e0000f
20006838:	fc07f800 	stc2	8, cr15, [r7], {-0}
2000683c:	00000003 	andeq	r0, r0, r3
20006840:	000ff800 	andeq	pc, pc, r0, lsl #16
20006844:	1fc0001f 	svcne	0x00c0001f
20006848:	fc07fc00 	stc2	12, cr15, [r7], {-0}
2000684c:	00000001 	andeq	r0, r0, r1
20006850:	001ffc00 	andseq	pc, pc, r0, lsl #24
20006854:	1fc0003f 	svcne	0x00c0003f
20006858:	fc07ff80 	stc2	15, cr15, [r7], {128}	; 0x80
2000685c:	00000001 	andeq	r0, r0, r1
20006860:	003fff00 	eorseq	pc, pc, r0, lsl #30
20006864:	3fc0003f 	svccc	0x00c0003f
20006868:	fc07fffc 	stc2	15, cr15, [r7], {252}	; 0xfc
2000686c:	00000001 	andeq	r0, r0, r1
20006870:	007fff80 	rsbseq	pc, pc, r0, lsl #31
20006874:	ffc0003f 			; <UNDEFINED> instruction: 0xffc0003f
20006878:	fc03ffff 	stc2	15, cr15, [r3], {255}	; 0xff
2000687c:	00000001 	andeq	r0, r0, r1
20006880:	00ffffe0 	rscseq	pc, pc, r0, ror #31
20006884:	ffc0007f 			; <UNDEFINED> instruction: 0xffc0007f
20006888:	fc01ffff 	stc2	15, cr15, [r1], {255}	; 0xff
2000688c:	00000007 	andeq	r0, r0, r7
20006890:	03fffff0 	mvnseq	pc, #240, 30	; 0x3c0
20006894:	ffc0007f 			; <UNDEFINED> instruction: 0xffc0007f
20006898:	fc00ffff 	stc2	15, cr15, [r0], {255}	; 0xff
2000689c:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
200068a0:	07fffff8 			; <UNDEFINED> instruction: 0x07fffff8
200068a4:	ffc0007f 			; <UNDEFINED> instruction: 0xffc0007f
200068a8:	fc007fff 	stc2	15, cr7, [r0], {255}	; 0xff
200068ac:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
200068b0:	07ff7ffd 			; <UNDEFINED> instruction: 0x07ff7ffd
200068b4:	ff80007f 			; <UNDEFINED> instruction: 0xff80007f
200068b8:	fc003fff 	stc2	15, cr3, [r0], {255}	; 0xff
200068bc:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
200068c0:	0ffe3fff 	svceq	0x00fe3fff
200068c4:	ff1f007f 			; <UNDEFINED> instruction: 0xff1f007f
200068c8:	f80007ff 			; <UNDEFINED> instruction: 0xf80007ff
200068cc:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
200068d0:	1ffc3fff 	svcne	0x00fc3fff
200068d4:	fc3f807f 	ldc2	0, cr8, [pc], #-508	; 200066e0 <bg_bits+0x16c>
200068d8:	f800003f 			; <UNDEFINED> instruction: 0xf800003f
200068dc:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
200068e0:	1ff83fff 	svcne	0x00f83fff
200068e4:	003f807f 	eorseq	r8, pc, pc, ror r0	; <UNPREDICTABLE>
200068e8:	f0000000 			; <UNDEFINED> instruction: 0xf0000000
200068ec:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
200068f0:	3ff03fff 	svccc	0x00f03fff
200068f4:	003f807f 	eorseq	r8, pc, pc, ror r0	; <UNPREDICTABLE>
200068f8:	c0000000 	andgt	r0, r0, r0
200068fc:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
20006900:	7fe03fff 	svcvc	0x00e03fff
20006904:	003f803f 	eorseq	r8, pc, pc, lsr r0	; <UNPREDICTABLE>
20006908:	00000000 	andeq	r0, r0, r0
2000690c:	f8000000 			; <UNDEFINED> instruction: 0xf8000000
20006910:	7fc03fff 	svcvc	0x00c03fff
20006914:	003f803f 	eorseq	r8, pc, pc, lsr r0	; <UNPREDICTABLE>
20006918:	fffff000 			; <UNDEFINED> instruction: 0xfffff000
2000691c:	f800000f 			; <UNDEFINED> instruction: 0xf800000f
20006920:	ffc01fff 			; <UNDEFINED> instruction: 0xffc01fff
20006924:	001f003f 	andseq	r0, pc, pc, lsr r0	; <UNPREDICTABLE>
20006928:	fffff800 	vcmla.f32	d31, d15, d0[0], #270
2000692c:	f8007fff 			; <UNDEFINED> instruction: 0xf8007fff
20006930:	ff801fff 			; <UNDEFINED> instruction: 0xff801fff
20006934:	0000003f 	andeq	r0, r0, pc, lsr r0
20006938:	fffff800 	vcmla.f32	d31, d15, d0[0], #270
2000693c:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
20006940:	ff801fff 			; <UNDEFINED> instruction: 0xff801fff
20006944:	0000003f 	andeq	r0, r0, pc, lsr r0
20006948:	fffff800 	vcmla.f32	d31, d15, d0[0], #270
2000694c:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
20006950:	ff001fff 			; <UNDEFINED> instruction: 0xff001fff
20006954:	0000003f 	andeq	r0, r0, pc, lsr r0
20006958:	fffff800 	vcmla.f32	d31, d15, d0[0], #270
2000695c:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
20006960:	fe001fff 	mcr2	15, 0, r1, cr0, cr15, {7}
20006964:	0000003f 	andeq	r0, r0, pc, lsr r0
20006968:	fffff800 	vcmla.f32	d31, d15, d0[0], #270
2000696c:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
20006970:	fe001fff 	mcr2	15, 0, r1, cr0, cr15, {7}

20006974 <current_screen>:
20006974:	00000001 	andeq	r0, r0, r1

20006978 <delay_until_text.4281>:
20006978:	00000082 	andeq	r0, r0, r2, lsl #1

2000697c <long_text.4279>:
2000697c:	00000028 	andeq	r0, r0, r8, lsr #32

20006980 <short_text.4280>:
20006980:	00000014 	andeq	r0, r0, r4, lsl r0

20006984 <fire_black_2_bits>:
	...
2000698c:	18000000 	stmdane	r0, {}	; <UNPREDICTABLE>

20006990 <fire1_gray_bits>:
20006990:	00000000 	andeq	r0, r0, r0
20006994:	06000804 	streq	r0, [r0], -r4, lsl #16
20006998:	02494204 	subeq	r4, r9, #4, 4	; 0x40000000

2000699c <fire1_light_bits>:
2000699c:	00002000 	andeq	r2, r0, r0
200069a0:	48000010 	stmdami	r0, {r4}
200069a4:	2c243020 	stccs	0, cr3, [r4], #-128	; 0xffffff80

200069a8 <fire2_gray_bits>:
200069a8:	00000000 	andeq	r0, r0, r0
200069ac:	10220000 	eorne	r0, r2, r0
200069b0:	00420444 	subeq	r0, r2, r4, asr #8

200069b4 <fire2_light_bits>:
200069b4:	04200000 	strteq	r0, [r0], #-0
200069b8:	240c0010 	strcs	r0, [ip], #-16
200069bc:	123c6008 	eorsne	r6, ip, #8

200069c0 <fire3_gray_bits>:
200069c0:	00000000 	andeq	r0, r0, r0
200069c4:	24100802 	ldrcs	r0, [r0], #-2050	; 0xfffff7fe
200069c8:	00020260 	andeq	r0, r2, r0, ror #4

200069cc <fire3_light_bits>:
200069cc:	10200000 	eorne	r0, r0, r0
200069d0:	18040400 	stmdane	r4, {sl}
200069d4:	143c5812 	ldrtne	r5, [ip], #-2066	; 0xfffff7ee

200069d8 <fire4_gray_bits>:
200069d8:	08000000 	stmdaeq	r0, {}	; <UNPREDICTABLE>
200069dc:	10320000 	eorsne	r0, r2, r0
200069e0:	02400012 	subeq	r0, r0, #18

200069e4 <fire4_light_bits>:
200069e4:	00001000 	andeq	r1, r0, r0
200069e8:	04082000 	streq	r2, [r8], #-0
200069ec:	24283a0c 	strtcs	r3, [r8], #-2572	; 0xfffff5f4

200069f0 <fire5_gray_bits>:
200069f0:	00000000 	andeq	r0, r0, r0
200069f4:	22001020 	andcs	r1, r0, #32
200069f8:	04044206 	streq	r4, [r4], #-518	; 0xfffffdfa

200069fc <fire5_light_bits>:
200069fc:	00040000 	andeq	r0, r4, r0
20006a00:	04240800 	strteq	r0, [r4], #-2048	; 0xfffff800
20006a04:	502a1810 	eorpl	r1, sl, r0, lsl r8

20006a08 <firstTime.4076>:
20006a08:	00000001 	andeq	r0, r0, r1

20006a0c <bird1_black_bits>:
	...
20006a1c:	00010040 	andeq	r0, r1, r0, asr #32
20006a20:	00118060 	andseq	r8, r1, r0, rrx
20006a24:	00118060 	andseq	r8, r1, r0, rrx
20006a28:	001b80ec 	andseq	r8, fp, ip, ror #1
20006a2c:	003f81fc 	ldrshteq	r8, [pc], -ip
20006a30:	007fe1f8 	ldrshteq	lr, [pc], #-24
20006a34:	007ff3f8 	ldrshteq	pc, [pc], #-56	; <UNPREDICTABLE>
20006a38:	003ffff8 	ldrshteq	pc, [pc], -r8	; <UNPREDICTABLE>
20006a3c:	003fedf8 	ldrshteq	lr, [pc], -r8
20006a40:	001ff1f0 			; <UNDEFINED> instruction: 0x001ff1f0
20006a44:	000ff0e0 	andeq	pc, pc, r0, ror #1
20006a48:	0007ff80 	andeq	pc, r7, r0, lsl #31
20006a4c:	00007c00 	andeq	r7, r0, r0, lsl #24
20006a50:	00008800 	andeq	r8, r0, r0, lsl #16
20006a54:	00033000 	andeq	r3, r3, r0
20006a58:	00011000 	andeq	r1, r1, r0
	...

20006a70 <bird1_gray_bits>:
	...
20006aa4:	00000e00 	andeq	r0, r0, r0, lsl #28
20006aa8:	00000f00 	andeq	r0, r0, r0, lsl #30
	...

20006ad4 <bird1_light_bits>:
	...
20006b04:	00001200 	andeq	r1, r0, r0, lsl #4
	...

20006b38 <bird2_black_bits>:
	...
20006b50:	000b0000 	andeq	r0, fp, r0
20006b54:	001e0028 	andseq	r0, lr, r8, lsr #32
20006b58:	003e0068 	eorseq	r0, lr, r8, rrx
20006b5c:	003e007c 	eorseq	r0, lr, ip, ror r0
20006b60:	003e007c 	eorseq	r0, lr, ip, ror r0
20006b64:	007e007c 	rsbseq	r0, lr, ip, ror r0
20006b68:	007e7cfc 	ldrshteq	r7, [lr], #-204	; 0xffffff34
20006b6c:	007ffff8 	ldrshteq	pc, [pc], #-248	; <UNPREDICTABLE>
20006b70:	003fd7f0 	ldrshteq	sp, [pc], -r0
20006b74:	003fc3c0 	eorseq	ip, pc, r0, asr #7
20006b78:	000fc100 	andeq	ip, pc, r0, lsl #2
20006b7c:	00007000 	andeq	r7, r0, r0
20006b80:	0000a000 	andeq	sl, r0, r0
20006b84:	0001e000 	andeq	lr, r1, r0
20006b88:	0000a000 	andeq	sl, r0, r0
20006b8c:	00008000 	andeq	r8, r0, r0
	...

20006b9c <bird2_gray_bits>:
	...
20006bd8:	00003c00 	andeq	r3, r0, r0, lsl #24
20006bdc:	00003e00 	andeq	r3, r0, r0, lsl #28
	...

20006c00 <bird2_light_bits>:
	...
20006c38:	00002800 	andeq	r2, r0, r0, lsl #16
	...

20006c64 <bird3_black_bits>:
	...
20006c84:	00280000 	eoreq	r0, r8, r0
20006c88:	00680020 	rsbeq	r0, r8, r0, lsr #32
20006c8c:	00f80038 	rscseq	r0, r8, r8, lsr r0
20006c90:	00fc0038 	rscseq	r0, ip, r8, lsr r0
20006c94:	00fc007c 	rscseq	r0, ip, ip, ror r0
20006c98:	00fe3dfe 	ldrshteq	r3, [lr], #222	; 0xde
20006c9c:	00fffffe 	ldrshteq	pc, [pc], #254	; <UNPREDICTABLE>
20006ca0:	007febfc 	ldrshteq	lr, [pc], #-188
20006ca4:	003ff1f0 	ldrshteq	pc, [pc], -r0	; <UNPREDICTABLE>
20006ca8:	001ff0c0 	andseq	pc, pc, r0, asr #1
20006cac:	0001e800 	andeq	lr, r1, r0, lsl #16
20006cb0:	00005000 	andeq	r5, r0, r0
20006cb4:	0000f000 	andeq	pc, r0, r0
20006cb8:	00009000 	andeq	r9, r0, r0
	...

20006cc8 <bird3_gray_bits>:
	...
20006d08:	00000e00 	andeq	r0, r0, r0, lsl #28
20006d0c:	00000f00 	andeq	r0, r0, r0, lsl #30
	...

20006d2c <bird3_light_bits>:
	...
20006d68:	00001400 	andeq	r1, r0, r0, lsl #8
	...

20006d90 <bird4_black_bits>:
	...
20006dc4:	00007800 	andeq	r7, r0, r0, lsl #16
20006dc8:	0000ff80 	andeq	pc, r0, r0, lsl #31
20006dcc:	0003d7f4 	strdeq	sp, [r3], -r4
20006dd0:	008fe3fc 	strdeq	lr, [pc], ip
20006dd4:	01ffc1fc 	ldrsheq	ip, [pc, #28]	; 20006df8 <bird4_gray_bits+0x4>
20006dd8:	00ffd9f8 	ldrshteq	sp, [pc], #152
20006ddc:	007fb0f0 	ldrshteq	fp, [pc], #-0
20006de0:	007ea000 	rsbseq	sl, lr, r0
20006de4:	00792000 	rsbseq	r2, r9, r0
20006de8:	00300000 	eorseq	r0, r0, r0
	...

20006df4 <bird4_gray_bits>:
	...
20006e34:	00001c00 	andeq	r1, r0, r0, lsl #24
20006e38:	00003e00 	andeq	r3, r0, r0, lsl #28
	...

20006e58 <bird4_light_bits>:
	...
20006e94:	00002800 	andeq	r2, r0, r0, lsl #16
	...

20006ebc <bird5_black_bits>:
	...
20006ee8:	00001c00 	andeq	r1, r0, r0, lsl #24
20006eec:	0000ff00 	andeq	pc, r0, r0, lsl #30
20006ef0:	0003eb00 	andeq	lr, r3, r0, lsl #22
20006ef4:	0007f180 	andeq	pc, r7, r0, lsl #3
20006ef8:	000ff080 	andeq	pc, pc, r0, lsl #1
20006efc:	000fff80 	andeq	pc, pc, r0, lsl #31
20006f00:	001fd3c0 	andseq	sp, pc, r0, asr #7
20006f04:	003fa3c0 	eorseq	sl, pc, r0, asr #7
20006f08:	003fa3c0 	eorseq	sl, pc, r0, asr #7
20006f0c:	003fd3c0 	eorseq	sp, pc, r0, asr #7
20006f10:	003e8380 	eorseq	r8, lr, r0, lsl #7
20006f14:	00778580 	rsbseq	r8, r7, r0, lsl #11
20006f18:	00610000 	rsbeq	r0, r1, r0
20006f1c:	00000000 	andeq	r0, r0, r0

20006f20 <bird5_gray_bits>:
	...
20006f58:	00000e00 	andeq	r0, r0, r0, lsl #28
20006f5c:	00000f00 	andeq	r0, r0, r0, lsl #30
	...

20006f84 <bird5_light_bits>:
	...
20006fb8:	00001400 	andeq	r1, r0, r0, lsl #8
	...

20006fe8 <firstTime.4093>:
20006fe8:	00000001 	andeq	r0, r0, r1

20006fec <witch1_black_bits>:
20006fec:	200001f8 	strdcs	r0, [r0], -r8
20006ff0:	03400001 	movteq	r0, #1
20006ff4:	00074000 	andeq	r4, r7, r0
20006ff8:	20000720 	andcs	r0, r0, r0, lsr #14
20006ffc:	3ff80066 	svccc	0x00f80066
20007000:	00044000 	andeq	r4, r4, r0
20007004:	40000440 	andmi	r0, r0, r0, asr #8
20007008:	03800004 	orreq	r0, r0, #4
2000700c:	00064000 	andeq	r4, r6, r0
20007010:	20000640 	andcs	r0, r0, r0, asr #12
20007014:	0e200006 	cdpeq	0, 2, cr0, cr0, cr6, {0}
20007018:	000e1000 	andeq	r1, lr, r0
2000701c:	f8000c10 			; <UNDEFINED> instruction: 0xf8000c10
20007020:	0000001f 	andeq	r0, r0, pc, lsl r0

20007024 <witch1_gray_bits>:
20007024:	c0000000 	andgt	r0, r0, r0
20007028:	00800000 	addeq	r0, r0, r0
2000702c:	00008000 	andeq	r8, r0, r0
20007030:	c00000c0 	andgt	r0, r0, r0, asr #1
20007034:	00000001 	andeq	r0, r0, r1
	...
20007044:	00018000 	andeq	r8, r1, r0
20007048:	c0000180 	andgt	r0, r0, r0, lsl #3
2000704c:	01c00001 	biceq	r0, r0, r1
20007050:	0001e000 	andeq	lr, r1, r0
20007054:	000003e0 	andeq	r0, r0, r0, ror #7
20007058:	00000000 	andeq	r0, r0, r0

2000705c <witch1_light_bits>:
	...
20007070:	00038000 	andeq	r8, r3, r0
20007074:	80000380 	andhi	r0, r0, r0, lsl #7
20007078:	00000003 	andeq	r0, r0, r3
	...

20007094 <witch2_black_bits>:
20007094:	f8000000 			; <UNDEFINED> instruction: 0xf8000000
20007098:	01200001 			; <UNDEFINED> instruction: 0x01200001
2000709c:	00034000 	andeq	r4, r3, r0
200070a0:	20000740 	andcs	r0, r0, r0, asr #14
200070a4:	66200007 	strtvs	r0, [r0], -r7
200070a8:	003ff800 	eorseq	pc, pc, r0, lsl #16
200070ac:	40000440 	andmi	r0, r0, r0, asr #8
200070b0:	04400004 	strbeq	r0, [r0], #-4
200070b4:	00038000 	andeq	r8, r3, r0
200070b8:	20000660 	andcs	r0, r0, r0, ror #12
200070bc:	0e100006 	cdpeq	0, 1, cr0, cr0, cr6, {0}
200070c0:	001c0800 	andseq	r0, ip, r0, lsl #16
200070c4:	fc001c08 	stc2	12, cr1, [r0], {8}
200070c8:	0000003f 	andeq	r0, r0, pc, lsr r0

200070cc <witch2_gray_bits>:
200070cc:	00000000 	andeq	r0, r0, r0
200070d0:	00c00000 	sbceq	r0, r0, r0
200070d4:	00008000 	andeq	r8, r0, r0
200070d8:	c0000080 	andgt	r0, r0, r0, lsl #1
200070dc:	01c00000 	biceq	r0, r0, r0
	...
200070f0:	c0000180 	andgt	r0, r0, r0, lsl #3
200070f4:	01e00001 	mvneq	r0, r1
200070f8:	0003f000 	andeq	pc, r3, r0
200070fc:	000003f0 	strdeq	r0, [r0], -r0	; <UNPREDICTABLE>
20007100:	00000000 	andeq	r0, r0, r0

20007104 <witch2_light_bits>:
	...
2000711c:	80000380 	andhi	r0, r0, r0, lsl #7
20007120:	03800003 	orreq	r0, r0, #3
	...

2000713c <witch3_black_bits>:
2000713c:	f8000000 			; <UNDEFINED> instruction: 0xf8000000
20007140:	01200001 			; <UNDEFINED> instruction: 0x01200001
20007144:	00034000 	andeq	r4, r3, r0
20007148:	20000740 	andcs	r0, r0, r0, asr #14
2000714c:	66200007 	strtvs	r0, [r0], -r7
20007150:	003ff800 	eorseq	pc, pc, r0, lsl #16
20007154:	40000440 	andmi	r0, r0, r0, asr #8
20007158:	04400004 	strbeq	r0, [r0], #-4
2000715c:	00038000 	andeq	r8, r3, r0
20007160:	10000660 	andne	r0, r0, r0, ror #12
20007164:	1c08000e 	stcne	0, cr0, [r8], {14}
20007168:	00380800 	eorseq	r0, r8, r0, lsl #16
2000716c:	fe003804 	vcmla.f16	d3, d0, d4[0], #0
20007170:	0000007f 	andeq	r0, r0, pc, ror r0

20007174 <witch3_gray_bits>:
20007174:	00000000 	andeq	r0, r0, r0
20007178:	00c00000 	sbceq	r0, r0, r0
2000717c:	00008000 	andeq	r8, r0, r0
20007180:	c0000080 	andgt	r0, r0, r0, lsl #1
20007184:	01c00000 	biceq	r0, r0, r0
	...
20007198:	e0000180 	and	r0, r0, r0, lsl #3
2000719c:	03f00001 	mvnseq	r0, #1
200071a0:	0007f000 	andeq	pc, r7, r0
200071a4:	000007f8 	strdeq	r0, [r0], -r8
200071a8:	00000000 	andeq	r0, r0, r0

200071ac <witch3_light_bits>:
	...
200071c4:	80000380 	andhi	r0, r0, r0, lsl #7
200071c8:	03800003 	orreq	r0, r0, #3
	...

200071e4 <firstTime.4067>:
200071e4:	00000001 	andeq	r0, r0, r1

200071e8 <indoors_black_bits>:
200071e8:	00000100 	andeq	r0, r0, r0, lsl #2
	...
200071f8:	00000100 	andeq	r0, r0, r0, lsl #2
	...
20007208:	00000100 	andeq	r0, r0, r0, lsl #2
	...
20007218:	00000100 	andeq	r0, r0, r0, lsl #2
	...
20007228:	00000100 	andeq	r0, r0, r0, lsl #2
	...
20007238:	00000100 	andeq	r0, r0, r0, lsl #2
	...
20007248:	00000280 	andeq	r0, r0, r0, lsl #5
	...
20007258:	00000440 	andeq	r0, r0, r0, asr #8
	...
20007268:	00002aa8 	andeq	r2, r0, r8, lsr #21
	...
20007278:	00001290 	muleq	r0, r0, r2
	...
20007288:	00002c68 	andeq	r2, r0, r8, ror #24
	...
20007298:	00002008 	andeq	r2, r0, r8
	...
200072a8:	000027c8 	andeq	r2, r0, r8, asr #15
	...
200072b8:	00001ff0 	strdeq	r1, [r0], -r0
	...
200072c8:	00000d60 	andeq	r0, r0, r0, ror #26
	...
20007338:	f7fbfe00 			; <UNDEFINED> instruction: 0xf7fbfe00
2000733c:	7fbfdfef 	svcvc	0x00bfdfef
20007340:	fbfdfeff 	blx	1ff86f46 <startup-0x790ba>
20007344:	00ff703f 	rscseq	r7, pc, pc, lsr r0	; <UNPREDICTABLE>
20007348:	0c060200 	sfmeq	f0, 4, [r6], {-0}
2000734c:	c0603018 	rsbgt	r3, r0, r8, lsl r0
20007350:	06030180 	streq	r0, [r3], -r0, lsl #3
20007354:	0080d02c 	addeq	sp, r0, ip, lsr #32
20007358:	0c060200 	sfmeq	f0, 4, [r6], {-0}
2000735c:	c0603018 	rsbgt	r3, r0, r8, lsl r0
20007360:	06030180 	streq	r0, [r3], -r0, lsl #3
20007364:	0080d02c 	addeq	sp, r0, ip, lsr #32
20007368:	fffffe00 			; <UNDEFINED> instruction: 0xfffffe00
2000736c:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
20007370:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
20007374:	00ffdfef 	rscseq	sp, pc, pc, ror #31
	...
20007384:	000050e8 	andeq	r5, r0, r8, ror #1
	...
20007394:	00005fe8 	andeq	r5, r0, r8, ror #31
	...
200073a4:	00005028 	andeq	r5, r0, r8, lsr #32
	...
200073b4:	00005028 	andeq	r5, r0, r8, lsr #32
	...
200073c4:	00005fe8 	andeq	r5, r0, r8, ror #31
	...
200073d4:	03f050e8 	mvnseq	r5, #232	; 0xe8
	...
200073e4:	0c0c5fe8 	stceq	15, cr5, [ip], {232}	; 0xe8
	...
200073f4:	10025028 	andne	r5, r2, r8, lsr #32
	...
20007404:	13fa5028 	mvnsne	r5, #40	; 0x28
	...
20007414:	100a5fe8 	andne	r5, sl, r8, ror #31
	...
20007424:	100a50e8 	andne	r5, sl, r8, ror #1
	...
20007434:	100a5fe8 	andne	r5, sl, r8, ror #31
	...
20007444:	100a5028 	andne	r5, sl, r8, lsr #32
	...
20007454:	100a5028 	andne	r5, sl, r8, lsr #32
	...
20007464:	100a5fe8 	andne	r5, sl, r8, ror #31
	...
20007474:	100a50e8 	andne	r5, sl, r8, ror #1
	...
20007484:	100a5ee8 	andne	r5, sl, r8, ror #29
	...
20007494:	100a5028 	andne	r5, sl, r8, lsr #32
	...
200074a4:	100a5028 	andne	r5, sl, r8, lsr #32
	...
200074b4:	10025fe8 	andne	r5, r2, r8, ror #31
	...
200074c4:	0ffc50e8 	svceq	0x00fc50e8
	...
200074d4:	00005fe8 	andeq	r5, r0, r8, ror #31
	...
200074e4:	00005028 	andeq	r5, r0, r8, lsr #32
	...
200074f4:	00005028 	andeq	r5, r0, r8, lsr #32
	...
20007504:	00005fe8 	andeq	r5, r0, r8, ror #31
	...
20007514:	000050e8 	andeq	r5, r0, r8, ror #1
	...
20007524:	00005fe8 	andeq	r5, r0, r8, ror #31
	...
20007534:	00007028 	andeq	r7, r0, r8, lsr #32
	...
20007544:	00007028 	andeq	r7, r0, r8, lsr #32
	...
20007554:	00007038 	andeq	r7, r0, r8, lsr r0
20007558:	f7fbfdfe 			; <UNDEFINED> instruction: 0xf7fbfdfe
2000755c:	7fbfdfef 	svcvc	0x00bfdfef
20007560:	fbfdfeff 	blx	1ff87166 <startup-0x78e9a>
20007564:	bfbfeff7 	svclt	0x00bfeff7
20007568:	0c060301 	stceq	3, cr0, [r6], {1}
2000756c:	c0603018 	rsbgt	r3, r0, r8, lsl r0
20007570:	06030180 	streq	r0, [r3], -r0, lsl #3
20007574:	6030180c 	eorsvs	r1, r0, ip, lsl #16
20007578:	0c060301 	stceq	3, cr0, [r6], {1}
2000757c:	c0603018 	rsbgt	r3, r0, r8, lsl r0
20007580:	06030180 	streq	r0, [r3], -r0, lsl #3
20007584:	6030180c 	eorsvs	r1, r0, ip, lsl #16
20007588:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
2000758c:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
20007590:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
20007594:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
20007598:	c0603018 	rsbgt	r3, r0, r8, lsl r0
2000759c:	06030180 	streq	r0, [r3], -r0, lsl #3
200075a0:	6030180c 	eorsvs	r1, r0, ip, lsl #16
200075a4:	030180c0 	movweq	r8, #4288	; 0x10c0
200075a8:	c0603018 	rsbgt	r3, r0, r8, lsl r0
200075ac:	06030180 	streq	r0, [r3], -r0, lsl #3
200075b0:	6030180c 	eorsvs	r1, r0, ip, lsl #16
200075b4:	030180c0 	movweq	r8, #4288	; 0x10c0
200075b8:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
200075bc:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
200075c0:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
200075c4:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
200075c8:	030180c0 	movweq	r8, #4288	; 0x10c0
200075cc:	30180c06 	andscc	r0, r8, r6, lsl #24
200075d0:	0180c060 	orreq	ip, r0, r0, rrx
200075d4:	180c0603 	stmdane	ip, {r0, r1, r9, sl}
200075d8:	030180c0 	movweq	r8, #4288	; 0x10c0
200075dc:	30180c06 	andscc	r0, r8, r6, lsl #24
200075e0:	0180c060 	orreq	ip, r0, r0, rrx
200075e4:	180c0603 	stmdane	ip, {r0, r1, r9, sl}

200075e8 <indoors_gray_bits>:
	...
20007648:	00001110 	andeq	r1, r0, r0, lsl r1
	...
20007658:	00001090 	muleq	r0, r0, r0
	...
20007688:	00000390 	muleq	r0, r0, r3
	...
20007698:	00001340 	andeq	r1, r0, r0, asr #6
	...
200076a8:	00000830 	andeq	r0, r0, r0, lsr r8
	...
20007738:	08040000 	stmdaeq	r4, {}	; <UNPREDICTABLE>
2000773c:	80402010 	subhi	r2, r0, r0, lsl r0
20007740:	04020100 	streq	r0, [r2], #-256	; 0xffffff00
20007744:	00008000 	andeq	r8, r0, r0
20007748:	b0582c00 	subslt	r2, r8, r0, lsl #24
2000774c:	0582c160 	streq	ip, [r2, #352]	; 0x160
20007750:	582c160b 	stmdapl	ip!, {r0, r1, r3, r9, sl, ip}
20007754:	010b0000 	mrseq	r0, (UNDEF: 11)
20007758:	71b8dc00 			; <UNDEFINED> instruction: 0x71b8dc00
2000775c:	1b8dc6e3 	blne	1e3792f0 <startup-0x1c86d10>
20007760:	b8dc6e37 	ldmlt	ip, {r0, r1, r2, r4, r5, r9, sl, fp, sp, lr}^
20007764:	01370001 	teqeq	r7, r1
	...
20007774:	01000000 	mrseq	r0, (UNDEF: 0)
20007778:	fffff000 			; <UNDEFINED> instruction: 0xfffff000
2000777c:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
20007780:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
20007784:	01ff8007 	mvnseq	r8, r7
	...
20007794:	00008000 	andeq	r8, r0, r0
	...
200077a4:	00008180 	andeq	r8, r0, r0, lsl #3
	...
200077b4:	00008180 	andeq	r8, r0, r0, lsl #3
	...
200077c4:	00008000 	andeq	r8, r0, r0
	...
200077d4:	00008000 	andeq	r8, r0, r0
	...
200077e4:	00008000 	andeq	r8, r0, r0
	...
200077f4:	00008180 	andeq	r8, r0, r0, lsl #3
	...
20007804:	20008180 	andcs	r8, r0, r0, lsl #3
	...
20007814:	20808000 	addcs	r8, r0, r0
	...
20007824:	20c08100 	sbccs	r8, r0, r0, lsl #2
	...
20007834:	21e08000 	mvncs	r8, r0
	...
20007844:	2bf08180 	blcs	1fc27e4c <startup-0x3d81b4>
	...
20007854:	25c08180 	strbcs	r8, [r0, #384]	; 0x180
	...
20007864:	29e08000 	stmibcs	r0!, {pc}^
	...
20007874:	2bc08100 	blcs	1f027c7c <startup-0xfd8384>
	...
20007884:	20c08110 	sbccs	r8, r0, r0, lsl r1
	...
20007894:	28e0a190 	stmiacs	r0!, {r4, r7, r8, sp, pc}^
	...
200078a4:	2bf08180 	blcs	1fc27eac <startup-0x3d8154>
	...
200078b4:	28008000 	stmdacs	r0, {pc}
	...
200078c4:	3000a010 	andcc	sl, r0, r0, lsl r0
	...
200078d4:	1fc0a000 	svcne	0x00c0a000
	...
200078e4:	0000a180 	andeq	sl, r0, r0, lsl #3
	...
200078f4:	00008190 	muleq	r0, r0, r1
	...
20007904:	00008010 	andeq	r8, r0, r0, lsl r0
	...
20007914:	00008110 	andeq	r8, r0, r0, lsl r1
	...
20007924:	0000a010 	andeq	sl, r0, r0, lsl r0
	...
20007934:	00008190 	muleq	r0, r0, r1
	...
20007944:	00008190 	muleq	r0, r0, r1
	...
20007954:	00008180 	andeq	r8, r0, r0, lsl #3
20007958:	08040201 	stmdaeq	r4, {r0, r9}
2000795c:	80402010 	subhi	r2, r0, r0, lsl r0
20007960:	04020100 	streq	r0, [r2], #-256	; 0xffffff00
20007964:	40401008 	submi	r1, r0, r8
20007968:	b0582c16 	subslt	r2, r8, r6, lsl ip
2000796c:	0582c160 	streq	ip, [r2, #352]	; 0x160
20007970:	582c160b 	stmdapl	ip!, {r0, r1, r3, r9, sl, ip}
20007974:	82c160b0 	sbchi	r6, r1, #176	; 0xb0
20007978:	71b8dc6e 			; <UNDEFINED> instruction: 0x71b8dc6e
2000797c:	1b8dc6e3 	blne	1e379510 <startup-0x1c86af0>
20007980:	b8dc6e37 	ldmlt	ip, {r0, r1, r2, r4, r5, r9, sl, fp, sp, lr}^
20007984:	8dc6e371 	stclhi	3, cr14, [r6, #452]	; 0x1c4
	...
20007998:	0582c160 	streq	ip, [r2, #352]	; 0x160
2000799c:	582c160b 	stmdapl	ip!, {r0, r1, r3, r9, sl, ip}
200079a0:	82c160b0 	sbchi	r6, r1, #176	; 0xb0
200079a4:	2c160b05 			; <UNDEFINED> instruction: 0x2c160b05
200079a8:	1b8dc6e3 	blne	1e37953c <startup-0x1c86ac4>
200079ac:	b8dc6e37 	ldmlt	ip, {r0, r1, r2, r4, r5, r9, sl, fp, sp, lr}^
200079b0:	8dc6e371 	stclhi	3, cr14, [r6, #452]	; 0x1c4
200079b4:	dc6e371b 	stclle	7, cr3, [lr], #-108	; 0xffffff94
	...
200079c8:	2c160b05 			; <UNDEFINED> instruction: 0x2c160b05
200079cc:	c160b058 	qdsubgt	fp, r8, r0
200079d0:	160b0582 	strne	r0, [fp], -r2, lsl #11
200079d4:	60b0582c 	adcsvs	r5, r0, ip, lsr #16
200079d8:	dc6e371b 	stclle	7, cr3, [lr], #-108	; 0xffffff94
200079dc:	c6e371b8 			; <UNDEFINED> instruction: 0xc6e371b8
200079e0:	6e371b8d 	vaddvs.f64	d1, d23, d13
200079e4:	e371b8dc 	cmn	r1, #220, 16	; 0xdc0000

200079e8 <indoors_light_bits>:
	...
20007a28:	00001010 	andeq	r1, r0, r0, lsl r0
	...
20007a58:	00000300 	andeq	r0, r0, r0, lsl #6
	...
20007a68:	00001110 	andeq	r1, r0, r0, lsl r1
	...
20007a78:	00000100 	andeq	r0, r0, r0, lsl #2
	...
20007a88:	00001000 	andeq	r1, r0, r0
	...
20007a98:	00000cb0 			; <UNDEFINED> instruction: 0x00000cb0
	...
20007aa8:	00001000 	andeq	r1, r0, r0
	...
20007b48:	43a1d000 			; <UNDEFINED> instruction: 0x43a1d000
20007b4c:	3a1d0e87 	bcc	2074b570 <firstTime.4040+0x742b84>
20007b50:	a1d0e874 	bicsge	lr, r0, r4, ror r8
20007b54:	00742013 	rsbseq	r2, r4, r3, lsl r0
20007b58:	82412000 	subhi	r2, r1, #0
20007b5c:	24120904 	ldrcs	r0, [r2], #-2308	; 0xfffff6fc
20007b60:	41209048 			; <UNDEFINED> instruction: 0x41209048
20007b64:	00482012 	subeq	r2, r8, r2, lsl r0
	...
20007b74:	00002010 	andeq	r2, r0, r0, lsl r0
	...
20007b84:	00002f10 	andeq	r2, r0, r0, lsl pc
	...
20007b94:	00002010 	andeq	r2, r0, r0, lsl r0
	...
20007ba4:	00002010 	andeq	r2, r0, r0, lsl r0
	...
20007bb4:	00002010 	andeq	r2, r0, r0, lsl r0
	...
20007bc4:	00002010 	andeq	r2, r0, r0, lsl r0
	...
20007bd4:	00002f10 	andeq	r2, r0, r0, lsl pc
	...
20007be4:	00002010 	andeq	r2, r0, r0, lsl r0
	...
20007bf4:	00002010 	andeq	r2, r0, r0, lsl r0
	...
20007c04:	00002010 	andeq	r2, r0, r0, lsl r0
	...
20007c14:	03702010 	cmneq	r0, #16
	...
20007c24:	03302e10 	teqeq	r0, #16, 28	; 0x100
	...
20007c34:	02102010 	andseq	r2, r0, #16
	...
20007c44:	00002010 	andeq	r2, r0, r0, lsl r0
	...
20007c54:	02302010 	eorseq	r2, r0, #16
	...
20007c64:	02102010 	andseq	r2, r0, #16
	...
20007c74:	00302e10 	eorseq	r2, r0, r0, lsl lr
	...
20007c84:	03302000 	teqeq	r0, #0
	...
20007c94:	03100000 	tsteq	r0, #0
	...
20007ca4:	00002010 	andeq	r2, r0, r0, lsl r0
	...
20007cb4:	00002010 	andeq	r2, r0, r0, lsl r0
	...
20007cc4:	00000f00 	andeq	r0, r0, r0, lsl #30
	...
20007cd4:	00000010 	andeq	r0, r0, r0, lsl r0
	...
20007ce4:	00000010 	andeq	r0, r0, r0, lsl r0
	...
20007cf4:	00002000 	andeq	r2, r0, r0
	...
20007d04:	00002000 	andeq	r2, r0, r0
	...
20007d14:	00002e00 	andeq	r2, r0, r0, lsl #28
	...
20007d68:	43a1d0e8 			; <UNDEFINED> instruction: 0x43a1d0e8
20007d6c:	3a1d0e87 	bcc	2074b790 <firstTime.4040+0x742da4>
20007d70:	a1d0e874 	bicsge	lr, r0, r4, ror r8
20007d74:	1d0e8743 	stcne	7, cr8, [lr, #-268]	; 0xfffffef4
20007d78:	82412090 	subhi	r2, r1, #144	; 0x90
20007d7c:	24120904 	ldrcs	r0, [r2], #-2308	; 0xfffff6fc
20007d80:	41209048 			; <UNDEFINED> instruction: 0x41209048
20007d84:	12090482 	andne	r0, r9, #-2113929216	; 0x82000000
	...
20007d98:	3a1d0e87 	bcc	2074b7bc <firstTime.4040+0x742dd0>
20007d9c:	a1d0e874 	bicsge	lr, r0, r4, ror r8
20007da0:	1d0e8743 	stcne	7, cr8, [lr, #-268]	; 0xfffffef4
20007da4:	d0e8743a 	rscle	r7, r8, sl, lsr r4
20007da8:	24120904 	ldrcs	r0, [r2], #-2308	; 0xfffff6fc
20007dac:	41209048 			; <UNDEFINED> instruction: 0x41209048
20007db0:	12090482 	andne	r0, r9, #-2113929216	; 0x82000000
20007db4:	20904824 	addscs	r4, r0, r4, lsr #16
	...
20007dc8:	d0e8743a 	rscle	r7, r8, sl, lsr r4
20007dcc:	0e8743a1 	cdpeq	3, 8, cr4, cr7, cr1, {5}
20007dd0:	e8743a1d 	ldmda	r4!, {r0, r2, r3, r4, r9, fp, ip, sp}^
20007dd4:	8743a1d0 			; <UNDEFINED> instruction: 0x8743a1d0
20007dd8:	20904824 	addscs	r4, r0, r4, lsr #16
20007ddc:	09048241 	stmdbeq	r4, {r0, r6, r9, pc}
20007de0:	90482412 	subls	r2, r8, r2, lsl r4
20007de4:	04824120 	streq	r4, [r2], #288	; 0x120

20007de8 <firstTime.4040>:
20007de8:	00000001 	andeq	r0, r0, r1

20007dec <indoors2_black_bits>:
20007dec:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
20007df0:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
20007df4:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
20007df8:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
20007dfc:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
20007e00:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
20007e04:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
20007e08:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
20007e0c:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
20007e10:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
20007e14:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
20007e18:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
20007e1c:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
20007e20:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
20007e24:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
20007e28:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
20007e2c:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
20007e30:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
20007e34:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
20007e38:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
20007e3c:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
20007e40:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
20007e44:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
20007e48:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
20007e4c:	ffffeeef 			; <UNDEFINED> instruction: 0xffffeeef
20007e50:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
20007e54:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
20007e58:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
20007e5c:	ffffec6f 			; <UNDEFINED> instruction: 0xffffec6f
20007e60:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
20007e64:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
20007e68:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
20007e6c:	ffffeaaf 			; <UNDEFINED> instruction: 0xffffeaaf
20007e70:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
20007e74:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
20007e78:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
20007e7c:	fffff29f 			; <UNDEFINED> instruction: 0xfffff29f
20007e80:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
20007e84:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
20007e88:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
20007e8c:	ffffec6f 			; <UNDEFINED> instruction: 0xffffec6f
20007e90:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
20007e94:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
20007e98:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
20007e9c:	ffffe00f 			; <UNDEFINED> instruction: 0xffffe00f
20007ea0:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
20007ea4:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
20007ea8:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
20007eac:	ffffe7cf 			; <UNDEFINED> instruction: 0xffffe7cf
20007eb0:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
20007eb4:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
20007eb8:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
20007ebc:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
20007ec0:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
20007ec4:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
20007ec8:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
20007ecc:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
20007ed0:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
20007ed4:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
20007ed8:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
20007edc:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
20007ee0:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
20007ee4:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
20007ee8:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
20007eec:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
20007ef0:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
20007ef4:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
20007ef8:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
20007efc:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
20007f00:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
20007f04:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
20007f08:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
20007f0c:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
20007f10:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
20007f14:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
20007f18:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
20007f1c:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
20007f20:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
20007f24:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
20007f28:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
20007f2c:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
20007f30:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
20007f34:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
20007f38:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
20007f3c:	f7fbffff 			; <UNDEFINED> instruction: 0xf7fbffff
20007f40:	7fbfdfef 	svcvc	0x00bfdfef
20007f44:	fbfdfeff 	blx	1ff87b4a <startup-0x784b6>
20007f48:	ffff7fff 			; <UNDEFINED> instruction: 0xffff7fff
20007f4c:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
20007f50:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
20007f54:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
20007f58:	feffdfef 	cdp2	15, 15, cr13, cr15, cr15, {7}
20007f5c:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
20007f60:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
20007f64:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
20007f68:	feffdfef 	cdp2	15, 15, cr13, cr15, cr15, {7}
20007f6c:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
20007f70:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
20007f74:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
20007f78:	feffdfef 	cdp2	15, 15, cr13, cr15, cr15, {7}
20007f7c:	00000fff 	strdeq	r0, [r0], -pc	; <UNPREDICTABLE>
	...
20007f88:	fe0050e8 	cdp2	0, 0, cr5, cr0, cr8, {7}
20007f8c:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
20007f90:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
20007f94:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
20007f98:	ffff5fef 			; <UNDEFINED> instruction: 0xffff5fef
20007f9c:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
20007fa0:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
20007fa4:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
20007fa8:	ffff502f 			; <UNDEFINED> instruction: 0xffff502f
20007fac:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
20007fb0:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
20007fb4:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
20007fb8:	ffff502f 			; <UNDEFINED> instruction: 0xffff502f
20007fbc:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
20007fc0:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
20007fc4:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
20007fc8:	ffff5fef 			; <UNDEFINED> instruction: 0xffff5fef
20007fcc:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
20007fd0:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
20007fd4:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
20007fd8:	ffff50ef 			; <UNDEFINED> instruction: 0xffff50ef
20007fdc:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
20007fe0:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
20007fe4:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
20007fe8:	ec0d5fef 	stc	15, cr5, [sp], {239}	; 0xef
20007fec:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
20007ff0:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
20007ff4:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
20007ff8:	f003502f 			; <UNDEFINED> instruction: 0xf003502f
20007ffc:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
20008000:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
20008004:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
20008008:	d3fb502f 	mvnsle	r5, #47	; 0x2f
2000800c:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
20008010:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
20008014:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
20008018:	d00b5fef 	andle	r5, fp, pc, ror #31
2000801c:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
20008020:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
20008024:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
20008028:	d00b50ef 	andle	r5, fp, pc, ror #1
2000802c:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
20008030:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
20008034:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
20008038:	d00b5fef 	andle	r5, fp, pc, ror #31
2000803c:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
20008040:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
20008044:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
20008048:	d00b502f 	andle	r5, fp, pc, lsr #32
2000804c:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
20008050:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
20008054:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
20008058:	d00b502f 	andle	r5, fp, pc, lsr #32
2000805c:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
20008060:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
20008064:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
20008068:	d00b5fef 	andle	r5, fp, pc, ror #31
2000806c:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
20008070:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
20008074:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
20008078:	d00b50ef 	andle	r5, fp, pc, ror #1
2000807c:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
20008080:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
20008084:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
20008088:	d00b5eef 	andle	r5, fp, pc, ror #29
2000808c:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
20008090:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
20008094:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
20008098:	d00b502f 	andle	r5, fp, pc, lsr #32
2000809c:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
200080a0:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
200080a4:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
200080a8:	d00b502f 	andle	r5, fp, pc, lsr #32
200080ac:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
200080b0:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
200080b4:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
200080b8:	d0035fef 	andle	r5, r3, pc, ror #31
200080bc:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
200080c0:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
200080c4:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
200080c8:	cffd50ef 	svcgt	0x00fd50ef
200080cc:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
200080d0:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
200080d4:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
200080d8:	e03f5fef 	eors	r5, pc, pc, ror #31
200080dc:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
200080e0:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
200080e4:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
200080e8:	ffff502f 			; <UNDEFINED> instruction: 0xffff502f
200080ec:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
200080f0:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
200080f4:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
200080f8:	ffff502f 			; <UNDEFINED> instruction: 0xffff502f
200080fc:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
20008100:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
20008104:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
20008108:	ffff5fef 			; <UNDEFINED> instruction: 0xffff5fef
2000810c:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
20008110:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
20008114:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
20008118:	ffff50ef 			; <UNDEFINED> instruction: 0xffff50ef
2000811c:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
20008120:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
20008124:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
20008128:	ffff5fef 			; <UNDEFINED> instruction: 0xffff5fef
2000812c:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
20008130:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
20008134:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
20008138:	ffff7e6f 			; <UNDEFINED> instruction: 0xffff7e6f
2000813c:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
20008140:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
20008144:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
20008148:	ffff7e6f 			; <UNDEFINED> instruction: 0xffff7e6f
2000814c:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
20008150:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
20008154:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
20008158:	ffff7e7f 			; <UNDEFINED> instruction: 0xffff7e7f
2000815c:	f7fbfdfe 			; <UNDEFINED> instruction: 0xf7fbfdfe
20008160:	7fbfdfef 	svcvc	0x00bfdfef
20008164:	fbfdfeff 	blx	1ff87d6a <startup-0x78296>
20008168:	bfbfeff7 	svclt	0x00bfeff7
2000816c:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
20008170:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
20008174:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
20008178:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
2000817c:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
20008180:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
20008184:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
20008188:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
2000818c:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
20008190:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
20008194:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
20008198:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
2000819c:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
200081a0:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
200081a4:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
200081a8:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
200081ac:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
200081b0:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
200081b4:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
200081b8:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
200081bc:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
200081c0:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
200081c4:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
200081c8:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
200081cc:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
200081d0:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
200081d4:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
200081d8:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
200081dc:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
200081e0:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
200081e4:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
200081e8:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff

200081ec <indoors2_gray_bits>:
	...
2000824c:	00001110 	andeq	r1, r0, r0, lsl r1
	...
2000825c:	00001090 	muleq	r0, r0, r0
	...
2000828c:	00000390 	muleq	r0, r0, r3
	...
2000829c:	00001340 	andeq	r1, r0, r0, asr #6
	...
200082ac:	00000830 	andeq	r0, r0, r0, lsr r8
	...
2000833c:	08040000 	stmdaeq	r4, {}	; <UNPREDICTABLE>
20008340:	80402010 	subhi	r2, r0, r0, lsl r0
20008344:	04020100 	streq	r0, [r2], #-256	; 0xffffff00
20008348:	00008000 	andeq	r8, r0, r0
	...
20008358:	01000000 	mrseq	r0, (UNDEF: 0)
	...
20008368:	01000000 	mrseq	r0, (UNDEF: 0)
	...
20008378:	01000000 	mrseq	r0, (UNDEF: 0)
2000837c:	fffff000 			; <UNDEFINED> instruction: 0xfffff000
20008380:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
20008384:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
20008388:	01ff8007 	mvnseq	r8, r7
	...
20008398:	00008000 	andeq	r8, r0, r0
	...
200083a8:	00008180 	andeq	r8, r0, r0, lsl #3
	...
200083b8:	00008180 	andeq	r8, r0, r0, lsl #3
	...
200083c8:	00008000 	andeq	r8, r0, r0
	...
200083d8:	00008000 	andeq	r8, r0, r0
	...
200083e8:	00008000 	andeq	r8, r0, r0
	...
200083f8:	00008180 	andeq	r8, r0, r0, lsl #3
	...
20008408:	20008180 	andcs	r8, r0, r0, lsl #3
	...
20008418:	20808000 	addcs	r8, r0, r0
	...
20008428:	20c08100 	sbccs	r8, r0, r0, lsl #2
	...
20008438:	21e08000 	mvncs	r8, r0
	...
20008448:	2bf08180 	blcs	1fc28a50 <startup-0x3d75b0>
	...
20008458:	25c08180 	strbcs	r8, [r0, #384]	; 0x180
	...
20008468:	29e08000 	stmibcs	r0!, {pc}^
	...
20008478:	2bc08100 	blcs	1f028880 <startup-0xfd7780>
	...
20008488:	20c08110 	sbccs	r8, r0, r0, lsl r1
	...
20008498:	28e0a190 	stmiacs	r0!, {r4, r7, r8, sp, pc}^
	...
200084a8:	2bf08180 	blcs	1fc28ab0 <startup-0x3d7550>
	...
200084b8:	28008000 	stmdacs	r0, {pc}
	...
200084c8:	3000a010 	andcc	sl, r0, r0, lsl r0
	...
200084d8:	1fc0a000 	svcne	0x00c0a000
	...
200084e8:	0000a180 	andeq	sl, r0, r0, lsl #3
	...
200084f8:	00008190 	muleq	r0, r0, r1
	...
20008508:	00008010 	andeq	r8, r0, r0, lsl r0
	...
20008518:	00008110 	andeq	r8, r0, r0, lsl r1
	...
20008528:	0000a010 	andeq	sl, r0, r0, lsl r0
	...
20008538:	00008190 	muleq	r0, r0, r1
	...
20008548:	00008190 	muleq	r0, r0, r1
	...
20008558:	00008180 	andeq	r8, r0, r0, lsl #3
2000855c:	08040201 	stmdaeq	r4, {r0, r9}
20008560:	80402010 	subhi	r2, r0, r0, lsl r0
20008564:	04020100 	streq	r0, [r2], #-256	; 0xffffff00
20008568:	40401008 	submi	r1, r0, r8
	...

200085ec <indoors2_light_bits>:
	...
2000865c:	00000300 	andeq	r0, r0, r0, lsl #6
	...
2000866c:	00001110 	andeq	r1, r0, r0, lsl r1
	...
2000867c:	00000100 	andeq	r0, r0, r0, lsl #2
	...
2000868c:	00001000 	andeq	r1, r0, r0
	...
2000869c:	00000cb0 			; <UNDEFINED> instruction: 0x00000cb0
	...
200086ac:	00001000 	andeq	r1, r0, r0
	...
20008758:	00002010 	andeq	r2, r0, r0, lsl r0
	...
20008768:	00002010 	andeq	r2, r0, r0, lsl r0
	...
20008778:	00002010 	andeq	r2, r0, r0, lsl r0
	...
20008788:	00002f10 	andeq	r2, r0, r0, lsl pc
	...
20008798:	00002010 	andeq	r2, r0, r0, lsl r0
	...
200087a8:	00002010 	andeq	r2, r0, r0, lsl r0
	...
200087b8:	00002010 	andeq	r2, r0, r0, lsl r0
	...
200087c8:	00002010 	andeq	r2, r0, r0, lsl r0
	...
200087d8:	00002f10 	andeq	r2, r0, r0, lsl pc
	...
200087e8:	00002010 	andeq	r2, r0, r0, lsl r0
	...
200087f8:	00002010 	andeq	r2, r0, r0, lsl r0
	...
20008808:	00002010 	andeq	r2, r0, r0, lsl r0
	...
20008818:	03702010 	cmneq	r0, #16
	...
20008828:	03302e10 	teqeq	r0, #16, 28	; 0x100
	...
20008838:	02102010 	andseq	r2, r0, #16
	...
20008848:	00002010 	andeq	r2, r0, r0, lsl r0
	...
20008858:	02302010 	eorseq	r2, r0, #16
	...
20008868:	02102010 	andseq	r2, r0, #16
	...
20008878:	00302e10 	eorseq	r2, r0, r0, lsl lr
	...
20008888:	03302000 	teqeq	r0, #0
	...
20008898:	03100000 	tsteq	r0, #0
	...
200088a8:	00002010 	andeq	r2, r0, r0, lsl r0
	...
200088b8:	00002010 	andeq	r2, r0, r0, lsl r0
	...
200088c8:	00000f00 	andeq	r0, r0, r0, lsl #30
	...
200088d8:	00000010 	andeq	r0, r0, r0, lsl r0
	...
200088e8:	00000010 	andeq	r0, r0, r0, lsl r0
	...
200088f8:	00002000 	andeq	r2, r0, r0
	...
20008908:	00002000 	andeq	r2, r0, r0
	...
20008918:	00002e00 	andeq	r2, r0, r0, lsl #28
	...

200089ec <firstTime.4040>:
200089ec:	00000001 	andeq	r0, r0, r1
200089f0:	00202020 	eoreq	r2, r0, r0, lsr #32
200089f4:	41524b2a 	cmpmi	r2, sl, lsr #22
200089f8:	2a202a21 	bcs	20813284 <firstTime.4040+0x80a898>
200089fc:	2141524b 	cmpcs	r1, fp, asr #4
20008a00:	0000002a 	andeq	r0, r0, sl, lsr #32
20008a04:	734c4944 	movtvc	r4, #51524	; 0xc944
20008a08:	7469772d 	strbtvc	r7, [r9], #-1837	; 0xfffff8d3
20008a0c:	73656863 	cmnvc	r5, #6488064	; 0x630000
20008a10:	76616820 	strbtvc	r6, [r1], -r0, lsr #16
20008a14:	00000065 	andeq	r0, r0, r5, rrx
20008a18:	20726f46 	rsbscs	r6, r2, r6, asr #30
20008a1c:	746e6563 	strbtvc	r6, [lr], #-1379	; 0xfffffa9d
20008a20:	65697275 	strbvs	r7, [r9, #-629]!	; 0xfffffd8b
20008a24:	68742073 	ldmdavs	r4!, {r0, r1, r4, r5, r6, sp}^
20008a28:	00000065 	andeq	r0, r0, r5, rrx
20008a2c:	20202020 	eorcs	r2, r0, r0, lsr #32
20008a30:	00000000 	andeq	r0, r0, r0
20008a34:	6c696f63 	stclvs	15, cr6, [r9], #-396	; 0xfffffe74
20008a38:	69206465 	stmdbvs	r0!, {r0, r2, r5, r6, sl, sp, lr}
20008a3c:	6566206e 	strbvs	r2, [r6, #-110]!	; 0xffffff92
20008a40:	002c7261 	eoreq	r7, ip, r1, ror #4
20008a44:	74616874 	strbtvc	r6, [r1], #-2164	; 0xfffff78c
20008a48:	44206120 	strtmi	r6, [r0], #-288	; 0xfffffee0
20008a4c:	2d735049 	ldclcs	0, cr5, [r3, #-292]!	; 0xfffffedc
20008a50:	63746977 	cmnvs	r4, #1949696	; 0x1dc000
20008a54:	00000068 	andeq	r0, r0, r8, rrx
20008a58:	6e656877 	mcrvs	8, 3, r6, cr5, cr7, {3}
20008a5c:	72657665 	rsbvc	r7, r5, #105906176	; 0x6500000
20008a60:	65687420 	strbvs	r7, [r8, #-1056]!	; 0xfffffbe0
20008a64:	65682079 	strbvs	r2, [r8, #-121]!	; 0xffffff87
20008a68:	00007261 	andeq	r7, r0, r1, ror #4
20008a6c:	6e207369 	cdpvs	3, 2, cr7, cr0, cr9, {3}
20008a70:	2e726165 	rpwcssz	f6, f2, f5
20008a74:	00000000 	andeq	r0, r0, r0
20008a78:	70727573 	rsbsvc	r7, r2, r3, ror r5
20008a7c:	69736972 	ldmdbvs	r3!, {r1, r4, r5, r6, r8, fp, sp, lr}^
20008a80:	202c676e 	eorcs	r6, ip, lr, ror #14
20008a84:	646e6966 	strbtvs	r6, [lr], #-2406	; 0xfffff69a
20008a88:	00676e69 	rsbeq	r6, r7, r9, ror #28
20008a8c:	69206f53 	stmdbvs	r0!, {r0, r1, r4, r6, r8, r9, sl, fp, sp, lr}
20008a90:	73692074 	cmnvc	r9, #116	; 0x74
20008a94:	69757120 	ldmdbvs	r5!, {r5, r8, ip, sp, lr}^
20008a98:	00006574 	andeq	r6, r0, r4, ror r5
20008a9c:	20756f79 	rsbscs	r6, r5, r9, ror pc
20008aa0:	65726568 	ldrbvs	r6, [r2, #-1384]!	; 0xfffffa98
20008aa4:	0000002c 	andeq	r0, r0, ip, lsr #32
20008aa8:	72696568 	rsbvc	r6, r9, #104, 10	; 0x1a000000
20008aac:	206f7420 	rsbcs	r7, pc, r0, lsr #8
20008ab0:	676e696b 	strbvs	r6, [lr, -fp, ror #18]!
20008ab4:	61654c20 	cmnvs	r5, r0, lsr #24
20008ab8:	00002e72 	andeq	r2, r0, r2, ror lr
20008abc:	65657571 	strbvs	r7, [r5, #-1393]!	; 0xfffffa8f
20008ac0:	6144206e 	cmpvs	r4, lr, rrx
20008ac4:	206f6666 	rsbcs	r6, pc, r6, ror #12
20008ac8:	4420666f 	strtmi	r6, [r0], #-1647	; 0xfffff991
20008acc:	2c734c49 	ldclcs	12, cr4, [r3], #-292	; 0xfffffedc
20008ad0:	00000000 	andeq	r0, r0, r0
20008ad4:	706d6574 	rsbvc	r6, sp, r4, ror r5
20008ad8:	2c646574 	cfstr64cs	mvdx6, [r4], #-464	; 0xfffffe30
20008adc:	206f7420 	rsbcs	r7, pc, r0, lsr #8
20008ae0:	746f6f6c 	strbtvc	r6, [pc], #-3948	; 20008ae8 <firstTime.4040+0xfc>
20008ae4:	00000000 	andeq	r0, r0, r0
20008ae8:	20747542 	rsbscs	r7, r4, r2, asr #10
20008aec:	6279616d 	rsbsvs	r6, r9, #1073741851	; 0x4000001b
20008af0:	6f792065 	svcvs	0x00792065
20008af4:	65722775 	ldrbvs	r2, [r2, #-1909]!	; 0xfffff88b
20008af8:	00000000 	andeq	r0, r0, r0
20008afc:	6d6f7266 	sfmvs	f7, 2, [pc, #-408]!	; 2000896c <indoors2_light_bits+0x380>
20008b00:	65687420 	strbvs	r7, [r8, #-1056]!	; 0xfffffbe0
20008b04:	63697220 	cmnvs	r9, #32, 4
20008b08:	2c736568 	cfldr64cs	mvdx6, [r3], #-416	; 0xfffffe60
20008b0c:	00000000 	andeq	r0, r0, r0
20008b10:	6b636977 	blvs	218e30f4 <firstTime.4040+0x18da708>
20008b14:	44206465 	strtmi	r6, [r0], #-1125	; 0xfffffb9b
20008b18:	2d735049 	ldclcs	0, cr5, [r3, #-292]!	; 0xfffffedc
20008b1c:	63746977 	cmnvs	r4, #1949696	; 0x1dc000
20008b20:	2e736568 	cdpcs	5, 7, cr6, cr3, cr8, {3}
20008b24:	00000000 	andeq	r0, r0, r0
20008b28:	65727573 	ldrbvs	r7, [r2, #-1395]!	; 0xfffffa8d
20008b2c:	79622064 	stmdbvc	r2!, {r2, r5, r6, sp}^
20008b30:	00000000 	andeq	r0, r0, r0
20008b34:	67206f73 			; <UNDEFINED> instruction: 0x67206f73
20008b38:	70706972 	rsbsvc	r6, r0, r2, ror r9
20008b3c:	20796c69 	rsbscs	r6, r9, r9, ror #24
20008b40:	61657274 	smcvs	22308	; 0x5724
20008b44:	0000002d 	andeq	r0, r0, sp, lsr #32
20008b48:	6572202d 	ldrbvs	r2, [r2, #-45]!	; 0xffffffd3
20008b4c:	20746573 	rsbscs	r6, r4, r3, ror r5
20008b50:	20656874 	rsbcs	r6, r5, r4, ror r8
20008b54:	74697773 	strbtvc	r7, [r9], #-1907	; 0xfffff88d
20008b58:	00216863 	eoreq	r6, r1, r3, ror #16
20008b5c:	65746e45 	ldrbvs	r6, [r4, #-3653]!	; 0xfffff1bb
20008b60:	62202c72 	eorvs	r2, r0, #29184	; 0x7200
20008b64:	65766172 	ldrbvs	r6, [r6, #-370]!	; 0xfffffe8e
20008b68:	74697720 	strbtvc	r7, [r9], #-1824	; 0xfffff8e0
20008b6c:	002c6863 	eoreq	r6, ip, r3, ror #16
20008b70:	20001de0 	andcs	r1, r0, r0, ror #27
20008b74:	20001dea 	andcs	r1, r0, sl, ror #27
20008b78:	20001df4 	strdcs	r1, [r0], -r4
20008b7c:	20001dfe 	strdcs	r1, [r0], -lr
20008b80:	20001e08 	andcs	r1, r0, r8, lsl #28
20008b84:	20001e12 	andcs	r1, r0, r2, lsl lr
20008b88:	20001e1c 	andcs	r1, r0, ip, lsl lr
20008b8c:	20001e26 	andcs	r1, r0, r6, lsr #28
20008b90:	20202020 	eorcs	r2, r0, r0, lsr #32
20008b94:	20202020 	eorcs	r2, r0, r0, lsr #32
20008b98:	20202020 	eorcs	r2, r0, r0, lsr #32
20008b9c:	20202020 	eorcs	r2, r0, r0, lsr #32
20008ba0:	20202020 	eorcs	r2, r0, r0, lsr #32
20008ba4:	00000000 	andeq	r0, r0, r0
20008ba8:	61666c41 	cmnvs	r6, r1, asr #24
20008bac:	656d756e 	strbvs	r7, [sp, #-1390]!	; 0xfffffa92
20008bb0:	6b736972 	blvs	21ce3180 <firstTime.4040+0x1cda794>
20008bb4:	00000000 	andeq	r0, r0, r0
20008bb8:	64726168 	ldrbtvs	r6, [r2], #-360	; 0xfffffe98
20008bbc:	a4c3a5c3 	strbge	sl, [r3], #1475	; 0x5c3
20008bc0:	7261b6c3 	rsbvc	fp, r1, #204472320	; 0xc300000
20008bc4:	75732065 	ldrbvc	r2, [r3, #-101]!	; 0xffffff9b
20008bc8:	00726567 	rsbseq	r6, r2, r7, ror #10

Disassembly of section .debug_info:

00000000 <.debug_info>:
       0:	000008ab 	andeq	r0, r0, fp, lsr #17
       4:	00000004 	andeq	r0, r0, r4
       8:	01040000 	mrseq	r0, (UNDEF: 4)
       c:	00000077 	andeq	r0, r0, r7, ror r0
      10:	0004720c 	andeq	r7, r4, ip, lsl #4
	...
      20:	020c0200 	andeq	r0, ip, #0, 4
      24:	00004e05 	andeq	r4, r0, r5, lsl #28
      28:	02e40300 	rsceq	r0, r4, #0, 6
      2c:	07020000 	streq	r0, [r2, -r0]
      30:	0000004e 	andeq	r0, r0, lr, asr #32
      34:	06070300 	streq	r0, [r7], -r0, lsl #6
      38:	08020000 	stmdaeq	r2, {}	; <UNPREDICTABLE>
      3c:	0000004e 	andeq	r0, r0, lr, asr #32
      40:	10170304 	andsne	r0, r7, r4, lsl #6
      44:	09020000 	stmdbeq	r2, {}	; <UNPREDICTABLE>
      48:	00000055 	andeq	r0, r0, r5, asr r0
      4c:	04040008 	streq	r0, [r4], #-8
      50:	00030807 	andeq	r0, r3, r7, lsl #16
      54:	5b040500 	blpl	10145c <startup-0x1fefeba4>
      58:	04000000 	streq	r0, [r0], #-0
      5c:	041f0801 	ldreq	r0, [pc], #-2049	; 64 <startup-0x1fffff9c>
      60:	69060000 	stmdbvs	r6, {}	; <UNPREDICTABLE>
      64:	02000011 	andeq	r0, r0, #17
      68:	0000210a 	andeq	r2, r0, sl, lsl #2
      6c:	00160700 	andseq	r0, r6, r0, lsl #14
      70:	030c0000 	movweq	r0, #49152	; 0xc000
      74:	00009e06 	andeq	r9, r0, r6, lsl #28
      78:	04f50300 	ldrbteq	r0, [r5], #768	; 0x300
      7c:	07030000 	streq	r0, [r3, -r0]
      80:	0000009e 	muleq	r0, lr, r0
      84:	001d0300 	andseq	r0, sp, r0, lsl #6
      88:	08030000 	stmdaeq	r3, {}	; <UNPREDICTABLE>
      8c:	0000009e 	muleq	r0, lr, r0
      90:	00120304 	andseq	r0, r2, r4, lsl #6
      94:	09030000 	stmdbeq	r3, {}	; <UNPREDICTABLE>
      98:	0000009e 	muleq	r0, lr, r0
      9c:	04050008 	streq	r0, [r5], #-8
      a0:	00000062 	andeq	r0, r0, r2, rrx
      a4:	000c3606 	andeq	r3, ip, r6, lsl #12
      a8:	6d0a0300 	stcvs	3, cr0, [sl, #-0]
      ac:	07000000 	streq	r0, [r0, -r0]
      b0:	000005dc 	ldrdeq	r0, [r0], -ip
      b4:	28060424 	stmdacs	r6, {r2, r5, sl}
      b8:	03000001 	movweq	r0, #1
      bc:	000003bc 			; <UNDEFINED> instruction: 0x000003bc
      c0:	01280704 			; <UNDEFINED> instruction: 0x01280704
      c4:	03000000 	movweq	r0, #0
      c8:	000005e8 	andeq	r0, r0, r8, ror #11
      cc:	012e0804 			; <UNDEFINED> instruction: 0x012e0804
      d0:	03040000 	movweq	r0, #16384	; 0x4000
      d4:	00000560 	andeq	r0, r0, r0, ror #10
      d8:	012e0904 			; <UNDEFINED> instruction: 0x012e0904
      dc:	03080000 	movweq	r0, #32768	; 0x8000
      e0:	0000057b 	andeq	r0, r0, fp, ror r5
      e4:	01460c04 	cmpeq	r6, r4, lsl #24
      e8:	030c0000 	movweq	r0, #49152	; 0xc000
      ec:	000002dd 	ldrdeq	r0, [r0], -sp
      f0:	01460d04 	cmpeq	r6, r4, lsl #26
      f4:	03100000 	tsteq	r0, #0
      f8:	000003ce 	andeq	r0, r0, lr, asr #7
      fc:	012e1004 			; <UNDEFINED> instruction: 0x012e1004
     100:	03140000 	tsteq	r4, #0
     104:	00000048 	andeq	r0, r0, r8, asr #32
     108:	012e1104 			; <UNDEFINED> instruction: 0x012e1104
     10c:	03180000 	tsteq	r8, #0
     110:	0000034d 	andeq	r0, r0, sp, asr #6
     114:	012e1204 			; <UNDEFINED> instruction: 0x012e1204
     118:	031c0000 	tsteq	ip, #0
     11c:	0000035d 	andeq	r0, r0, sp, asr r3
     120:	012e1304 			; <UNDEFINED> instruction: 0x012e1304
     124:	00200000 	eoreq	r0, r0, r0
     128:	00a40405 	adceq	r0, r4, r5, lsl #8
     12c:	04080000 	streq	r0, [r8], #-0
     130:	746e6905 	strbtvc	r6, [lr], #-2309	; 0xfffff6fb
     134:	01400900 	cmpeq	r0, r0, lsl #18
     138:	400a0000 	andmi	r0, sl, r0
     13c:	00000001 	andeq	r0, r0, r1
     140:	00af0405 	adceq	r0, pc, r5, lsl #8
     144:	04050000 	streq	r0, [r5], #-0
     148:	00000135 	andeq	r0, r0, r5, lsr r1
     14c:	0005dd06 	andeq	sp, r5, r6, lsl #26
     150:	af150400 	svcge	0x00150400
     154:	0b000000 	bleq	15c <startup-0x1ffffea4>
     158:	00000162 	andeq	r0, r0, r2, ror #2
     15c:	00000162 	andeq	r0, r0, r2, ror #2
     160:	0405000c 	streq	r0, [r5], #-12
     164:	0000014c 	andeq	r0, r0, ip, asr #2
     168:	0004a20d 	andeq	sl, r4, sp, lsl #4
     16c:	571c0400 	ldrpl	r0, [ip, -r0, lsl #8]
     170:	0d000001 	stceq	0, cr0, [r0, #-4]
     174:	00000393 	muleq	r0, r3, r3
     178:	012e1d04 			; <UNDEFINED> instruction: 0x012e1d04
     17c:	a6060000 	strge	r0, [r6], -r0
     180:	05000005 	streq	r0, [r0, #-5]
     184:	00005b24 	andeq	r5, r0, r4, lsr #22
     188:	017e0b00 	cmneq	lr, r0, lsl #22
     18c:	019a0000 	orrseq	r0, sl, r0
     190:	9a0e0000 	bls	380198 <startup-0x1fc7fe68>
     194:	ff000001 			; <UNDEFINED> instruction: 0xff000001
     198:	04040003 	streq	r0, [r4], #-3
     19c:	00037a07 	andeq	r7, r3, r7, lsl #20
     1a0:	0f4d0d00 	svceq	0x004d0d00
     1a4:	2b050000 	blcs	1401ac <startup-0x1febfe54>
     1a8:	00000189 	andeq	r0, r0, r9, lsl #3
     1ac:	0002000d 	andeq	r0, r2, sp
     1b0:	892c0500 	stmdbhi	ip!, {r8, sl}
     1b4:	0d000001 	stceq	0, cr0, [r0, #-4]
     1b8:	0000042d 	andeq	r0, r0, sp, lsr #8
     1bc:	01892d05 	orreq	r2, r9, r5, lsl #26
     1c0:	ea0d0000 	b	3401c8 <startup-0x1fcbfe38>
     1c4:	05000002 	streq	r0, [r0, #-2]
     1c8:	0001892e 	andeq	r8, r1, lr, lsr #18
     1cc:	027a0d00 	rsbseq	r0, sl, #0, 26
     1d0:	2f050000 	svccs	0x00050000
     1d4:	00000189 	andeq	r0, r0, r9, lsl #3
     1d8:	0005be0d 	andeq	fp, r5, sp, lsl #28
     1dc:	89300500 	ldmdbhi	r0!, {r8, sl}
     1e0:	0d000001 	stceq	0, cr0, [r0, #-4]
     1e4:	000005ae 	andeq	r0, r0, lr, lsr #11
     1e8:	01893105 	orreq	r3, r9, r5, lsl #2
     1ec:	5b0b0000 	blpl	2c01f4 <startup-0x1fd3fe0c>
     1f0:	fe000000 	cdp2	0, 0, cr0, cr0, cr0, {0}
     1f4:	0f000001 	svceq	0x00000001
     1f8:	0000019a 	muleq	r0, sl, r1
     1fc:	4b100077 	blmi	4003e0 <startup-0x1fbffc20>
     200:	06000002 	streq	r0, [r0], -r2
     204:	0001ee03 	andeq	lr, r1, r3, lsl #28
     208:	48030500 	stmdami	r3, {r8, sl}
     20c:	11200052 	qsubne	r0, r2, r0
     210:	00000444 	andeq	r0, r0, r4, asr #8
     214:	01ee0307 	mvneq	r0, r7, lsl #6
     218:	03050000 	movweq	r0, #20480	; 0x5000
     21c:	200052c0 	andcs	r5, r0, r0, asr #5
     220:	00050011 	andeq	r0, r5, r1, lsl r0
     224:	ee030800 	cdp	8, 0, cr0, cr3, cr0, {0}
     228:	05000001 	streq	r0, [r0, #-1]
     22c:	00533803 	subseq	r3, r3, r3, lsl #16
     230:	005b0b20 	subseq	r0, fp, r0, lsr #22
     234:	02420000 	subeq	r0, r2, #0
     238:	9a0e0000 	bls	380240 <startup-0x1fc7fdc0>
     23c:	17000001 	strne	r0, [r0, -r1]
     240:	30110001 	andscc	r0, r1, r1
     244:	09000001 	stmdbeq	r0, {r0}
     248:	00023103 	andeq	r3, r2, r3, lsl #2
     24c:	b0030500 	andlt	r0, r3, r0, lsl #10
     250:	11200053 	qsubne	r0, r3, r0
     254:	000003a0 	andeq	r0, r0, r0, lsr #7
     258:	0231030a 	eorseq	r0, r1, #671088640	; 0x28000000
     25c:	03050000 	movweq	r0, #20480	; 0x5000
     260:	200054c8 	andcs	r5, r0, r8, asr #9
     264:	00033d11 	andeq	r3, r3, r1, lsl sp
     268:	31030b00 	tstcc	r3, r0, lsl #22
     26c:	05000002 	streq	r0, [r0, #-2]
     270:	0055e003 	subseq	lr, r5, r3
     274:	005b0b20 	subseq	r0, fp, r0, lsr #22
     278:	02860000 	addeq	r0, r6, #0
     27c:	9a0e0000 	bls	380284 <startup-0x1fc7fd7c>
     280:	ff000001 			; <UNDEFINED> instruction: 0xff000001
     284:	57110003 	ldrpl	r0, [r1, -r3]
     288:	0c000004 	stceq	0, cr0, [r0], {4}
     28c:	00027503 	andeq	r7, r2, r3, lsl #10
     290:	f8030500 			; <UNDEFINED> instruction: 0xf8030500
     294:	11200056 	qsubne	r0, r6, r0
     298:	00000027 	andeq	r0, r0, r7, lsr #32
     29c:	0275030d 	rsbseq	r0, r5, #872415232	; 0x34000000
     2a0:	03050000 	movweq	r0, #20480	; 0x5000
     2a4:	20005af8 	strdcs	r5, [r0], -r8
     2a8:	00000011 	andeq	r0, r0, r1, lsl r0
     2ac:	75030e00 	strvc	r0, [r3, #-3584]	; 0xfffff200
     2b0:	05000002 	streq	r0, [r0, #-2]
     2b4:	005ef803 	subseq	pc, lr, r3, lsl #16
     2b8:	005b0b20 	subseq	r0, fp, r0, lsr #22
     2bc:	02c90000 	sbceq	r0, r9, #0
     2c0:	9a0f0000 	bls	3c02c8 <startup-0x1fc3fd38>
     2c4:	d1000001 	tstle	r0, r1
     2c8:	01821100 	orreq	r1, r2, r0, lsl #2
     2cc:	030f0000 	movweq	r0, #61440	; 0xf000
     2d0:	000002b9 			; <UNDEFINED> instruction: 0x000002b9
     2d4:	62f80305 	rscsvs	r0, r8, #335544320	; 0x14000000
     2d8:	83112000 	tsthi	r1, #0
     2dc:	10000003 	andne	r0, r0, r3
     2e0:	0002b903 	andeq	fp, r2, r3, lsl #18
     2e4:	cc030500 	cfstr32gt	mvfx0, [r3], {-0}
     2e8:	11200063 			; <UNDEFINED> instruction: 0x11200063
     2ec:	000001d8 	ldrdeq	r0, [r0], -r8
     2f0:	02b90311 	adcseq	r0, r9, #1140850688	; 0x44000000
     2f4:	03050000 	movweq	r0, #20480	; 0x5000
     2f8:	200064a0 	andcs	r6, r0, r0, lsr #9
     2fc:	00059c07 	andeq	r9, r5, r7, lsl #24
     300:	04121400 	ldreq	r1, [r2], #-1024	; 0xfffffc00
     304:	00000345 	andeq	r0, r0, r5, asr #6
     308:	0013dc03 	andseq	sp, r3, r3, lsl #24
     30c:	45051200 	strmi	r1, [r5, #-512]	; 0xfffffe00
     310:	00000003 	andeq	r0, r0, r3
     314:	00023e03 	andeq	r3, r2, r3, lsl #28
     318:	45061200 	strmi	r1, [r6, #-512]	; 0xfffffe00
     31c:	04000003 	streq	r0, [r0], #-3
     320:	00036703 	andeq	r6, r3, r3, lsl #14
     324:	2e081200 	cdpcs	2, 0, cr1, cr8, cr0, {0}
     328:	08000001 	stmdaeq	r0, {r0}
     32c:	00035703 	andeq	r5, r3, r3, lsl #14
     330:	2e091200 	cdpcs	2, 0, cr1, cr9, cr0, {0}
     334:	0c000001 	stceq	0, cr0, [r0], {1}
     338:	00024303 	andeq	r4, r2, r3, lsl #6
     33c:	680c1200 	stmdavs	ip, {r9, ip}
     340:	10000003 	andne	r0, r0, r3
     344:	4b040500 	blmi	10174c <startup-0x1fefe8b4>
     348:	04000003 	streq	r0, [r0], #-3
     34c:	04280801 	strteq	r0, [r8], #-2049	; 0xfffff7ff
     350:	62090000 	andvs	r0, r9, #0
     354:	0a000003 	beq	368 <startup-0x1ffffc98>
     358:	00000362 	andeq	r0, r0, r2, ror #6
     35c:	00012e0a 	andeq	r2, r1, sl, lsl #28
     360:	04050000 	streq	r0, [r5], #-0
     364:	000002fc 	strdeq	r0, [r0], -ip
     368:	03520405 	cmpeq	r2, #83886080	; 0x5000000
     36c:	9d060000 	stcls	0, cr0, [r6, #-0]
     370:	12000005 	andne	r0, r0, #5
     374:	0002fc0d 	andeq	pc, r2, sp, lsl #24
     378:	04ed1100 	strbteq	r1, [sp], #256	; 0x100
     37c:	03130000 	tsteq	r3, #0
     380:	00000275 	andeq	r0, r0, r5, ror r2
     384:	65740305 	ldrbvs	r0, [r4, #-773]!	; 0xfffffcfb
     388:	02042000 	andeq	r2, r4, #0
     38c:	00030207 	andeq	r0, r3, r7, lsl #4
     390:	052a1000 	streq	r1, [sl, #-0]!
     394:	24010000 	strcs	r0, [r1], #-0
     398:	0000012e 	andeq	r0, r0, lr, lsr #2
     39c:	2fc00305 	svccs	0x00c00305
     3a0:	0f102000 	svceq	0x00102000
     3a4:	01000001 	tsteq	r0, r1
     3a8:	00009e3c 	andeq	r9, r0, ip, lsr lr
     3ac:	08030500 	stmdaeq	r3, {r8, sl}
     3b0:	1020002f 	eorne	r0, r0, pc, lsr #32
     3b4:	00000175 	andeq	r0, r0, r5, ror r1
     3b8:	009e3d01 	addseq	r3, lr, r1, lsl #26
     3bc:	03050000 	movweq	r0, #20480	; 0x5000
     3c0:	20002fb4 			; <UNDEFINED> instruction: 0x20002fb4
     3c4:	0004b910 	andeq	fp, r4, r0, lsl r9
     3c8:	9e3e0100 	rsflse	f0, f6, f0
     3cc:	05000000 	streq	r0, [r0, #-0]
     3d0:	002fc803 	eoreq	ip, pc, r3, lsl #16
     3d4:	67621220 	strbvs	r1, [r2, -r0, lsr #4]!
     3d8:	9e3f0100 	rsflse	f0, f7, f0
     3dc:	05000000 	streq	r0, [r0, #-0]
     3e0:	002f5003 	eoreq	r5, pc, r3
     3e4:	05ed1020 	strbeq	r1, [sp, #32]!
     3e8:	42010000 	andmi	r0, r1, #0
     3ec:	0000009e 	muleq	r0, lr, r0
     3f0:	2f300305 	svccs	0x00300305
     3f4:	ae102000 	cdpge	0, 1, cr2, cr0, cr0, {0}
     3f8:	01000004 	tsteq	r0, r4
     3fc:	00009e43 	andeq	r9, r0, r3, asr #28
     400:	bc030500 	cfstr32lt	mvfx0, [r3], {-0}
     404:	1020002f 	eorne	r0, r0, pc, lsr #32
     408:	00000051 	andeq	r0, r0, r1, asr r0
     40c:	009e4401 	addseq	r4, lr, r1, lsl #8
     410:	03050000 	movweq	r0, #20480	; 0x5000
     414:	20002f6c 	andcs	r2, r0, ip, ror #30
     418:	00033210 	andeq	r3, r3, r0, lsl r2
     41c:	9e450100 	dvflss	f0, f5, f0
     420:	05000000 	streq	r0, [r0, #-0]
     424:	002fd803 	eoreq	sp, pc, r3, lsl #16
     428:	04c51020 	strbeq	r1, [r5], #32
     42c:	46010000 	strmi	r0, [r1], -r0
     430:	0000009e 	muleq	r0, lr, r0
     434:	2fa40305 	svccs	0x00a40305
     438:	dc102000 	ldcle	0, cr2, [r0], {-0}
     43c:	01000003 	tsteq	r0, r3
     440:	00009e47 	andeq	r9, r0, r7, asr #28
     444:	b8030500 	stmdalt	r3, {r8, sl}
     448:	1020002f 	eorne	r0, r0, pc, lsr #32
     44c:	00000548 	andeq	r0, r0, r8, asr #10
     450:	009e4801 	addseq	r4, lr, r1, lsl #16
     454:	03050000 	movweq	r0, #20480	; 0x5000
     458:	20002fc4 	andcs	r2, r0, r4, asr #31
     45c:	0001a910 	andeq	sl, r1, r0, lsl r9
     460:	9e490100 	dvflse	f0, f1, f0
     464:	05000000 	streq	r0, [r0, #-0]
     468:	002f8803 	eoreq	r8, pc, r3, lsl #16
     46c:	06131020 	ldreq	r1, [r3], -r0, lsr #32
     470:	4a010000 	bmi	40478 <startup-0x1ffbfb88>
     474:	0000009e 	muleq	r0, lr, r0
     478:	2f400305 	svccs	0x00400305
     47c:	26102000 	ldrcs	r2, [r0], -r0
     480:	01000003 	tsteq	r0, r3
     484:	0000624c 	andeq	r6, r0, ip, asr #4
     488:	34030500 	strcc	r0, [r3], #-1280	; 0xfffffb00
     48c:	1020002f 	eorne	r0, r0, pc, lsr #32
     490:	000001e9 	andeq	r0, r0, r9, ror #3
     494:	00624d01 	rsbeq	r4, r2, r1, lsl #26
     498:	03050000 	movweq	r0, #20480	; 0x5000
     49c:	20002f8c 	andcs	r2, r0, ip, lsl #31
     4a0:	00019310 	andeq	r9, r1, r0, lsl r3
     4a4:	624e0100 	subvs	r0, lr, #0, 2
     4a8:	05000000 	streq	r0, [r0, #-0]
     4ac:	002f5403 	eoreq	r5, pc, r3, lsl #8
     4b0:	01cb1020 	biceq	r1, fp, r0, lsr #32
     4b4:	50010000 	andpl	r0, r1, r0
     4b8:	00000062 	andeq	r0, r0, r2, rrx
     4bc:	2fcc0305 	svccs	0x00cc0305
     4c0:	67102000 	ldrvs	r2, [r0, -r0]
     4c4:	01000000 	mrseq	r0, (UNDEF: 0)
     4c8:	00006252 	andeq	r6, r0, r2, asr r2
     4cc:	0c030500 	cfstr32eq	mvfx0, [r3], {-0}
     4d0:	1020002f 	eorne	r0, r0, pc, lsr #32
     4d4:	00000401 	andeq	r0, r0, r1, lsl #8
     4d8:	00625301 	rsbeq	r5, r2, r1, lsl #6
     4dc:	03050000 	movweq	r0, #20480	; 0x5000
     4e0:	20002fa8 	andcs	r2, r0, r8, lsr #31
     4e4:	0002cd10 	andeq	ip, r2, r0, lsl sp
     4e8:	62540100 	subsvs	r0, r4, #0, 2
     4ec:	05000000 	streq	r0, [r0, #-0]
     4f0:	002f7c03 	eoreq	r7, pc, r3, lsl #24
     4f4:	04101020 	ldreq	r1, [r0], #-32	; 0xffffffe0
     4f8:	55010000 	strpl	r0, [r1, #-0]
     4fc:	00000062 	andeq	r0, r0, r2, rrx
     500:	2f440305 	svccs	0x00440305
     504:	8e102000 	cdphi	0, 1, cr2, cr0, cr0, {0}
     508:	01000005 	tsteq	r0, r5
     50c:	00006256 	andeq	r6, r0, r6, asr r2
     510:	24030500 	strcs	r0, [r3], #-1280	; 0xfffffb00
     514:	1020002f 	eorne	r0, r0, pc, lsr #32
     518:	0000056c 	andeq	r0, r0, ip, ror #10
     51c:	00625701 	rsbeq	r5, r2, r1, lsl #14
     520:	03050000 	movweq	r0, #20480	; 0x5000
     524:	20002f60 	andcs	r2, r0, r0, ror #30
     528:	0004de10 	andeq	sp, r4, r0, lsl lr
     52c:	62580100 	subsvs	r0, r8, #0, 2
     530:	05000000 	streq	r0, [r0, #-0]
     534:	002f9803 	eoreq	r9, pc, r3, lsl #16
     538:	03e71020 	mvneq	r1, #32
     53c:	59010000 	stmdbpl	r1, {}	; <UNPREDICTABLE>
     540:	00000062 	andeq	r0, r0, r2, rrx
     544:	2f180305 	svccs	0x00180305
     548:	cd102000 	ldcgt	0, cr2, [r0, #-0]
     54c:	01000005 	tsteq	r0, r5
     550:	0000625a 	andeq	r6, r0, sl, asr r2
     554:	70030500 	andvc	r0, r3, r0, lsl #10
     558:	1020002f 	eorne	r0, r0, pc, lsr #32
     55c:	00000367 	andeq	r0, r0, r7, ror #6
     560:	012e9001 			; <UNDEFINED> instruction: 0x012e9001
     564:	03050000 	movweq	r0, #20480	; 0x5000
     568:	20002ef4 	strdcs	r2, [r0], -r4
     56c:	0004cf10 	andeq	ip, r4, r0, lsl pc
     570:	2e910100 	fmlcss	f0, f1, f0
     574:	05000001 	streq	r0, [r0, #-1]
     578:	00697403 	rsbeq	r7, r9, r3, lsl #8
     57c:	060e1320 	streq	r1, [lr], -r0, lsr #6
     580:	92010000 	andls	r0, r1, #0
     584:	200001fc 	strdcs	r0, [r0], -ip
     588:	00000b04 	andeq	r0, r0, r4, lsl #22
     58c:	07da9c01 	ldrbeq	r9, [sl, r1, lsl #24]
     590:	6f110000 	svcvs	0x00110000
     594:	01000003 	tsteq	r0, r3
     598:	00014ca0 	andeq	r4, r1, r0, lsr #25
     59c:	4c910200 	lfmmi	f0, 4, [r1], {0}
     5a0:	00055311 	andeq	r5, r5, r1, lsl r3
     5a4:	a4a10100 	strtge	r0, [r1], #256	; 0x100
     5a8:	02000000 	andeq	r0, r0, #0
     5ac:	1e114091 	mrcne	0, 0, r4, cr1, cr1, {4}
     5b0:	01000006 	tsteq	r0, r6
     5b4:	0007daa2 	andeq	sp, r7, r2, lsr #21
     5b8:	b4910300 	ldrlt	r0, [r1], #768	; 0x300
     5bc:	0469117f 	strbteq	r1, [r9], #-383	; 0xfffffe81
     5c0:	aa010000 	bge	405c8 <startup-0x1ffbfa38>
     5c4:	0000014c 	andeq	r0, r0, ip, asr #2
     5c8:	7f909103 	svcvc	0x00909103
     5cc:	00015c11 	andeq	r5, r1, r1, lsl ip
     5d0:	a4ab0100 	strtge	r0, [fp], #256	; 0x100
     5d4:	03000000 	movweq	r0, #0
     5d8:	117f8491 			; <UNDEFINED> instruction: 0x117f8491
     5dc:	0000051e 	andeq	r0, r0, lr, lsl r5
     5e0:	07daac01 	ldrbeq	sl, [sl, r1, lsl #24]
     5e4:	91030000 	mrsls	r0, (UNDEF: 3)
     5e8:	71117ef8 			; <UNDEFINED> instruction: 0x71117ef8
     5ec:	01000002 	tsteq	r0, r2
     5f0:	00014cb3 			; <UNDEFINED> instruction: 0x00014cb3
     5f4:	d4910300 	ldrle	r0, [r1], #768	; 0x300
     5f8:	03b1117e 			; <UNDEFINED> instruction: 0x03b1117e
     5fc:	b4010000 	strlt	r0, [r1], #-0
     600:	000000a4 	andeq	r0, r0, r4, lsr #1
     604:	7ec89103 	acsvce	f1, f3
     608:	00058211 	andeq	r8, r5, r1, lsl r2
     60c:	dab50100 	ble	fed40a14 <firstTime.4040+0xded38028>
     610:	03000007 	movweq	r0, #7
     614:	117ebc91 			; <UNDEFINED> instruction: 0x117ebc91
     618:	00000117 	andeq	r0, r0, r7, lsl r1
     61c:	014cbc01 	cmpeq	ip, r1, lsl #24
     620:	91030000 	mrsls	r0, (UNDEF: 3)
     624:	12117e98 	andsne	r7, r1, #152, 28	; 0x980
     628:	01000005 	tsteq	r0, r5
     62c:	0000a4bd 			; <UNDEFINED> instruction: 0x0000a4bd
     630:	8c910300 	ldchi	3, cr0, [r1], {0}
     634:	014f117e 	hvceq	61726	; 0xf11e
     638:	be010000 	cdplt	0, 0, cr0, cr1, cr0, {0}
     63c:	000007da 	ldrdeq	r0, [r0], -sl
     640:	7e809103 	sinvcs	f1, f3
     644:	00014711 	andeq	r4, r1, r1, lsl r7
     648:	4cc50100 	stfmie	f0, [r5], {0}
     64c:	03000001 	movweq	r0, #1
     650:	117ddc91 			; <UNDEFINED> instruction: 0x117ddc91
     654:	000015ab 	andeq	r1, r0, fp, lsr #11
     658:	014cca01 	cmpeq	ip, r1, lsl #20
     65c:	91030000 	mrsls	r0, (UNDEF: 3)
     660:	ec117db8 	ldc	13, cr7, [r1], {184}	; 0xb8
     664:	0100000b 	tsteq	r0, fp
     668:	00014ccf 	andeq	r4, r1, pc, asr #25
     66c:	94910300 	ldrls	r0, [r1], #768	; 0x300
     670:	0038117d 	eorseq	r1, r8, sp, ror r1
     674:	d5010000 	strle	r0, [r1, #-0]
     678:	0000014c 	andeq	r0, r0, ip, asr #2
     67c:	7cf09103 	ldfvcp	f1, [r0], #12
     680:	00053611 	andeq	r3, r5, r1, lsl r6
     684:	4cdb0100 	ldfmie	f0, [fp], {0}
     688:	03000001 	movweq	r0, #1
     68c:	117ccc91 			; <UNDEFINED> instruction: 0x117ccc91
     690:	0000053c 	andeq	r0, r0, ip, lsr r5
     694:	014cdd01 	cmpeq	ip, r1, lsl #26
     698:	91030000 	mrsls	r0, (UNDEF: 3)
     69c:	42117ca8 	andsmi	r7, r1, #168, 24	; 0xa800
     6a0:	01000005 	tsteq	r0, r5
     6a4:	00014cdf 	ldrdeq	r4, [r1], -pc	; <UNPREDICTABLE>
     6a8:	84910300 	ldrhi	r0, [r1], #768	; 0x300
     6ac:	01c5117c 	biceq	r1, r5, ip, ror r1
     6b0:	e1010000 	mrs	r0, (UNDEF: 1)
     6b4:	0000014c 	andeq	r0, r0, ip, asr #2
     6b8:	7be09103 	blvc	ff824acc <firstTime.4040+0xdf81c0e0>
     6bc:	00014111 	andeq	r4, r1, r1, lsl r1
     6c0:	4ce30100 	stfmie	f0, [r3]
     6c4:	03000001 	movweq	r0, #1
     6c8:	117bbc91 			; <UNDEFINED> instruction: 0x117bbc91
     6cc:	0000003f 	andeq	r0, r0, pc, lsr r0
     6d0:	036efe01 	msreq	SPSR_fsx, #1, 28
     6d4:	91030000 	mrsls	r0, (UNDEF: 3)
     6d8:	6f117ba8 	svcvs	0x00117ba8
     6dc:	01000001 	tsteq	r0, r1
     6e0:	00036eff 	strdeq	r6, [r3], -pc	; <UNPREDICTABLE>
     6e4:	94910300 	ldrls	r0, [r1], #768	; 0x300
     6e8:	01a3147b 			; <UNDEFINED> instruction: 0x01a3147b
     6ec:	00010000 	andeq	r0, r1, r0
     6f0:	00036e01 	andeq	r6, r3, r1, lsl #28
     6f4:	80910300 	addshi	r0, r1, r0, lsl #6
     6f8:	01b9147b 			; <UNDEFINED> instruction: 0x01b9147b
     6fc:	01010000 	mrseq	r0, (UNDEF: 1)
     700:	00036e01 	andeq	r6, r3, r1, lsl #28
     704:	ec910300 	ldc	3, cr0, [r1], {0}
     708:	01b3147a 			; <UNDEFINED> instruction: 0x01b3147a
     70c:	02010000 	andeq	r0, r1, #0
     710:	00036e01 	andeq	r6, r3, r1, lsl #28
     714:	d8910300 	ldmle	r1, {r8, r9}
     718:	01bf147a 			; <UNDEFINED> instruction: 0x01bf147a
     71c:	03010000 	movweq	r0, #4096	; 0x1000
     720:	00036e01 	andeq	r6, r3, r1, lsl #28
     724:	c4910300 	ldrgt	r0, [r1], #768	; 0x300
     728:	0212147a 	andseq	r1, r2, #2046820352	; 0x7a000000
     72c:	04010000 	streq	r0, [r1], #-0
     730:	00036e01 	andeq	r6, r3, r1, lsl #28
     734:	b0910300 	addslt	r0, r1, r0, lsl #6
     738:	01fa147a 	mvnseq	r1, sl, ror r4
     73c:	05010000 	streq	r0, [r1, #-0]
     740:	00036e01 	andeq	r6, r3, r1, lsl #28
     744:	9c910300 	ldcls	3, cr0, [r1], {0}
     748:	01d2147a 	bicseq	r1, r2, sl, ror r4
     74c:	06010000 	streq	r0, [r1], -r0
     750:	00036e01 	andeq	r6, r3, r1, lsl #28
     754:	88910300 	ldmhi	r1, {r8, r9}
     758:	0218147a 	andseq	r1, r8, #2046820352	; 0x7a000000
     75c:	07010000 	streq	r0, [r1, -r0]
     760:	00036e01 	andeq	r6, r3, r1, lsl #28
     764:	f4910300 			; <UNDEFINED> instruction: 0xf4910300
     768:	05f91479 	ldrbeq	r1, [r9, #1145]!	; 0x479
     76c:	08010000 	stmdaeq	r1, {}	; <UNPREDICTABLE>
     770:	00036e01 	andeq	r6, r3, r1, lsl #28
     774:	e0910300 	adds	r0, r1, r0, lsl #6
     778:	06001479 			; <UNDEFINED> instruction: 0x06001479
     77c:	09010000 	stmdbeq	r1, {}	; <UNPREDICTABLE>
     780:	00036e01 	andeq	r6, r3, r1, lsl #28
     784:	cc910300 	ldcgt	3, cr0, [r1], {0}
     788:	05651479 	strbeq	r1, [r5, #-1145]!	; 0xfffffb87
     78c:	0a010000 	beq	40794 <startup-0x1ffbf86c>
     790:	00036e01 	andeq	r6, r3, r1, lsl #28
     794:	b8910300 	ldmlt	r1, {r8, r9}
     798:	07101579 			; <UNDEFINED> instruction: 0x07101579
     79c:	05ae2000 	streq	r2, [lr, #0]!
     7a0:	67140000 	ldrvs	r0, [r4, -r0]
     7a4:	01000002 	tsteq	r0, r2
     7a8:	012e0143 			; <UNDEFINED> instruction: 0x012e0143
     7ac:	03050000 	movweq	r0, #20480	; 0x5000
     7b0:	2000697c 	andcs	r6, r0, ip, ror r9
     7b4:	0003c314 	andeq	ip, r3, r4, lsl r3
     7b8:	01440100 	mrseq	r0, (UNDEF: 84)
     7bc:	0000012e 	andeq	r0, r0, lr, lsr #2
     7c0:	69800305 	stmibvs	r0, {r0, r2, r8, r9}
     7c4:	15142000 	ldrne	r2, [r4, #-0]
     7c8:	01000003 	tsteq	r0, r3
     7cc:	012e0145 			; <UNDEFINED> instruction: 0x012e0145
     7d0:	03050000 	movweq	r0, #20480	; 0x5000
     7d4:	20006978 	andcs	r6, r0, r8, ror r9
     7d8:	a40b0000 	strge	r0, [fp], #-0
     7dc:	ea000000 	b	7e4 <startup-0x1ffff81c>
     7e0:	0f000007 	svceq	0x00000007
     7e4:	0000019a 	muleq	r0, sl, r1
     7e8:	f5130000 			; <UNDEFINED> instruction: 0xf5130000
     7ec:	01000003 	tsteq	r0, r3
     7f0:	0000345c 	andeq	r3, r0, ip, asr r4
     7f4:	0001c820 	andeq	ip, r1, r0, lsr #16
     7f8:	8c9c0100 	ldfhis	f0, [ip], {0}
     7fc:	11000008 	tstne	r0, r8
     800:	00000121 	andeq	r0, r0, r1, lsr #2
     804:	009e5d01 	addseq	r5, lr, r1, lsl #26
     808:	91020000 	mrsls	r0, (UNDEF: 2)
     80c:	021e1174 	andseq	r1, lr, #116, 2
     810:	61010000 	mrsvs	r0, (UNDEF: 1)
     814:	0000009e 	muleq	r0, lr, r0
     818:	11709102 	cmnne	r0, r2, lsl #2
     81c:	0000022e 	andeq	r0, r0, lr, lsr #4
     820:	009e6501 	addseq	r6, lr, r1, lsl #10
     824:	91020000 	mrsls	r0, (UNDEF: 2)
     828:	0297116c 	addseq	r1, r7, #108, 2
     82c:	69010000 	stmdbvs	r1, {}	; <UNPREDICTABLE>
     830:	0000009e 	muleq	r0, lr, r0
     834:	11689102 	cmnne	r8, r2, lsl #2
     838:	000002a0 	andeq	r0, r0, r0, lsr #5
     83c:	009e6d01 	addseq	r6, lr, r1, lsl #26
     840:	91020000 	mrsls	r0, (UNDEF: 2)
     844:	02a91164 	adceq	r1, r9, #100, 2
     848:	71010000 	mrsvc	r0, (UNDEF: 1)
     84c:	0000009e 	muleq	r0, lr, r0
     850:	11609102 	cmnne	r0, r2, lsl #2
     854:	000002b2 			; <UNDEFINED> instruction: 0x000002b2
     858:	009e7501 	addseq	r7, lr, r1, lsl #10
     85c:	91020000 	mrsls	r0, (UNDEF: 2)
     860:	02bb115c 	adcseq	r1, fp, #92, 2
     864:	79010000 	stmdbvc	r1, {}	; <UNPREDICTABLE>
     868:	0000009e 	muleq	r0, lr, r0
     86c:	11589102 	cmpne	r8, r2, lsl #2
     870:	000002c4 	andeq	r0, r0, r4, asr #5
     874:	009e7c01 	addseq	r7, lr, r1, lsl #24
     878:	91020000 	mrsls	r0, (UNDEF: 2)
     87c:	005d1154 	subseq	r1, sp, r4, asr r1
     880:	7f010000 	svcvc	0x00010000
     884:	0000009e 	muleq	r0, lr, r0
     888:	00509102 	subseq	r9, r0, r2, lsl #2
     88c:	00025e16 	andeq	r5, r2, r6, lsl lr
     890:	10280100 	eorne	r0, r8, r0, lsl #2
     894:	24200000 	strtcs	r0, [r0], #-0
     898:	01000000 	mrseq	r0, (UNDEF: 0)
     89c:	0167179c 			; <UNDEFINED> instruction: 0x0167179c
     8a0:	32010000 	andcc	r0, r1, #0
     8a4:	20000000 	andcs	r0, r0, r0
     8a8:	0000000c 	andeq	r0, r0, ip
     8ac:	e0009c01 	and	r9, r0, r1, lsl #24
     8b0:	04000001 	streq	r0, [r0], #-1
     8b4:	00013d00 	andeq	r3, r1, r0, lsl #26
     8b8:	77010400 	strvc	r0, [r1, -r0, lsl #8]
     8bc:	0c000000 	stceq	0, cr0, [r0], {-0}
     8c0:	0000063d 	andeq	r0, r0, sp, lsr r6
     8c4:	20000d00 	andcs	r0, r0, r0, lsl #26
     8c8:	00000056 	andeq	r0, r0, r6, asr r0
     8cc:	0000029b 	muleq	r0, fp, r2
     8d0:	05020c02 	streq	r0, [r2, #-3074]	; 0xfffff3fe
     8d4:	0000004e 	andeq	r0, r0, lr, asr #32
     8d8:	0002e403 	andeq	lr, r2, r3, lsl #8
     8dc:	4e070200 	cdpmi	2, 0, cr0, cr7, cr0, {0}
     8e0:	00000000 	andeq	r0, r0, r0
     8e4:	00060703 	andeq	r0, r6, r3, lsl #14
     8e8:	4e080200 	cdpmi	2, 0, cr0, cr8, cr0, {0}
     8ec:	04000000 	streq	r0, [r0], #-0
     8f0:	00101703 	andseq	r1, r0, r3, lsl #14
     8f4:	55090200 	strpl	r0, [r9, #-512]	; 0xfffffe00
     8f8:	08000000 	stmdaeq	r0, {}	; <UNPREDICTABLE>
     8fc:	07040400 	streq	r0, [r4, -r0, lsl #8]
     900:	00000308 	andeq	r0, r0, r8, lsl #6
     904:	005b0405 	subseq	r0, fp, r5, lsl #8
     908:	01040000 	mrseq	r0, (UNDEF: 4)
     90c:	00041f08 	andeq	r1, r4, r8, lsl #30
     910:	11690600 	cmnne	r9, r0, lsl #12
     914:	0a020000 	beq	8091c <startup-0x1ff7f6e4>
     918:	00000021 	andeq	r0, r0, r1, lsr #32
     91c:	00001607 	andeq	r1, r0, r7, lsl #12
     920:	06030c00 	streq	r0, [r3], -r0, lsl #24
     924:	0000009e 	muleq	r0, lr, r0
     928:	0004f503 	andeq	pc, r4, r3, lsl #10
     92c:	9e070300 	cdpls	3, 0, cr0, cr7, cr0, {0}
     930:	00000000 	andeq	r0, r0, r0
     934:	00001d03 	andeq	r1, r0, r3, lsl #26
     938:	9e080300 	cdpls	3, 0, cr0, cr8, cr0, {0}
     93c:	04000000 	streq	r0, [r0], #-0
     940:	00001203 	andeq	r1, r0, r3, lsl #4
     944:	9e090300 	cdpls	3, 0, cr0, cr9, cr0, {0}
     948:	08000000 	stmdaeq	r0, {}	; <UNPREDICTABLE>
     94c:	62040500 	andvs	r0, r4, #0, 10
     950:	06000000 	streq	r0, [r0], -r0
     954:	00000c36 	andeq	r0, r0, r6, lsr ip
     958:	006d0a03 	rsbeq	r0, sp, r3, lsl #20
     95c:	dc070000 	stcle	0, cr0, [r7], {-0}
     960:	24000005 	strcs	r0, [r0], #-5
     964:	01280604 			; <UNDEFINED> instruction: 0x01280604
     968:	bc030000 	stclt	0, cr0, [r3], {-0}
     96c:	04000003 	streq	r0, [r0], #-3
     970:	00012807 	andeq	r2, r1, r7, lsl #16
     974:	e8030000 	stmda	r3, {}	; <UNPREDICTABLE>
     978:	04000005 	streq	r0, [r0], #-5
     97c:	00012e08 	andeq	r2, r1, r8, lsl #28
     980:	60030400 	andvs	r0, r3, r0, lsl #8
     984:	04000005 	streq	r0, [r0], #-5
     988:	00012e09 	andeq	r2, r1, r9, lsl #28
     98c:	7b030800 	blvc	c2994 <startup-0x1ff3d66c>
     990:	04000005 	streq	r0, [r0], #-5
     994:	0001460c 	andeq	r4, r1, ip, lsl #12
     998:	dd030c00 	stcle	12, cr0, [r3, #-0]
     99c:	04000002 	streq	r0, [r0], #-2
     9a0:	0001460d 	andeq	r4, r1, sp, lsl #12
     9a4:	ce031000 	cdpgt	0, 0, cr1, cr3, cr0, {0}
     9a8:	04000003 	streq	r0, [r0], #-3
     9ac:	00012e10 	andeq	r2, r1, r0, lsl lr
     9b0:	48031400 	stmdami	r3, {sl, ip}
     9b4:	04000000 	streq	r0, [r0], #-0
     9b8:	00012e11 	andeq	r2, r1, r1, lsl lr
     9bc:	4d031800 	stcmi	8, cr1, [r3, #-0]
     9c0:	04000003 	streq	r0, [r0], #-3
     9c4:	00012e12 	andeq	r2, r1, r2, lsl lr
     9c8:	5d031c00 	stcpl	12, cr1, [r3, #-0]
     9cc:	04000003 	streq	r0, [r0], #-3
     9d0:	00012e13 	andeq	r2, r1, r3, lsl lr
     9d4:	05002000 	streq	r2, [r0, #-0]
     9d8:	0000a404 	andeq	sl, r0, r4, lsl #8
     9dc:	05040800 	streq	r0, [r4, #-2048]	; 0xfffff800
     9e0:	00746e69 	rsbseq	r6, r4, r9, ror #28
     9e4:	00014009 	andeq	r4, r1, r9
     9e8:	01400a00 	cmpeq	r0, r0, lsl #20
     9ec:	05000000 	streq	r0, [r0, #-0]
     9f0:	0000af04 	andeq	sl, r0, r4, lsl #30
     9f4:	35040500 	strcc	r0, [r4, #-1280]	; 0xfffffb00
     9f8:	06000001 	streq	r0, [r0], -r1
     9fc:	000005dd 	ldrdeq	r0, [r0], -sp
     a00:	00af1504 	adceq	r1, pc, r4, lsl #10
     a04:	620b0000 	andvs	r0, fp, #0
     a08:	62000001 	andvs	r0, r0, #1
     a0c:	0c000001 	stceq	0, cr0, [r0], {1}
     a10:	4c040500 	cfstr32mi	mvfx0, [r4], {-0}
     a14:	0d000001 	stceq	0, cr0, [r0, #-4]
     a18:	000004a2 	andeq	r0, r0, r2, lsr #9
     a1c:	01571c04 	cmpeq	r7, r4, lsl #24
     a20:	930d0000 	movwls	r0, #53248	; 0xd000
     a24:	04000003 	streq	r0, [r0], #-3
     a28:	00012e1d 	andeq	r2, r1, sp, lsl lr
     a2c:	07040400 	streq	r0, [r4, -r0, lsl #8]
     a30:	0000037a 	andeq	r0, r0, sl, ror r3
     a34:	0001680e 	andeq	r6, r1, lr, lsl #16
     a38:	05030100 	streq	r0, [r3, #-256]	; 0xffffff00
     a3c:	002fdc03 	eoreq	sp, pc, r3, lsl #24
     a40:	01730e20 	cmneq	r3, r0, lsr #28
     a44:	04010000 	streq	r0, [r1], #-0
     a48:	2ef80305 	cdpcs	3, 15, cr0, cr8, cr5, {0}
     a4c:	2c0f2000 	stccs	0, cr2, [pc], {-0}
     a50:	01000006 	tsteq	r0, r6
     a54:	000d100c 	andeq	r1, sp, ip
     a58:	00004620 	andeq	r4, r0, r0, lsr #12
     a5c:	c39c0100 	orrsgt	r0, ip, #0, 2
     a60:	10000001 	andne	r0, r0, r1
     a64:	00000670 	andeq	r0, r0, r0, ror r6
     a68:	01620c01 	cmneq	r2, r1, lsl #24
     a6c:	91020000 	mrsls	r0, (UNDEF: 2)
     a70:	dd110074 	ldcle	0, cr0, [r1, #-464]	; 0xfffffe30
     a74:	01000002 	tsteq	r0, r2
     a78:	000d0007 	andeq	r0, sp, r7
     a7c:	00001020 	andeq	r1, r0, r0, lsr #32
     a80:	109c0100 	addsne	r0, ip, r0, lsl #2
     a84:	00000670 	andeq	r0, r0, r0, ror r6
     a88:	01620701 	cmneq	r2, r1, lsl #14
     a8c:	91020000 	mrsls	r0, (UNDEF: 2)
     a90:	2b000074 	blcs	c68 <startup-0x1ffff398>
     a94:	04000005 	streq	r0, [r0], #-5
     a98:	00022300 	andeq	r2, r2, r0, lsl #6
     a9c:	77010400 	strvc	r0, [r1, -r0, lsl #8]
     aa0:	0c000000 	stceq	0, cr0, [r0], {-0}
     aa4:	000008b0 			; <UNDEFINED> instruction: 0x000008b0
     aa8:	20000d58 	andcs	r0, r0, r8, asr sp
     aac:	000002a8 	andeq	r0, r0, r8, lsr #5
     ab0:	00000329 	andeq	r0, r0, r9, lsr #6
     ab4:	05020c02 	streq	r0, [r2, #-3074]	; 0xfffff3fe
     ab8:	0000004e 	andeq	r0, r0, lr, asr #32
     abc:	0002e403 	andeq	lr, r2, r3, lsl #8
     ac0:	4e070200 	cdpmi	2, 0, cr0, cr7, cr0, {0}
     ac4:	00000000 	andeq	r0, r0, r0
     ac8:	00060703 	andeq	r0, r6, r3, lsl #14
     acc:	4e080200 	cdpmi	2, 0, cr0, cr8, cr0, {0}
     ad0:	04000000 	streq	r0, [r0], #-0
     ad4:	00101703 	andseq	r1, r0, r3, lsl #14
     ad8:	55090200 	strpl	r0, [r9, #-512]	; 0xfffffe00
     adc:	08000000 	stmdaeq	r0, {}	; <UNPREDICTABLE>
     ae0:	07040400 	streq	r0, [r4, -r0, lsl #8]
     ae4:	00000308 	andeq	r0, r0, r8, lsl #6
     ae8:	005b0405 	subseq	r0, fp, r5, lsl #8
     aec:	01040000 	mrseq	r0, (UNDEF: 4)
     af0:	00041f08 	andeq	r1, r4, r8, lsl #30
     af4:	11690600 	cmnne	r9, r0, lsl #12
     af8:	0a020000 	beq	80b00 <startup-0x1ff7f500>
     afc:	00000021 	andeq	r0, r0, r1, lsr #32
     b00:	00001607 	andeq	r1, r0, r7, lsl #12
     b04:	06030c00 	streq	r0, [r3], -r0, lsl #24
     b08:	0000009e 	muleq	r0, lr, r0
     b0c:	0004f503 	andeq	pc, r4, r3, lsl #10
     b10:	9e070300 	cdpls	3, 0, cr0, cr7, cr0, {0}
     b14:	00000000 	andeq	r0, r0, r0
     b18:	00001d03 	andeq	r1, r0, r3, lsl #26
     b1c:	9e080300 	cdpls	3, 0, cr0, cr8, cr0, {0}
     b20:	04000000 	streq	r0, [r0], #-0
     b24:	00001203 	andeq	r1, r0, r3, lsl #4
     b28:	9e090300 	cdpls	3, 0, cr0, cr9, cr0, {0}
     b2c:	08000000 	stmdaeq	r0, {}	; <UNPREDICTABLE>
     b30:	62040500 	andvs	r0, r4, #0, 10
     b34:	06000000 	streq	r0, [r0], -r0
     b38:	00000c36 	andeq	r0, r0, r6, lsr ip
     b3c:	006d0a03 	rsbeq	r0, sp, r3, lsl #20
     b40:	dc070000 	stcle	0, cr0, [r7], {-0}
     b44:	24000005 	strcs	r0, [r0], #-5
     b48:	01280604 			; <UNDEFINED> instruction: 0x01280604
     b4c:	bc030000 	stclt	0, cr0, [r3], {-0}
     b50:	04000003 	streq	r0, [r0], #-3
     b54:	00012807 	andeq	r2, r1, r7, lsl #16
     b58:	e8030000 	stmda	r3, {}	; <UNPREDICTABLE>
     b5c:	04000005 	streq	r0, [r0], #-5
     b60:	00012e08 	andeq	r2, r1, r8, lsl #28
     b64:	60030400 	andvs	r0, r3, r0, lsl #8
     b68:	04000005 	streq	r0, [r0], #-5
     b6c:	00012e09 	andeq	r2, r1, r9, lsl #28
     b70:	7b030800 	blvc	c2b78 <startup-0x1ff3d488>
     b74:	04000005 	streq	r0, [r0], #-5
     b78:	0001460c 	andeq	r4, r1, ip, lsl #12
     b7c:	dd030c00 	stcle	12, cr0, [r3, #-0]
     b80:	04000002 	streq	r0, [r0], #-2
     b84:	0001460d 	andeq	r4, r1, sp, lsl #12
     b88:	ce031000 	cdpgt	0, 0, cr1, cr3, cr0, {0}
     b8c:	04000003 	streq	r0, [r0], #-3
     b90:	00012e10 	andeq	r2, r1, r0, lsl lr
     b94:	48031400 	stmdami	r3, {sl, ip}
     b98:	04000000 	streq	r0, [r0], #-0
     b9c:	00012e11 	andeq	r2, r1, r1, lsl lr
     ba0:	4d031800 	stcmi	8, cr1, [r3, #-0]
     ba4:	04000003 	streq	r0, [r0], #-3
     ba8:	00012e12 	andeq	r2, r1, r2, lsl lr
     bac:	5d031c00 	stcpl	12, cr1, [r3, #-0]
     bb0:	04000003 	streq	r0, [r0], #-3
     bb4:	00012e13 	andeq	r2, r1, r3, lsl lr
     bb8:	05002000 	streq	r2, [r0, #-0]
     bbc:	0000a404 	andeq	sl, r0, r4, lsl #8
     bc0:	05040800 	streq	r0, [r4, #-2048]	; 0xfffff800
     bc4:	00746e69 	rsbseq	r6, r4, r9, ror #28
     bc8:	00014009 	andeq	r4, r1, r9
     bcc:	01400a00 	cmpeq	r0, r0, lsl #20
     bd0:	05000000 	streq	r0, [r0, #-0]
     bd4:	0000af04 	andeq	sl, r0, r4, lsl #30
     bd8:	35040500 	strcc	r0, [r4, #-1280]	; 0xfffffb00
     bdc:	06000001 	streq	r0, [r0], -r1
     be0:	000005dd 	ldrdeq	r0, [r0], -sp
     be4:	00af1504 	adceq	r1, pc, r4, lsl #10
     be8:	620b0000 	andvs	r0, fp, #0
     bec:	62000001 	andvs	r0, r0, #1
     bf0:	0c000001 	stceq	0, cr0, [r0], {1}
     bf4:	4c040500 	cfstr32mi	mvfx0, [r4], {-0}
     bf8:	0d000001 	stceq	0, cr0, [r0, #-4]
     bfc:	000004a2 	andeq	r0, r0, r2, lsr #9
     c00:	01571c04 	cmpeq	r7, r4, lsl #24
     c04:	930d0000 	movwls	r0, #53248	; 0xd000
     c08:	04000003 	streq	r0, [r0], #-3
     c0c:	00012e1d 	andeq	r2, r1, sp, lsl lr
     c10:	005b0b00 	subseq	r0, fp, r0, lsl #22
     c14:	018e0000 	orreq	r0, lr, r0
     c18:	8e0e0000 	cdphi	0, 0, cr0, cr14, cr0, {0}
     c1c:	0b000001 	bleq	c28 <startup-0x1ffff3d8>
     c20:	07040400 	streq	r0, [r4, -r0, lsl #8]
     c24:	0000037a 	andeq	r0, r0, sl, ror r3
     c28:	0008750f 	andeq	r7, r8, pc, lsl #10
     c2c:	7e030500 	cfsh32vc	mvfx0, mvfx3, #0
     c30:	05000001 	streq	r0, [r0, #-1]
     c34:	00698403 	rsbeq	r8, r9, r3, lsl #8
     c38:	076f0f20 	strbeq	r0, [pc, -r0, lsr #30]!
     c3c:	03060000 	movweq	r0, #24576	; 0x6000
     c40:	0000017e 	andeq	r0, r0, lr, ror r1
     c44:	69900305 	ldmibvs	r0, {r0, r2, r8, r9}
     c48:	8a0f2000 	bhi	3c8c50 <startup-0x1fc373b0>
     c4c:	07000007 	streq	r0, [r0, -r7]
     c50:	00017e03 	andeq	r7, r1, r3, lsl #28
     c54:	9c030500 	cfstr32ls	mvfx0, [r3], {-0}
     c58:	0f200069 	svceq	0x00200069
     c5c:	000006eb 	andeq	r0, r0, fp, ror #13
     c60:	017e0308 	cmneq	lr, r8, lsl #6
     c64:	03050000 	movweq	r0, #20480	; 0x5000
     c68:	200069a8 	andcs	r6, r0, r8, lsr #19
     c6c:	00079b0f 	andeq	r9, r7, pc, lsl #22
     c70:	7e030900 	vmlavc.f16	s0, s6, s0	; <UNPREDICTABLE>
     c74:	05000001 	streq	r0, [r0, #-1]
     c78:	0069b403 	rsbeq	fp, r9, r3, lsl #8
     c7c:	08dd0f20 	ldmeq	sp, {r5, r8, r9, sl, fp}^
     c80:	030a0000 	movweq	r0, #40960	; 0xa000
     c84:	0000017e 	andeq	r0, r0, lr, ror r1
     c88:	69c00305 	stmibvs	r0, {r0, r2, r8, r9}^
     c8c:	590f2000 	stmdbpl	pc, {sp}	; <UNPREDICTABLE>
     c90:	0b000008 	bleq	cb8 <startup-0x1ffff348>
     c94:	00017e03 	andeq	r7, r1, r3, lsl #28
     c98:	cc030500 	cfstr32gt	mvfx0, [r3], {-0}
     c9c:	0f200069 	svceq	0x00200069
     ca0:	000007be 			; <UNDEFINED> instruction: 0x000007be
     ca4:	017e030c 	cmneq	lr, ip, lsl #6
     ca8:	03050000 	movweq	r0, #20480	; 0x5000
     cac:	200069d8 	ldrdcs	r6, [r0], -r8
     cb0:	0006fb0f 	andeq	pc, r6, pc, lsl #22
     cb4:	7e030d00 	cdpvc	13, 0, cr0, cr3, cr0, {0}
     cb8:	05000001 	streq	r0, [r0, #-1]
     cbc:	0069e403 	rsbeq	lr, r9, r3, lsl #8
     cc0:	07290f20 	streq	r0, [r9, -r0, lsr #30]!
     cc4:	030e0000 	movweq	r0, #57344	; 0xe000
     cc8:	0000017e 	andeq	r0, r0, lr, ror r1
     ccc:	69f00305 	ldmibvs	r0!, {r0, r2, r8, r9}^
     cd0:	0b0f2000 	bleq	3c8cd8 <startup-0x1fc37328>
     cd4:	0f000008 	svceq	0x00000008
     cd8:	00017e03 	andeq	r7, r1, r3, lsl #28
     cdc:	fc030500 	stc2	5, cr0, [r3], {-0}
     ce0:	10200069 	eorne	r0, r0, r9, rrx
     ce4:	000006af 	andeq	r0, r0, pc, lsr #13
     ce8:	009e1101 	addseq	r1, lr, r1, lsl #2
     cec:	03050000 	movweq	r0, #20480	; 0x5000
     cf0:	2000329c 	mulcs	r0, ip, r2
     cf4:	00067f10 	andeq	r7, r6, r0, lsl pc
     cf8:	9e120100 	muflss	f0, f2, f0
     cfc:	05000000 	streq	r0, [r0, #-0]
     d00:	0032b403 	eorseq	fp, r2, r3, lsl #8
     d04:	06d51020 	ldrbeq	r1, [r5], r0, lsr #32
     d08:	13010000 	movwne	r0, #4096	; 0x1000
     d0c:	0000009e 	muleq	r0, lr, r0
     d10:	316c0305 	cmncc	ip, r5, lsl #6
     d14:	b4102000 	ldrlt	r2, [r0], #-0
     d18:	01000007 	tsteq	r0, r7
     d1c:	00009e14 	andeq	r9, r0, r4, lsl lr
     d20:	b0030500 	andlt	r0, r3, r0, lsl #10
     d24:	10200032 	eorne	r0, r0, r2, lsr r0
     d28:	0000077f 	andeq	r0, r0, pc, ror r7
     d2c:	009e1501 	addseq	r1, lr, r1, lsl #10
     d30:	03050000 	movweq	r0, #20480	; 0x5000
     d34:	20003288 	andcs	r3, r0, r8, lsl #5
     d38:	00069710 	andeq	r9, r6, r0, lsl r7
     d3c:	9e160100 	muflss	f0, f6, f0
     d40:	05000000 	streq	r0, [r0, #-0]
     d44:	00317c03 	eorseq	r7, r1, r3, lsl #24
     d48:	070c1020 	streq	r1, [ip, -r0, lsr #32]
     d4c:	17010000 	strne	r0, [r1, -r0]
     d50:	0000009e 	muleq	r0, lr, r0
     d54:	32ac0305 	adccc	r0, ip, #335544320	; 0x14000000
     d58:	32102000 	andscc	r2, r0, #0
     d5c:	01000008 	tsteq	r0, r8
     d60:	00009e18 	andeq	r9, r0, r8, lsl lr
     d64:	68030500 	stmdavs	r3, {r8, sl}
     d68:	10200032 	eorne	r0, r0, r2, lsr r0
     d6c:	000006e0 	andeq	r0, r0, r0, ror #13
     d70:	009e1901 	addseq	r1, lr, r1, lsl #18
     d74:	03050000 	movweq	r0, #20480	; 0x5000
     d78:	200031d4 	ldrdcs	r3, [r0], -r4
     d7c:	00067510 	andeq	r7, r6, r0, lsl r5
     d80:	9e1a0100 	muflse	f0, f2, f0
     d84:	05000000 	streq	r0, [r0, #-0]
     d88:	00328403 	eorseq	r8, r2, r3, lsl #8
     d8c:	074d1020 	strbeq	r1, [sp, -r0, lsr #32]
     d90:	1b010000 	blne	40d98 <startup-0x1ffbf268>
     d94:	0000009e 	muleq	r0, lr, r0
     d98:	328c0305 	addcc	r0, ip, #335544320	; 0x14000000
     d9c:	c7102000 	ldrgt	r2, [r0, -r0]
     da0:	01000006 	tsteq	r0, r6
     da4:	0000621d 	andeq	r6, r0, sp, lsl r2
     da8:	a4030500 	strge	r0, [r3], #-1280	; 0xfffffb00
     dac:	10200031 	eorne	r0, r0, r1, lsr r0
     db0:	0000083c 	andeq	r0, r0, ip, lsr r8
     db4:	00621e01 	rsbeq	r1, r2, r1, lsl #28
     db8:	03050000 	movweq	r0, #20480	; 0x5000
     dbc:	20003290 	mulcs	r0, r0, r2
     dc0:	0007e810 	andeq	lr, r7, r0, lsl r8
     dc4:	621f0100 	andsvs	r0, pc, #0, 2
     dc8:	05000000 	streq	r0, [r0, #-0]
     dcc:	00326c03 	eorseq	r6, r2, r3, lsl #24
     dd0:	06891020 	streq	r1, [r9], r0, lsr #32
     dd4:	20010000 	andcs	r0, r1, r0
     dd8:	00000062 	andeq	r0, r0, r2, rrx
     ddc:	31980305 	orrscc	r0, r8, r5, lsl #6
     de0:	87102000 	ldrhi	r2, [r0, -r0]
     de4:	01000008 	tsteq	r0, r8
     de8:	00006221 	andeq	r6, r0, r1, lsr #4
     dec:	a0030500 	andge	r0, r3, r0, lsl #10
     df0:	10200032 	eorne	r0, r0, r2, lsr r0
     df4:	000006b9 			; <UNDEFINED> instruction: 0x000006b9
     df8:	00622201 	rsbeq	r2, r2, r1, lsl #4
     dfc:	03050000 	movweq	r0, #20480	; 0x5000
     e00:	20003250 	andcs	r3, r0, r0, asr r2
     e04:	0007ce10 	andeq	ip, r7, r0, lsl lr
     e08:	62230100 	eorvs	r0, r3, #0, 2
     e0c:	05000000 	streq	r0, [r0, #-0]
     e10:	00317003 	eorseq	r7, r1, r3
     e14:	06a11020 	strteq	r1, [r1], r0, lsr #32
     e18:	24010000 	strcs	r0, [r1], #-0
     e1c:	00000062 	andeq	r0, r0, r2, rrx
     e20:	31800305 	orrcc	r0, r0, r5, lsl #6
     e24:	4a102000 	bmi	408e2c <startup-0x1fbf71d4>
     e28:	01000008 	tsteq	r0, r8
     e2c:	00006225 	andeq	r6, r0, r5, lsr #4
     e30:	bc030500 	cfstr32lt	mvfx0, [r3], {-0}
     e34:	10200031 	eorne	r0, r0, r1, lsr r0
     e38:	00000761 	andeq	r0, r0, r1, ror #14
     e3c:	00622601 	rsbeq	r2, r2, r1, lsl #12
     e40:	03050000 	movweq	r0, #20480	; 0x5000
     e44:	20003244 	andcs	r3, r0, r4, asr #4
     e48:	0008a110 	andeq	sl, r8, r0, lsl r1
     e4c:	62270100 	eorvs	r0, r7, #0, 2
     e50:	05000000 	streq	r0, [r0, #-0]
     e54:	00327803 	eorseq	r7, r2, r3, lsl #16
     e58:	07ac1020 	streq	r1, [ip, r0, lsr #32]!
     e5c:	2a010000 	bcs	40e64 <startup-0x1ffbf19c>
     e60:	0000014c 	andeq	r0, r0, ip, asr #2
     e64:	31d80305 	bicscc	r0, r8, r5, lsl #6
     e68:	27102000 	ldrcs	r2, [r0, -r0]
     e6c:	01000008 	tsteq	r0, r8
     e70:	0000a42b 	andeq	sl, r0, fp, lsr #8
     e74:	c8030500 	stmdagt	r3, {r8, sl}
     e78:	10200031 	eorne	r0, r0, r1, lsr r0
     e7c:	00000896 	muleq	r0, r6, r8
     e80:	00a42c01 	adceq	r2, r4, r1, lsl #24
     e84:	03050000 	movweq	r0, #20480	; 0x5000
     e88:	2000318c 	andcs	r3, r0, ip, lsl #3
     e8c:	00073910 	andeq	r3, r7, r0, lsl r9
     e90:	a42d0100 	strtge	r0, [sp], #-256	; 0xffffff00
     e94:	05000000 	streq	r0, [r0, #-0]
     e98:	0031b003 	eorseq	fp, r1, r3
     e9c:	07dd1020 	ldrbeq	r1, [sp, r0, lsr #32]
     ea0:	2e010000 	cdpcs	0, 0, cr0, cr1, cr0, {0}
     ea4:	000000a4 	andeq	r0, r0, r4, lsr #1
     ea8:	325c0305 	subscc	r0, ip, #335544320	; 0x14000000
     eac:	6a102000 	bvs	408eb4 <startup-0x1fbf714c>
     eb0:	01000008 	tsteq	r0, r8
     eb4:	0000a42f 	andeq	sl, r0, pc, lsr #8
     eb8:	fc030500 	stc2	5, cr0, [r3], {-0}
     ebc:	0b200031 	bleq	800f88 <startup-0x1f7ff078>
     ec0:	000000a4 	andeq	r0, r0, r4, lsr #1
     ec4:	0000043c 	andeq	r0, r0, ip, lsr r4
     ec8:	00018e0e 	andeq	r8, r1, lr, lsl #28
     ecc:	10000400 	andne	r0, r0, r0, lsl #8
     ed0:	0000081c 	andeq	r0, r0, ip, lsl r8
     ed4:	042c3001 	strteq	r3, [ip], #-1
     ed8:	03050000 	movweq	r0, #20480	; 0x5000
     edc:	20003208 	andcs	r3, r0, r8, lsl #4
     ee0:	00080111 	andeq	r0, r8, r1, lsl r1
     ee4:	dc5f0100 	ldflee	f0, [pc], {-0}
     ee8:	2420000e 	strtcs	r0, [r0], #-14
     eec:	01000001 	tsteq	r0, r1
     ef0:	0004829c 	muleq	r4, ip, r2
     ef4:	07ac1200 	streq	r1, [ip, r0, lsl #4]!
     ef8:	5f010000 	svcpl	0x00010000
     efc:	00000162 	andeq	r0, r0, r2, ror #2
     f00:	0f6c9102 	svceq	0x006c9102
     f04:	000007f7 	strdeq	r0, [r0], -r7
     f08:	012e6001 			; <UNDEFINED> instruction: 0x012e6001
     f0c:	03050000 	movweq	r0, #20480	; 0x5000
     f10:	20006a08 	andcs	r6, r0, r8, lsl #20
     f14:	03f51300 	mvnseq	r1, #0, 6
     f18:	31010000 	mrscc	r0, (UNDEF: 1)
     f1c:	20000d58 	andcs	r0, r0, r8, asr sp
     f20:	00000184 	andeq	r0, r0, r4, lsl #3
     f24:	440f9c01 	strmi	r9, [pc], #-3073	; f2c <startup-0x1ffff0d4>
     f28:	01000007 	tsteq	r0, r7
     f2c:	00009e32 	andeq	r9, r0, r2, lsr lr
     f30:	74910200 	ldrvc	r0, [r1], #512	; 0x200
     f34:	0007170f 	andeq	r1, r7, pc, lsl #14
     f38:	9e360100 	rsflss	f0, f6, f0
     f3c:	02000000 	andeq	r0, r0, #0
     f40:	580f7091 	stmdapl	pc, {r0, r4, r7, ip, sp, lr}	; <UNPREDICTABLE>
     f44:	01000007 	tsteq	r0, r7
     f48:	00009e3a 	andeq	r9, r0, sl, lsr lr
     f4c:	6c910200 	lfmvs	f0, 4, [r1], {0}
     f50:	0007200f 	andeq	r2, r7, pc
     f54:	9e3e0100 	rsflse	f0, f6, f0
     f58:	02000000 	andeq	r0, r0, #0
     f5c:	970f6891 			; <UNDEFINED> instruction: 0x970f6891
     f60:	01000002 	tsteq	r0, r2
     f64:	00009e42 	andeq	r9, r0, r2, asr #28
     f68:	64910200 	ldrvs	r0, [r1], #512	; 0x200
     f6c:	0002a00f 	andeq	sl, r2, pc
     f70:	9e460100 	dvflss	f0, f6, f0
     f74:	02000000 	andeq	r0, r0, #0
     f78:	a90f6091 	stmdbge	pc, {r0, r4, r7, sp, lr}	; <UNPREDICTABLE>
     f7c:	01000002 	tsteq	r0, r2
     f80:	00009e4a 	andeq	r9, r0, sl, asr #28
     f84:	5c910200 	lfmpl	f0, 4, [r1], {0}
     f88:	0002b20f 	andeq	fp, r2, pc, lsl #4
     f8c:	9e4e0100 	dvflse	f0, f6, f0
     f90:	02000000 	andeq	r0, r0, #0
     f94:	bb0f5891 	bllt	3d71e0 <startup-0x1fc28e20>
     f98:	01000002 	tsteq	r0, r2
     f9c:	00009e52 	andeq	r9, r0, r2, asr lr
     fa0:	54910200 	ldrpl	r0, [r1], #512	; 0x200
     fa4:	0002c40f 	andeq	ip, r2, pc, lsl #8
     fa8:	9e560100 	rdflss	f0, f6, f0
     fac:	02000000 	andeq	r0, r0, #0
     fb0:	5d0f5091 	stcpl	0, cr5, [pc, #-580]	; d74 <startup-0x1ffff28c>
     fb4:	01000000 	mrseq	r0, (UNDEF: 0)
     fb8:	00009e5a 	andeq	r9, r0, sl, asr lr
     fbc:	4c910200 	lfmmi	f0, 4, [r1], {0}
     fc0:	01d50000 	bicseq	r0, r5, r0
     fc4:	00040000 	andeq	r0, r4, r0
     fc8:	00000323 	andeq	r0, r0, r3, lsr #6
     fcc:	00770104 	rsbseq	r0, r7, r4, lsl #2
     fd0:	0a0c0000 	beq	300fd8 <startup-0x1fcff028>
     fd4:	00000009 	andeq	r0, r0, r9
     fd8:	fc200010 	stc2	0, cr0, [r0], #-64	; 0xffffffc0
     fdc:	b1000000 	mrslt	r0, (UNDEF: 0)
     fe0:	02000004 	andeq	r0, r0, #4
     fe4:	03080704 	movweq	r0, #34564	; 0x8704
     fe8:	02020000 	andeq	r0, r2, #0
     fec:	00030207 	andeq	r0, r3, r7, lsl #4
     ff0:	08010200 	stmdaeq	r1, {r9}
     ff4:	0000041f 	andeq	r0, r0, pc, lsl r4
     ff8:	05020c03 	streq	r0, [r2, #-3075]	; 0xfffff3fd
     ffc:	00000063 	andeq	r0, r0, r3, rrx
    1000:	0002e404 	andeq	lr, r2, r4, lsl #8
    1004:	21070200 	mrscs	r0, (UNDEF: 39)
    1008:	00000000 	andeq	r0, r0, r0
    100c:	00060704 	andeq	r0, r6, r4, lsl #14
    1010:	21080200 	mrscs	r0, R8_fiq
    1014:	04000000 	streq	r0, [r0], #-0
    1018:	00101704 	andseq	r1, r0, r4, lsl #14
    101c:	63090200 	movwvs	r0, #37376	; 0x9200
    1020:	08000000 	stmdaeq	r0, {}	; <UNPREDICTABLE>
    1024:	2f040500 	svccs	0x00040500
    1028:	06000000 	streq	r0, [r0], -r0
    102c:	00001169 	andeq	r1, r0, r9, ror #2
    1030:	00360a02 	eorseq	r0, r6, r2, lsl #20
    1034:	16070000 	strne	r0, [r7], -r0
    1038:	0c000000 	stceq	0, cr0, [r0], {-0}
    103c:	00a50603 	adceq	r0, r5, r3, lsl #12
    1040:	f5040000 			; <UNDEFINED> instruction: 0xf5040000
    1044:	03000004 	movweq	r0, #4
    1048:	0000a507 	andeq	sl, r0, r7, lsl #10
    104c:	1d040000 	stcne	0, cr0, [r4, #-0]
    1050:	03000000 	movweq	r0, #0
    1054:	0000a508 	andeq	sl, r0, r8, lsl #10
    1058:	12040400 	andne	r0, r4, #0, 8
    105c:	03000000 	movweq	r0, #0
    1060:	0000a509 	andeq	sl, r0, r9, lsl #10
    1064:	05000800 	streq	r0, [r0, #-2048]	; 0xfffff800
    1068:	00006904 	andeq	r6, r0, r4, lsl #18
    106c:	0c360600 	ldceq	6, cr0, [r6], #-0
    1070:	0a030000 	beq	c1078 <startup-0x1ff3ef88>
    1074:	00000074 	andeq	r0, r0, r4, ror r0
    1078:	0005dc07 	andeq	sp, r5, r7, lsl #24
    107c:	06042400 	streq	r2, [r4], -r0, lsl #8
    1080:	0000012f 	andeq	r0, r0, pc, lsr #2
    1084:	0003bc04 	andeq	fp, r3, r4, lsl #24
    1088:	2f070400 	svccs	0x00070400
    108c:	00000001 	andeq	r0, r0, r1
    1090:	0005e804 	andeq	lr, r5, r4, lsl #16
    1094:	35080400 	strcc	r0, [r8, #-1024]	; 0xfffffc00
    1098:	04000001 	streq	r0, [r0], #-1
    109c:	00056004 	andeq	r6, r5, r4
    10a0:	35090400 	strcc	r0, [r9, #-1024]	; 0xfffffc00
    10a4:	08000001 	stmdaeq	r0, {r0}
    10a8:	00057b04 	andeq	r7, r5, r4, lsl #22
    10ac:	4d0c0400 	cfstrsmi	mvf0, [ip, #-0]
    10b0:	0c000001 	stceq	0, cr0, [r0], {1}
    10b4:	0002dd04 	andeq	sp, r2, r4, lsl #26
    10b8:	4d0d0400 	cfstrsmi	mvf0, [sp, #-0]
    10bc:	10000001 	andne	r0, r0, r1
    10c0:	0003ce04 	andeq	ip, r3, r4, lsl #28
    10c4:	35100400 	ldrcc	r0, [r0, #-1024]	; 0xfffffc00
    10c8:	14000001 	strne	r0, [r0], #-1
    10cc:	00004804 	andeq	r4, r0, r4, lsl #16
    10d0:	35110400 	ldrcc	r0, [r1, #-1024]	; 0xfffffc00
    10d4:	18000001 	stmdane	r0, {r0}
    10d8:	00034d04 	andeq	r4, r3, r4, lsl #26
    10dc:	35120400 	ldrcc	r0, [r2, #-1024]	; 0xfffffc00
    10e0:	1c000001 	stcne	0, cr0, [r0], {1}
    10e4:	00035d04 	andeq	r5, r3, r4, lsl #26
    10e8:	35130400 	ldrcc	r0, [r3, #-1024]	; 0xfffffc00
    10ec:	20000001 	andcs	r0, r0, r1
    10f0:	ab040500 	blge	1024f8 <startup-0x1fefdb08>
    10f4:	08000000 	stmdaeq	r0, {}	; <UNPREDICTABLE>
    10f8:	6e690504 	cdpvs	5, 6, cr0, cr9, cr4, {0}
    10fc:	47090074 	smlsdxmi	r9, r4, r0, r0
    1100:	0a000001 	beq	110c <startup-0x1fffeef4>
    1104:	00000147 	andeq	r0, r0, r7, asr #2
    1108:	b6040500 	strlt	r0, [r4], -r0, lsl #10
    110c:	05000000 	streq	r0, [r0, #-0]
    1110:	00013c04 	andeq	r3, r1, r4, lsl #24
    1114:	05dd0600 	ldrbeq	r0, [sp, #1536]	; 0x600
    1118:	15040000 	strne	r0, [r4, #-0]
    111c:	000000b6 	strheq	r0, [r0], -r6
    1120:	0001690b 	andeq	r6, r1, fp, lsl #18
    1124:	00016900 	andeq	r6, r1, r0, lsl #18
    1128:	05000c00 	streq	r0, [r0, #-3072]	; 0xfffff400
    112c:	00015304 	andeq	r5, r1, r4, lsl #6
    1130:	04a20d00 	strteq	r0, [r2], #3328	; 0xd00
    1134:	1c040000 	stcne	0, cr0, [r4], {-0}
    1138:	0000015e 	andeq	r0, r0, lr, asr r1
    113c:	0003930d 	andeq	r9, r3, sp, lsl #6
    1140:	351d0400 	ldrcc	r0, [sp, #-1024]	; 0xfffffc00
    1144:	0e000001 	cdpeq	0, 0, cr0, cr0, cr1, {0}
    1148:	00000939 	andeq	r0, r0, r9, lsr r9
    114c:	10000601 	andne	r0, r0, r1, lsl #12
    1150:	00fc2000 	rscseq	r2, ip, r0
    1154:	9c010000 	stcls	0, cr0, [r1], {-0}
    1158:	0006700f 	andeq	r7, r6, pc
    115c:	69060100 	stmdbvs	r6, {r8}
    1160:	02000001 	andeq	r0, r0, #1
    1164:	ed107491 	cfldrs	mvf7, [r0, #-580]	; 0xfffffdbc
    1168:	01000008 	tsteq	r0, r8
    116c:	0001350d 	andeq	r3, r1, sp, lsl #10
    1170:	fc030500 	stc2	5, cr0, [r3], {-0}
    1174:	1020002e 	eorne	r0, r0, lr, lsr #32
    1178:	000008fc 	strdeq	r0, [r0], -ip
    117c:	01350e01 	teqeq	r5, r1, lsl #28
    1180:	03050000 	movweq	r0, #20480	; 0x5000
    1184:	20002f04 	andcs	r2, r0, r4, lsl #30
    1188:	00035710 	andeq	r5, r3, r0, lsl r7
    118c:	350f0100 	strcc	r0, [pc, #-256]	; 1094 <startup-0x1fffef6c>
    1190:	05000001 	streq	r0, [r0, #-1]
    1194:	002f0003 	eoreq	r0, pc, r3
    1198:	41000020 	tstmi	r0, r0, lsr #32
    119c:	04000006 	streq	r0, [r0], #-6
    11a0:	0003f100 	andeq	pc, r3, r0, lsl #2
    11a4:	77010400 	strvc	r0, [r1, -r0, lsl #8]
    11a8:	0c000000 	stceq	0, cr0, [r0], {-0}
    11ac:	00000bba 			; <UNDEFINED> instruction: 0x00000bba
    11b0:	200010fc 	strdcs	r1, [r0], -ip
    11b4:	00000364 	andeq	r0, r0, r4, ror #6
    11b8:	0000055b 	andeq	r0, r0, fp, asr r5
    11bc:	05020c02 	streq	r0, [r2, #-3074]	; 0xfffff3fe
    11c0:	0000004e 	andeq	r0, r0, lr, asr #32
    11c4:	0002e403 	andeq	lr, r2, r3, lsl #8
    11c8:	4e070200 	cdpmi	2, 0, cr0, cr7, cr0, {0}
    11cc:	00000000 	andeq	r0, r0, r0
    11d0:	00060703 	andeq	r0, r6, r3, lsl #14
    11d4:	4e080200 	cdpmi	2, 0, cr0, cr8, cr0, {0}
    11d8:	04000000 	streq	r0, [r0], #-0
    11dc:	00101703 	andseq	r1, r0, r3, lsl #14
    11e0:	55090200 	strpl	r0, [r9, #-512]	; 0xfffffe00
    11e4:	08000000 	stmdaeq	r0, {}	; <UNPREDICTABLE>
    11e8:	07040400 	streq	r0, [r4, -r0, lsl #8]
    11ec:	00000308 	andeq	r0, r0, r8, lsl #6
    11f0:	005b0405 	subseq	r0, fp, r5, lsl #8
    11f4:	01040000 	mrseq	r0, (UNDEF: 4)
    11f8:	00041f08 	andeq	r1, r4, r8, lsl #30
    11fc:	11690600 	cmnne	r9, r0, lsl #12
    1200:	0a020000 	beq	81208 <startup-0x1ff7edf8>
    1204:	00000021 	andeq	r0, r0, r1, lsr #32
    1208:	00001607 	andeq	r1, r0, r7, lsl #12
    120c:	06030c00 	streq	r0, [r3], -r0, lsl #24
    1210:	0000009e 	muleq	r0, lr, r0
    1214:	0004f503 	andeq	pc, r4, r3, lsl #10
    1218:	9e070300 	cdpls	3, 0, cr0, cr7, cr0, {0}
    121c:	00000000 	andeq	r0, r0, r0
    1220:	00001d03 	andeq	r1, r0, r3, lsl #26
    1224:	9e080300 	cdpls	3, 0, cr0, cr8, cr0, {0}
    1228:	04000000 	streq	r0, [r0], #-0
    122c:	00001203 	andeq	r1, r0, r3, lsl #4
    1230:	9e090300 	cdpls	3, 0, cr0, cr9, cr0, {0}
    1234:	08000000 	stmdaeq	r0, {}	; <UNPREDICTABLE>
    1238:	62040500 	andvs	r0, r4, #0, 10
    123c:	06000000 	streq	r0, [r0], -r0
    1240:	00000c36 	andeq	r0, r0, r6, lsr ip
    1244:	006d0a03 	rsbeq	r0, sp, r3, lsl #20
    1248:	dc070000 	stcle	0, cr0, [r7], {-0}
    124c:	24000005 	strcs	r0, [r0], #-5
    1250:	01280604 			; <UNDEFINED> instruction: 0x01280604
    1254:	bc030000 	stclt	0, cr0, [r3], {-0}
    1258:	04000003 	streq	r0, [r0], #-3
    125c:	00012807 	andeq	r2, r1, r7, lsl #16
    1260:	e8030000 	stmda	r3, {}	; <UNPREDICTABLE>
    1264:	04000005 	streq	r0, [r0], #-5
    1268:	00012e08 	andeq	r2, r1, r8, lsl #28
    126c:	60030400 	andvs	r0, r3, r0, lsl #8
    1270:	04000005 	streq	r0, [r0], #-5
    1274:	00012e09 	andeq	r2, r1, r9, lsl #28
    1278:	7b030800 	blvc	c3280 <startup-0x1ff3cd80>
    127c:	04000005 	streq	r0, [r0], #-5
    1280:	0001460c 	andeq	r4, r1, ip, lsl #12
    1284:	dd030c00 	stcle	12, cr0, [r3, #-0]
    1288:	04000002 	streq	r0, [r0], #-2
    128c:	0001460d 	andeq	r4, r1, sp, lsl #12
    1290:	ce031000 	cdpgt	0, 0, cr1, cr3, cr0, {0}
    1294:	04000003 	streq	r0, [r0], #-3
    1298:	00012e10 	andeq	r2, r1, r0, lsl lr
    129c:	48031400 	stmdami	r3, {sl, ip}
    12a0:	04000000 	streq	r0, [r0], #-0
    12a4:	00012e11 	andeq	r2, r1, r1, lsl lr
    12a8:	4d031800 	stcmi	8, cr1, [r3, #-0]
    12ac:	04000003 	streq	r0, [r0], #-3
    12b0:	00012e12 	andeq	r2, r1, r2, lsl lr
    12b4:	5d031c00 	stcpl	12, cr1, [r3, #-0]
    12b8:	04000003 	streq	r0, [r0], #-3
    12bc:	00012e13 	andeq	r2, r1, r3, lsl lr
    12c0:	05002000 	streq	r2, [r0, #-0]
    12c4:	0000a404 	andeq	sl, r0, r4, lsl #8
    12c8:	05040800 	streq	r0, [r4, #-2048]	; 0xfffff800
    12cc:	00746e69 	rsbseq	r6, r4, r9, ror #28
    12d0:	00014009 	andeq	r4, r1, r9
    12d4:	01400a00 	cmpeq	r0, r0, lsl #20
    12d8:	05000000 	streq	r0, [r0, #-0]
    12dc:	0000af04 	andeq	sl, r0, r4, lsl #30
    12e0:	35040500 	strcc	r0, [r4, #-1280]	; 0xfffffb00
    12e4:	06000001 	streq	r0, [r0], -r1
    12e8:	000005dd 	ldrdeq	r0, [r0], -sp
    12ec:	00af1504 	adceq	r1, pc, r4, lsl #10
    12f0:	620b0000 	andvs	r0, fp, #0
    12f4:	62000001 	andvs	r0, r0, #1
    12f8:	0c000001 	stceq	0, cr0, [r0], {1}
    12fc:	4c040500 	cfstr32mi	mvfx0, [r4], {-0}
    1300:	0d000001 	stceq	0, cr0, [r0, #-4]
    1304:	000004a2 	andeq	r0, r0, r2, lsr #9
    1308:	01571c04 	cmpeq	r7, r4, lsl #24
    130c:	930d0000 	movwls	r0, #53248	; 0xd000
    1310:	04000003 	streq	r0, [r0], #-3
    1314:	00012e1d 	andeq	r2, r1, sp, lsl lr
    1318:	005b0b00 	subseq	r0, fp, r0, lsl #22
    131c:	018e0000 	orreq	r0, lr, r0
    1320:	8e0e0000 	cdphi	0, 0, cr0, cr14, cr0, {0}
    1324:	63000001 	movwvs	r0, #1
    1328:	07040400 	streq	r0, [r4, -r0, lsl #8]
    132c:	0000037a 	andeq	r0, r0, sl, ror r3
    1330:	000c200f 	andeq	r2, ip, pc
    1334:	7e030500 	cfsh32vc	mvfx0, mvfx3, #0
    1338:	05000001 	streq	r0, [r0, #-1]
    133c:	006a0c03 	rsbeq	r0, sl, r3, lsl #24
    1340:	0a8b0f20 	beq	fe2c4fc8 <firstTime.4040+0xde2bc5dc>
    1344:	03060000 	movweq	r0, #24576	; 0x6000
    1348:	0000017e 	andeq	r0, r0, lr, ror r1
    134c:	6a700305 	bvs	1c01f68 <startup-0x1e3fe098>
    1350:	d30f2000 	movwle	r2, #61440	; 0xf000
    1354:	0700000a 	streq	r0, [r0, -sl]
    1358:	00017e03 	andeq	r7, r1, r3, lsl #28
    135c:	d4030500 	strle	r0, [r3], #-1280	; 0xfffffb00
    1360:	0f20006a 	svceq	0x0020006a
    1364:	00000a7a 	andeq	r0, r0, sl, ror sl
    1368:	017e0308 	cmneq	lr, r8, lsl #6
    136c:	03050000 	movweq	r0, #20480	; 0x5000
    1370:	20006b38 	andcs	r6, r0, r8, lsr fp
    1374:	000bf90f 	andeq	pc, fp, pc, lsl #18
    1378:	7e030900 	vmlavc.f16	s0, s6, s0	; <UNPREDICTABLE>
    137c:	05000001 	streq	r0, [r0, #-1]
    1380:	006b9c03 	rsbeq	r9, fp, r3, lsl #24
    1384:	0ccd0f20 	stcleq	15, cr0, [sp], {32}
    1388:	030a0000 	movweq	r0, #40960	; 0xa000
    138c:	0000017e 	andeq	r0, r0, lr, ror r1
    1390:	6c000305 	stcvs	3, cr0, [r0], {5}
    1394:	a60f2000 	strge	r2, [pc], -r0
    1398:	0b00000a 	bleq	13c8 <startup-0x1fffec38>
    139c:	00017e03 	andeq	r7, r1, r3, lsl #28
    13a0:	64030500 	strvs	r0, [r3], #-1280	; 0xfffffb00
    13a4:	0f20006c 	svceq	0x0020006c
    13a8:	00000b94 	muleq	r0, r4, fp
    13ac:	017e030c 	cmneq	lr, ip, lsl #6
    13b0:	03050000 	movweq	r0, #20480	; 0x5000
    13b4:	20006cc8 	andcs	r6, r0, r8, asr #25
    13b8:	0009550f 	andeq	r5, r9, pc, lsl #10
    13bc:	7e030d00 	cdpvc	13, 0, cr0, cr3, cr0, {0}
    13c0:	05000001 	streq	r0, [r0, #-1]
    13c4:	006d2c03 	rsbeq	r2, sp, r3, lsl #24
    13c8:	0ab70f20 	beq	fedc5050 <firstTime.4040+0xdedbc664>
    13cc:	030e0000 	movweq	r0, #57344	; 0xe000
    13d0:	0000017e 	andeq	r0, r0, lr, ror r1
    13d4:	6d900305 	ldcvs	3, cr0, [r0, #20]
    13d8:	3b0f2000 	blcc	3c93e0 <startup-0x1fc36c20>
    13dc:	0f00000b 	svceq	0x0000000b
    13e0:	00017e03 	andeq	r7, r1, r3, lsl #28
    13e4:	f4030500 	vst3.8	{d0,d2,d4}, [r3], r0
    13e8:	0f20006d 	svceq	0x0020006d
    13ec:	00000971 	andeq	r0, r0, r1, ror r9
    13f0:	017e0310 	cmneq	lr, r0, lsl r3
    13f4:	03050000 	movweq	r0, #20480	; 0x5000
    13f8:	20006e58 	andcs	r6, r0, r8, asr lr
    13fc:	000ae40f 	andeq	lr, sl, pc, lsl #8
    1400:	7e031100 	adfvcs	f1, f3, f0
    1404:	05000001 	streq	r0, [r0, #-1]
    1408:	006ebc03 	rsbeq	fp, lr, r3, lsl #24
    140c:	0b040f20 	bleq	105094 <startup-0x1fefaf6c>
    1410:	03120000 	tsteq	r2, #0
    1414:	0000017e 	andeq	r0, r0, lr, ror r1
    1418:	6f200305 	svcvs	0x00200305
    141c:	9b0f2000 	blls	3c9424 <startup-0x1fc36bdc>
    1420:	13000009 	movwne	r0, #9
    1424:	00017e03 	andeq	r7, r1, r3, lsl #28
    1428:	84030500 	strhi	r0, [r3], #-1280	; 0xfffffb00
    142c:	1020006f 	eorne	r0, r0, pc, rrx
    1430:	00000ba4 	andeq	r0, r0, r4, lsr #23
    1434:	009e1501 	addseq	r1, lr, r1, lsl #10
    1438:	03050000 	movweq	r0, #20480	; 0x5000
    143c:	20003324 	andcs	r3, r0, r4, lsr #6
    1440:	0009d710 	andeq	sp, r9, r0, lsl r7
    1444:	9e160100 	muflss	f0, f6, f0
    1448:	05000000 	streq	r0, [r0, #-0]
    144c:	0032bc03 	eorseq	fp, r2, r3, lsl #24
    1450:	09c11020 	stmibeq	r1, {r5, ip}^
    1454:	17010000 	strne	r0, [r1, -r0]
    1458:	0000009e 	muleq	r0, lr, r0
    145c:	33b40305 			; <UNDEFINED> instruction: 0x33b40305
    1460:	19102000 	ldmdbne	r0, {sp}
    1464:	0100000a 	tsteq	r0, sl
    1468:	00009e18 	andeq	r9, r0, r8, lsl lr
    146c:	20030500 	andcs	r0, r3, r0, lsl #10
    1470:	10200033 	eorne	r0, r0, r3, lsr r0
    1474:	00000b14 	andeq	r0, r0, r4, lsl fp
    1478:	009e1901 	addseq	r1, lr, r1, lsl #18
    147c:	03050000 	movweq	r0, #20480	; 0x5000
    1480:	200033a4 	andcs	r3, r0, r4, lsr #7
    1484:	000baf10 	andeq	sl, fp, r0, lsl pc
    1488:	9e1a0100 	muflse	f0, f2, f0
    148c:	05000000 	streq	r0, [r0, #-0]
    1490:	00345803 	eorseq	r5, r4, r3, lsl #16
    1494:	09cc1020 	stmibeq	ip, {r5, ip}^
    1498:	1b010000 	blne	414a0 <startup-0x1ffbeb60>
    149c:	0000009e 	muleq	r0, lr, r0
    14a0:	33180305 	tstcc	r8, #335544320	; 0x14000000
    14a4:	3c102000 	ldccc	0, cr2, [r0], {-0}
    14a8:	0100000c 	tsteq	r0, ip
    14ac:	00009e1c 	andeq	r9, r0, ip, lsl lr
    14b0:	40030500 	andmi	r0, r3, r0, lsl #10
    14b4:	10200033 	eorne	r0, r0, r3, lsr r0
    14b8:	000009ac 	andeq	r0, r0, ip, lsr #19
    14bc:	009e1d01 	addseq	r1, lr, r1, lsl #26
    14c0:	03050000 	movweq	r0, #20480	; 0x5000
    14c4:	2000336c 	andcs	r3, r0, ip, ror #6
    14c8:	000b7a10 	andeq	r7, fp, r0, lsl sl
    14cc:	9e1e0100 	muflse	f0, f6, f0
    14d0:	05000000 	streq	r0, [r0, #-0]
    14d4:	00343c03 	eorseq	r3, r4, r3, lsl #24
    14d8:	0a0f1020 	beq	3c5560 <startup-0x1fc3aaa0>
    14dc:	1f010000 	svcne	0x00010000
    14e0:	0000009e 	muleq	r0, lr, r0
    14e4:	331c0305 	tstcc	ip, #335544320	; 0x14000000
    14e8:	84102000 	ldrhi	r2, [r0], #-0
    14ec:	0100000c 	tsteq	r0, ip
    14f0:	00009e20 	andeq	r9, r0, r0, lsr #28
    14f4:	b8030500 	stmdalt	r3, {r8, sl}
    14f8:	10200032 	eorne	r0, r0, r2, lsr r0
    14fc:	000009f0 	strdeq	r0, [r0], -r0	; <UNPREDICTABLE>
    1500:	009e2101 	addseq	r2, lr, r1, lsl #2
    1504:	03050000 	movweq	r0, #20480	; 0x5000
    1508:	200032cc 	andcs	r3, r0, ip, asr #5
    150c:	000c1610 	andeq	r1, ip, r0, lsl r6
    1510:	9e220100 	suflss	f0, f2, f0
    1514:	05000000 	streq	r0, [r0, #-0]
    1518:	00335003 	eorseq	r5, r3, r3
    151c:	0b551020 	bleq	15455a4 <startup-0x1eabaa5c>
    1520:	23010000 	movwcs	r0, #4096	; 0x1000
    1524:	0000009e 	muleq	r0, lr, r0
    1528:	33940305 	orrscc	r0, r4, #335544320	; 0x14000000
    152c:	53102000 	tstpl	r0, #0
    1530:	0100000c 	tsteq	r0, ip
    1534:	00006225 	andeq	r6, r0, r5, lsr #4
    1538:	34030500 	strcc	r0, [r3], #-1280	; 0xfffffb00
    153c:	10200033 	eorne	r0, r0, r3, lsr r0
    1540:	00000a54 	andeq	r0, r0, r4, asr sl
    1544:	00622601 	rsbeq	r2, r2, r1, lsl #12
    1548:	03050000 	movweq	r0, #20480	; 0x5000
    154c:	200033a8 	andcs	r3, r0, r8, lsr #7
    1550:	000c0910 	andeq	r0, ip, r0, lsl r9
    1554:	62270100 	eorvs	r0, r7, #0, 2
    1558:	05000000 	streq	r0, [r0, #-0]
    155c:	00334403 	eorseq	r4, r3, r3, lsl #8
    1560:	0b851020 	bleq	fe1455e8 <firstTime.4040+0xde13cbfc>
    1564:	28010000 	stmdacs	r1, {}	; <UNPREDICTABLE>
    1568:	00000062 	andeq	r0, r0, r2, rrx
    156c:	34400305 	strbcc	r0, [r0], #-773	; 0xfffffcfb
    1570:	46102000 	ldrmi	r2, [r0], -r0
    1574:	01000009 	tsteq	r0, r9
    1578:	00006229 	andeq	r6, r0, r9, lsr #4
    157c:	b8030500 	stmdalt	r3, {r8, sl}
    1580:	10200033 	eorne	r0, r0, r3, lsr r0
    1584:	00000a38 	andeq	r0, r0, r8, lsr sl
    1588:	00622a01 	rsbeq	r2, r2, r1, lsl #20
    158c:	03050000 	movweq	r0, #20480	; 0x5000
    1590:	20003360 	andcs	r3, r0, r0, ror #6
    1594:	000c6110 	andeq	r6, ip, r0, lsl r1
    1598:	622b0100 	eorvs	r0, fp, #0, 2
    159c:	05000000 	streq	r0, [r0, #-0]
    15a0:	00339803 	eorseq	r9, r3, r3, lsl #16
    15a4:	0af51020 	beq	ffd4562c <firstTime.4040+0xdfd3cc40>
    15a8:	2c010000 	stccs	0, cr0, [r1], {-0}
    15ac:	00000062 	andeq	r0, r0, r2, rrx
    15b0:	33dc0305 	bicscc	r0, ip, #335544320	; 0x14000000
    15b4:	2d102000 	ldccs	0, cr2, [r0, #-0]
    15b8:	0100000b 	tsteq	r0, fp
    15bc:	0000622d 	andeq	r6, r0, sp, lsr #4
    15c0:	e8030500 	stmda	r3, {r8, sl}
    15c4:	10200033 	eorne	r0, r0, r3, lsr r0
    15c8:	000009e1 	andeq	r0, r0, r1, ror #19
    15cc:	00622e01 	rsbeq	r2, r2, r1, lsl #28
    15d0:	03050000 	movweq	r0, #20480	; 0x5000
    15d4:	200032d0 	ldrdcs	r3, [r0], -r0
    15d8:	000b1e10 	andeq	r1, fp, r0, lsl lr
    15dc:	622f0100 	eorvs	r0, pc, #0, 2
    15e0:	05000000 	streq	r0, [r0, #-0]
    15e4:	0033d003 	eorseq	sp, r3, r3
    15e8:	0a461020 	beq	1185670 <startup-0x1ee7a990>
    15ec:	30010000 	andcc	r0, r1, r0
    15f0:	00000062 	andeq	r0, r0, r2, rrx
    15f4:	344c0305 	strbcc	r0, [ip], #-773	; 0xfffffcfb
    15f8:	6b102000 	blvs	409600 <startup-0x1fbf6a00>
    15fc:	0100000b 	tsteq	r0, fp
    1600:	00006231 	andeq	r6, r0, r1, lsr r2
    1604:	7c030500 	cfstr32vc	mvfx0, [r3], {-0}
    1608:	10200033 	eorne	r0, r0, r3, lsr r0
    160c:	00000982 	andeq	r0, r0, r2, lsl #19
    1610:	00623201 	rsbeq	r3, r2, r1, lsl #4
    1614:	03050000 	movweq	r0, #20480	; 0x5000
    1618:	20003354 	andcs	r3, r0, r4, asr r3
    161c:	000a6210 	andeq	r6, sl, r0, lsl r2
    1620:	62330100 	eorsvs	r0, r3, #0, 2
    1624:	05000000 	streq	r0, [r0, #-0]
    1628:	00337003 	eorseq	r7, r3, r3
    162c:	0bf11020 	bleq	ffc456b4 <firstTime.4040+0xdfc3ccc8>
    1630:	36010000 	strcc	r0, [r1], -r0
    1634:	0000014c 	andeq	r0, r0, ip, asr #2
    1638:	32e80305 	rsccc	r0, r8, #335544320	; 0x14000000
    163c:	31102000 	tstcc	r0, r0
    1640:	0100000c 	tsteq	r0, ip
    1644:	0000a437 	andeq	sl, r0, r7, lsr r4
    1648:	0c030500 	cfstr32eq	mvfx0, [r3], {-0}
    164c:	10200033 	eorne	r0, r0, r3, lsr r0
    1650:	00000cb8 			; <UNDEFINED> instruction: 0x00000cb8
    1654:	00a43801 	adceq	r3, r4, r1, lsl #16
    1658:	03050000 	movweq	r0, #20480	; 0x5000
    165c:	200032dc 	ldrdcs	r3, [r0], -ip
    1660:	000ac810 	andeq	ip, sl, r0, lsl r8
    1664:	a4390100 	ldrtge	r0, [r9], #-256	; 0xffffff00
    1668:	05000000 	streq	r0, [r0, #-0]
    166c:	0033c403 	eorseq	ip, r3, r3, lsl #8
    1670:	09661020 	stmdbeq	r6!, {r5, ip}^
    1674:	3a010000 	bcc	4167c <startup-0x1ffbe984>
    1678:	000000a4 	andeq	r0, r0, r4, lsr #1
    167c:	33280305 			; <UNDEFINED> instruction: 0x33280305
    1680:	8f102000 	svchi	0x00102000
    1684:	0100000c 	tsteq	r0, ip
    1688:	0000a43b 	andeq	sl, r0, fp, lsr r4
    168c:	88030500 	stmdahi	r3, {r8, sl}
    1690:	10200033 	eorne	r0, r0, r3, lsr r0
    1694:	00000a9b 	muleq	r0, fp, sl
    1698:	00a43c01 	adceq	r3, r4, r1, lsl #24
    169c:	03050000 	movweq	r0, #20480	; 0x5000
    16a0:	200032c0 	andcs	r3, r0, r0, asr #5
    16a4:	0000a40b 	andeq	sl, r0, fp, lsl #8
    16a8:	00051900 	andeq	r1, r5, r0, lsl #18
    16ac:	018e0e00 	orreq	r0, lr, r0, lsl #28
    16b0:	00050000 	andeq	r0, r5, r0
    16b4:	000b6010 	andeq	r6, fp, r0, lsl r0
    16b8:	093f0100 	ldmdbeq	pc!, {r8}	; <UNPREDICTABLE>
    16bc:	05000005 	streq	r0, [r0, #-5]
    16c0:	0033f403 	eorseq	pc, r3, r3, lsl #8
    16c4:	0be71120 	bleq	ff9c5b4c <firstTime.4040+0xdf9bd160>
    16c8:	76010000 	strvc	r0, [r1], -r0
    16cc:	20001308 	andcs	r1, r0, r8, lsl #6
    16d0:	00000158 	andeq	r0, r0, r8, asr r1
    16d4:	055f9c01 	ldrbeq	r9, [pc, #-3073]	; adb <startup-0x1ffff525>
    16d8:	f1120000 			; <UNDEFINED> instruction: 0xf1120000
    16dc:	0100000b 	tsteq	r0, fp
    16e0:	00016276 	andeq	r6, r1, r6, ror r2
    16e4:	6c910200 	lfmvs	f0, 4, [r1], {0}
    16e8:	0007f70f 	andeq	pc, r7, pc, lsl #14
    16ec:	2e770100 	rpwcss	f0, f7, f0
    16f0:	05000001 	streq	r0, [r0, #-1]
    16f4:	006fe803 	rsbeq	lr, pc, r3, lsl #16
    16f8:	f5130020 			; <UNDEFINED> instruction: 0xf5130020
    16fc:	01000003 	tsteq	r0, r3
    1700:	0010fc40 	andseq	pc, r0, r0, asr #24
    1704:	00020c20 	andeq	r0, r2, r0, lsr #24
    1708:	0f9c0100 	svceq	0x009c0100
    170c:	00000c70 	andeq	r0, r0, r0, ror ip
    1710:	009e4201 	addseq	r4, lr, r1, lsl #4
    1714:	91020000 	mrsls	r0, (UNDEF: 2)
    1718:	0c7a0f74 	ldcleq	15, cr0, [sl], #-464	; 0xfffffe30
    171c:	45010000 	strmi	r0, [r1, #-0]
    1720:	0000009e 	muleq	r0, lr, r0
    1724:	0f709102 	svceq	0x00709102
    1728:	00000a70 	andeq	r0, r0, r0, ror sl
    172c:	009e4801 	addseq	r4, lr, r1, lsl #16
    1730:	91020000 	mrsls	r0, (UNDEF: 2)
    1734:	09910f6c 	ldmibeq	r1, {r2, r3, r5, r6, r8, r9, sl, fp}
    1738:	4c010000 	stcmi	0, cr0, [r1], {-0}
    173c:	0000009e 	muleq	r0, lr, r0
    1740:	0f689102 	svceq	0x00689102
    1744:	00000c9a 	muleq	r0, sl, ip
    1748:	009e4f01 	addseq	r4, lr, r1, lsl #30
    174c:	91020000 	mrsls	r0, (UNDEF: 2)
    1750:	0a2e0f64 	beq	b854e8 <startup-0x1f47ab18>
    1754:	52010000 	andpl	r0, r1, #0
    1758:	0000009e 	muleq	r0, lr, r0
    175c:	0f609102 	svceq	0x00609102
    1760:	00000c46 	andeq	r0, r0, r6, asr #24
    1764:	009e5701 	addseq	r5, lr, r1, lsl #14
    1768:	91020000 	mrsls	r0, (UNDEF: 2)
    176c:	0ca40f5c 	stceq	15, cr0, [r4], #368	; 0x170
    1770:	5a010000 	bpl	41778 <startup-0x1ffbe888>
    1774:	0000009e 	muleq	r0, lr, r0
    1778:	0f589102 	svceq	0x00589102
    177c:	00000cae 	andeq	r0, r0, lr, lsr #25
    1780:	009e5d01 	addseq	r5, lr, r1, lsl #26
    1784:	91020000 	mrsls	r0, (UNDEF: 2)
    1788:	09b70f54 	ldmibeq	r7!, {r2, r4, r6, r8, r9, sl, fp}
    178c:	61010000 	mrsvs	r0, (UNDEF: 1)
    1790:	0000009e 	muleq	r0, lr, r0
    1794:	0f509102 	svceq	0x00509102
    1798:	000009fb 	strdeq	r0, [r0], -fp
    179c:	009e6401 	addseq	r6, lr, r1, lsl #8
    17a0:	91020000 	mrsls	r0, (UNDEF: 2)
    17a4:	0a050f4c 	beq	1454dc <startup-0x1febab24>
    17a8:	67010000 	strvs	r0, [r1, -r0]
    17ac:	0000009e 	muleq	r0, lr, r0
    17b0:	0f489102 	svceq	0x00489102
    17b4:	00000cc3 	andeq	r0, r0, r3, asr #25
    17b8:	009e6b01 	addseq	r6, lr, r1, lsl #22
    17bc:	91020000 	mrsls	r0, (UNDEF: 2)
    17c0:	0b4b0f44 	bleq	12c54d8 <startup-0x1ed3ab28>
    17c4:	6e010000 	cdpvs	0, 0, cr0, cr1, cr0, {0}
    17c8:	0000009e 	muleq	r0, lr, r0
    17cc:	0f409102 	svceq	0x00409102
    17d0:	00000a24 	andeq	r0, r0, r4, lsr #20
    17d4:	009e7101 	addseq	r7, lr, r1, lsl #2
    17d8:	91030000 	mrsls	r0, (UNDEF: 3)
    17dc:	00007fbc 			; <UNDEFINED> instruction: 0x00007fbc
    17e0:	00000498 	muleq	r0, r8, r4
    17e4:	04f10004 	ldrbteq	r0, [r1], #4
    17e8:	01040000 	mrseq	r0, (UNDEF: 4)
    17ec:	00000077 	andeq	r0, r0, r7, ror r0
    17f0:	000e910c 	andeq	r9, lr, ip, lsl #2
    17f4:	00146000 	andseq	r6, r4, r0
    17f8:	00023820 	andeq	r3, r2, r0, lsr #16
    17fc:	00073c00 	andeq	r3, r7, r0, lsl #24
    1800:	020c0200 	andeq	r0, ip, #0, 4
    1804:	00004e05 	andeq	r4, r0, r5, lsl #28
    1808:	02e40300 	rsceq	r0, r4, #0, 6
    180c:	07020000 	streq	r0, [r2, -r0]
    1810:	0000004e 	andeq	r0, r0, lr, asr #32
    1814:	06070300 	streq	r0, [r7], -r0, lsl #6
    1818:	08020000 	stmdaeq	r2, {}	; <UNPREDICTABLE>
    181c:	0000004e 	andeq	r0, r0, lr, asr #32
    1820:	10170304 	andsne	r0, r7, r4, lsl #6
    1824:	09020000 	stmdbeq	r2, {}	; <UNPREDICTABLE>
    1828:	00000055 	andeq	r0, r0, r5, asr r0
    182c:	04040008 	streq	r0, [r4], #-8
    1830:	00030807 	andeq	r0, r3, r7, lsl #16
    1834:	5b040500 	blpl	102c3c <startup-0x1fefd3c4>
    1838:	04000000 	streq	r0, [r0], #-0
    183c:	041f0801 	ldreq	r0, [pc], #-2049	; 1844 <startup-0x1fffe7bc>
    1840:	69060000 	stmdbvs	r6, {}	; <UNPREDICTABLE>
    1844:	02000011 	andeq	r0, r0, #17
    1848:	0000210a 	andeq	r2, r0, sl, lsl #2
    184c:	00160700 	andseq	r0, r6, r0, lsl #14
    1850:	030c0000 	movweq	r0, #49152	; 0xc000
    1854:	00009e06 	andeq	r9, r0, r6, lsl #28
    1858:	04f50300 	ldrbteq	r0, [r5], #768	; 0x300
    185c:	07030000 	streq	r0, [r3, -r0]
    1860:	0000009e 	muleq	r0, lr, r0
    1864:	001d0300 	andseq	r0, sp, r0, lsl #6
    1868:	08030000 	stmdaeq	r3, {}	; <UNPREDICTABLE>
    186c:	0000009e 	muleq	r0, lr, r0
    1870:	00120304 	andseq	r0, r2, r4, lsl #6
    1874:	09030000 	stmdbeq	r3, {}	; <UNPREDICTABLE>
    1878:	0000009e 	muleq	r0, lr, r0
    187c:	04050008 	streq	r0, [r5], #-8
    1880:	00000062 	andeq	r0, r0, r2, rrx
    1884:	000c3606 	andeq	r3, ip, r6, lsl #12
    1888:	6d0a0300 	stcvs	3, cr0, [sl, #-0]
    188c:	07000000 	streq	r0, [r0, -r0]
    1890:	000005dc 	ldrdeq	r0, [r0], -ip
    1894:	28060424 	stmdacs	r6, {r2, r5, sl}
    1898:	03000001 	movweq	r0, #1
    189c:	000003bc 			; <UNDEFINED> instruction: 0x000003bc
    18a0:	01280704 			; <UNDEFINED> instruction: 0x01280704
    18a4:	03000000 	movweq	r0, #0
    18a8:	000005e8 	andeq	r0, r0, r8, ror #11
    18ac:	012e0804 			; <UNDEFINED> instruction: 0x012e0804
    18b0:	03040000 	movweq	r0, #16384	; 0x4000
    18b4:	00000560 	andeq	r0, r0, r0, ror #10
    18b8:	012e0904 			; <UNDEFINED> instruction: 0x012e0904
    18bc:	03080000 	movweq	r0, #32768	; 0x8000
    18c0:	0000057b 	andeq	r0, r0, fp, ror r5
    18c4:	01460c04 	cmpeq	r6, r4, lsl #24
    18c8:	030c0000 	movweq	r0, #49152	; 0xc000
    18cc:	000002dd 	ldrdeq	r0, [r0], -sp
    18d0:	01460d04 	cmpeq	r6, r4, lsl #26
    18d4:	03100000 	tsteq	r0, #0
    18d8:	000003ce 	andeq	r0, r0, lr, asr #7
    18dc:	012e1004 			; <UNDEFINED> instruction: 0x012e1004
    18e0:	03140000 	tsteq	r4, #0
    18e4:	00000048 	andeq	r0, r0, r8, asr #32
    18e8:	012e1104 			; <UNDEFINED> instruction: 0x012e1104
    18ec:	03180000 	tsteq	r8, #0
    18f0:	0000034d 	andeq	r0, r0, sp, asr #6
    18f4:	012e1204 			; <UNDEFINED> instruction: 0x012e1204
    18f8:	031c0000 	tsteq	ip, #0
    18fc:	0000035d 	andeq	r0, r0, sp, asr r3
    1900:	012e1304 			; <UNDEFINED> instruction: 0x012e1304
    1904:	00200000 	eoreq	r0, r0, r0
    1908:	00a40405 	adceq	r0, r4, r5, lsl #8
    190c:	04080000 	streq	r0, [r8], #-0
    1910:	746e6905 	strbtvc	r6, [lr], #-2309	; 0xfffff6fb
    1914:	01400900 	cmpeq	r0, r0, lsl #18
    1918:	400a0000 	andmi	r0, sl, r0
    191c:	00000001 	andeq	r0, r0, r1
    1920:	00af0405 	adceq	r0, pc, r5, lsl #8
    1924:	04050000 	streq	r0, [r5], #-0
    1928:	00000135 	andeq	r0, r0, r5, lsr r1
    192c:	0005dd06 	andeq	sp, r5, r6, lsl #26
    1930:	af150400 	svcge	0x00150400
    1934:	0b000000 	bleq	193c <startup-0x1fffe6c4>
    1938:	00000162 	andeq	r0, r0, r2, ror #2
    193c:	00000162 	andeq	r0, r0, r2, ror #2
    1940:	0405000c 	streq	r0, [r5], #-12
    1944:	0000014c 	andeq	r0, r0, ip, asr #2
    1948:	0004a20d 	andeq	sl, r4, sp, lsl #4
    194c:	571c0400 	ldrpl	r0, [ip, -r0, lsl #8]
    1950:	0d000001 	stceq	0, cr0, [r0, #-4]
    1954:	00000393 	muleq	r0, r3, r3
    1958:	012e1d04 			; <UNDEFINED> instruction: 0x012e1d04
    195c:	5b0b0000 	blpl	2c1964 <startup-0x1fd3e69c>
    1960:	8e000000 	cdphi	0, 0, cr0, cr0, cr0, {0}
    1964:	0e000001 	cdpeq	0, 0, cr0, cr0, cr1, {0}
    1968:	0000018e 	andeq	r0, r0, lr, lsl #3
    196c:	04040035 	streq	r0, [r4], #-53	; 0xffffffcb
    1970:	00037a07 	andeq	r7, r3, r7, lsl #20
    1974:	0d0d0f00 	stceq	15, cr0, [sp, #-0]
    1978:	03050000 	movweq	r0, #20480	; 0x5000
    197c:	0000017e 	andeq	r0, r0, lr, ror r1
    1980:	6fec0305 	svcvs	0x00ec0305
    1984:	bf0f2000 	svclt	0x000f2000
    1988:	0600000e 	streq	r0, [r0], -lr
    198c:	00017e03 	andeq	r7, r1, r3, lsl #28
    1990:	24030500 	strcs	r0, [r3], #-1280	; 0xfffffb00
    1994:	0f200070 	svceq	0x00200070
    1998:	00000e17 	andeq	r0, r0, r7, lsl lr
    199c:	017e0307 	cmneq	lr, r7, lsl #6
    19a0:	03050000 	movweq	r0, #20480	; 0x5000
    19a4:	2000705c 	andcs	r7, r0, ip, asr r0
    19a8:	000db00f 	andeq	fp, sp, pc
    19ac:	7e030800 	cdpvc	8, 0, cr0, cr3, cr0, {0}
    19b0:	05000001 	streq	r0, [r0, #-1]
    19b4:	00709403 	rsbseq	r9, r0, r3, lsl #8
    19b8:	0e290f20 	cdpeq	15, 2, cr0, cr9, cr0, {1}
    19bc:	03090000 	movweq	r0, #36864	; 0x9000
    19c0:	0000017e 	andeq	r0, r0, lr, ror r1
    19c4:	70cc0305 	sbcvc	r0, ip, r5, lsl #6
    19c8:	5b0f2000 	blpl	3c99d0 <startup-0x1fc36630>
    19cc:	0a00000d 	beq	1a08 <startup-0x1fffe5f8>
    19d0:	00017e03 	andeq	r7, r1, r3, lsl #28
    19d4:	04030500 	streq	r0, [r3], #-1280	; 0xfffffb00
    19d8:	0f200071 	svceq	0x00200071
    19dc:	00000ed0 	ldrdeq	r0, [r0], -r0	; <UNPREDICTABLE>
    19e0:	017e030b 	cmneq	lr, fp, lsl #6
    19e4:	03050000 	movweq	r0, #20480	; 0x5000
    19e8:	2000713c 	andcs	r7, r0, ip, lsr r1
    19ec:	000d850f 	andeq	r8, sp, pc, lsl #10
    19f0:	7e030c00 	cdpvc	12, 0, cr0, cr3, cr0, {0}
    19f4:	05000001 	streq	r0, [r0, #-1]
    19f8:	00717403 	rsbseq	r7, r1, r3, lsl #8
    19fc:	0dc20f20 	stcleq	15, cr0, [r2, #128]	; 0x80
    1a00:	030d0000 	movweq	r0, #53248	; 0xd000
    1a04:	0000017e 	andeq	r0, r0, lr, ror r1
    1a08:	71ac0305 			; <UNDEFINED> instruction: 0x71ac0305
    1a0c:	5e102000 	cdppl	0, 1, cr2, cr0, cr0, {0}
    1a10:	0100000e 	tsteq	r0, lr
    1a14:	00009e0e 	andeq	r9, r0, lr, lsl #28
    1a18:	30030500 	andcc	r0, r3, r0, lsl #10
    1a1c:	10200035 	eorne	r0, r0, r5, lsr r0
    1a20:	00000cea 	andeq	r0, r0, sl, ror #25
    1a24:	009e0f01 	addseq	r0, lr, r1, lsl #30
    1a28:	03050000 	movweq	r0, #20480	; 0x5000
    1a2c:	2000345c 	andcs	r3, r0, ip, asr r4
    1a30:	000d3f10 	andeq	r3, sp, r0, lsl pc
    1a34:	9e100100 	muflss	f0, f0, f0
    1a38:	05000000 	streq	r0, [r0, #-0]
    1a3c:	00355c03 	eorseq	r5, r5, r3, lsl #24
    1a40:	0cde1020 	ldcleq	0, cr1, [lr], {32}
    1a44:	11010000 	mrsne	r0, (UNDEF: 1)
    1a48:	0000009e 	muleq	r0, lr, r0
    1a4c:	356c0305 	strbcc	r0, [ip, #-773]!	; 0xfffffcfb
    1a50:	df102000 	svcle	0x00102000
    1a54:	0100000d 	tsteq	r0, sp
    1a58:	00009e12 	andeq	r9, r0, r2, lsl lr
    1a5c:	d0030500 	andle	r0, r3, r0, lsl #10
    1a60:	10200034 	eorne	r0, r0, r4, lsr r0
    1a64:	00000e46 	andeq	r0, r0, r6, asr #28
    1a68:	009e1301 	addseq	r1, lr, r1, lsl #6
    1a6c:	03050000 	movweq	r0, #20480	; 0x5000
    1a70:	20003460 	andcs	r3, r0, r0, ror #8
    1a74:	000d7910 	andeq	r7, sp, r0, lsl r9
    1a78:	9e140100 	muflss	f0, f4, f0
    1a7c:	05000000 	streq	r0, [r0, #-0]
    1a80:	0034f803 	eorseq	pc, r4, r3, lsl #16
    1a84:	0dd41020 	ldcleq	0, cr1, [r4, #128]	; 0x80
    1a88:	15010000 	strne	r0, [r1, #-0]
    1a8c:	0000009e 	muleq	r0, lr, r0
    1a90:	35340305 	ldrcc	r0, [r4, #-773]!	; 0xfffffcfb
    1a94:	6a102000 	bvs	409a9c <startup-0x1fbf6564>
    1a98:	0100000e 	tsteq	r0, lr
    1a9c:	00009e16 	andeq	r9, r0, r6, lsl lr
    1aa0:	20030500 	andcs	r0, r3, r0, lsl #10
    1aa4:	10200035 	eorne	r0, r0, r5, lsr r0
    1aa8:	00000da1 	andeq	r0, r0, r1, lsr #27
    1aac:	00621801 	rsbeq	r1, r2, r1, lsl #16
    1ab0:	03050000 	movweq	r0, #20480	; 0x5000
    1ab4:	200034ac 	andcs	r3, r0, ip, lsr #9
    1ab8:	000cf510 	andeq	pc, ip, r0, lsl r5	; <UNPREDICTABLE>
    1abc:	62190100 	andsvs	r0, r9, #0, 2
    1ac0:	05000000 	streq	r0, [r0, #-0]
    1ac4:	00354403 	eorseq	r4, r5, r3, lsl #8
    1ac8:	0dea1020 	stcleq	0, cr1, [sl, #128]!	; 0x80
    1acc:	1a010000 	bne	41ad4 <startup-0x1ffbe52c>
    1ad0:	00000062 	andeq	r0, r0, r2, rrx
    1ad4:	34d40305 	ldrbcc	r0, [r4], #773	; 0x305
    1ad8:	4b102000 	blmi	409ae0 <startup-0x1fbf6520>
    1adc:	0100000d 	tsteq	r0, sp
    1ae0:	0000621b 	andeq	r6, r0, fp, lsl r2
    1ae4:	a0030500 	andge	r0, r3, r0, lsl #10
    1ae8:	10200034 	eorne	r0, r0, r4, lsr r0
    1aec:	00000d2f 	andeq	r0, r0, pc, lsr #26
    1af0:	00621c01 	rsbeq	r1, r2, r1, lsl #24
    1af4:	03050000 	movweq	r0, #20480	; 0x5000
    1af8:	20003550 	andcs	r3, r0, r0, asr r5
    1afc:	000df810 	andeq	pc, sp, r0, lsl r8	; <UNPREDICTABLE>
    1b00:	621d0100 	andsvs	r0, sp, #0, 2
    1b04:	05000000 	streq	r0, [r0, #-0]
    1b08:	0034ec03 	eorseq	lr, r4, r3, lsl #24
    1b0c:	0e071020 	cdpeq	0, 0, cr1, cr7, cr0, {1}
    1b10:	1e010000 	cdpne	0, 0, cr0, cr1, cr0, {0}
    1b14:	00000062 	andeq	r0, r0, r2, rrx
    1b18:	34e00305 	strbtcc	r0, [r0], #773	; 0x305
    1b1c:	1f102000 	svcne	0x00102000
    1b20:	0100000d 	tsteq	r0, sp
    1b24:	0000621f 	andeq	r6, r0, pc, lsl r2
    1b28:	b8030500 	stmdalt	r3, {r8, sl}
    1b2c:	10200034 	eorne	r0, r0, r4, lsr r0
    1b30:	00000e82 	andeq	r0, r0, r2, lsl #29
    1b34:	00622001 	rsbeq	r2, r2, r1
    1b38:	03050000 	movweq	r0, #20480	; 0x5000
    1b3c:	20003524 	andcs	r3, r0, r4, lsr #10
    1b40:	000d0410 	andeq	r0, sp, r0, lsl r4
    1b44:	4c230100 	stfmis	f0, [r3], #-0
    1b48:	05000001 	streq	r0, [r0, #-1]
    1b4c:	0034fc03 	eorseq	pc, r4, r3, lsl #24
    1b50:	0e521020 	cdpeq	0, 5, cr1, cr2, cr0, {1}
    1b54:	24010000 	strcs	r0, [r1], #-0
    1b58:	000000a4 	andeq	r0, r0, r4, lsr #1
    1b5c:	35380305 	ldrcc	r0, [r8, #-773]!	; 0xfffffcfb
    1b60:	e2102000 	ands	r2, r0, #0
    1b64:	0100000e 	tsteq	r0, lr
    1b68:	0000a425 	andeq	sl, r0, r5, lsr #8
    1b6c:	94030500 	strls	r0, [r3], #-1280	; 0xfffffb00
    1b70:	10200034 	eorne	r0, r0, r4, lsr r0
    1b74:	00000d6d 	andeq	r0, r0, sp, ror #26
    1b78:	00a42601 	adceq	r2, r4, r1, lsl #12
    1b7c:	03050000 	movweq	r0, #20480	; 0x5000
    1b80:	20003560 	andcs	r3, r0, r0, ror #10
    1b84:	000e3a10 	andeq	r3, lr, r0, lsl sl
    1b88:	a4270100 	strtge	r0, [r7], #-256	; 0xffffff00
    1b8c:	05000000 	streq	r0, [r0, #-0]
    1b90:	0034c403 	eorseq	ip, r4, r3, lsl #8
    1b94:	00a40b20 	adceq	r0, r4, r0, lsr #22
    1b98:	03c50000 	biceq	r0, r5, #0
    1b9c:	8e0e0000 	cdphi	0, 0, cr0, cr14, cr0, {0}
    1ba0:	03000001 	movweq	r0, #1
    1ba4:	0e761000 	cdpeq	0, 7, cr1, cr6, cr0, {0}
    1ba8:	28010000 	stmdacs	r1, {}	; <UNPREDICTABLE>
    1bac:	000003b5 			; <UNDEFINED> instruction: 0x000003b5
    1bb0:	34640305 	strbtcc	r0, [r4], #-773	; 0xfffffcfb
    1bb4:	96112000 	ldrls	r2, [r1], -r0
    1bb8:	0100000d 	tsteq	r0, sp
    1bbc:	0015a04c 	andseq	sl, r5, ip, asr #32
    1bc0:	0000f820 	andeq	pc, r0, r0, lsr #16
    1bc4:	0b9c0100 	bleq	fe701fcc <firstTime.4040+0xde6f95e0>
    1bc8:	12000004 	andne	r0, r0, #4
    1bcc:	00000d04 	andeq	r0, r0, r4, lsl #26
    1bd0:	01624c01 	cmneq	r2, r1, lsl #24
    1bd4:	91020000 	mrsls	r0, (UNDEF: 2)
    1bd8:	07f70f6c 	ldrbeq	r0, [r7, ip, ror #30]!
    1bdc:	4d010000 	stcmi	0, cr0, [r1, #-0]
    1be0:	0000012e 	andeq	r0, r0, lr, lsr #2
    1be4:	71e40305 	mvnvc	r0, r5, lsl #6
    1be8:	13002000 	movwne	r2, #0
    1bec:	000003f5 	strdeq	r0, [r0], -r5
    1bf0:	14602901 	strbtne	r2, [r0], #-2305	; 0xfffff6ff
    1bf4:	01402000 	mrseq	r2, (UNDEF: 64)
    1bf8:	9c010000 	stcls	0, cr0, [r1], {-0}
    1bfc:	000c700f 	andeq	r7, ip, pc
    1c00:	9e2b0100 	suflse	f0, f3, f0
    1c04:	02000000 	andeq	r0, r0, #0
    1c08:	7a0f7491 	bvc	3dee54 <startup-0x1fc211ac>
    1c0c:	0100000c 	tsteq	r0, ip
    1c10:	00009e2e 	andeq	r9, r0, lr, lsr #28
    1c14:	70910200 	addsvc	r0, r1, r0, lsl #4
    1c18:	000a700f 	andeq	r7, sl, pc
    1c1c:	9e310100 	rsflss	f0, f1, f0
    1c20:	02000000 	andeq	r0, r0, #0
    1c24:	910f6c91 			; <UNDEFINED> instruction: 0x910f6c91
    1c28:	01000009 	tsteq	r0, r9
    1c2c:	00009e35 	andeq	r9, r0, r5, lsr lr
    1c30:	68910200 	ldmvs	r1, {r9}
    1c34:	000c9a0f 	andeq	r9, ip, pc, lsl #20
    1c38:	9e380100 	rsflse	f0, f0, f0
    1c3c:	02000000 	andeq	r0, r0, #0
    1c40:	2e0f6491 	mcrcs	4, 0, r6, cr15, cr1, {4}
    1c44:	0100000a 	tsteq	r0, sl
    1c48:	00009e3b 	andeq	r9, r0, fp, lsr lr
    1c4c:	60910200 	addsvs	r0, r1, r0, lsl #4
    1c50:	000c460f 	andeq	r4, ip, pc, lsl #12
    1c54:	9e400100 	dvflss	f0, f0, f0
    1c58:	02000000 	andeq	r0, r0, #0
    1c5c:	a40f5c91 	strge	r5, [pc], #-3217	; 1c64 <startup-0x1fffe39c>
    1c60:	0100000c 	tsteq	r0, ip
    1c64:	00009e43 	andeq	r9, r0, r3, asr #28
    1c68:	58910200 	ldmpl	r1, {r9}
    1c6c:	000cae0f 	andeq	sl, ip, pc, lsl #28
    1c70:	9e460100 	dvflss	f0, f6, f0
    1c74:	02000000 	andeq	r0, r0, #0
    1c78:	00005491 	muleq	r0, r1, r4
    1c7c:	0000089f 	muleq	r0, pc, r8	; <UNPREDICTABLE>
    1c80:	05f10004 	ldrbeq	r0, [r1, #4]!
    1c84:	01040000 	mrseq	r0, (UNDEF: 4)
    1c88:	00000077 	andeq	r0, r0, r7, ror r0
    1c8c:	000fd90c 	andeq	sp, pc, ip, lsl #18
    1c90:	00169800 	andseq	r9, r6, r0, lsl #16
    1c94:	000e4420 	andeq	r4, lr, r0, lsr #8
    1c98:	0008a100 	andeq	sl, r8, r0, lsl #2
    1c9c:	020c0200 	andeq	r0, ip, #0, 4
    1ca0:	00004e05 	andeq	r4, r0, r5, lsl #28
    1ca4:	02e40300 	rsceq	r0, r4, #0, 6
    1ca8:	07020000 	streq	r0, [r2, -r0]
    1cac:	0000004e 	andeq	r0, r0, lr, asr #32
    1cb0:	06070300 	streq	r0, [r7], -r0, lsl #6
    1cb4:	08020000 	stmdaeq	r2, {}	; <UNPREDICTABLE>
    1cb8:	0000004e 	andeq	r0, r0, lr, asr #32
    1cbc:	10170304 	andsne	r0, r7, r4, lsl #6
    1cc0:	09020000 	stmdbeq	r2, {}	; <UNPREDICTABLE>
    1cc4:	00000055 	andeq	r0, r0, r5, asr r0
    1cc8:	04040008 	streq	r0, [r4], #-8
    1ccc:	00030807 	andeq	r0, r3, r7, lsl #16
    1cd0:	5b040500 	blpl	1030d8 <startup-0x1fefcf28>
    1cd4:	04000000 	streq	r0, [r0], #-0
    1cd8:	041f0801 	ldreq	r0, [pc], #-2049	; 1ce0 <startup-0x1fffe320>
    1cdc:	69060000 	stmdbvs	r6, {}	; <UNPREDICTABLE>
    1ce0:	02000011 	andeq	r0, r0, #17
    1ce4:	0000210a 	andeq	r2, r0, sl, lsl #2
    1ce8:	00160700 	andseq	r0, r6, r0, lsl #14
    1cec:	030c0000 	movweq	r0, #49152	; 0xc000
    1cf0:	00009e06 	andeq	r9, r0, r6, lsl #28
    1cf4:	04f50300 	ldrbteq	r0, [r5], #768	; 0x300
    1cf8:	07030000 	streq	r0, [r3, -r0]
    1cfc:	0000009e 	muleq	r0, lr, r0
    1d00:	001d0300 	andseq	r0, sp, r0, lsl #6
    1d04:	08030000 	stmdaeq	r3, {}	; <UNPREDICTABLE>
    1d08:	0000009e 	muleq	r0, lr, r0
    1d0c:	00120304 	andseq	r0, r2, r4, lsl #6
    1d10:	09030000 	stmdbeq	r3, {}	; <UNPREDICTABLE>
    1d14:	0000009e 	muleq	r0, lr, r0
    1d18:	04050008 	streq	r0, [r5], #-8
    1d1c:	00000062 	andeq	r0, r0, r2, rrx
    1d20:	000c3606 	andeq	r3, ip, r6, lsl #12
    1d24:	6d0a0300 	stcvs	3, cr0, [sl, #-0]
    1d28:	07000000 	streq	r0, [r0, -r0]
    1d2c:	000005dc 	ldrdeq	r0, [r0], -ip
    1d30:	28060424 	stmdacs	r6, {r2, r5, sl}
    1d34:	03000001 	movweq	r0, #1
    1d38:	000003bc 			; <UNDEFINED> instruction: 0x000003bc
    1d3c:	01280704 			; <UNDEFINED> instruction: 0x01280704
    1d40:	03000000 	movweq	r0, #0
    1d44:	000005e8 	andeq	r0, r0, r8, ror #11
    1d48:	012e0804 			; <UNDEFINED> instruction: 0x012e0804
    1d4c:	03040000 	movweq	r0, #16384	; 0x4000
    1d50:	00000560 	andeq	r0, r0, r0, ror #10
    1d54:	012e0904 			; <UNDEFINED> instruction: 0x012e0904
    1d58:	03080000 	movweq	r0, #32768	; 0x8000
    1d5c:	0000057b 	andeq	r0, r0, fp, ror r5
    1d60:	01460c04 	cmpeq	r6, r4, lsl #24
    1d64:	030c0000 	movweq	r0, #49152	; 0xc000
    1d68:	000002dd 	ldrdeq	r0, [r0], -sp
    1d6c:	01460d04 	cmpeq	r6, r4, lsl #26
    1d70:	03100000 	tsteq	r0, #0
    1d74:	000003ce 	andeq	r0, r0, lr, asr #7
    1d78:	012e1004 			; <UNDEFINED> instruction: 0x012e1004
    1d7c:	03140000 	tsteq	r4, #0
    1d80:	00000048 	andeq	r0, r0, r8, asr #32
    1d84:	012e1104 			; <UNDEFINED> instruction: 0x012e1104
    1d88:	03180000 	tsteq	r8, #0
    1d8c:	0000034d 	andeq	r0, r0, sp, asr #6
    1d90:	012e1204 			; <UNDEFINED> instruction: 0x012e1204
    1d94:	031c0000 	tsteq	ip, #0
    1d98:	0000035d 	andeq	r0, r0, sp, asr r3
    1d9c:	012e1304 			; <UNDEFINED> instruction: 0x012e1304
    1da0:	00200000 	eoreq	r0, r0, r0
    1da4:	00a40405 	adceq	r0, r4, r5, lsl #8
    1da8:	04080000 	streq	r0, [r8], #-0
    1dac:	746e6905 	strbtvc	r6, [lr], #-2309	; 0xfffff6fb
    1db0:	01400900 	cmpeq	r0, r0, lsl #18
    1db4:	400a0000 	andmi	r0, sl, r0
    1db8:	00000001 	andeq	r0, r0, r1
    1dbc:	00af0405 	adceq	r0, pc, r5, lsl #8
    1dc0:	04050000 	streq	r0, [r5], #-0
    1dc4:	00000135 	andeq	r0, r0, r5, lsr r1
    1dc8:	0005dd06 	andeq	sp, r5, r6, lsl #26
    1dcc:	af150400 	svcge	0x00150400
    1dd0:	0b000000 	bleq	1dd8 <startup-0x1fffe228>
    1dd4:	00000162 	andeq	r0, r0, r2, ror #2
    1dd8:	00000162 	andeq	r0, r0, r2, ror #2
    1ddc:	0405000c 	streq	r0, [r5], #-12
    1de0:	0000014c 	andeq	r0, r0, ip, asr #2
    1de4:	0004a20d 	andeq	sl, r4, sp, lsl #4
    1de8:	571c0400 	ldrpl	r0, [ip, -r0, lsl #8]
    1dec:	0d000001 	stceq	0, cr0, [r0, #-4]
    1df0:	00000393 	muleq	r0, r3, r3
    1df4:	012e1d04 			; <UNDEFINED> instruction: 0x012e1d04
    1df8:	a6060000 	strge	r0, [r6], -r0
    1dfc:	05000005 	streq	r0, [r0, #-5]
    1e00:	00005b24 	andeq	r5, r0, r4, lsr #22
    1e04:	017e0b00 	cmneq	lr, r0, lsl #22
    1e08:	019a0000 	orrseq	r0, sl, r0
    1e0c:	9a0e0000 	bls	381e14 <startup-0x1fc7e1ec>
    1e10:	ff000001 			; <UNDEFINED> instruction: 0xff000001
    1e14:	04040003 	streq	r0, [r4], #-3
    1e18:	00037a07 	andeq	r7, r3, r7, lsl #20
    1e1c:	0f4d0d00 	svceq	0x004d0d00
    1e20:	2b050000 	blcs	141e28 <startup-0x1febe1d8>
    1e24:	00000189 	andeq	r0, r0, r9, lsl #3
    1e28:	0002000d 	andeq	r0, r2, sp
    1e2c:	892c0500 	stmdbhi	ip!, {r8, sl}
    1e30:	0d000001 	stceq	0, cr0, [r0, #-4]
    1e34:	0000042d 	andeq	r0, r0, sp, lsr #8
    1e38:	01892d05 	orreq	r2, r9, r5, lsl #26
    1e3c:	ea0d0000 	b	341e44 <startup-0x1fcbe1bc>
    1e40:	05000002 	streq	r0, [r0, #-2]
    1e44:	0001892e 	andeq	r8, r1, lr, lsr #18
    1e48:	027a0d00 	rsbseq	r0, sl, #0, 26
    1e4c:	2f050000 	svccs	0x00050000
    1e50:	00000189 	andeq	r0, r0, r9, lsl #3
    1e54:	0005be0d 	andeq	fp, r5, sp, lsl #28
    1e58:	89300500 	ldmdbhi	r0!, {r8, sl}
    1e5c:	0d000001 	stceq	0, cr0, [r0, #-4]
    1e60:	000005ae 	andeq	r0, r0, lr, lsr #11
    1e64:	01893105 	orreq	r3, r9, r5, lsl #2
    1e68:	ac0f0000 	stcge	0, cr0, [pc], {-0}
    1e6c:	01000001 	tsteq	r0, r1
    1e70:	7003052b 	andvc	r0, r3, fp, lsr #10
    1e74:	0f200045 	svceq	0x00200045
    1e78:	000001b7 			; <UNDEFINED> instruction: 0x000001b7
    1e7c:	03052c01 	movweq	r2, #23553	; 0x5c01
    1e80:	20003970 	andcs	r3, r0, r0, ror r9
    1e84:	0001c20f 	andeq	ip, r1, pc, lsl #4
    1e88:	052d0100 	streq	r0, [sp, #-256]!	; 0xffffff00
    1e8c:	00417003 	subeq	r7, r1, r3
    1e90:	01cd0f20 	biceq	r0, sp, r0, lsr #30
    1e94:	2e010000 	cdpcs	0, 0, cr0, cr1, cr0, {0}
    1e98:	49700305 	ldmdbmi	r0!, {r0, r2, r8, r9}^
    1e9c:	a10f2000 	mrsge	r2, CPSR
    1ea0:	01000001 	tsteq	r0, r1
    1ea4:	7003052f 	andvc	r0, r3, pc, lsr #10
    1ea8:	1020003d 	eorne	r0, r0, sp, lsr r0
    1eac:	000001d8 	ldrdeq	r0, [r0], -r8
    1eb0:	70030501 	andvc	r0, r3, r1, lsl #10
    1eb4:	10200035 	eorne	r0, r0, r5, lsr r0
    1eb8:	000001e3 	andeq	r0, r0, r3, ror #3
    1ebc:	70030501 	andvc	r0, r3, r1, lsl #10
    1ec0:	1120004d 			; <UNDEFINED> instruction: 0x1120004d
    1ec4:	00000f83 	andeq	r0, r0, r3, lsl #31
    1ec8:	7201a801 	andvc	sl, r1, #65536	; 0x10000
    1ecc:	6a200024 	bvs	801f64 <startup-0x1f7fe09c>
    1ed0:	01000000 	mrseq	r0, (UNDEF: 0)
    1ed4:	00026d9c 	muleq	r2, ip, sp
    1ed8:	106a1200 	rsbne	r1, sl, r0, lsl #4
    1edc:	a8010000 	stmdage	r1, {}	; <UNPREDICTABLE>
    1ee0:	00012e01 	andeq	r2, r1, r1, lsl #28
    1ee4:	74910200 	ldrvc	r0, [r1], #512	; 0x200
    1ee8:	0f141100 	svceq	0x00141100
    1eec:	a0010000 	andge	r0, r1, r0
    1ef0:	0023f001 	eoreq	pc, r3, r1
    1ef4:	00008220 	andeq	r8, r0, r0, lsr #4
    1ef8:	a29c0100 	addsge	r0, ip, #0, 2
    1efc:	12000002 	andne	r0, r0, #2
    1f00:	00000f5e 	andeq	r0, r0, lr, asr pc
    1f04:	6201a001 	andvs	sl, r1, #1
    1f08:	02000001 	andeq	r0, r0, #1
    1f0c:	d6136c91 			; <UNDEFINED> instruction: 0xd6136c91
    1f10:	01000003 	tsteq	r0, r3
    1f14:	012e01a1 	smulwbeq	lr, r1, r1
    1f18:	91020000 	mrsls	r0, (UNDEF: 2)
    1f1c:	22140074 	andscs	r0, r4, #116	; 0x74
    1f20:	01000010 	tsteq	r0, r0, lsl r0
    1f24:	22e80196 	rsccs	r0, r8, #-2147483611	; 0x80000025
    1f28:	01082000 	mrseq	r2, (UNDEF: 8)
    1f2c:	9c010000 	stcls	0, cr0, [r1], {-0}
    1f30:	000002c6 	andeq	r0, r0, r6, asr #5
    1f34:	01006915 	tsteq	r0, r5, lsl r9
    1f38:	012e0197 			; <UNDEFINED> instruction: 0x012e0197
    1f3c:	91020000 	mrsls	r0, (UNDEF: 2)
    1f40:	b4110074 	ldrlt	r0, [r1], #-116	; 0xffffff8c
    1f44:	0100000f 	tsteq	r0, pc
    1f48:	21b80170 			; <UNDEFINED> instruction: 0x21b80170
    1f4c:	01302000 	teqeq	r0, r0
    1f50:	9c010000 	stcls	0, cr0, [r1], {-0}
    1f54:	0000033a 	andeq	r0, r0, sl, lsr r3
    1f58:	01007815 	tsteq	r0, r5, lsl r8
    1f5c:	012e0171 			; <UNDEFINED> instruction: 0x012e0171
    1f60:	91020000 	mrsls	r0, (UNDEF: 2)
    1f64:	0079156c 	rsbseq	r1, r9, ip, ror #10
    1f68:	2e017201 	cdpcs	2, 0, cr7, cr1, cr1, {0}
    1f6c:	02000001 	andeq	r0, r0, #1
    1f70:	e4136891 	ldr	r6, [r3], #-2193	; 0xfffff76f
    1f74:	01000002 	tsteq	r0, r2
    1f78:	012e0173 			; <UNDEFINED> instruction: 0x012e0173
    1f7c:	91020000 	mrsls	r0, (UNDEF: 2)
    1f80:	06071364 	streq	r1, [r7], -r4, ror #6
    1f84:	74010000 	strvc	r0, [r1], #-0
    1f88:	00012e01 	andeq	r2, r1, r1, lsl #28
    1f8c:	60910200 	addsvs	r0, r1, r0, lsl #4
    1f90:	00327815 	eorseq	r7, r2, r5, lsl r8
    1f94:	2e017601 	cfmadd32cs	mvax0, mvfx7, mvfx1, mvfx1
    1f98:	02000001 	andeq	r0, r0, #1
    1f9c:	69165c91 	ldmdbvs	r6, {r0, r4, r7, sl, fp, ip, lr}
    1fa0:	017a0100 	cmneq	sl, r0, lsl #2
    1fa4:	0000012e 	andeq	r0, r0, lr, lsr #2
    1fa8:	01006b15 	tsteq	r0, r5, lsl fp
    1fac:	012e017b 			; <UNDEFINED> instruction: 0x012e017b
    1fb0:	91020000 	mrsls	r0, (UNDEF: 2)
    1fb4:	b4110058 	ldrlt	r0, [r1], #-88	; 0xffffffa8
    1fb8:	01000010 	tsteq	r0, r0, lsl r0
    1fbc:	21660165 	cmncs	r6, r5, ror #2
    1fc0:	00522000 	subseq	r2, r2, r0
    1fc4:	9c010000 	stcls	0, cr0, [r1], {-0}
    1fc8:	000003a3 	andeq	r0, r0, r3, lsr #7
    1fcc:	01007817 	tsteq	r0, r7, lsl r8
    1fd0:	012e0165 			; <UNDEFINED> instruction: 0x012e0165
    1fd4:	91020000 	mrsls	r0, (UNDEF: 2)
    1fd8:	0079176c 	rsbseq	r1, r9, ip, ror #14
    1fdc:	2e016501 	cfsh32cs	mvfx6, mvfx1, #1
    1fe0:	02000001 	andeq	r0, r0, #1
    1fe4:	e4126891 	ldr	r6, [r2], #-2193	; 0xfffff76f
    1fe8:	01000002 	tsteq	r0, r2
    1fec:	012e0165 			; <UNDEFINED> instruction: 0x012e0165
    1ff0:	91020000 	mrsls	r0, (UNDEF: 2)
    1ff4:	06071264 	streq	r1, [r7], -r4, ror #4
    1ff8:	65010000 	strvs	r0, [r1, #-0]
    1ffc:	00012e01 	andeq	r2, r1, r1, lsl #28
    2000:	60910200 	addsvs	r0, r1, r0, lsl #4
    2004:	01006915 	tsteq	r0, r5, lsl r9
    2008:	012e0166 			; <UNDEFINED> instruction: 0x012e0166
    200c:	91020000 	mrsls	r0, (UNDEF: 2)
    2010:	006a1574 	rsbeq	r1, sl, r4, ror r5
    2014:	2e016701 	cdpcs	7, 0, cr6, cr1, cr1, {0}
    2018:	02000001 	andeq	r0, r0, #1
    201c:	11007091 	swpne	r7, r1, [r0]
    2020:	00001057 	andeq	r1, r0, r7, asr r0
    2024:	14015b01 	strne	r5, [r1], #-2817	; 0xfffff4ff
    2028:	52200021 	eorpl	r0, r0, #33	; 0x21
    202c:	01000000 	mrseq	r0, (UNDEF: 0)
    2030:	00040c9c 	muleq	r4, ip, ip
    2034:	00781700 	rsbseq	r1, r8, r0, lsl #14
    2038:	2e015b01 	vmlacs.f64	d5, d1, d1
    203c:	02000001 	andeq	r0, r0, #1
    2040:	79176c91 	ldmdbvc	r7, {r0, r4, r7, sl, fp, sp, lr}
    2044:	015b0100 	cmpeq	fp, r0, lsl #2
    2048:	0000012e 	andeq	r0, r0, lr, lsr #2
    204c:	12689102 	rsbne	r9, r8, #-2147483648	; 0x80000000
    2050:	000002e4 	andeq	r0, r0, r4, ror #5
    2054:	2e015b01 	vmlacs.f64	d5, d1, d1
    2058:	02000001 	andeq	r0, r0, #1
    205c:	07126491 			; <UNDEFINED> instruction: 0x07126491
    2060:	01000006 	tsteq	r0, r6
    2064:	012e015b 			; <UNDEFINED> instruction: 0x012e015b
    2068:	91020000 	mrsls	r0, (UNDEF: 2)
    206c:	00691560 	rsbeq	r1, r9, r0, ror #10
    2070:	2e015c01 	cdpcs	12, 0, cr5, cr1, cr1, {0}
    2074:	02000001 	andeq	r0, r0, #1
    2078:	6a157491 	bvs	55f2c4 <startup-0x1faa0d3c>
    207c:	015d0100 	cmpeq	sp, r0, lsl #2
    2080:	0000012e 	andeq	r0, r0, lr, lsr #2
    2084:	00709102 	rsbseq	r9, r0, r2, lsl #2
    2088:	000f8e11 	andeq	r8, pc, r1, lsl lr	; <UNPREDICTABLE>
    208c:	01450100 	mrseq	r0, (UNDEF: 85)
    2090:	20001ffa 	strdcs	r1, [r0], -sl
    2094:	0000011a 	andeq	r0, r0, sl, lsl r1
    2098:	04b79c01 	ldrteq	r9, [r7], #3073	; 0xc01
    209c:	73170000 	tstvc	r7, #0
    20a0:	01450100 	mrseq	r0, (UNDEF: 85)
    20a4:	0000009e 	muleq	r0, lr, r0
    20a8:	17549102 	ldrbne	r9, [r4, -r2, lsl #2]
    20ac:	45010078 	strmi	r0, [r1, #-120]	; 0xffffff88
    20b0:	00012e01 	andeq	r2, r1, r1, lsl #28
    20b4:	50910200 	addspl	r0, r1, r0, lsl #4
    20b8:	01007917 	tsteq	r0, r7, lsl r9
    20bc:	012e0145 			; <UNDEFINED> instruction: 0x012e0145
    20c0:	91020000 	mrsls	r0, (UNDEF: 2)
    20c4:	6573174c 	ldrbvs	r1, [r3, #-1868]!	; 0xfffff8b4
    20c8:	45010074 	strmi	r0, [r1, #-116]	; 0xffffff8c
    20cc:	00012e01 	andeq	r2, r1, r1, lsl #28
    20d0:	48910200 	ldmmi	r1, {r9}
    20d4:	00101c12 	andseq	r1, r0, r2, lsl ip
    20d8:	01450100 	mrseq	r0, (UNDEF: 85)
    20dc:	0000012e 	andeq	r0, r0, lr, lsr #2
    20e0:	15009102 	strne	r9, [r0, #-258]	; 0xfffffefe
    20e4:	46010069 	strmi	r0, [r1], -r9, rrx
    20e8:	00012e01 	andeq	r2, r1, r1, lsl #28
    20ec:	6c910200 	lfmvs	f0, 4, [r1], {0}
    20f0:	01006a15 	tsteq	r0, r5, lsl sl
    20f4:	012e0146 			; <UNDEFINED> instruction: 0x012e0146
    20f8:	91020000 	mrsls	r0, (UNDEF: 2)
    20fc:	006b1568 	rsbeq	r1, fp, r8, ror #10
    2100:	2e014601 	cfmadd32cs	mvax0, mvfx4, mvfx1, mvfx1
    2104:	02000001 	andeq	r0, r0, #1
    2108:	8f136491 	svchi	0x00136491
    210c:	01000010 	tsteq	r0, r0, lsl r0
    2110:	012e0146 			; <UNDEFINED> instruction: 0x012e0146
    2114:	91020000 	mrsls	r0, (UNDEF: 2)
    2118:	20321860 	eorscs	r1, r2, r0, ror #16
    211c:	00bc2000 	adcseq	r2, ip, r0
    2120:	8a130000 	bhi	4c2128 <startup-0x1fb3ded8>
    2124:	01000010 	tsteq	r0, r0, lsl r0
    2128:	005b014d 	subseq	r0, fp, sp, asr #2
    212c:	91020000 	mrsls	r0, (UNDEF: 2)
    2130:	1100005f 	qaddne	r0, pc, r0	; <UNPREDICTABLE>
    2134:	00000f63 	andeq	r0, r0, r3, ror #30
    2138:	24013001 	strcs	r3, [r1], #-1
    213c:	d620001f 			; <UNDEFINED> instruction: 0xd620001f
    2140:	01000000 	mrseq	r0, (UNDEF: 0)
    2144:	0005209c 	muleq	r5, ip, r0
    2148:	0f001200 	svceq	0x00001200
    214c:	30010000 	andcc	r0, r1, r0
    2150:	00052001 	andeq	r2, r5, r1
    2154:	64910200 	ldrvs	r0, [r1], #512	; 0x200
    2158:	01006915 	tsteq	r0, r5, lsl r9
    215c:	017e0131 	cmneq	lr, r1, lsr r1
    2160:	91020000 	mrsls	r0, (UNDEF: 2)
    2164:	006a1577 	rsbeq	r1, sl, r7, ror r5
    2168:	7e013101 	adfvcs	f3, f1, f1
    216c:	02000001 	andeq	r0, r0, #1
    2170:	c0137691 	mulsgt	r3, r1, r6
    2174:	01000012 	tsteq	r0, r2, lsl r0
    2178:	017e0131 	cmneq	lr, r1, lsr r1
    217c:	91020000 	mrsls	r0, (UNDEF: 2)
    2180:	0063156f 	rsbeq	r1, r3, pc, ror #10
    2184:	7e013101 	adfvcs	f3, f1, f1
    2188:	02000001 	andeq	r0, r0, #1
    218c:	6b157591 	blvs	55f7d8 <startup-0x1faa0828>
    2190:	01320100 	teqeq	r2, r0, lsl #2
    2194:	0000004e 	andeq	r0, r0, lr, asr #32
    2198:	00709102 	rsbseq	r9, r0, r2, lsl #2
    219c:	017e0405 	cmneq	lr, r5, lsl #8
    21a0:	0d110000 	ldceq	0, cr0, [r1, #-0]
    21a4:	0100000f 	tsteq	r0, pc
    21a8:	1d840108 	stfnes	f0, [r4, #32]
    21ac:	01a02000 	moveq	r2, r0
    21b0:	9c010000 	stcls	0, cr0, [r1], {-0}
    21b4:	000005a0 	andeq	r0, r0, r0, lsr #11
    21b8:	01007817 	tsteq	r0, r7, lsl r8
    21bc:	012e0108 			; <UNDEFINED> instruction: 0x012e0108
    21c0:	91020000 	mrsls	r0, (UNDEF: 2)
    21c4:	00791764 	rsbseq	r1, r9, r4, ror #14
    21c8:	2e010801 	cdpcs	8, 0, cr0, cr1, cr1, {0}
    21cc:	02000001 	andeq	r0, r0, #1
    21d0:	73176091 	tstvc	r7, #145	; 0x91
    21d4:	01007465 	tsteq	r0, r5, ror #8
    21d8:	012e0108 			; <UNDEFINED> instruction: 0x012e0108
    21dc:	91020000 	mrsls	r0, (UNDEF: 2)
    21e0:	1065135c 	rsbne	r1, r5, ip, asr r3
    21e4:	09010000 	stmdbeq	r1, {}	; <UNPREDICTABLE>
    21e8:	00017e01 	andeq	r7, r1, r1, lsl #28
    21ec:	77910200 	ldrvc	r0, [r1, r0, lsl #4]
    21f0:	01006315 	tsteq	r0, r5, lsl r3
    21f4:	017e0109 	cmneq	lr, r9, lsl #2
    21f8:	91020000 	mrsls	r0, (UNDEF: 2)
    21fc:	12c0136f 	sbcne	r1, r0, #-1140850687	; 0xbc000001
    2200:	09010000 	stmdbeq	r1, {}	; <UNPREDICTABLE>
    2204:	00017e01 	andeq	r7, r1, r1, lsl #28
    2208:	76910200 	ldrvc	r0, [r1], r0, lsl #4
    220c:	0010c313 	andseq	ip, r0, r3, lsl r3
    2210:	010a0100 	mrseq	r0, (UNDEF: 26)
    2214:	0000012e 	andeq	r0, r0, lr, lsr #2
    2218:	00709102 	rsbseq	r9, r0, r2, lsl #2
    221c:	000f5819 	andeq	r5, pc, r9, lsl r8	; <UNPREDICTABLE>
    2220:	04de0100 	ldrbeq	r0, [lr], #256	; 0x100
    2224:	8020001c 	eorhi	r0, r0, ip, lsl r0
    2228:	01000001 	tsteq	r0, r1
    222c:	0006069c 	muleq	r6, ip, r6
    2230:	00781a00 	rsbseq	r1, r8, r0, lsl #20
    2234:	012ede01 			; <UNDEFINED> instruction: 0x012ede01
    2238:	91020000 	mrsls	r0, (UNDEF: 2)
    223c:	00791a6c 	rsbseq	r1, r9, ip, ror #20
    2240:	012ede01 			; <UNDEFINED> instruction: 0x012ede01
    2244:	91020000 	mrsls	r0, (UNDEF: 2)
    2248:	65731a68 	ldrbvs	r1, [r3, #-2664]!	; 0xfffff598
    224c:	de010074 	mcrle	0, 0, r0, cr1, cr4, {3}
    2250:	0000012e 	andeq	r0, r0, lr, lsr #2
    2254:	1b649102 	blne	1926664 <startup-0x1e6d999c>
    2258:	0000101c 	andeq	r1, r0, ip, lsl r0
    225c:	012ede01 			; <UNDEFINED> instruction: 0x012ede01
    2260:	91020000 	mrsls	r0, (UNDEF: 2)
    2264:	10651c60 	rsbne	r1, r5, r0, ror #24
    2268:	df010000 	svcle	0x00010000
    226c:	0000017e 	andeq	r0, r0, lr, ror r1
    2270:	1c779102 	ldfnep	f1, [r7], #-8
    2274:	000010c3 	andeq	r1, r0, r3, asr #1
    2278:	012ee001 			; <UNDEFINED> instruction: 0x012ee001
    227c:	91020000 	mrsls	r0, (UNDEF: 2)
    2280:	161d0070 			; <UNDEFINED> instruction: 0x161d0070
    2284:	01000011 	tsteq	r0, r1, lsl r0
    2288:	001b9ed1 			; <UNDEFINED> instruction: 0x001b9ed1
    228c:	00006620 	andeq	r6, r0, r0, lsr #12
    2290:	429c0100 	addsmi	r0, ip, #0, 2
    2294:	1c000006 	stcne	0, cr0, [r0], {6}
    2298:	00000eee 	andeq	r0, r0, lr, ror #29
    229c:	017ed201 	cmneq	lr, r1, lsl #4
    22a0:	91020000 	mrsls	r0, (UNDEF: 2)
    22a4:	1bac1877 	blne	feb08488 <firstTime.4040+0xdeaffa9c>
    22a8:	003e2000 	eorseq	r2, lr, r0
    22ac:	611e0000 	tstvs	lr, r0
    22b0:	01006464 	tsteq	r0, r4, ror #8
    22b4:	00017ed6 	ldrdeq	r7, [r1], -r6
    22b8:	76910200 	ldrvc	r0, [r1], r0, lsl #4
    22bc:	031f0000 	tsteq	pc, #0
    22c0:	01000011 	tsteq	r0, r1, lsl r0
    22c4:	001b30bd 	ldrheq	r3, [fp], -sp
    22c8:	00006e20 	andeq	r6, r0, r0, lsr #28
    22cc:	1d9c0100 	ldfnes	f0, [ip]
    22d0:	00001077 	andeq	r1, r0, r7, ror r0
    22d4:	1aeab501 	bne	ffaaf6e0 <firstTime.4040+0xdfaa6cf4>
    22d8:	00462000 	subeq	r2, r6, r0
    22dc:	9c010000 	stcls	0, cr0, [r1], {-0}
    22e0:	00000685 	andeq	r0, r0, r5, lsl #13
    22e4:	000f3f1b 	andeq	r3, pc, fp, lsl pc	; <UNPREDICTABLE>
    22e8:	7eb50100 	frdvcs	f0, f5, f0
    22ec:	02000001 	andeq	r0, r0, #1
    22f0:	c01b7791 	mulsgt	fp, r1, r7
    22f4:	01000012 	tsteq	r0, r2, lsl r0
    22f8:	00017eb5 			; <UNDEFINED> instruction: 0x00017eb5
    22fc:	76910200 	ldrvc	r0, [r1], r0, lsl #4
    2300:	0f311d00 	svceq	0x00311d00
    2304:	ae010000 	cdpge	0, 0, cr0, cr1, cr0, {0}
    2308:	20001aa4 	andcs	r1, r0, r4, lsr #21
    230c:	00000046 	andeq	r0, r0, r6, asr #32
    2310:	06b79c01 	ldrteq	r9, [r7], r1, lsl #24
    2314:	3f1b0000 	svccc	0x001b0000
    2318:	0100000f 	tsteq	r0, pc
    231c:	00017eae 	andeq	r7, r1, lr, lsr #29
    2320:	77910200 	ldrvc	r0, [r1, r0, lsl #4]
    2324:	0012c01b 	andseq	ip, r2, fp, lsl r0
    2328:	7eae0100 	fdvvce	f0, f6, f0
    232c:	02000001 	andeq	r0, r0, #1
    2330:	1d007691 	stcne	6, cr7, [r0, #-580]	; 0xfffffdbc
    2334:	00000fa6 	andeq	r0, r0, r6, lsr #31
    2338:	1a269901 	bne	9a8744 <startup-0x1f6578bc>
    233c:	007e2000 	rsbseq	r2, lr, r0
    2340:	9c010000 	stcls	0, cr0, [r1], {-0}
    2344:	000006e9 	andeq	r0, r0, r9, ror #13
    2348:	000f071b 	andeq	r0, pc, fp, lsl r7	; <UNPREDICTABLE>
    234c:	7e990100 	fmlvce	f0, f1, f0
    2350:	02000001 	andeq	r0, r0, #1
    2354:	c01b7791 	mulsgt	fp, r1, r7
    2358:	01000012 	tsteq	r0, r2, lsl r0
    235c:	00017e99 	muleq	r1, r9, lr
    2360:	76910200 	ldrvc	r0, [r1], r0, lsl #4
    2364:	100a2000 	andne	r2, sl, r0
    2368:	94010000 	strls	r0, [r1], #-0
    236c:	0000012e 	andeq	r0, r0, lr, lsr #2
    2370:	200019fc 	strdcs	r1, [r0], -ip
    2374:	0000002a 	andeq	r0, r0, sl, lsr #32
    2378:	07119c01 	ldreq	r9, [r1, -r1, lsl #24]
    237c:	c01b0000 	andsgt	r0, fp, r0
    2380:	01000012 	tsteq	r0, r2, lsl r0
    2384:	00017e94 	muleq	r1, r4, lr
    2388:	77910200 	ldrvc	r0, [r1, r0, lsl #4]
    238c:	0ef32100 	cdpeq	1, 15, cr2, cr3, cr0, {0}
    2390:	7b010000 	blvc	42398 <startup-0x1ffbdc68>
    2394:	0000017e 	andeq	r0, r0, lr, ror r1
    2398:	20001968 	andcs	r1, r0, r8, ror #18
    239c:	00000094 	muleq	r0, r4, r0
    23a0:	07469c01 	strbeq	r9, [r6, -r1, lsl #24]
    23a4:	c01b0000 	andsgt	r0, fp, r0
    23a8:	01000012 	tsteq	r0, r2, lsl r0
    23ac:	00017e7b 	andeq	r7, r1, fp, ror lr
    23b0:	6f910200 	svcvs	0x00910200
    23b4:	0076721e 	rsbseq	r7, r6, lr, lsl r2
    23b8:	005b8401 	subseq	r8, fp, r1, lsl #8
    23bc:	91020000 	mrsls	r0, (UNDEF: 2)
    23c0:	db1d0077 	blle	7425a4 <startup-0x1f8bda5c>
    23c4:	01000010 	tsteq	r0, r0, lsl r0
    23c8:	0018fa65 	andseq	pc, r8, r5, ror #20
    23cc:	00006e20 	andeq	r6, r0, r0, lsr #28
    23d0:	689c0100 	ldmvs	ip, {r8}
    23d4:	1e000007 	cdpne	0, 0, cr0, cr0, cr7, {0}
    23d8:	66010063 	strvs	r0, [r1], -r3, rrx
    23dc:	0000017e 	andeq	r0, r0, lr, ror r1
    23e0:	00779102 	rsbseq	r9, r7, r2, lsl #2
    23e4:	0010c91d 	andseq	ip, r0, sp, lsl r9
    23e8:	94500100 	ldrbls	r0, [r0], #-256	; 0xffffff00
    23ec:	66200018 			; <UNDEFINED> instruction: 0x66200018
    23f0:	01000000 	mrseq	r0, (UNDEF: 0)
    23f4:	00078c9c 	muleq	r7, ip, ip
    23f8:	12c01b00 	sbcne	r1, r0, #0, 22
    23fc:	50010000 	andpl	r0, r1, r0
    2400:	0000017e 	andeq	r0, r0, lr, ror r1
    2404:	00779102 	rsbseq	r9, r7, r2, lsl #2
    2408:	000fc222 	andeq	ip, pc, r2, lsr #4
    240c:	3c490100 	stfcce	f0, [r9], {-0}
    2410:	58200018 	stmdapl	r0!, {r3, r4}
    2414:	01000000 	mrseq	r0, (UNDEF: 0)
    2418:	0007ba9c 	muleq	r7, ip, sl
    241c:	00781a00 	rsbseq	r1, r8, r0, lsl #20
    2420:	017e4901 	cmneq	lr, r1, lsl #18
    2424:	91020000 	mrsls	r0, (UNDEF: 2)
    2428:	00631e6f 	rsbeq	r1, r3, pc, ror #28
    242c:	017e4a01 	cmneq	lr, r1, lsl #20
    2430:	91020000 	mrsls	r0, (UNDEF: 2)
    2434:	36220077 			; <UNDEFINED> instruction: 0x36220077
    2438:	01000010 	tsteq	r0, r0, lsl r0
    243c:	0017ec41 	andseq	lr, r7, r1, asr #24
    2440:	00005020 	andeq	r5, r0, r0, lsr #32
    2444:	e89c0100 	ldm	ip, {r8}
    2448:	1a000007 	bne	246c <startup-0x1fffdb94>
    244c:	41010078 	tstmi	r1, r8, ror r0
    2450:	0000017e 	andeq	r0, r0, lr, ror r1
    2454:	1e6f9102 	lgnnee	f1, f2
    2458:	42010063 	andmi	r0, r1, #99	; 0x63
    245c:	0000017e 	andeq	r0, r0, lr, ror r1
    2460:	00779102 	rsbseq	r9, r7, r2, lsl #2
    2464:	00109e1f 	andseq	r9, r0, pc, lsl lr
    2468:	bc3a0100 	ldflts	f0, [sl], #-0
    246c:	30200017 	eorcc	r0, r0, r7, lsl r0
    2470:	01000000 	mrseq	r0, (UNDEF: 0)
    2474:	0f471f9c 	svceq	0x00471f9c
    2478:	37010000 	strcc	r0, [r1, -r0]
    247c:	200017a4 	andcs	r1, r0, r4, lsr #15
    2480:	00000018 	andeq	r0, r0, r8, lsl r0
    2484:	ee199c01 	cdp	12, 1, cr9, cr9, cr1, {0}
    2488:	01000010 	tsteq	r0, r0, lsl r0
    248c:	00177232 	andseq	r7, r7, r2, lsr r2
    2490:	00003220 	andeq	r3, r0, r0, lsr #4
    2494:	3a9c0100 	bcc	fe70289c <firstTime.4040+0xde6f9eb0>
    2498:	1b000008 	blne	24c0 <startup-0x1fffdb40>
    249c:	00000f00 	andeq	r0, r0, r0, lsl #30
    24a0:	05203201 	streq	r3, [r0, #-513]!	; 0xfffffdff
    24a4:	91020000 	mrsls	r0, (UNDEF: 2)
    24a8:	00691e6c 	rsbeq	r1, r9, ip, ror #28
    24ac:	012e3301 			; <UNDEFINED> instruction: 0x012e3301
    24b0:	91020000 	mrsls	r0, (UNDEF: 2)
    24b4:	771d0074 			; <UNDEFINED> instruction: 0x771d0074
    24b8:	0100000f 	tsteq	r0, pc
    24bc:	00174c21 	andseq	r4, r7, r1, lsr #24
    24c0:	00002620 	andeq	r2, r0, r0, lsr #12
    24c4:	5d9c0100 	ldfpls	f0, [ip]
    24c8:	1a000008 	bne	24f0 <startup-0x1fffdb10>
    24cc:	0100736d 	tsteq	r0, sp, ror #6
    24d0:	00004e21 	andeq	r4, r0, r1, lsr #28
    24d4:	74910200 	ldrvc	r0, [r1], #512	; 0x200
    24d8:	0f251d00 	svceq	0x00251d00
    24dc:	18010000 	stmdane	r1, {}	; <UNPREDICTABLE>
    24e0:	20001720 	andcs	r1, r0, r0, lsr #14
    24e4:	0000002c 	andeq	r0, r0, ip, lsr #32
    24e8:	08809c01 	stmeq	r0, {r0, sl, fp, ip, pc}
    24ec:	751a0000 	ldrvc	r0, [sl, #-0]
    24f0:	18010073 	stmdane	r1, {r0, r1, r4, r5, r6}
    24f4:	0000004e 	andeq	r0, r0, lr, asr #32
    24f8:	00749102 	rsbseq	r9, r4, r2, lsl #2
    24fc:	000f9a23 	andeq	r9, pc, r3, lsr #20
    2500:	dc0e0100 	stfles	f0, [lr], {-0}
    2504:	44200016 	strtmi	r0, [r0], #-22	; 0xffffffea
    2508:	01000000 	mrseq	r0, (UNDEF: 0)
    250c:	104b239c 	umaalne	r2, fp, ip, r3
    2510:	04010000 	streq	r0, [r1], #-0
    2514:	20001698 	mulcs	r0, r8, r6
    2518:	00000044 	andeq	r0, r0, r4, asr #32
    251c:	00009c01 	andeq	r9, r0, r1, lsl #24
    2520:	04000001 	streq	r0, [r0], #-1
    2524:	00081e00 	andeq	r1, r8, r0, lsl #28
    2528:	77010400 	strvc	r0, [r1, -r0, lsl #8]
    252c:	0c000000 	stceq	0, cr0, [r0], {-0}
    2530:	00001136 	andeq	r1, r0, r6, lsr r1
    2534:	200024dc 	ldrdcs	r2, [r0], -ip
    2538:	00000028 	andeq	r0, r0, r8, lsr #32
    253c:	00000bf3 	strdeq	r0, [r0], -r3
    2540:	05020c02 	streq	r0, [r2, #-3074]	; 0xfffff3fe
    2544:	0000004e 	andeq	r0, r0, lr, asr #32
    2548:	0002e403 	andeq	lr, r2, r3, lsl #8
    254c:	4e070200 	cdpmi	2, 0, cr0, cr7, cr0, {0}
    2550:	00000000 	andeq	r0, r0, r0
    2554:	00060703 	andeq	r0, r6, r3, lsl #14
    2558:	4e080200 	cdpmi	2, 0, cr0, cr8, cr0, {0}
    255c:	04000000 	streq	r0, [r0], #-0
    2560:	00101703 	andseq	r1, r0, r3, lsl #14
    2564:	55090200 	strpl	r0, [r9, #-512]	; 0xfffffe00
    2568:	08000000 	stmdaeq	r0, {}	; <UNPREDICTABLE>
    256c:	07040400 	streq	r0, [r4, -r0, lsl #8]
    2570:	00000308 	andeq	r0, r0, r8, lsl #6
    2574:	005b0405 	subseq	r0, fp, r5, lsl #8
    2578:	01040000 	mrseq	r0, (UNDEF: 4)
    257c:	00041f08 	andeq	r1, r4, r8, lsl #30
    2580:	11690600 	cmnne	r9, r0, lsl #12
    2584:	0a020000 	beq	8258c <startup-0x1ff7da74>
    2588:	00000021 	andeq	r0, r0, r1, lsr #32
    258c:	00001607 	andeq	r1, r0, r7, lsl #12
    2590:	06030c00 	streq	r0, [r3], -r0, lsl #24
    2594:	0000009e 	muleq	r0, lr, r0
    2598:	0004f503 	andeq	pc, r4, r3, lsl #10
    259c:	9e070300 	cdpls	3, 0, cr0, cr7, cr0, {0}
    25a0:	00000000 	andeq	r0, r0, r0
    25a4:	00001d03 	andeq	r1, r0, r3, lsl #26
    25a8:	9e080300 	cdpls	3, 0, cr0, cr8, cr0, {0}
    25ac:	04000000 	streq	r0, [r0], #-0
    25b0:	00001203 	andeq	r1, r0, r3, lsl #4
    25b4:	9e090300 	cdpls	3, 0, cr0, cr9, cr0, {0}
    25b8:	08000000 	stmdaeq	r0, {}	; <UNPREDICTABLE>
    25bc:	62040500 	andvs	r0, r4, #0, 10
    25c0:	06000000 	streq	r0, [r0], -r0
    25c4:	00000c36 	andeq	r0, r0, r6, lsr ip
    25c8:	006d0a03 	rsbeq	r0, sp, r3, lsl #20
    25cc:	2b080000 	blcs	2025d4 <startup-0x1fdfda2c>
    25d0:	01000011 	tsteq	r0, r1, lsl r0
    25d4:	0024dc03 	eoreq	sp, r4, r3, lsl #24
    25d8:	00002820 	andeq	r2, r0, r0, lsr #16
    25dc:	fd9c0100 	ldc2	1, cr0, [ip]
    25e0:	09000000 	stmdbeq	r0, {}	; <UNPREDICTABLE>
    25e4:	00001130 	andeq	r1, r0, r0, lsr r1
    25e8:	00fd0301 	rscseq	r0, sp, r1, lsl #6
    25ec:	91020000 	mrsls	r0, (UNDEF: 2)
    25f0:	04f50974 	ldrbteq	r0, [r5], #2420	; 0x974
    25f4:	03010000 	movweq	r0, #4096	; 0x1000
    25f8:	0000009e 	muleq	r0, lr, r0
    25fc:	09709102 	ldmdbeq	r0!, {r1, r8, ip, pc}^
    2600:	0000001d 	andeq	r0, r0, sp, lsl r0
    2604:	009e0301 	addseq	r0, lr, r1, lsl #6
    2608:	91020000 	mrsls	r0, (UNDEF: 2)
    260c:	0012096c 	andseq	r0, r2, ip, ror #18
    2610:	03010000 	movweq	r0, #4096	; 0x1000
    2614:	0000009e 	muleq	r0, lr, r0
    2618:	00689102 	rsbeq	r9, r8, r2, lsl #2
    261c:	00a40405 	adceq	r0, r4, r5, lsl #8
    2620:	c3000000 	movwgt	r0, #0
    2624:	04000000 	streq	r0, [r0], #-0
    2628:	0008a500 	andeq	sl, r8, r0, lsl #10
    262c:	77010400 	strvc	r0, [r1, -r0, lsl #8]
    2630:	0c000000 	stceq	0, cr0, [r0], {-0}
    2634:	00001170 	andeq	r1, r0, r0, ror r1
    2638:	20002504 	andcs	r2, r0, r4, lsl #10
    263c:	00000028 	andeq	r0, r0, r8, lsr #32
    2640:	00000c69 	andeq	r0, r0, r9, ror #24
    2644:	05020c02 	streq	r0, [r2, #-3074]	; 0xfffff3fe
    2648:	0000004e 	andeq	r0, r0, lr, asr #32
    264c:	0002e403 	andeq	lr, r2, r3, lsl #8
    2650:	4e070200 	cdpmi	2, 0, cr0, cr7, cr0, {0}
    2654:	00000000 	andeq	r0, r0, r0
    2658:	00060703 	andeq	r0, r6, r3, lsl #14
    265c:	4e080200 	cdpmi	2, 0, cr0, cr8, cr0, {0}
    2660:	04000000 	streq	r0, [r0], #-0
    2664:	00101703 	andseq	r1, r0, r3, lsl #14
    2668:	55090200 	strpl	r0, [r9, #-512]	; 0xfffffe00
    266c:	08000000 	stmdaeq	r0, {}	; <UNPREDICTABLE>
    2670:	07040400 	streq	r0, [r4, -r0, lsl #8]
    2674:	00000308 	andeq	r0, r0, r8, lsl #6
    2678:	005b0405 	subseq	r0, fp, r5, lsl #8
    267c:	01040000 	mrseq	r0, (UNDEF: 4)
    2680:	00041f08 	andeq	r1, r4, r8, lsl #30
    2684:	11690600 	cmnne	r9, r0, lsl #12
    2688:	0a020000 	beq	82690 <startup-0x1ff7d970>
    268c:	00000021 	andeq	r0, r0, r1, lsr #32
    2690:	00116407 	andseq	r6, r1, r7, lsl #8
    2694:	04030100 	streq	r0, [r3], #-256	; 0xffffff00
    2698:	28200025 	stmdacs	r0!, {r0, r2, r5}
    269c:	01000000 	mrseq	r0, (UNDEF: 0)
    26a0:	0000b99c 	muleq	r0, ip, r9
    26a4:	00730800 	rsbseq	r0, r3, r0, lsl #16
    26a8:	00b90301 	adcseq	r0, r9, r1, lsl #6
    26ac:	91020000 	mrsls	r0, (UNDEF: 2)
    26b0:	10170974 	andsne	r0, r7, r4, ror r9
    26b4:	03010000 	movweq	r0, #4096	; 0x1000
    26b8:	00000055 	andeq	r0, r0, r5, asr r0
    26bc:	09709102 	ldmdbeq	r0!, {r1, r8, ip, pc}^
    26c0:	000002e4 	andeq	r0, r0, r4, ror #5
    26c4:	00bf0301 	adcseq	r0, pc, r1, lsl #6
    26c8:	91020000 	mrsls	r0, (UNDEF: 2)
    26cc:	0607096c 	streq	r0, [r7], -ip, ror #18
    26d0:	03010000 	movweq	r0, #4096	; 0x1000
    26d4:	000000bf 	strheq	r0, [r0], -pc	; <UNPREDICTABLE>
    26d8:	00689102 	rsbeq	r9, r8, r2, lsl #2
    26dc:	00620405 	rsbeq	r0, r2, r5, lsl #8
    26e0:	040a0000 	streq	r0, [sl], #-0
    26e4:	746e6905 	strbtvc	r6, [lr], #-2309	; 0xfffff6fb
    26e8:	01350000 	teqeq	r5, r0
    26ec:	00040000 	andeq	r0, r4, r0
    26f0:	00000937 	andeq	r0, r0, r7, lsr r9
    26f4:	00770104 	rsbseq	r0, r7, r4, lsl #2
    26f8:	d60c0000 	strle	r0, [ip], -r0
    26fc:	2c000011 	stccs	0, cr0, [r0], {17}
    2700:	6c200025 	stcvs	0, cr0, [r0], #-148	; 0xffffff6c
    2704:	d5000000 	strle	r0, [r0, #-0]
    2708:	0200000c 	andeq	r0, r0, #12
    270c:	ae130218 	mrcge	2, 0, r0, cr3, cr8, {0}
    2710:	03000000 	movweq	r0, #0
    2714:	0000119f 	muleq	r0, pc, r1	; <UNPREDICTABLE>
    2718:	00ae1402 	adceq	r1, lr, r2, lsl #8
    271c:	03000000 	movweq	r0, #0
    2720:	000011b8 			; <UNDEFINED> instruction: 0x000011b8
    2724:	00b51502 	adcseq	r1, r5, r2, lsl #10
    2728:	03040000 	movweq	r0, #16384	; 0x4000
    272c:	00001203 	andeq	r1, r0, r3, lsl #4
    2730:	00b51602 	adcseq	r1, r5, r2, lsl #12
    2734:	03060000 	movweq	r0, #24576	; 0x6000
    2738:	00001225 	andeq	r1, r0, r5, lsr #4
    273c:	00ae1702 	adceq	r1, lr, r2, lsl #14
    2740:	03080000 	movweq	r0, #32768	; 0x8000
    2744:	000011c4 	andeq	r1, r0, r4, asr #3
    2748:	00ae1802 	adceq	r1, lr, r2, lsl #16
    274c:	030c0000 	movweq	r0, #49152	; 0xc000
    2750:	00001235 	andeq	r1, r0, r5, lsr r2
    2754:	00bc1902 	adcseq	r1, ip, r2, lsl #18
    2758:	03100000 	tsteq	r0, #0
    275c:	0000122d 	andeq	r1, r0, sp, lsr #4
    2760:	00bc1a02 	adcseq	r1, ip, r2, lsl #20
    2764:	03110000 	tsteq	r1, #0
    2768:	000011ca 	andeq	r1, r0, sl, asr #3
    276c:	00b51b02 	adcseq	r1, r5, r2, lsl #22
    2770:	03120000 	tsteq	r2, #0
    2774:	0000121e 	andeq	r1, r0, lr, lsl r2
    2778:	00bc1c02 	adcseq	r1, ip, r2, lsl #24
    277c:	03140000 	tsteq	r4, #0
    2780:	000011b0 			; <UNDEFINED> instruction: 0x000011b0
    2784:	00bc1d02 	adcseq	r1, ip, r2, lsl #26
    2788:	03150000 	tsteq	r5, #0
    278c:	0000123c 	andeq	r1, r0, ip, lsr r2
    2790:	00b51e02 	adcseq	r1, r5, r2, lsl #28
    2794:	00160000 	andseq	r0, r6, r0
    2798:	08070404 	stmdaeq	r7, {r2, sl}
    279c:	04000003 	streq	r0, [r0], #-3
    27a0:	03020702 	movweq	r0, #9986	; 0x2702
    27a4:	01040000 	mrseq	r0, (UNDEF: 4)
    27a8:	00041f08 	andeq	r1, r4, r8, lsl #30
    27ac:	11bf0500 			; <UNDEFINED> instruction: 0x11bf0500
    27b0:	1f020000 	svcne	0x00020000
    27b4:	00000021 	andeq	r0, r0, r1, lsr #32
    27b8:	00120e06 	andseq	r0, r2, r6, lsl #28
    27bc:	040e0100 	streq	r0, [lr], #-256	; 0xffffff00
    27c0:	64000001 	strvs	r0, [r0], #-1
    27c4:	34200025 	strtcc	r0, [r0], #-37	; 0xffffffdb
    27c8:	01000000 	mrseq	r0, (UNDEF: 0)
    27cc:	0001049c 	muleq	r1, ip, r4
    27d0:	69620700 	stmdbvs	r2!, {r8, r9, sl}^
    27d4:	0e010074 	mcreq	0, 0, r0, cr1, cr4, {3}
    27d8:	00000104 	andeq	r0, r0, r4, lsl #2
    27dc:	08649102 	stmdaeq	r4!, {r1, r8, ip, pc}^
    27e0:	004c4944 	subeq	r4, ip, r4, asr #18
    27e4:	010b0f01 	tsteq	fp, r1, lsl #30
    27e8:	91020000 	mrsls	r0, (UNDEF: 2)
    27ec:	0409006f 	streq	r0, [r9], #-111	; 0xffffff91
    27f0:	746e6905 	strbtvc	r6, [lr], #-2309	; 0xfffff6fb
    27f4:	08010400 	stmdaeq	r1, {sl}
    27f8:	00000428 	andeq	r0, r0, r8, lsr #8
    27fc:	0012480a 	andseq	r4, r2, sl, lsl #16
    2800:	0b080100 	bleq	202c08 <startup-0x1fdfd3f8>
    2804:	44000001 	strmi	r0, [r0], #-1
    2808:	20200025 	eorcs	r0, r0, r5, lsr #32
    280c:	01000000 	mrseq	r0, (UNDEF: 0)
    2810:	11a50b9c 			; <UNDEFINED> instruction: 0x11a50b9c
    2814:	04010000 	streq	r0, [r1], #-0
    2818:	2000252c 	andcs	r2, r0, ip, lsr #10
    281c:	00000018 	andeq	r0, r0, r8, lsl r0
    2820:	ed009c01 	stc	12, cr9, [r0, #-4]
    2824:	04000004 	streq	r0, [r0], #-4
    2828:	0009f400 	andeq	pc, r9, r0, lsl #8
    282c:	77010400 	strvc	r0, [r1, -r0, lsl #8]
    2830:	0c000000 	stceq	0, cr0, [r0], {-0}
    2834:	0000138d 	andeq	r1, r0, sp, lsl #7
    2838:	20002598 	mulcs	r0, r8, r5
    283c:	00000520 	andeq	r0, r0, r0, lsr #10
    2840:	00000d45 	andeq	r0, r0, r5, asr #26
    2844:	05020c02 	streq	r0, [r2, #-3074]	; 0xfffff3fe
    2848:	0000004e 	andeq	r0, r0, lr, asr #32
    284c:	0002e403 	andeq	lr, r2, r3, lsl #8
    2850:	4e070200 	cdpmi	2, 0, cr0, cr7, cr0, {0}
    2854:	00000000 	andeq	r0, r0, r0
    2858:	00060703 	andeq	r0, r6, r3, lsl #14
    285c:	4e080200 	cdpmi	2, 0, cr0, cr8, cr0, {0}
    2860:	04000000 	streq	r0, [r0], #-0
    2864:	00101703 	andseq	r1, r0, r3, lsl #14
    2868:	55090200 	strpl	r0, [r9, #-512]	; 0xfffffe00
    286c:	08000000 	stmdaeq	r0, {}	; <UNPREDICTABLE>
    2870:	07040400 	streq	r0, [r4, -r0, lsl #8]
    2874:	00000308 	andeq	r0, r0, r8, lsl #6
    2878:	005b0405 	subseq	r0, fp, r5, lsl #8
    287c:	01040000 	mrseq	r0, (UNDEF: 4)
    2880:	00041f08 	andeq	r1, r4, r8, lsl #30
    2884:	11690600 	cmnne	r9, r0, lsl #12
    2888:	0a020000 	beq	82890 <startup-0x1ff7d770>
    288c:	00000021 	andeq	r0, r0, r1, lsr #32
    2890:	00001607 	andeq	r1, r0, r7, lsl #12
    2894:	06030c00 	streq	r0, [r3], -r0, lsl #24
    2898:	0000009e 	muleq	r0, lr, r0
    289c:	0004f503 	andeq	pc, r4, r3, lsl #10
    28a0:	9e070300 	cdpls	3, 0, cr0, cr7, cr0, {0}
    28a4:	00000000 	andeq	r0, r0, r0
    28a8:	00001d03 	andeq	r1, r0, r3, lsl #26
    28ac:	9e080300 	cdpls	3, 0, cr0, cr8, cr0, {0}
    28b0:	04000000 	streq	r0, [r0], #-0
    28b4:	00001203 	andeq	r1, r0, r3, lsl #4
    28b8:	9e090300 	cdpls	3, 0, cr0, cr9, cr0, {0}
    28bc:	08000000 	stmdaeq	r0, {}	; <UNPREDICTABLE>
    28c0:	62040500 	andvs	r0, r4, #0, 10
    28c4:	06000000 	streq	r0, [r0], -r0
    28c8:	00000c36 	andeq	r0, r0, r6, lsr ip
    28cc:	006d0a03 	rsbeq	r0, sp, r3, lsl #20
    28d0:	dc070000 	stcle	0, cr0, [r7], {-0}
    28d4:	24000005 	strcs	r0, [r0], #-5
    28d8:	01280604 			; <UNDEFINED> instruction: 0x01280604
    28dc:	bc030000 	stclt	0, cr0, [r3], {-0}
    28e0:	04000003 	streq	r0, [r0], #-3
    28e4:	00012807 	andeq	r2, r1, r7, lsl #16
    28e8:	e8030000 	stmda	r3, {}	; <UNPREDICTABLE>
    28ec:	04000005 	streq	r0, [r0], #-5
    28f0:	00012e08 	andeq	r2, r1, r8, lsl #28
    28f4:	60030400 	andvs	r0, r3, r0, lsl #8
    28f8:	04000005 	streq	r0, [r0], #-5
    28fc:	00012e09 	andeq	r2, r1, r9, lsl #28
    2900:	7b030800 	blvc	c4908 <startup-0x1ff3b6f8>
    2904:	04000005 	streq	r0, [r0], #-5
    2908:	0001460c 	andeq	r4, r1, ip, lsl #12
    290c:	dd030c00 	stcle	12, cr0, [r3, #-0]
    2910:	04000002 	streq	r0, [r0], #-2
    2914:	0001460d 	andeq	r4, r1, sp, lsl #12
    2918:	ce031000 	cdpgt	0, 0, cr1, cr3, cr0, {0}
    291c:	04000003 	streq	r0, [r0], #-3
    2920:	00012e10 	andeq	r2, r1, r0, lsl lr
    2924:	48031400 	stmdami	r3, {sl, ip}
    2928:	04000000 	streq	r0, [r0], #-0
    292c:	00012e11 	andeq	r2, r1, r1, lsl lr
    2930:	4d031800 	stcmi	8, cr1, [r3, #-0]
    2934:	04000003 	streq	r0, [r0], #-3
    2938:	00012e12 	andeq	r2, r1, r2, lsl lr
    293c:	5d031c00 	stcpl	12, cr1, [r3, #-0]
    2940:	04000003 	streq	r0, [r0], #-3
    2944:	00012e13 	andeq	r2, r1, r3, lsl lr
    2948:	05002000 	streq	r2, [r0, #-0]
    294c:	0000a404 	andeq	sl, r0, r4, lsl #8
    2950:	05040800 	streq	r0, [r4, #-2048]	; 0xfffff800
    2954:	00746e69 	rsbseq	r6, r4, r9, ror #28
    2958:	00014009 	andeq	r4, r1, r9
    295c:	01400a00 	cmpeq	r0, r0, lsl #20
    2960:	05000000 	streq	r0, [r0, #-0]
    2964:	0000af04 	andeq	sl, r0, r4, lsl #30
    2968:	35040500 	strcc	r0, [r4, #-1280]	; 0xfffffb00
    296c:	06000001 	streq	r0, [r0], -r1
    2970:	000005dd 	ldrdeq	r0, [r0], -sp
    2974:	00af1504 	adceq	r1, pc, r4, lsl #10
    2978:	620b0000 	andvs	r0, fp, #0
    297c:	62000001 	andvs	r0, r0, #1
    2980:	0c000001 	stceq	0, cr0, [r0], {1}
    2984:	4c040500 	cfstr32mi	mvfx0, [r4], {-0}
    2988:	0d000001 	stceq	0, cr0, [r0, #-4]
    298c:	000004a2 	andeq	r0, r0, r2, lsr #9
    2990:	01571c04 	cmpeq	r7, r4, lsl #24
    2994:	930d0000 	movwls	r0, #53248	; 0xd000
    2998:	04000003 	streq	r0, [r0], #-3
    299c:	00012e1d 	andeq	r2, r1, sp, lsl lr
    29a0:	05a60600 	streq	r0, [r6, #1536]!	; 0x600
    29a4:	24050000 	strcs	r0, [r5], #-0
    29a8:	0000005b 	andeq	r0, r0, fp, asr r0
    29ac:	00017e0b 	andeq	r7, r1, fp, lsl #28
    29b0:	00019a00 	andeq	r9, r1, r0, lsl #20
    29b4:	019a0e00 	orrseq	r0, sl, r0, lsl #28
    29b8:	03ff0000 	mvnseq	r0, #0
    29bc:	07040400 	streq	r0, [r4, -r0, lsl #8]
    29c0:	0000037a 	andeq	r0, r0, sl, ror r3
    29c4:	000f4d0d 	andeq	r4, pc, sp, lsl #26
    29c8:	892b0500 	stmdbhi	fp!, {r8, sl}
    29cc:	0d000001 	stceq	0, cr0, [r0, #-4]
    29d0:	00000200 	andeq	r0, r0, r0, lsl #4
    29d4:	01892c05 	orreq	r2, r9, r5, lsl #24
    29d8:	2d0d0000 	stccs	0, cr0, [sp, #-0]
    29dc:	05000004 	streq	r0, [r0, #-4]
    29e0:	0001892d 	andeq	r8, r1, sp, lsr #18
    29e4:	02ea0d00 	rsceq	r0, sl, #0, 26
    29e8:	2e050000 	cdpcs	0, 0, cr0, cr5, cr0, {0}
    29ec:	00000189 	andeq	r0, r0, r9, lsl #3
    29f0:	00027a0d 	andeq	r7, r2, sp, lsl #20
    29f4:	892f0500 	stmdbhi	pc!, {r8, sl}	; <UNPREDICTABLE>
    29f8:	0d000001 	stceq	0, cr0, [r0, #-4]
    29fc:	000005be 			; <UNDEFINED> instruction: 0x000005be
    2a00:	01893005 	orreq	r3, r9, r5
    2a04:	ae0d0000 	cdpge	0, 0, cr0, cr13, cr0, {0}
    2a08:	05000005 	streq	r0, [r0, #-5]
    2a0c:	00018931 	andeq	r8, r1, r1, lsr r9
    2a10:	13130f00 	tstne	r3, #0, 30
    2a14:	e4010000 	str	r0, [r1], #-0
    2a18:	20002a34 	andcs	r2, r0, r4, lsr sl
    2a1c:	00000084 	andeq	r0, r0, r4, lsl #1
    2a20:	022c9c01 	eoreq	r9, ip, #256	; 0x100
    2a24:	73100000 	tstvc	r0, #0
    2a28:	2ce50100 	stfcse	f0, [r5]
    2a2c:	02000002 	andeq	r0, r0, #2
    2a30:	ee116c91 	mrc	12, 0, r6, cr1, cr1, {4}
    2a34:	01000012 	tsteq	r0, r2, lsl r0
    2a38:	000239e6 	andeq	r3, r2, r6, ror #19
    2a3c:	5c910200 	lfmpl	f0, 4, [r1], {0}
    2a40:	0012f411 	andseq	pc, r2, r1, lsl r4	; <UNPREDICTABLE>
    2a44:	49e70100 	stmibmi	r7!, {r8}^
    2a48:	02000002 	andeq	r0, r0, #2
    2a4c:	05004891 	streq	r4, [r0, #-2193]	; 0xfffff76f
    2a50:	00023204 	andeq	r3, r2, r4, lsl #4
    2a54:	08010400 	stmdaeq	r1, {sl}
    2a58:	00000428 	andeq	r0, r0, r8, lsr #8
    2a5c:	0002320b 	andeq	r3, r2, fp, lsl #4
    2a60:	00024900 	andeq	r4, r2, r0, lsl #18
    2a64:	019a1200 	orrseq	r1, sl, r0, lsl #4
    2a68:	000c0000 	andeq	r0, ip, r0
    2a6c:	0002320b 	andeq	r3, r2, fp, lsl #4
    2a70:	00025900 	andeq	r5, r2, r0, lsl #18
    2a74:	019a1200 	orrseq	r1, sl, r0, lsl #4
    2a78:	00130000 	andseq	r0, r3, r0
    2a7c:	0012a40f 	andseq	sl, r2, pc, lsl #8
    2a80:	a6cc0100 	strbge	r0, [ip], r0, lsl #2
    2a84:	8e200029 	cdphi	0, 2, cr0, cr0, cr9, {1}
    2a88:	01000000 	mrseq	r0, (UNDEF: 0)
    2a8c:	0002b39c 	muleq	r2, ip, r3
    2a90:	13dc1300 	bicsne	r1, ip, #0, 6
    2a94:	cc010000 	stcgt	0, cr0, [r1], {-0}
    2a98:	0000022c 	andeq	r0, r0, ip, lsr #4
    2a9c:	136c9102 	cmnne	ip, #-2147483648	; 0x80000000
    2aa0:	0000023e 	andeq	r0, r0, lr, lsr r2
    2aa4:	022ccc01 	eoreq	ip, ip, #256	; 0x100
    2aa8:	91020000 	mrsls	r0, (UNDEF: 2)
    2aac:	13861368 	orrne	r1, r6, #104, 6	; 0xa0000001
    2ab0:	cc010000 	stcgt	0, cr0, [r1], {-0}
    2ab4:	0000012e 	andeq	r0, r0, lr, lsr #2
    2ab8:	13649102 	cmnne	r4, #-2147483648	; 0x80000000
    2abc:	00001262 	andeq	r1, r0, r2, ror #4
    2ac0:	012ecc01 			; <UNDEFINED> instruction: 0x012ecc01
    2ac4:	91020000 	mrsls	r0, (UNDEF: 2)
    2ac8:	00691060 	rsbeq	r1, r9, r0, rrx
    2acc:	012ed001 			; <UNDEFINED> instruction: 0x012ed001
    2ad0:	91020000 	mrsls	r0, (UNDEF: 2)
    2ad4:	450f0074 	strmi	r0, [pc, #-116]	; 2a68 <startup-0x1fffd598>
    2ad8:	01000013 	tsteq	r0, r3, lsl r0
    2adc:	002948bd 	strhteq	r4, [r9], -sp
    2ae0:	00005e20 	andeq	r5, r0, r0, lsr #28
    2ae4:	e59c0100 	ldr	r0, [ip, #256]	; 0x100
    2ae8:	13000002 	movwne	r0, #2
    2aec:	000013dc 	ldrdeq	r1, [r0], -ip
    2af0:	022cbd01 	eoreq	fp, ip, #1, 26	; 0x40
    2af4:	91020000 	mrsls	r0, (UNDEF: 2)
    2af8:	023e1374 	eorseq	r1, lr, #116, 6	; 0xd0000001
    2afc:	bd010000 	stclt	0, cr0, [r1, #-0]
    2b00:	0000022c 	andeq	r0, r0, ip, lsr #4
    2b04:	00709102 	rsbseq	r9, r0, r2, lsl #2
    2b08:	0012980f 	andseq	r9, r2, pc, lsl #16
    2b0c:	dead0100 	fdvlee	f0, f5, f0
    2b10:	6a200028 	bvs	802bb8 <startup-0x1f7fd448>
    2b14:	01000000 	mrseq	r0, (UNDEF: 0)
    2b18:	0003159c 	muleq	r3, ip, r5
    2b1c:	00731000 	rsbseq	r1, r3, r0
    2b20:	022cae01 	eoreq	sl, ip, #1, 28
    2b24:	91020000 	mrsls	r0, (UNDEF: 2)
    2b28:	0fd3116c 	svceq	0x00d3116c
    2b2c:	af010000 	svcge	0x00010000
    2b30:	00000315 	andeq	r0, r0, r5, lsl r3
    2b34:	00549102 	subseq	r9, r4, r2, lsl #2
    2b38:	0002320b 	andeq	r3, r2, fp, lsl #4
    2b3c:	00032500 	andeq	r2, r3, r0, lsl #10
    2b40:	019a1200 	orrseq	r1, sl, r0, lsl #4
    2b44:	00140000 	andseq	r0, r4, r0
    2b48:	00127914 	andseq	r7, r2, r4, lsl r9
    2b4c:	cca80100 	stfgts	f0, [r8]
    2b50:	12200028 	eorne	r0, r0, #40	; 0x28
    2b54:	01000000 	mrseq	r0, (UNDEF: 0)
    2b58:	1251159c 	subsne	r1, r1, #156, 10	; 0x27000000
    2b5c:	9f010000 	svcls	0x00010000
    2b60:	200028b2 			; <UNDEFINED> instruction: 0x200028b2
    2b64:	0000001a 	andeq	r0, r0, sl, lsl r0
    2b68:	86149c01 	ldrhi	r9, [r4], -r1, lsl #24
    2b6c:	01000012 	tsteq	r0, r2, lsl r0
    2b70:	00281883 	eoreq	r1, r8, r3, lsl #17
    2b74:	00009a20 	andeq	r9, r0, r0, lsr #20
    2b78:	0f9c0100 	svceq	0x009c0100
    2b7c:	00001351 	andeq	r1, r0, r1, asr r3
    2b80:	27c87b01 	strbcs	r7, [r8, r1, lsl #22]
    2b84:	00502000 	subseq	r2, r0, r0
    2b88:	9c010000 	stcls	0, cr0, [r1], {-0}
    2b8c:	00000398 	muleq	r0, r8, r3
    2b90:	776f7216 			; <UNDEFINED> instruction: 0x776f7216
    2b94:	5b7b0100 	blpl	1ec2f9c <startup-0x1e13d064>
    2b98:	02000000 	andeq	r0, r0, #0
    2b9c:	91136f91 			; <UNDEFINED> instruction: 0x91136f91
    2ba0:	01000012 	tsteq	r0, r2, lsl r0
    2ba4:	00005b7b 	andeq	r5, r0, fp, ror fp
    2ba8:	6e910200 	cdpvs	2, 9, cr0, cr1, cr0, {0}
    2bac:	0012fa11 	andseq	pc, r2, r1, lsl sl	; <UNPREDICTABLE>
    2bb0:	5b7c0100 	blpl	1f02fb8 <startup-0x1e0fd048>
    2bb4:	02000000 	andeq	r0, r0, #0
    2bb8:	0f007791 	svceq	0x00007791
    2bbc:	00001375 	andeq	r1, r0, r5, ror r3
    2bc0:	278c7401 	strcs	r7, [ip, r1, lsl #8]
    2bc4:	003c2000 	eorseq	r2, ip, r0
    2bc8:	9c010000 	stcls	0, cr0, [r1], {-0}
    2bcc:	000003ba 			; <UNDEFINED> instruction: 0x000003ba
    2bd0:	01006316 	tsteq	r0, r6, lsl r3
    2bd4:	00005b74 	andeq	r5, r0, r4, ror fp
    2bd8:	77910200 	ldrvc	r0, [r1, r0, lsl #4]
    2bdc:	12b51700 	adcsne	r1, r5, #0, 14
    2be0:	6a010000 	bvs	42be8 <startup-0x1ffbd418>
    2be4:	0000005b 	andeq	r0, r0, fp, asr r0
    2be8:	20002758 	andcs	r2, r0, r8, asr r7
    2bec:	00000034 	andeq	r0, r0, r4, lsr r0
    2bf0:	03e09c01 	mvneq	r9, #256	; 0x100
    2bf4:	63100000 	tstvs	r0, #0
    2bf8:	5b6b0100 	blpl	1ac3000 <startup-0x1e53d000>
    2bfc:	02000000 	andeq	r0, r0, #0
    2c00:	0f007791 	svceq	0x00007791
    2c04:	0000135e 	andeq	r1, r0, lr, asr r3
    2c08:	27286301 	strcs	r6, [r8, -r1, lsl #6]!
    2c0c:	00302000 	eorseq	r2, r0, r0
    2c10:	9c010000 	stcls	0, cr0, [r1], {-0}
    2c14:	00000402 	andeq	r0, r0, r2, lsl #8
    2c18:	01006316 	tsteq	r0, r6, lsl r3
    2c1c:	00005b63 	andeq	r5, r0, r3, ror #22
    2c20:	77910200 	ldrvc	r0, [r1, r0, lsl #4]
    2c24:	12691700 	rsbne	r1, r9, #0, 14
    2c28:	57010000 	strpl	r0, [r1, -r0]
    2c2c:	0000005b 	andeq	r0, r0, fp, asr r0
    2c30:	200026d4 	ldrdcs	r2, [r0], -r4
    2c34:	00000054 	andeq	r0, r0, r4, asr r0
    2c38:	04299c01 	strteq	r9, [r9], #-3073	; 0xfffff3ff
    2c3c:	72100000 	andsvc	r0, r0, #0
    2c40:	5c010076 	stcpl	0, cr0, [r1], {118}	; 0x76
    2c44:	0000005b 	andeq	r0, r0, fp, asr r0
    2c48:	006f9102 	rsbeq	r9, pc, r2, lsl #2
    2c4c:	00131e17 	andseq	r1, r3, r7, lsl lr
    2c50:	5b4b0100 	blpl	12c3058 <startup-0x1ed3cfa8>
    2c54:	80000000 	andhi	r0, r0, r0
    2c58:	54200026 	strtpl	r0, [r0], #-38	; 0xffffffda
    2c5c:	01000000 	mrseq	r0, (UNDEF: 0)
    2c60:	0004509c 	muleq	r4, ip, r0
    2c64:	76721000 	ldrbtvc	r1, [r2], -r0
    2c68:	5b500100 	blpl	1403070 <startup-0x1ebfcf90>
    2c6c:	02000000 	andeq	r0, r0, #0
    2c70:	0f006f91 	svceq	0x00006f91
    2c74:	00001302 	andeq	r1, r0, r2, lsl #6
    2c78:	26564501 	ldrbcs	r4, [r6], -r1, lsl #10
    2c7c:	002a2000 	eoreq	r2, sl, r0
    2c80:	9c010000 	stcls	0, cr0, [r1], {-0}
    2c84:	00000474 	andeq	r0, r0, r4, ror r4
    2c88:	00101713 	andseq	r1, r0, r3, lsl r7
    2c8c:	5b450100 	blpl	1143094 <startup-0x1eebcf6c>
    2c90:	02000000 	andeq	r0, r0, #0
    2c94:	0f007791 	svceq	0x00007791
    2c98:	000012de 	ldrdeq	r1, [r0], -lr
    2c9c:	262c3f01 	strtcs	r3, [ip], -r1, lsl #30
    2ca0:	002a2000 	eoreq	r2, sl, r0
    2ca4:	9c010000 	stcls	0, cr0, [r1], {-0}
    2ca8:	00000498 	muleq	r0, r8, r4
    2cac:	000f3f13 	andeq	r3, pc, r3, lsl pc	; <UNPREDICTABLE>
    2cb0:	5b3f0100 	blpl	fc30b8 <startup-0x1f03cf48>
    2cb4:	02000000 	andeq	r0, r0, #0
    2cb8:	18007791 	stmdane	r0, {r0, r4, r7, r8, r9, sl, ip, sp, lr}
    2cbc:	00001330 	andeq	r1, r0, r0, lsr r3
    2cc0:	25dc3701 	ldrbcs	r3, [ip, #1793]	; 0x701
    2cc4:	00502000 	subseq	r2, r0, r0
    2cc8:	9c010000 	stcls	0, cr0, [r1], {-0}
    2ccc:	000004c6 	andeq	r0, r0, r6, asr #9
    2cd0:	01007816 	tsteq	r0, r6, lsl r8
    2cd4:	00005b37 	andeq	r5, r0, r7, lsr fp
    2cd8:	6f910200 	svcvs	0x00910200
    2cdc:	01006310 	tsteq	r0, r0, lsl r3
    2ce0:	00005b39 	andeq	r5, r0, r9, lsr fp
    2ce4:	77910200 	ldrvc	r0, [r1, r0, lsl #4]
    2ce8:	12cb1900 	sbcne	r1, fp, #0, 18
    2cec:	2f010000 	svccs	0x00010000
    2cf0:	20002598 	mulcs	r0, r8, r5
    2cf4:	00000044 	andeq	r0, r0, r4, asr #32
    2cf8:	78169c01 	ldmdavc	r6, {r0, sl, fp, ip, pc}
    2cfc:	5b2f0100 	blpl	bc3104 <startup-0x1f43cefc>
    2d00:	02000000 	andeq	r0, r0, #0
    2d04:	63106f91 	tstvs	r0, #580	; 0x244
    2d08:	5b310100 	blpl	c43110 <startup-0x1f3bcef0>
    2d0c:	02000000 	andeq	r0, r0, #0
    2d10:	00007791 	muleq	r0, r1, r7
    2d14:	00000140 	andeq	r0, r0, r0, asr #2
    2d18:	0b720004 	bleq	1c82d30 <startup-0x1e37d2d0>
    2d1c:	01040000 	mrseq	r0, (UNDEF: 4)
    2d20:	00000077 	andeq	r0, r0, r7, ror r0
    2d24:	0013e10c 	andseq	lr, r3, ip, lsl #2
    2d28:	002ab800 	eoreq	fp, sl, r0, lsl #16
    2d2c:	00009420 	andeq	r9, r0, r0, lsr #8
    2d30:	000ea300 	andeq	sl, lr, r0, lsl #6
    2d34:	059c0200 	ldreq	r0, [ip, #512]	; 0x200
    2d38:	02140000 	andseq	r0, r4, #0
    2d3c:	00006a04 	andeq	r6, r0, r4, lsl #20
    2d40:	13dc0300 	bicsne	r0, ip, #0, 6
    2d44:	05020000 	streq	r0, [r2, #-0]
    2d48:	0000006a 	andeq	r0, r0, sl, rrx
    2d4c:	023e0300 	eorseq	r0, lr, #0, 6
    2d50:	06020000 	streq	r0, [r2], -r0
    2d54:	0000006a 	andeq	r0, r0, sl, rrx
    2d58:	03670304 	cmneq	r7, #4, 6	; 0x10000000
    2d5c:	08020000 	stmdaeq	r2, {}	; <UNPREDICTABLE>
    2d60:	00000077 	andeq	r0, r0, r7, ror r0
    2d64:	03570308 	cmpeq	r7, #8, 6	; 0x20000000
    2d68:	09020000 	stmdbeq	r2, {}	; <UNPREDICTABLE>
    2d6c:	00000077 	andeq	r0, r0, r7, ror r0
    2d70:	0243030c 	subeq	r0, r3, #12, 6	; 0x30000000
    2d74:	0c020000 	stceq	0, cr0, [r2], {-0}
    2d78:	00000094 	muleq	r0, r4, r0
    2d7c:	04040010 	streq	r0, [r4], #-16
    2d80:	00000070 	andeq	r0, r0, r0, ror r0
    2d84:	28080105 	stmdacs	r8, {r0, r2, r8}
    2d88:	06000004 	streq	r0, [r0], -r4
    2d8c:	6e690504 	cdpvs	5, 6, cr0, cr9, cr4, {0}
    2d90:	8e070074 	mcrhi	0, 0, r0, cr7, cr4, {3}
    2d94:	08000000 	stmdaeq	r0, {}	; <UNPREDICTABLE>
    2d98:	0000008e 	andeq	r0, r0, lr, lsl #1
    2d9c:	00007708 	andeq	r7, r0, r8, lsl #14
    2da0:	04040000 	streq	r0, [r4], #-0
    2da4:	00000021 	andeq	r0, r0, r1, lsr #32
    2da8:	007e0404 	rsbseq	r0, lr, r4, lsl #8
    2dac:	9d090000 	stcls	0, cr0, [r9, #-0]
    2db0:	02000005 	andeq	r0, r0, #5
    2db4:	0000210d 	andeq	r2, r0, sp, lsl #2
    2db8:	13c30a00 	bicne	r0, r3, #0, 20
    2dbc:	0c010000 	stceq	0, cr0, [r1], {-0}
    2dc0:	20002b12 	andcs	r2, r0, r2, lsl fp
    2dc4:	0000003a 	andeq	r0, r0, sl, lsr r0
    2dc8:	00f39c01 	rscseq	r9, r3, r1, lsl #24
    2dcc:	6f0b0000 	svcvs	0x000b0000
    2dd0:	01006a62 	tsteq	r0, r2, ror #20
    2dd4:	0000f30c 	andeq	pc, r0, ip, lsl #6
    2dd8:	74910200 	ldrvc	r0, [r1], #512	; 0x200
    2ddc:	0013dc0c 	andseq	sp, r3, ip, lsl #24
    2de0:	6a0c0100 	bvs	3031e8 <startup-0x1fcfce18>
    2de4:	02000000 	andeq	r0, r0, #0
    2de8:	3e0c7091 	mcrcc	0, 0, r7, cr12, cr1, {4}
    2dec:	01000002 	tsteq	r0, r2
    2df0:	00006a0c 	andeq	r6, r0, ip, lsl #20
    2df4:	6c910200 	lfmvs	f0, 4, [r1], {0}
    2df8:	0003570c 	andeq	r5, r3, ip, lsl #14
    2dfc:	770c0100 	strvc	r0, [ip, -r0, lsl #2]
    2e00:	02000000 	andeq	r0, r0, #0
    2e04:	04006891 	streq	r6, [r0], #-2193	; 0xfffff76f
    2e08:	00009a04 	andeq	r9, r0, r4, lsl #20
    2e0c:	02430d00 	subeq	r0, r3, #0, 26
    2e10:	04010000 	streq	r0, [r1], #-0
    2e14:	20002ab8 			; <UNDEFINED> instruction: 0x20002ab8
    2e18:	0000005a 	andeq	r0, r0, sl, asr r0
    2e1c:	700c9c01 	andvc	r9, ip, r1, lsl #24
    2e20:	01000006 	tsteq	r0, r6
    2e24:	0000f304 	andeq	pc, r0, r4, lsl #6
    2e28:	6c910200 	lfmvs	f0, 4, [r1], {0}
    2e2c:	0013d20c 	andseq	sp, r3, ip, lsl #4
    2e30:	77040100 	strvc	r0, [r4, -r0, lsl #2]
    2e34:	02000000 	andeq	r0, r0, #0
    2e38:	860e6891 			; <UNDEFINED> instruction: 0x860e6891
    2e3c:	01000013 	tsteq	r0, r3, lsl r0
    2e40:	00007705 	andeq	r7, r0, r5, lsl #14
    2e44:	74910200 	ldrvc	r0, [r1], #512	; 0x200
    2e48:	0012620e 	andseq	r6, r2, lr, lsl #4
    2e4c:	77060100 	strvc	r0, [r6, -r0, lsl #2]
    2e50:	02000000 	andeq	r0, r0, #0
    2e54:	00007091 	muleq	r0, r1, r0
    2e58:	000002e0 	andeq	r0, r0, r0, ror #5
    2e5c:	0c3d0004 	ldceq	0, cr0, [sp], #-16
    2e60:	01040000 	mrseq	r0, (UNDEF: 4)
    2e64:	00000077 	andeq	r0, r0, r7, ror r0
    2e68:	00148e0c 	andseq	r8, r4, ip, lsl #28
    2e6c:	002b4c00 	eoreq	r4, fp, r0, lsl #24
    2e70:	0000e820 	andeq	lr, r0, r0, lsr #16
    2e74:	000f1d00 	andeq	r1, pc, r0, lsl #26
    2e78:	020c0200 	andeq	r0, ip, #0, 4
    2e7c:	00004e05 	andeq	r4, r0, r5, lsl #28
    2e80:	02e40300 	rsceq	r0, r4, #0, 6
    2e84:	07020000 	streq	r0, [r2, -r0]
    2e88:	0000004e 	andeq	r0, r0, lr, asr #32
    2e8c:	06070300 	streq	r0, [r7], -r0, lsl #6
    2e90:	08020000 	stmdaeq	r2, {}	; <UNPREDICTABLE>
    2e94:	0000004e 	andeq	r0, r0, lr, asr #32
    2e98:	10170304 	andsne	r0, r7, r4, lsl #6
    2e9c:	09020000 	stmdbeq	r2, {}	; <UNPREDICTABLE>
    2ea0:	00000055 	andeq	r0, r0, r5, asr r0
    2ea4:	04040008 	streq	r0, [r4], #-8
    2ea8:	00030807 	andeq	r0, r3, r7, lsl #16
    2eac:	5b040500 	blpl	1042b4 <startup-0x1fefbd4c>
    2eb0:	04000000 	streq	r0, [r0], #-0
    2eb4:	041f0801 	ldreq	r0, [pc], #-2049	; 2ebc <startup-0x1fffd144>
    2eb8:	69060000 	stmdbvs	r6, {}	; <UNPREDICTABLE>
    2ebc:	02000011 	andeq	r0, r0, #17
    2ec0:	0000210a 	andeq	r2, r0, sl, lsl #2
    2ec4:	00160700 	andseq	r0, r6, r0, lsl #14
    2ec8:	030c0000 	movweq	r0, #49152	; 0xc000
    2ecc:	00009e06 	andeq	r9, r0, r6, lsl #28
    2ed0:	04f50300 	ldrbteq	r0, [r5], #768	; 0x300
    2ed4:	07030000 	streq	r0, [r3, -r0]
    2ed8:	0000009e 	muleq	r0, lr, r0
    2edc:	001d0300 	andseq	r0, sp, r0, lsl #6
    2ee0:	08030000 	stmdaeq	r3, {}	; <UNPREDICTABLE>
    2ee4:	0000009e 	muleq	r0, lr, r0
    2ee8:	00120304 	andseq	r0, r2, r4, lsl #6
    2eec:	09030000 	stmdbeq	r3, {}	; <UNPREDICTABLE>
    2ef0:	0000009e 	muleq	r0, lr, r0
    2ef4:	04050008 	streq	r0, [r5], #-8
    2ef8:	00000062 	andeq	r0, r0, r2, rrx
    2efc:	000c3606 	andeq	r3, ip, r6, lsl #12
    2f00:	6d0a0300 	stcvs	3, cr0, [sl, #-0]
    2f04:	07000000 	streq	r0, [r0, -r0]
    2f08:	000005dc 	ldrdeq	r0, [r0], -ip
    2f0c:	28060424 	stmdacs	r6, {r2, r5, sl}
    2f10:	03000001 	movweq	r0, #1
    2f14:	000003bc 			; <UNDEFINED> instruction: 0x000003bc
    2f18:	01280704 			; <UNDEFINED> instruction: 0x01280704
    2f1c:	03000000 	movweq	r0, #0
    2f20:	000005e8 	andeq	r0, r0, r8, ror #11
    2f24:	012e0804 			; <UNDEFINED> instruction: 0x012e0804
    2f28:	03040000 	movweq	r0, #16384	; 0x4000
    2f2c:	00000560 	andeq	r0, r0, r0, ror #10
    2f30:	012e0904 			; <UNDEFINED> instruction: 0x012e0904
    2f34:	03080000 	movweq	r0, #32768	; 0x8000
    2f38:	0000057b 	andeq	r0, r0, fp, ror r5
    2f3c:	01460c04 	cmpeq	r6, r4, lsl #24
    2f40:	030c0000 	movweq	r0, #49152	; 0xc000
    2f44:	000002dd 	ldrdeq	r0, [r0], -sp
    2f48:	01460d04 	cmpeq	r6, r4, lsl #26
    2f4c:	03100000 	tsteq	r0, #0
    2f50:	000003ce 	andeq	r0, r0, lr, asr #7
    2f54:	012e1004 			; <UNDEFINED> instruction: 0x012e1004
    2f58:	03140000 	tsteq	r4, #0
    2f5c:	00000048 	andeq	r0, r0, r8, asr #32
    2f60:	012e1104 			; <UNDEFINED> instruction: 0x012e1104
    2f64:	03180000 	tsteq	r8, #0
    2f68:	0000034d 	andeq	r0, r0, sp, asr #6
    2f6c:	012e1204 			; <UNDEFINED> instruction: 0x012e1204
    2f70:	031c0000 	tsteq	ip, #0
    2f74:	0000035d 	andeq	r0, r0, sp, asr r3
    2f78:	012e1304 			; <UNDEFINED> instruction: 0x012e1304
    2f7c:	00200000 	eoreq	r0, r0, r0
    2f80:	00a40405 	adceq	r0, r4, r5, lsl #8
    2f84:	04080000 	streq	r0, [r8], #-0
    2f88:	746e6905 	strbtvc	r6, [lr], #-2309	; 0xfffff6fb
    2f8c:	01400900 	cmpeq	r0, r0, lsl #18
    2f90:	400a0000 	andmi	r0, sl, r0
    2f94:	00000001 	andeq	r0, r0, r1
    2f98:	00af0405 	adceq	r0, pc, r5, lsl #8
    2f9c:	04050000 	streq	r0, [r5], #-0
    2fa0:	00000135 	andeq	r0, r0, r5, lsr r1
    2fa4:	0005dd06 	andeq	sp, r5, r6, lsl #26
    2fa8:	af150400 	svcge	0x00150400
    2fac:	0b000000 	bleq	2fb4 <startup-0x1fffd04c>
    2fb0:	00000162 	andeq	r0, r0, r2, ror #2
    2fb4:	00000162 	andeq	r0, r0, r2, ror #2
    2fb8:	0405000c 	streq	r0, [r5], #-12
    2fbc:	0000014c 	andeq	r0, r0, ip, asr #2
    2fc0:	0004a20d 	andeq	sl, r4, sp, lsl #4
    2fc4:	571c0400 	ldrpl	r0, [ip, -r0, lsl #8]
    2fc8:	0d000001 	stceq	0, cr0, [r0, #-4]
    2fcc:	00000393 	muleq	r0, r3, r3
    2fd0:	012e1d04 			; <UNDEFINED> instruction: 0x012e1d04
    2fd4:	5b0b0000 	blpl	2c2fdc <startup-0x1fd3d024>
    2fd8:	8f000000 	svchi	0x00000000
    2fdc:	0e000001 	cdpeq	0, 0, cr0, cr0, cr1, {0}
    2fe0:	0000018f 	andeq	r0, r0, pc, lsl #3
    2fe4:	040003ff 	streq	r0, [r0], #-1023	; 0xfffffc01
    2fe8:	037a0704 	cmneq	sl, #4, 14	; 0x100000
    2fec:	be0f0000 	cdplt	0, 0, cr0, cr15, cr0, {0}
    2ff0:	05000014 	streq	r0, [r0, #-20]	; 0xffffffec
    2ff4:	00017e03 	andeq	r7, r1, r3, lsl #28
    2ff8:	e8030500 	stmda	r3, {r8, sl}
    2ffc:	0f200071 	svceq	0x00200071
    3000:	0000145e 	andeq	r1, r0, lr, asr r4
    3004:	017e0306 	cmneq	lr, r6, lsl #6
    3008:	03050000 	movweq	r0, #20480	; 0x5000
    300c:	200075e8 	andcs	r7, r0, r8, ror #11
    3010:	00143b0f 	andseq	r3, r4, pc, lsl #22
    3014:	7e030700 	cdpvc	7, 0, cr0, cr3, cr0, {0}
    3018:	05000001 	streq	r0, [r0, #-1]
    301c:	0079e803 	rsbseq	lr, r9, r3, lsl #16
    3020:	14201020 	strtne	r1, [r0], #-32	; 0xffffffe0
    3024:	08010000 	stmdaeq	r1, {}	; <UNPREDICTABLE>
    3028:	0000009e 	muleq	r0, lr, r0
    302c:	51c80305 	bicpl	r0, r8, r5, lsl #6
    3030:	fa102000 	blx	40b038 <startup-0x1fbf4fc8>
    3034:	01000014 	tsteq	r0, r4, lsl r0
    3038:	00009e09 	andeq	r9, r0, r9, lsl #28
    303c:	94030500 	strls	r0, [r3], #-1280	; 0xfffffb00
    3040:	10200051 	eorne	r0, r0, r1, asr r0
    3044:	00001481 	andeq	r1, r0, r1, lsl #9
    3048:	009e0a01 	addseq	r0, lr, r1, lsl #20
    304c:	03050000 	movweq	r0, #20480	; 0x5000
    3050:	200051d8 	ldrdcs	r5, [r0], -r8
    3054:	0014d110 	andseq	sp, r4, r0, lsl r1
    3058:	620c0100 	andvs	r0, ip, #0, 2
    305c:	05000000 	streq	r0, [r0, #-0]
    3060:	00518803 	subseq	r8, r1, r3, lsl #16
    3064:	14701020 	ldrbtne	r1, [r0], #-32	; 0xffffffe0
    3068:	0d010000 	stceq	0, cr0, [r1, #-0]
    306c:	00000062 	andeq	r0, r0, r2, rrx
    3070:	517c0305 	cmnpl	ip, r5, lsl #6
    3074:	4e102000 	cdpmi	0, 1, cr2, cr0, cr0, {0}
    3078:	01000014 	tsteq	r0, r4, lsl r0
    307c:	0000620e 	andeq	r6, r0, lr, lsl #4
    3080:	70030500 	andvc	r0, r3, r0, lsl #10
    3084:	10200051 	eorne	r0, r0, r1, asr r0
    3088:	000014ef 	andeq	r1, r0, pc, ror #9
    308c:	014c1101 	cmpeq	ip, r1, lsl #2
    3090:	03050000 	movweq	r0, #20480	; 0x5000
    3094:	20005198 	mulcs	r0, r8, r1
    3098:	00141310 	andseq	r1, r4, r0, lsl r3
    309c:	a4120100 	ldrge	r0, [r2], #-256	; 0xffffff00
    30a0:	05000000 	streq	r0, [r0, #-0]
    30a4:	0051cc03 	subseq	ip, r1, r3, lsl #24
    30a8:	00a40b20 	adceq	r0, r4, r0, lsr #22
    30ac:	02610000 	rsbeq	r0, r1, #0
    30b0:	8f110000 	svchi	0x00110000
    30b4:	00000001 	andeq	r0, r0, r1
    30b8:	142d1000 	strtne	r1, [sp], #-0
    30bc:	13010000 	movwne	r0, #4096	; 0x1000
    30c0:	00000251 	andeq	r0, r0, r1, asr r2
    30c4:	51bc0305 			; <UNDEFINED> instruction: 0x51bc0305
    30c8:	e2122000 	ands	r2, r2, #0
    30cc:	01000014 	tsteq	r0, r4, lsl r0
    30d0:	002bc022 	eoreq	ip, fp, r2, lsr #32
    30d4:	00007420 	andeq	r7, r0, r0, lsr #8
    30d8:	a79c0100 	ldrge	r0, [ip, r0, lsl #2]
    30dc:	13000002 	movwne	r0, #2
    30e0:	000014ef 	andeq	r1, r0, pc, ror #9
    30e4:	01622201 	cmneq	r2, r1, lsl #4
    30e8:	91020000 	mrsls	r0, (UNDEF: 2)
    30ec:	07f70f6c 	ldrbeq	r0, [r7, ip, ror #30]!
    30f0:	23010000 	movwcs	r0, #4096	; 0x1000
    30f4:	0000012e 	andeq	r0, r0, lr, lsr #2
    30f8:	7de80305 	stclvc	3, cr0, [r8, #20]!
    30fc:	14002000 	strne	r2, [r0], #-0
    3100:	000003f5 	strdeq	r0, [r0], -r5
    3104:	2b4c1401 	blcs	1308110 <startup-0x1ecf7ef0>
    3108:	00742000 	rsbseq	r2, r4, r0
    310c:	9c010000 	stcls	0, cr0, [r1], {-0}
    3110:	000c700f 	andeq	r7, ip, pc
    3114:	9e160100 	muflss	f0, f6, f0
    3118:	02000000 	andeq	r0, r0, #0
    311c:	7a0f7491 	bvc	3e0368 <startup-0x1fc1fc98>
    3120:	0100000c 	tsteq	r0, ip
    3124:	00009e19 	andeq	r9, r0, r9, lsl lr
    3128:	70910200 	addsvc	r0, r1, r0, lsl #4
    312c:	000a700f 	andeq	r7, sl, pc
    3130:	9e1c0100 	muflse	f0, f4, f0
    3134:	02000000 	andeq	r0, r0, #0
    3138:	00006c91 	muleq	r0, r1, ip
    313c:	000002e0 	andeq	r0, r0, r0, ror #5
    3140:	0d460004 	stcleq	0, cr0, [r6, #-16]
    3144:	01040000 	mrseq	r0, (UNDEF: 4)
    3148:	00000077 	andeq	r0, r0, r7, ror r0
    314c:	0015470c 	andseq	r4, r5, ip, lsl #14
    3150:	002c3400 	eoreq	r3, ip, r0, lsl #8
    3154:	0000e820 	andeq	lr, r0, r0, lsr #16
    3158:	000ff700 	andeq	pc, pc, r0, lsl #14
    315c:	020c0200 	andeq	r0, ip, #0, 4
    3160:	00004e05 	andeq	r4, r0, r5, lsl #28
    3164:	02e40300 	rsceq	r0, r4, #0, 6
    3168:	07020000 	streq	r0, [r2, -r0]
    316c:	0000004e 	andeq	r0, r0, lr, asr #32
    3170:	06070300 	streq	r0, [r7], -r0, lsl #6
    3174:	08020000 	stmdaeq	r2, {}	; <UNPREDICTABLE>
    3178:	0000004e 	andeq	r0, r0, lr, asr #32
    317c:	10170304 	andsne	r0, r7, r4, lsl #6
    3180:	09020000 	stmdbeq	r2, {}	; <UNPREDICTABLE>
    3184:	00000055 	andeq	r0, r0, r5, asr r0
    3188:	04040008 	streq	r0, [r4], #-8
    318c:	00030807 	andeq	r0, r3, r7, lsl #16
    3190:	5b040500 	blpl	104598 <startup-0x1fefba68>
    3194:	04000000 	streq	r0, [r0], #-0
    3198:	041f0801 	ldreq	r0, [pc], #-2049	; 31a0 <startup-0x1fffce60>
    319c:	69060000 	stmdbvs	r6, {}	; <UNPREDICTABLE>
    31a0:	02000011 	andeq	r0, r0, #17
    31a4:	0000210a 	andeq	r2, r0, sl, lsl #2
    31a8:	00160700 	andseq	r0, r6, r0, lsl #14
    31ac:	030c0000 	movweq	r0, #49152	; 0xc000
    31b0:	00009e06 	andeq	r9, r0, r6, lsl #28
    31b4:	04f50300 	ldrbteq	r0, [r5], #768	; 0x300
    31b8:	07030000 	streq	r0, [r3, -r0]
    31bc:	0000009e 	muleq	r0, lr, r0
    31c0:	001d0300 	andseq	r0, sp, r0, lsl #6
    31c4:	08030000 	stmdaeq	r3, {}	; <UNPREDICTABLE>
    31c8:	0000009e 	muleq	r0, lr, r0
    31cc:	00120304 	andseq	r0, r2, r4, lsl #6
    31d0:	09030000 	stmdbeq	r3, {}	; <UNPREDICTABLE>
    31d4:	0000009e 	muleq	r0, lr, r0
    31d8:	04050008 	streq	r0, [r5], #-8
    31dc:	00000062 	andeq	r0, r0, r2, rrx
    31e0:	000c3606 	andeq	r3, ip, r6, lsl #12
    31e4:	6d0a0300 	stcvs	3, cr0, [sl, #-0]
    31e8:	07000000 	streq	r0, [r0, -r0]
    31ec:	000005dc 	ldrdeq	r0, [r0], -ip
    31f0:	28060424 	stmdacs	r6, {r2, r5, sl}
    31f4:	03000001 	movweq	r0, #1
    31f8:	000003bc 			; <UNDEFINED> instruction: 0x000003bc
    31fc:	01280704 			; <UNDEFINED> instruction: 0x01280704
    3200:	03000000 	movweq	r0, #0
    3204:	000005e8 	andeq	r0, r0, r8, ror #11
    3208:	012e0804 			; <UNDEFINED> instruction: 0x012e0804
    320c:	03040000 	movweq	r0, #16384	; 0x4000
    3210:	00000560 	andeq	r0, r0, r0, ror #10
    3214:	012e0904 			; <UNDEFINED> instruction: 0x012e0904
    3218:	03080000 	movweq	r0, #32768	; 0x8000
    321c:	0000057b 	andeq	r0, r0, fp, ror r5
    3220:	01460c04 	cmpeq	r6, r4, lsl #24
    3224:	030c0000 	movweq	r0, #49152	; 0xc000
    3228:	000002dd 	ldrdeq	r0, [r0], -sp
    322c:	01460d04 	cmpeq	r6, r4, lsl #26
    3230:	03100000 	tsteq	r0, #0
    3234:	000003ce 	andeq	r0, r0, lr, asr #7
    3238:	012e1004 			; <UNDEFINED> instruction: 0x012e1004
    323c:	03140000 	tsteq	r4, #0
    3240:	00000048 	andeq	r0, r0, r8, asr #32
    3244:	012e1104 			; <UNDEFINED> instruction: 0x012e1104
    3248:	03180000 	tsteq	r8, #0
    324c:	0000034d 	andeq	r0, r0, sp, asr #6
    3250:	012e1204 			; <UNDEFINED> instruction: 0x012e1204
    3254:	031c0000 	tsteq	ip, #0
    3258:	0000035d 	andeq	r0, r0, sp, asr r3
    325c:	012e1304 			; <UNDEFINED> instruction: 0x012e1304
    3260:	00200000 	eoreq	r0, r0, r0
    3264:	00a40405 	adceq	r0, r4, r5, lsl #8
    3268:	04080000 	streq	r0, [r8], #-0
    326c:	746e6905 	strbtvc	r6, [lr], #-2309	; 0xfffff6fb
    3270:	01400900 	cmpeq	r0, r0, lsl #18
    3274:	400a0000 	andmi	r0, sl, r0
    3278:	00000001 	andeq	r0, r0, r1
    327c:	00af0405 	adceq	r0, pc, r5, lsl #8
    3280:	04050000 	streq	r0, [r5], #-0
    3284:	00000135 	andeq	r0, r0, r5, lsr r1
    3288:	0005dd06 	andeq	sp, r5, r6, lsl #26
    328c:	af150400 	svcge	0x00150400
    3290:	0b000000 	bleq	3298 <startup-0x1fffcd68>
    3294:	00000162 	andeq	r0, r0, r2, ror #2
    3298:	00000162 	andeq	r0, r0, r2, ror #2
    329c:	0405000c 	streq	r0, [r5], #-12
    32a0:	0000014c 	andeq	r0, r0, ip, asr #2
    32a4:	0004a20d 	andeq	sl, r4, sp, lsl #4
    32a8:	571c0400 	ldrpl	r0, [ip, -r0, lsl #8]
    32ac:	0d000001 	stceq	0, cr0, [r0, #-4]
    32b0:	00000393 	muleq	r0, r3, r3
    32b4:	012e1d04 			; <UNDEFINED> instruction: 0x012e1d04
    32b8:	5b0b0000 	blpl	2c32c0 <startup-0x1fd3cd40>
    32bc:	8f000000 	svchi	0x00000000
    32c0:	0e000001 	cdpeq	0, 0, cr0, cr0, cr1, {0}
    32c4:	0000018f 	andeq	r0, r0, pc, lsl #3
    32c8:	040003ff 	streq	r0, [r0], #-1023	; 0xfffffc01
    32cc:	037a0704 	cmneq	sl, #4, 14	; 0x100000
    32d0:	140f0000 	strne	r0, [pc], #-0	; 32d8 <startup-0x1fffcd28>
    32d4:	05000015 	streq	r0, [r0, #-21]	; 0xffffffeb
    32d8:	00017e03 	andeq	r7, r1, r3, lsl #28
    32dc:	ec030500 	cfstr32	mvfx0, [r3], {-0}
    32e0:	0f20007d 	svceq	0x0020007d
    32e4:	000015d7 	ldrdeq	r1, [r0], -r7
    32e8:	017e0306 	cmneq	lr, r6, lsl #6
    32ec:	03050000 	movweq	r0, #20480	; 0x5000
    32f0:	200081ec 	andcs	r8, r0, ip, ror #3
    32f4:	0015b40f 	andseq	fp, r5, pc, lsl #8
    32f8:	7e030700 	cdpvc	7, 0, cr0, cr3, cr0, {0}
    32fc:	05000001 	streq	r0, [r0, #-1]
    3300:	0085ec03 	addeq	lr, r5, r3, lsl #24
    3304:	158a1020 	strne	r1, [sl, #32]
    3308:	08010000 	stmdaeq	r1, {}	; <UNPREDICTABLE>
    330c:	0000009e 	muleq	r0, lr, r0
    3310:	52440305 	subpl	r0, r4, #335544320	; 0x14000000
    3314:	3a102000 	bcc	40b31c <startup-0x1fbf4ce4>
    3318:	01000015 	tsteq	r0, r5, lsl r0
    331c:	00009e09 	andeq	r9, r0, r9, lsl #28
    3320:	00030500 	andeq	r0, r3, r0, lsl #10
    3324:	10200052 	eorne	r0, r0, r2, asr r0
    3328:	00001506 	andeq	r1, r0, r6, lsl #10
    332c:	009e0a01 	addseq	r0, lr, r1, lsl #20
    3330:	03050000 	movweq	r0, #20480	; 0x5000
    3334:	20005228 	andcs	r5, r0, r8, lsr #4
    3338:	00157810 	andseq	r7, r5, r0, lsl r8
    333c:	620c0100 	andvs	r0, ip, #0, 2
    3340:	05000000 	streq	r0, [r0, #-0]
    3344:	00522c03 	subseq	r2, r2, r3, lsl #24
    3348:	15281020 	strne	r1, [r8, #-32]!	; 0xffffffe0
    334c:	0d010000 	stceq	0, cr0, [r1, #-0]
    3350:	00000062 	andeq	r0, r0, r2, rrx
    3354:	52380305 	eorspl	r0, r8, #335544320	; 0x14000000
    3358:	f6102000 			; <UNDEFINED> instruction: 0xf6102000
    335c:	01000015 	tsteq	r0, r5, lsl r0
    3360:	0000620e 	andeq	r6, r0, lr, lsl #4
    3364:	1c030500 	cfstr32ne	mvfx0, [r3], {-0}
    3368:	10200052 	eorne	r0, r0, r2, asr r0
    336c:	000015ea 	andeq	r1, r0, sl, ror #11
    3370:	014c1101 	cmpeq	ip, r1, lsl #2
    3374:	03050000 	movweq	r0, #20480	; 0x5000
    3378:	200051dc 	ldrdcs	r5, [r0], -ip
    337c:	00159810 	andseq	r9, r5, r0, lsl r8
    3380:	a4120100 	ldrge	r0, [r2], #-256	; 0xffffff00
    3384:	05000000 	streq	r0, [r0, #-0]
    3388:	00521003 	subseq	r1, r2, r3
    338c:	00a40b20 	adceq	r0, r4, r0, lsr #22
    3390:	02610000 	rsbeq	r0, r1, #0
    3394:	8f110000 	svchi	0x00110000
    3398:	00000001 	andeq	r0, r0, r1
    339c:	15c81000 	strbne	r1, [r8]
    33a0:	13010000 	movwne	r0, #4096	; 0x1000
    33a4:	00000251 	andeq	r0, r0, r1, asr r2
    33a8:	52040305 	andpl	r0, r4, #335544320	; 0x14000000
    33ac:	a6122000 	ldrge	r2, [r2], -r0
    33b0:	01000015 	tsteq	r0, r5, lsl r0
    33b4:	002ca822 	eoreq	sl, ip, r2, lsr #16
    33b8:	00007420 	andeq	r7, r0, r0, lsr #8
    33bc:	a79c0100 	ldrge	r0, [ip, r0, lsl #2]
    33c0:	13000002 	movwne	r0, #2
    33c4:	000015ea 	andeq	r1, r0, sl, ror #11
    33c8:	01622201 	cmneq	r2, r1, lsl #4
    33cc:	91020000 	mrsls	r0, (UNDEF: 2)
    33d0:	07f70f6c 	ldrbeq	r0, [r7, ip, ror #30]!
    33d4:	23010000 	movwcs	r0, #4096	; 0x1000
    33d8:	0000012e 	andeq	r0, r0, lr, lsr #2
    33dc:	89ec0305 	stmibhi	ip!, {r0, r2, r8, r9}^
    33e0:	14002000 	strne	r2, [r0], #-0
    33e4:	000003f5 	strdeq	r0, [r0], -r5
    33e8:	2c341401 	cfldrscs	mvf1, [r4], #-4
    33ec:	00742000 	rsbseq	r2, r4, r0
    33f0:	9c010000 	stcls	0, cr0, [r1], {-0}
    33f4:	000c700f 	andeq	r7, ip, pc
    33f8:	9e160100 	muflss	f0, f6, f0
    33fc:	02000000 	andeq	r0, r0, #0
    3400:	7a0f7491 	bvc	3e064c <startup-0x1fc1f9b4>
    3404:	0100000c 	tsteq	r0, ip
    3408:	00009e19 	andeq	r9, r0, r9, lsl lr
    340c:	70910200 	addsvc	r0, r1, r0, lsl #4
    3410:	000a700f 	andeq	r7, sl, pc
    3414:	9e1c0100 	muflse	f0, f4, f0
    3418:	02000000 	andeq	r0, r0, #0
    341c:	00006c91 	muleq	r0, r1, ip

Disassembly of section .debug_abbrev:

00000000 <.debug_abbrev>:
   0:	25011101 	strcs	r1, [r1, #-257]	; 0xfffffeff
   4:	030b130e 	movweq	r1, #45838	; 0xb30e
   8:	1117550e 	tstne	r7, lr, lsl #10
   c:	00171001 	andseq	r1, r7, r1
  10:	01130200 	tsteq	r3, r0, lsl #4
  14:	0b3a0b0b 	bleq	e82c48 <startup-0x1f17d3b8>
  18:	13010b3b 	movwne	r0, #6971	; 0x1b3b
  1c:	0d030000 	stceq	0, cr0, [r3, #-0]
  20:	3a0e0300 	bcc	380c28 <startup-0x1fc7f3d8>
  24:	490b3b0b 	stmdbmi	fp, {r0, r1, r3, r8, r9, fp, ip, sp}
  28:	000b3813 	andeq	r3, fp, r3, lsl r8
  2c:	00240400 	eoreq	r0, r4, r0, lsl #8
  30:	0b3e0b0b 	bleq	f82c64 <startup-0x1f07d39c>
  34:	00000e03 	andeq	r0, r0, r3, lsl #28
  38:	0b000f05 	bleq	3c54 <startup-0x1fffc3ac>
  3c:	0013490b 	andseq	r4, r3, fp, lsl #18
  40:	00160600 	andseq	r0, r6, r0, lsl #12
  44:	0b3a0e03 	bleq	e83858 <startup-0x1f17c7a8>
  48:	13490b3b 	movtne	r0, #39739	; 0x9b3b
  4c:	13070000 	movwne	r0, #28672	; 0x7000
  50:	0b0e0301 	bleq	380c5c <startup-0x1fc7f3a4>
  54:	3b0b3a0b 	blcc	2ce888 <startup-0x1fd31778>
  58:	0013010b 	andseq	r0, r3, fp, lsl #2
  5c:	00240800 	eoreq	r0, r4, r0, lsl #16
  60:	0b3e0b0b 	bleq	f82c94 <startup-0x1f07d36c>
  64:	00000803 	andeq	r0, r0, r3, lsl #16
  68:	27011509 	strcs	r1, [r1, -r9, lsl #10]
  6c:	00130119 	andseq	r0, r3, r9, lsl r1
  70:	00050a00 	andeq	r0, r5, r0, lsl #20
  74:	00001349 	andeq	r1, r0, r9, asr #6
  78:	4901010b 	stmdbmi	r1, {r0, r1, r3, r8}
  7c:	00130113 	andseq	r0, r3, r3, lsl r1
  80:	00210c00 	eoreq	r0, r1, r0, lsl #24
  84:	340d0000 	strcc	r0, [sp], #-0
  88:	3a0e0300 	bcc	380c90 <startup-0x1fc7f370>
  8c:	490b3b0b 	stmdbmi	fp, {r0, r1, r3, r8, r9, fp, ip, sp}
  90:	3c193f13 	ldccc	15, cr3, [r9], {19}
  94:	0e000019 	mcreq	0, 0, r0, cr0, cr9, {0}
  98:	13490021 	movtne	r0, #36897	; 0x9021
  9c:	0000052f 	andeq	r0, r0, pc, lsr #10
  a0:	4900210f 	stmdbmi	r0, {r0, r1, r2, r3, r8, sp}
  a4:	000b2f13 	andeq	r2, fp, r3, lsl pc
  a8:	00341000 	eorseq	r1, r4, r0
  ac:	0b3a0e03 	bleq	e838c0 <startup-0x1f17c740>
  b0:	13490b3b 	movtne	r0, #39739	; 0x9b3b
  b4:	1802193f 	stmdane	r2, {r0, r1, r2, r3, r4, r5, r8, fp, ip}
  b8:	34110000 	ldrcc	r0, [r1], #-0
  bc:	3a0e0300 	bcc	380cc4 <startup-0x1fc7f33c>
  c0:	490b3b0b 	stmdbmi	fp, {r0, r1, r3, r8, r9, fp, ip, sp}
  c4:	00180213 	andseq	r0, r8, r3, lsl r2
  c8:	00341200 	eorseq	r1, r4, r0, lsl #4
  cc:	0b3a0803 	bleq	e820e0 <startup-0x1f17df20>
  d0:	13490b3b 	movtne	r0, #39739	; 0x9b3b
  d4:	1802193f 	stmdane	r2, {r0, r1, r2, r3, r4, r5, r8, fp, ip}
  d8:	2e130000 	cdpcs	0, 1, cr0, cr3, cr0, {0}
  dc:	03193f01 	tsteq	r9, #1, 30
  e0:	3b0b3a0e 	blcc	2ce920 <startup-0x1fd316e0>
  e4:	1119270b 	tstne	r9, fp, lsl #14
  e8:	40061201 	andmi	r1, r6, r1, lsl #4
  ec:	19429618 	stmdbne	r2, {r3, r4, r9, sl, ip, pc}^
  f0:	00001301 	andeq	r1, r0, r1, lsl #6
  f4:	03003414 	movweq	r3, #1044	; 0x414
  f8:	3b0b3a0e 	blcc	2ce938 <startup-0x1fd316c8>
  fc:	02134905 	andseq	r4, r3, #81920	; 0x14000
 100:	15000018 	strne	r0, [r0, #-24]	; 0xffffffe8
 104:	0111010b 	tsteq	r1, fp, lsl #2
 108:	00000612 	andeq	r0, r0, r2, lsl r6
 10c:	3f002e16 	svccc	0x00002e16
 110:	3a0e0319 	bcc	380d7c <startup-0x1fc7f284>
 114:	270b3b0b 	strcs	r3, [fp, -fp, lsl #22]
 118:	12011119 	andne	r1, r1, #1073741830	; 0x40000006
 11c:	96184006 	ldrls	r4, [r8], -r6
 120:	00001942 	andeq	r1, r0, r2, asr #18
 124:	3f002e17 	svccc	0x00002e17
 128:	3a0e0319 	bcc	380d94 <startup-0x1fc7f26c>
 12c:	270b3b0b 	strcs	r3, [fp, -fp, lsl #22]
 130:	12011119 	andne	r1, r1, #1073741830	; 0x40000006
 134:	97184006 	ldrls	r4, [r8, -r6]
 138:	00001942 	andeq	r1, r0, r2, asr #18
 13c:	01110100 	tsteq	r1, r0, lsl #2
 140:	0b130e25 	bleq	4c39dc <startup-0x1fb3c624>
 144:	01110e03 	tsteq	r1, r3, lsl #28
 148:	17100612 			; <UNDEFINED> instruction: 0x17100612
 14c:	13020000 	movwne	r0, #8192	; 0x2000
 150:	3a0b0b01 	bcc	2c2d5c <startup-0x1fd3d2a4>
 154:	010b3b0b 	tsteq	fp, fp, lsl #22
 158:	03000013 	movweq	r0, #19
 15c:	0e03000d 	cdpeq	0, 0, cr0, cr3, cr13, {0}
 160:	0b3b0b3a 	bleq	ec2e50 <startup-0x1f13d1b0>
 164:	0b381349 	bleq	e04e90 <startup-0x1f1fb170>
 168:	24040000 	strcs	r0, [r4], #-0
 16c:	3e0b0b00 	vmlacc.f64	d0, d11, d0
 170:	000e030b 	andeq	r0, lr, fp, lsl #6
 174:	000f0500 	andeq	r0, pc, r0, lsl #10
 178:	13490b0b 	movtne	r0, #39691	; 0x9b0b
 17c:	16060000 	strne	r0, [r6], -r0
 180:	3a0e0300 	bcc	380d88 <startup-0x1fc7f278>
 184:	490b3b0b 	stmdbmi	fp, {r0, r1, r3, r8, r9, fp, ip, sp}
 188:	07000013 	smladeq	r0, r3, r0, r0
 18c:	0e030113 	mcreq	1, 0, r0, cr3, cr3, {0}
 190:	0b3a0b0b 	bleq	e82dc4 <startup-0x1f17d23c>
 194:	13010b3b 	movwne	r0, #6971	; 0x1b3b
 198:	24080000 	strcs	r0, [r8], #-0
 19c:	3e0b0b00 	vmlacc.f64	d0, d11, d0
 1a0:	0008030b 	andeq	r0, r8, fp, lsl #6
 1a4:	01150900 	tsteq	r5, r0, lsl #18
 1a8:	13011927 	movwne	r1, #6439	; 0x1927
 1ac:	050a0000 	streq	r0, [sl, #-0]
 1b0:	00134900 	andseq	r4, r3, r0, lsl #18
 1b4:	01010b00 	tsteq	r1, r0, lsl #22
 1b8:	13011349 	movwne	r1, #4937	; 0x1349
 1bc:	210c0000 	mrscs	r0, (UNDEF: 12)
 1c0:	0d000000 	stceq	0, cr0, [r0, #-0]
 1c4:	0e030034 	mcreq	0, 0, r0, cr3, cr4, {1}
 1c8:	0b3b0b3a 	bleq	ec2eb8 <startup-0x1f13d148>
 1cc:	193f1349 	ldmdbne	pc!, {r0, r3, r6, r8, r9, ip}	; <UNPREDICTABLE>
 1d0:	0000193c 	andeq	r1, r0, ip, lsr r9
 1d4:	4700340e 	strmi	r3, [r0, -lr, lsl #8]
 1d8:	3b0b3a13 	blcc	2cea2c <startup-0x1fd315d4>
 1dc:	0018020b 	andseq	r0, r8, fp, lsl #4
 1e0:	012e0f00 			; <UNDEFINED> instruction: 0x012e0f00
 1e4:	0e03193f 			; <UNDEFINED> instruction: 0x0e03193f
 1e8:	0b3b0b3a 	bleq	ec2ed8 <startup-0x1f13d128>
 1ec:	01111927 	tsteq	r1, r7, lsr #18
 1f0:	18400612 	stmdane	r0, {r1, r4, r9, sl}^
 1f4:	01194296 			; <UNDEFINED> instruction: 0x01194296
 1f8:	10000013 	andne	r0, r0, r3, lsl r0
 1fc:	0e030005 	cdpeq	0, 0, cr0, cr3, cr5, {0}
 200:	0b3b0b3a 	bleq	ec2ef0 <startup-0x1f13d110>
 204:	18021349 	stmdane	r2, {r0, r3, r6, r8, r9, ip}
 208:	2e110000 	cdpcs	0, 1, cr0, cr1, cr0, {0}
 20c:	03193f01 	tsteq	r9, #1, 30
 210:	3b0b3a0e 	blcc	2cea50 <startup-0x1fd315b0>
 214:	1119270b 	tstne	r9, fp, lsl #14
 218:	40061201 	andmi	r1, r6, r1, lsl #4
 21c:	19429718 	stmdbne	r2, {r3, r4, r8, r9, sl, ip, pc}^
 220:	01000000 	mrseq	r0, (UNDEF: 0)
 224:	0e250111 	mcreq	1, 1, r0, cr5, cr1, {0}
 228:	0e030b13 	vmoveq.32	d3[0], r0
 22c:	06120111 			; <UNDEFINED> instruction: 0x06120111
 230:	00001710 	andeq	r1, r0, r0, lsl r7
 234:	0b011302 	bleq	44e44 <startup-0x1ffbb1bc>
 238:	3b0b3a0b 	blcc	2cea6c <startup-0x1fd31594>
 23c:	0013010b 	andseq	r0, r3, fp, lsl #2
 240:	000d0300 	andeq	r0, sp, r0, lsl #6
 244:	0b3a0e03 	bleq	e83a58 <startup-0x1f17c5a8>
 248:	13490b3b 	movtne	r0, #39739	; 0x9b3b
 24c:	00000b38 	andeq	r0, r0, r8, lsr fp
 250:	0b002404 	bleq	9268 <startup-0x1fff6d98>
 254:	030b3e0b 	movweq	r3, #48651	; 0xbe0b
 258:	0500000e 	streq	r0, [r0, #-14]
 25c:	0b0b000f 	bleq	2c02a0 <startup-0x1fd3fd60>
 260:	00001349 	andeq	r1, r0, r9, asr #6
 264:	03001606 	movweq	r1, #1542	; 0x606
 268:	3b0b3a0e 	blcc	2ceaa8 <startup-0x1fd31558>
 26c:	0013490b 	andseq	r4, r3, fp, lsl #18
 270:	01130700 	tsteq	r3, r0, lsl #14
 274:	0b0b0e03 	bleq	2c3a88 <startup-0x1fd3c578>
 278:	0b3b0b3a 	bleq	ec2f68 <startup-0x1f13d098>
 27c:	00001301 	andeq	r1, r0, r1, lsl #6
 280:	0b002408 	bleq	92a8 <startup-0x1fff6d58>
 284:	030b3e0b 	movweq	r3, #48651	; 0xbe0b
 288:	09000008 	stmdbeq	r0, {r3}
 28c:	19270115 	stmdbne	r7!, {r0, r2, r4, r8}
 290:	00001301 	andeq	r1, r0, r1, lsl #6
 294:	4900050a 	stmdbmi	r0, {r1, r3, r8, sl}
 298:	0b000013 	bleq	2ec <startup-0x1ffffd14>
 29c:	13490101 	movtne	r0, #37121	; 0x9101
 2a0:	00001301 	andeq	r1, r0, r1, lsl #6
 2a4:	0000210c 	andeq	r2, r0, ip, lsl #2
 2a8:	00340d00 	eorseq	r0, r4, r0, lsl #26
 2ac:	0b3a0e03 	bleq	e83ac0 <startup-0x1f17c540>
 2b0:	13490b3b 	movtne	r0, #39739	; 0x9b3b
 2b4:	193c193f 	ldmdbne	ip!, {r0, r1, r2, r3, r4, r5, r8, fp, ip}
 2b8:	210e0000 	mrscs	r0, (UNDEF: 14)
 2bc:	2f134900 	svccs	0x00134900
 2c0:	0f00000b 	svceq	0x0000000b
 2c4:	0e030034 	mcreq	0, 0, r0, cr3, cr4, {1}
 2c8:	0b3b0b3a 	bleq	ec2fb8 <startup-0x1f13d048>
 2cc:	18021349 	stmdane	r2, {r0, r3, r6, r8, r9, ip}
 2d0:	34100000 	ldrcc	r0, [r0], #-0
 2d4:	3a0e0300 	bcc	380edc <startup-0x1fc7f124>
 2d8:	490b3b0b 	stmdbmi	fp, {r0, r1, r3, r8, r9, fp, ip, sp}
 2dc:	02193f13 	andseq	r3, r9, #19, 30	; 0x4c
 2e0:	11000018 	tstne	r0, r8, lsl r0
 2e4:	193f012e 	ldmdbne	pc!, {r1, r2, r3, r5, r8}	; <UNPREDICTABLE>
 2e8:	0b3a0e03 	bleq	e83afc <startup-0x1f17c504>
 2ec:	19270b3b 	stmdbne	r7!, {r0, r1, r3, r4, r5, r8, r9, fp}
 2f0:	06120111 			; <UNDEFINED> instruction: 0x06120111
 2f4:	42961840 	addsmi	r1, r6, #64, 16	; 0x400000
 2f8:	00130119 	andseq	r0, r3, r9, lsl r1
 2fc:	00051200 	andeq	r1, r5, r0, lsl #4
 300:	0b3a0e03 	bleq	e83b14 <startup-0x1f17c4ec>
 304:	13490b3b 	movtne	r0, #39739	; 0x9b3b
 308:	00001802 	andeq	r1, r0, r2, lsl #16
 30c:	03012e13 	movweq	r2, #7699	; 0x1e13
 310:	3b0b3a0e 	blcc	2ceb50 <startup-0x1fd314b0>
 314:	1119270b 	tstne	r9, fp, lsl #14
 318:	40061201 	andmi	r1, r6, r1, lsl #4
 31c:	19429618 	stmdbne	r2, {r3, r4, r9, sl, ip, pc}^
 320:	01000000 	mrseq	r0, (UNDEF: 0)
 324:	0e250111 	mcreq	1, 1, r0, cr5, cr1, {0}
 328:	0e030b13 	vmoveq.32	d3[0], r0
 32c:	06120111 			; <UNDEFINED> instruction: 0x06120111
 330:	00001710 	andeq	r1, r0, r0, lsl r7
 334:	0b002402 	bleq	9344 <startup-0x1fff6cbc>
 338:	030b3e0b 	movweq	r3, #48651	; 0xbe0b
 33c:	0300000e 	movweq	r0, #14
 340:	0b0b0113 	bleq	2c0794 <startup-0x1fd3f86c>
 344:	0b3b0b3a 	bleq	ec3034 <startup-0x1f13cfcc>
 348:	00001301 	andeq	r1, r0, r1, lsl #6
 34c:	03000d04 	movweq	r0, #3332	; 0xd04
 350:	3b0b3a0e 	blcc	2ceb90 <startup-0x1fd31470>
 354:	3813490b 	ldmdacc	r3, {r0, r1, r3, r8, fp, lr}
 358:	0500000b 	streq	r0, [r0, #-11]
 35c:	0b0b000f 	bleq	2c03a0 <startup-0x1fd3fc60>
 360:	00001349 	andeq	r1, r0, r9, asr #6
 364:	03001606 	movweq	r1, #1542	; 0x606
 368:	3b0b3a0e 	blcc	2ceba8 <startup-0x1fd31458>
 36c:	0013490b 	andseq	r4, r3, fp, lsl #18
 370:	01130700 	tsteq	r3, r0, lsl #14
 374:	0b0b0e03 	bleq	2c3b88 <startup-0x1fd3c478>
 378:	0b3b0b3a 	bleq	ec3068 <startup-0x1f13cf98>
 37c:	00001301 	andeq	r1, r0, r1, lsl #6
 380:	0b002408 	bleq	93a8 <startup-0x1fff6c58>
 384:	030b3e0b 	movweq	r3, #48651	; 0xbe0b
 388:	09000008 	stmdbeq	r0, {r3}
 38c:	19270115 	stmdbne	r7!, {r0, r2, r4, r8}
 390:	00001301 	andeq	r1, r0, r1, lsl #6
 394:	4900050a 	stmdbmi	r0, {r1, r3, r8, sl}
 398:	0b000013 	bleq	3ec <startup-0x1ffffc14>
 39c:	13490101 	movtne	r0, #37121	; 0x9101
 3a0:	00001301 	andeq	r1, r0, r1, lsl #6
 3a4:	0000210c 	andeq	r2, r0, ip, lsl #2
 3a8:	00340d00 	eorseq	r0, r4, r0, lsl #26
 3ac:	0b3a0e03 	bleq	e83bc0 <startup-0x1f17c440>
 3b0:	13490b3b 	movtne	r0, #39739	; 0x9b3b
 3b4:	193c193f 	ldmdbne	ip!, {r0, r1, r2, r3, r4, r5, r8, fp, ip}
 3b8:	2e0e0000 	cdpcs	0, 0, cr0, cr14, cr0, {0}
 3bc:	03193f01 	tsteq	r9, #1, 30
 3c0:	3b0b3a0e 	blcc	2cec00 <startup-0x1fd31400>
 3c4:	1119270b 	tstne	r9, fp, lsl #14
 3c8:	40061201 	andmi	r1, r6, r1, lsl #4
 3cc:	19429618 	stmdbne	r2, {r3, r4, r9, sl, ip, pc}^
 3d0:	050f0000 	streq	r0, [pc, #-0]	; 3d8 <startup-0x1ffffc28>
 3d4:	3a0e0300 	bcc	380fdc <startup-0x1fc7f024>
 3d8:	490b3b0b 	stmdbmi	fp, {r0, r1, r3, r8, r9, fp, ip, sp}
 3dc:	00180213 	andseq	r0, r8, r3, lsl r2
 3e0:	00341000 	eorseq	r1, r4, r0
 3e4:	0b3a0e03 	bleq	e83bf8 <startup-0x1f17c408>
 3e8:	13490b3b 	movtne	r0, #39739	; 0x9b3b
 3ec:	00001802 	andeq	r1, r0, r2, lsl #16
 3f0:	01110100 	tsteq	r1, r0, lsl #2
 3f4:	0b130e25 	bleq	4c3c90 <startup-0x1fb3c370>
 3f8:	01110e03 	tsteq	r1, r3, lsl #28
 3fc:	17100612 			; <UNDEFINED> instruction: 0x17100612
 400:	13020000 	movwne	r0, #8192	; 0x2000
 404:	3a0b0b01 	bcc	2c3010 <startup-0x1fd3cff0>
 408:	010b3b0b 	tsteq	fp, fp, lsl #22
 40c:	03000013 	movweq	r0, #19
 410:	0e03000d 	cdpeq	0, 0, cr0, cr3, cr13, {0}
 414:	0b3b0b3a 	bleq	ec3104 <startup-0x1f13cefc>
 418:	0b381349 	bleq	e05144 <startup-0x1f1faebc>
 41c:	24040000 	strcs	r0, [r4], #-0
 420:	3e0b0b00 	vmlacc.f64	d0, d11, d0
 424:	000e030b 	andeq	r0, lr, fp, lsl #6
 428:	000f0500 	andeq	r0, pc, r0, lsl #10
 42c:	13490b0b 	movtne	r0, #39691	; 0x9b0b
 430:	16060000 	strne	r0, [r6], -r0
 434:	3a0e0300 	bcc	38103c <startup-0x1fc7efc4>
 438:	490b3b0b 	stmdbmi	fp, {r0, r1, r3, r8, r9, fp, ip, sp}
 43c:	07000013 	smladeq	r0, r3, r0, r0
 440:	0e030113 	mcreq	1, 0, r0, cr3, cr3, {0}
 444:	0b3a0b0b 	bleq	e83078 <startup-0x1f17cf88>
 448:	13010b3b 	movwne	r0, #6971	; 0x1b3b
 44c:	24080000 	strcs	r0, [r8], #-0
 450:	3e0b0b00 	vmlacc.f64	d0, d11, d0
 454:	0008030b 	andeq	r0, r8, fp, lsl #6
 458:	01150900 	tsteq	r5, r0, lsl #18
 45c:	13011927 	movwne	r1, #6439	; 0x1927
 460:	050a0000 	streq	r0, [sl, #-0]
 464:	00134900 	andseq	r4, r3, r0, lsl #18
 468:	01010b00 	tsteq	r1, r0, lsl #22
 46c:	13011349 	movwne	r1, #4937	; 0x1349
 470:	210c0000 	mrscs	r0, (UNDEF: 12)
 474:	0d000000 	stceq	0, cr0, [r0, #-0]
 478:	0e030034 	mcreq	0, 0, r0, cr3, cr4, {1}
 47c:	0b3b0b3a 	bleq	ec316c <startup-0x1f13ce94>
 480:	193f1349 	ldmdbne	pc!, {r0, r3, r6, r8, r9, ip}	; <UNPREDICTABLE>
 484:	0000193c 	andeq	r1, r0, ip, lsr r9
 488:	4900210e 	stmdbmi	r0, {r1, r2, r3, r8, sp}
 48c:	000b2f13 	andeq	r2, fp, r3, lsl pc
 490:	00340f00 	eorseq	r0, r4, r0, lsl #30
 494:	0b3a0e03 	bleq	e83ca8 <startup-0x1f17c358>
 498:	13490b3b 	movtne	r0, #39739	; 0x9b3b
 49c:	00001802 	andeq	r1, r0, r2, lsl #16
 4a0:	03003410 	movweq	r3, #1040	; 0x410
 4a4:	3b0b3a0e 	blcc	2cece4 <startup-0x1fd3131c>
 4a8:	3f13490b 	svccc	0x0013490b
 4ac:	00180219 	andseq	r0, r8, r9, lsl r2
 4b0:	012e1100 			; <UNDEFINED> instruction: 0x012e1100
 4b4:	0e03193f 			; <UNDEFINED> instruction: 0x0e03193f
 4b8:	0b3b0b3a 	bleq	ec31a8 <startup-0x1f13ce58>
 4bc:	01111927 	tsteq	r1, r7, lsr #18
 4c0:	18400612 	stmdane	r0, {r1, r4, r9, sl}^
 4c4:	01194296 			; <UNDEFINED> instruction: 0x01194296
 4c8:	12000013 	andne	r0, r0, #19
 4cc:	0e030005 	cdpeq	0, 0, cr0, cr3, cr5, {0}
 4d0:	0b3b0b3a 	bleq	ec31c0 <startup-0x1f13ce40>
 4d4:	18021349 	stmdane	r2, {r0, r3, r6, r8, r9, ip}
 4d8:	2e130000 	cdpcs	0, 1, cr0, cr3, cr0, {0}
 4dc:	3a0e0301 	bcc	3810e8 <startup-0x1fc7ef18>
 4e0:	270b3b0b 	strcs	r3, [fp, -fp, lsl #22]
 4e4:	12011119 	andne	r1, r1, #1073741830	; 0x40000006
 4e8:	96184006 	ldrls	r4, [r8], -r6
 4ec:	00001942 	andeq	r1, r0, r2, asr #18
 4f0:	01110100 	tsteq	r1, r0, lsl #2
 4f4:	0b130e25 	bleq	4c3d90 <startup-0x1fb3c270>
 4f8:	01110e03 	tsteq	r1, r3, lsl #28
 4fc:	17100612 			; <UNDEFINED> instruction: 0x17100612
 500:	13020000 	movwne	r0, #8192	; 0x2000
 504:	3a0b0b01 	bcc	2c3110 <startup-0x1fd3cef0>
 508:	010b3b0b 	tsteq	fp, fp, lsl #22
 50c:	03000013 	movweq	r0, #19
 510:	0e03000d 	cdpeq	0, 0, cr0, cr3, cr13, {0}
 514:	0b3b0b3a 	bleq	ec3204 <startup-0x1f13cdfc>
 518:	0b381349 	bleq	e05244 <startup-0x1f1fadbc>
 51c:	24040000 	strcs	r0, [r4], #-0
 520:	3e0b0b00 	vmlacc.f64	d0, d11, d0
 524:	000e030b 	andeq	r0, lr, fp, lsl #6
 528:	000f0500 	andeq	r0, pc, r0, lsl #10
 52c:	13490b0b 	movtne	r0, #39691	; 0x9b0b
 530:	16060000 	strne	r0, [r6], -r0
 534:	3a0e0300 	bcc	38113c <startup-0x1fc7eec4>
 538:	490b3b0b 	stmdbmi	fp, {r0, r1, r3, r8, r9, fp, ip, sp}
 53c:	07000013 	smladeq	r0, r3, r0, r0
 540:	0e030113 	mcreq	1, 0, r0, cr3, cr3, {0}
 544:	0b3a0b0b 	bleq	e83178 <startup-0x1f17ce88>
 548:	13010b3b 	movwne	r0, #6971	; 0x1b3b
 54c:	24080000 	strcs	r0, [r8], #-0
 550:	3e0b0b00 	vmlacc.f64	d0, d11, d0
 554:	0008030b 	andeq	r0, r8, fp, lsl #6
 558:	01150900 	tsteq	r5, r0, lsl #18
 55c:	13011927 	movwne	r1, #6439	; 0x1927
 560:	050a0000 	streq	r0, [sl, #-0]
 564:	00134900 	andseq	r4, r3, r0, lsl #18
 568:	01010b00 	tsteq	r1, r0, lsl #22
 56c:	13011349 	movwne	r1, #4937	; 0x1349
 570:	210c0000 	mrscs	r0, (UNDEF: 12)
 574:	0d000000 	stceq	0, cr0, [r0, #-0]
 578:	0e030034 	mcreq	0, 0, r0, cr3, cr4, {1}
 57c:	0b3b0b3a 	bleq	ec326c <startup-0x1f13cd94>
 580:	193f1349 	ldmdbne	pc!, {r0, r3, r6, r8, r9, ip}	; <UNPREDICTABLE>
 584:	0000193c 	andeq	r1, r0, ip, lsr r9
 588:	4900210e 	stmdbmi	r0, {r1, r2, r3, r8, sp}
 58c:	000b2f13 	andeq	r2, fp, r3, lsl pc
 590:	00340f00 	eorseq	r0, r4, r0, lsl #30
 594:	0b3a0e03 	bleq	e83da8 <startup-0x1f17c258>
 598:	13490b3b 	movtne	r0, #39739	; 0x9b3b
 59c:	00001802 	andeq	r1, r0, r2, lsl #16
 5a0:	03003410 	movweq	r3, #1040	; 0x410
 5a4:	3b0b3a0e 	blcc	2cede4 <startup-0x1fd3121c>
 5a8:	3f13490b 	svccc	0x0013490b
 5ac:	00180219 	andseq	r0, r8, r9, lsl r2
 5b0:	012e1100 			; <UNDEFINED> instruction: 0x012e1100
 5b4:	0e03193f 			; <UNDEFINED> instruction: 0x0e03193f
 5b8:	0b3b0b3a 	bleq	ec32a8 <startup-0x1f13cd58>
 5bc:	01111927 	tsteq	r1, r7, lsr #18
 5c0:	18400612 	stmdane	r0, {r1, r4, r9, sl}^
 5c4:	01194296 			; <UNDEFINED> instruction: 0x01194296
 5c8:	12000013 	andne	r0, r0, #19
 5cc:	0e030005 	cdpeq	0, 0, cr0, cr3, cr5, {0}
 5d0:	0b3b0b3a 	bleq	ec32c0 <startup-0x1f13cd40>
 5d4:	18021349 	stmdane	r2, {r0, r3, r6, r8, r9, ip}
 5d8:	2e130000 	cdpcs	0, 1, cr0, cr3, cr0, {0}
 5dc:	3a0e0301 	bcc	3811e8 <startup-0x1fc7ee18>
 5e0:	270b3b0b 	strcs	r3, [fp, -fp, lsl #22]
 5e4:	12011119 	andne	r1, r1, #1073741830	; 0x40000006
 5e8:	96184006 	ldrls	r4, [r8], -r6
 5ec:	00001942 	andeq	r1, r0, r2, asr #18
 5f0:	01110100 	tsteq	r1, r0, lsl #2
 5f4:	0b130e25 	bleq	4c3e90 <startup-0x1fb3c170>
 5f8:	01110e03 	tsteq	r1, r3, lsl #28
 5fc:	17100612 			; <UNDEFINED> instruction: 0x17100612
 600:	13020000 	movwne	r0, #8192	; 0x2000
 604:	3a0b0b01 	bcc	2c3210 <startup-0x1fd3cdf0>
 608:	010b3b0b 	tsteq	fp, fp, lsl #22
 60c:	03000013 	movweq	r0, #19
 610:	0e03000d 	cdpeq	0, 0, cr0, cr3, cr13, {0}
 614:	0b3b0b3a 	bleq	ec3304 <startup-0x1f13ccfc>
 618:	0b381349 	bleq	e05344 <startup-0x1f1facbc>
 61c:	24040000 	strcs	r0, [r4], #-0
 620:	3e0b0b00 	vmlacc.f64	d0, d11, d0
 624:	000e030b 	andeq	r0, lr, fp, lsl #6
 628:	000f0500 	andeq	r0, pc, r0, lsl #10
 62c:	13490b0b 	movtne	r0, #39691	; 0x9b0b
 630:	16060000 	strne	r0, [r6], -r0
 634:	3a0e0300 	bcc	38123c <startup-0x1fc7edc4>
 638:	490b3b0b 	stmdbmi	fp, {r0, r1, r3, r8, r9, fp, ip, sp}
 63c:	07000013 	smladeq	r0, r3, r0, r0
 640:	0e030113 	mcreq	1, 0, r0, cr3, cr3, {0}
 644:	0b3a0b0b 	bleq	e83278 <startup-0x1f17cd88>
 648:	13010b3b 	movwne	r0, #6971	; 0x1b3b
 64c:	24080000 	strcs	r0, [r8], #-0
 650:	3e0b0b00 	vmlacc.f64	d0, d11, d0
 654:	0008030b 	andeq	r0, r8, fp, lsl #6
 658:	01150900 	tsteq	r5, r0, lsl #18
 65c:	13011927 	movwne	r1, #6439	; 0x1927
 660:	050a0000 	streq	r0, [sl, #-0]
 664:	00134900 	andseq	r4, r3, r0, lsl #18
 668:	01010b00 	tsteq	r1, r0, lsl #22
 66c:	13011349 	movwne	r1, #4937	; 0x1349
 670:	210c0000 	mrscs	r0, (UNDEF: 12)
 674:	0d000000 	stceq	0, cr0, [r0, #-0]
 678:	0e030034 	mcreq	0, 0, r0, cr3, cr4, {1}
 67c:	0b3b0b3a 	bleq	ec336c <startup-0x1f13cc94>
 680:	193f1349 	ldmdbne	pc!, {r0, r3, r6, r8, r9, ip}	; <UNPREDICTABLE>
 684:	0000193c 	andeq	r1, r0, ip, lsr r9
 688:	4900210e 	stmdbmi	r0, {r1, r2, r3, r8, sp}
 68c:	00052f13 	andeq	r2, r5, r3, lsl pc
 690:	00340f00 	eorseq	r0, r4, r0, lsl #30
 694:	0b3a1347 	bleq	e853b8 <startup-0x1f17ac48>
 698:	18020b3b 	stmdane	r2, {r0, r1, r3, r4, r5, r8, r9, fp}
 69c:	34100000 	ldrcc	r0, [r0], #-0
 6a0:	3a134700 	bcc	4d22a8 <startup-0x1fb2dd58>
 6a4:	0018020b 	andseq	r0, r8, fp, lsl #4
 6a8:	012e1100 			; <UNDEFINED> instruction: 0x012e1100
 6ac:	0e03193f 			; <UNDEFINED> instruction: 0x0e03193f
 6b0:	053b0b3a 	ldreq	r0, [fp, #-2874]!	; 0xfffff4c6
 6b4:	01111927 	tsteq	r1, r7, lsr #18
 6b8:	18400612 	stmdane	r0, {r1, r4, r9, sl}^
 6bc:	01194296 			; <UNDEFINED> instruction: 0x01194296
 6c0:	12000013 	andne	r0, r0, #19
 6c4:	0e030005 	cdpeq	0, 0, cr0, cr3, cr5, {0}
 6c8:	053b0b3a 	ldreq	r0, [fp, #-2874]!	; 0xfffff4c6
 6cc:	18021349 	stmdane	r2, {r0, r3, r6, r8, r9, ip}
 6d0:	34130000 	ldrcc	r0, [r3], #-0
 6d4:	3a0e0300 	bcc	3812dc <startup-0x1fc7ed24>
 6d8:	49053b0b 	stmdbmi	r5, {r0, r1, r3, r8, r9, fp, ip, sp}
 6dc:	00180213 	andseq	r0, r8, r3, lsl r2
 6e0:	012e1400 			; <UNDEFINED> instruction: 0x012e1400
 6e4:	0e03193f 			; <UNDEFINED> instruction: 0x0e03193f
 6e8:	053b0b3a 	ldreq	r0, [fp, #-2874]!	; 0xfffff4c6
 6ec:	01111927 	tsteq	r1, r7, lsr #18
 6f0:	18400612 	stmdane	r0, {r1, r4, r9, sl}^
 6f4:	01194297 			; <UNDEFINED> instruction: 0x01194297
 6f8:	15000013 	strne	r0, [r0, #-19]	; 0xffffffed
 6fc:	08030034 	stmdaeq	r3, {r2, r4, r5}
 700:	053b0b3a 	ldreq	r0, [fp, #-2874]!	; 0xfffff4c6
 704:	18021349 	stmdane	r2, {r0, r3, r6, r8, r9, ip}
 708:	34160000 	ldrcc	r0, [r6], #-0
 70c:	3a080300 	bcc	201314 <startup-0x1fdfecec>
 710:	49053b0b 	stmdbmi	r5, {r0, r1, r3, r8, r9, fp, ip, sp}
 714:	17000013 	smladne	r0, r3, r0, r0
 718:	08030005 	stmdaeq	r3, {r0, r2}
 71c:	053b0b3a 	ldreq	r0, [fp, #-2874]!	; 0xfffff4c6
 720:	18021349 	stmdane	r2, {r0, r3, r6, r8, r9, ip}
 724:	0b180000 	bleq	60072c <startup-0x1f9ff8d4>
 728:	12011101 	andne	r1, r1, #1073741824	; 0x40000000
 72c:	19000006 	stmdbne	r0, {r1, r2}
 730:	193f012e 	ldmdbne	pc!, {r1, r2, r3, r5, r8}	; <UNPREDICTABLE>
 734:	0b3a0e03 	bleq	e83f48 <startup-0x1f17c0b8>
 738:	19270b3b 	stmdbne	r7!, {r0, r1, r3, r4, r5, r8, r9, fp}
 73c:	06120111 			; <UNDEFINED> instruction: 0x06120111
 740:	42971840 	addsmi	r1, r7, #64, 16	; 0x400000
 744:	00130119 	andseq	r0, r3, r9, lsl r1
 748:	00051a00 	andeq	r1, r5, r0, lsl #20
 74c:	0b3a0803 	bleq	e82760 <startup-0x1f17d8a0>
 750:	13490b3b 	movtne	r0, #39739	; 0x9b3b
 754:	00001802 	andeq	r1, r0, r2, lsl #16
 758:	0300051b 	movweq	r0, #1307	; 0x51b
 75c:	3b0b3a0e 	blcc	2cef9c <startup-0x1fd31064>
 760:	0213490b 	andseq	r4, r3, #180224	; 0x2c000
 764:	1c000018 	stcne	0, cr0, [r0], {24}
 768:	0e030034 	mcreq	0, 0, r0, cr3, cr4, {1}
 76c:	0b3b0b3a 	bleq	ec345c <startup-0x1f13cba4>
 770:	18021349 	stmdane	r2, {r0, r3, r6, r8, r9, ip}
 774:	2e1d0000 	cdpcs	0, 1, cr0, cr13, cr0, {0}
 778:	03193f01 	tsteq	r9, #1, 30
 77c:	3b0b3a0e 	blcc	2cefbc <startup-0x1fd31044>
 780:	1119270b 	tstne	r9, fp, lsl #14
 784:	40061201 	andmi	r1, r6, r1, lsl #4
 788:	19429618 	stmdbne	r2, {r3, r4, r9, sl, ip, pc}^
 78c:	00001301 	andeq	r1, r0, r1, lsl #6
 790:	0300341e 	movweq	r3, #1054	; 0x41e
 794:	3b0b3a08 	blcc	2cefbc <startup-0x1fd31044>
 798:	0213490b 	andseq	r4, r3, #180224	; 0x2c000
 79c:	1f000018 	svcne	0x00000018
 7a0:	193f002e 	ldmdbne	pc!, {r1, r2, r3, r5}	; <UNPREDICTABLE>
 7a4:	0b3a0e03 	bleq	e83fb8 <startup-0x1f17c048>
 7a8:	19270b3b 	stmdbne	r7!, {r0, r1, r3, r4, r5, r8, r9, fp}
 7ac:	06120111 			; <UNDEFINED> instruction: 0x06120111
 7b0:	42961840 	addsmi	r1, r6, #64, 16	; 0x400000
 7b4:	20000019 	andcs	r0, r0, r9, lsl r0
 7b8:	193f012e 	ldmdbne	pc!, {r1, r2, r3, r5, r8}	; <UNPREDICTABLE>
 7bc:	0b3a0e03 	bleq	e83fd0 <startup-0x1f17c030>
 7c0:	19270b3b 	stmdbne	r7!, {r0, r1, r3, r4, r5, r8, r9, fp}
 7c4:	01111349 	tsteq	r1, r9, asr #6
 7c8:	18400612 	stmdane	r0, {r1, r4, r9, sl}^
 7cc:	01194296 			; <UNDEFINED> instruction: 0x01194296
 7d0:	21000013 	tstcs	r0, r3, lsl r0
 7d4:	0e03012e 	adfeqsp	f0, f3, #0.5
 7d8:	0b3b0b3a 	bleq	ec34c8 <startup-0x1f13cb38>
 7dc:	13491927 	movtne	r1, #39207	; 0x9927
 7e0:	06120111 			; <UNDEFINED> instruction: 0x06120111
 7e4:	42961840 	addsmi	r1, r6, #64, 16	; 0x400000
 7e8:	00130119 	andseq	r0, r3, r9, lsl r1
 7ec:	012e2200 			; <UNDEFINED> instruction: 0x012e2200
 7f0:	0b3a0e03 	bleq	e84004 <startup-0x1f17bffc>
 7f4:	19270b3b 	stmdbne	r7!, {r0, r1, r3, r4, r5, r8, r9, fp}
 7f8:	06120111 			; <UNDEFINED> instruction: 0x06120111
 7fc:	42971840 	addsmi	r1, r7, #64, 16	; 0x400000
 800:	00130119 	andseq	r0, r3, r9, lsl r1
 804:	002e2300 	eoreq	r2, lr, r0, lsl #6
 808:	0e03193f 			; <UNDEFINED> instruction: 0x0e03193f
 80c:	0b3b0b3a 	bleq	ec34fc <startup-0x1f13cb04>
 810:	01111927 	tsteq	r1, r7, lsr #18
 814:	18400612 	stmdane	r0, {r1, r4, r9, sl}^
 818:	00194297 	mulseq	r9, r7, r2
 81c:	11010000 	mrsne	r0, (UNDEF: 1)
 820:	130e2501 	movwne	r2, #58625	; 0xe501
 824:	110e030b 	tstne	lr, fp, lsl #6
 828:	10061201 	andne	r1, r6, r1, lsl #4
 82c:	02000017 	andeq	r0, r0, #23
 830:	0b0b0113 	bleq	2c0c84 <startup-0x1fd3f37c>
 834:	0b3b0b3a 	bleq	ec3524 <startup-0x1f13cadc>
 838:	00001301 	andeq	r1, r0, r1, lsl #6
 83c:	03000d03 	movweq	r0, #3331	; 0xd03
 840:	3b0b3a0e 	blcc	2cf080 <startup-0x1fd30f80>
 844:	3813490b 	ldmdacc	r3, {r0, r1, r3, r8, fp, lr}
 848:	0400000b 	streq	r0, [r0], #-11
 84c:	0b0b0024 	bleq	2c08e4 <startup-0x1fd3f71c>
 850:	0e030b3e 	vmoveq.16	d3[0], r0
 854:	0f050000 	svceq	0x00050000
 858:	490b0b00 	stmdbmi	fp, {r8, r9, fp}
 85c:	06000013 			; <UNDEFINED> instruction: 0x06000013
 860:	0e030016 	mcreq	0, 0, r0, cr3, cr6, {0}
 864:	0b3b0b3a 	bleq	ec3554 <startup-0x1f13caac>
 868:	00001349 	andeq	r1, r0, r9, asr #6
 86c:	03011307 	movweq	r1, #4871	; 0x1307
 870:	3a0b0b0e 	bcc	2c34b0 <startup-0x1fd3cb50>
 874:	010b3b0b 	tsteq	fp, fp, lsl #22
 878:	08000013 	stmdaeq	r0, {r0, r1, r4}
 87c:	193f012e 	ldmdbne	pc!, {r1, r2, r3, r5, r8}	; <UNPREDICTABLE>
 880:	0b3a0e03 	bleq	e84094 <startup-0x1f17bf6c>
 884:	19270b3b 	stmdbne	r7!, {r0, r1, r3, r4, r5, r8, r9, fp}
 888:	06120111 			; <UNDEFINED> instruction: 0x06120111
 88c:	42971840 	addsmi	r1, r7, #64, 16	; 0x400000
 890:	00130119 	andseq	r0, r3, r9, lsl r1
 894:	00050900 	andeq	r0, r5, r0, lsl #18
 898:	0b3a0e03 	bleq	e840ac <startup-0x1f17bf54>
 89c:	13490b3b 	movtne	r0, #39739	; 0x9b3b
 8a0:	00001802 	andeq	r1, r0, r2, lsl #16
 8a4:	01110100 	tsteq	r1, r0, lsl #2
 8a8:	0b130e25 	bleq	4c4144 <startup-0x1fb3bebc>
 8ac:	01110e03 	tsteq	r1, r3, lsl #28
 8b0:	17100612 			; <UNDEFINED> instruction: 0x17100612
 8b4:	13020000 	movwne	r0, #8192	; 0x2000
 8b8:	3a0b0b01 	bcc	2c34c4 <startup-0x1fd3cb3c>
 8bc:	010b3b0b 	tsteq	fp, fp, lsl #22
 8c0:	03000013 	movweq	r0, #19
 8c4:	0e03000d 	cdpeq	0, 0, cr0, cr3, cr13, {0}
 8c8:	0b3b0b3a 	bleq	ec35b8 <startup-0x1f13ca48>
 8cc:	0b381349 	bleq	e055f8 <startup-0x1f1faa08>
 8d0:	24040000 	strcs	r0, [r4], #-0
 8d4:	3e0b0b00 	vmlacc.f64	d0, d11, d0
 8d8:	000e030b 	andeq	r0, lr, fp, lsl #6
 8dc:	000f0500 	andeq	r0, pc, r0, lsl #10
 8e0:	13490b0b 	movtne	r0, #39691	; 0x9b0b
 8e4:	16060000 	strne	r0, [r6], -r0
 8e8:	3a0e0300 	bcc	3814f0 <startup-0x1fc7eb10>
 8ec:	490b3b0b 	stmdbmi	fp, {r0, r1, r3, r8, r9, fp, ip, sp}
 8f0:	07000013 	smladeq	r0, r3, r0, r0
 8f4:	193f012e 	ldmdbne	pc!, {r1, r2, r3, r5, r8}	; <UNPREDICTABLE>
 8f8:	0b3a0e03 	bleq	e8410c <startup-0x1f17bef4>
 8fc:	19270b3b 	stmdbne	r7!, {r0, r1, r3, r4, r5, r8, r9, fp}
 900:	06120111 			; <UNDEFINED> instruction: 0x06120111
 904:	42971840 	addsmi	r1, r7, #64, 16	; 0x400000
 908:	00130119 	andseq	r0, r3, r9, lsl r1
 90c:	00050800 	andeq	r0, r5, r0, lsl #16
 910:	0b3a0803 	bleq	e82924 <startup-0x1f17d6dc>
 914:	13490b3b 	movtne	r0, #39739	; 0x9b3b
 918:	00001802 	andeq	r1, r0, r2, lsl #16
 91c:	03000509 	movweq	r0, #1289	; 0x509
 920:	3b0b3a0e 	blcc	2cf160 <startup-0x1fd30ea0>
 924:	0213490b 	andseq	r4, r3, #180224	; 0x2c000
 928:	0a000018 	beq	990 <startup-0x1ffff670>
 92c:	0b0b0024 	bleq	2c09c4 <startup-0x1fd3f63c>
 930:	08030b3e 	stmdaeq	r3, {r1, r2, r3, r4, r5, r8, r9, fp}
 934:	01000000 	mrseq	r0, (UNDEF: 0)
 938:	0e250111 	mcreq	1, 1, r0, cr5, cr1, {0}
 93c:	0e030b13 	vmoveq.32	d3[0], r0
 940:	06120111 			; <UNDEFINED> instruction: 0x06120111
 944:	00001710 	andeq	r1, r0, r0, lsl r7
 948:	0b011302 	bleq	45558 <startup-0x1ffbaaa8>
 94c:	3b0b3a0b 	blcc	2cf180 <startup-0x1fd30e80>
 950:	0013010b 	andseq	r0, r3, fp, lsl #2
 954:	000d0300 	andeq	r0, sp, r0, lsl #6
 958:	0b3a0e03 	bleq	e8416c <startup-0x1f17be94>
 95c:	13490b3b 	movtne	r0, #39739	; 0x9b3b
 960:	00000b38 	andeq	r0, r0, r8, lsr fp
 964:	0b002404 	bleq	997c <startup-0x1fff6684>
 968:	030b3e0b 	movweq	r3, #48651	; 0xbe0b
 96c:	0500000e 	streq	r0, [r0, #-14]
 970:	0e030016 	mcreq	0, 0, r0, cr3, cr6, {0}
 974:	0b3b0b3a 	bleq	ec3664 <startup-0x1f13c99c>
 978:	00001349 	andeq	r1, r0, r9, asr #6
 97c:	3f012e06 	svccc	0x00012e06
 980:	3a0e0319 	bcc	3815ec <startup-0x1fc7ea14>
 984:	270b3b0b 	strcs	r3, [fp, -fp, lsl #22]
 988:	11134919 	tstne	r3, r9, lsl r9
 98c:	40061201 	andmi	r1, r6, r1, lsl #4
 990:	19429618 	stmdbne	r2, {r3, r4, r9, sl, ip, pc}^
 994:	00001301 	andeq	r1, r0, r1, lsl #6
 998:	03000507 	movweq	r0, #1287	; 0x507
 99c:	3b0b3a08 	blcc	2cf1c4 <startup-0x1fd30e3c>
 9a0:	0213490b 	andseq	r4, r3, #180224	; 0x2c000
 9a4:	08000018 	stmdaeq	r0, {r3, r4}
 9a8:	08030034 	stmdaeq	r3, {r2, r4, r5}
 9ac:	0b3b0b3a 	bleq	ec369c <startup-0x1f13c964>
 9b0:	18021349 	stmdane	r2, {r0, r3, r6, r8, r9, ip}
 9b4:	24090000 	strcs	r0, [r9], #-0
 9b8:	3e0b0b00 	vmlacc.f64	d0, d11, d0
 9bc:	0008030b 	andeq	r0, r8, fp, lsl #6
 9c0:	002e0a00 	eoreq	r0, lr, r0, lsl #20
 9c4:	0e03193f 			; <UNDEFINED> instruction: 0x0e03193f
 9c8:	0b3b0b3a 	bleq	ec36b8 <startup-0x1f13c948>
 9cc:	13491927 	movtne	r1, #39207	; 0x9927
 9d0:	06120111 			; <UNDEFINED> instruction: 0x06120111
 9d4:	42971840 	addsmi	r1, r7, #64, 16	; 0x400000
 9d8:	0b000019 	bleq	a44 <startup-0x1ffff5bc>
 9dc:	193f002e 	ldmdbne	pc!, {r1, r2, r3, r5}	; <UNPREDICTABLE>
 9e0:	0b3a0e03 	bleq	e841f4 <startup-0x1f17be0c>
 9e4:	19270b3b 	stmdbne	r7!, {r0, r1, r3, r4, r5, r8, r9, fp}
 9e8:	06120111 			; <UNDEFINED> instruction: 0x06120111
 9ec:	42971840 	addsmi	r1, r7, #64, 16	; 0x400000
 9f0:	00000019 	andeq	r0, r0, r9, lsl r0
 9f4:	25011101 	strcs	r1, [r1, #-257]	; 0xfffffeff
 9f8:	030b130e 	movweq	r1, #45838	; 0xb30e
 9fc:	1201110e 	andne	r1, r1, #-2147483645	; 0x80000003
 a00:	00171006 	andseq	r1, r7, r6
 a04:	01130200 	tsteq	r3, r0, lsl #4
 a08:	0b3a0b0b 	bleq	e8363c <startup-0x1f17c9c4>
 a0c:	13010b3b 	movwne	r0, #6971	; 0x1b3b
 a10:	0d030000 	stceq	0, cr0, [r3, #-0]
 a14:	3a0e0300 	bcc	38161c <startup-0x1fc7e9e4>
 a18:	490b3b0b 	stmdbmi	fp, {r0, r1, r3, r8, r9, fp, ip, sp}
 a1c:	000b3813 	andeq	r3, fp, r3, lsl r8
 a20:	00240400 	eoreq	r0, r4, r0, lsl #8
 a24:	0b3e0b0b 	bleq	f83658 <startup-0x1f07c9a8>
 a28:	00000e03 	andeq	r0, r0, r3, lsl #28
 a2c:	0b000f05 	bleq	4648 <startup-0x1fffb9b8>
 a30:	0013490b 	andseq	r4, r3, fp, lsl #18
 a34:	00160600 	andseq	r0, r6, r0, lsl #12
 a38:	0b3a0e03 	bleq	e8424c <startup-0x1f17bdb4>
 a3c:	13490b3b 	movtne	r0, #39739	; 0x9b3b
 a40:	13070000 	movwne	r0, #28672	; 0x7000
 a44:	0b0e0301 	bleq	381650 <startup-0x1fc7e9b0>
 a48:	3b0b3a0b 	blcc	2cf27c <startup-0x1fd30d84>
 a4c:	0013010b 	andseq	r0, r3, fp, lsl #2
 a50:	00240800 	eoreq	r0, r4, r0, lsl #16
 a54:	0b3e0b0b 	bleq	f83688 <startup-0x1f07c978>
 a58:	00000803 	andeq	r0, r0, r3, lsl #16
 a5c:	27011509 	strcs	r1, [r1, -r9, lsl #10]
 a60:	00130119 	andseq	r0, r3, r9, lsl r1
 a64:	00050a00 	andeq	r0, r5, r0, lsl #20
 a68:	00001349 	andeq	r1, r0, r9, asr #6
 a6c:	4901010b 	stmdbmi	r1, {r0, r1, r3, r8}
 a70:	00130113 	andseq	r0, r3, r3, lsl r1
 a74:	00210c00 	eoreq	r0, r1, r0, lsl #24
 a78:	340d0000 	strcc	r0, [sp], #-0
 a7c:	3a0e0300 	bcc	381684 <startup-0x1fc7e97c>
 a80:	490b3b0b 	stmdbmi	fp, {r0, r1, r3, r8, r9, fp, ip, sp}
 a84:	3c193f13 	ldccc	15, cr3, [r9], {19}
 a88:	0e000019 	mcreq	0, 0, r0, cr0, cr9, {0}
 a8c:	13490021 	movtne	r0, #36897	; 0x9021
 a90:	0000052f 	andeq	r0, r0, pc, lsr #10
 a94:	3f012e0f 	svccc	0x00012e0f
 a98:	3a0e0319 	bcc	381704 <startup-0x1fc7e8fc>
 a9c:	270b3b0b 	strcs	r3, [fp, -fp, lsl #22]
 aa0:	12011119 	andne	r1, r1, #1073741830	; 0x40000006
 aa4:	96184006 	ldrls	r4, [r8], -r6
 aa8:	13011942 	movwne	r1, #6466	; 0x1942
 aac:	34100000 	ldrcc	r0, [r0], #-0
 ab0:	3a080300 	bcc	2016b8 <startup-0x1fdfe948>
 ab4:	490b3b0b 	stmdbmi	fp, {r0, r1, r3, r8, r9, fp, ip, sp}
 ab8:	00180213 	andseq	r0, r8, r3, lsl r2
 abc:	00341100 	eorseq	r1, r4, r0, lsl #2
 ac0:	0b3a0e03 	bleq	e842d4 <startup-0x1f17bd2c>
 ac4:	13490b3b 	movtne	r0, #39739	; 0x9b3b
 ac8:	00001802 	andeq	r1, r0, r2, lsl #16
 acc:	49002112 	stmdbmi	r0, {r1, r4, r8, sp}
 ad0:	000b2f13 	andeq	r2, fp, r3, lsl pc
 ad4:	00051300 	andeq	r1, r5, r0, lsl #6
 ad8:	0b3a0e03 	bleq	e842ec <startup-0x1f17bd14>
 adc:	13490b3b 	movtne	r0, #39739	; 0x9b3b
 ae0:	00001802 	andeq	r1, r0, r2, lsl #16
 ae4:	3f002e14 	svccc	0x00002e14
 ae8:	3a0e0319 	bcc	381754 <startup-0x1fc7e8ac>
 aec:	270b3b0b 	strcs	r3, [fp, -fp, lsl #22]
 af0:	12011119 	andne	r1, r1, #1073741830	; 0x40000006
 af4:	96184006 	ldrls	r4, [r8], -r6
 af8:	00001942 	andeq	r1, r0, r2, asr #18
 afc:	3f002e15 	svccc	0x00002e15
 b00:	3a0e0319 	bcc	38176c <startup-0x1fc7e894>
 b04:	270b3b0b 	strcs	r3, [fp, -fp, lsl #22]
 b08:	12011119 	andne	r1, r1, #1073741830	; 0x40000006
 b0c:	97184006 	ldrls	r4, [r8, -r6]
 b10:	00001942 	andeq	r1, r0, r2, asr #18
 b14:	03000516 	movweq	r0, #1302	; 0x516
 b18:	3b0b3a08 	blcc	2cf340 <startup-0x1fd30cc0>
 b1c:	0213490b 	andseq	r4, r3, #180224	; 0x2c000
 b20:	17000018 	smladne	r0, r8, r0, r0
 b24:	193f012e 	ldmdbne	pc!, {r1, r2, r3, r5, r8}	; <UNPREDICTABLE>
 b28:	0b3a0e03 	bleq	e8433c <startup-0x1f17bcc4>
 b2c:	19270b3b 	stmdbne	r7!, {r0, r1, r3, r4, r5, r8, r9, fp}
 b30:	01111349 	tsteq	r1, r9, asr #6
 b34:	18400612 	stmdane	r0, {r1, r4, r9, sl}^
 b38:	01194296 			; <UNDEFINED> instruction: 0x01194296
 b3c:	18000013 	stmdane	r0, {r0, r1, r4}
 b40:	193f012e 	ldmdbne	pc!, {r1, r2, r3, r5, r8}	; <UNPREDICTABLE>
 b44:	0b3a0e03 	bleq	e84358 <startup-0x1f17bca8>
 b48:	19270b3b 	stmdbne	r7!, {r0, r1, r3, r4, r5, r8, r9, fp}
 b4c:	06120111 			; <UNDEFINED> instruction: 0x06120111
 b50:	42971840 	addsmi	r1, r7, #64, 16	; 0x400000
 b54:	00130119 	andseq	r0, r3, r9, lsl r1
 b58:	012e1900 			; <UNDEFINED> instruction: 0x012e1900
 b5c:	0e03193f 			; <UNDEFINED> instruction: 0x0e03193f
 b60:	0b3b0b3a 	bleq	ec3850 <startup-0x1f13c7b0>
 b64:	01111927 	tsteq	r1, r7, lsr #18
 b68:	18400612 	stmdane	r0, {r1, r4, r9, sl}^
 b6c:	00194297 	mulseq	r9, r7, r2
 b70:	11010000 	mrsne	r0, (UNDEF: 1)
 b74:	130e2501 	movwne	r2, #58625	; 0xe501
 b78:	110e030b 	tstne	lr, fp, lsl #6
 b7c:	10061201 	andne	r1, r6, r1, lsl #4
 b80:	02000017 	andeq	r0, r0, #23
 b84:	0e030113 	mcreq	1, 0, r0, cr3, cr3, {0}
 b88:	0b3a0b0b 	bleq	e837bc <startup-0x1f17c844>
 b8c:	13010b3b 	movwne	r0, #6971	; 0x1b3b
 b90:	0d030000 	stceq	0, cr0, [r3, #-0]
 b94:	3a0e0300 	bcc	38179c <startup-0x1fc7e864>
 b98:	490b3b0b 	stmdbmi	fp, {r0, r1, r3, r8, r9, fp, ip, sp}
 b9c:	000b3813 	andeq	r3, fp, r3, lsl r8
 ba0:	000f0400 	andeq	r0, pc, r0, lsl #8
 ba4:	13490b0b 	movtne	r0, #39691	; 0x9b0b
 ba8:	24050000 	strcs	r0, [r5], #-0
 bac:	3e0b0b00 	vmlacc.f64	d0, d11, d0
 bb0:	000e030b 	andeq	r0, lr, fp, lsl #6
 bb4:	00240600 	eoreq	r0, r4, r0, lsl #12
 bb8:	0b3e0b0b 	bleq	f837ec <startup-0x1f07c814>
 bbc:	00000803 	andeq	r0, r0, r3, lsl #16
 bc0:	27011507 	strcs	r1, [r1, -r7, lsl #10]
 bc4:	00130119 	andseq	r0, r3, r9, lsl r1
 bc8:	00050800 	andeq	r0, r5, r0, lsl #16
 bcc:	00001349 	andeq	r1, r0, r9, asr #6
 bd0:	03001609 	movweq	r1, #1545	; 0x609
 bd4:	3b0b3a0e 	blcc	2cf414 <startup-0x1fd30bec>
 bd8:	0013490b 	andseq	r4, r3, fp, lsl #18
 bdc:	012e0a00 			; <UNDEFINED> instruction: 0x012e0a00
 be0:	0e03193f 			; <UNDEFINED> instruction: 0x0e03193f
 be4:	0b3b0b3a 	bleq	ec38d4 <startup-0x1f13c72c>
 be8:	01111927 	tsteq	r1, r7, lsr #18
 bec:	18400612 	stmdane	r0, {r1, r4, r9, sl}^
 bf0:	01194297 			; <UNDEFINED> instruction: 0x01194297
 bf4:	0b000013 	bleq	c48 <startup-0x1ffff3b8>
 bf8:	08030005 	stmdaeq	r3, {r0, r2}
 bfc:	0b3b0b3a 	bleq	ec38ec <startup-0x1f13c714>
 c00:	18021349 	stmdane	r2, {r0, r3, r6, r8, r9, ip}
 c04:	050c0000 	streq	r0, [ip, #-0]
 c08:	3a0e0300 	bcc	381810 <startup-0x1fc7e7f0>
 c0c:	490b3b0b 	stmdbmi	fp, {r0, r1, r3, r8, r9, fp, ip, sp}
 c10:	00180213 	andseq	r0, r8, r3, lsl r2
 c14:	012e0d00 			; <UNDEFINED> instruction: 0x012e0d00
 c18:	0e03193f 			; <UNDEFINED> instruction: 0x0e03193f
 c1c:	0b3b0b3a 	bleq	ec390c <startup-0x1f13c6f4>
 c20:	01111927 	tsteq	r1, r7, lsr #18
 c24:	18400612 	stmdane	r0, {r1, r4, r9, sl}^
 c28:	00194296 	mulseq	r9, r6, r2
 c2c:	00340e00 	eorseq	r0, r4, r0, lsl #28
 c30:	0b3a0e03 	bleq	e84444 <startup-0x1f17bbbc>
 c34:	13490b3b 	movtne	r0, #39739	; 0x9b3b
 c38:	00001802 	andeq	r1, r0, r2, lsl #16
 c3c:	01110100 	tsteq	r1, r0, lsl #2
 c40:	0b130e25 	bleq	4c44dc <startup-0x1fb3bb24>
 c44:	01110e03 	tsteq	r1, r3, lsl #28
 c48:	17100612 			; <UNDEFINED> instruction: 0x17100612
 c4c:	13020000 	movwne	r0, #8192	; 0x2000
 c50:	3a0b0b01 	bcc	2c385c <startup-0x1fd3c7a4>
 c54:	010b3b0b 	tsteq	fp, fp, lsl #22
 c58:	03000013 	movweq	r0, #19
 c5c:	0e03000d 	cdpeq	0, 0, cr0, cr3, cr13, {0}
 c60:	0b3b0b3a 	bleq	ec3950 <startup-0x1f13c6b0>
 c64:	0b381349 	bleq	e05990 <startup-0x1f1fa670>
 c68:	24040000 	strcs	r0, [r4], #-0
 c6c:	3e0b0b00 	vmlacc.f64	d0, d11, d0
 c70:	000e030b 	andeq	r0, lr, fp, lsl #6
 c74:	000f0500 	andeq	r0, pc, r0, lsl #10
 c78:	13490b0b 	movtne	r0, #39691	; 0x9b0b
 c7c:	16060000 	strne	r0, [r6], -r0
 c80:	3a0e0300 	bcc	381888 <startup-0x1fc7e778>
 c84:	490b3b0b 	stmdbmi	fp, {r0, r1, r3, r8, r9, fp, ip, sp}
 c88:	07000013 	smladeq	r0, r3, r0, r0
 c8c:	0e030113 	mcreq	1, 0, r0, cr3, cr3, {0}
 c90:	0b3a0b0b 	bleq	e838c4 <startup-0x1f17c73c>
 c94:	13010b3b 	movwne	r0, #6971	; 0x1b3b
 c98:	24080000 	strcs	r0, [r8], #-0
 c9c:	3e0b0b00 	vmlacc.f64	d0, d11, d0
 ca0:	0008030b 	andeq	r0, r8, fp, lsl #6
 ca4:	01150900 	tsteq	r5, r0, lsl #18
 ca8:	13011927 	movwne	r1, #6439	; 0x1927
 cac:	050a0000 	streq	r0, [sl, #-0]
 cb0:	00134900 	andseq	r4, r3, r0, lsl #18
 cb4:	01010b00 	tsteq	r1, r0, lsl #22
 cb8:	13011349 	movwne	r1, #4937	; 0x1349
 cbc:	210c0000 	mrscs	r0, (UNDEF: 12)
 cc0:	0d000000 	stceq	0, cr0, [r0, #-0]
 cc4:	0e030034 	mcreq	0, 0, r0, cr3, cr4, {1}
 cc8:	0b3b0b3a 	bleq	ec39b8 <startup-0x1f13c648>
 ccc:	193f1349 	ldmdbne	pc!, {r0, r3, r6, r8, r9, ip}	; <UNPREDICTABLE>
 cd0:	0000193c 	andeq	r1, r0, ip, lsr r9
 cd4:	4900210e 	stmdbmi	r0, {r1, r2, r3, r8, sp}
 cd8:	00052f13 	andeq	r2, r5, r3, lsl pc
 cdc:	00340f00 	eorseq	r0, r4, r0, lsl #30
 ce0:	0b3a0e03 	bleq	e844f4 <startup-0x1f17bb0c>
 ce4:	13490b3b 	movtne	r0, #39739	; 0x9b3b
 ce8:	00001802 	andeq	r1, r0, r2, lsl #16
 cec:	03003410 	movweq	r3, #1040	; 0x410
 cf0:	3b0b3a0e 	blcc	2cf530 <startup-0x1fd30ad0>
 cf4:	3f13490b 	svccc	0x0013490b
 cf8:	00180219 	andseq	r0, r8, r9, lsl r2
 cfc:	00211100 	eoreq	r1, r1, r0, lsl #2
 d00:	0b2f1349 	bleq	bc5a2c <startup-0x1f43a5d4>
 d04:	2e120000 	cdpcs	0, 1, cr0, cr2, cr0, {0}
 d08:	03193f01 	tsteq	r9, #1, 30
 d0c:	3b0b3a0e 	blcc	2cf54c <startup-0x1fd30ab4>
 d10:	1119270b 	tstne	r9, fp, lsl #14
 d14:	40061201 	andmi	r1, r6, r1, lsl #4
 d18:	19429618 	stmdbne	r2, {r3, r4, r9, sl, ip, pc}^
 d1c:	00001301 	andeq	r1, r0, r1, lsl #6
 d20:	03000513 	movweq	r0, #1299	; 0x513
 d24:	3b0b3a0e 	blcc	2cf564 <startup-0x1fd30a9c>
 d28:	0213490b 	andseq	r4, r3, #180224	; 0x2c000
 d2c:	14000018 	strne	r0, [r0], #-24	; 0xffffffe8
 d30:	0e03012e 	adfeqsp	f0, f3, #0.5
 d34:	0b3b0b3a 	bleq	ec3a24 <startup-0x1f13c5dc>
 d38:	01111927 	tsteq	r1, r7, lsr #18
 d3c:	18400612 	stmdane	r0, {r1, r4, r9, sl}^
 d40:	00194296 	mulseq	r9, r6, r2
 d44:	11010000 	mrsne	r0, (UNDEF: 1)
 d48:	130e2501 	movwne	r2, #58625	; 0xe501
 d4c:	110e030b 	tstne	lr, fp, lsl #6
 d50:	10061201 	andne	r1, r6, r1, lsl #4
 d54:	02000017 	andeq	r0, r0, #23
 d58:	0b0b0113 	bleq	2c11ac <startup-0x1fd3ee54>
 d5c:	0b3b0b3a 	bleq	ec3a4c <startup-0x1f13c5b4>
 d60:	00001301 	andeq	r1, r0, r1, lsl #6
 d64:	03000d03 	movweq	r0, #3331	; 0xd03
 d68:	3b0b3a0e 	blcc	2cf5a8 <startup-0x1fd30a58>
 d6c:	3813490b 	ldmdacc	r3, {r0, r1, r3, r8, fp, lr}
 d70:	0400000b 	streq	r0, [r0], #-11
 d74:	0b0b0024 	bleq	2c0e0c <startup-0x1fd3f1f4>
 d78:	0e030b3e 	vmoveq.16	d3[0], r0
 d7c:	0f050000 	svceq	0x00050000
 d80:	490b0b00 	stmdbmi	fp, {r8, r9, fp}
 d84:	06000013 			; <UNDEFINED> instruction: 0x06000013
 d88:	0e030016 	mcreq	0, 0, r0, cr3, cr6, {0}
 d8c:	0b3b0b3a 	bleq	ec3a7c <startup-0x1f13c584>
 d90:	00001349 	andeq	r1, r0, r9, asr #6
 d94:	03011307 	movweq	r1, #4871	; 0x1307
 d98:	3a0b0b0e 	bcc	2c39d8 <startup-0x1fd3c628>
 d9c:	010b3b0b 	tsteq	fp, fp, lsl #22
 da0:	08000013 	stmdaeq	r0, {r0, r1, r4}
 da4:	0b0b0024 	bleq	2c0e3c <startup-0x1fd3f1c4>
 da8:	08030b3e 	stmdaeq	r3, {r1, r2, r3, r4, r5, r8, r9, fp}
 dac:	15090000 	strne	r0, [r9, #-0]
 db0:	01192701 	tsteq	r9, r1, lsl #14
 db4:	0a000013 	beq	e08 <startup-0x1ffff1f8>
 db8:	13490005 	movtne	r0, #36869	; 0x9005
 dbc:	010b0000 	mrseq	r0, (UNDEF: 11)
 dc0:	01134901 	tsteq	r3, r1, lsl #18
 dc4:	0c000013 	stceq	0, cr0, [r0], {19}
 dc8:	00000021 	andeq	r0, r0, r1, lsr #32
 dcc:	0300340d 	movweq	r3, #1037	; 0x40d
 dd0:	3b0b3a0e 	blcc	2cf610 <startup-0x1fd309f0>
 dd4:	3f13490b 	svccc	0x0013490b
 dd8:	00193c19 	andseq	r3, r9, r9, lsl ip
 ddc:	00210e00 	eoreq	r0, r1, r0, lsl #28
 de0:	052f1349 	streq	r1, [pc, #-841]!	; a9f <startup-0x1ffff561>
 de4:	340f0000 	strcc	r0, [pc], #-0	; dec <startup-0x1ffff214>
 de8:	3a0e0300 	bcc	3819f0 <startup-0x1fc7e610>
 dec:	490b3b0b 	stmdbmi	fp, {r0, r1, r3, r8, r9, fp, ip, sp}
 df0:	00180213 	andseq	r0, r8, r3, lsl r2
 df4:	00341000 	eorseq	r1, r4, r0
 df8:	0b3a0e03 	bleq	e8460c <startup-0x1f17b9f4>
 dfc:	13490b3b 	movtne	r0, #39739	; 0x9b3b
 e00:	1802193f 	stmdane	r2, {r0, r1, r2, r3, r4, r5, r8, fp, ip}
 e04:	21110000 	tstcs	r1, r0
 e08:	2f134900 	svccs	0x00134900
 e0c:	1200000b 	andne	r0, r0, #11
 e10:	193f012e 	ldmdbne	pc!, {r1, r2, r3, r5, r8}	; <UNPREDICTABLE>
 e14:	0b3a0e03 	bleq	e84628 <startup-0x1f17b9d8>
 e18:	19270b3b 	stmdbne	r7!, {r0, r1, r3, r4, r5, r8, r9, fp}
 e1c:	06120111 			; <UNDEFINED> instruction: 0x06120111
 e20:	42961840 	addsmi	r1, r6, #64, 16	; 0x400000
 e24:	00130119 	andseq	r0, r3, r9, lsl r1
 e28:	00051300 	andeq	r1, r5, r0, lsl #6
 e2c:	0b3a0e03 	bleq	e84640 <startup-0x1f17b9c0>
 e30:	13490b3b 	movtne	r0, #39739	; 0x9b3b
 e34:	00001802 	andeq	r1, r0, r2, lsl #16
 e38:	03012e14 	movweq	r2, #7700	; 0x1e14
 e3c:	3b0b3a0e 	blcc	2cf67c <startup-0x1fd30984>
 e40:	1119270b 	tstne	r9, fp, lsl #14
 e44:	40061201 	andmi	r1, r6, r1, lsl #4
 e48:	19429618 	stmdbne	r2, {r3, r4, r9, sl, ip, pc}^
 e4c:	Address 0x00000e4c is out of bounds.


Disassembly of section .debug_aranges:

00000000 <.debug_aranges>:
   0:	00000024 	andeq	r0, r0, r4, lsr #32
   4:	00000002 	andeq	r0, r0, r2
   8:	00040000 	andeq	r0, r4, r0
   c:	00000000 	andeq	r0, r0, r0
  10:	20000010 	andcs	r0, r0, r0, lsl r0
  14:	00000cf0 	strdeq	r0, [r0], -r0	; <UNPREDICTABLE>
  18:	20000000 	andcs	r0, r0, r0
  1c:	0000000c 	andeq	r0, r0, ip
	...
  28:	0000001c 	andeq	r0, r0, ip, lsl r0
  2c:	08af0002 	stmiaeq	pc!, {r1}	; <UNPREDICTABLE>
  30:	00040000 	andeq	r0, r4, r0
  34:	00000000 	andeq	r0, r0, r0
  38:	20000d00 	andcs	r0, r0, r0, lsl #26
  3c:	00000056 	andeq	r0, r0, r6, asr r0
	...
  48:	0000001c 	andeq	r0, r0, ip, lsl r0
  4c:	0a930002 	beq	fe4c005c <firstTime.4040+0xde4b7670>
  50:	00040000 	andeq	r0, r4, r0
  54:	00000000 	andeq	r0, r0, r0
  58:	20000d58 	andcs	r0, r0, r8, asr sp
  5c:	000002a8 	andeq	r0, r0, r8, lsr #5
	...
  68:	0000001c 	andeq	r0, r0, ip, lsl r0
  6c:	0fc20002 	svceq	0x00c20002
  70:	00040000 	andeq	r0, r4, r0
  74:	00000000 	andeq	r0, r0, r0
  78:	20001000 	andcs	r1, r0, r0
  7c:	000000fc 	strdeq	r0, [r0], -ip
	...
  88:	0000001c 	andeq	r0, r0, ip, lsl r0
  8c:	119b0002 	orrsne	r0, fp, r2
  90:	00040000 	andeq	r0, r4, r0
  94:	00000000 	andeq	r0, r0, r0
  98:	200010fc 	strdcs	r1, [r0], -ip
  9c:	00000364 	andeq	r0, r0, r4, ror #6
	...
  a8:	0000001c 	andeq	r0, r0, ip, lsl r0
  ac:	17e00002 	strbne	r0, [r0, r2]!
  b0:	00040000 	andeq	r0, r4, r0
  b4:	00000000 	andeq	r0, r0, r0
  b8:	20001460 	andcs	r1, r0, r0, ror #8
  bc:	00000238 	andeq	r0, r0, r8, lsr r2
	...
  c8:	0000001c 	andeq	r0, r0, ip, lsl r0
  cc:	1c7c0002 	ldclne	0, cr0, [ip], #-8
  d0:	00040000 	andeq	r0, r4, r0
  d4:	00000000 	andeq	r0, r0, r0
  d8:	20001698 	mulcs	r0, r8, r6
  dc:	00000e44 	andeq	r0, r0, r4, asr #28
	...
  e8:	0000001c 	andeq	r0, r0, ip, lsl r0
  ec:	251f0002 	ldrcs	r0, [pc, #-2]	; f2 <startup-0x1fffff0e>
  f0:	00040000 	andeq	r0, r4, r0
  f4:	00000000 	andeq	r0, r0, r0
  f8:	200024dc 	ldrdcs	r2, [r0], -ip
  fc:	00000028 	andeq	r0, r0, r8, lsr #32
	...
 108:	0000001c 	andeq	r0, r0, ip, lsl r0
 10c:	26230002 	strtcs	r0, [r3], -r2
 110:	00040000 	andeq	r0, r4, r0
 114:	00000000 	andeq	r0, r0, r0
 118:	20002504 	andcs	r2, r0, r4, lsl #10
 11c:	00000028 	andeq	r0, r0, r8, lsr #32
	...
 128:	0000001c 	andeq	r0, r0, ip, lsl r0
 12c:	26ea0002 	strbtcs	r0, [sl], r2
 130:	00040000 	andeq	r0, r4, r0
 134:	00000000 	andeq	r0, r0, r0
 138:	2000252c 	andcs	r2, r0, ip, lsr #10
 13c:	0000006c 	andeq	r0, r0, ip, rrx
	...
 148:	0000001c 	andeq	r0, r0, ip, lsl r0
 14c:	28230002 	stmdacs	r3!, {r1}
 150:	00040000 	andeq	r0, r4, r0
 154:	00000000 	andeq	r0, r0, r0
 158:	20002598 	mulcs	r0, r8, r5
 15c:	00000520 	andeq	r0, r0, r0, lsr #10
	...
 168:	0000001c 	andeq	r0, r0, ip, lsl r0
 16c:	2d140002 	ldccs	0, cr0, [r4, #-8]
 170:	00040000 	andeq	r0, r4, r0
 174:	00000000 	andeq	r0, r0, r0
 178:	20002ab8 			; <UNDEFINED> instruction: 0x20002ab8
 17c:	00000094 	muleq	r0, r4, r0
	...
 188:	0000001c 	andeq	r0, r0, ip, lsl r0
 18c:	2e580002 	cdpcs	0, 5, cr0, cr8, cr2, {0}
 190:	00040000 	andeq	r0, r4, r0
 194:	00000000 	andeq	r0, r0, r0
 198:	20002b4c 	andcs	r2, r0, ip, asr #22
 19c:	000000e8 	andeq	r0, r0, r8, ror #1
	...
 1a8:	0000001c 	andeq	r0, r0, ip, lsl r0
 1ac:	313c0002 	teqcc	ip, r2
 1b0:	00040000 	andeq	r0, r4, r0
 1b4:	00000000 	andeq	r0, r0, r0
 1b8:	20002c34 	andcs	r2, r0, r4, lsr ip
 1bc:	000000e8 	andeq	r0, r0, r8, ror #1
	...

Disassembly of section .debug_ranges:

00000000 <.debug_ranges>:
   0:	20000010 	andcs	r0, r0, r0, lsl r0
   4:	20000d00 	andcs	r0, r0, r0, lsl #26
   8:	20000000 	andcs	r0, r0, r0
   c:	2000000c 	andcs	r0, r0, ip
	...

Disassembly of section .debug_line:

00000000 <.debug_line>:
       0:	00000297 	muleq	r0, r7, r2
       4:	017d0002 	cmneq	sp, r2
       8:	01020000 	mrseq	r0, (UNDEF: 2)
       c:	000d0efb 	strdeq	r0, [sp], -fp
      10:	01010101 	tsteq	r1, r1, lsl #2
      14:	01000000 	mrseq	r0, (UNDEF: 0)
      18:	43010000 	movwmi	r0, #4096	; 0x1000
      1c:	6f6d2f3a 	svcvs	0x006d2f3a
      20:	2f632f70 	svccs	0x00632f70
      24:	6c706f4d 	ldclvs	15, cr6, [r0], #-308	; 0xfffffecc
      28:	726f6261 	rsbvc	r6, pc, #268435462	; 0x10000006
      2c:	6f697461 	svcvs	0x00697461
      30:	2f72656e 	svccs	0x0072656e
      34:	73504944 	cmpvc	r0, #68, 18	; 0x110000
      38:	7469572d 	strbtvc	r5, [r9], #-1837	; 0xfffff8d3
      3c:	432f6863 			; <UNDEFINED> instruction: 0x432f6863
      40:	74730000 	ldrbtvc	r0, [r3], #-0
      44:	75747261 	ldrbvc	r7, [r4, #-609]!	; 0xfffffd9f
      48:	00632e70 	rsbeq	r2, r3, r0, ror lr
      4c:	73000001 	movwvc	r0, #1
      50:	74697270 	strbtvc	r7, [r9], #-624	; 0xfffffd90
      54:	00682e65 	rsbeq	r2, r8, r5, ror #28
      58:	69000001 	stmdbvs	r0, {r0}
      5c:	6567616d 	strbvs	r6, [r7, #-365]!	; 0xfffffe93
      60:	0100682e 	tsteq	r0, lr, lsr #16
      64:	61670000 	cmnvs	r7, r0
      68:	626f656d 	rsbvs	r6, pc, #457179136	; 0x1b400000
      6c:	7463656a 	strbtvc	r6, [r3], #-1386	; 0xfffffa96
      70:	0100682e 	tsteq	r0, lr, lsr #16
      74:	72670000 	rsbvc	r0, r7, #0
      78:	69687061 	stmdbvs	r8!, {r0, r5, r6, ip, sp, lr}^
      7c:	682e7363 	stmdavs	lr!, {r0, r1, r5, r6, r8, r9, ip, sp, lr}
      80:	00000100 	andeq	r0, r0, r0, lsl #2
      84:	736e6f6d 	cmnvc	lr, #436	; 0x1b4
      88:	5f726574 	svcpl	0x00726574
      8c:	63616c62 	cmnvs	r1, #25088	; 0x6200
      90:	62782e6b 	rsbsvs	r2, r8, #1712	; 0x6b0
      94:	0001006d 	andeq	r0, r1, sp, rrx
      98:	6e6f6d00 	cdpvs	13, 6, cr6, cr15, cr0, {0}
      9c:	72657473 	rsbvc	r7, r5, #1929379840	; 0x73000000
      a0:	67696c5f 			; <UNDEFINED> instruction: 0x67696c5f
      a4:	782e7468 	stmdavc	lr!, {r3, r5, r6, sl, ip, sp, lr}
      a8:	01006d62 	tsteq	r0, r2, ror #26
      ac:	6f6d0000 	svcvs	0x006d0000
      b0:	6574736e 	ldrbvs	r7, [r4, #-878]!	; 0xfffffc92
      b4:	72675f72 	rsbvc	r5, r7, #456	; 0x1c8
      b8:	782e7961 	stmdavc	lr!, {r0, r5, r6, r8, fp, ip, sp, lr}
      bc:	01006d62 	tsteq	r0, r2, ror #26
      c0:	72700000 	rsbsvc	r0, r0, #0
      c4:	5f737365 	svcpl	0x00737365
      c8:	63616c62 	cmnvs	r1, #25088	; 0x6200
      cc:	62782e6b 	rsbsvs	r2, r8, #1712	; 0x6b0
      d0:	0001006d 	andeq	r0, r1, sp, rrx
      d4:	65727000 	ldrbvs	r7, [r2, #-0]!
      d8:	6c5f7373 	mrrcvs	3, 7, r7, pc, cr3	; <UNPREDICTABLE>
      dc:	74686769 	strbtvc	r6, [r8], #-1897	; 0xfffff897
      e0:	6d62782e 	stclvs	8, cr7, [r2, #-184]!	; 0xffffff48
      e4:	00000100 	andeq	r0, r0, r0, lsl #2
      e8:	73657270 	cmnvc	r5, #112, 4
      ec:	72675f73 	rsbvc	r5, r7, #460	; 0x1cc
      f0:	782e7961 	stmdavc	lr!, {r0, r5, r6, r8, fp, ip, sp, lr}
      f4:	01006d62 	tsteq	r0, r2, ror #26
      f8:	61630000 	cmnvs	r3, r0
      fc:	656c7473 	strbvs	r7, [ip, #-1139]!	; 0xfffffb8d
     100:	616c625f 	cmnvs	ip, pc, asr r2
     104:	782e6b63 	stmdavc	lr!, {r0, r1, r5, r6, r8, r9, fp, sp, lr}
     108:	01006d62 	tsteq	r0, r2, ror #26
     10c:	61630000 	cmnvs	r3, r0
     110:	656c7473 	strbvs	r7, [ip, #-1139]!	; 0xfffffb8d
     114:	6172675f 	cmnvs	r2, pc, asr r7
     118:	62782e79 	rsbsvs	r2, r8, #1936	; 0x790
     11c:	0001006d 	andeq	r0, r1, sp, rrx
     120:	73616300 	cmnvc	r1, #0, 6
     124:	5f656c74 	svcpl	0x00656c74
     128:	6867696c 	stmdavs	r7!, {r2, r3, r5, r6, r8, fp, sp, lr}^
     12c:	62782e74 	rsbsvs	r2, r8, #116, 28	; 0x740
     130:	0001006d 	andeq	r0, r1, sp, rrx
     134:	74697400 	strbtvc	r7, [r9], #-1024	; 0xfffffc00
     138:	6c5f656c 	cfldr64vs	mvdx6, [pc], {108}	; 0x6c
     13c:	74686769 	strbtvc	r6, [r8], #-1897	; 0xfffff897
     140:	6d62782e 	stclvs	8, cr7, [r2, #-184]!	; 0xffffff48
     144:	00000100 	andeq	r0, r0, r0, lsl #2
     148:	6c746974 			; <UNDEFINED> instruction: 0x6c746974
     14c:	72675f65 	rsbvc	r5, r7, #404	; 0x194
     150:	782e7961 	stmdavc	lr!, {r0, r5, r6, r8, fp, ip, sp, lr}
     154:	01006d62 	tsteq	r0, r2, ror #26
     158:	69740000 	ldmdbvs	r4!, {}^	; <UNPREDICTABLE>
     15c:	5f656c74 	svcpl	0x00656c74
     160:	63616c62 	cmnvs	r1, #25088	; 0x6200
     164:	62782e6b 	rsbsvs	r2, r8, #1712	; 0x6b0
     168:	0001006d 	andeq	r0, r1, sp, rrx
     16c:	6f6c7300 	svcvs	0x006c7300
     170:	65745f77 	ldrbvs	r5, [r4, #-3959]!	; 0xfffff089
     174:	682e7478 	stmdavs	lr!, {r3, r4, r5, r6, sl, ip, sp, lr}
     178:	00000100 	andeq	r0, r0, r0, lsl #2
     17c:	782e6762 	stmdavc	lr!, {r1, r5, r6, r8, r9, sl, sp, lr}
     180:	01006d62 	tsteq	r0, r2, ror #26
     184:	00000000 	andeq	r0, r0, r0
     188:	00000205 	andeq	r0, r0, r5, lsl #4
     18c:	32032000 	andcc	r2, r3, #0
     190:	025e1301 	subseq	r1, lr, #67108864	; 0x4000000
     194:	01010003 	tsteq	r1, r3
     198:	10020500 	andne	r0, r2, r0, lsl #10
     19c:	03200000 	nopeq	{0}	; <UNPREDICTABLE>
     1a0:	3d2f0127 	stfccs	f0, [pc, #-156]!	; 10c <startup-0x1ffffef4>
     1a4:	03303030 	teqeq	r0, #48	; 0x30
     1a8:	2f3d742c 	svccs	0x003d742c
     1ac:	672f3e67 	strvs	r3, [pc, -r7, ror #28]!
     1b0:	3e672f3e 	mcrcc	15, 3, r2, cr7, cr14, {1}
     1b4:	2f3e672f 	svccs	0x003e672f
     1b8:	672f3e67 	strvs	r3, [pc, -r7, ror #28]!
     1bc:	3e672f3e 	mcrcc	15, 3, r2, cr7, cr14, {1}
     1c0:	2f3d672f 	svccs	0x003d672f
     1c4:	672f3d67 	strvs	r3, [pc, -r7, ror #26]!
     1c8:	3d672f3e 	stclcc	15, cr2, [r7, #-248]!	; 0xffffff08
     1cc:	2f3d672f 	svccs	0x003d672f
     1d0:	52023f67 	andpl	r3, r2, #412	; 0x19c
     1d4:	4a0a0317 	bmi	280e38 <startup-0x1fd7f1c8>
     1d8:	7583322f 	strvc	r3, [r3, #559]	; 0x22f
     1dc:	595959bb 	ldmdbpl	r9, {r0, r1, r3, r4, r5, r7, r8, fp, ip, lr}^
     1e0:	bb75835c 	bllt	1d60f58 <startup-0x1e29f0a8>
     1e4:	835c6759 	cmphi	ip, #23330816	; 0x1640000
     1e8:	5959bb75 	ldmdbpl	r9, {r0, r2, r4, r5, r6, r8, r9, fp, ip, sp, pc}^
     1ec:	bb75835c 	bllt	1d60f64 <startup-0x1e29f09c>
     1f0:	675b5959 			; <UNDEFINED> instruction: 0x675b5959
     1f4:	83678583 	cmnhi	r7, #549453824	; 0x20c00000
     1f8:	83836785 	orrhi	r6, r3, #34865152	; 0x2140000
     1fc:	83836785 	orrhi	r6, r3, #34865152	; 0x2140000
     200:	68686885 	stmdavs	r8!, {r0, r2, r7, fp, sp, lr}^
     204:	83835968 	orrhi	r5, r3, #104, 18	; 0x1a0000
     208:	83838384 	orrhi	r8, r3, #132, 6	; 0x10000002
     20c:	83838384 	orrhi	r8, r3, #132, 6	; 0x10000002
     210:	83838385 	orrhi	r8, r3, #335544322	; 0x14000002
     214:	83838384 	orrhi	r8, r3, #132, 6	; 0x10000002
     218:	75820f03 	strvc	r0, [r2, #3843]	; 0xf03
     21c:	75757575 	ldrbvc	r7, [r5, #-1397]!	; 0xfffffa8b
     220:	75134e02 	ldrvc	r4, [r3, #-3586]	; 0xfffff1fe
     224:	67757575 			; <UNDEFINED> instruction: 0x67757575
     228:	2f2f7675 	svccs	0x002f7675
     22c:	94424b30 	strbls	r4, [r2], #-2864	; 0xfffff4d0
     230:	4f3a6721 	svcmi	0x003a6721
     234:	5a253d3d 	bpl	94f730 <startup-0x1f6b08d0>
     238:	67679367 	strbvs	r9, [r7, -r7, ror #6]!
     23c:	67676767 	strbvs	r6, [r7, -r7, ror #14]!
     240:	02004267 	andeq	r4, r0, #1879048198	; 0x70000006
     244:	82060104 	andhi	r0, r6, #4, 2
     248:	83bb8306 			; <UNDEFINED> instruction: 0x83bb8306
     24c:	c9917530 	ldmibgt	r1, {r4, r5, r8, sl, ip, sp, lr}
     250:	c9c9c9bb 	stmibgt	r9, {r0, r1, r3, r4, r5, r7, r8, fp, lr, pc}^
     254:	c9f3c9d7 	ldmibgt	r3!, {r0, r1, r2, r4, r6, r7, r8, fp, lr, pc}^
     258:	08c92108 	stmiaeq	r9, {r3, r8, sp}^
     25c:	2f08c913 	svccs	0x0008c913
     260:	021308c9 	andseq	r0, r3, #13172736	; 0xc90000
     264:	21081344 	tstcs	r8, r4, asr #6
     268:	bb4b08c9 	bllt	12c2594 <startup-0x1ed3da6c>
     26c:	4bca3d08 	blmi	ff28f694 <firstTime.4040+0xdf286ca8>
     270:	323d4b3d 	eorscc	r4, sp, #62464	; 0xf400
     274:	3d4b3d59 	stclcc	13, cr3, [fp, #-356]	; 0xfffffe9c
     278:	bbbbbb32 	bllt	feeeef48 <firstTime.4040+0xdeee655c>
     27c:	67e5bbbb 			; <UNDEFINED> instruction: 0x67e5bbbb
     280:	595925e7 	ldmdbpl	r9, {r0, r1, r2, r5, r6, r7, r8, sl, sp}^
     284:	675b6776 			; <UNDEFINED> instruction: 0x675b6776
     288:	03aebb3f 			; <UNDEFINED> instruction: 0x03aebb3f
     28c:	0200206c 	andeq	r2, r0, #108	; 0x6c
     290:	a4030104 	strge	r0, [r3], #-260	; 0xfffffefc
     294:	2102207f 	tstcs	r2, pc, ror r0
     298:	8a010100 	bhi	406a0 <startup-0x1ffbf960>
     29c:	02000000 	andeq	r0, r0, #0
     2a0:	00007000 	andeq	r7, r0, r0
     2a4:	fb010200 	blx	40aae <startup-0x1ffbf552>
     2a8:	01000d0e 	tsteq	r0, lr, lsl #26
     2ac:	00010101 	andeq	r0, r1, r1, lsl #2
     2b0:	00010000 	andeq	r0, r1, r0
     2b4:	3a430100 	bcc	10c06bc <startup-0x1ef3f944>
     2b8:	706f6d2f 	rsbvc	r6, pc, pc, lsr #26
     2bc:	4d2f632f 	stcmi	3, cr6, [pc, #-188]!	; 208 <startup-0x1ffffdf8>
     2c0:	616c706f 	cmnvs	ip, pc, rrx
     2c4:	61726f62 	cmnvs	r2, r2, ror #30
     2c8:	6e6f6974 			; <UNDEFINED> instruction: 0x6e6f6974
     2cc:	442f7265 	strtmi	r7, [pc], #-613	; 2d4 <startup-0x1ffffd2c>
     2d0:	2d735049 	ldclcs	0, cr5, [r3, #-292]!	; 0xfffffedc
     2d4:	63746957 	cmnvs	r4, #1425408	; 0x15c000
     2d8:	00432f68 	subeq	r2, r3, r8, ror #30
     2dc:	6d616700 	stclvs	7, cr6, [r1, #-0]
     2e0:	6a626f65 	bvs	189c07c <startup-0x1e763f84>
     2e4:	2e746365 	cdpcs	3, 7, cr6, cr4, cr5, {3}
     2e8:	00010063 	andeq	r0, r1, r3, rrx
     2ec:	72707300 	rsbsvc	r7, r0, #0, 6
     2f0:	2e657469 	cdpcs	4, 6, cr7, cr5, cr9, {3}
     2f4:	00010068 	andeq	r0, r1, r8, rrx
     2f8:	616d6900 	cmnvs	sp, r0, lsl #18
     2fc:	682e6567 	stmdavs	lr!, {r0, r1, r2, r5, r6, r8, sl, sp, lr}
     300:	00000100 	andeq	r0, r0, r0, lsl #2
     304:	656d6167 	strbvs	r6, [sp, #-359]!	; 0xfffffe99
     308:	656a626f 	strbvs	r6, [sl, #-623]!	; 0xfffffd91
     30c:	682e7463 	stmdavs	lr!, {r0, r1, r5, r6, sl, ip, sp, lr}
     310:	00000100 	andeq	r0, r0, r0, lsl #2
     314:	02050000 	andeq	r0, r5, #0
     318:	20000d00 	andcs	r0, r0, r0, lsl #26
     31c:	4b4c4c19 	blmi	1313388 <startup-0x1ececc78>
     320:	ca3d6759 	bgt	f5a08c <startup-0x1f0a5f74>
     324:	01000402 	tsteq	r0, r2, lsl #8
     328:	00018401 	andeq	r8, r1, r1, lsl #8
     32c:	37000200 	strcc	r0, [r0, -r0, lsl #4]
     330:	02000001 	andeq	r0, r0, #1
     334:	0d0efb01 	vstreq	d15, [lr, #-4]
     338:	01010100 	mrseq	r0, (UNDEF: 17)
     33c:	00000001 	andeq	r0, r0, r1
     340:	01000001 	tsteq	r0, r1
     344:	6d2f3a43 	vstmdbvs	pc!, {s6-s72}
     348:	632f706f 			; <UNDEFINED> instruction: 0x632f706f
     34c:	706f4d2f 	rsbvc	r4, pc, pc, lsr #26
     350:	6f62616c 	svcvs	0x0062616c
     354:	69746172 	ldmdbvs	r4!, {r1, r4, r5, r6, r8, sp, lr}^
     358:	72656e6f 	rsbvc	r6, r5, #1776	; 0x6f0
     35c:	5049442f 	subpl	r4, r9, pc, lsr #8
     360:	69572d73 	ldmdbvs	r7, {r0, r1, r4, r5, r6, r8, sl, fp, sp}^
     364:	2f686374 	svccs	0x00686374
     368:	66000043 	strvs	r0, [r0], -r3, asr #32
     36c:	2e657269 	cdpcs	2, 6, cr7, cr5, cr9, {3}
     370:	00010063 	andeq	r0, r1, r3, rrx
     374:	72707300 	rsbsvc	r7, r0, #0, 6
     378:	2e657469 	cdpcs	4, 6, cr7, cr5, cr9, {3}
     37c:	00010068 	andeq	r0, r1, r8, rrx
     380:	616d6900 	cmnvs	sp, r0, lsl #18
     384:	682e6567 	stmdavs	lr!, {r0, r1, r2, r5, r6, r8, sl, sp, lr}
     388:	00000100 	andeq	r0, r0, r0, lsl #2
     38c:	656d6167 	strbvs	r6, [sp, #-359]!	; 0xfffffe99
     390:	656a626f 	strbvs	r6, [sl, #-623]!	; 0xfffffd91
     394:	682e7463 	stmdavs	lr!, {r0, r1, r5, r6, sl, ip, sp, lr}
     398:	00000100 	andeq	r0, r0, r0, lsl #2
     39c:	65726966 	ldrbvs	r6, [r2, #-2406]!	; 0xfffff69a
     3a0:	616c625f 	cmnvs	ip, pc, asr r2
     3a4:	325f6b63 	subscc	r6, pc, #101376	; 0x18c00
     3a8:	6d62782e 	stclvs	8, cr7, [r2, #-184]!	; 0xffffff48
     3ac:	00000100 	andeq	r0, r0, r0, lsl #2
     3b0:	65726966 	ldrbvs	r6, [r2, #-2406]!	; 0xfffff69a
     3b4:	72675f31 	rsbvc	r5, r7, #49, 30	; 0xc4
     3b8:	782e7961 	stmdavc	lr!, {r0, r5, r6, r8, fp, ip, sp, lr}
     3bc:	01006d62 	tsteq	r0, r2, ror #26
     3c0:	69660000 	stmdbvs	r6!, {}^	; <UNPREDICTABLE>
     3c4:	5f316572 	svcpl	0x00316572
     3c8:	6867696c 	stmdavs	r7!, {r2, r3, r5, r6, r8, fp, sp, lr}^
     3cc:	62782e74 	rsbsvs	r2, r8, #116, 28	; 0x740
     3d0:	0001006d 	andeq	r0, r1, sp, rrx
     3d4:	72696600 	rsbvc	r6, r9, #0, 12
     3d8:	675f3265 	ldrbvs	r3, [pc, -r5, ror #4]
     3dc:	2e796172 	mrccs	1, 3, r6, cr9, cr2, {3}
     3e0:	006d6278 	rsbeq	r6, sp, r8, ror r2
     3e4:	66000001 	strvs	r0, [r0], -r1
     3e8:	32657269 	rsbcc	r7, r5, #-1879048186	; 0x90000006
     3ec:	67696c5f 			; <UNDEFINED> instruction: 0x67696c5f
     3f0:	782e7468 	stmdavc	lr!, {r3, r5, r6, sl, ip, sp, lr}
     3f4:	01006d62 	tsteq	r0, r2, ror #26
     3f8:	69660000 	stmdbvs	r6!, {}^	; <UNPREDICTABLE>
     3fc:	5f336572 	svcpl	0x00336572
     400:	79617267 	stmdbvc	r1!, {r0, r1, r2, r5, r6, r9, ip, sp, lr}^
     404:	6d62782e 	stclvs	8, cr7, [r2, #-184]!	; 0xffffff48
     408:	00000100 	andeq	r0, r0, r0, lsl #2
     40c:	65726966 	ldrbvs	r6, [r2, #-2406]!	; 0xfffff69a
     410:	696c5f33 	stmdbvs	ip!, {r0, r1, r4, r5, r8, r9, sl, fp, ip, lr}^
     414:	2e746867 	cdpcs	8, 7, cr6, cr4, cr7, {3}
     418:	006d6278 	rsbeq	r6, sp, r8, ror r2
     41c:	66000001 	strvs	r0, [r0], -r1
     420:	34657269 	strbtcc	r7, [r5], #-617	; 0xfffffd97
     424:	6172675f 	cmnvs	r2, pc, asr r7
     428:	62782e79 	rsbsvs	r2, r8, #1936	; 0x790
     42c:	0001006d 	andeq	r0, r1, sp, rrx
     430:	72696600 	rsbvc	r6, r9, #0, 12
     434:	6c5f3465 	cfldrdvs	mvd3, [pc], {101}	; 0x65
     438:	74686769 	strbtvc	r6, [r8], #-1897	; 0xfffff897
     43c:	6d62782e 	stclvs	8, cr7, [r2, #-184]!	; 0xffffff48
     440:	00000100 	andeq	r0, r0, r0, lsl #2
     444:	65726966 	ldrbvs	r6, [r2, #-2406]!	; 0xfffff69a
     448:	72675f35 	rsbvc	r5, r7, #53, 30	; 0xd4
     44c:	782e7961 	stmdavc	lr!, {r0, r5, r6, r8, fp, ip, sp, lr}
     450:	01006d62 	tsteq	r0, r2, ror #26
     454:	69660000 	stmdbvs	r6!, {}^	; <UNPREDICTABLE>
     458:	5f356572 	svcpl	0x00356572
     45c:	6867696c 	stmdavs	r7!, {r2, r3, r5, r6, r8, fp, sp, lr}^
     460:	62782e74 	rsbsvs	r2, r8, #116, 28	; 0x740
     464:	0001006d 	andeq	r0, r1, sp, rrx
     468:	05000000 	streq	r0, [r0, #-0]
     46c:	000d5802 	andeq	r5, sp, r2, lsl #16
     470:	01300320 	teqeq	r0, r0, lsr #6
     474:	3e672f3d 	mcrcc	15, 3, r2, cr7, cr13, {1}
     478:	2f3e672f 	svccs	0x003e672f
     47c:	672f3e67 	strvs	r3, [pc, -r7, ror #28]!
     480:	3e672f3e 	mcrcc	15, 3, r2, cr7, cr14, {1}
     484:	2f3e672f 	svccs	0x003e672f
     488:	672f3e67 	strvs	r3, [pc, -r7, ror #28]!
     48c:	3e672f3e 	mcrcc	15, 3, r2, cr7, cr14, {1}
     490:	2f3e672f 	svccs	0x003e672f
     494:	46023d67 	strmi	r3, [r2], -r7, ror #26
     498:	2f4b4c14 	svccs	0x004b4c14
     49c:	59594b3e 	ldmdbpl	r9, {r1, r2, r3, r4, r5, r8, r9, fp, lr}^
     4a0:	91915a59 	orrsls	r5, r1, r9, asr sl
     4a4:	3e939191 	mrccc	1, 4, r9, cr3, cr1, {4}
     4a8:	3d3d3d3d 	ldccc	13, cr3, [sp, #-244]!	; 0xffffff0c
     4ac:	01003102 	tsteq	r0, r2, lsl #2
     4b0:	0000a601 	andeq	sl, r0, r1, lsl #12
     4b4:	6c000200 	sfmvs	f0, 4, [r0], {-0}
     4b8:	02000000 	andeq	r0, r0, #0
     4bc:	0d0efb01 	vstreq	d15, [lr, #-4]
     4c0:	01010100 	mrseq	r0, (UNDEF: 17)
     4c4:	00000001 	andeq	r0, r0, r1
     4c8:	01000001 	tsteq	r0, r1
     4cc:	6d2f3a43 	vstmdbvs	pc!, {s6-s72}
     4d0:	632f706f 			; <UNDEFINED> instruction: 0x632f706f
     4d4:	706f4d2f 	rsbvc	r4, pc, pc, lsr #26
     4d8:	6f62616c 	svcvs	0x0062616c
     4dc:	69746172 	ldmdbvs	r4!, {r1, r4, r5, r6, r8, sp, lr}^
     4e0:	72656e6f 	rsbvc	r6, r5, #1776	; 0x6f0
     4e4:	5049442f 	subpl	r4, r9, pc, lsr #8
     4e8:	69572d73 	ldmdbvs	r7, {r0, r1, r4, r5, r6, r8, sl, fp, sp}^
     4ec:	2f686374 	svccs	0x00686374
     4f0:	70000043 	andvc	r0, r0, r3, asr #32
     4f4:	6579616c 	ldrbvs	r6, [r9, #-364]!	; 0xfffffe94
     4f8:	00632e72 	rsbeq	r2, r3, r2, ror lr
     4fc:	73000001 	movwvc	r0, #1
     500:	74697270 	strbtvc	r7, [r9], #-624	; 0xfffffd90
     504:	00682e65 	rsbeq	r2, r8, r5, ror #28
     508:	69000001 	stmdbvs	r0, {r0}
     50c:	6567616d 	strbvs	r6, [r7, #-365]!	; 0xfffffe93
     510:	0100682e 	tsteq	r0, lr, lsr #16
     514:	61670000 	cmnvs	r7, r0
     518:	626f656d 	rsbvs	r6, pc, #457179136	; 0x1b400000
     51c:	7463656a 	strbtvc	r6, [r3], #-1386	; 0xfffffa96
     520:	0100682e 	tsteq	r0, lr, lsr #16
     524:	00000000 	andeq	r0, r0, r0
     528:	10000205 	andne	r0, r0, r5, lsl #4
     52c:	4b172000 	blmi	5c8534 <startup-0x1fa37acc>
     530:	cf3d6759 	svcgt	0x003d6759
     534:	01040200 	mrseq	r0, R12_usr
     538:	59064a06 	stmdbpl	r6, {r1, r2, r9, fp, lr}
     53c:	0402005b 	streq	r0, [r2], #-91	; 0xffffffa5
     540:	064a0601 	strbeq	r0, [sl], -r1, lsl #12
     544:	02005b59 	andeq	r5, r0, #91136	; 0x16400
     548:	74060104 	strvc	r0, [r6], #-260	; 0xfffffefc
     54c:	765b7506 	ldrbvc	r7, [fp], -r6, lsl #10
     550:	5b4b684b 	blpl	12da684 <startup-0x1ed2597c>
     554:	0a026867 	beq	9a6f8 <startup-0x1ff65908>
     558:	dd010100 	stfles	f0, [r1, #-0]
     55c:	02000001 	andeq	r0, r0, #1
     560:	00018200 	andeq	r8, r1, r0, lsl #4
     564:	fb010200 	blx	40d6e <startup-0x1ffbf292>
     568:	01000d0e 	tsteq	r0, lr, lsl #26
     56c:	00010101 	andeq	r0, r1, r1, lsl #2
     570:	00010000 	andeq	r0, r1, r0
     574:	3a430100 	bcc	10c097c <startup-0x1ef3f684>
     578:	706f6d2f 	rsbvc	r6, pc, pc, lsr #26
     57c:	4d2f632f 	stcmi	3, cr6, [pc, #-188]!	; 4c8 <startup-0x1ffffb38>
     580:	616c706f 	cmnvs	ip, pc, rrx
     584:	61726f62 	cmnvs	r2, r2, ror #30
     588:	6e6f6974 			; <UNDEFINED> instruction: 0x6e6f6974
     58c:	442f7265 	strtmi	r7, [pc], #-613	; 594 <startup-0x1ffffa6c>
     590:	2d735049 	ldclcs	0, cr5, [r3, #-292]!	; 0xfffffedc
     594:	63746957 	cmnvs	r4, #1425408	; 0x15c000
     598:	00432f68 	subeq	r2, r3, r8, ror #30
     59c:	72696200 	rsbvc	r6, r9, #0, 4
     5a0:	00632e64 	rsbeq	r2, r3, r4, ror #28
     5a4:	73000001 	movwvc	r0, #1
     5a8:	74697270 	strbtvc	r7, [r9], #-624	; 0xfffffd90
     5ac:	00682e65 	rsbeq	r2, r8, r5, ror #28
     5b0:	69000001 	stmdbvs	r0, {r0}
     5b4:	6567616d 	strbvs	r6, [r7, #-365]!	; 0xfffffe93
     5b8:	0100682e 	tsteq	r0, lr, lsr #16
     5bc:	61670000 	cmnvs	r7, r0
     5c0:	626f656d 	rsbvs	r6, pc, #457179136	; 0x1b400000
     5c4:	7463656a 	strbtvc	r6, [r3], #-1386	; 0xfffffa96
     5c8:	0100682e 	tsteq	r0, lr, lsr #16
     5cc:	69620000 	stmdbvs	r2!, {}^	; <UNPREDICTABLE>
     5d0:	5f316472 	svcpl	0x00316472
     5d4:	63616c62 	cmnvs	r1, #25088	; 0x6200
     5d8:	62782e6b 	rsbsvs	r2, r8, #1712	; 0x6b0
     5dc:	0001006d 	andeq	r0, r1, sp, rrx
     5e0:	72696200 	rsbvc	r6, r9, #0, 4
     5e4:	675f3164 	ldrbvs	r3, [pc, -r4, ror #2]
     5e8:	2e796172 	mrccs	1, 3, r6, cr9, cr2, {3}
     5ec:	006d6278 	rsbeq	r6, sp, r8, ror r2
     5f0:	62000001 	andvs	r0, r0, #1
     5f4:	31647269 	cmncc	r4, r9, ror #4
     5f8:	67696c5f 			; <UNDEFINED> instruction: 0x67696c5f
     5fc:	782e7468 	stmdavc	lr!, {r3, r5, r6, sl, ip, sp, lr}
     600:	01006d62 	tsteq	r0, r2, ror #26
     604:	69620000 	stmdbvs	r2!, {}^	; <UNPREDICTABLE>
     608:	5f326472 	svcpl	0x00326472
     60c:	63616c62 	cmnvs	r1, #25088	; 0x6200
     610:	62782e6b 	rsbsvs	r2, r8, #1712	; 0x6b0
     614:	0001006d 	andeq	r0, r1, sp, rrx
     618:	72696200 	rsbvc	r6, r9, #0, 4
     61c:	675f3264 	ldrbvs	r3, [pc, -r4, ror #4]
     620:	2e796172 	mrccs	1, 3, r6, cr9, cr2, {3}
     624:	006d6278 	rsbeq	r6, sp, r8, ror r2
     628:	62000001 	andvs	r0, r0, #1
     62c:	32647269 	rsbcc	r7, r4, #-1879048186	; 0x90000006
     630:	67696c5f 			; <UNDEFINED> instruction: 0x67696c5f
     634:	782e7468 	stmdavc	lr!, {r3, r5, r6, sl, ip, sp, lr}
     638:	01006d62 	tsteq	r0, r2, ror #26
     63c:	69620000 	stmdbvs	r2!, {}^	; <UNPREDICTABLE>
     640:	5f336472 	svcpl	0x00336472
     644:	63616c62 	cmnvs	r1, #25088	; 0x6200
     648:	62782e6b 	rsbsvs	r2, r8, #1712	; 0x6b0
     64c:	0001006d 	andeq	r0, r1, sp, rrx
     650:	72696200 	rsbvc	r6, r9, #0, 4
     654:	675f3364 	ldrbvs	r3, [pc, -r4, ror #6]
     658:	2e796172 	mrccs	1, 3, r6, cr9, cr2, {3}
     65c:	006d6278 	rsbeq	r6, sp, r8, ror r2
     660:	62000001 	andvs	r0, r0, #1
     664:	33647269 	cmncc	r4, #-1879048186	; 0x90000006
     668:	67696c5f 			; <UNDEFINED> instruction: 0x67696c5f
     66c:	782e7468 	stmdavc	lr!, {r3, r5, r6, sl, ip, sp, lr}
     670:	01006d62 	tsteq	r0, r2, ror #26
     674:	69620000 	stmdbvs	r2!, {}^	; <UNPREDICTABLE>
     678:	5f346472 	svcpl	0x00346472
     67c:	63616c62 	cmnvs	r1, #25088	; 0x6200
     680:	62782e6b 	rsbsvs	r2, r8, #1712	; 0x6b0
     684:	0001006d 	andeq	r0, r1, sp, rrx
     688:	72696200 	rsbvc	r6, r9, #0, 4
     68c:	675f3464 	ldrbvs	r3, [pc, -r4, ror #8]
     690:	2e796172 	mrccs	1, 3, r6, cr9, cr2, {3}
     694:	006d6278 	rsbeq	r6, sp, r8, ror r2
     698:	62000001 	andvs	r0, r0, #1
     69c:	34647269 	strbtcc	r7, [r4], #-617	; 0xfffffd97
     6a0:	67696c5f 			; <UNDEFINED> instruction: 0x67696c5f
     6a4:	782e7468 	stmdavc	lr!, {r3, r5, r6, sl, ip, sp, lr}
     6a8:	01006d62 	tsteq	r0, r2, ror #26
     6ac:	69620000 	stmdbvs	r2!, {}^	; <UNPREDICTABLE>
     6b0:	5f356472 	svcpl	0x00356472
     6b4:	63616c62 	cmnvs	r1, #25088	; 0x6200
     6b8:	62782e6b 	rsbsvs	r2, r8, #1712	; 0x6b0
     6bc:	0001006d 	andeq	r0, r1, sp, rrx
     6c0:	72696200 	rsbvc	r6, r9, #0, 4
     6c4:	675f3564 	ldrbvs	r3, [pc, -r4, ror #10]
     6c8:	2e796172 	mrccs	1, 3, r6, cr9, cr2, {3}
     6cc:	006d6278 	rsbeq	r6, sp, r8, ror r2
     6d0:	62000001 	andvs	r0, r0, #1
     6d4:	35647269 	strbcc	r7, [r4, #-617]!	; 0xfffffd97
     6d8:	67696c5f 			; <UNDEFINED> instruction: 0x67696c5f
     6dc:	782e7468 	stmdavc	lr!, {r3, r5, r6, sl, ip, sp, lr}
     6e0:	01006d62 	tsteq	r0, r2, ror #26
     6e4:	00000000 	andeq	r0, r0, r0
     6e8:	10fc0205 	rscsne	r0, ip, r5, lsl #4
     6ec:	3f032000 	svccc	0x00032000
     6f0:	672f3e01 	strvs	r3, [pc, -r1, lsl #28]!
     6f4:	3d672f3d 	stclcc	15, cr2, [r7, #-244]!	; 0xffffff0c
     6f8:	2f3e672f 	svccs	0x003e672f
     6fc:	672f3d67 	strvs	r3, [pc, -r7, ror #26]!
     700:	3f672f3d 	svccc	0x00672f3d
     704:	2f3d672f 	svccs	0x003d672f
     708:	672f3d67 	strvs	r3, [pc, -r7, ror #26]!
     70c:	3d672f3e 	stclcc	15, cr2, [r7, #-248]!	; 0xffffff08
     710:	2f3d672f 	svccs	0x003d672f
     714:	672f3e67 	strvs	r3, [pc, -r7, ror #28]!
     718:	3d672f3d 	stclcc	15, cr2, [r7, #-244]!	; 0xffffff0c
     71c:	023d672f 	eorseq	r6, sp, #12320768	; 0xbc0000
     720:	4b4c145e 	blmi	13058a0 <startup-0x1ecfa760>
     724:	594b3e2f 	stmdbpl	fp, {r0, r1, r2, r3, r5, r9, sl, fp, ip, sp}^
     728:	5c595959 	mrrcpl	9, 5, r5, r9, cr9	; <UNPREDICTABLE>
     72c:	91919191 			; <UNDEFINED> instruction: 0x91919191
     730:	3d3e9493 	cfldrscc	mvf9, [lr, #-588]!	; 0xfffffdb4
     734:	023d3d3d 	eorseq	r3, sp, #3904	; 0xf40
     738:	0101003d 	tsteq	r1, sp, lsr r0
     73c:	00000161 	andeq	r0, r0, r1, ror #2
     740:	011c0002 	tsteq	ip, r2
     744:	01020000 	mrseq	r0, (UNDEF: 2)
     748:	000d0efb 	strdeq	r0, [sp], -fp
     74c:	01010101 	tsteq	r1, r1, lsl #2
     750:	01000000 	mrseq	r0, (UNDEF: 0)
     754:	43010000 	movwmi	r0, #4096	; 0x1000
     758:	6f6d2f3a 	svcvs	0x006d2f3a
     75c:	2f632f70 	svccs	0x00632f70
     760:	6c706f4d 	ldclvs	15, cr6, [r0], #-308	; 0xfffffecc
     764:	726f6261 	rsbvc	r6, pc, #268435462	; 0x10000006
     768:	6f697461 	svcvs	0x00697461
     76c:	2f72656e 	svccs	0x0072656e
     770:	73504944 	cmpvc	r0, #68, 18	; 0x110000
     774:	7469572d 	strbtvc	r5, [r9], #-1837	; 0xfffff8d3
     778:	432f6863 			; <UNDEFINED> instruction: 0x432f6863
     77c:	69770000 	ldmdbvs	r7!, {}^	; <UNPREDICTABLE>
     780:	2e686374 	mcrcs	3, 3, r6, cr8, cr4, {3}
     784:	00010063 	andeq	r0, r1, r3, rrx
     788:	72707300 	rsbsvc	r7, r0, #0, 6
     78c:	2e657469 	cdpcs	4, 6, cr7, cr5, cr9, {3}
     790:	00010068 	andeq	r0, r1, r8, rrx
     794:	616d6900 	cmnvs	sp, r0, lsl #18
     798:	682e6567 	stmdavs	lr!, {r0, r1, r2, r5, r6, r8, sl, sp, lr}
     79c:	00000100 	andeq	r0, r0, r0, lsl #2
     7a0:	656d6167 	strbvs	r6, [sp, #-359]!	; 0xfffffe99
     7a4:	656a626f 	strbvs	r6, [sl, #-623]!	; 0xfffffd91
     7a8:	682e7463 	stmdavs	lr!, {r0, r1, r5, r6, sl, ip, sp, lr}
     7ac:	00000100 	andeq	r0, r0, r0, lsl #2
     7b0:	63746977 	cmnvs	r4, #1949696	; 0x1dc000
     7b4:	625f3168 	subsvs	r3, pc, #104, 2
     7b8:	6b63616c 	blvs	18d8d70 <startup-0x1e727290>
     7bc:	6d62782e 	stclvs	8, cr7, [r2, #-184]!	; 0xffffff48
     7c0:	00000100 	andeq	r0, r0, r0, lsl #2
     7c4:	63746977 	cmnvs	r4, #1949696	; 0x1dc000
     7c8:	675f3168 	ldrbvs	r3, [pc, -r8, ror #2]
     7cc:	2e796172 	mrccs	1, 3, r6, cr9, cr2, {3}
     7d0:	006d6278 	rsbeq	r6, sp, r8, ror r2
     7d4:	77000001 	strvc	r0, [r0, -r1]
     7d8:	68637469 	stmdavs	r3!, {r0, r3, r5, r6, sl, ip, sp, lr}^
     7dc:	696c5f31 	stmdbvs	ip!, {r0, r4, r5, r8, r9, sl, fp, ip, lr}^
     7e0:	2e746867 	cdpcs	8, 7, cr6, cr4, cr7, {3}
     7e4:	006d6278 	rsbeq	r6, sp, r8, ror r2
     7e8:	77000001 	strvc	r0, [r0, -r1]
     7ec:	68637469 	stmdavs	r3!, {r0, r3, r5, r6, sl, ip, sp, lr}^
     7f0:	6c625f32 	stclvs	15, cr5, [r2], #-200	; 0xffffff38
     7f4:	2e6b6361 	cdpcs	3, 6, cr6, cr11, cr1, {3}
     7f8:	006d6278 	rsbeq	r6, sp, r8, ror r2
     7fc:	77000001 	strvc	r0, [r0, -r1]
     800:	68637469 	stmdavs	r3!, {r0, r3, r5, r6, sl, ip, sp, lr}^
     804:	72675f32 	rsbvc	r5, r7, #50, 30	; 0xc8
     808:	782e7961 	stmdavc	lr!, {r0, r5, r6, r8, fp, ip, sp, lr}
     80c:	01006d62 	tsteq	r0, r2, ror #26
     810:	69770000 	ldmdbvs	r7!, {}^	; <UNPREDICTABLE>
     814:	32686374 	rsbcc	r6, r8, #116, 6	; 0xd0000001
     818:	67696c5f 			; <UNDEFINED> instruction: 0x67696c5f
     81c:	782e7468 	stmdavc	lr!, {r3, r5, r6, sl, ip, sp, lr}
     820:	01006d62 	tsteq	r0, r2, ror #26
     824:	69770000 	ldmdbvs	r7!, {}^	; <UNPREDICTABLE>
     828:	33686374 	cmncc	r8, #116, 6	; 0xd0000001
     82c:	616c625f 	cmnvs	ip, pc, asr r2
     830:	782e6b63 	stmdavc	lr!, {r0, r1, r5, r6, r8, r9, fp, sp, lr}
     834:	01006d62 	tsteq	r0, r2, ror #26
     838:	69770000 	ldmdbvs	r7!, {}^	; <UNPREDICTABLE>
     83c:	33686374 	cmncc	r8, #116, 6	; 0xd0000001
     840:	6172675f 	cmnvs	r2, pc, asr r7
     844:	62782e79 	rsbsvs	r2, r8, #1936	; 0x790
     848:	0001006d 	andeq	r0, r1, sp, rrx
     84c:	74697700 	strbtvc	r7, [r9], #-1792	; 0xfffff900
     850:	5f336863 	svcpl	0x00336863
     854:	6867696c 	stmdavs	r7!, {r2, r3, r5, r6, r8, fp, sp, lr}^
     858:	62782e74 	rsbsvs	r2, r8, #116, 28	; 0x740
     85c:	0001006d 	andeq	r0, r1, sp, rrx
     860:	05000000 	streq	r0, [r0, #-0]
     864:	00146002 	andseq	r6, r4, r2
     868:	01280320 			; <UNDEFINED> instruction: 0x01280320
     86c:	3d672f3e 	stclcc	15, cr2, [r7, #-248]!	; 0xffffff08
     870:	2f3d672f 	svccs	0x003d672f
     874:	672f3e67 	strvs	r3, [pc, -r7, ror #28]!
     878:	3d672f3d 	stclcc	15, cr2, [r7, #-244]!	; 0xffffff0c
     87c:	2f3f672f 	svccs	0x003f672f
     880:	672f3d67 	strvs	r3, [pc, -r7, ror #26]!
     884:	3e672f3d 	mcrcc	15, 3, r2, cr7, cr13, {1}
     888:	4c143a02 			; <UNDEFINED> instruction: 0x4c143a02
     88c:	4b3e2f4b 	blmi	f8c5c0 <startup-0x1f073a40>
     890:	915b5959 	cmpls	fp, r9, asr r9
     894:	3e949191 	mrccc	1, 4, r9, cr4, cr1, {4}
     898:	3d3d3d3d 	ldccc	13, cr3, [sp, #-244]!	; 0xffffff0c
     89c:	01002902 	tsteq	r0, r2, lsl #18
     8a0:	00034e01 	andeq	r4, r3, r1, lsl #28
     8a4:	7c000200 	sfmvc	f0, 4, [r0], {-0}
     8a8:	02000000 	andeq	r0, r0, #0
     8ac:	0d0efb01 	vstreq	d15, [lr, #-4]
     8b0:	01010100 	mrseq	r0, (UNDEF: 17)
     8b4:	00000001 	andeq	r0, r0, r1
     8b8:	01000001 	tsteq	r0, r1
     8bc:	6d2f3a43 	vstmdbvs	pc!, {s6-s72}
     8c0:	632f706f 			; <UNDEFINED> instruction: 0x632f706f
     8c4:	706f4d2f 	rsbvc	r4, pc, pc, lsr #26
     8c8:	6f62616c 	svcvs	0x0062616c
     8cc:	69746172 	ldmdbvs	r4!, {r1, r4, r5, r6, r8, sp, lr}^
     8d0:	72656e6f 	rsbvc	r6, r5, #1776	; 0x6f0
     8d4:	5049442f 	subpl	r4, r9, pc, lsr #8
     8d8:	69572d73 	ldmdbvs	r7, {r0, r1, r4, r5, r6, r8, sl, fp, sp}^
     8dc:	2f686374 	svccs	0x00686374
     8e0:	67000043 	strvs	r0, [r0, -r3, asr #32]
     8e4:	68706172 	ldmdavs	r0!, {r1, r4, r5, r6, r8, sp, lr}^
     8e8:	2e736369 	cdpcs	3, 7, cr6, cr3, cr9, {3}
     8ec:	00010063 	andeq	r0, r1, r3, rrx
     8f0:	72707300 	rsbsvc	r7, r0, #0, 6
     8f4:	2e657469 	cdpcs	4, 6, cr7, cr5, cr9, {3}
     8f8:	00010068 	andeq	r0, r1, r8, rrx
     8fc:	616d6900 	cmnvs	sp, r0, lsl #18
     900:	682e6567 	stmdavs	lr!, {r0, r1, r2, r5, r6, r8, sl, sp, lr}
     904:	00000100 	andeq	r0, r0, r0, lsl #2
     908:	656d6167 	strbvs	r6, [sp, #-359]!	; 0xfffffe99
     90c:	656a626f 	strbvs	r6, [sl, #-623]!	; 0xfffffd91
     910:	682e7463 	stmdavs	lr!, {r0, r1, r5, r6, sl, ip, sp, lr}
     914:	00000100 	andeq	r0, r0, r0, lsl #2
     918:	70617267 	rsbvc	r7, r1, r7, ror #4
     91c:	73636968 	cmnvc	r3, #104, 18	; 0x1a0000
     920:	0100682e 	tsteq	r0, lr, lsr #16
     924:	00000000 	andeq	r0, r0, r0
     928:	16980205 	ldrne	r0, [r8], r5, lsl #4
     92c:	30152000 	andscc	r2, r5, r0
     930:	3d3d3d3d 	ldccc	13, cr3, [sp, #-244]!	; 0xffffff0c
     934:	01040200 	mrseq	r0, R12_usr
     938:	67062006 	strvs	r2, [r6, -r6]
     93c:	3d30a03d 	ldccc	0, cr10, [r0, #-244]!	; 0xffffff0c
     940:	003d3d3d 	eorseq	r3, sp, sp, lsr sp
     944:	06010402 	streq	r0, [r1], -r2, lsl #8
     948:	3d670620 	stclcc	6, cr0, [r7, #-128]!	; 0xffffff80
     94c:	2f214ba0 	svccs	0x00214ba0
     950:	5e2a2f2f 	cdppl	15, 2, cr2, cr10, cr15, {1}
     954:	57214f4c 	strpl	r4, [r1, -ip, asr #30]!
     958:	4a09035b 	bmi	2416cc <startup-0x1fdbe934>
     95c:	0402004c 	streq	r0, [r2], #-76	; 0xffffffb4
     960:	02003d03 	andeq	r3, r0, #3, 26	; 0xc0
     964:	00570304 	subseq	r0, r7, r4, lsl #6
     968:	06010402 	streq	r0, [r1], -r2, lsl #8
     96c:	674c063c 	smlaldxvs	r0, ip, ip, r6
     970:	2f674b2f 	svccs	0x00674b2f
     974:	a14b4b4b 	cmpge	fp, fp, asr #22
     978:	83915968 	orrshi	r5, r1, #104, 18	; 0x1a0000
     97c:	59687659 	stmdbpl	r8!, {r0, r3, r4, r6, r9, sl, ip, sp, lr}^
     980:	675983d7 	smmlsvs	r9, r7, r3, r8
     984:	74120367 	ldrvc	r0, [r2], #-871	; 0xfffffc99
     988:	03206e03 			; <UNDEFINED> instruction: 0x03206e03
     98c:	70034a12 	andvc	r4, r3, r2, lsl sl
     990:	223d3d20 	eorscs	r3, sp, #32, 26	; 0x800
     994:	3d223d3d 	stccc	13, cr3, [r2, #-244]!	; 0xffffff0c
     998:	3d3d223d 	lfmcc	f2, 4, [sp, #-244]!	; 0xffffff0c
     99c:	3d3e4c22 	ldccc	12, cr4, [lr, #-136]!	; 0xffffff78
     9a0:	313d3d3d 	teqcc	sp, sp, lsr sp
     9a4:	3d752f3d 	ldclcc	15, cr2, [r5, #-244]!	; 0xffffff0c
     9a8:	4a790331 	bmi	1e41674 <startup-0x1e1be98c>
     9ac:	bc3d2327 	ldclt	3, cr2, [sp], #-156	; 0xffffff64
     9b0:	3d3d3d67 	ldccc	13, cr3, [sp, #-412]!	; 0xfffffe64
     9b4:	3d2f593d 			; <UNDEFINED> instruction: 0x3d2f593d
     9b8:	3e3d592f 	vaddcc.f16	s10, s26, s31	; <UNPREDICTABLE>
     9bc:	4b303d4b 	blmi	c0fef0 <startup-0x1f3f0110>
     9c0:	bc3d313d 	ldflts	f3, [sp], #-244	; 0xffffff0c
     9c4:	5a595967 	bpl	1656f68 <startup-0x1e9a9098>
     9c8:	2f594b91 	svccs	0x00594b91
     9cc:	593e2f3d 	ldmdbpl	lr!, {r0, r2, r3, r4, r5, r8, r9, sl, fp, sp}
     9d0:	3d59303d 	ldclcc	0, cr3, [r9, #-244]	; 0xffffff0c
     9d4:	3d3d3d31 	ldccc	13, cr3, [sp, #-196]!	; 0xffffff3c
     9d8:	593d9167 	ldmdbpl	sp!, {r0, r1, r2, r5, r6, r8, ip, pc}
     9dc:	4b833d3d 	blmi	fe0cfed8 <firstTime.4040+0xde0c74ec>
     9e0:	3d593d91 	ldclcc	13, cr3, [r9, #-580]	; 0xfffffdbc
     9e4:	2f4c833d 	svccs	0x004c833d
     9e8:	3d3d3e3d 	ldccc	14, cr3, [sp, #-244]!	; 0xffffff0c
     9ec:	3d3d3e3d 	ldccc	14, cr3, [sp, #-244]!	; 0xffffff0c
     9f0:	4b4b4b3e 	blmi	12d36f0 <startup-0x1ed2c910>
     9f4:	3d3d4b4b 	fldmdbxcc	sp!, {d4-d40}	;@ Deprecated
     9f8:	4c9f4b3e 	vldmiami	pc, {d4-<overflow reg d34>}
     9fc:	03040200 	movweq	r0, #16896	; 0x4200
     a00:	0402004b 	streq	r0, [r2], #-75	; 0xffffffb5
     a04:	02004903 	andeq	r4, r0, #49152	; 0xc000
     a08:	58060104 	stmdapl	r6, {r2, r8}
     a0c:	02040200 	andeq	r0, r4, #0, 4
     a10:	02004606 	andeq	r4, r0, #6291456	; 0x600000
     a14:	58060104 	stmdapl	r6, {r2, r8}
     a18:	764d5206 	strbvc	r5, [sp], -r6, lsl #4
     a1c:	0402002f 	streq	r0, [r2], #-47	; 0xffffffd1
     a20:	004a0601 	subeq	r0, sl, r1, lsl #12
     a24:	4a020402 	bmi	81a34 <startup-0x1ff7e5cc>
     a28:	03040200 	movweq	r0, #16896	; 0x4200
     a2c:	084c064a 	stmdaeq	ip, {r1, r3, r6, r9, sl}^
     a30:	3e3d3d13 	mrccc	13, 1, r3, cr13, cr3, {0}
     a34:	76763dbc 			; <UNDEFINED> instruction: 0x76763dbc
     a38:	d71fd93d 			; <UNDEFINED> instruction: 0xd71fd93d
     a3c:	1fd93d23 	svcne	0x00d93d23
     a40:	d93d23d7 	ldmdble	sp!, {r0, r1, r2, r4, r6, r7, r8, r9, sp}
     a44:	6103d71f 	tstvs	r3, pc, lsl r7
     a48:	2023032e 	eorcs	r0, r3, lr, lsr #6
     a4c:	020069af 	andeq	r6, r0, #2867200	; 0x2bc000
     a50:	4a060104 	bmi	180e68 <startup-0x1fe7f198>
     a54:	02040200 	andeq	r0, r4, #0, 4
     a58:	0402004a 	streq	r0, [r2], #-74	; 0xffffffb6
     a5c:	4b064a03 	blmi	193270 <startup-0x1fe6cd90>
     a60:	59130875 	ldmdbpl	r3, {r0, r2, r4, r5, r6, fp}
     a64:	59595959 	ldmdbpl	r9, {r0, r3, r4, r6, r8, fp, ip, lr}^
     a68:	3d5b5959 	vldrcc.16	s11, [fp, #-178]	; 0xffffff4e	; <UNPREDICTABLE>
     a6c:	4c4b3d76 	mcrrmi	13, 7, r3, fp, cr6
     a70:	d8c93e4b 	stmiale	r9, {r0, r1, r3, r6, r9, sl, fp, ip, sp}^
     a74:	ae3dca9f 			; <UNDEFINED> instruction: 0xae3dca9f
     a78:	ac5e03a0 	mrrcge	3, 10, r0, lr, cr0
     a7c:	84202303 	strthi	r2, [r0], #-771	; 0xfffffcfd
     a80:	00592f4c 	subseq	r2, r9, ip, asr #30
     a84:	06010402 	streq	r0, [r1], -r2, lsl #8
     a88:	04020058 	streq	r0, [r2], #-88	; 0xffffffa8
     a8c:	02002e02 	andeq	r2, r0, #2, 28
     a90:	00200404 	eoreq	r0, r0, r4, lsl #8
     a94:	06040402 	streq	r0, [r4], -r2, lsl #8
     a98:	75d7593d 	ldrbvc	r5, [r7, #2365]	; 0x93d
     a9c:	03040200 	movweq	r0, #16896	; 0x4200
     aa0:	04020059 	streq	r0, [r2], #-89	; 0xffffffa7
     aa4:	0200ab03 	andeq	sl, r0, #3072	; 0xc00
     aa8:	9e060104 	adflss	f0, f6, f4
     aac:	02040200 	andeq	r0, r4, #0, 4
     ab0:	02005506 	andeq	r5, r0, #25165824	; 0x1800000
     ab4:	74060104 	strvc	r0, [r6], #-260	; 0xfffffefc
     ab8:	02040200 	andeq	r0, r4, #0, 4
     abc:	02005606 	andeq	r5, r0, #6291456	; 0x600000
     ac0:	74060104 	strvc	r0, [r6], #-260	; 0xfffffefc
     ac4:	580a0306 	stmdapl	sl, {r1, r2, r8, r9}
     ac8:	5a597652 	bpl	165e418 <startup-0x1e9a1be8>
     acc:	bb3d3d59 	bllt	f50038 <startup-0x1f0affc8>
     ad0:	3de6913d 	stfccp	f1, [r6, #244]!	; 0xf4
     ad4:	02006708 	andeq	r6, r0, #8, 14	; 0x200000
     ad8:	7a030204 	bvc	c12f0 <startup-0x1ff3ed10>
     adc:	02006608 	andeq	r6, r0, #8, 12	; 0x800000
     ae0:	3c060104 	stfccs	f0, [r6], {4}
     ae4:	02040200 	andeq	r0, r4, #0, 4
     ae8:	02003a06 	andeq	r3, r0, #24576	; 0x6000
     aec:	3c060104 	stfccs	f0, [r6], {4}
     af0:	02040200 	andeq	r0, r4, #0, 4
     af4:	02004906 	andeq	r4, r0, #98304	; 0x18000
     af8:	3c060104 	stfccs	f0, [r6], {4}
     afc:	580e0306 	stmdapl	lr, {r1, r2, r8, r9}
     b00:	003d774c 	eorseq	r7, sp, ip, asr #14
     b04:	3d030402 	cfstrscc	mvf0, [r3, #-8]
     b08:	03040200 	movweq	r0, #16896	; 0x4200
     b0c:	04020065 	streq	r0, [r2], #-101	; 0xffffff9b
     b10:	003c0601 	eorseq	r0, ip, r1, lsl #12
     b14:	06020402 	streq	r0, [r2], -r2, lsl #8
     b18:	04020065 	streq	r0, [r2], #-101	; 0xffffff9b
     b1c:	063c0601 	ldrteq	r0, [ip], -r1, lsl #12
     b20:	3d774c6b 	ldclcc	12, cr4, [r7, #-428]!	; 0xfffffe54
     b24:	03040200 	movweq	r0, #16896	; 0x4200
     b28:	0402003d 	streq	r0, [r2], #-61	; 0xffffffc3
     b2c:	02006503 	andeq	r6, r0, #12582912	; 0xc00000
     b30:	3c060104 	stfccs	f0, [r6], {4}
     b34:	02040200 	andeq	r0, r4, #0, 4
     b38:	02006506 	andeq	r6, r0, #25165824	; 0x1800000
     b3c:	3c060104 	stfccs	f0, [r6], {4}
     b40:	3d4d6b06 	vstrcc	d22, [sp, #-24]	; 0xffffffe8
     b44:	302f2f2f 	eorcc	r2, pc, pc, lsr #30
     b48:	02006930 	andeq	r6, r0, #48, 18	; 0xc0000
     b4c:	00300104 	eorseq	r0, r0, r4, lsl #2
     b50:	2f010402 	svccs	0x00010402
     b54:	01040200 	mrseq	r0, R12_usr
     b58:	04020067 	streq	r0, [r2], #-103	; 0xffffff99
     b5c:	0200c901 	andeq	ip, r0, #16384	; 0x4000
     b60:	13080104 	movwne	r0, #33028	; 0x8104
     b64:	01040200 	mrseq	r0, R12_usr
     b68:	0402004b 	streq	r0, [r2], #-75	; 0xffffffb5
     b6c:	02002f01 	andeq	r2, r0, #1, 30
     b70:	00680104 	rsbeq	r0, r8, r4, lsl #2
     b74:	c9010402 	stmdbgt	r1, {r1, sl}
     b78:	01040200 	mrseq	r0, R12_usr
     b7c:	02001308 	andeq	r1, r0, #8, 6	; 0x20000000
     b80:	00920104 	addseq	r0, r2, r4, lsl #2
     b84:	4b010402 	blmi	41b94 <startup-0x1ffbe46c>
     b88:	01040200 	mrseq	r0, R12_usr
     b8c:	0402003e 	streq	r0, [r2], #-62	; 0xffffffc2
     b90:	02002f01 	andeq	r2, r0, #1, 30
     b94:	00670104 	rsbeq	r0, r7, r4, lsl #2
     b98:	08010402 	stmdaeq	r1, {r1, sl}
     b9c:	04020013 	streq	r0, [r2], #-19	; 0xffffffed
     ba0:	02004c01 	andeq	r4, r0, #256	; 0x100
     ba4:	6c030104 	stfvss	f0, [r3], {4}
     ba8:	3c19033c 	ldccc	3, cr0, [r9], {60}	; 0x3c
     bac:	0402003e 	streq	r0, [r2], #-62	; 0xffffffc2
     bb0:	02003d03 	andeq	r3, r0, #3, 26	; 0xc0
     bb4:	91080304 	tstls	r8, r4, lsl #6
     bb8:	03040200 	movweq	r0, #16896	; 0x4200
     bbc:	02009108 	andeq	r9, r0, #8, 2
     bc0:	91080304 	tstls	r8, r4, lsl #6
     bc4:	03040200 	movweq	r0, #16896	; 0x4200
     bc8:	02004608 	andeq	r4, r0, #8, 12	; 0x800000
     bcc:	3c060104 	stfccs	f0, [r6], {4}
     bd0:	3e085006 	cdpcc	0, 0, cr5, cr8, cr6, {0}
     bd4:	21083d4b 	tstcs	r8, fp, asr #26
     bd8:	21082108 	tstcs	r8, r8, lsl #2
     bdc:	21304b4d 	teqcs	r0, sp, asr #22
     be0:	3e4b3e4b 	cdpcc	14, 4, cr3, cr11, cr11, {2}
     be4:	034b3e4b 	movteq	r3, #48715	; 0xbe4b
     be8:	0e033c75 	mcreq	12, 0, r3, cr3, cr5, {3}
     bec:	0b023058 	bleq	8cd54 <startup-0x1ff732ac>
     bf0:	72010100 	andvc	r0, r1, #0, 2
     bf4:	02000000 	andeq	r0, r0, #0
     bf8:	00005b00 	andeq	r5, r0, r0, lsl #22
     bfc:	fb010200 	blx	41406 <startup-0x1ffbebfa>
     c00:	01000d0e 	tsteq	r0, lr, lsl #26
     c04:	00010101 	andeq	r0, r1, r1, lsl #2
     c08:	00010000 	andeq	r0, r1, r0
     c0c:	3a430100 	bcc	10c1014 <startup-0x1ef3efec>
     c10:	706f6d2f 	rsbvc	r6, pc, pc, lsr #26
     c14:	4d2f632f 	stcmi	3, cr6, [pc, #-188]!	; b60 <startup-0x1ffff4a0>
     c18:	616c706f 	cmnvs	ip, pc, rrx
     c1c:	61726f62 	cmnvs	r2, r2, ror #30
     c20:	6e6f6974 			; <UNDEFINED> instruction: 0x6e6f6974
     c24:	442f7265 	strtmi	r7, [pc], #-613	; c2c <startup-0x1ffff3d4>
     c28:	2d735049 	ldclcs	0, cr5, [r3, #-292]!	; 0xfffffedc
     c2c:	63746957 	cmnvs	r4, #1425408	; 0x15c000
     c30:	00432f68 	subeq	r2, r3, r8, ror #30
     c34:	616d6900 	cmnvs	sp, r0, lsl #18
     c38:	632e6567 			; <UNDEFINED> instruction: 0x632e6567
     c3c:	00000100 	andeq	r0, r0, r0, lsl #2
     c40:	69727073 	ldmdbvs	r2!, {r0, r1, r4, r5, r6, ip, sp, lr}^
     c44:	682e6574 	stmdavs	lr!, {r2, r4, r5, r6, r8, sl, sp, lr}
     c48:	00000100 	andeq	r0, r0, r0, lsl #2
     c4c:	67616d69 	strbvs	r6, [r1, -r9, ror #26]!
     c50:	00682e65 	rsbeq	r2, r8, r5, ror #28
     c54:	00000001 	andeq	r0, r0, r1
     c58:	dc020500 	cfstr32le	mvfx0, [r2], {-0}
     c5c:	14200024 	strtne	r0, [r0], #-36	; 0xffffffdc
     c60:	3d3d3d75 	ldccc	13, cr3, [sp, #-468]!	; 0xfffffe2c
     c64:	01000402 	tsteq	r0, r2, lsl #8
     c68:	00006801 	andeq	r6, r0, r1, lsl #16
     c6c:	51000200 	mrspl	r0, R8_usr
     c70:	02000000 	andeq	r0, r0, #0
     c74:	0d0efb01 	vstreq	d15, [lr, #-4]
     c78:	01010100 	mrseq	r0, (UNDEF: 17)
     c7c:	00000001 	andeq	r0, r0, r1
     c80:	01000001 	tsteq	r0, r1
     c84:	6d2f3a43 	vstmdbvs	pc!, {s6-s72}
     c88:	632f706f 			; <UNDEFINED> instruction: 0x632f706f
     c8c:	706f4d2f 	rsbvc	r4, pc, pc, lsr #26
     c90:	6f62616c 	svcvs	0x0062616c
     c94:	69746172 	ldmdbvs	r4!, {r1, r4, r5, r6, r8, sp, lr}^
     c98:	72656e6f 	rsbvc	r6, r5, #1776	; 0x6f0
     c9c:	5049442f 	subpl	r4, r9, pc, lsr #8
     ca0:	69572d73 	ldmdbvs	r7, {r0, r1, r4, r5, r6, r8, sl, fp, sp}^
     ca4:	2f686374 	svccs	0x00686374
     ca8:	73000043 	movwvc	r0, #67	; 0x43
     cac:	74697270 	strbtvc	r7, [r9], #-624	; 0xfffffd90
     cb0:	00632e65 	rsbeq	r2, r3, r5, ror #28
     cb4:	73000001 	movwvc	r0, #1
     cb8:	74697270 	strbtvc	r7, [r9], #-624	; 0xfffffd90
     cbc:	00682e65 	rsbeq	r2, r8, r5, ror #28
     cc0:	00000001 	andeq	r0, r0, r1
     cc4:	04020500 	streq	r0, [r2], #-1280	; 0xfffffb00
     cc8:	15200025 	strne	r0, [r0, #-37]!	; 0xffffffdb
     ccc:	3d3d3d75 	ldccc	13, cr3, [sp, #-468]!	; 0xfffffe2c
     cd0:	01000402 	tsteq	r0, r2, lsl #8
     cd4:	00006c01 	andeq	r6, r0, r1, lsl #24
     cd8:	4d000200 	sfmmi	f0, 4, [r0, #-0]
     cdc:	02000000 	andeq	r0, r0, #0
     ce0:	0d0efb01 	vstreq	d15, [lr, #-4]
     ce4:	01010100 	mrseq	r0, (UNDEF: 17)
     ce8:	00000001 	andeq	r0, r0, r1
     cec:	01000001 	tsteq	r0, r1
     cf0:	6d2f3a43 	vstmdbvs	pc!, {s6-s72}
     cf4:	632f706f 			; <UNDEFINED> instruction: 0x632f706f
     cf8:	706f4d2f 	rsbvc	r4, pc, pc, lsr #26
     cfc:	6f62616c 	svcvs	0x0062616c
     d00:	69746172 	ldmdbvs	r4!, {r1, r4, r5, r6, r8, sp, lr}^
     d04:	72656e6f 	rsbvc	r6, r5, #1776	; 0x6f0
     d08:	5049442f 	subpl	r4, r9, pc, lsr #8
     d0c:	69572d73 	ldmdbvs	r7, {r0, r1, r4, r5, r6, r8, sl, fp, sp}^
     d10:	2f686374 	svccs	0x00686374
     d14:	67000043 	strvs	r0, [r0, -r3, asr #32]
     d18:	2e6f6970 			; <UNDEFINED> instruction: 0x2e6f6970
     d1c:	00010063 	andeq	r0, r1, r3, rrx
     d20:	69706700 	ldmdbvs	r0!, {r8, r9, sl, sp, lr}^
     d24:	00682e6f 	rsbeq	r2, r8, pc, ror #28
     d28:	00000001 	andeq	r0, r0, r1
     d2c:	2c020500 	cfstr32cs	mvfx0, [r2], {-0}
     d30:	15200025 	strne	r0, [r0, #-37]!	; 0xffffffdb
     d34:	2f763d2f 	svccs	0x00763d2f
     d38:	4b693d59 	blmi	1a502a4 <startup-0x1e5afd5c>
     d3c:	22309167 	eorscs	r9, r0, #-1073741799	; 0xc0000019
     d40:	01000402 	tsteq	r0, r2, lsl #8
     d44:	00015a01 	andeq	r5, r1, r1, lsl #20
     d48:	81000200 	mrshi	r0, R8_usr
     d4c:	02000000 	andeq	r0, r0, #0
     d50:	0d0efb01 	vstreq	d15, [lr, #-4]
     d54:	01010100 	mrseq	r0, (UNDEF: 17)
     d58:	00000001 	andeq	r0, r0, r1
     d5c:	01000001 	tsteq	r0, r1
     d60:	6d2f3a43 	vstmdbvs	pc!, {s6-s72}
     d64:	632f706f 			; <UNDEFINED> instruction: 0x632f706f
     d68:	706f4d2f 	rsbvc	r4, pc, pc, lsr #26
     d6c:	6f62616c 	svcvs	0x0062616c
     d70:	69746172 	ldmdbvs	r4!, {r1, r4, r5, r6, r8, sp, lr}^
     d74:	72656e6f 	rsbvc	r6, r5, #1776	; 0x6f0
     d78:	5049442f 	subpl	r4, r9, pc, lsr #8
     d7c:	69572d73 	ldmdbvs	r7, {r0, r1, r4, r5, r6, r8, sl, fp, sp}^
     d80:	2f686374 	svccs	0x00686374
     d84:	61000043 	tstvs	r0, r3, asr #32
     d88:	69696373 	stmdbvs	r9!, {r0, r1, r4, r5, r6, r8, r9, sp, lr}^
     d8c:	7369645f 	cmnvc	r9, #1593835520	; 0x5f000000
     d90:	79616c70 	stmdbvc	r1!, {r4, r5, r6, sl, fp, sp, lr}^
     d94:	0100632e 	tsteq	r0, lr, lsr #6
     d98:	70730000 	rsbsvc	r0, r3, r0
     d9c:	65746972 	ldrbvs	r6, [r4, #-2418]!	; 0xfffff68e
     da0:	0100682e 	tsteq	r0, lr, lsr #16
     da4:	6d690000 	stclvs	0, cr0, [r9, #-0]
     da8:	2e656761 	cdpcs	7, 6, cr6, cr5, cr1, {3}
     dac:	00010068 	andeq	r0, r1, r8, rrx
     db0:	6d616700 	stclvs	7, cr6, [r1, #-0]
     db4:	6a626f65 	bvs	189cb50 <startup-0x1e7634b0>
     db8:	2e746365 	cdpcs	3, 7, cr6, cr4, cr5, {3}
     dbc:	00010068 	andeq	r0, r1, r8, rrx
     dc0:	61726700 	cmnvs	r2, r0, lsl #14
     dc4:	63696870 	cmnvs	r9, #112, 16	; 0x700000
     dc8:	00682e73 	rsbeq	r2, r8, r3, ror lr
     dcc:	00000001 	andeq	r0, r0, r1
     dd0:	98020500 	stmdals	r2, {r8, sl}
     dd4:	03200025 			; <UNDEFINED> instruction: 0x03200025
     dd8:	5969012e 	stmdbpl	r9!, {r1, r2, r3, r5, r8}^
     ddc:	696859bb 	stmdbvs	r8!, {r0, r1, r3, r4, r5, r7, r8, fp, ip, lr}^
     de0:	59130859 	ldmdbpl	r3, {r0, r3, r4, r6, fp}
     de4:	3d3d6776 	ldccc	7, cr6, [sp, #-472]!	; 0xfffffe28
     de8:	3d674c59 	stclcc	12, cr4, [r7, #-356]!	; 0xfffffe9c
     dec:	3e4c593d 			; <UNDEFINED> instruction: 0x3e4c593d
     df0:	5a3d3d67 	bpl	f50394 <startup-0x1f0afc6c>
     df4:	842f6767 	strthi	r6, [pc], #-1895	; dfc <startup-0x1ffff204>
     df8:	3d3d673e 	ldccc	7, cr6, [sp, #-248]!	; 0xffffff08
     dfc:	2f67675a 	svccs	0x0067675a
     e00:	4b3d6784 	blmi	f5ac18 <startup-0x1f0a53e8>
     e04:	3e683d2f 	cdpcc	13, 6, cr3, cr8, cr15, {1}
     e08:	4b2f2f3d 	blmi	bccb04 <startup-0x1f4334fc>
     e0c:	67762f3d 			; <UNDEFINED> instruction: 0x67762f3d
     e10:	01040200 	mrseq	r0, R12_usr
     e14:	83062006 	movwhi	r2, #24582	; 0x6006
     e18:	4c3d593d 			; <UNDEFINED> instruction: 0x4c3d593d
     e1c:	764b6791 			; <UNDEFINED> instruction: 0x764b6791
     e20:	00304c9f 	mlaseq	r0, pc, ip, r4	; <UNPREDICTABLE>
     e24:	06010402 	streq	r0, [r1], -r2, lsl #8
     e28:	3d830620 	stccc	6, cr0, [r3, #128]	; 0x80
     e2c:	02003f3d 	andeq	r3, r0, #61, 30	; 0xf4
     e30:	20060104 	andcs	r0, r6, r4, lsl #2
     e34:	3d3d8306 	ldccc	3, cr8, [sp, #-24]!	; 0xffffffe8
     e38:	0402003f 	streq	r0, [r2], #-63	; 0xffffffc1
     e3c:	06200601 	strteq	r0, [r0], -r1, lsl #12
     e40:	3f3d3d83 	svccc	0x003d3d83
     e44:	01040200 	mrseq	r0, R12_usr
     e48:	83062006 	movwhi	r2, #24582	; 0x6006
     e4c:	3e3f3d3d 	mrccc	13, 1, r3, cr15, cr13, {1}
     e50:	2f843d34 	svccs	0x00843d34
     e54:	3e3e2f2f 	cdpcc	15, 3, cr2, cr14, cr15, {1}
     e58:	214b2f84 	smlalbbcs	r2, fp, r4, pc	; <UNPREDICTABLE>
     e5c:	4b2f4d73 	blmi	bd4430 <startup-0x1f42bbd0>
     e60:	684d7321 	stmdavs	sp, {r0, r5, r8, r9, ip, sp, lr}^
     e64:	214b3059 	qdaddcs	r3, r9, fp
     e68:	214b4d73 	hvccs	46291	; 0xb4d3
     e6c:	4c4b4e73 	mcrrmi	14, 7, r4, fp, cr3
     e70:	2f4b3075 	svccs	0x004b3075
     e74:	0073213d 	rsbseq	r2, r3, sp, lsr r1
     e78:	06010402 	streq	r0, [r1], -r2, lsl #8
     e7c:	4b6b064a 	blmi	1ac27ac <startup-0x1e53d854>
     e80:	73213d2f 			; <UNDEFINED> instruction: 0x73213d2f
     e84:	01040200 	mrseq	r0, R12_usr
     e88:	6b064a06 	blvs	1936a8 <startup-0x1fe6c958>
     e8c:	753e4e4b 	ldrvc	r4, [lr, #-3659]!	; 0xfffff1b5
     e90:	4b2f2f68 	blmi	bccc38 <startup-0x1f4333c8>
     e94:	4d73213d 	ldfmie	f2, [r3, #-244]!	; 0xffffff0c
     e98:	73212f4b 			; <UNDEFINED> instruction: 0x73212f4b
     e9c:	0802214d 	stmdaeq	r2, {r0, r2, r3, r6, r8, sp}
     ea0:	76010100 	strvc	r0, [r1], -r0, lsl #2
     ea4:	02000000 	andeq	r0, r0, #0
     ea8:	00005700 	andeq	r5, r0, r0, lsl #14
     eac:	fb010200 	blx	416b6 <startup-0x1ffbe94a>
     eb0:	01000d0e 	tsteq	r0, lr, lsl #26
     eb4:	00010101 	andeq	r0, r1, r1, lsl #2
     eb8:	00010000 	andeq	r0, r1, r0
     ebc:	3a430100 	bcc	10c12c4 <startup-0x1ef3ed3c>
     ec0:	706f6d2f 	rsbvc	r6, pc, pc, lsr #26
     ec4:	4d2f632f 	stcmi	3, cr6, [pc, #-188]!	; e10 <startup-0x1ffff1f0>
     ec8:	616c706f 	cmnvs	ip, pc, rrx
     ecc:	61726f62 	cmnvs	r2, r2, ror #30
     ed0:	6e6f6974 			; <UNDEFINED> instruction: 0x6e6f6974
     ed4:	442f7265 	strtmi	r7, [pc], #-613	; edc <startup-0x1ffff124>
     ed8:	2d735049 	ldclcs	0, cr5, [r3, #-292]!	; 0xfffffedc
     edc:	63746957 	cmnvs	r4, #1425408	; 0x15c000
     ee0:	00432f68 	subeq	r2, r3, r8, ror #30
     ee4:	6f6c7300 	svcvs	0x006c7300
     ee8:	65745f77 	ldrbvs	r5, [r4, #-3959]!	; 0xfffff089
     eec:	632e7478 			; <UNDEFINED> instruction: 0x632e7478
     ef0:	00000100 	andeq	r0, r0, r0, lsl #2
     ef4:	776f6c73 			; <UNDEFINED> instruction: 0x776f6c73
     ef8:	7865745f 	stmdavc	r5!, {r0, r1, r2, r3, r4, r6, sl, ip, sp, lr}^
     efc:	00682e74 	rsbeq	r2, r8, r4, ror lr
     f00:	00000001 	andeq	r0, r0, r1
     f04:	b8020500 	stmdalt	r2, {r8, sl}
     f08:	1520002a 	strne	r0, [r0, #-42]!	; 0xffffffd6
     f0c:	84c99f59 	strbhi	r9, [r9], #3929	; 0xf59
     f10:	3d754c59 	ldclcc	12, cr4, [r5, #-356]!	; 0xfffffe9c
     f14:	3d3d3d3d 	ldccc	13, cr3, [sp, #-244]!	; 0xffffff0c
     f18:	01000702 	tsteq	r0, r2, lsl #14
     f1c:	0000d601 	andeq	sp, r0, r1, lsl #12
     f20:	ab000200 	blge	1728 <startup-0x1fffe8d8>
     f24:	02000000 	andeq	r0, r0, #0
     f28:	0d0efb01 	vstreq	d15, [lr, #-4]
     f2c:	01010100 	mrseq	r0, (UNDEF: 17)
     f30:	00000001 	andeq	r0, r0, r1
     f34:	01000001 	tsteq	r0, r1
     f38:	6d2f3a43 	vstmdbvs	pc!, {s6-s72}
     f3c:	632f706f 			; <UNDEFINED> instruction: 0x632f706f
     f40:	706f4d2f 	rsbvc	r4, pc, pc, lsr #26
     f44:	6f62616c 	svcvs	0x0062616c
     f48:	69746172 	ldmdbvs	r4!, {r1, r4, r5, r6, r8, sp, lr}^
     f4c:	72656e6f 	rsbvc	r6, r5, #1776	; 0x6f0
     f50:	5049442f 	subpl	r4, r9, pc, lsr #8
     f54:	69572d73 	ldmdbvs	r7, {r0, r1, r4, r5, r6, r8, sl, fp, sp}^
     f58:	2f686374 	svccs	0x00686374
     f5c:	69000043 	stmdbvs	r0, {r0, r1, r6}
     f60:	6f6f646e 	svcvs	0x006f646e
     f64:	632e7372 			; <UNDEFINED> instruction: 0x632e7372
     f68:	00000100 	andeq	r0, r0, r0, lsl #2
     f6c:	69727073 	ldmdbvs	r2!, {r0, r1, r4, r5, r6, ip, sp, lr}^
     f70:	682e6574 	stmdavs	lr!, {r2, r4, r5, r6, r8, sl, sp, lr}
     f74:	00000100 	andeq	r0, r0, r0, lsl #2
     f78:	67616d69 	strbvs	r6, [r1, -r9, ror #26]!
     f7c:	00682e65 	rsbeq	r2, r8, r5, ror #28
     f80:	67000001 	strvs	r0, [r0, -r1]
     f84:	6f656d61 	svcvs	0x00656d61
     f88:	63656a62 	cmnvs	r5, #401408	; 0x62000
     f8c:	00682e74 	rsbeq	r2, r8, r4, ror lr
     f90:	69000001 	stmdbvs	r0, {r0}
     f94:	6f6f646e 	svcvs	0x006f646e
     f98:	625f7372 	subsvs	r7, pc, #-939524095	; 0xc8000001
     f9c:	6b63616c 	blvs	18d9554 <startup-0x1e726aac>
     fa0:	6d62782e 	stclvs	8, cr7, [r2, #-184]!	; 0xffffff48
     fa4:	00000100 	andeq	r0, r0, r0, lsl #2
     fa8:	6f646e69 	svcvs	0x00646e69
     fac:	5f73726f 	svcpl	0x0073726f
     fb0:	79617267 	stmdbvc	r1!, {r0, r1, r2, r5, r6, r9, ip, sp, lr}^
     fb4:	6d62782e 	stclvs	8, cr7, [r2, #-184]!	; 0xffffff48
     fb8:	00000100 	andeq	r0, r0, r0, lsl #2
     fbc:	6f646e69 	svcvs	0x00646e69
     fc0:	5f73726f 	svcpl	0x0073726f
     fc4:	6867696c 	stmdavs	r7!, {r2, r3, r5, r6, r8, fp, sp, lr}^
     fc8:	62782e74 	rsbsvs	r2, r8, #116, 28	; 0x740
     fcc:	0001006d 	andeq	r0, r1, sp, rrx
     fd0:	05000000 	streq	r0, [r0, #-0]
     fd4:	002b4c02 	eoreq	r4, fp, r2, lsl #24
     fd8:	01130320 	tsteq	r3, r0, lsr #6
     fdc:	3d672f3e 	stclcc	15, cr2, [r7, #-248]!	; 0xffffff08
     fe0:	2f3d672f 	svccs	0x003d672f
     fe4:	5a083e67 	bpl	210988 <startup-0x1fdef678>
     fe8:	3e2f4b4c 	vnmulcc.f64	d4, d15, d12
     fec:	3d3e934c 	ldccc	3, cr9, [lr, #-304]!	; 0xfffffed0
     ff0:	083d3d3d 	ldmdaeq	sp!, {r0, r2, r3, r4, r5, r8, sl, fp, ip, sp}
     ff4:	da010100 	ble	413fc <startup-0x1ffbec04>
     ff8:	02000000 	andeq	r0, r0, #0
     ffc:	0000af00 	andeq	sl, r0, r0, lsl #30
    1000:	fb010200 	blx	4180a <startup-0x1ffbe7f6>
    1004:	01000d0e 	tsteq	r0, lr, lsl #26
    1008:	00010101 	andeq	r0, r1, r1, lsl #2
    100c:	00010000 	andeq	r0, r1, r0
    1010:	3a430100 	bcc	10c1418 <startup-0x1ef3ebe8>
    1014:	706f6d2f 	rsbvc	r6, pc, pc, lsr #26
    1018:	4d2f632f 	stcmi	3, cr6, [pc, #-188]!	; f64 <startup-0x1ffff09c>
    101c:	616c706f 	cmnvs	ip, pc, rrx
    1020:	61726f62 	cmnvs	r2, r2, ror #30
    1024:	6e6f6974 			; <UNDEFINED> instruction: 0x6e6f6974
    1028:	442f7265 	strtmi	r7, [pc], #-613	; 1030 <startup-0x1fffefd0>
    102c:	2d735049 	ldclcs	0, cr5, [r3, #-292]!	; 0xfffffedc
    1030:	63746957 	cmnvs	r4, #1425408	; 0x15c000
    1034:	00432f68 	subeq	r2, r3, r8, ror #30
    1038:	646e6900 	strbtvs	r6, [lr], #-2304	; 0xfffff700
    103c:	73726f6f 	cmnvc	r2, #444	; 0x1bc
    1040:	00632e32 	rsbeq	r2, r3, r2, lsr lr
    1044:	73000001 	movwvc	r0, #1
    1048:	74697270 	strbtvc	r7, [r9], #-624	; 0xfffffd90
    104c:	00682e65 	rsbeq	r2, r8, r5, ror #28
    1050:	69000001 	stmdbvs	r0, {r0}
    1054:	6567616d 	strbvs	r6, [r7, #-365]!	; 0xfffffe93
    1058:	0100682e 	tsteq	r0, lr, lsr #16
    105c:	61670000 	cmnvs	r7, r0
    1060:	626f656d 	rsbvs	r6, pc, #457179136	; 0x1b400000
    1064:	7463656a 	strbtvc	r6, [r3], #-1386	; 0xfffffa96
    1068:	0100682e 	tsteq	r0, lr, lsr #16
    106c:	6e690000 	cdpvs	0, 6, cr0, cr9, cr0, {0}
    1070:	726f6f64 	rsbvc	r6, pc, #100, 30	; 0x190
    1074:	625f3273 	subsvs	r3, pc, #805306375	; 0x30000007
    1078:	6b63616c 	blvs	18d9630 <startup-0x1e7269d0>
    107c:	6d62782e 	stclvs	8, cr7, [r2, #-184]!	; 0xffffff48
    1080:	00000100 	andeq	r0, r0, r0, lsl #2
    1084:	6f646e69 	svcvs	0x00646e69
    1088:	3273726f 	rsbscc	r7, r3, #-268435450	; 0xf0000006
    108c:	6172675f 	cmnvs	r2, pc, asr r7
    1090:	62782e79 	rsbsvs	r2, r8, #1936	; 0x790
    1094:	0001006d 	andeq	r0, r1, sp, rrx
    1098:	646e6900 	strbtvs	r6, [lr], #-2304	; 0xfffff700
    109c:	73726f6f 	cmnvc	r2, #444	; 0x1bc
    10a0:	696c5f32 	stmdbvs	ip!, {r1, r4, r5, r8, r9, sl, fp, ip, lr}^
    10a4:	2e746867 	cdpcs	8, 7, cr6, cr4, cr7, {3}
    10a8:	006d6278 	rsbeq	r6, sp, r8, ror r2
    10ac:	00000001 	andeq	r0, r0, r1
    10b0:	34020500 	strcc	r0, [r2], #-1280	; 0xfffffb00
    10b4:	0320002c 			; <UNDEFINED> instruction: 0x0320002c
    10b8:	2f3e0113 	svccs	0x003e0113
    10bc:	672f3d67 	strvs	r3, [pc, -r7, ror #26]!
    10c0:	3e672f3d 	mcrcc	15, 3, r2, cr7, cr13, {1}
    10c4:	4b4c5a08 	blmi	13178ec <startup-0x1ece8714>
    10c8:	934c3e2f 	movtls	r3, #52783	; 0xce2f
    10cc:	3d3d3d3e 	ldccc	13, cr3, [sp, #-248]!	; 0xffffff08
    10d0:	0100083d 	tsteq	r0, sp, lsr r8
    10d4:	Address 0x000010d4 is out of bounds.


Disassembly of section .debug_str:

00000000 <.debug_str>:
       0:	74736163 	ldrbtvc	r6, [r3], #-355	; 0xfffffe9d
       4:	6c5f656c 	cfldr64vs	mvdx6, [pc], {108}	; 0x6c
       8:	74686769 	strbtvc	r6, [r8], #-1897	; 0xfffff897
       c:	7469625f 	strbtvc	r6, [r9], #-607	; 0xfffffda1
      10:	696c0073 	stmdbvs	ip!, {r0, r1, r4, r5, r6}^
      14:	49746867 	ldmdbmi	r4!, {r0, r1, r2, r5, r6, fp, sp, lr}^
      18:	6567616d 	strbvs	r6, [r7, #-365]!	; 0xfffffe93
      1c:	61726700 	cmnvs	r2, r0, lsl #14
      20:	616d4979 	smcvs	54425	; 0xd499
      24:	63006567 	movwvs	r6, #1383	; 0x567
      28:	6c747361 	ldclvs	3, cr7, [r4], #-388	; 0xfffffe7c
      2c:	72675f65 	rsbvc	r5, r7, #404	; 0x194
      30:	625f7961 	subsvs	r7, pc, #1589248	; 0x184000
      34:	00737469 	rsbseq	r7, r3, r9, ror #8
      38:	79616c70 	stmdbvc	r1!, {r4, r5, r6, sl, fp, sp, lr}^
      3c:	74007265 	strvc	r7, [r0], #-613	; 0xfffffd9b
      40:	5f747865 	svcpl	0x00747865
      44:	0061726b 	rsbeq	r7, r1, fp, ror #4
      48:	72665f6e 	rsbvc	r5, r6, #440	; 0x1b8
      4c:	73656d61 	cmnvc	r5, #6208	; 0x1840
      50:	73616300 	cmnvc	r1, #0, 6
      54:	4c656c74 	stclmi	12, cr6, [r5], #-464	; 0xfffffe30
      58:	74686769 	strbtvc	r6, [r8], #-1897	; 0xfffff897
      5c:	696f7000 	stmdbvs	pc!, {ip, sp, lr}^	; <UNPREDICTABLE>
      60:	7265746e 	rsbvc	r7, r5, #1845493760	; 0x6e000000
      64:	74003031 	strvc	r3, [r0], #-49	; 0xffffffcf
      68:	43706d65 	cmnmi	r0, #6464	; 0x1940
      6c:	6c747361 	ldclvs	3, cr7, [r4], #-388	; 0xfffffe7c
      70:	616c4265 	cmnvs	ip, r5, ror #4
      74:	47006b63 	strmi	r6, [r0, -r3, ror #22]
      78:	4320554e 			; <UNDEFINED> instruction: 0x4320554e
      7c:	36203939 			; <UNDEFINED> instruction: 0x36203939
      80:	312e332e 			; <UNDEFINED> instruction: 0x312e332e
      84:	31303220 	teqcc	r0, r0, lsr #4
      88:	31323037 	teqcc	r2, r7, lsr r0
      8c:	72282035 	eorvc	r2, r8, #53	; 0x35
      90:	61656c65 	cmnvs	r5, r5, ror #24
      94:	20296573 	eorcs	r6, r9, r3, ror r5
      98:	4d52415b 	ldfmie	f4, [r2, #-364]	; 0xfffffe94
      9c:	626d652f 	rsbvs	r6, sp, #197132288	; 0xbc00000
      a0:	65646465 	strbvs	r6, [r4, #-1125]!	; 0xfffffb9b
      a4:	2d362d64 	ldccs	13, cr2, [r6, #-400]!	; 0xfffffe70
      a8:	6e617262 	cdpvs	2, 6, cr7, cr1, cr2, {3}
      ac:	72206863 	eorvc	r6, r0, #6488064	; 0x630000
      b0:	73697665 	cmnvc	r9, #105906176	; 0x6500000
      b4:	206e6f69 	rsbcs	r6, lr, r9, ror #30
      b8:	35353432 	ldrcc	r3, [r5, #-1074]!	; 0xfffffbce
      bc:	205d3231 	subscs	r3, sp, r1, lsr r2
      c0:	68746d2d 	ldmdavs	r4!, {r0, r2, r3, r5, r8, sl, fp, sp, lr}^
      c4:	20626d75 	rsbcs	r6, r2, r5, ror sp
      c8:	72616d2d 	rsbvc	r6, r1, #2880	; 0xb40
      cc:	613d6863 	teqvs	sp, r3, ror #16
      d0:	36766d72 			; <UNDEFINED> instruction: 0x36766d72
      d4:	2d206d2d 	stccs	13, cr6, [r0, #-180]!	; 0xffffff4c
      d8:	6f6c666d 	svcvs	0x006c666d
      dc:	612d7461 			; <UNDEFINED> instruction: 0x612d7461
      e0:	733d6962 	teqvc	sp, #1605632	; 0x188000
      e4:	2074666f 	rsbscs	r6, r4, pc, ror #12
      e8:	68746d2d 	ldmdavs	r4!, {r0, r2, r3, r5, r8, sl, fp, sp, lr}^
      ec:	20626d75 	rsbcs	r6, r2, r5, ror sp
      f0:	72616d2d 	rsbvc	r6, r1, #2880	; 0xb40
      f4:	613d6863 	teqvs	sp, r3, ror #16
      f8:	36766d72 			; <UNDEFINED> instruction: 0x36766d72
      fc:	2d206d2d 	stccs	13, cr6, [r0, #-180]!	; 0xffffff4c
     100:	4f2d2067 	svcmi	0x002d2067
     104:	732d2030 			; <UNDEFINED> instruction: 0x732d2030
     108:	633d6474 	teqvs	sp, #116, 8	; 0x74000000
     10c:	6d003939 	vstrvs.16	s6, [r0, #-114]	; 0xffffff8e	; <UNPREDICTABLE>
     110:	74736e6f 	ldrbtvc	r6, [r3], #-3695	; 0xfffff191
     114:	63007265 	movwvs	r7, #613	; 0x265
     118:	6c747361 	ldclvs	3, cr7, [r4], #-388	; 0xfffffe7c
     11c:	6a624f65 	bvs	1893eb8 <startup-0x1e76c148>
     120:	6e6f6d00 	cdpvs	13, 6, cr6, cr15, cr0, {0}
     124:	72657473 	rsbvc	r7, r5, #1929379840	; 0x73000000
     128:	6e696f50 	mcrvs	15, 3, r6, cr9, cr0, {2}
     12c:	00726574 	rsbseq	r6, r2, r4, ror r5
     130:	73657270 	cmnvc	r5, #112, 4
     134:	6c625f73 	stclvs	15, cr5, [r2], #-460	; 0xfffffe34
     138:	5f6b6361 	svcpl	0x006b6361
     13c:	73746962 	cmnvc	r4, #1605632	; 0x188000
     140:	72696600 	rsbvc	r6, r9, #0, 12
     144:	695f3165 	ldmdbvs	pc, {r0, r2, r5, r6, r8, ip, sp}^	; <UNPREDICTABLE>
     148:	6f6f646e 	svcvs	0x006f646e
     14c:	63007372 	movwvs	r7, #882	; 0x372
     150:	6c747361 	ldclvs	3, cr7, [r4], #-388	; 0xfffffe7c
     154:	616d4965 	cmnvs	sp, r5, ror #18
     158:	00736567 	rsbseq	r6, r3, r7, ror #10
     15c:	6c746974 			; <UNDEFINED> instruction: 0x6c746974
     160:	616d4965 	cmnvs	sp, r5, ror #18
     164:	73006567 	movwvc	r6, #1383	; 0x567
     168:	74726174 	ldrbtvc	r6, [r2], #-372	; 0xfffffe8c
     16c:	74007075 	strvc	r7, [r0], #-117	; 0xffffff8b
     170:	31747865 	cmncc	r4, r5, ror #16
     174:	6e6f6d00 	cdpvs	13, 6, cr6, cr15, cr0, {0}
     178:	72657473 	rsbvc	r7, r5, #1929379840	; 0x73000000
     17c:	6867694c 	stmdavs	r7!, {r2, r3, r6, r8, fp, sp, lr}^
     180:	69740074 	ldmdbvs	r4!, {r2, r4, r5, r6}^
     184:	5f656c74 	svcpl	0x00656c74
     188:	6867696c 	stmdavs	r7!, {r2, r3, r5, r6, r8, fp, sp, lr}^
     18c:	69625f74 	stmdbvs	r2!, {r2, r4, r5, r6, r8, r9, sl, fp, ip, lr}^
     190:	74007374 	strvc	r7, [r0], #-884	; 0xfffffc8c
     194:	4d706d65 	ldclmi	13, cr6, [r0, #-404]!	; 0xfffffe6c
     198:	74736e6f 	ldrbtvc	r6, [r3], #-3695	; 0xfffff191
     19c:	72477265 	subvc	r7, r7, #1342177286	; 0x50000006
     1a0:	74007961 	strvc	r7, [r0], #-2401	; 0xfffff69f
     1a4:	32747865 	rsbscc	r7, r4, #6619136	; 0x650000
     1a8:	65727000 	ldrbvs	r7, [r2, #-0]!
     1ac:	72477373 	subvc	r7, r7, #-872415231	; 0xcc000001
     1b0:	74007961 	strvc	r7, [r0], #-2401	; 0xfffff69f
     1b4:	34747865 	ldrbtcc	r7, [r4], #-2149	; 0xfffff79b
     1b8:	78657400 	stmdavc	r5!, {sl, ip, sp, lr}^
     1bc:	74003374 	strvc	r3, [r0], #-884	; 0xfffffc8c
     1c0:	35747865 	ldrbcc	r7, [r4, #-2149]!	; 0xfffff79b
     1c4:	72696600 	rsbvc	r6, r9, #0, 12
     1c8:	74003165 	strvc	r3, [r0], #-357	; 0xfffffe9b
     1cc:	42706d65 	rsbsmi	r6, r0, #6464	; 0x1940
     1d0:	65740067 	ldrbvs	r0, [r4, #-103]!	; 0xffffff99
     1d4:	00387478 	eorseq	r7, r8, r8, ror r4
     1d8:	6c746974 			; <UNDEFINED> instruction: 0x6c746974
     1dc:	6c625f65 	stclvs	15, cr5, [r2], #-404	; 0xfffffe6c
     1e0:	5f6b6361 	svcpl	0x006b6361
     1e4:	73746962 	cmnvc	r4, #1605632	; 0x188000
     1e8:	6d657400 	cfstrdvs	mvd7, [r5, #-0]
     1ec:	6e6f4d70 	mcrvs	13, 3, r4, cr15, cr0, {3}
     1f0:	72657473 	rsbvc	r7, r5, #1929379840	; 0x73000000
     1f4:	6867694c 	stmdavs	r7!, {r2, r3, r6, r8, fp, sp, lr}^
     1f8:	65740074 	ldrbvs	r0, [r4, #-116]!	; 0xffffff8c
     1fc:	00377478 	eorseq	r7, r7, r8, ror r4
     200:	77617264 	strbvc	r7, [r1, -r4, ror #4]!
     204:	6675625f 			; <UNDEFINED> instruction: 0x6675625f
     208:	5f726566 	svcpl	0x00726566
     20c:	63616c62 	cmnvs	r1, #25088	; 0x6200
     210:	6574006b 	ldrbvs	r0, [r4, #-107]!	; 0xffffff95
     214:	00367478 	eorseq	r7, r6, r8, ror r4
     218:	74786574 	ldrbtvc	r6, [r8], #-1396	; 0xfffffa8c
     21c:	6f6d0039 	svcvs	0x006d0039
     220:	6574736e 	ldrbvs	r7, [r4, #-878]!	; 0xfffffc92
     224:	696f5072 	stmdbvs	pc!, {r1, r4, r5, r6, ip, lr}^	; <UNPREDICTABLE>
     228:	7265746e 	rsbvc	r7, r5, #1845493760	; 0x6e000000
     22c:	6f6d0032 	svcvs	0x006d0032
     230:	6574736e 	ldrbvs	r7, [r4, #-878]!	; 0xfffffc92
     234:	696f5072 	stmdbvs	pc!, {r1, r4, r5, r6, ip, lr}^	; <UNPREDICTABLE>
     238:	7265746e 	rsbvc	r7, r5, #1845493760	; 0x6e000000
     23c:	6f720033 	svcvs	0x00720033
     240:	64003277 	strvs	r3, [r0], #-631	; 0xfffffd89
     244:	6c707369 	ldclvs	3, cr7, [r0], #-420	; 0xfffffe5c
     248:	6d007961 	vstrvs.16	s14, [r0, #-194]	; 0xffffff3e	; <UNPREDICTABLE>
     24c:	74736e6f 	ldrbtvc	r6, [r3], #-3695	; 0xfffff191
     250:	625f7265 	subsvs	r7, pc, #1342177286	; 0x50000006
     254:	6b63616c 	blvs	18d880c <startup-0x1e7277f4>
     258:	7469625f 	strbtvc	r6, [r9], #-607	; 0xfffffda1
     25c:	6e690073 	mcrvs	0, 3, r0, cr9, cr3, {3}
     260:	615f7469 	cmpvs	pc, r9, ror #8
     264:	6c007070 	stcvs	0, cr7, [r0], {112}	; 0x70
     268:	5f676e6f 	svcpl	0x00676e6f
     26c:	74786574 	ldrbtvc	r6, [r8], #-1396	; 0xfffffa8c
     270:	65727000 	ldrbvs	r7, [r2, #-0]!
     274:	624f7373 	subvs	r7, pc, #-872415231	; 0xcc000001
     278:	7264006a 	rsbvc	r0, r4, #106	; 0x6a
     27c:	625f7761 	subsvs	r7, pc, #25427968	; 0x1840000
     280:	65666675 	strbvs	r6, [r6, #-1653]!	; 0xfffff98b
     284:	6c625f72 	stclvs	15, cr5, [r2], #-456	; 0xfffffe38
     288:	5f6b6361 	svcpl	0x006b6361
     28c:	79617267 	stmdbvc	r1!, {r0, r1, r2, r5, r6, r9, ip, sp, lr}^
     290:	67696c5f 			; <UNDEFINED> instruction: 0x67696c5f
     294:	70007468 	andvc	r7, r0, r8, ror #8
     298:	746e696f 	strbtvc	r6, [lr], #-2415	; 0xfffff691
     29c:	00347265 	eorseq	r7, r4, r5, ror #4
     2a0:	6e696f70 	mcrvs	15, 3, r6, cr9, cr0, {3}
     2a4:	35726574 	ldrbcc	r6, [r2, #-1396]!	; 0xfffffa8c
     2a8:	696f7000 	stmdbvs	pc!, {ip, sp, lr}^	; <UNPREDICTABLE>
     2ac:	7265746e 	rsbvc	r7, r5, #1845493760	; 0x6e000000
     2b0:	6f700036 	svcvs	0x00700036
     2b4:	65746e69 	ldrbvs	r6, [r4, #-3689]!	; 0xfffff197
     2b8:	70003772 	andvc	r3, r0, r2, ror r7
     2bc:	746e696f 	strbtvc	r6, [lr], #-2415	; 0xfffff691
     2c0:	00387265 	eorseq	r7, r8, r5, ror #4
     2c4:	6e696f70 	mcrvs	15, 3, r6, cr9, cr0, {3}
     2c8:	39726574 	ldmdbcc	r2!, {r2, r4, r5, r6, r8, sl, sp, lr}^
     2cc:	6d657400 	cfstrdvs	mvd7, [r5, #-0]
     2d0:	73614370 	cmnvc	r1, #112, 6	; 0xc0000001
     2d4:	4c656c74 	stclmi	12, cr6, [r5], #-464	; 0xfffffe30
     2d8:	74686769 	strbtvc	r6, [r8], #-1897	; 0xfffff897
     2dc:	6e657200 	cdpvs	2, 6, cr7, cr5, cr0, {0}
     2e0:	00726564 	rsbseq	r6, r2, r4, ror #10
     2e4:	74646977 	strbtvc	r6, [r4], #-2423	; 0xfffff689
     2e8:	72640068 	rsbvc	r0, r4, #104	; 0x68
     2ec:	625f7761 	subsvs	r7, pc, #25427968	; 0x1840000
     2f0:	65666675 	strbvs	r6, [r6, #-1653]!	; 0xfffff98b
     2f4:	6c625f72 	stclvs	15, cr5, [r2], #-456	; 0xfffffe38
     2f8:	5f6b6361 	svcpl	0x006b6361
     2fc:	6867696c 	stmdavs	r7!, {r2, r3, r5, r6, r8, fp, sp, lr}^
     300:	68730074 	ldmdavs	r3!, {r2, r4, r5, r6}^
     304:	2074726f 	rsbscs	r7, r4, pc, ror #4
     308:	69736e75 	ldmdbvs	r3!, {r0, r2, r4, r5, r6, r9, sl, fp, sp, lr}^
     30c:	64656e67 	strbtvs	r6, [r5], #-3687	; 0xfffff199
     310:	746e6920 	strbtvc	r6, [lr], #-2336	; 0xfffff6e0
     314:	6c656400 	cfstrdvs	mvd6, [r5], #-0
     318:	755f7961 	ldrbvc	r7, [pc, #-2401]	; fffff9bf <firstTime.4040+0xdfff6fd3>
     31c:	6c69746e 	cfstrdvs	mvd7, [r9], #-440	; 0xfffffe48
     320:	7865745f 	stmdavc	r5!, {r0, r1, r2, r3, r4, r6, sl, ip, sp, lr}^
     324:	65740074 	ldrbvs	r0, [r4, #-116]!	; 0xffffff8c
     328:	6f4d706d 	svcvs	0x004d706d
     32c:	6574736e 	ldrbvs	r7, [r4, #-878]!	; 0xfffffc92
     330:	69740072 	ldmdbvs	r4!, {r1, r4, r5, r6}^
     334:	42656c74 	rsbmi	r6, r5, #116, 24	; 0x7400
     338:	6b63616c 	blvs	18d88f0 <startup-0x1e727710>
     33c:	65727000 	ldrbvs	r7, [r2, #-0]!
     340:	675f7373 			; <UNDEFINED> instruction: 0x675f7373
     344:	5f796172 	svcpl	0x00796172
     348:	73746962 	cmnvc	r4, #1605632	; 0x188000
     34c:	696e6100 	stmdbvs	lr!, {r8, sp, lr}^
     350:	6974616d 	ldmdbvs	r4!, {r0, r2, r3, r5, r6, r8, sp, lr}^
     354:	735f6e6f 	cmpvc	pc, #1776	; 0x6f0
     358:	64656570 	strbtvs	r6, [r5], #-1392	; 0xfffffa90
     35c:	696e6100 	stmdbvs	lr!, {r8, sp, lr}^
     360:	6974616d 	ldmdbvs	r4!, {r0, r2, r3, r5, r6, r8, sp, lr}^
     364:	635f6e6f 	cmpvs	pc, #1776	; 0x6f0
     368:	746e756f 	strbtvc	r7, [lr], #-1391	; 0xfffffa91
     36c:	6d007265 	sfmvs	f7, 4, [r0, #-404]	; 0xfffffe6c
     370:	74736e6f 	ldrbtvc	r6, [r3], #-3695	; 0xfffff191
     374:	624f7265 	subvs	r7, pc, #1342177286	; 0x50000006
     378:	6973006a 	ldmdbvs	r3!, {r1, r3, r5, r6}^
     37c:	7974657a 	ldmdbvc	r4!, {r1, r3, r4, r5, r6, r8, sl, sp, lr}^
     380:	74006570 	strvc	r6, [r0], #-1392	; 0xfffffa90
     384:	656c7469 	strbvs	r7, [ip, #-1129]!	; 0xfffffb97
     388:	6172675f 	cmnvs	r2, pc, asr r7
     38c:	69625f79 	stmdbvs	r2!, {r0, r3, r4, r5, r6, r8, r9, sl, fp, ip, lr}^
     390:	6e007374 	mcrvs	3, 0, r7, cr0, cr4, {3}
     394:	656d6147 	strbvs	r6, [sp, #-327]!	; 0xfffffeb9
     398:	656a624f 	strbvs	r6, [sl, #-591]!	; 0xfffffdb1
     39c:	00737463 	rsbseq	r7, r3, r3, ror #8
     3a0:	73657270 	cmnvc	r5, #112, 4
     3a4:	696c5f73 	stmdbvs	ip!, {r0, r1, r4, r5, r6, r8, r9, sl, fp, ip, lr}^
     3a8:	5f746867 	svcpl	0x00746867
     3ac:	73746962 	cmnvc	r4, #1605632	; 0x188000
     3b0:	65727000 	ldrbvs	r7, [r2, #-0]!
     3b4:	6d497373 	stclvs	3, cr7, [r9, #-460]	; 0xfffffe34
     3b8:	00656761 	rsbeq	r6, r5, r1, ror #14
     3bc:	67616d69 	strbvs	r6, [r1, -r9, ror #26]!
     3c0:	73007365 	movwvc	r7, #869	; 0x365
     3c4:	74726f68 	ldrbtvc	r6, [r2], #-3944	; 0xfffff098
     3c8:	7865745f 	stmdavc	r5!, {r0, r1, r2, r3, r4, r6, sl, ip, sp, lr}^
     3cc:	75630074 	strbvc	r0, [r3, #-116]!	; 0xffffff8c
     3d0:	6e657272 	mcrvs	2, 3, r7, cr5, cr2, {3}
     3d4:	72665f74 	rsbvc	r5, r6, #116, 30	; 0x1d0
     3d8:	00656d61 	rsbeq	r6, r5, r1, ror #26
     3dc:	6c746974 			; <UNDEFINED> instruction: 0x6c746974
     3e0:	67694c65 	strbvs	r4, [r9, -r5, ror #24]!
     3e4:	74007468 	strvc	r7, [r0], #-1128	; 0xfffffb98
     3e8:	50706d65 	rsbspl	r6, r0, r5, ror #26
     3ec:	73736572 	cmnvc	r3, #478150656	; 0x1c800000
     3f0:	79617247 	stmdbvc	r1!, {r0, r1, r2, r6, r9, ip, sp, lr}^
     3f4:	696e6900 	stmdbvs	lr!, {r8, fp, sp, lr}^
     3f8:	72705374 	rsbsvc	r5, r0, #116, 6	; 0xd0000001
     3fc:	73657469 	cmnvc	r5, #1761607680	; 0x69000000
     400:	6d657400 	cfstrdvs	mvd7, [r5, #-0]
     404:	73614370 	cmnvc	r1, #112, 6	; 0xc0000001
     408:	47656c74 			; <UNDEFINED> instruction: 0x47656c74
     40c:	00796172 	rsbseq	r6, r9, r2, ror r1
     410:	706d6574 	rsbvc	r6, sp, r4, ror r5
     414:	6c746954 			; <UNDEFINED> instruction: 0x6c746954
     418:	616c4265 	cmnvs	ip, r5, ror #4
     41c:	75006b63 	strvc	r6, [r0, #-2915]	; 0xfffff49d
     420:	6769736e 	strbvs	r7, [r9, -lr, ror #6]!
     424:	2064656e 	rsbcs	r6, r4, lr, ror #10
     428:	72616863 	rsbvc	r6, r1, #6488064	; 0x630000
     42c:	61726400 	cmnvs	r2, r0, lsl #8
     430:	75625f77 	strbvc	r5, [r2, #-3959]!	; 0xfffff089
     434:	72656666 	rsbvc	r6, r5, #106954752	; 0x6600000
     438:	616c625f 	cmnvs	ip, pc, asr r2
     43c:	675f6b63 	ldrbvs	r6, [pc, -r3, ror #22]
     440:	00796172 	rsbseq	r6, r9, r2, ror r1
     444:	736e6f6d 	cmnvc	lr, #436	; 0x1b4
     448:	5f726574 	svcpl	0x00726574
     44c:	6867696c 	stmdavs	r7!, {r2, r3, r5, r6, r8, fp, sp, lr}^
     450:	69625f74 	stmdbvs	r2!, {r2, r4, r5, r6, r8, r9, sl, fp, ip, lr}^
     454:	63007374 	movwvs	r7, #884	; 0x374
     458:	6c747361 	ldclvs	3, cr7, [r4], #-388	; 0xfffffe7c
     45c:	6c625f65 	stclvs	15, cr5, [r2], #-404	; 0xfffffe6c
     460:	5f6b6361 	svcpl	0x006b6361
     464:	73746962 	cmnvc	r4, #1605632	; 0x188000
     468:	74697400 	strbtvc	r7, [r9], #-1024	; 0xfffffc00
     46c:	624f656c 	subvs	r6, pc, #108, 10	; 0x1b000000
     470:	3a43006a 	bcc	10c0620 <startup-0x1ef3f9e0>
     474:	706f6d2f 	rsbvc	r6, pc, pc, lsr #26
     478:	4d2f632f 	stcmi	3, cr6, [pc, #-188]!	; 3c4 <startup-0x1ffffc3c>
     47c:	616c706f 	cmnvs	ip, pc, rrx
     480:	61726f62 	cmnvs	r2, r2, ror #30
     484:	6e6f6974 			; <UNDEFINED> instruction: 0x6e6f6974
     488:	442f7265 	strtmi	r7, [pc], #-613	; 490 <startup-0x1ffffb70>
     48c:	2d735049 	ldclcs	0, cr5, [r3, #-292]!	; 0xfffffedc
     490:	63746957 	cmnvs	r4, #1425408	; 0x15c000
     494:	2f432f68 	svccs	0x00432f68
     498:	72617473 	rsbvc	r7, r1, #1929379840	; 0x73000000
     49c:	2e707574 	mrccs	5, 3, r7, cr0, cr4, {3}
     4a0:	61670063 	cmnvs	r7, r3, rrx
     4a4:	624f656d 	subvs	r6, pc, #457179136	; 0x1b400000
     4a8:	7463656a 	strbtvc	r6, [r3], #-1386	; 0xfffffa96
     4ac:	61630073 	smcvs	12291	; 0x3003
     4b0:	656c7473 	strbvs	r7, [ip, #-1139]!	; 0xfffffb8d
     4b4:	79617247 	stmdbvc	r1!, {r0, r1, r2, r6, r9, ip, sp, lr}^
     4b8:	6e6f6d00 	cdpvs	13, 6, cr6, cr15, cr0, {0}
     4bc:	72657473 	rsbvc	r7, r5, #1929379840	; 0x73000000
     4c0:	79617247 	stmdbvc	r1!, {r0, r1, r2, r6, r9, ip, sp, lr}^
     4c4:	74697400 	strbtvc	r7, [r9], #-1024	; 0xfffffc00
     4c8:	7247656c 	subvc	r6, r7, #108, 10	; 0x1b000000
     4cc:	63007961 	movwvs	r7, #2401	; 0x961
     4d0:	65727275 	ldrbvs	r7, [r2, #-629]!	; 0xfffffd8b
     4d4:	735f746e 	cmpvc	pc, #1845493760	; 0x6e000000
     4d8:	65657263 	strbvs	r7, [r5, #-611]!	; 0xfffffd9d
     4dc:	6574006e 	ldrbvs	r0, [r4, #-110]!	; 0xffffff92
     4e0:	7250706d 	subsvc	r7, r0, #109	; 0x6d
     4e4:	42737365 	rsbsmi	r7, r3, #-1811939327	; 0x94000001
     4e8:	6b63616c 	blvs	18d8aa0 <startup-0x1e727560>
     4ec:	5f676200 	svcpl	0x00676200
     4f0:	73746962 	cmnvc	r4, #1605632	; 0x188000
     4f4:	616c6200 	cmnvs	ip, r0, lsl #4
     4f8:	6d496b63 	vstrvs	d22, [r9, #-396]	; 0xfffffe74
     4fc:	00656761 	rsbeq	r6, r5, r1, ror #14
     500:	736e6f6d 	cmnvc	lr, #436	; 0x1b4
     504:	5f726574 	svcpl	0x00726574
     508:	79617267 	stmdbvc	r1!, {r0, r1, r2, r5, r6, r9, ip, sp, lr}^
     50c:	7469625f 	strbtvc	r6, [r9], #-607	; 0xfffffda1
     510:	61630073 	smcvs	12291	; 0x3003
     514:	656c7473 	strbvs	r7, [ip, #-1139]!	; 0xfffffb8d
     518:	67616d49 	strbvs	r6, [r1, -r9, asr #26]!
     51c:	69740065 	ldmdbvs	r4!, {r0, r2, r5, r6}^
     520:	49656c74 	stmdbmi	r5!, {r2, r4, r5, r6, sl, fp, sp, lr}^
     524:	6567616d 	strbvs	r6, [r7, #-365]!	; 0xfffffe93
     528:	61720073 	cmnvs	r2, r3, ror r0
     52c:	6d6f646e 	cfstrdvs	mvd6, [pc, #-440]!	; 37c <startup-0x1ffffc84>
     530:	6565735f 	strbvs	r7, [r5, #-863]!	; 0xfffffca1
     534:	69660064 	stmdbvs	r6!, {r2, r5, r6}^
     538:	00326572 	eorseq	r6, r2, r2, ror r5
     53c:	65726966 	ldrbvs	r6, [r2, #-2406]!	; 0xfffff69a
     540:	69660033 	stmdbvs	r6!, {r0, r1, r4, r5}^
     544:	00346572 	eorseq	r6, r4, r2, ror r5
     548:	73657270 	cmnvc	r5, #112, 4
     54c:	616c4273 	smcvs	50211	; 0xc423
     550:	6d006b63 	vstrvs	d6, [r0, #-396]	; 0xfffffe74
     554:	74736e6f 	ldrbtvc	r6, [r3], #-3695	; 0xfffff191
     558:	6d497265 	sfmvs	f7, 2, [r9, #-404]	; 0xfffffe6c
     55c:	00656761 	rsbeq	r6, r5, r1, ror #14
     560:	736f5079 	cmnvc	pc, #121	; 0x79
     564:	78657400 	stmdavc	r5!, {sl, ip, sp, lr}^
     568:	00323174 	eorseq	r3, r2, r4, ror r1
     56c:	706d6574 	rsbvc	r6, sp, r4, ror r5
     570:	6c746954 			; <UNDEFINED> instruction: 0x6c746954
     574:	67694c65 	strbvs	r4, [r9, -r5, ror #24]!
     578:	75007468 	strvc	r7, [r0, #-1128]	; 0xfffffb98
     57c:	74616470 	strbtvc	r6, [r1], #-1136	; 0xfffffb90
     580:	72700065 	rsbsvc	r0, r0, #101	; 0x65
     584:	49737365 	ldmdbmi	r3!, {r0, r2, r5, r6, r8, r9, ip, sp, lr}^
     588:	6567616d 	strbvs	r6, [r7, #-365]!	; 0xfffffe93
     58c:	65740073 	ldrbvs	r0, [r4, #-115]!	; 0xffffff8d
     590:	6954706d 	ldmdbvs	r4, {r0, r2, r3, r5, r6, ip, sp, lr}^
     594:	47656c74 			; <UNDEFINED> instruction: 0x47656c74
     598:	00796172 	rsbseq	r6, r9, r2, ror r1
     59c:	6f6c5374 	svcvs	0x006c5374
     5a0:	78655477 	stmdavc	r5!, {r0, r1, r2, r4, r5, r6, sl, ip, lr}^
     5a4:	69750074 	ldmdbvs	r5!, {r2, r4, r5, r6}^
     5a8:	5f38746e 	svcpl	0x0038746e
     5ac:	61620074 	smcvs	8196	; 0x2004
     5b0:	75426b63 	strbvc	r6, [r2, #-2915]	; 0xfffff49d
     5b4:	72656666 	rsbvc	r6, r5, #106954752	; 0x6600000
     5b8:	6867694c 	stmdavs	r7!, {r2, r3, r6, r8, fp, sp, lr}^
     5bc:	61620074 	smcvs	8196	; 0x2004
     5c0:	75426b63 	strbvc	r6, [r2, #-2915]	; 0xfffff49d
     5c4:	72656666 	rsbvc	r6, r5, #106954752	; 0x6600000
     5c8:	79617247 	stmdbvc	r1!, {r0, r1, r2, r6, r9, ip, sp, lr}^
     5cc:	6d657400 	cfstrdvs	mvd7, [r5, #-0]
     5d0:	65725070 	ldrbvs	r5, [r2, #-112]!	; 0xffffff90
     5d4:	694c7373 	stmdbvs	ip, {r0, r1, r4, r5, r6, r8, r9, ip, sp, lr}^
     5d8:	00746867 	rsbseq	r6, r4, r7, ror #16
     5dc:	6d614774 	stclvs	7, cr4, [r1, #-464]!	; 0xfffffe30
     5e0:	6a624f65 	bvs	189437c <startup-0x1e76bc84>
     5e4:	00746365 	rsbseq	r6, r4, r5, ror #6
     5e8:	736f5078 	cmnvc	pc, #120	; 0x78
     5ec:	73616300 	cmnvc	r1, #0, 6
     5f0:	42656c74 	rsbmi	r6, r5, #116, 24	; 0x7400
     5f4:	6b63616c 	blvs	18d8bac <startup-0x1e727454>
     5f8:	78657400 	stmdavc	r5!, {sl, ip, sp, lr}^
     5fc:	00303174 	eorseq	r3, r0, r4, ror r1
     600:	74786574 	ldrbtvc	r6, [r8], #-1396	; 0xfffffa8c
     604:	68003131 	stmdavs	r0, {r0, r4, r5, r8, ip, sp}
     608:	68676965 	stmdavs	r7!, {r0, r2, r5, r6, r8, fp, sp, lr}^
     60c:	616d0074 	smcvs	53252	; 0xd004
     610:	70006e69 	andvc	r6, r0, r9, ror #28
     614:	73736572 	cmnvc	r3, #478150656	; 0x1c800000
     618:	6867694c 	stmdavs	r7!, {r2, r3, r6, r8, fp, sp, lr}^
     61c:	6f6d0074 	svcvs	0x006d0074
     620:	6574736e 	ldrbvs	r7, [r4, #-878]!	; 0xfffffc92
     624:	616d4972 	smcvs	54418	; 0xd492
     628:	00736567 	rsbseq	r6, r3, r7, ror #10
     62c:	656d6167 	strbvs	r6, [sp, #-359]!	; 0xfffffe99
     630:	656a624f 	strbvs	r6, [sl, #-591]!	; 0xfffffdb1
     634:	70557463 	subsvc	r7, r5, r3, ror #8
     638:	65746164 	ldrbvs	r6, [r4, #-356]!	; 0xfffffe9c
     63c:	2f3a4300 	svccs	0x003a4300
     640:	2f706f6d 	svccs	0x00706f6d
     644:	6f4d2f63 	svcvs	0x004d2f63
     648:	62616c70 	rsbvs	r6, r1, #112, 24	; 0x7000
     64c:	7461726f 	strbtvc	r7, [r1], #-623	; 0xfffffd91
     650:	656e6f69 	strbvs	r6, [lr, #-3945]!	; 0xfffff097
     654:	49442f72 	stmdbmi	r4, {r1, r4, r5, r6, r8, r9, sl, fp, sp}^
     658:	572d7350 			; <UNDEFINED> instruction: 0x572d7350
     65c:	68637469 	stmdavs	r3!, {r0, r3, r5, r6, sl, ip, sp, lr}^
     660:	672f432f 	strvs	r4, [pc, -pc, lsr #6]!
     664:	6f656d61 	svcvs	0x00656d61
     668:	63656a62 	cmnvs	r5, #401408	; 0x62000
     66c:	00632e74 	rsbeq	r2, r3, r4, ror lr
     670:	73696874 	cmnvc	r9, #116, 16	; 0x740000
     674:	72696600 	rsbvc	r6, r9, #0, 12
     678:	72473565 	subvc	r3, r7, #423624704	; 0x19400000
     67c:	66007961 	strvs	r7, [r0], -r1, ror #18
     680:	31657269 	cmncc	r5, r9, ror #4
     684:	79617247 	stmdbvc	r1!, {r0, r1, r2, r6, r9, ip, sp, lr}^
     688:	6d657400 	cfstrdvs	mvd7, [r5, #-0]
     68c:	72694670 	rsbvc	r4, r9, #112, 12	; 0x7000000
     690:	72473265 	subvc	r3, r7, #1342177286	; 0x50000006
     694:	66007961 	strvs	r7, [r0], -r1, ror #18
     698:	33657269 	cmncc	r5, #-1879048186	; 0x90000006
     69c:	79617247 	stmdbvc	r1!, {r0, r1, r2, r6, r9, ip, sp, lr}^
     6a0:	6d657400 	cfstrdvs	mvd7, [r5, #-0]
     6a4:	72694670 	rsbvc	r4, r9, #112, 12	; 0x7000000
     6a8:	72473465 	subvc	r3, r7, #1694498816	; 0x65000000
     6ac:	66007961 	strvs	r7, [r0], -r1, ror #18
     6b0:	42657269 	rsbmi	r7, r5, #-1879048186	; 0x90000006
     6b4:	6b63616c 	blvs	18d8c6c <startup-0x1e727394>
     6b8:	6d657400 	cfstrdvs	mvd7, [r5, #-0]
     6bc:	72694670 	rsbvc	r4, r9, #112, 12	; 0x7000000
     6c0:	72473365 	subvc	r3, r7, #-1811939327	; 0x94000001
     6c4:	74007961 	strvc	r7, [r0], #-2401	; 0xfffff69f
     6c8:	46706d65 	ldrbtmi	r6, [r0], -r5, ror #26
     6cc:	42657269 	rsbmi	r7, r5, #-1879048186	; 0x90000006
     6d0:	6b63616c 	blvs	18d8c88 <startup-0x1e727378>
     6d4:	72696600 	rsbvc	r6, r9, #0, 12
     6d8:	694c3165 	stmdbvs	ip, {r0, r2, r5, r6, r8, ip, sp}^
     6dc:	00746867 	rsbseq	r6, r4, r7, ror #16
     6e0:	65726966 	ldrbvs	r6, [r2, #-2406]!	; 0xfffff69a
     6e4:	67694c34 			; <UNDEFINED> instruction: 0x67694c34
     6e8:	66007468 	strvs	r7, [r0], -r8, ror #8
     6ec:	32657269 	rsbcc	r7, r5, #-1879048186	; 0x90000006
     6f0:	6172675f 	cmnvs	r2, pc, asr r7
     6f4:	69625f79 	stmdbvs	r2!, {r0, r3, r4, r5, r6, r8, r9, sl, fp, ip, lr}^
     6f8:	66007374 			; <UNDEFINED> instruction: 0x66007374
     6fc:	34657269 	strbtcc	r7, [r5], #-617	; 0xfffffd97
     700:	67696c5f 			; <UNDEFINED> instruction: 0x67696c5f
     704:	625f7468 	subsvs	r7, pc, #104, 8	; 0x68000000
     708:	00737469 	rsbseq	r7, r3, r9, ror #8
     70c:	65726966 	ldrbvs	r6, [r2, #-2406]!	; 0xfffff69a
     710:	67694c33 			; <UNDEFINED> instruction: 0x67694c33
     714:	70007468 	andvc	r7, r0, r8, ror #8
     718:	746e696f 	strbtvc	r6, [lr], #-2415	; 0xfffff691
     71c:	00317265 	eorseq	r7, r1, r5, ror #4
     720:	6e696f70 	mcrvs	15, 3, r6, cr9, cr0, {3}
     724:	33726574 	cmncc	r2, #116, 10	; 0x1d000000
     728:	72696600 	rsbvc	r6, r9, #0, 12
     72c:	675f3565 	ldrbvs	r3, [pc, -r5, ror #10]
     730:	5f796172 	svcpl	0x00796172
     734:	73746962 	cmnvc	r4, #1605632	; 0x188000
     738:	72696600 	rsbvc	r6, r9, #0, 12
     73c:	6d493365 	stclvs	3, cr3, [r9, #-404]	; 0xfffffe6c
     740:	00656761 	rsbeq	r6, r5, r1, ror #14
     744:	6e696f70 	mcrvs	15, 3, r6, cr9, cr0, {3}
     748:	30726574 	rsbscc	r6, r2, r4, ror r5
     74c:	72696600 	rsbvc	r6, r9, #0, 12
     750:	694c3565 	stmdbvs	ip, {r0, r2, r5, r6, r8, sl, ip, sp}^
     754:	00746867 	rsbseq	r6, r4, r7, ror #16
     758:	6e696f70 	mcrvs	15, 3, r6, cr9, cr0, {3}
     75c:	32726574 	rsbscc	r6, r2, #116, 10	; 0x1d000000
     760:	6d657400 	cfstrdvs	mvd7, [r5, #-0]
     764:	72694670 	rsbvc	r4, r9, #112, 12	; 0x7000000
     768:	72473565 	subvc	r3, r7, #423624704	; 0x19400000
     76c:	66007961 	strvs	r7, [r0], -r1, ror #18
     770:	31657269 	cmncc	r5, r9, ror #4
     774:	6172675f 	cmnvs	r2, pc, asr r7
     778:	69625f79 	stmdbvs	r2!, {r0, r3, r4, r5, r6, r8, r9, sl, fp, ip, lr}^
     77c:	66007374 			; <UNDEFINED> instruction: 0x66007374
     780:	32657269 	rsbcc	r7, r5, #-1879048186	; 0x90000006
     784:	6867694c 	stmdavs	r7!, {r2, r3, r6, r8, fp, sp, lr}^
     788:	69660074 	stmdbvs	r6!, {r2, r4, r5, r6}^
     78c:	5f316572 	svcpl	0x00316572
     790:	6867696c 	stmdavs	r7!, {r2, r3, r5, r6, r8, fp, sp, lr}^
     794:	69625f74 	stmdbvs	r2!, {r2, r4, r5, r6, r8, r9, sl, fp, ip, lr}^
     798:	66007374 			; <UNDEFINED> instruction: 0x66007374
     79c:	32657269 	rsbcc	r7, r5, #-1879048186	; 0x90000006
     7a0:	67696c5f 			; <UNDEFINED> instruction: 0x67696c5f
     7a4:	625f7468 	subsvs	r7, pc, #104, 8	; 0x68000000
     7a8:	00737469 	rsbseq	r7, r3, r9, ror #8
     7ac:	65726966 	ldrbvs	r6, [r2, #-2406]!	; 0xfffff69a
     7b0:	006a624f 	rsbeq	r6, sl, pc, asr #4
     7b4:	65726966 	ldrbvs	r6, [r2, #-2406]!	; 0xfffff69a
     7b8:	61724732 	cmnvs	r2, r2, lsr r7
     7bc:	69660079 	stmdbvs	r6!, {r0, r3, r4, r5, r6}^
     7c0:	5f346572 	svcpl	0x00346572
     7c4:	79617267 	stmdbvc	r1!, {r0, r1, r2, r5, r6, r9, ip, sp, lr}^
     7c8:	7469625f 	strbtvc	r6, [r9], #-607	; 0xfffffda1
     7cc:	65740073 	ldrbvs	r0, [r4, #-115]!	; 0xffffff8d
     7d0:	6946706d 	stmdbvs	r6, {r0, r2, r3, r5, r6, ip, sp, lr}^
     7d4:	4c336572 	cfldr32mi	mvfx6, [r3], #-456	; 0xfffffe38
     7d8:	74686769 	strbtvc	r6, [r8], #-1897	; 0xfffff897
     7dc:	72696600 	rsbvc	r6, r9, #0, 12
     7e0:	6d493465 	cfstrdvs	mvd3, [r9, #-404]	; 0xfffffe6c
     7e4:	00656761 	rsbeq	r6, r5, r1, ror #14
     7e8:	706d6574 	rsbvc	r6, sp, r4, ror r5
     7ec:	65726946 	ldrbvs	r6, [r2, #-2374]!	; 0xfffff6ba
     7f0:	67694c31 			; <UNDEFINED> instruction: 0x67694c31
     7f4:	66007468 	strvs	r7, [r0], -r8, ror #8
     7f8:	74737269 	ldrbtvc	r7, [r3], #-617	; 0xfffffd97
     7fc:	656d6954 	strbvs	r6, [sp, #-2388]!	; 0xfffff6ac
     800:	696e6900 	stmdbvs	lr!, {r8, fp, sp, lr}^
     804:	69665f74 	stmdbvs	r6!, {r2, r4, r5, r6, r8, r9, sl, fp, ip, lr}^
     808:	66006572 			; <UNDEFINED> instruction: 0x66006572
     80c:	35657269 	strbcc	r7, [r5, #-617]!	; 0xfffffd97
     810:	67696c5f 			; <UNDEFINED> instruction: 0x67696c5f
     814:	625f7468 	subsvs	r7, pc, #104, 8	; 0x68000000
     818:	00737469 	rsbseq	r7, r3, r9, ror #8
     81c:	65726966 	ldrbvs	r6, [r2, #-2406]!	; 0xfffff69a
     820:	67616d49 	strbvs	r6, [r1, -r9, asr #26]!
     824:	66007365 	strvs	r7, [r0], -r5, ror #6
     828:	31657269 	cmncc	r5, r9, ror #4
     82c:	67616d49 	strbvs	r6, [r1, -r9, asr #26]!
     830:	69660065 	stmdbvs	r6!, {r0, r2, r5, r6}^
     834:	47346572 			; <UNDEFINED> instruction: 0x47346572
     838:	00796172 	rsbseq	r6, r9, r2, ror r1
     83c:	706d6574 	rsbvc	r6, sp, r4, ror r5
     840:	65726946 	ldrbvs	r6, [r2, #-2374]!	; 0xfffff6ba
     844:	61724731 	cmnvs	r2, r1, lsr r7
     848:	65740079 	ldrbvs	r0, [r4, #-121]!	; 0xffffff87
     84c:	6946706d 	stmdbvs	r6, {r0, r2, r3, r5, r6, ip, sp, lr}^
     850:	4c346572 	cfldr32mi	mvfx6, [r4], #-456	; 0xfffffe38
     854:	74686769 	strbtvc	r6, [r8], #-1897	; 0xfffff897
     858:	72696600 	rsbvc	r6, r9, #0, 12
     85c:	6c5f3365 	mrrcvs	3, 6, r3, pc, cr5	; <UNPREDICTABLE>
     860:	74686769 	strbtvc	r6, [r8], #-1897	; 0xfffff897
     864:	7469625f 	strbtvc	r6, [r9], #-607	; 0xfffffda1
     868:	69660073 	stmdbvs	r6!, {r0, r1, r4, r5, r6}^
     86c:	49356572 	ldmdbmi	r5!, {r1, r4, r5, r6, r8, sl, sp, lr}
     870:	6567616d 	strbvs	r6, [r7, #-365]!	; 0xfffffe93
     874:	72696600 	rsbvc	r6, r9, #0, 12
     878:	6c625f65 	stclvs	15, cr5, [r2], #-404	; 0xfffffe6c
     87c:	5f6b6361 	svcpl	0x006b6361
     880:	69625f32 	stmdbvs	r2!, {r1, r4, r5, r8, r9, sl, fp, ip, lr}^
     884:	74007374 	strvc	r7, [r0], #-884	; 0xfffffc8c
     888:	46706d65 	ldrbtmi	r6, [r0], -r5, ror #26
     88c:	32657269 	rsbcc	r7, r5, #-1879048186	; 0x90000006
     890:	6867694c 	stmdavs	r7!, {r2, r3, r6, r8, fp, sp, lr}^
     894:	69660074 	stmdbvs	r6!, {r2, r4, r5, r6}^
     898:	49326572 	ldmdbmi	r2!, {r1, r4, r5, r6, r8, sl, sp, lr}
     89c:	6567616d 	strbvs	r6, [r7, #-365]!	; 0xfffffe93
     8a0:	6d657400 	cfstrdvs	mvd7, [r5, #-0]
     8a4:	72694670 	rsbvc	r4, r9, #112, 12	; 0x7000000
     8a8:	694c3565 	stmdbvs	ip, {r0, r2, r5, r6, r8, sl, ip, sp}^
     8ac:	00746867 	rsbseq	r6, r4, r7, ror #16
     8b0:	6d2f3a43 	vstmdbvs	pc!, {s6-s72}
     8b4:	632f706f 			; <UNDEFINED> instruction: 0x632f706f
     8b8:	706f4d2f 	rsbvc	r4, pc, pc, lsr #26
     8bc:	6f62616c 	svcvs	0x0062616c
     8c0:	69746172 	ldmdbvs	r4!, {r1, r4, r5, r6, r8, sp, lr}^
     8c4:	72656e6f 	rsbvc	r6, r5, #1776	; 0x6f0
     8c8:	5049442f 	subpl	r4, r9, pc, lsr #8
     8cc:	69572d73 	ldmdbvs	r7, {r0, r1, r4, r5, r6, r8, sl, fp, sp}^
     8d0:	2f686374 	svccs	0x00686374
     8d4:	69662f43 	stmdbvs	r6!, {r0, r1, r6, r8, r9, sl, fp, sp}^
     8d8:	632e6572 			; <UNDEFINED> instruction: 0x632e6572
     8dc:	72696600 	rsbvc	r6, r9, #0, 12
     8e0:	675f3365 	ldrbvs	r3, [pc, -r5, ror #6]
     8e4:	5f796172 	svcpl	0x00796172
     8e8:	73746962 	cmnvc	r4, #1605632	; 0x188000
     8ec:	73616c00 	cmnvc	r1, #0, 24
     8f0:	67695274 			; <UNDEFINED> instruction: 0x67695274
     8f4:	61567468 	cmpvs	r6, r8, ror #8
     8f8:	0065756c 	rsbeq	r7, r5, ip, ror #10
     8fc:	7473616c 	ldrbtvc	r6, [r3], #-364	; 0xfffffe94
     900:	7466654c 	strbtvc	r6, [r6], #-1356	; 0xfffffab4
     904:	756c6156 	strbvc	r6, [ip, #-342]!	; 0xfffffeaa
     908:	3a430065 	bcc	10c0aa4 <startup-0x1ef3f55c>
     90c:	706f6d2f 	rsbvc	r6, pc, pc, lsr #26
     910:	4d2f632f 	stcmi	3, cr6, [pc, #-188]!	; 85c <startup-0x1ffff7a4>
     914:	616c706f 	cmnvs	ip, pc, rrx
     918:	61726f62 	cmnvs	r2, r2, ror #30
     91c:	6e6f6974 			; <UNDEFINED> instruction: 0x6e6f6974
     920:	442f7265 	strtmi	r7, [pc], #-613	; 928 <startup-0x1ffff6d8>
     924:	2d735049 	ldclcs	0, cr5, [r3, #-292]!	; 0xfffffedc
     928:	63746957 	cmnvs	r4, #1425408	; 0x15c000
     92c:	2f432f68 	svccs	0x00432f68
     930:	79616c70 	stmdbvc	r1!, {r4, r5, r6, sl, fp, sp, lr}^
     934:	632e7265 			; <UNDEFINED> instruction: 0x632e7265
     938:	616c7000 	cmnvs	ip, r0
     93c:	55726579 	ldrbpl	r6, [r2, #-1401]!	; 0xfffffa87
     940:	74616470 	strbtvc	r6, [r1], #-1136	; 0xfffffb90
     944:	65740065 	ldrbvs	r0, [r4, #-101]!	; 0xffffff9b
     948:	6942706d 	stmdbvs	r2, {r0, r2, r3, r5, r6, ip, sp, lr}^
     94c:	4c326472 	cfldrsmi	mvf6, [r2], #-456	; 0xfffffe38
     950:	74686769 	strbtvc	r6, [r8], #-1897	; 0xfffff897
     954:	72696200 	rsbvc	r6, r9, #0, 4
     958:	6c5f3364 	mrrcvs	3, 6, r3, pc, cr4	; <UNPREDICTABLE>
     95c:	74686769 	strbtvc	r6, [r8], #-1897	; 0xfffff897
     960:	7469625f 	strbtvc	r6, [r9], #-607	; 0xfffffda1
     964:	69620073 	stmdbvs	r2!, {r0, r1, r4, r5, r6}^
     968:	49346472 	ldmdbmi	r4!, {r1, r4, r5, r6, sl, sp, lr}
     96c:	6567616d 	strbvs	r6, [r7, #-365]!	; 0xfffffe93
     970:	72696200 	rsbvc	r6, r9, #0, 4
     974:	6c5f3464 	cfldrdvs	mvd3, [pc], {100}	; 0x64
     978:	74686769 	strbtvc	r6, [r8], #-1897	; 0xfffff897
     97c:	7469625f 	strbtvc	r6, [r9], #-607	; 0xfffffda1
     980:	65740073 	ldrbvs	r0, [r4, #-115]!	; 0xffffff8d
     984:	6942706d 	stmdbvs	r2, {r0, r2, r3, r5, r6, ip, sp, lr}^
     988:	4c356472 	cfldrsmi	mvf6, [r5], #-456	; 0xfffffe38
     98c:	74686769 	strbtvc	r6, [r8], #-1897	; 0xfffff897
     990:	696f7000 	stmdbvs	pc!, {ip, sp, lr}^	; <UNPREDICTABLE>
     994:	7265746e 	rsbvc	r7, r5, #1845493760	; 0x6e000000
     998:	62003431 	andvs	r3, r0, #822083584	; 0x31000000
     99c:	35647269 	strbcc	r7, [r4, #-617]!	; 0xfffffd97
     9a0:	67696c5f 			; <UNDEFINED> instruction: 0x67696c5f
     9a4:	625f7468 	subsvs	r7, pc, #104, 8	; 0x68000000
     9a8:	00737469 	rsbseq	r7, r3, r9, ror #8
     9ac:	64726962 	ldrbtvs	r6, [r2], #-2402	; 0xfffff69e
     9b0:	67694c33 			; <UNDEFINED> instruction: 0x67694c33
     9b4:	70007468 	andvc	r7, r0, r8, ror #8
     9b8:	746e696f 	strbtvc	r6, [lr], #-2415	; 0xfffff691
     9bc:	39317265 	ldmdbcc	r1!, {r0, r2, r5, r6, r9, ip, sp, lr}
     9c0:	72696200 	rsbvc	r6, r9, #0, 4
     9c4:	694c3164 	stmdbvs	ip, {r2, r5, r6, r8, ip, sp}^
     9c8:	00746867 	rsbseq	r6, r4, r7, ror #16
     9cc:	64726962 	ldrbtvs	r6, [r2], #-2402	; 0xfffff69e
     9d0:	616c4233 	cmnvs	ip, r3, lsr r2
     9d4:	62006b63 	andvs	r6, r0, #101376	; 0x18c00
     9d8:	31647269 	cmncc	r4, r9, ror #4
     9dc:	79617247 	stmdbvc	r1!, {r0, r1, r2, r6, r9, ip, sp, lr}^
     9e0:	6d657400 	cfstrdvs	mvd7, [r5, #-0]
     9e4:	72694270 	rsbvc	r4, r9, #112, 4
     9e8:	6c423464 	cfstrdvs	mvd3, [r2], {100}	; 0x64
     9ec:	006b6361 	rsbeq	r6, fp, r1, ror #6
     9f0:	64726962 	ldrbtvs	r6, [r2], #-2402	; 0xfffff69e
     9f4:	616c4235 	cmnvs	ip, r5, lsr r2
     9f8:	70006b63 	andvc	r6, r0, r3, ror #22
     9fc:	746e696f 	strbtvc	r6, [lr], #-2415	; 0xfffff691
     a00:	30327265 	eorscc	r7, r2, r5, ror #4
     a04:	696f7000 	stmdbvs	pc!, {ip, sp, lr}^	; <UNPREDICTABLE>
     a08:	7265746e 	rsbvc	r7, r5, #1845493760	; 0x6e000000
     a0c:	62003132 	andvs	r3, r0, #-2147483636	; 0x8000000c
     a10:	34647269 	strbtcc	r7, [r4], #-617	; 0xfffffd97
     a14:	79617247 	stmdbvc	r1!, {r0, r1, r2, r6, r9, ip, sp, lr}^
     a18:	72696200 	rsbvc	r6, r9, #0, 4
     a1c:	6c423264 	sfmvs	f3, 2, [r2], {100}	; 0x64
     a20:	006b6361 	rsbeq	r6, fp, r1, ror #6
     a24:	6e696f70 	mcrvs	15, 3, r6, cr9, cr0, {3}
     a28:	32726574 	rsbscc	r6, r2, #116, 10	; 0x1d000000
     a2c:	6f700034 	svcvs	0x00700034
     a30:	65746e69 	ldrbvs	r6, [r4, #-3689]!	; 0xfffff197
     a34:	00363172 	eorseq	r3, r6, r2, ror r1
     a38:	706d6574 	rsbvc	r6, sp, r4, ror r5
     a3c:	64726942 	ldrbtvs	r6, [r2], #-2370	; 0xfffff6be
     a40:	61724732 	cmnvs	r2, r2, lsr r7
     a44:	65740079 	ldrbvs	r0, [r4, #-121]!	; 0xffffff87
     a48:	6942706d 	stmdbvs	r2, {r0, r2, r3, r5, r6, ip, sp, lr}^
     a4c:	47346472 			; <UNDEFINED> instruction: 0x47346472
     a50:	00796172 	rsbseq	r6, r9, r2, ror r1
     a54:	706d6574 	rsbvc	r6, sp, r4, ror r5
     a58:	64726942 	ldrbtvs	r6, [r2], #-2370	; 0xfffff6be
     a5c:	6867694c 	stmdavs	r7!, {r2, r3, r6, r8, fp, sp, lr}^
     a60:	65740074 	ldrbvs	r0, [r4, #-116]!	; 0xffffff8c
     a64:	6942706d 	stmdbvs	r2, {r0, r2, r3, r5, r6, ip, sp, lr}^
     a68:	47356472 			; <UNDEFINED> instruction: 0x47356472
     a6c:	00796172 	rsbseq	r6, r9, r2, ror r1
     a70:	6e696f70 	mcrvs	15, 3, r6, cr9, cr0, {3}
     a74:	31726574 	cmncc	r2, r4, ror r5
     a78:	69620033 	stmdbvs	r2!, {r0, r1, r4, r5}^
     a7c:	5f326472 	svcpl	0x00326472
     a80:	63616c62 	cmnvs	r1, #25088	; 0x6200
     a84:	69625f6b 	stmdbvs	r2!, {r0, r1, r3, r5, r6, r8, r9, sl, fp, ip, lr}^
     a88:	62007374 	andvs	r7, r0, #116, 6	; 0xd0000001
     a8c:	31647269 	cmncc	r4, r9, ror #4
     a90:	6172675f 	cmnvs	r2, pc, asr r7
     a94:	69625f79 	stmdbvs	r2!, {r0, r3, r4, r5, r6, r8, r9, sl, fp, ip, lr}^
     a98:	62007374 	andvs	r7, r0, #116, 6	; 0xd0000001
     a9c:	36647269 	strbtcc	r7, [r4], -r9, ror #4
     aa0:	67616d49 	strbvs	r6, [r1, -r9, asr #26]!
     aa4:	69620065 	stmdbvs	r2!, {r0, r2, r5, r6}^
     aa8:	5f336472 	svcpl	0x00336472
     aac:	63616c62 	cmnvs	r1, #25088	; 0x6200
     ab0:	69625f6b 	stmdbvs	r2!, {r0, r1, r3, r5, r6, r8, r9, sl, fp, ip, lr}^
     ab4:	62007374 	andvs	r7, r0, #116, 6	; 0xd0000001
     ab8:	34647269 	strbtcc	r7, [r4], #-617	; 0xfffffd97
     abc:	616c625f 	cmnvs	ip, pc, asr r2
     ac0:	625f6b63 	subsvs	r6, pc, #101376	; 0x18c00
     ac4:	00737469 	rsbseq	r7, r3, r9, ror #8
     ac8:	64726962 	ldrbtvs	r6, [r2], #-2402	; 0xfffff69e
     acc:	616d4933 	cmnvs	sp, r3, lsr r9
     ad0:	62006567 	andvs	r6, r0, #432013312	; 0x19c00000
     ad4:	31647269 	cmncc	r4, r9, ror #4
     ad8:	67696c5f 			; <UNDEFINED> instruction: 0x67696c5f
     adc:	625f7468 	subsvs	r7, pc, #104, 8	; 0x68000000
     ae0:	00737469 	rsbseq	r7, r3, r9, ror #8
     ae4:	64726962 	ldrbtvs	r6, [r2], #-2402	; 0xfffff69e
     ae8:	6c625f35 	stclvs	15, cr5, [r2], #-212	; 0xffffff2c
     aec:	5f6b6361 	svcpl	0x006b6361
     af0:	73746962 	cmnvc	r4, #1605632	; 0x188000
     af4:	6d657400 	cfstrdvs	mvd7, [r5, #-0]
     af8:	72694270 	rsbvc	r4, r9, #112, 4
     afc:	694c3364 	stmdbvs	ip, {r2, r5, r6, r8, r9, ip, sp}^
     b00:	00746867 	rsbseq	r6, r4, r7, ror #16
     b04:	64726962 	ldrbtvs	r6, [r2], #-2402	; 0xfffff69e
     b08:	72675f35 	rsbvc	r5, r7, #53, 30	; 0xd4
     b0c:	625f7961 	subsvs	r7, pc, #1589248	; 0x184000
     b10:	00737469 	rsbseq	r7, r3, r9, ror #8
     b14:	64726962 	ldrbtvs	r6, [r2], #-2402	; 0xfffff69e
     b18:	61724732 	cmnvs	r2, r2, lsr r7
     b1c:	65740079 	ldrbvs	r0, [r4, #-121]!	; 0xffffff87
     b20:	6942706d 	stmdbvs	r2, {r0, r2, r3, r5, r6, ip, sp, lr}^
     b24:	4c346472 	cfldrsmi	mvf6, [r4], #-456	; 0xfffffe38
     b28:	74686769 	strbtvc	r6, [r8], #-1897	; 0xfffff897
     b2c:	6d657400 	cfstrdvs	mvd7, [r5, #-0]
     b30:	72694270 	rsbvc	r4, r9, #112, 4
     b34:	72473364 	subvc	r3, r7, #100, 6	; 0x90000001
     b38:	62007961 	andvs	r7, r0, #1589248	; 0x184000
     b3c:	34647269 	strbtcc	r7, [r4], #-617	; 0xfffffd97
     b40:	6172675f 	cmnvs	r2, pc, asr r7
     b44:	69625f79 	stmdbvs	r2!, {r0, r3, r4, r5, r6, r8, r9, sl, fp, ip, lr}^
     b48:	70007374 	andvc	r7, r0, r4, ror r3
     b4c:	746e696f 	strbtvc	r6, [lr], #-2415	; 0xfffff691
     b50:	33327265 	teqcc	r2, #1342177286	; 0x50000006
     b54:	72696200 	rsbvc	r6, r9, #0, 4
     b58:	694c3564 	stmdbvs	ip, {r2, r5, r6, r8, sl, ip, sp}^
     b5c:	00746867 	rsbseq	r6, r4, r7, ror #16
     b60:	64726962 	ldrbtvs	r6, [r2], #-2402	; 0xfffff69e
     b64:	67616d49 	strbvs	r6, [r1, -r9, asr #26]!
     b68:	74007365 	strvc	r7, [r0], #-869	; 0xfffffc9b
     b6c:	42706d65 	rsbsmi	r6, r0, #6464	; 0x1940
     b70:	35647269 	strbcc	r7, [r4, #-617]!	; 0xfffffd97
     b74:	63616c42 	cmnvs	r1, #16896	; 0x4200
     b78:	6962006b 	stmdbvs	r2!, {r0, r1, r3, r5, r6}^
     b7c:	42346472 	eorsmi	r6, r4, #1912602624	; 0x72000000
     b80:	6b63616c 	blvs	18d9138 <startup-0x1e726ec8>
     b84:	6d657400 	cfstrdvs	mvd7, [r5, #-0]
     b88:	72694270 	rsbvc	r4, r9, #112, 4
     b8c:	6c423264 	sfmvs	f3, 2, [r2], {100}	; 0x64
     b90:	006b6361 	rsbeq	r6, fp, r1, ror #6
     b94:	64726962 	ldrbtvs	r6, [r2], #-2402	; 0xfffff69e
     b98:	72675f33 	rsbvc	r5, r7, #51, 30	; 0xcc
     b9c:	625f7961 	subsvs	r7, pc, #1589248	; 0x184000
     ba0:	00737469 	rsbseq	r7, r3, r9, ror #8
     ba4:	64726962 	ldrbtvs	r6, [r2], #-2402	; 0xfffff69e
     ba8:	616c4231 	cmnvs	ip, r1, lsr r2
     bac:	62006b63 	andvs	r6, r0, #101376	; 0x18c00
     bb0:	32647269 	rsbcc	r7, r4, #-1879048186	; 0x90000006
     bb4:	6867694c 	stmdavs	r7!, {r2, r3, r6, r8, fp, sp, lr}^
     bb8:	3a430074 	bcc	10c0d90 <startup-0x1ef3f270>
     bbc:	706f6d2f 	rsbvc	r6, pc, pc, lsr #26
     bc0:	4d2f632f 	stcmi	3, cr6, [pc, #-188]!	; b0c <startup-0x1ffff4f4>
     bc4:	616c706f 	cmnvs	ip, pc, rrx
     bc8:	61726f62 	cmnvs	r2, r2, ror #30
     bcc:	6e6f6974 			; <UNDEFINED> instruction: 0x6e6f6974
     bd0:	442f7265 	strtmi	r7, [pc], #-613	; bd8 <startup-0x1ffff428>
     bd4:	2d735049 	ldclcs	0, cr5, [r3, #-292]!	; 0xfffffedc
     bd8:	63746957 	cmnvs	r4, #1425408	; 0x15c000
     bdc:	2f432f68 	svccs	0x00432f68
     be0:	64726962 	ldrbtvs	r6, [r2], #-2402	; 0xfffff69e
     be4:	6900632e 	stmdbvs	r0, {r1, r2, r3, r5, r8, r9, sp, lr}
     be8:	5f74696e 	svcpl	0x0074696e
     bec:	64726962 	ldrbtvs	r6, [r2], #-2402	; 0xfffff69e
     bf0:	72696200 	rsbvc	r6, r9, #0, 4
     bf4:	6a624f64 	bvs	189498c <startup-0x1e76b674>
     bf8:	72696200 	rsbvc	r6, r9, #0, 4
     bfc:	675f3264 	ldrbvs	r3, [pc, -r4, ror #4]
     c00:	5f796172 	svcpl	0x00796172
     c04:	73746962 	cmnvc	r4, #1605632	; 0x188000
     c08:	6d657400 	cfstrdvs	mvd7, [r5, #-0]
     c0c:	72694270 	rsbvc	r4, r9, #112, 4
     c10:	61724764 	cmnvs	r2, r4, ror #14
     c14:	69620079 	stmdbvs	r2!, {r0, r3, r4, r5, r6}^
     c18:	47356472 			; <UNDEFINED> instruction: 0x47356472
     c1c:	00796172 	rsbseq	r6, r9, r2, ror r1
     c20:	64726962 	ldrbtvs	r6, [r2], #-2402	; 0xfffff69e
     c24:	6c625f31 	stclvs	15, cr5, [r2], #-196	; 0xffffff3c
     c28:	5f6b6361 	svcpl	0x006b6361
     c2c:	73746962 	cmnvc	r4, #1605632	; 0x188000
     c30:	72696200 	rsbvc	r6, r9, #0, 4
     c34:	6d493164 	stfvse	f3, [r9, #-400]	; 0xfffffe70
     c38:	00656761 	rsbeq	r6, r5, r1, ror #14
     c3c:	64726962 	ldrbtvs	r6, [r2], #-2402	; 0xfffff69e
     c40:	61724733 	cmnvs	r2, r3, lsr r7
     c44:	69660079 	stmdbvs	r6!, {r0, r3, r4, r5, r6}^
     c48:	506c616e 	rsbpl	r6, ip, lr, ror #2
     c4c:	746e696f 	strbtvc	r6, [lr], #-2415	; 0xfffff691
     c50:	74007265 	strvc	r7, [r0], #-613	; 0xfffffd9b
     c54:	42706d65 	rsbsmi	r6, r0, #6464	; 0x1940
     c58:	42647269 	rsbmi	r7, r4, #-1879048186	; 0x90000006
     c5c:	6b63616c 	blvs	18d9214 <startup-0x1e726dec>
     c60:	6d657400 	cfstrdvs	mvd7, [r5, #-0]
     c64:	72694270 	rsbvc	r4, r9, #112, 4
     c68:	6c423364 	mcrrvs	3, 6, r3, r2, cr4
     c6c:	006b6361 	rsbeq	r6, fp, r1, ror #6
     c70:	6e696f70 	mcrvs	15, 3, r6, cr9, cr0, {3}
     c74:	31726574 	cmncc	r2, r4, ror r5
     c78:	6f700031 	svcvs	0x00700031
     c7c:	65746e69 	ldrbvs	r6, [r4, #-3689]!	; 0xfffff197
     c80:	00323172 	eorseq	r3, r2, r2, ror r1
     c84:	64726962 	ldrbtvs	r6, [r2], #-2402	; 0xfffff69e
     c88:	67694c34 			; <UNDEFINED> instruction: 0x67694c34
     c8c:	62007468 	andvs	r7, r0, #104, 8	; 0x68000000
     c90:	35647269 	strbcc	r7, [r4, #-617]!	; 0xfffffd97
     c94:	67616d49 	strbvs	r6, [r1, -r9, asr #26]!
     c98:	6f700065 	svcvs	0x00700065
     c9c:	65746e69 	ldrbvs	r6, [r4, #-3689]!	; 0xfffff197
     ca0:	00353172 	eorseq	r3, r5, r2, ror r1
     ca4:	6e696f70 	mcrvs	15, 3, r6, cr9, cr0, {3}
     ca8:	31726574 	cmncc	r2, r4, ror r5
     cac:	6f700037 	svcvs	0x00700037
     cb0:	65746e69 	ldrbvs	r6, [r4, #-3689]!	; 0xfffff197
     cb4:	00383172 	eorseq	r3, r8, r2, ror r1
     cb8:	64726962 	ldrbtvs	r6, [r2], #-2402	; 0xfffff69e
     cbc:	616d4932 	cmnvs	sp, r2, lsr r9
     cc0:	70006567 	andvc	r6, r0, r7, ror #10
     cc4:	746e696f 	strbtvc	r6, [lr], #-2415	; 0xfffff691
     cc8:	32327265 	eorscc	r7, r2, #1342177286	; 0x50000006
     ccc:	72696200 	rsbvc	r6, r9, #0, 4
     cd0:	6c5f3264 	lfmvs	f3, 2, [pc], {100}	; 0x64
     cd4:	74686769 	strbtvc	r6, [r8], #-1897	; 0xfffff897
     cd8:	7469625f 	strbtvc	r6, [r9], #-607	; 0xfffffda1
     cdc:	69770073 	ldmdbvs	r7!, {r0, r1, r4, r5, r6}^
     ce0:	32686374 	rsbcc	r6, r8, #116, 6	; 0xd0000001
     ce4:	63616c42 	cmnvs	r1, #16896	; 0x4200
     ce8:	6977006b 	ldmdbvs	r7!, {r0, r1, r3, r5, r6}^
     cec:	31686374 	smccc	34356	; 0x8634
     cf0:	79617247 	stmdbvc	r1!, {r0, r1, r2, r6, r9, ip, sp, lr}^
     cf4:	6d657400 	cfstrdvs	mvd7, [r5, #-0]
     cf8:	74695770 	strbtvc	r5, [r9], #-1904	; 0xfffff890
     cfc:	694c6863 	stmdbvs	ip, {r0, r1, r5, r6, fp, sp, lr}^
     d00:	00746867 	rsbseq	r6, r4, r7, ror #16
     d04:	63746977 	cmnvs	r4, #1949696	; 0x1dc000
     d08:	6a624f68 	bvs	1894ab0 <startup-0x1e76b550>
     d0c:	74697700 	strbtvc	r7, [r9], #-1792	; 0xfffff900
     d10:	5f316863 	svcpl	0x00316863
     d14:	63616c62 	cmnvs	r1, #25088	; 0x6200
     d18:	69625f6b 	stmdbvs	r2!, {r0, r1, r3, r5, r6, r8, r9, sl, fp, ip, lr}^
     d1c:	74007374 	strvc	r7, [r0], #-884	; 0xfffffc8c
     d20:	57706d65 	ldrbpl	r6, [r0, -r5, ror #26]!
     d24:	68637469 	stmdavs	r3!, {r0, r3, r5, r6, sl, ip, sp, lr}^
     d28:	67694c33 			; <UNDEFINED> instruction: 0x67694c33
     d2c:	74007468 	strvc	r7, [r0], #-1128	; 0xfffffb98
     d30:	57706d65 	ldrbpl	r6, [r0, -r5, ror #26]!
     d34:	68637469 	stmdavs	r3!, {r0, r3, r5, r6, sl, ip, sp, lr}^
     d38:	67694c32 			; <UNDEFINED> instruction: 0x67694c32
     d3c:	77007468 	strvc	r7, [r0, -r8, ror #8]
     d40:	68637469 	stmdavs	r3!, {r0, r3, r5, r6, sl, ip, sp, lr}^
     d44:	67694c31 			; <UNDEFINED> instruction: 0x67694c31
     d48:	74007468 	strvc	r7, [r0], #-1128	; 0xfffffb98
     d4c:	57706d65 	ldrbpl	r6, [r0, -r5, ror #26]!
     d50:	68637469 	stmdavs	r3!, {r0, r3, r5, r6, sl, ip, sp, lr}^
     d54:	616c4232 	cmnvs	ip, r2, lsr r2
     d58:	77006b63 	strvc	r6, [r0, -r3, ror #22]
     d5c:	68637469 	stmdavs	r3!, {r0, r3, r5, r6, sl, ip, sp, lr}^
     d60:	696c5f32 	stmdbvs	ip!, {r1, r4, r5, r8, r9, sl, fp, ip, lr}^
     d64:	5f746867 	svcpl	0x00746867
     d68:	73746962 	cmnvc	r4, #1605632	; 0x188000
     d6c:	74697700 	strbtvc	r7, [r9], #-1792	; 0xfffff900
     d70:	49336863 	ldmdbmi	r3!, {r0, r1, r5, r6, fp, sp, lr}
     d74:	6567616d 	strbvs	r6, [r7, #-365]!	; 0xfffffe93
     d78:	74697700 	strbtvc	r7, [r9], #-1792	; 0xfffff900
     d7c:	42336863 	eorsmi	r6, r3, #6488064	; 0x630000
     d80:	6b63616c 	blvs	18d9338 <startup-0x1e726cc8>
     d84:	74697700 	strbtvc	r7, [r9], #-1792	; 0xfffff900
     d88:	5f336863 	svcpl	0x00336863
     d8c:	79617267 	stmdbvc	r1!, {r0, r1, r2, r5, r6, r9, ip, sp, lr}^
     d90:	7469625f 	strbtvc	r6, [r9], #-607	; 0xfffffda1
     d94:	6e690073 	mcrvs	0, 3, r0, cr9, cr3, {3}
     d98:	775f7469 	ldrbvc	r7, [pc, -r9, ror #8]
     d9c:	68637469 	stmdavs	r3!, {r0, r3, r5, r6, sl, ip, sp, lr}^
     da0:	6d657400 	cfstrdvs	mvd7, [r5, #-0]
     da4:	74695770 	strbtvc	r5, [r9], #-1904	; 0xfffff890
     da8:	6c426863 	mcrrvs	8, 6, r6, r2, cr3
     dac:	006b6361 	rsbeq	r6, fp, r1, ror #6
     db0:	63746977 	cmnvs	r4, #1949696	; 0x1dc000
     db4:	625f3268 	subsvs	r3, pc, #104, 4	; 0x80000006
     db8:	6b63616c 	blvs	18d9370 <startup-0x1e726c90>
     dbc:	7469625f 	strbtvc	r6, [r9], #-607	; 0xfffffda1
     dc0:	69770073 	ldmdbvs	r7!, {r0, r1, r4, r5, r6}^
     dc4:	33686374 	cmncc	r8, #116, 6	; 0xd0000001
     dc8:	67696c5f 			; <UNDEFINED> instruction: 0x67696c5f
     dcc:	625f7468 	subsvs	r7, pc, #104, 8	; 0x68000000
     dd0:	00737469 	rsbseq	r7, r3, r9, ror #8
     dd4:	63746977 	cmnvs	r4, #1949696	; 0x1dc000
     dd8:	72473368 	subvc	r3, r7, #104, 6	; 0xa0000001
     ddc:	77007961 	strvc	r7, [r0, -r1, ror #18]
     de0:	68637469 	stmdavs	r3!, {r0, r3, r5, r6, sl, ip, sp, lr}^
     de4:	61724732 	cmnvs	r2, r2, lsr r7
     de8:	65740079 	ldrbvs	r0, [r4, #-121]!	; 0xffffff87
     dec:	6957706d 	ldmdbvs	r7, {r0, r2, r3, r5, r6, ip, sp, lr}^
     df0:	47686374 			; <UNDEFINED> instruction: 0x47686374
     df4:	00796172 	rsbseq	r6, r9, r2, ror r1
     df8:	706d6574 	rsbvc	r6, sp, r4, ror r5
     dfc:	63746957 	cmnvs	r4, #1425408	; 0x15c000
     e00:	72473268 	subvc	r3, r7, #104, 4	; 0x80000006
     e04:	74007961 	strvc	r7, [r0], #-2401	; 0xfffff69f
     e08:	57706d65 	ldrbpl	r6, [r0, -r5, ror #26]!
     e0c:	68637469 	stmdavs	r3!, {r0, r3, r5, r6, sl, ip, sp, lr}^
     e10:	616c4233 	cmnvs	ip, r3, lsr r2
     e14:	77006b63 	strvc	r6, [r0, -r3, ror #22]
     e18:	68637469 	stmdavs	r3!, {r0, r3, r5, r6, sl, ip, sp, lr}^
     e1c:	696c5f31 	stmdbvs	ip!, {r0, r4, r5, r8, r9, sl, fp, ip, lr}^
     e20:	5f746867 	svcpl	0x00746867
     e24:	73746962 	cmnvc	r4, #1605632	; 0x188000
     e28:	74697700 	strbtvc	r7, [r9], #-1792	; 0xfffff900
     e2c:	5f326863 	svcpl	0x00326863
     e30:	79617267 	stmdbvc	r1!, {r0, r1, r2, r5, r6, r9, ip, sp, lr}^
     e34:	7469625f 	strbtvc	r6, [r9], #-607	; 0xfffffda1
     e38:	69770073 	ldmdbvs	r7!, {r0, r1, r4, r5, r6}^
     e3c:	34686374 	strbtcc	r6, [r8], #-884	; 0xfffffc8c
     e40:	67616d49 	strbvs	r6, [r1, -r9, asr #26]!
     e44:	69770065 	ldmdbvs	r7!, {r0, r2, r5, r6}^
     e48:	32686374 	rsbcc	r6, r8, #116, 6	; 0xd0000001
     e4c:	6867694c 	stmdavs	r7!, {r2, r3, r6, r8, fp, sp, lr}^
     e50:	69770074 	ldmdbvs	r7!, {r2, r4, r5, r6}^
     e54:	31686374 	smccc	34356	; 0x8634
     e58:	67616d49 	strbvs	r6, [r1, -r9, asr #26]!
     e5c:	69770065 	ldmdbvs	r7!, {r0, r2, r5, r6}^
     e60:	31686374 	smccc	34356	; 0x8634
     e64:	63616c42 	cmnvs	r1, #16896	; 0x4200
     e68:	6977006b 	ldmdbvs	r7!, {r0, r1, r3, r5, r6}^
     e6c:	33686374 	cmncc	r8, #116, 6	; 0xd0000001
     e70:	6867694c 	stmdavs	r7!, {r2, r3, r6, r8, fp, sp, lr}^
     e74:	69770074 	ldmdbvs	r7!, {r2, r4, r5, r6}^
     e78:	49686374 	stmdbmi	r8!, {r2, r4, r5, r6, r8, r9, sp, lr}^
     e7c:	6567616d 	strbvs	r6, [r7, #-365]!	; 0xfffffe93
     e80:	65740073 	ldrbvs	r0, [r4, #-115]!	; 0xffffff8d
     e84:	6957706d 	ldmdbvs	r7, {r0, r2, r3, r5, r6, ip, sp, lr}^
     e88:	33686374 	cmncc	r8, #116, 6	; 0xd0000001
     e8c:	79617247 	stmdbvc	r1!, {r0, r1, r2, r6, r9, ip, sp, lr}^
     e90:	2f3a4300 	svccs	0x003a4300
     e94:	2f706f6d 	svccs	0x00706f6d
     e98:	6f4d2f63 	svcvs	0x004d2f63
     e9c:	62616c70 	rsbvs	r6, r1, #112, 24	; 0x7000
     ea0:	7461726f 	strbtvc	r7, [r1], #-623	; 0xfffffd91
     ea4:	656e6f69 	strbvs	r6, [lr, #-3945]!	; 0xfffff097
     ea8:	49442f72 	stmdbmi	r4, {r1, r4, r5, r6, r8, r9, sl, fp, sp}^
     eac:	572d7350 			; <UNDEFINED> instruction: 0x572d7350
     eb0:	68637469 	stmdavs	r3!, {r0, r3, r5, r6, sl, ip, sp, lr}^
     eb4:	772f432f 	strvc	r4, [pc, -pc, lsr #6]!
     eb8:	68637469 	stmdavs	r3!, {r0, r3, r5, r6, sl, ip, sp, lr}^
     ebc:	7700632e 	strvc	r6, [r0, -lr, lsr #6]
     ec0:	68637469 	stmdavs	r3!, {r0, r3, r5, r6, sl, ip, sp, lr}^
     ec4:	72675f31 	rsbvc	r5, r7, #49, 30	; 0xc4
     ec8:	625f7961 	subsvs	r7, pc, #1589248	; 0x184000
     ecc:	00737469 	rsbseq	r7, r3, r9, ror #8
     ed0:	63746977 	cmnvs	r4, #1949696	; 0x1dc000
     ed4:	625f3368 	subsvs	r3, pc, #104, 6	; 0xa0000001
     ed8:	6b63616c 	blvs	18d9490 <startup-0x1e726b70>
     edc:	7469625f 	strbtvc	r6, [r9], #-607	; 0xfffffda1
     ee0:	69770073 	ldmdbvs	r7!, {r0, r1, r4, r5, r6}^
     ee4:	32686374 	rsbcc	r6, r8, #116, 6	; 0xd0000001
     ee8:	67616d49 	strbvs	r6, [r1, -r9, asr #26]!
     eec:	61700065 	cmnvs	r0, r5, rrx
     ef0:	67006567 	strvs	r6, [r0, -r7, ror #10]
     ef4:	68706172 	ldmdavs	r0!, {r1, r4, r5, r6, r8, sp, lr}^
     ef8:	725f6369 	subsvc	r6, pc, #-1543503871	; 0xa4000001
     efc:	00646165 	rsbeq	r6, r4, r5, ror #2
     f00:	66667562 	strbtvs	r7, [r6], -r2, ror #10
     f04:	76007265 	strvc	r7, [r0], -r5, ror #4
     f08:	65756c61 	ldrbvs	r6, [r5, #-3169]!	; 0xfffff39f
     f0c:	78697000 	stmdavc	r9!, {ip, sp, lr}^
     f10:	00326c65 	eorseq	r6, r2, r5, ror #24
     f14:	77617264 	strbvc	r7, [r1, -r4, ror #4]!
     f18:	6d61675f 	stclvs	7, cr6, [r1, #-380]!	; 0xfffffe84
     f1c:	626f5f65 	rsbvs	r5, pc, #404	; 0x194
     f20:	7463656a 	strbtvc	r6, [r3], #-1386	; 0xfffffa96
     f24:	6c656400 	cfstrdvs	mvd6, [r5], #-0
     f28:	6d5f7961 	vldrvs.16	s15, [pc, #-194]	; e6e <startup-0x1ffff192>	; <UNPREDICTABLE>
     f2c:	6f726369 	svcvs	0x00726369
     f30:	61726700 	cmnvs	r2, r0, lsl #14
     f34:	63696870 	cmnvs	r9, #112, 16	; 0x700000
     f38:	6972775f 	ldmdbvs	r2!, {r0, r1, r2, r3, r4, r6, r8, r9, sl, ip, sp, lr}^
     f3c:	635f6574 	cmpvs	pc, #116, 10	; 0x1d000000
     f40:	616d6d6f 	cmnvs	sp, pc, ror #26
     f44:	6300646e 	movwvs	r6, #1134	; 0x46e
     f48:	7261656c 	rsbvc	r6, r1, #108, 10	; 0x1b000000
     f4c:	6361625f 	cmnvs	r1, #-268435451	; 0xf0000005
     f50:	6675426b 	ldrbtvs	r4, [r5], -fp, ror #4
     f54:	00726566 	rsbseq	r6, r2, r6, ror #10
     f58:	65786970 	ldrbvs	r6, [r8, #-2416]!	; 0xfffff690
     f5c:	4f67006c 	svcmi	0x0067006c
     f60:	67006a62 	strvs	r6, [r0, -r2, ror #20]
     f64:	68706172 	ldmdavs	r0!, {r1, r4, r5, r6, r8, sp, lr}^
     f68:	645f6369 	ldrbvs	r6, [pc], #-873	; f70 <startup-0x1ffff090>
     f6c:	5f776172 	svcpl	0x00776172
     f70:	65726373 	ldrbvs	r6, [r2, #-883]!	; 0xfffffc8d
     f74:	64006e65 	strvs	r6, [r0], #-3685	; 0xfffff19b
     f78:	79616c65 	stmdbvc	r1!, {r0, r2, r5, r6, sl, fp, sp, lr}^
     f7c:	6c696d5f 	stclvs	13, cr6, [r9], #-380	; 0xfffffe84
     f80:	7300696c 	movwvc	r6, #2412	; 0x96c
     f84:	5f776f68 	svcpl	0x00776f68
     f88:	6d617266 	sfmvs	f7, 2, [r1, #-408]!	; 0xfffffe68
     f8c:	72640065 	rsbvc	r0, r4, #101	; 0x65
     f90:	735f7761 	cmpvc	pc, #25427968	; 0x1840000
     f94:	74697270 	strbtvc	r7, [r9], #-624	; 0xfffffd90
     f98:	65640065 	strbvs	r0, [r4, #-101]!	; 0xffffff9b
     f9c:	5f79616c 	svcpl	0x0079616c
     fa0:	6e303035 	mrcvs	0, 1, r3, cr0, cr5, {1}
     fa4:	72670073 	rsbvc	r0, r7, #115	; 0x73
     fa8:	69687061 	stmdbvs	r8!, {r0, r5, r6, ip, sp, lr}^
     fac:	72775f63 	rsbsvc	r5, r7, #396	; 0x18c
     fb0:	00657469 	rsbeq	r7, r5, r9, ror #8
     fb4:	79617267 	stmdbvc	r1!, {r0, r1, r2, r5, r6, r9, ip, sp, lr}^
     fb8:	6c616353 	stclvs	3, cr6, [r1], #-332	; 0xfffffeb4
     fbc:	73655465 	cmnvc	r5, #1694498816	; 0x65000000
     fc0:	72670074 	rsbvc	r0, r7, #116	; 0x74
     fc4:	69687061 	stmdbvs	r8!, {r0, r5, r6, ip, sp, lr}^
     fc8:	74635f63 	strbtvc	r5, [r3], #-3939	; 0xfffff09d
     fcc:	625f6c72 	subsvs	r6, pc, #29184	; 0x7200
     fd0:	635f7469 	cmpvs	pc, #1761607680	; 0x69000000
     fd4:	7261656c 	rsbvc	r6, r1, #108, 10	; 0x1b000000
     fd8:	2f3a4300 	svccs	0x003a4300
     fdc:	2f706f6d 	svccs	0x00706f6d
     fe0:	6f4d2f63 	svcvs	0x004d2f63
     fe4:	62616c70 	rsbvs	r6, r1, #112, 24	; 0x7000
     fe8:	7461726f 	strbtvc	r7, [r1], #-623	; 0xfffffd91
     fec:	656e6f69 	strbvs	r6, [lr, #-3945]!	; 0xfffff097
     ff0:	49442f72 	stmdbmi	r4, {r1, r4, r5, r6, r8, r9, sl, fp, sp}^
     ff4:	572d7350 			; <UNDEFINED> instruction: 0x572d7350
     ff8:	68637469 	stmdavs	r3!, {r0, r3, r5, r6, sl, ip, sp, lr}^
     ffc:	672f432f 	strvs	r4, [pc, -pc, lsr #6]!
    1000:	68706172 	ldmdavs	r0!, {r1, r4, r5, r6, r8, sp, lr}^
    1004:	2e736369 	cdpcs	3, 7, cr6, cr3, cr9, {3}
    1008:	72670063 	rsbvc	r0, r7, #99	; 0x63
    100c:	69687061 	stmdbvs	r8!, {r0, r5, r6, ip, sp, lr}^
    1010:	65725f63 	ldrbvs	r5, [r2, #-3939]!	; 0xfffff09d
    1014:	645f6461 	ldrbvs	r6, [pc], #-1121	; 101c <startup-0x1fffefe4>
    1018:	00617461 	rsbeq	r7, r1, r1, ror #8
    101c:	6f6c6f63 	svcvs	0x006c6f63
    1020:	65730072 	ldrbvs	r0, [r3, #-114]!	; 0xffffff8e
    1024:	70755f74 	rsbsvc	r5, r5, r4, ror pc
    1028:	6172645f 	cmnvs	r2, pc, asr r4
    102c:	75625f77 	strbvc	r5, [r2, #-3959]!	; 0xfffff089
    1030:	72656666 	rsbvc	r6, r5, #106954752	; 0x6600000
    1034:	72670073 	rsbvc	r0, r7, #115	; 0x73
    1038:	69687061 	stmdbvs	r8!, {r0, r5, r6, ip, sp, lr}^
    103c:	74635f63 	strbtvc	r5, [r3], #-3939	; 0xfffff09d
    1040:	625f6c72 	subsvs	r6, pc, #29184	; 0x7200
    1044:	735f7469 	cmpvc	pc, #1761607680	; 0x69000000
    1048:	64007465 	strvs	r7, [r0], #-1125	; 0xfffffb9b
    104c:	79616c65 	stmdbvc	r1!, {r0, r2, r5, r6, sl, fp, sp, lr}^
    1050:	3035325f 	eorscc	r3, r5, pc, asr r2
    1054:	6600736e 	strvs	r7, [r0], -lr, ror #6
    1058:	526c6c69 	rsbpl	r6, ip, #26880	; 0x6900
    105c:	61746365 	cmnvs	r4, r5, ror #6
    1060:	656c676e 	strbvs	r6, [ip, #-1902]!	; 0xfffff892
    1064:	73616d00 	cmnvc	r1, #0, 26
    1068:	7266006b 	rsbvc	r0, r6, #107	; 0x6b
    106c:	5f656d61 	svcpl	0x00656d61
    1070:	676e656c 	strbvs	r6, [lr, -ip, ror #10]!
    1074:	67006874 	smlsdxvs	r0, r4, r8, r6
    1078:	68706172 	ldmdavs	r0!, {r1, r4, r5, r6, r8, sp, lr}^
    107c:	775f6369 	ldrbvc	r6, [pc, -r9, ror #6]
    1080:	65746972 	ldrbvs	r6, [r4, #-2418]!	; 0xfffff68e
    1084:	7461645f 	strbtvc	r6, [r1], #-1119	; 0xfffffba1
    1088:	79620061 	stmdbvc	r2!, {r0, r5, r6}^
    108c:	77006574 	smlsdxvc	r0, r4, r5, r6
    1090:	68746469 	ldmdavs	r4!, {r0, r3, r5, r6, sl, sp, lr}^
    1094:	5f6e695f 	svcpl	0x006e695f
    1098:	65747962 	ldrbvs	r7, [r4, #-2402]!	; 0xfffff69e
    109c:	6c630073 	stclvs	0, cr0, [r3], #-460	; 0xfffffe34
    10a0:	5f726165 	svcpl	0x00726165
    10a4:	5f6c6c61 	svcpl	0x006c6c61
    10a8:	6b636162 	blvs	18d9638 <startup-0x1e7269c8>
    10ac:	66667542 	strbtvs	r7, [r6], -r2, asr #10
    10b0:	00737265 	rsbseq	r7, r3, r5, ror #4
    10b4:	61656c63 	cmnvs	r5, r3, ror #24
    10b8:	63655272 	cmnvs	r5, #536870919	; 0x20000007
    10bc:	676e6174 			; <UNDEFINED> instruction: 0x676e6174
    10c0:	6900656c 	stmdbvs	r0, {r2, r3, r5, r6, r8, sl, sp, lr}
    10c4:	7865646e 	stmdavc	r5!, {r1, r2, r3, r5, r6, sl, sp, lr}^
    10c8:	6c657300 	stclvs	3, cr7, [r5], #-0
    10cc:	5f746365 	svcpl	0x00746365
    10d0:	746e6f63 	strbtvc	r6, [lr], #-3939	; 0xfffff09d
    10d4:	6c6c6f72 	stclvs	15, cr6, [ip], #-456	; 0xfffffe38
    10d8:	67007265 	strvs	r7, [r0, -r5, ror #4]
    10dc:	68706172 	ldmdavs	r0!, {r1, r4, r5, r6, r8, sp, lr}^
    10e0:	775f6369 	ldrbvc	r6, [pc, -r9, ror #6]
    10e4:	5f746961 	svcpl	0x00746961
    10e8:	64616572 	strbtvs	r6, [r1], #-1394	; 0xfffffa8e
    10ec:	6c630079 	stclvs	0, cr0, [r3], #-484	; 0xfffffe1c
    10f0:	5f726165 	svcpl	0x00726165
    10f4:	73696874 	cmnvc	r9, #116, 16	; 0x740000
    10f8:	6b636142 	blvs	18d9608 <startup-0x1e7269f8>
    10fc:	66667542 	strbtvs	r7, [r6], -r2, asr #10
    1100:	67007265 	strvs	r7, [r0, -r5, ror #4]
    1104:	68706172 	ldmdavs	r0!, {r1, r4, r5, r6, r8, sp, lr}^
    1108:	695f6369 	ldmdbvs	pc, {r0, r3, r5, r6, r8, r9, sp, lr}^	; <UNPREDICTABLE>
    110c:	6974696e 	ldmdbvs	r4!, {r1, r2, r3, r5, r6, r8, fp, sp, lr}^
    1110:	7a696c61 	bvc	1a5c29c <startup-0x1e5a3d64>
    1114:	72670065 	rsbvc	r0, r7, #101	; 0x65
    1118:	69687061 	stmdbvs	r8!, {r0, r5, r6, ip, sp, lr}^
    111c:	6c635f63 	stclvs	15, cr5, [r3], #-396	; 0xfffffe74
    1120:	5f726165 	svcpl	0x00726165
    1124:	65726373 	ldrbvs	r6, [r2, #-883]!	; 0xfffffc8d
    1128:	6c006e65 	stcvs	14, cr6, [r0], {101}	; 0x65
    112c:	5f64616f 	svcpl	0x0064616f
    1130:	67616d69 	strbvs	r6, [r1, -r9, ror #26]!
    1134:	3a430065 	bcc	10c12d0 <startup-0x1ef3ed30>
    1138:	706f6d2f 	rsbvc	r6, pc, pc, lsr #26
    113c:	4d2f632f 	stcmi	3, cr6, [pc, #-188]!	; 1088 <startup-0x1fffef78>
    1140:	616c706f 	cmnvs	ip, pc, rrx
    1144:	61726f62 	cmnvs	r2, r2, ror #30
    1148:	6e6f6974 			; <UNDEFINED> instruction: 0x6e6f6974
    114c:	442f7265 	strtmi	r7, [pc], #-613	; 1154 <startup-0x1fffeeac>
    1150:	2d735049 	ldclcs	0, cr5, [r3, #-292]!	; 0xfffffedc
    1154:	63746957 	cmnvs	r4, #1425408	; 0x15c000
    1158:	2f432f68 	svccs	0x00432f68
    115c:	67616d69 	strbvs	r6, [r1, -r9, ror #26]!
    1160:	00632e65 	rsbeq	r2, r3, r5, ror #28
    1164:	64616f6c 	strbtvs	r6, [r1], #-3948	; 0xfffff094
    1168:	7270735f 	rsbsvc	r7, r0, #2080374785	; 0x7c000001
    116c:	00657469 	rsbeq	r7, r5, r9, ror #8
    1170:	6d2f3a43 	vstmdbvs	pc!, {s6-s72}
    1174:	632f706f 			; <UNDEFINED> instruction: 0x632f706f
    1178:	706f4d2f 	rsbvc	r4, pc, pc, lsr #26
    117c:	6f62616c 	svcvs	0x0062616c
    1180:	69746172 	ldmdbvs	r4!, {r1, r4, r5, r6, r8, sp, lr}^
    1184:	72656e6f 	rsbvc	r6, r5, #1776	; 0x6f0
    1188:	5049442f 	subpl	r4, r9, pc, lsr #8
    118c:	69572d73 	ldmdbvs	r7, {r0, r1, r4, r5, r6, r8, sl, fp, sp}^
    1190:	2f686374 	svccs	0x00686374
    1194:	70732f43 	rsbsvc	r2, r3, r3, asr #30
    1198:	65746972 	ldrbvs	r6, [r4, #-2418]!	; 0xfffff68e
    119c:	4d00632e 	stcmi	3, cr6, [r0, #-184]	; 0xffffff48
    11a0:	7265646f 	rsbvc	r6, r5, #1862270976	; 0x6f000000
    11a4:	74657300 	strbtvc	r7, [r5], #-768	; 0xfffffd00
    11a8:	5f70755f 	svcpl	0x0070755f
    11ac:	004c4944 	subeq	r4, ip, r4, asr #18
    11b0:	4872646f 	ldmdami	r2!, {r0, r1, r2, r3, r5, r6, sl, sp, lr}^
    11b4:	00686769 	rsbeq	r6, r8, r9, ror #14
    11b8:	7079546f 	rsbsvc	r5, r9, pc, ror #8
    11bc:	47007265 	strmi	r7, [r0, -r5, ror #4]
    11c0:	004f4950 	subeq	r4, pc, r0, asr r9	; <UNPREDICTABLE>
    11c4:	64507550 	ldrbvs	r7, [r0], #-1360	; 0xfffffab0
    11c8:	64690072 	strbtvs	r0, [r9], #-114	; 0xffffff8e
    11cc:	73655272 	cmnvc	r5, #536870919	; 0x20000007
    11d0:	65767265 	ldrbvs	r7, [r6, #-613]!	; 0xfffffd9b
    11d4:	3a430064 	bcc	10c136c <startup-0x1ef3ec94>
    11d8:	706f6d2f 	rsbvc	r6, pc, pc, lsr #26
    11dc:	4d2f632f 	stcmi	3, cr6, [pc, #-188]!	; 1128 <startup-0x1fffeed8>
    11e0:	616c706f 	cmnvs	ip, pc, rrx
    11e4:	61726f62 	cmnvs	r2, r2, ror #30
    11e8:	6e6f6974 			; <UNDEFINED> instruction: 0x6e6f6974
    11ec:	442f7265 	strtmi	r7, [pc], #-613	; 11f4 <startup-0x1fffee0c>
    11f0:	2d735049 	ldclcs	0, cr5, [r3, #-292]!	; 0xfffffedc
    11f4:	63746957 	cmnvs	r4, #1425408	; 0x15c000
    11f8:	2f432f68 	svccs	0x00432f68
    11fc:	6f697067 	svcvs	0x00697067
    1200:	6f00632e 	svcvs	0x0000632e
    1204:	73655274 	cmnvc	r5, #116, 4	; 0x40000007
    1208:	65767265 	ldrbvs	r7, [r6, #-613]!	; 0xfffffd9b
    120c:	65720064 	ldrbvs	r0, [r2, #-100]!	; 0xffffff9c
    1210:	445f6461 	ldrbmi	r6, [pc], #-1121	; 1218 <startup-0x1fffede8>
    1214:	735f4c49 	cmpvc	pc, #18688	; 0x4900
    1218:	6c676e69 	stclvs	14, cr6, [r7], #-420	; 0xfffffe5c
    121c:	646f0065 	strbtvs	r0, [pc], #-101	; 1224 <startup-0x1fffeddc>
    1220:	776f4c72 			; <UNDEFINED> instruction: 0x776f4c72
    1224:	70536f00 	subsvc	r6, r3, r0, lsl #30
    1228:	72646565 	rsbvc	r6, r4, #423624704	; 0x19400000
    122c:	72646900 	rsbvc	r6, r4, #0, 18
    1230:	68676948 	stmdavs	r7!, {r3, r6, r8, fp, sp, lr}^
    1234:	72646900 	rsbvc	r6, r4, #0, 18
    1238:	00776f4c 	rsbseq	r6, r7, ip, asr #30
    123c:	5272646f 	rsbspl	r6, r2, #1862270976	; 0x6f000000
    1240:	72657365 	rsbvc	r7, r5, #-1811939327	; 0x94000001
    1244:	00646576 	rsbeq	r6, r4, r6, ror r5
    1248:	64616572 	strbtvs	r6, [r1], #-1394	; 0xfffffa8e
    124c:	4c49445f 	cfstrdmi	mvd4, [r9], {95}	; 0x5f
    1250:	696e6900 	stmdbvs	lr!, {r8, fp, sp, lr}^
    1254:	70615f74 	rsbvc	r5, r1, r4, ror pc
    1258:	63696c70 	cmnvs	r9, #112, 24	; 0x7000
    125c:	6f697461 	svcvs	0x00697461
    1260:	696c006e 	stmdbvs	ip!, {r1, r2, r3, r5, r6}^
    1264:	3274696d 	rsbscc	r6, r4, #1785856	; 0x1b4000
    1268:	63736100 	cmnvs	r3, #0, 2
    126c:	725f6969 	subsvc	r6, pc, #1720320	; 0x1a4000
    1270:	5f646165 	svcpl	0x00646165
    1274:	61746164 	cmnvs	r4, r4, ror #2
    1278:	74657300 	strbtvc	r7, [r5], #-768	; 0xfffffd00
    127c:	5f70755f 	svcpl	0x0070755f
    1280:	69637361 	stmdbvs	r3!, {r0, r5, r6, r8, r9, ip, sp, lr}^
    1284:	73610069 	cmnvc	r1, #105	; 0x69
    1288:	5f696963 	svcpl	0x00696963
    128c:	74696e69 	strbtvc	r6, [r9], #-3689	; 0xfffff197
    1290:	6c6f6300 	stclvs	3, cr6, [pc], #-0	; 1298 <startup-0x1fffed68>
    1294:	006e6d75 	rsbeq	r6, lr, r5, ror sp
    1298:	61656c63 	cmnvs	r5, r3, ror #24
    129c:	73615f72 	cmnvc	r1, #456	; 0x1c8
    12a0:	00696963 	rsbeq	r6, r9, r3, ror #18
    12a4:	69637361 	stmdbvs	r3!, {r0, r5, r6, r8, r9, ip, sp, lr}^
    12a8:	72775f69 	rsbsvc	r5, r7, #420	; 0x1a4
    12ac:	5f657469 	svcpl	0x00657469
    12b0:	74726170 	ldrbtvc	r6, [r2], #-368	; 0xfffffe90
    12b4:	63736100 	cmnvs	r3, #0, 2
    12b8:	725f6969 	subsvc	r6, pc, #1720320	; 0x1a4000
    12bc:	5f646165 	svcpl	0x00646165
    12c0:	746e6f63 	strbtvc	r6, [lr], #-3939	; 0xfffff09d
    12c4:	6c6c6f72 	stclvs	15, cr6, [ip], #-456	; 0xfffffe38
    12c8:	61007265 	tstvs	r0, r5, ror #4
    12cc:	69696373 	stmdbvs	r9!, {r0, r1, r4, r5, r6, r8, r9, sp, lr}^
    12d0:	7274635f 	rsbsvc	r6, r4, #2080374785	; 0x7c000001
    12d4:	69625f6c 	stmdbvs	r2!, {r2, r3, r5, r6, r8, r9, sl, fp, ip, lr}^
    12d8:	65735f74 	ldrbvs	r5, [r3, #-3956]!	; 0xfffff08c
    12dc:	73610074 	cmnvc	r1, #116	; 0x74
    12e0:	5f696963 	svcpl	0x00696963
    12e4:	74697277 	strbtvc	r7, [r9], #-631	; 0xfffffd89
    12e8:	6d635f65 	stclvs	15, cr5, [r3, #-404]!	; 0xfffffe6c
    12ec:	65740064 	ldrbvs	r0, [r4, #-100]!	; 0xffffff9c
    12f0:	00317473 	eorseq	r7, r1, r3, ror r4
    12f4:	74736574 	ldrbtvc	r6, [r3], #-1396	; 0xfffffa8c
    12f8:	64610032 	strbtvs	r0, [r1], #-50	; 0xffffffce
    12fc:	73657264 	cmnvc	r5, #100, 4	; 0x40000006
    1300:	73610073 	cmnvc	r1, #115	; 0x73
    1304:	5f696963 	svcpl	0x00696963
    1308:	74697277 	strbtvc	r7, [r9], #-631	; 0xfffffd89
    130c:	61645f65 	cmnvs	r4, r5, ror #30
    1310:	61006174 	tstvs	r0, r4, ror r1
    1314:	69696373 	stmdbvs	r9!, {r0, r1, r4, r5, r6, r8, r9, sp, lr}^
    1318:	7365745f 	cmnvc	r5, #1593835520	; 0x5f000000
    131c:	73610074 	cmnvc	r1, #116	; 0x74
    1320:	5f696963 	svcpl	0x00696963
    1324:	64616572 	strbtvs	r6, [r1], #-1394	; 0xfffffa8e
    1328:	6174735f 	cmnvs	r4, pc, asr r3
    132c:	00737574 	rsbseq	r7, r3, r4, ror r5
    1330:	69637361 	stmdbvs	r3!, {r0, r5, r6, r8, r9, ip, sp, lr}^
    1334:	74635f69 	strbtvc	r5, [r3], #-3945	; 0xfffff097
    1338:	625f6c72 	subsvs	r6, pc, #29184	; 0x7200
    133c:	635f7469 	cmpvs	pc, #1761607680	; 0x69000000
    1340:	7261656c 	rsbvc	r6, r1, #108, 10	; 0x1b000000
    1344:	63736100 	cmnvs	r3, #0, 2
    1348:	775f6969 	ldrbvc	r6, [pc, -r9, ror #18]
    134c:	65746972 	ldrbvs	r6, [r4, #-2418]!	; 0xfffff68e
    1350:	63736100 	cmnvs	r3, #0, 2
    1354:	675f6969 	ldrbvs	r6, [pc, -r9, ror #18]
    1358:	586f546f 	stmdapl	pc!, {r0, r1, r2, r3, r5, r6, sl, ip, lr}^	; <UNPREDICTABLE>
    135c:	73610059 	cmnvc	r1, #89	; 0x59
    1360:	5f696963 	svcpl	0x00696963
    1364:	74697277 	strbtvc	r7, [r9], #-631	; 0xfffffd89
    1368:	6f635f65 	svcvs	0x00635f65
    136c:	6f72746e 	svcvs	0x0072746e
    1370:	72656c6c 	rsbvc	r6, r5, #108, 24	; 0x6c00
    1374:	63736100 	cmnvs	r3, #0, 2
    1378:	775f6969 	ldrbvc	r6, [pc, -r9, ror #18]
    137c:	65746972 	ldrbvs	r6, [r4, #-2418]!	; 0xfffff68e
    1380:	6168635f 	cmnvs	r8, pc, asr r3
    1384:	696c0072 	stmdbvs	ip!, {r1, r4, r5, r6}^
    1388:	3174696d 	cmncc	r4, sp, ror #18
    138c:	2f3a4300 	svccs	0x003a4300
    1390:	2f706f6d 	svccs	0x00706f6d
    1394:	6f4d2f63 	svcvs	0x004d2f63
    1398:	62616c70 	rsbvs	r6, r1, #112, 24	; 0x7000
    139c:	7461726f 	strbtvc	r7, [r1], #-623	; 0xfffffd91
    13a0:	656e6f69 	strbvs	r6, [lr, #-3945]!	; 0xfffff097
    13a4:	49442f72 	stmdbmi	r4, {r1, r4, r5, r6, r8, r9, sl, fp, sp}^
    13a8:	572d7350 			; <UNDEFINED> instruction: 0x572d7350
    13ac:	68637469 	stmdavs	r3!, {r0, r3, r5, r6, sl, ip, sp, lr}^
    13b0:	612f432f 			; <UNDEFINED> instruction: 0x612f432f
    13b4:	69696373 	stmdbvs	r9!, {r0, r1, r4, r5, r6, r8, r9, sp, lr}^
    13b8:	7369645f 	cmnvc	r9, #1593835520	; 0x5f000000
    13bc:	79616c70 	stmdbvc	r1!, {r4, r5, r6, sl, fp, sp, lr}^
    13c0:	6900632e 	stmdbvs	r0, {r1, r2, r3, r5, r8, r9, sp, lr}
    13c4:	5f74696e 	svcpl	0x0074696e
    13c8:	776f6c73 			; <UNDEFINED> instruction: 0x776f6c73
    13cc:	7865745f 	stmdavc	r5!, {r0, r1, r2, r3, r4, r6, sl, ip, sp, lr}^
    13d0:	656c0074 	strbvs	r0, [ip, #-116]!	; 0xffffff8c
    13d4:	6874676e 	ldmdavs	r4!, {r1, r2, r3, r5, r6, r8, r9, sl, sp, lr}^
    13d8:	5f666f5f 	svcpl	0x00666f5f
    13dc:	31776f72 	cmncc	r7, r2, ror pc
    13e0:	2f3a4300 	svccs	0x003a4300
    13e4:	2f706f6d 	svccs	0x00706f6d
    13e8:	6f4d2f63 	svcvs	0x004d2f63
    13ec:	62616c70 	rsbvs	r6, r1, #112, 24	; 0x7000
    13f0:	7461726f 	strbtvc	r7, [r1], #-623	; 0xfffffd91
    13f4:	656e6f69 	strbvs	r6, [lr, #-3945]!	; 0xfffff097
    13f8:	49442f72 	stmdbmi	r4, {r1, r4, r5, r6, r8, r9, sl, fp, sp}^
    13fc:	572d7350 			; <UNDEFINED> instruction: 0x572d7350
    1400:	68637469 	stmdavs	r3!, {r0, r3, r5, r6, sl, ip, sp, lr}^
    1404:	732f432f 			; <UNDEFINED> instruction: 0x732f432f
    1408:	5f776f6c 	svcpl	0x00776f6c
    140c:	74786574 	ldrbtvc	r6, [r8], #-1396	; 0xfffffa8c
    1410:	6900632e 	stmdbvs	r0, {r1, r2, r3, r5, r8, r9, sp, lr}
    1414:	6f6f646e 	svcvs	0x006f646e
    1418:	6d497372 	stclvs	3, cr7, [r9, #-456]	; 0xfffffe38
    141c:	00656761 	rsbeq	r6, r5, r1, ror #14
    1420:	6f646e69 	svcvs	0x00646e69
    1424:	4273726f 	rsbsmi	r7, r3, #-268435450	; 0xf0000006
    1428:	6b63616c 	blvs	18d99e0 <startup-0x1e726620>
    142c:	646e6900 	strbtvs	r6, [lr], #-2304	; 0xfffff700
    1430:	73726f6f 	cmnvc	r2, #444	; 0x1bc
    1434:	67616d49 	strbvs	r6, [r1, -r9, asr #26]!
    1438:	69007365 	stmdbvs	r0, {r0, r2, r5, r6, r8, r9, ip, sp, lr}
    143c:	6f6f646e 	svcvs	0x006f646e
    1440:	6c5f7372 	mrrcvs	3, 7, r7, pc, cr2	; <UNPREDICTABLE>
    1444:	74686769 	strbtvc	r6, [r8], #-1897	; 0xfffff897
    1448:	7469625f 	strbtvc	r6, [r9], #-607	; 0xfffffda1
    144c:	65740073 	ldrbvs	r0, [r4, #-115]!	; 0xffffff8d
    1450:	6e49706d 	cdpvs	0, 4, cr7, cr9, cr13, {3}
    1454:	726f6f64 	rsbvc	r6, pc, #100, 30	; 0x190
    1458:	61724773 	cmnvs	r2, r3, ror r7
    145c:	6e690079 	mcrvs	0, 3, r0, cr9, cr9, {3}
    1460:	726f6f64 	rsbvc	r6, pc, #100, 30	; 0x190
    1464:	72675f73 	rsbvc	r5, r7, #460	; 0x1cc
    1468:	625f7961 	subsvs	r7, pc, #1589248	; 0x184000
    146c:	00737469 	rsbseq	r7, r3, r9, ror #8
    1470:	706d6574 	rsbvc	r6, sp, r4, ror r5
    1474:	6f646e49 	svcvs	0x00646e49
    1478:	4c73726f 	lfmmi	f7, 2, [r3], #-444	; 0xfffffe44
    147c:	74686769 	strbtvc	r6, [r8], #-1897	; 0xfffff897
    1480:	646e6900 	strbtvs	r6, [lr], #-2304	; 0xfffff700
    1484:	73726f6f 	cmnvc	r2, #444	; 0x1bc
    1488:	6867694c 	stmdavs	r7!, {r2, r3, r6, r8, fp, sp, lr}^
    148c:	3a430074 	bcc	10c1664 <startup-0x1ef3e99c>
    1490:	706f6d2f 	rsbvc	r6, pc, pc, lsr #26
    1494:	4d2f632f 	stcmi	3, cr6, [pc, #-188]!	; 13e0 <startup-0x1fffec20>
    1498:	616c706f 	cmnvs	ip, pc, rrx
    149c:	61726f62 	cmnvs	r2, r2, ror #30
    14a0:	6e6f6974 			; <UNDEFINED> instruction: 0x6e6f6974
    14a4:	442f7265 	strtmi	r7, [pc], #-613	; 14ac <startup-0x1fffeb54>
    14a8:	2d735049 	ldclcs	0, cr5, [r3, #-292]!	; 0xfffffedc
    14ac:	63746957 	cmnvs	r4, #1425408	; 0x15c000
    14b0:	2f432f68 	svccs	0x00432f68
    14b4:	6f646e69 	svcvs	0x00646e69
    14b8:	2e73726f 	cdpcs	2, 7, cr7, cr3, cr15, {3}
    14bc:	6e690063 	cdpvs	0, 6, cr0, cr9, cr3, {3}
    14c0:	726f6f64 	rsbvc	r6, pc, #100, 30	; 0x190
    14c4:	6c625f73 	stclvs	15, cr5, [r2], #-460	; 0xfffffe34
    14c8:	5f6b6361 	svcpl	0x006b6361
    14cc:	73746962 	cmnvc	r4, #1605632	; 0x188000
    14d0:	6d657400 	cfstrdvs	mvd7, [r5, #-0]
    14d4:	646e4970 	strbtvs	r4, [lr], #-2416	; 0xfffff690
    14d8:	73726f6f 	cmnvc	r2, #444	; 0x1bc
    14dc:	63616c42 	cmnvs	r1, #16896	; 0x4200
    14e0:	6e69006b 	cdpvs	0, 6, cr0, cr9, cr11, {3}
    14e4:	695f7469 	ldmdbvs	pc, {r0, r3, r5, r6, sl, ip, sp, lr}^	; <UNPREDICTABLE>
    14e8:	6f6f646e 	svcvs	0x006f646e
    14ec:	69007372 	stmdbvs	r0, {r1, r4, r5, r6, r8, r9, ip, sp, lr}
    14f0:	6f6f646e 	svcvs	0x006f646e
    14f4:	624f7372 	subvs	r7, pc, #-939524095	; 0xc8000001
    14f8:	6e69006a 	cdpvs	0, 6, cr0, cr9, cr10, {3}
    14fc:	726f6f64 	rsbvc	r6, pc, #100, 30	; 0x190
    1500:	61724773 	cmnvs	r2, r3, ror r7
    1504:	6e690079 	mcrvs	0, 3, r0, cr9, cr9, {3}
    1508:	726f6f64 	rsbvc	r6, pc, #100, 30	; 0x190
    150c:	694c3273 	stmdbvs	ip, {r0, r1, r4, r5, r6, r9, ip, sp}^
    1510:	00746867 	rsbseq	r6, r4, r7, ror #16
    1514:	6f646e69 	svcvs	0x00646e69
    1518:	3273726f 	rsbscc	r7, r3, #-268435450	; 0xf0000006
    151c:	616c625f 	cmnvs	ip, pc, asr r2
    1520:	625f6b63 	subsvs	r6, pc, #101376	; 0x18c00
    1524:	00737469 	rsbseq	r7, r3, r9, ror #8
    1528:	706d6574 	rsbvc	r6, sp, r4, ror r5
    152c:	6f646e49 	svcvs	0x00646e49
    1530:	3273726f 	rsbscc	r7, r3, #-268435450	; 0xf0000006
    1534:	6867694c 	stmdavs	r7!, {r2, r3, r6, r8, fp, sp, lr}^
    1538:	6e690074 	mcrvs	0, 3, r0, cr9, cr4, {3}
    153c:	726f6f64 	rsbvc	r6, pc, #100, 30	; 0x190
    1540:	72473273 	subvc	r3, r7, #805306375	; 0x30000007
    1544:	43007961 	movwmi	r7, #2401	; 0x961
    1548:	6f6d2f3a 	svcvs	0x006d2f3a
    154c:	2f632f70 	svccs	0x00632f70
    1550:	6c706f4d 	ldclvs	15, cr6, [r0], #-308	; 0xfffffecc
    1554:	726f6261 	rsbvc	r6, pc, #268435462	; 0x10000006
    1558:	6f697461 	svcvs	0x00697461
    155c:	2f72656e 	svccs	0x0072656e
    1560:	73504944 	cmpvc	r0, #68, 18	; 0x110000
    1564:	7469572d 	strbtvc	r5, [r9], #-1837	; 0xfffff8d3
    1568:	432f6863 			; <UNDEFINED> instruction: 0x432f6863
    156c:	646e692f 	strbtvs	r6, [lr], #-2351	; 0xfffff6d1
    1570:	73726f6f 	cmnvc	r2, #444	; 0x1bc
    1574:	00632e32 	rsbeq	r2, r3, r2, lsr lr
    1578:	706d6574 	rsbvc	r6, sp, r4, ror r5
    157c:	6f646e49 	svcvs	0x00646e49
    1580:	3273726f 	rsbscc	r7, r3, #-268435450	; 0xf0000006
    1584:	63616c42 	cmnvs	r1, #16896	; 0x4200
    1588:	6e69006b 	cdpvs	0, 6, cr0, cr9, cr11, {3}
    158c:	726f6f64 	rsbvc	r6, pc, #100, 30	; 0x190
    1590:	6c423273 	sfmvs	f3, 2, [r2], {115}	; 0x73
    1594:	006b6361 	rsbeq	r6, fp, r1, ror #6
    1598:	6f646e69 	svcvs	0x00646e69
    159c:	3273726f 	rsbscc	r7, r3, #-268435450	; 0xf0000006
    15a0:	67616d49 	strbvs	r6, [r1, -r9, asr #26]!
    15a4:	6e690065 	cdpvs	0, 6, cr0, cr9, cr5, {3}
    15a8:	695f7469 	ldmdbvs	pc, {r0, r3, r5, r6, sl, ip, sp, lr}^	; <UNPREDICTABLE>
    15ac:	6f6f646e 	svcvs	0x006f646e
    15b0:	00327372 	eorseq	r7, r2, r2, ror r3
    15b4:	6f646e69 	svcvs	0x00646e69
    15b8:	3273726f 	rsbscc	r7, r3, #-268435450	; 0xf0000006
    15bc:	67696c5f 			; <UNDEFINED> instruction: 0x67696c5f
    15c0:	625f7468 	subsvs	r7, pc, #104, 8	; 0x68000000
    15c4:	00737469 	rsbseq	r7, r3, r9, ror #8
    15c8:	6f646e69 	svcvs	0x00646e69
    15cc:	3273726f 	rsbscc	r7, r3, #-268435450	; 0xf0000006
    15d0:	67616d49 	strbvs	r6, [r1, -r9, asr #26]!
    15d4:	69007365 	stmdbvs	r0, {r0, r2, r5, r6, r8, r9, ip, sp, lr}
    15d8:	6f6f646e 	svcvs	0x006f646e
    15dc:	5f327372 	svcpl	0x00327372
    15e0:	79617267 	stmdbvc	r1!, {r0, r1, r2, r5, r6, r9, ip, sp, lr}^
    15e4:	7469625f 	strbtvc	r6, [r9], #-607	; 0xfffffda1
    15e8:	6e690073 	mcrvs	0, 3, r0, cr9, cr3, {3}
    15ec:	726f6f64 	rsbvc	r6, pc, #100, 30	; 0x190
    15f0:	624f3273 	subvs	r3, pc, #805306375	; 0x30000007
    15f4:	6574006a 	ldrbvs	r0, [r4, #-106]!	; 0xffffff96
    15f8:	6e49706d 	cdpvs	0, 4, cr7, cr9, cr13, {3}
    15fc:	726f6f64 	rsbvc	r6, pc, #100, 30	; 0x190
    1600:	72473273 	subvc	r3, r7, #805306375	; 0x30000007
    1604:	Address 0x00001604 is out of bounds.


Disassembly of section .comment:

00000000 <.comment>:
   0:	3a434347 	bcc	10d0d24 <startup-0x1ef2f2dc>
   4:	4e472820 	cdpmi	8, 4, cr2, cr7, cr0, {1}
   8:	6f542055 	svcvs	0x00542055
   c:	20736c6f 	rsbscs	r6, r3, pc, ror #24
  10:	20726f66 	rsbscs	r6, r2, r6, ror #30
  14:	204d5241 	subcs	r5, sp, r1, asr #4
  18:	65626d45 	strbvs	r6, [r2, #-3397]!	; 0xfffff2bb
  1c:	64656464 	strbtvs	r6, [r5], #-1124	; 0xfffffb9c
  20:	6f725020 	svcvs	0x00725020
  24:	73736563 	cmnvc	r3, #415236096	; 0x18c00000
  28:	2073726f 	rsbscs	r7, r3, pc, ror #4
  2c:	30322d36 	eorscc	r2, r2, r6, lsr sp
  30:	712d3731 			; <UNDEFINED> instruction: 0x712d3731
  34:	70752d31 	rsbsvc	r2, r5, r1, lsr sp
  38:	65746164 	ldrbvs	r6, [r4, #-356]!	; 0xfffffe9c
  3c:	2e362029 	cdpcs	0, 3, cr2, cr6, cr9, {1}
  40:	20312e33 	eorscs	r2, r1, r3, lsr lr
  44:	37313032 			; <UNDEFINED> instruction: 0x37313032
  48:	35313230 	ldrcc	r3, [r1, #-560]!	; 0xfffffdd0
  4c:	65722820 	ldrbvs	r2, [r2, #-2080]!	; 0xfffff7e0
  50:	7361656c 	cmnvc	r1, #108, 10	; 0x1b000000
  54:	5b202965 	blpl	80a5f0 <startup-0x1f7f5a10>
  58:	2f4d5241 	svccs	0x004d5241
  5c:	65626d65 	strbvs	r6, [r2, #-3429]!	; 0xfffff29b
  60:	64656464 	strbtvs	r6, [r5], #-1124	; 0xfffffb9c
  64:	622d362d 	eorvs	r3, sp, #47185920	; 0x2d00000
  68:	636e6172 	cmnvs	lr, #-2147483620	; 0x8000001c
  6c:	65722068 	ldrbvs	r2, [r2, #-104]!	; 0xffffff98
  70:	69736976 	ldmdbvs	r3!, {r1, r2, r4, r5, r6, r8, fp, sp, lr}^
  74:	32206e6f 	eorcc	r6, r0, #1776	; 0x6f0
  78:	31353534 	teqcc	r5, r4, lsr r5
  7c:	Address 0x0000007c is out of bounds.


Disassembly of section .ARM.attributes:

00000000 <.ARM.attributes>:
   0:	00002b41 	andeq	r2, r0, r1, asr #22
   4:	61656100 	cmnvs	r5, r0, lsl #2
   8:	01006962 	tsteq	r0, r2, ror #18
   c:	00000021 	andeq	r0, r0, r1, lsr #32
  10:	2d533605 	ldclcs	6, cr3, [r3, #-20]	; 0xffffffec
  14:	0c06004d 	stceq	0, cr0, [r6], {77}	; 0x4d
  18:	01094d07 	tsteq	r9, r7, lsl #26
  1c:	01140412 	tsteq	r4, r2, lsl r4
  20:	03170115 	tsteq	r7, #1073741829	; 0x40000005
  24:	01190118 	tsteq	r9, r8, lsl r1
  28:	061e011a 			; <UNDEFINED> instruction: 0x061e011a

Disassembly of section .debug_frame:

00000000 <.debug_frame>:
   0:	0000000c 	andeq	r0, r0, ip
   4:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
   8:	7c020001 	stcvc	0, cr0, [r2], {1}
   c:	000d0c0e 	andeq	r0, sp, lr, lsl #24
  10:	0000000c 	andeq	r0, r0, ip
  14:	00000000 	andeq	r0, r0, r0
  18:	20000000 	andcs	r0, r0, r0
  1c:	0000000c 	andeq	r0, r0, ip
  20:	00000018 	andeq	r0, r0, r8, lsl r0
  24:	00000000 	andeq	r0, r0, r0
  28:	20000010 	andcs	r0, r0, r0, lsl r0
  2c:	00000024 	andeq	r0, r0, r4, lsr #32
  30:	40080e41 	andmi	r0, r8, r1, asr #28
  34:	8e400287 	cdphi	2, 4, cr0, cr0, cr7, {4}
  38:	070d4101 	streq	r4, [sp, -r1, lsl #2]
  3c:	0000001c 	andeq	r0, r0, ip, lsl r0
  40:	00000000 	andeq	r0, r0, r0
  44:	20000034 	andcs	r0, r0, r4, lsr r0
  48:	000001c8 	andeq	r0, r0, r8, asr #3
  4c:	40080e41 	andmi	r0, r8, r1, asr #28
  50:	8e400287 	cdphi	2, 4, cr0, cr0, cr7, {4}
  54:	300e4101 	andcc	r4, lr, r1, lsl #2
  58:	00070d41 	andeq	r0, r7, r1, asr #26
  5c:	00000020 	andeq	r0, r0, r0, lsr #32
  60:	00000000 	andeq	r0, r0, r0
  64:	200001fc 	strdcs	r0, [r0], -ip
  68:	00000b04 	andeq	r0, r0, r4, lsl #22
  6c:	400c0e41 	andmi	r0, ip, r1, asr #28
  70:	87400384 	strbhi	r0, [r0, -r4, lsl #7]
  74:	018e4002 	orreq	r4, lr, r2
  78:	06c80e42 	strbeq	r0, [r8], r2, asr #28
  7c:	00070d41 	andeq	r0, r7, r1, asr #26
  80:	0000000c 	andeq	r0, r0, ip
  84:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
  88:	7c020001 	stcvc	0, cr0, [r2], {1}
  8c:	000d0c0e 	andeq	r0, sp, lr, lsl #24
  90:	0000001c 	andeq	r0, r0, ip, lsl r0
  94:	00000080 	andeq	r0, r0, r0, lsl #1
  98:	20000d00 	andcs	r0, r0, r0, lsl #26
  9c:	00000010 	andeq	r0, r0, r0, lsl r0
  a0:	40080e41 	andmi	r0, r8, r1, asr #28
  a4:	8e400287 	cdphi	2, 4, cr0, cr0, cr7, {4}
  a8:	100e4101 	andne	r4, lr, r1, lsl #2
  ac:	00070d41 	andeq	r0, r7, r1, asr #26
  b0:	0000001c 	andeq	r0, r0, ip, lsl r0
  b4:	00000080 	andeq	r0, r0, r0, lsl #1
  b8:	20000d10 	andcs	r0, r0, r0, lsl sp
  bc:	00000046 	andeq	r0, r0, r6, asr #32
  c0:	40080e41 	andmi	r0, r8, r1, asr #28
  c4:	8e400287 	cdphi	2, 4, cr0, cr0, cr7, {4}
  c8:	100e4101 	andne	r4, lr, r1, lsl #2
  cc:	00070d41 	andeq	r0, r7, r1, asr #26
  d0:	0000000c 	andeq	r0, r0, ip
  d4:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
  d8:	7c020001 	stcvc	0, cr0, [r2], {1}
  dc:	000d0c0e 	andeq	r0, sp, lr, lsl #24
  e0:	0000001c 	andeq	r0, r0, ip, lsl r0
  e4:	000000d0 	ldrdeq	r0, [r0], -r0	; <UNPREDICTABLE>
  e8:	20000d58 	andcs	r0, r0, r8, asr sp
  ec:	00000184 	andeq	r0, r0, r4, lsl #3
  f0:	40080e41 	andmi	r0, r8, r1, asr #28
  f4:	8e400287 	cdphi	2, 4, cr0, cr0, cr7, {4}
  f8:	380e4101 	stmdacc	lr, {r0, r8, lr}
  fc:	00070d41 	andeq	r0, r7, r1, asr #26
 100:	00000020 	andeq	r0, r0, r0, lsr #32
 104:	000000d0 	ldrdeq	r0, [r0], -r0	; <UNPREDICTABLE>
 108:	20000edc 	ldrdcs	r0, [r0], -ip
 10c:	00000124 	andeq	r0, r0, r4, lsr #2
 110:	400c0e41 	andmi	r0, ip, r1, asr #28
 114:	87400384 	strbhi	r0, [r0, -r4, lsl #7]
 118:	018e4002 	orreq	r4, lr, r2
 11c:	41180e41 	tstmi	r8, r1, asr #28
 120:	0000070d 	andeq	r0, r0, sp, lsl #14
 124:	0000000c 	andeq	r0, r0, ip
 128:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
 12c:	7c020001 	stcvc	0, cr0, [r2], {1}
 130:	000d0c0e 	andeq	r0, sp, lr, lsl #24
 134:	0000001c 	andeq	r0, r0, ip, lsl r0
 138:	00000124 	andeq	r0, r0, r4, lsr #2
 13c:	20001000 	andcs	r1, r0, r0
 140:	000000fc 	strdeq	r0, [r0], -ip
 144:	40080e41 	andmi	r0, r8, r1, asr #28
 148:	8e400287 	cdphi	2, 4, cr0, cr0, cr7, {4}
 14c:	100e4101 	andne	r4, lr, r1, lsl #2
 150:	00070d41 	andeq	r0, r7, r1, asr #26
 154:	0000000c 	andeq	r0, r0, ip
 158:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
 15c:	7c020001 	stcvc	0, cr0, [r2], {1}
 160:	000d0c0e 	andeq	r0, sp, lr, lsl #24
 164:	0000001c 	andeq	r0, r0, ip, lsl r0
 168:	00000154 	andeq	r0, r0, r4, asr r1
 16c:	200010fc 	strdcs	r1, [r0], -ip
 170:	0000020c 	andeq	r0, r0, ip, lsl #4
 174:	40080e41 	andmi	r0, r8, r1, asr #28
 178:	8e400287 	cdphi	2, 4, cr0, cr0, cr7, {4}
 17c:	480e4101 	stmdami	lr, {r0, r8, lr}
 180:	00070d41 	andeq	r0, r7, r1, asr #26
 184:	00000020 	andeq	r0, r0, r0, lsr #32
 188:	00000154 	andeq	r0, r0, r4, asr r1
 18c:	20001308 	andcs	r1, r0, r8, lsl #6
 190:	00000158 	andeq	r0, r0, r8, asr r1
 194:	400c0e41 	andmi	r0, ip, r1, asr #28
 198:	87400384 	strbhi	r0, [r0, -r4, lsl #7]
 19c:	018e4002 	orreq	r4, lr, r2
 1a0:	41180e41 	tstmi	r8, r1, asr #28
 1a4:	0000070d 	andeq	r0, r0, sp, lsl #14
 1a8:	0000000c 	andeq	r0, r0, ip
 1ac:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
 1b0:	7c020001 	stcvc	0, cr0, [r2], {1}
 1b4:	000d0c0e 	andeq	r0, sp, lr, lsl #24
 1b8:	0000001c 	andeq	r0, r0, ip, lsl r0
 1bc:	000001a8 	andeq	r0, r0, r8, lsr #3
 1c0:	20001460 	andcs	r1, r0, r0, ror #8
 1c4:	00000140 	andeq	r0, r0, r0, asr #2
 1c8:	40080e41 	andmi	r0, r8, r1, asr #28
 1cc:	8e400287 	cdphi	2, 4, cr0, cr0, cr7, {4}
 1d0:	300e4101 	andcc	r4, lr, r1, lsl #2
 1d4:	00070d41 	andeq	r0, r7, r1, asr #26
 1d8:	00000020 	andeq	r0, r0, r0, lsr #32
 1dc:	000001a8 	andeq	r0, r0, r8, lsr #3
 1e0:	200015a0 	andcs	r1, r0, r0, lsr #11
 1e4:	000000f8 	strdeq	r0, [r0], -r8
 1e8:	400c0e41 	andmi	r0, ip, r1, asr #28
 1ec:	87400384 	strbhi	r0, [r0, -r4, lsl #7]
 1f0:	018e4002 	orreq	r4, lr, r2
 1f4:	41180e41 	tstmi	r8, r1, asr #28
 1f8:	0000070d 	andeq	r0, r0, sp, lsl #14
 1fc:	0000000c 	andeq	r0, r0, ip
 200:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
 204:	7c020001 	stcvc	0, cr0, [r2], {1}
 208:	000d0c0e 	andeq	r0, sp, lr, lsl #24
 20c:	00000018 	andeq	r0, r0, r8, lsl r0
 210:	000001fc 	strdeq	r0, [r0], -ip
 214:	20001698 	mulcs	r0, r8, r6
 218:	00000044 	andeq	r0, r0, r4, asr #32
 21c:	40080e41 	andmi	r0, r8, r1, asr #28
 220:	8e400287 	cdphi	2, 4, cr0, cr0, cr7, {4}
 224:	070d4101 	streq	r4, [sp, -r1, lsl #2]
 228:	00000018 	andeq	r0, r0, r8, lsl r0
 22c:	000001fc 	strdeq	r0, [r0], -ip
 230:	200016dc 	ldrdcs	r1, [r0], -ip
 234:	00000044 	andeq	r0, r0, r4, asr #32
 238:	40080e41 	andmi	r0, r8, r1, asr #28
 23c:	8e400287 	cdphi	2, 4, cr0, cr0, cr7, {4}
 240:	070d4101 	streq	r4, [sp, -r1, lsl #2]
 244:	0000001c 	andeq	r0, r0, ip, lsl r0
 248:	000001fc 	strdeq	r0, [r0], -ip
 24c:	20001720 	andcs	r1, r0, r0, lsr #14
 250:	0000002c 	andeq	r0, r0, ip, lsr #32
 254:	40080e41 	andmi	r0, r8, r1, asr #28
 258:	8e400287 	cdphi	2, 4, cr0, cr0, cr7, {4}
 25c:	100e4101 	andne	r4, lr, r1, lsl #2
 260:	00070d41 	andeq	r0, r7, r1, asr #26
 264:	0000001c 	andeq	r0, r0, ip, lsl r0
 268:	000001fc 	strdeq	r0, [r0], -ip
 26c:	2000174c 	andcs	r1, r0, ip, asr #14
 270:	00000026 	andeq	r0, r0, r6, lsr #32
 274:	40080e41 	andmi	r0, r8, r1, asr #28
 278:	8e400287 	cdphi	2, 4, cr0, cr0, cr7, {4}
 27c:	100e4101 	andne	r4, lr, r1, lsl #2
 280:	00070d41 	andeq	r0, r7, r1, asr #26
 284:	0000001c 	andeq	r0, r0, ip, lsl r0
 288:	000001fc 	strdeq	r0, [r0], -ip
 28c:	20001772 	andcs	r1, r0, r2, ror r7
 290:	00000032 	andeq	r0, r0, r2, lsr r0
 294:	40080e41 	andmi	r0, r8, r1, asr #28
 298:	8e400287 	cdphi	2, 4, cr0, cr0, cr7, {4}
 29c:	180e4101 	stmdane	lr, {r0, r8, lr}
 2a0:	00070d41 	andeq	r0, r7, r1, asr #26
 2a4:	00000018 	andeq	r0, r0, r8, lsl r0
 2a8:	000001fc 	strdeq	r0, [r0], -ip
 2ac:	200017a4 	andcs	r1, r0, r4, lsr #15
 2b0:	00000018 	andeq	r0, r0, r8, lsl r0
 2b4:	40080e41 	andmi	r0, r8, r1, asr #28
 2b8:	8e400287 	cdphi	2, 4, cr0, cr0, cr7, {4}
 2bc:	070d4101 	streq	r4, [sp, -r1, lsl #2]
 2c0:	00000018 	andeq	r0, r0, r8, lsl r0
 2c4:	000001fc 	strdeq	r0, [r0], -ip
 2c8:	200017bc 			; <UNDEFINED> instruction: 0x200017bc
 2cc:	00000030 	andeq	r0, r0, r0, lsr r0
 2d0:	40080e41 	andmi	r0, r8, r1, asr #28
 2d4:	8e400287 	cdphi	2, 4, cr0, cr0, cr7, {4}
 2d8:	070d4101 	streq	r4, [sp, -r1, lsl #2]
 2dc:	0000001c 	andeq	r0, r0, ip, lsl r0
 2e0:	000001fc 	strdeq	r0, [r0], -ip
 2e4:	200017ec 	andcs	r1, r0, ip, ror #15
 2e8:	00000050 	andeq	r0, r0, r0, asr r0
 2ec:	40080e41 	andmi	r0, r8, r1, asr #28
 2f0:	8e400287 	cdphi	2, 4, cr0, cr0, cr7, {4}
 2f4:	180e4101 	stmdane	lr, {r0, r8, lr}
 2f8:	00070d41 	andeq	r0, r7, r1, asr #26
 2fc:	0000001c 	andeq	r0, r0, ip, lsl r0
 300:	000001fc 	strdeq	r0, [r0], -ip
 304:	2000183c 	andcs	r1, r0, ip, lsr r8
 308:	00000058 	andeq	r0, r0, r8, asr r0
 30c:	40080e41 	andmi	r0, r8, r1, asr #28
 310:	8e400287 	cdphi	2, 4, cr0, cr0, cr7, {4}
 314:	180e4101 	stmdane	lr, {r0, r8, lr}
 318:	00070d41 	andeq	r0, r7, r1, asr #26
 31c:	0000001c 	andeq	r0, r0, ip, lsl r0
 320:	000001fc 	strdeq	r0, [r0], -ip
 324:	20001894 	mulcs	r0, r4, r8
 328:	00000066 	andeq	r0, r0, r6, rrx
 32c:	40080e41 	andmi	r0, r8, r1, asr #28
 330:	8e400287 	cdphi	2, 4, cr0, cr0, cr7, {4}
 334:	100e4101 	andne	r4, lr, r1, lsl #2
 338:	00070d41 	andeq	r0, r7, r1, asr #26
 33c:	0000001c 	andeq	r0, r0, ip, lsl r0
 340:	000001fc 	strdeq	r0, [r0], -ip
 344:	200018fa 	strdcs	r1, [r0], -sl
 348:	0000006e 	andeq	r0, r0, lr, rrx
 34c:	40080e41 	andmi	r0, r8, r1, asr #28
 350:	8e400287 	cdphi	2, 4, cr0, cr0, cr7, {4}
 354:	100e4101 	andne	r4, lr, r1, lsl #2
 358:	00070d41 	andeq	r0, r7, r1, asr #26
 35c:	0000001c 	andeq	r0, r0, ip, lsl r0
 360:	000001fc 	strdeq	r0, [r0], -ip
 364:	20001968 	andcs	r1, r0, r8, ror #18
 368:	00000094 	muleq	r0, r4, r0
 36c:	40080e41 	andmi	r0, r8, r1, asr #28
 370:	8e400287 	cdphi	2, 4, cr0, cr0, cr7, {4}
 374:	180e4101 	stmdane	lr, {r0, r8, lr}
 378:	00070d41 	andeq	r0, r7, r1, asr #26
 37c:	0000001c 	andeq	r0, r0, ip, lsl r0
 380:	000001fc 	strdeq	r0, [r0], -ip
 384:	200019fc 	strdcs	r1, [r0], -ip
 388:	0000002a 	andeq	r0, r0, sl, lsr #32
 38c:	40080e41 	andmi	r0, r8, r1, asr #28
 390:	8e400287 	cdphi	2, 4, cr0, cr0, cr7, {4}
 394:	100e4101 	andne	r4, lr, r1, lsl #2
 398:	00070d41 	andeq	r0, r7, r1, asr #26
 39c:	0000001c 	andeq	r0, r0, ip, lsl r0
 3a0:	000001fc 	strdeq	r0, [r0], -ip
 3a4:	20001a26 	andcs	r1, r0, r6, lsr #20
 3a8:	0000007e 	andeq	r0, r0, lr, ror r0
 3ac:	40080e41 	andmi	r0, r8, r1, asr #28
 3b0:	8e400287 	cdphi	2, 4, cr0, cr0, cr7, {4}
 3b4:	100e4101 	andne	r4, lr, r1, lsl #2
 3b8:	00070d41 	andeq	r0, r7, r1, asr #26
 3bc:	0000001c 	andeq	r0, r0, ip, lsl r0
 3c0:	000001fc 	strdeq	r0, [r0], -ip
 3c4:	20001aa4 	andcs	r1, r0, r4, lsr #21
 3c8:	00000046 	andeq	r0, r0, r6, asr #32
 3cc:	40080e41 	andmi	r0, r8, r1, asr #28
 3d0:	8e400287 	cdphi	2, 4, cr0, cr0, cr7, {4}
 3d4:	100e4101 	andne	r4, lr, r1, lsl #2
 3d8:	00070d41 	andeq	r0, r7, r1, asr #26
 3dc:	0000001c 	andeq	r0, r0, ip, lsl r0
 3e0:	000001fc 	strdeq	r0, [r0], -ip
 3e4:	20001aea 	andcs	r1, r0, sl, ror #21
 3e8:	00000046 	andeq	r0, r0, r6, asr #32
 3ec:	40080e41 	andmi	r0, r8, r1, asr #28
 3f0:	8e400287 	cdphi	2, 4, cr0, cr0, cr7, {4}
 3f4:	100e4101 	andne	r4, lr, r1, lsl #2
 3f8:	00070d41 	andeq	r0, r7, r1, asr #26
 3fc:	00000018 	andeq	r0, r0, r8, lsl r0
 400:	000001fc 	strdeq	r0, [r0], -ip
 404:	20001b30 	andcs	r1, r0, r0, lsr fp
 408:	0000006e 	andeq	r0, r0, lr, rrx
 40c:	40080e41 	andmi	r0, r8, r1, asr #28
 410:	8e400287 	cdphi	2, 4, cr0, cr0, cr7, {4}
 414:	070d4101 	streq	r4, [sp, -r1, lsl #2]
 418:	0000001c 	andeq	r0, r0, ip, lsl r0
 41c:	000001fc 	strdeq	r0, [r0], -ip
 420:	20001b9e 	mulcs	r0, lr, fp
 424:	00000066 	andeq	r0, r0, r6, rrx
 428:	40080e41 	andmi	r0, r8, r1, asr #28
 42c:	8e400287 	cdphi	2, 4, cr0, cr0, cr7, {4}
 430:	100e4101 	andne	r4, lr, r1, lsl #2
 434:	00070d41 	andeq	r0, r7, r1, asr #26
 438:	0000001c 	andeq	r0, r0, ip, lsl r0
 43c:	000001fc 	strdeq	r0, [r0], -ip
 440:	20001c04 	andcs	r1, r0, r4, lsl #24
 444:	00000180 	andeq	r0, r0, r0, lsl #3
 448:	40080e41 	andmi	r0, r8, r1, asr #28
 44c:	8e400287 	cdphi	2, 4, cr0, cr0, cr7, {4}
 450:	200e4101 	andcs	r4, lr, r1, lsl #2
 454:	00070d41 	andeq	r0, r7, r1, asr #26
 458:	0000001c 	andeq	r0, r0, ip, lsl r0
 45c:	000001fc 	strdeq	r0, [r0], -ip
 460:	20001d84 	andcs	r1, r0, r4, lsl #27
 464:	000001a0 	andeq	r0, r0, r0, lsr #3
 468:	40080e41 	andmi	r0, r8, r1, asr #28
 46c:	8e400287 	cdphi	2, 4, cr0, cr0, cr7, {4}
 470:	280e4101 	stmdacs	lr, {r0, r8, lr}
 474:	00070d41 	andeq	r0, r7, r1, asr #26
 478:	0000001c 	andeq	r0, r0, ip, lsl r0
 47c:	000001fc 	strdeq	r0, [r0], -ip
 480:	20001f24 	andcs	r1, r0, r4, lsr #30
 484:	000000d6 	ldrdeq	r0, [r0], -r6
 488:	40080e41 	andmi	r0, r8, r1, asr #28
 48c:	8e400287 	cdphi	2, 4, cr0, cr0, cr7, {4}
 490:	200e4101 	andcs	r4, lr, r1, lsl #2
 494:	00070d41 	andeq	r0, r7, r1, asr #26
 498:	00000024 	andeq	r0, r0, r4, lsr #32
 49c:	000001fc 	strdeq	r0, [r0], -ip
 4a0:	20001ffa 	strdcs	r1, [r0], -sl
 4a4:	0000011a 	andeq	r0, r0, sl, lsl r1
 4a8:	40100e41 	andsmi	r0, r0, r1, asr #28
 4ac:	85400484 	strbhi	r0, [r0, #-1156]	; 0xfffffb7c
 4b0:	02874003 	addeq	r4, r7, #3
 4b4:	41018e40 	tstmi	r1, r0, asr #28
 4b8:	0d41380e 	stcleq	8, cr3, [r1, #-56]	; 0xffffffc8
 4bc:	00000007 	andeq	r0, r0, r7
 4c0:	0000001c 	andeq	r0, r0, ip, lsl r0
 4c4:	000001fc 	strdeq	r0, [r0], -ip
 4c8:	20002114 	andcs	r2, r0, r4, lsl r1
 4cc:	00000052 	andeq	r0, r0, r2, asr r0
 4d0:	40080e41 	andmi	r0, r8, r1, asr #28
 4d4:	8e400287 	cdphi	2, 4, cr0, cr0, cr7, {4}
 4d8:	200e4101 	andcs	r4, lr, r1, lsl #2
 4dc:	00070d41 	andeq	r0, r7, r1, asr #26
 4e0:	0000001c 	andeq	r0, r0, ip, lsl r0
 4e4:	000001fc 	strdeq	r0, [r0], -ip
 4e8:	20002166 	andcs	r2, r0, r6, ror #2
 4ec:	00000052 	andeq	r0, r0, r2, asr r0
 4f0:	40080e41 	andmi	r0, r8, r1, asr #28
 4f4:	8e400287 	cdphi	2, 4, cr0, cr0, cr7, {4}
 4f8:	200e4101 	andcs	r4, lr, r1, lsl #2
 4fc:	00070d41 	andeq	r0, r7, r1, asr #26
 500:	00000020 	andeq	r0, r0, r0, lsr #32
 504:	000001fc 	strdeq	r0, [r0], -ip
 508:	200021b8 			; <UNDEFINED> instruction: 0x200021b8
 50c:	00000130 	andeq	r0, r0, r0, lsr r1
 510:	400c0e41 	andmi	r0, ip, r1, asr #28
 514:	87400384 	strbhi	r0, [r0, -r4, lsl #7]
 518:	018e4002 	orreq	r4, lr, r2
 51c:	41280e41 			; <UNDEFINED> instruction: 0x41280e41
 520:	0000070d 	andeq	r0, r0, sp, lsl #14
 524:	0000001c 	andeq	r0, r0, ip, lsl r0
 528:	000001fc 	strdeq	r0, [r0], -ip
 52c:	200022e8 	andcs	r2, r0, r8, ror #5
 530:	00000108 	andeq	r0, r0, r8, lsl #2
 534:	40080e41 	andmi	r0, r8, r1, asr #28
 538:	8e400287 	cdphi	2, 4, cr0, cr0, cr7, {4}
 53c:	100e4101 	andne	r4, lr, r1, lsl #2
 540:	00070d41 	andeq	r0, r7, r1, asr #26
 544:	0000001c 	andeq	r0, r0, ip, lsl r0
 548:	000001fc 	strdeq	r0, [r0], -ip
 54c:	200023f0 	strdcs	r2, [r0], -r0
 550:	00000082 	andeq	r0, r0, r2, lsl #1
 554:	40080e41 	andmi	r0, r8, r1, asr #28
 558:	8e400287 	cdphi	2, 4, cr0, cr0, cr7, {4}
 55c:	200e4101 	andcs	r4, lr, r1, lsl #2
 560:	18070c41 	stmdane	r7, {r0, r6, sl, fp}
 564:	0000001c 	andeq	r0, r0, ip, lsl r0
 568:	000001fc 	strdeq	r0, [r0], -ip
 56c:	20002472 	andcs	r2, r0, r2, ror r4
 570:	0000006a 	andeq	r0, r0, sl, rrx
 574:	40080e41 	andmi	r0, r8, r1, asr #28
 578:	8e400287 	cdphi	2, 4, cr0, cr0, cr7, {4}
 57c:	100e4101 	andne	r4, lr, r1, lsl #2
 580:	00070d41 	andeq	r0, r7, r1, asr #26
 584:	0000000c 	andeq	r0, r0, ip
 588:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
 58c:	7c020001 	stcvc	0, cr0, [r2], {1}
 590:	000d0c0e 	andeq	r0, sp, lr, lsl #24
 594:	0000001c 	andeq	r0, r0, ip, lsl r0
 598:	00000584 	andeq	r0, r0, r4, lsl #11
 59c:	200024dc 	ldrdcs	r2, [r0], -ip
 5a0:	00000028 	andeq	r0, r0, r8, lsr #32
 5a4:	40080e41 	andmi	r0, r8, r1, asr #28
 5a8:	8e400287 	cdphi	2, 4, cr0, cr0, cr7, {4}
 5ac:	180e4101 	stmdane	lr, {r0, r8, lr}
 5b0:	00070d41 	andeq	r0, r7, r1, asr #26
 5b4:	0000000c 	andeq	r0, r0, ip
 5b8:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
 5bc:	7c020001 	stcvc	0, cr0, [r2], {1}
 5c0:	000d0c0e 	andeq	r0, sp, lr, lsl #24
 5c4:	0000001c 	andeq	r0, r0, ip, lsl r0
 5c8:	000005b4 			; <UNDEFINED> instruction: 0x000005b4
 5cc:	20002504 	andcs	r2, r0, r4, lsl #10
 5d0:	00000028 	andeq	r0, r0, r8, lsr #32
 5d4:	40080e41 	andmi	r0, r8, r1, asr #28
 5d8:	8e400287 	cdphi	2, 4, cr0, cr0, cr7, {4}
 5dc:	180e4101 	stmdane	lr, {r0, r8, lr}
 5e0:	00070d41 	andeq	r0, r7, r1, asr #26
 5e4:	0000000c 	andeq	r0, r0, ip
 5e8:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
 5ec:	7c020001 	stcvc	0, cr0, [r2], {1}
 5f0:	000d0c0e 	andeq	r0, sp, lr, lsl #24
 5f4:	00000018 	andeq	r0, r0, r8, lsl r0
 5f8:	000005e4 	andeq	r0, r0, r4, ror #11
 5fc:	2000252c 	andcs	r2, r0, ip, lsr #10
 600:	00000018 	andeq	r0, r0, r8, lsl r0
 604:	40080e41 	andmi	r0, r8, r1, asr #28
 608:	8e400287 	cdphi	2, 4, cr0, cr0, cr7, {4}
 60c:	070d4101 	streq	r4, [sp, -r1, lsl #2]
 610:	00000018 	andeq	r0, r0, r8, lsl r0
 614:	000005e4 	andeq	r0, r0, r4, ror #11
 618:	20002544 	andcs	r2, r0, r4, asr #10
 61c:	00000020 	andeq	r0, r0, r0, lsr #32
 620:	40080e41 	andmi	r0, r8, r1, asr #28
 624:	8e400287 	cdphi	2, 4, cr0, cr0, cr7, {4}
 628:	070d4101 	streq	r4, [sp, -r1, lsl #2]
 62c:	00000020 	andeq	r0, r0, r0, lsr #32
 630:	000005e4 	andeq	r0, r0, r4, ror #11
 634:	20002564 	andcs	r2, r0, r4, ror #10
 638:	00000034 	andeq	r0, r0, r4, lsr r0
 63c:	400c0e41 	andmi	r0, ip, r1, asr #28
 640:	87400384 	strbhi	r0, [r0, -r4, lsl #7]
 644:	018e4002 	orreq	r4, lr, r2
 648:	41200e41 			; <UNDEFINED> instruction: 0x41200e41
 64c:	0000070d 	andeq	r0, r0, sp, lsl #14
 650:	0000000c 	andeq	r0, r0, ip
 654:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
 658:	7c020001 	stcvc	0, cr0, [r2], {1}
 65c:	000d0c0e 	andeq	r0, sp, lr, lsl #24
 660:	0000001c 	andeq	r0, r0, ip, lsl r0
 664:	00000650 	andeq	r0, r0, r0, asr r6
 668:	20002598 	mulcs	r0, r8, r5
 66c:	00000044 	andeq	r0, r0, r4, asr #32
 670:	40080e41 	andmi	r0, r8, r1, asr #28
 674:	8e400287 	cdphi	2, 4, cr0, cr0, cr7, {4}
 678:	180e4101 	stmdane	lr, {r0, r8, lr}
 67c:	00070d41 	andeq	r0, r7, r1, asr #26
 680:	0000001c 	andeq	r0, r0, ip, lsl r0
 684:	00000650 	andeq	r0, r0, r0, asr r6
 688:	200025dc 	ldrdcs	r2, [r0], -ip
 68c:	00000050 	andeq	r0, r0, r0, asr r0
 690:	40080e41 	andmi	r0, r8, r1, asr #28
 694:	8e400287 	cdphi	2, 4, cr0, cr0, cr7, {4}
 698:	180e4101 	stmdane	lr, {r0, r8, lr}
 69c:	00070d41 	andeq	r0, r7, r1, asr #26
 6a0:	0000001c 	andeq	r0, r0, ip, lsl r0
 6a4:	00000650 	andeq	r0, r0, r0, asr r6
 6a8:	2000262c 	andcs	r2, r0, ip, lsr #12
 6ac:	0000002a 	andeq	r0, r0, sl, lsr #32
 6b0:	40080e41 	andmi	r0, r8, r1, asr #28
 6b4:	8e400287 	cdphi	2, 4, cr0, cr0, cr7, {4}
 6b8:	100e4101 	andne	r4, lr, r1, lsl #2
 6bc:	00070d41 	andeq	r0, r7, r1, asr #26
 6c0:	0000001c 	andeq	r0, r0, ip, lsl r0
 6c4:	00000650 	andeq	r0, r0, r0, asr r6
 6c8:	20002656 	andcs	r2, r0, r6, asr r6
 6cc:	0000002a 	andeq	r0, r0, sl, lsr #32
 6d0:	40080e41 	andmi	r0, r8, r1, asr #28
 6d4:	8e400287 	cdphi	2, 4, cr0, cr0, cr7, {4}
 6d8:	100e4101 	andne	r4, lr, r1, lsl #2
 6dc:	00070d41 	andeq	r0, r7, r1, asr #26
 6e0:	00000020 	andeq	r0, r0, r0, lsr #32
 6e4:	00000650 	andeq	r0, r0, r0, asr r6
 6e8:	20002680 	andcs	r2, r0, r0, lsl #13
 6ec:	00000054 	andeq	r0, r0, r4, asr r0
 6f0:	400c0e41 	andmi	r0, ip, r1, asr #28
 6f4:	87400384 	strbhi	r0, [r0, -r4, lsl #7]
 6f8:	018e4002 	orreq	r4, lr, r2
 6fc:	41180e41 	tstmi	r8, r1, asr #28
 700:	0000070d 	andeq	r0, r0, sp, lsl #14
 704:	00000020 	andeq	r0, r0, r0, lsr #32
 708:	00000650 	andeq	r0, r0, r0, asr r6
 70c:	200026d4 	ldrdcs	r2, [r0], -r4
 710:	00000054 	andeq	r0, r0, r4, asr r0
 714:	400c0e41 	andmi	r0, ip, r1, asr #28
 718:	87400384 	strbhi	r0, [r0, -r4, lsl #7]
 71c:	018e4002 	orreq	r4, lr, r2
 720:	41180e41 	tstmi	r8, r1, asr #28
 724:	0000070d 	andeq	r0, r0, sp, lsl #14
 728:	0000001c 	andeq	r0, r0, ip, lsl r0
 72c:	00000650 	andeq	r0, r0, r0, asr r6
 730:	20002728 	andcs	r2, r0, r8, lsr #14
 734:	00000030 	andeq	r0, r0, r0, lsr r0
 738:	40080e41 	andmi	r0, r8, r1, asr #28
 73c:	8e400287 	cdphi	2, 4, cr0, cr0, cr7, {4}
 740:	100e4101 	andne	r4, lr, r1, lsl #2
 744:	00070d41 	andeq	r0, r7, r1, asr #26
 748:	0000001c 	andeq	r0, r0, ip, lsl r0
 74c:	00000650 	andeq	r0, r0, r0, asr r6
 750:	20002758 	andcs	r2, r0, r8, asr r7
 754:	00000034 	andeq	r0, r0, r4, lsr r0
 758:	40080e41 	andmi	r0, r8, r1, asr #28
 75c:	8e400287 	cdphi	2, 4, cr0, cr0, cr7, {4}
 760:	100e4101 	andne	r4, lr, r1, lsl #2
 764:	00070d41 	andeq	r0, r7, r1, asr #26
 768:	0000001c 	andeq	r0, r0, ip, lsl r0
 76c:	00000650 	andeq	r0, r0, r0, asr r6
 770:	2000278c 	andcs	r2, r0, ip, lsl #15
 774:	0000003c 	andeq	r0, r0, ip, lsr r0
 778:	40080e41 	andmi	r0, r8, r1, asr #28
 77c:	8e400287 	cdphi	2, 4, cr0, cr0, cr7, {4}
 780:	100e4101 	andne	r4, lr, r1, lsl #2
 784:	00070d41 	andeq	r0, r7, r1, asr #26
 788:	0000001c 	andeq	r0, r0, ip, lsl r0
 78c:	00000650 	andeq	r0, r0, r0, asr r6
 790:	200027c8 	andcs	r2, r0, r8, asr #15
 794:	00000050 	andeq	r0, r0, r0, asr r0
 798:	40080e41 	andmi	r0, r8, r1, asr #28
 79c:	8e400287 	cdphi	2, 4, cr0, cr0, cr7, {4}
 7a0:	180e4101 	stmdane	lr, {r0, r8, lr}
 7a4:	00070d41 	andeq	r0, r7, r1, asr #26
 7a8:	00000018 	andeq	r0, r0, r8, lsl r0
 7ac:	00000650 	andeq	r0, r0, r0, asr r6
 7b0:	20002818 	andcs	r2, r0, r8, lsl r8
 7b4:	0000009a 	muleq	r0, sl, r0
 7b8:	40080e41 	andmi	r0, r8, r1, asr #28
 7bc:	8e400287 	cdphi	2, 4, cr0, cr0, cr7, {4}
 7c0:	070d4101 	streq	r4, [sp, -r1, lsl #2]
 7c4:	00000018 	andeq	r0, r0, r8, lsl r0
 7c8:	00000650 	andeq	r0, r0, r0, asr r6
 7cc:	200028b2 			; <UNDEFINED> instruction: 0x200028b2
 7d0:	0000001a 	andeq	r0, r0, sl, lsl r0
 7d4:	40080e41 	andmi	r0, r8, r1, asr #28
 7d8:	8e400287 	cdphi	2, 4, cr0, cr0, cr7, {4}
 7dc:	070d4101 	streq	r4, [sp, -r1, lsl #2]
 7e0:	00000018 	andeq	r0, r0, r8, lsl r0
 7e4:	00000650 	andeq	r0, r0, r0, asr r6
 7e8:	200028cc 	andcs	r2, r0, ip, asr #17
 7ec:	00000012 	andeq	r0, r0, r2, lsl r0
 7f0:	40080e41 	andmi	r0, r8, r1, asr #28
 7f4:	8e400287 	cdphi	2, 4, cr0, cr0, cr7, {4}
 7f8:	070d4101 	streq	r4, [sp, -r1, lsl #2]
 7fc:	00000020 	andeq	r0, r0, r0, lsr #32
 800:	00000650 	andeq	r0, r0, r0, asr r6
 804:	200028de 	ldrdcs	r2, [r0], -lr
 808:	0000006a 	andeq	r0, r0, sl, rrx
 80c:	400c0e41 	andmi	r0, ip, r1, asr #28
 810:	87400384 	strbhi	r0, [r0, -r4, lsl #7]
 814:	018e4002 	orreq	r4, lr, r2
 818:	41300e41 	teqmi	r0, r1, asr #28
 81c:	0000070d 	andeq	r0, r0, sp, lsl #14
 820:	0000001c 	andeq	r0, r0, ip, lsl r0
 824:	00000650 	andeq	r0, r0, r0, asr r6
 828:	20002948 	andcs	r2, r0, r8, asr #18
 82c:	0000005e 	andeq	r0, r0, lr, asr r0
 830:	40080e41 	andmi	r0, r8, r1, asr #28
 834:	8e400287 	cdphi	2, 4, cr0, cr0, cr7, {4}
 838:	100e4101 	andne	r4, lr, r1, lsl #2
 83c:	00070d41 	andeq	r0, r7, r1, asr #26
 840:	0000001c 	andeq	r0, r0, ip, lsl r0
 844:	00000650 	andeq	r0, r0, r0, asr r6
 848:	200029a6 	andcs	r2, r0, r6, lsr #19
 84c:	0000008e 	andeq	r0, r0, lr, lsl #1
 850:	40080e41 	andmi	r0, r8, r1, asr #28
 854:	8e400287 	cdphi	2, 4, cr0, cr0, cr7, {4}
 858:	200e4101 	andcs	r4, lr, r1, lsl #2
 85c:	00070d41 	andeq	r0, r7, r1, asr #26
 860:	00000020 	andeq	r0, r0, r0, lsr #32
 864:	00000650 	andeq	r0, r0, r0, asr r6
 868:	20002a34 	andcs	r2, r0, r4, lsr sl
 86c:	00000084 	andeq	r0, r0, r4, lsl #1
 870:	400c0e41 	andmi	r0, ip, r1, asr #28
 874:	87400384 	strbhi	r0, [r0, -r4, lsl #7]
 878:	018e4002 	orreq	r4, lr, r2
 87c:	41380e41 	teqmi	r8, r1, asr #28
 880:	0000070d 	andeq	r0, r0, sp, lsl #14
 884:	0000000c 	andeq	r0, r0, ip
 888:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
 88c:	7c020001 	stcvc	0, cr0, [r2], {1}
 890:	000d0c0e 	andeq	r0, sp, lr, lsl #24
 894:	0000001c 	andeq	r0, r0, ip, lsl r0
 898:	00000884 	andeq	r0, r0, r4, lsl #17
 89c:	20002ab8 			; <UNDEFINED> instruction: 0x20002ab8
 8a0:	0000005a 	andeq	r0, r0, sl, asr r0
 8a4:	40080e41 	andmi	r0, r8, r1, asr #28
 8a8:	8e400287 	cdphi	2, 4, cr0, cr0, cr7, {4}
 8ac:	180e4101 	stmdane	lr, {r0, r8, lr}
 8b0:	00070d41 	andeq	r0, r7, r1, asr #26
 8b4:	0000001c 	andeq	r0, r0, ip, lsl r0
 8b8:	00000884 	andeq	r0, r0, r4, lsl #17
 8bc:	20002b12 	andcs	r2, r0, r2, lsl fp
 8c0:	0000003a 	andeq	r0, r0, sl, lsr r0
 8c4:	40080e41 	andmi	r0, r8, r1, asr #28
 8c8:	8e400287 	cdphi	2, 4, cr0, cr0, cr7, {4}
 8cc:	180e4101 	stmdane	lr, {r0, r8, lr}
 8d0:	00070d41 	andeq	r0, r7, r1, asr #26
 8d4:	0000000c 	andeq	r0, r0, ip
 8d8:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
 8dc:	7c020001 	stcvc	0, cr0, [r2], {1}
 8e0:	000d0c0e 	andeq	r0, sp, lr, lsl #24
 8e4:	0000001c 	andeq	r0, r0, ip, lsl r0
 8e8:	000008d4 	ldrdeq	r0, [r0], -r4
 8ec:	20002b4c 	andcs	r2, r0, ip, asr #22
 8f0:	00000074 	andeq	r0, r0, r4, ror r0
 8f4:	40080e41 	andmi	r0, r8, r1, asr #28
 8f8:	8e400287 	cdphi	2, 4, cr0, cr0, cr7, {4}
 8fc:	180e4101 	stmdane	lr, {r0, r8, lr}
 900:	00070d41 	andeq	r0, r7, r1, asr #26
 904:	00000020 	andeq	r0, r0, r0, lsr #32
 908:	000008d4 	ldrdeq	r0, [r0], -r4
 90c:	20002bc0 	andcs	r2, r0, r0, asr #23
 910:	00000074 	andeq	r0, r0, r4, ror r0
 914:	400c0e41 	andmi	r0, ip, r1, asr #28
 918:	87400384 	strbhi	r0, [r0, -r4, lsl #7]
 91c:	018e4002 	orreq	r4, lr, r2
 920:	41180e41 	tstmi	r8, r1, asr #28
 924:	0000070d 	andeq	r0, r0, sp, lsl #14
 928:	0000000c 	andeq	r0, r0, ip
 92c:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
 930:	7c020001 	stcvc	0, cr0, [r2], {1}
 934:	000d0c0e 	andeq	r0, sp, lr, lsl #24
 938:	0000001c 	andeq	r0, r0, ip, lsl r0
 93c:	00000928 	andeq	r0, r0, r8, lsr #18
 940:	20002c34 	andcs	r2, r0, r4, lsr ip
 944:	00000074 	andeq	r0, r0, r4, ror r0
 948:	40080e41 	andmi	r0, r8, r1, asr #28
 94c:	8e400287 	cdphi	2, 4, cr0, cr0, cr7, {4}
 950:	180e4101 	stmdane	lr, {r0, r8, lr}
 954:	00070d41 	andeq	r0, r7, r1, asr #26
 958:	00000020 	andeq	r0, r0, r0, lsr #32
 95c:	00000928 	andeq	r0, r0, r8, lsr #18
 960:	20002ca8 	andcs	r2, r0, r8, lsr #25
 964:	00000074 	andeq	r0, r0, r4, ror r0
 968:	400c0e41 	andmi	r0, ip, r1, asr #28
 96c:	87400384 	strbhi	r0, [r0, -r4, lsl #7]
 970:	018e4002 	orreq	r4, lr, r2
 974:	41180e41 	tstmi	r8, r1, asr #28
 978:	0000070d 	andeq	r0, r0, sp, lsl #14
 97c:	0000000c 	andeq	r0, r0, ip
 980:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
 984:	7c010001 	stcvc	0, cr0, [r1], {1}
 988:	000d0c0e 	andeq	r0, sp, lr, lsl #24
 98c:	0000000c 	andeq	r0, r0, ip
 990:	0000097c 	andeq	r0, r0, ip, ror r9
 994:	20002d1d 	andcs	r2, r0, sp, lsl sp
 998:	000001cc 	andeq	r0, r0, ip, asr #3
