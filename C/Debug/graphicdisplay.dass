
./Debug/graphicdisplay.elf:     file format elf32-littlearm


Disassembly of section .text:

20000000 <startup>:
#endif
}

void startup ( void )
{
__asm volatile(
20000000:	4802      	ldr	r0, [pc, #8]	; (2000000c <_exit+0x4>)
20000002:	4685      	mov	sp, r0
20000004:	f000 f8fa 	bl	200001fc <main>

20000008 <_exit>:
20000008:	e7fe      	b.n	20000008 <_exit>
	" LDR R0,=0x2001C000\n"		/* set stack */
	" MOV SP,R0\n"
	" BL main\n"				/* call main */
	"_exit: B .\n"				/* never return */
	) ;
}
2000000a:	46c0      	nop			; (mov r8, r8)
2000000c:	2001c000 	andcs	ip, r1, r0

20000010 <init_app>:
void init_app( void ) {
20000010:	b580      	push	{r7, lr}
20000012:	af00      	add	r7, sp, #0
	*portModer = 0x55555555;
20000014:	4b05      	ldr	r3, [pc, #20]	; (2000002c <init_app+0x1c>)
20000016:	4a06      	ldr	r2, [pc, #24]	; (20000030 <init_app+0x20>)
20000018:	601a      	str	r2, [r3, #0]
	set_up_DIL();
2000001a:	f003 fe8d 	bl	20003d38 <set_up_DIL>
	graphic_initialize();
2000001e:	f003 f98d 	bl	2000333c <graphic_initialize>
	graphic_clear_screen();
20000022:	f003 f9c2 	bl	200033aa <graphic_clear_screen>
}
20000026:	46c0      	nop			; (mov r8, r8)
20000028:	46bd      	mov	sp, r7
2000002a:	bd80      	pop	{r7, pc}
2000002c:	40021000 	andmi	r1, r2, r0
20000030:	55555555 	ldrbpl	r5, [r5, #-1365]	; 0xfffffaab

20000034 <initSprites>:
sprite tempTitleLight;
sprite tempPressBlack;
sprite tempPressGray;
sprite tempPressLight;

void initSprites( void ) {
20000034:	b580      	push	{r7, lr}
20000036:	b08a      	sub	sp, #40	; 0x28
20000038:	af00      	add	r7, sp, #0
	sprite *monsterPointer = &tempMonster;
2000003a:	4b49      	ldr	r3, [pc, #292]	; (20000160 <initSprites+0x12c>)
2000003c:	627b      	str	r3, [r7, #36]	; 0x24
	load_sprite(monsterPointer, monster_black_bits, monster_black_width, monster_black_height);
2000003e:	4949      	ldr	r1, [pc, #292]	; (20000164 <initSprites+0x130>)
20000040:	6a78      	ldr	r0, [r7, #36]	; 0x24
20000042:	231e      	movs	r3, #30
20000044:	221e      	movs	r2, #30
20000046:	f003 fe63 	bl	20003d10 <load_sprite>
	monster = monsterPointer;
2000004a:	4b47      	ldr	r3, [pc, #284]	; (20000168 <initSprites+0x134>)
2000004c:	6a7a      	ldr	r2, [r7, #36]	; 0x24
2000004e:	601a      	str	r2, [r3, #0]
	
	sprite *monsterPointer2 = &tempMonsterLight;
20000050:	4b46      	ldr	r3, [pc, #280]	; (2000016c <initSprites+0x138>)
20000052:	623b      	str	r3, [r7, #32]
	load_sprite(monsterPointer2, monster_light_bits, monster_light_width, monster_light_height);
20000054:	4946      	ldr	r1, [pc, #280]	; (20000170 <initSprites+0x13c>)
20000056:	6a38      	ldr	r0, [r7, #32]
20000058:	231e      	movs	r3, #30
2000005a:	221e      	movs	r2, #30
2000005c:	f003 fe58 	bl	20003d10 <load_sprite>
	monsterLight = monsterPointer2;
20000060:	4b44      	ldr	r3, [pc, #272]	; (20000174 <initSprites+0x140>)
20000062:	6a3a      	ldr	r2, [r7, #32]
20000064:	601a      	str	r2, [r3, #0]

	sprite *monsterPointer3 = &tempMonsterGray;
20000066:	4b44      	ldr	r3, [pc, #272]	; (20000178 <initSprites+0x144>)
20000068:	61fb      	str	r3, [r7, #28]
	load_sprite(monsterPointer3, monster_gray_bits, monster_gray_width, monster_gray_height);
2000006a:	4944      	ldr	r1, [pc, #272]	; (2000017c <initSprites+0x148>)
2000006c:	69f8      	ldr	r0, [r7, #28]
2000006e:	231e      	movs	r3, #30
20000070:	221e      	movs	r2, #30
20000072:	f003 fe4d 	bl	20003d10 <load_sprite>
	monsterGray = monsterPointer3;
20000076:	4b42      	ldr	r3, [pc, #264]	; (20000180 <initSprites+0x14c>)
20000078:	69fa      	ldr	r2, [r7, #28]
2000007a:	601a      	str	r2, [r3, #0]

	sprite *pointer4 = &tempBg;
2000007c:	4b41      	ldr	r3, [pc, #260]	; (20000184 <initSprites+0x150>)
2000007e:	61bb      	str	r3, [r7, #24]
	load_sprite(pointer4, bg_bits, bg_width, bg_height);
20000080:	4941      	ldr	r1, [pc, #260]	; (20000188 <initSprites+0x154>)
20000082:	69b8      	ldr	r0, [r7, #24]
20000084:	2340      	movs	r3, #64	; 0x40
20000086:	2280      	movs	r2, #128	; 0x80
20000088:	f003 fe42 	bl	20003d10 <load_sprite>
	bg = pointer4;
2000008c:	4b3f      	ldr	r3, [pc, #252]	; (2000018c <initSprites+0x158>)
2000008e:	69ba      	ldr	r2, [r7, #24]
20000090:	601a      	str	r2, [r3, #0]
	
	sprite *pointer5 = &tempCastleBlack;
20000092:	4b3f      	ldr	r3, [pc, #252]	; (20000190 <initSprites+0x15c>)
20000094:	617b      	str	r3, [r7, #20]
	load_sprite(pointer5, castle_black_bits, castle_black_width, castle_black_height);
20000096:	493f      	ldr	r1, [pc, #252]	; (20000194 <initSprites+0x160>)
20000098:	6978      	ldr	r0, [r7, #20]
2000009a:	2340      	movs	r3, #64	; 0x40
2000009c:	2280      	movs	r2, #128	; 0x80
2000009e:	f003 fe37 	bl	20003d10 <load_sprite>
	castleBlack = pointer5;
200000a2:	4b3d      	ldr	r3, [pc, #244]	; (20000198 <initSprites+0x164>)
200000a4:	697a      	ldr	r2, [r7, #20]
200000a6:	601a      	str	r2, [r3, #0]
	
	sprite *pointer6 = &tempCastleGray;
200000a8:	4b3c      	ldr	r3, [pc, #240]	; (2000019c <initSprites+0x168>)
200000aa:	613b      	str	r3, [r7, #16]
	load_sprite(pointer6, castle_gray_bits, castle_black_width, castle_black_height);
200000ac:	493c      	ldr	r1, [pc, #240]	; (200001a0 <initSprites+0x16c>)
200000ae:	6938      	ldr	r0, [r7, #16]
200000b0:	2340      	movs	r3, #64	; 0x40
200000b2:	2280      	movs	r2, #128	; 0x80
200000b4:	f003 fe2c 	bl	20003d10 <load_sprite>
	castleGray = pointer6;
200000b8:	4b3a      	ldr	r3, [pc, #232]	; (200001a4 <initSprites+0x170>)
200000ba:	693a      	ldr	r2, [r7, #16]
200000bc:	601a      	str	r2, [r3, #0]
	
	sprite *pointer7 = &tempCastleLight;
200000be:	4b3a      	ldr	r3, [pc, #232]	; (200001a8 <initSprites+0x174>)
200000c0:	60fb      	str	r3, [r7, #12]
	load_sprite(pointer7, castle_light_bits, castle_black_width, castle_black_height);
200000c2:	493a      	ldr	r1, [pc, #232]	; (200001ac <initSprites+0x178>)
200000c4:	68f8      	ldr	r0, [r7, #12]
200000c6:	2340      	movs	r3, #64	; 0x40
200000c8:	2280      	movs	r2, #128	; 0x80
200000ca:	f003 fe21 	bl	20003d10 <load_sprite>
	castleLight = pointer7;
200000ce:	4b38      	ldr	r3, [pc, #224]	; (200001b0 <initSprites+0x17c>)
200000d0:	68fa      	ldr	r2, [r7, #12]
200000d2:	601a      	str	r2, [r3, #0]
	
	sprite *pointer8 = &tempTitleLight;
200000d4:	4b37      	ldr	r3, [pc, #220]	; (200001b4 <initSprites+0x180>)
200000d6:	60bb      	str	r3, [r7, #8]
	load_sprite(pointer8, title_light_bits, title_black_width, title_black_height);
200000d8:	4937      	ldr	r1, [pc, #220]	; (200001b8 <initSprites+0x184>)
200000da:	68b8      	ldr	r0, [r7, #8]
200000dc:	231e      	movs	r3, #30
200000de:	2232      	movs	r2, #50	; 0x32
200000e0:	f003 fe16 	bl	20003d10 <load_sprite>
	titleLight = pointer8;
200000e4:	4b35      	ldr	r3, [pc, #212]	; (200001bc <initSprites+0x188>)
200000e6:	68ba      	ldr	r2, [r7, #8]
200000e8:	601a      	str	r2, [r3, #0]
	sprite *pointer9 = &tempTitleGray;
200000ea:	4b35      	ldr	r3, [pc, #212]	; (200001c0 <initSprites+0x18c>)
200000ec:	607b      	str	r3, [r7, #4]
	load_sprite(pointer9, title_gray_bits, title_black_width, title_black_height);
200000ee:	4935      	ldr	r1, [pc, #212]	; (200001c4 <initSprites+0x190>)
200000f0:	6878      	ldr	r0, [r7, #4]
200000f2:	231e      	movs	r3, #30
200000f4:	2232      	movs	r2, #50	; 0x32
200000f6:	f003 fe0b 	bl	20003d10 <load_sprite>
	titleGray = pointer9;
200000fa:	4b33      	ldr	r3, [pc, #204]	; (200001c8 <initSprites+0x194>)
200000fc:	687a      	ldr	r2, [r7, #4]
200000fe:	601a      	str	r2, [r3, #0]
	sprite *pointer10 = &tempTitleBlack;
20000100:	4b32      	ldr	r3, [pc, #200]	; (200001cc <initSprites+0x198>)
20000102:	603b      	str	r3, [r7, #0]
	load_sprite(pointer10, title_black_bits, title_black_width, title_black_height);
20000104:	4932      	ldr	r1, [pc, #200]	; (200001d0 <initSprites+0x19c>)
20000106:	6838      	ldr	r0, [r7, #0]
20000108:	231e      	movs	r3, #30
2000010a:	2232      	movs	r2, #50	; 0x32
2000010c:	f003 fe00 	bl	20003d10 <load_sprite>
	titleBlack = pointer10;	
20000110:	4b30      	ldr	r3, [pc, #192]	; (200001d4 <initSprites+0x1a0>)
20000112:	683a      	ldr	r2, [r7, #0]
20000114:	601a      	str	r2, [r3, #0]
	
	pointer8 = &tempPressLight;
20000116:	4b30      	ldr	r3, [pc, #192]	; (200001d8 <initSprites+0x1a4>)
20000118:	60bb      	str	r3, [r7, #8]
	load_sprite(pointer8, press_light_bits, press_black_width, press_black_height);
2000011a:	4930      	ldr	r1, [pc, #192]	; (200001dc <initSprites+0x1a8>)
2000011c:	68b8      	ldr	r0, [r7, #8]
2000011e:	2323      	movs	r3, #35	; 0x23
20000120:	223c      	movs	r2, #60	; 0x3c
20000122:	f003 fdf5 	bl	20003d10 <load_sprite>
	pressLight = pointer8;
20000126:	4b2e      	ldr	r3, [pc, #184]	; (200001e0 <initSprites+0x1ac>)
20000128:	68ba      	ldr	r2, [r7, #8]
2000012a:	601a      	str	r2, [r3, #0]
	pointer9 = &tempPressGray;
2000012c:	4b2d      	ldr	r3, [pc, #180]	; (200001e4 <initSprites+0x1b0>)
2000012e:	607b      	str	r3, [r7, #4]
	load_sprite(pointer9, press_gray_bits, press_black_width, press_black_height);
20000130:	492d      	ldr	r1, [pc, #180]	; (200001e8 <initSprites+0x1b4>)
20000132:	6878      	ldr	r0, [r7, #4]
20000134:	2323      	movs	r3, #35	; 0x23
20000136:	223c      	movs	r2, #60	; 0x3c
20000138:	f003 fdea 	bl	20003d10 <load_sprite>
	pressGray = pointer9;
2000013c:	4b2b      	ldr	r3, [pc, #172]	; (200001ec <initSprites+0x1b8>)
2000013e:	687a      	ldr	r2, [r7, #4]
20000140:	601a      	str	r2, [r3, #0]
	pointer10 = &tempPressBlack;
20000142:	4b2b      	ldr	r3, [pc, #172]	; (200001f0 <initSprites+0x1bc>)
20000144:	603b      	str	r3, [r7, #0]
	load_sprite(pointer10, press_black_bits, press_black_width, press_black_height);
20000146:	492b      	ldr	r1, [pc, #172]	; (200001f4 <initSprites+0x1c0>)
20000148:	6838      	ldr	r0, [r7, #0]
2000014a:	2323      	movs	r3, #35	; 0x23
2000014c:	223c      	movs	r2, #60	; 0x3c
2000014e:	f003 fddf 	bl	20003d10 <load_sprite>
	pressBlack = pointer10;	
20000152:	4b29      	ldr	r3, [pc, #164]	; (200001f8 <initSprites+0x1c4>)
20000154:	683a      	ldr	r2, [r7, #0]
20000156:	601a      	str	r2, [r3, #0]
	
	
}
20000158:	46c0      	nop			; (mov r8, r8)
2000015a:	46bd      	mov	sp, r7
2000015c:	b00a      	add	sp, #40	; 0x28
2000015e:	bd80      	pop	{r7, pc}
20000160:	20004948 	andcs	r4, r0, r8, asr #18
20000164:	20007238 	andcs	r7, r0, r8, lsr r2
20000168:	2000491c 	andcs	r4, r0, ip, lsl r9
2000016c:	200049a0 	andcs	r4, r0, r0, lsr #19
20000170:	200072b0 			; <UNDEFINED> instruction: 0x200072b0
20000174:	200049c8 	andcs	r4, r0, r8, asr #19
20000178:	20004968 	andcs	r4, r0, r8, ror #18
2000017c:	20007328 	andcs	r7, r0, r8, lsr #6
20000180:	200049dc 	ldrdcs	r4, [r0], -ip
20000184:	200049e0 	andcs	r4, r0, r0, ror #19
20000188:	20008564 	andcs	r8, r0, r4, ror #10
2000018c:	20004964 	andcs	r4, r0, r4, ror #18
20000190:	20004920 	andcs	r4, r0, r0, lsr #18
20000194:	200076e8 	andcs	r7, r0, r8, ror #13
20000198:	20004944 	andcs	r4, r0, r4, asr #18
2000019c:	200049bc 			; <UNDEFINED> instruction: 0x200049bc
200001a0:	20007ae8 	andcs	r7, r0, r8, ror #21
200001a4:	200049d0 	ldrdcs	r4, [r0], -r0
200001a8:	20004990 	mulcs	r0, r0, r9
200001ac:	20007ee8 	andcs	r7, r0, r8, ror #29
200001b0:	20004980 	andcs	r4, r0, r0, lsl #19
200001b4:	20004974 	andcs	r4, r0, r4, ror r9
200001b8:	200082e8 	andcs	r8, r0, r8, ror #5
200001bc:	200049cc 	andcs	r4, r0, ip, asr #19
200001c0:	20004938 	andcs	r4, r0, r8, lsr r9
200001c4:	200083bc 			; <UNDEFINED> instruction: 0x200083bc
200001c8:	200049b8 			; <UNDEFINED> instruction: 0x200049b8
200001cc:	20004958 	andcs	r4, r0, r8, asr r9
200001d0:	20008490 	mulcs	r0, r0, r4
200001d4:	200049ec 	andcs	r4, r0, ip, ror #19
200001d8:	20004984 	andcs	r4, r0, r4, lsl #19
200001dc:	200074b8 			; <UNDEFINED> instruction: 0x200074b8
200001e0:	20004954 	andcs	r4, r0, r4, asr r9
200001e4:	2000492c 	andcs	r4, r0, ip, lsr #18
200001e8:	200075d0 	ldrdcs	r7, [r0], -r0
200001ec:	2000499c 	mulcs	r0, ip, r9
200001f0:	200049ac 	andcs	r4, r0, ip, lsr #19
200001f4:	200073a0 	andcs	r7, r0, r0, lsr #7
200001f8:	200049d8 	ldrdcs	r4, [r0], -r8

200001fc <main>:
	
int counter = 0;
int current_screen = START_SCREEN;
void main(void)
{
200001fc:	b590      	push	{r4, r7, lr}
200001fe:	4cfe      	ldr	r4, [pc, #1016]	; (200005f8 <main+0x3fc>)
20000200:	44a5      	add	sp, r4
20000202:	af00      	add	r7, sp, #0
	
	init_app();	
20000204:	f7ff ff04 	bl	20000010 <init_app>
	initSprites();
20000208:	f7ff ff14 	bl	20000034 <initSprites>
	
	GameObject monsterObj;
	Image monsterImage;
	Image monsterImages[] = {monsterImage};
2000020c:	4bfb      	ldr	r3, [pc, #1004]	; (200005fc <main+0x400>)
2000020e:	18fb      	adds	r3, r7, r3
20000210:	228e      	movs	r2, #142	; 0x8e
20000212:	00d2      	lsls	r2, r2, #3
20000214:	18ba      	adds	r2, r7, r2
20000216:	ca13      	ldmia	r2!, {r0, r1, r4}
20000218:	c313      	stmia	r3!, {r0, r1, r4}
	monsterObj.images = monsterImages;
2000021a:	4bf9      	ldr	r3, [pc, #996]	; (20000600 <main+0x404>)
2000021c:	18fb      	adds	r3, r7, r3
2000021e:	4af7      	ldr	r2, [pc, #988]	; (200005fc <main+0x400>)
20000220:	18ba      	adds	r2, r7, r2
20000222:	601a      	str	r2, [r3, #0]
	load_image(&monsterObj.images[0], monster, monsterGray, monsterLight);
20000224:	4bf6      	ldr	r3, [pc, #984]	; (20000600 <main+0x404>)
20000226:	18fb      	adds	r3, r7, r3
20000228:	6818      	ldr	r0, [r3, #0]
2000022a:	4bf6      	ldr	r3, [pc, #984]	; (20000604 <main+0x408>)
2000022c:	6819      	ldr	r1, [r3, #0]
2000022e:	4bf6      	ldr	r3, [pc, #984]	; (20000608 <main+0x40c>)
20000230:	681a      	ldr	r2, [r3, #0]
20000232:	4bf6      	ldr	r3, [pc, #984]	; (2000060c <main+0x410>)
20000234:	681b      	ldr	r3, [r3, #0]
20000236:	f003 fd57 	bl	20003ce8 <load_image>
	monsterObj.xPos = 30;
2000023a:	4bf1      	ldr	r3, [pc, #964]	; (20000600 <main+0x404>)
2000023c:	18fb      	adds	r3, r7, r3
2000023e:	221e      	movs	r2, #30
20000240:	605a      	str	r2, [r3, #4]
	monsterObj.yPos = 4;
20000242:	4bef      	ldr	r3, [pc, #956]	; (20000600 <main+0x404>)
20000244:	18fb      	adds	r3, r7, r3
20000246:	2204      	movs	r2, #4
20000248:	609a      	str	r2, [r3, #8]
	monsterObj.current_frame = 0;
2000024a:	4bed      	ldr	r3, [pc, #948]	; (20000600 <main+0x404>)
2000024c:	18fb      	adds	r3, r7, r3
2000024e:	2200      	movs	r2, #0
20000250:	615a      	str	r2, [r3, #20]
	monsterObj.update = playerUpdate;
20000252:	4beb      	ldr	r3, [pc, #940]	; (20000600 <main+0x404>)
20000254:	18fb      	adds	r3, r7, r3
20000256:	4aee      	ldr	r2, [pc, #952]	; (20000610 <main+0x414>)
20000258:	60da      	str	r2, [r3, #12]
	
	GameObject titleObj;
	Image titleImage;
	Image titleImages[] = {titleImage};
2000025a:	2385      	movs	r3, #133	; 0x85
2000025c:	00db      	lsls	r3, r3, #3
2000025e:	18fb      	adds	r3, r7, r3
20000260:	4aec      	ldr	r2, [pc, #944]	; (20000614 <main+0x418>)
20000262:	18ba      	adds	r2, r7, r2
20000264:	ca13      	ldmia	r2!, {r0, r1, r4}
20000266:	c313      	stmia	r3!, {r0, r1, r4}
	titleObj.images = titleImages;
20000268:	2388      	movs	r3, #136	; 0x88
2000026a:	00db      	lsls	r3, r3, #3
2000026c:	18fb      	adds	r3, r7, r3
2000026e:	2285      	movs	r2, #133	; 0x85
20000270:	00d2      	lsls	r2, r2, #3
20000272:	18ba      	adds	r2, r7, r2
20000274:	601a      	str	r2, [r3, #0]
	load_image(&titleObj.images[0], titleBlack, titleGray, titleLight);
20000276:	2388      	movs	r3, #136	; 0x88
20000278:	00db      	lsls	r3, r3, #3
2000027a:	18fb      	adds	r3, r7, r3
2000027c:	6818      	ldr	r0, [r3, #0]
2000027e:	4be6      	ldr	r3, [pc, #920]	; (20000618 <main+0x41c>)
20000280:	6819      	ldr	r1, [r3, #0]
20000282:	4be6      	ldr	r3, [pc, #920]	; (2000061c <main+0x420>)
20000284:	681a      	ldr	r2, [r3, #0]
20000286:	4be6      	ldr	r3, [pc, #920]	; (20000620 <main+0x424>)
20000288:	681b      	ldr	r3, [r3, #0]
2000028a:	f003 fd2d 	bl	20003ce8 <load_image>
	titleObj.xPos = 1;
2000028e:	2388      	movs	r3, #136	; 0x88
20000290:	00db      	lsls	r3, r3, #3
20000292:	18fb      	adds	r3, r7, r3
20000294:	2201      	movs	r2, #1
20000296:	605a      	str	r2, [r3, #4]
	titleObj.yPos = -40;
20000298:	2388      	movs	r3, #136	; 0x88
2000029a:	00db      	lsls	r3, r3, #3
2000029c:	18fb      	adds	r3, r7, r3
2000029e:	2228      	movs	r2, #40	; 0x28
200002a0:	4252      	negs	r2, r2
200002a2:	609a      	str	r2, [r3, #8]
	titleObj.current_frame = 0;
200002a4:	2388      	movs	r3, #136	; 0x88
200002a6:	00db      	lsls	r3, r3, #3
200002a8:	18fb      	adds	r3, r7, r3
200002aa:	2200      	movs	r2, #0
200002ac:	615a      	str	r2, [r3, #20]
	
	GameObject pressObj;
	Image pressImage;
	Image pressImages[] = {pressImage};
200002ae:	23fb      	movs	r3, #251	; 0xfb
200002b0:	009b      	lsls	r3, r3, #2
200002b2:	18fb      	adds	r3, r7, r3
200002b4:	22fe      	movs	r2, #254	; 0xfe
200002b6:	0092      	lsls	r2, r2, #2
200002b8:	18ba      	adds	r2, r7, r2
200002ba:	ca13      	ldmia	r2!, {r0, r1, r4}
200002bc:	c313      	stmia	r3!, {r0, r1, r4}
	pressObj.images = pressImages;
200002be:	4bd9      	ldr	r3, [pc, #868]	; (20000624 <main+0x428>)
200002c0:	18fb      	adds	r3, r7, r3
200002c2:	22fb      	movs	r2, #251	; 0xfb
200002c4:	0092      	lsls	r2, r2, #2
200002c6:	18ba      	adds	r2, r7, r2
200002c8:	601a      	str	r2, [r3, #0]
	load_image(&pressObj.images[0], pressBlack, pressLight, pressGray);
200002ca:	4bd6      	ldr	r3, [pc, #856]	; (20000624 <main+0x428>)
200002cc:	18fb      	adds	r3, r7, r3
200002ce:	6818      	ldr	r0, [r3, #0]
200002d0:	4bd5      	ldr	r3, [pc, #852]	; (20000628 <main+0x42c>)
200002d2:	6819      	ldr	r1, [r3, #0]
200002d4:	4bd5      	ldr	r3, [pc, #852]	; (2000062c <main+0x430>)
200002d6:	681a      	ldr	r2, [r3, #0]
200002d8:	4bd5      	ldr	r3, [pc, #852]	; (20000630 <main+0x434>)
200002da:	681b      	ldr	r3, [r3, #0]
200002dc:	f003 fd04 	bl	20003ce8 <load_image>
	pressObj.xPos = 65-30;
200002e0:	4bd0      	ldr	r3, [pc, #832]	; (20000624 <main+0x428>)
200002e2:	18fb      	adds	r3, r7, r3
200002e4:	2223      	movs	r2, #35	; 0x23
200002e6:	605a      	str	r2, [r3, #4]
	pressObj.yPos = 29-15;
200002e8:	4bce      	ldr	r3, [pc, #824]	; (20000624 <main+0x428>)
200002ea:	18fb      	adds	r3, r7, r3
200002ec:	220e      	movs	r2, #14
200002ee:	609a      	str	r2, [r3, #8]
	pressObj.current_frame = 0;
200002f0:	4bcc      	ldr	r3, [pc, #816]	; (20000624 <main+0x428>)
200002f2:	18fb      	adds	r3, r7, r3
200002f4:	2200      	movs	r2, #0
200002f6:	615a      	str	r2, [r3, #20]
	
	GameObject castleObj;
	Image castleImage;
	Image castleImages[] = {castleImage};
200002f8:	4bce      	ldr	r3, [pc, #824]	; (20000634 <main+0x438>)
200002fa:	2298      	movs	r2, #152	; 0x98
200002fc:	00d2      	lsls	r2, r2, #3
200002fe:	18ba      	adds	r2, r7, r2
20000300:	18d1      	adds	r1, r2, r3
20000302:	4bcd      	ldr	r3, [pc, #820]	; (20000638 <main+0x43c>)
20000304:	2298      	movs	r2, #152	; 0x98
20000306:	00d2      	lsls	r2, r2, #3
20000308:	18ba      	adds	r2, r7, r2
2000030a:	18d2      	adds	r2, r2, r3
2000030c:	000b      	movs	r3, r1
2000030e:	ca13      	ldmia	r2!, {r0, r1, r4}
20000310:	c313      	stmia	r3!, {r0, r1, r4}
	castleObj.images = castleImages;
20000312:	23f2      	movs	r3, #242	; 0xf2
20000314:	009b      	lsls	r3, r3, #2
20000316:	18fb      	adds	r3, r7, r3
20000318:	22ec      	movs	r2, #236	; 0xec
2000031a:	0092      	lsls	r2, r2, #2
2000031c:	18ba      	adds	r2, r7, r2
2000031e:	601a      	str	r2, [r3, #0]
	load_image(&castleObj.images[0], castleBlack, castleGray, castleLight);
20000320:	23f2      	movs	r3, #242	; 0xf2
20000322:	009b      	lsls	r3, r3, #2
20000324:	18fb      	adds	r3, r7, r3
20000326:	6818      	ldr	r0, [r3, #0]
20000328:	4bc4      	ldr	r3, [pc, #784]	; (2000063c <main+0x440>)
2000032a:	6819      	ldr	r1, [r3, #0]
2000032c:	4bc4      	ldr	r3, [pc, #784]	; (20000640 <main+0x444>)
2000032e:	681a      	ldr	r2, [r3, #0]
20000330:	4bc4      	ldr	r3, [pc, #784]	; (20000644 <main+0x448>)
20000332:	681b      	ldr	r3, [r3, #0]
20000334:	f003 fcd8 	bl	20003ce8 <load_image>
	castleObj.xPos = 1;
20000338:	23f2      	movs	r3, #242	; 0xf2
2000033a:	009b      	lsls	r3, r3, #2
2000033c:	18fb      	adds	r3, r7, r3
2000033e:	2201      	movs	r2, #1
20000340:	605a      	str	r2, [r3, #4]
	castleObj.yPos = 1;
20000342:	23f2      	movs	r3, #242	; 0xf2
20000344:	009b      	lsls	r3, r3, #2
20000346:	18fb      	adds	r3, r7, r3
20000348:	2201      	movs	r2, #1
2000034a:	609a      	str	r2, [r3, #8]
	castleObj.current_frame = 0;
2000034c:	23f2      	movs	r3, #242	; 0xf2
2000034e:	009b      	lsls	r3, r3, #2
20000350:	18fb      	adds	r3, r7, r3
20000352:	2200      	movs	r2, #0
20000354:	615a      	str	r2, [r3, #20]

	GameObject roger;
	init_roger( &roger );
20000356:	23e3      	movs	r3, #227	; 0xe3
20000358:	009b      	lsls	r3, r3, #2
2000035a:	18fb      	adds	r3, r7, r3
2000035c:	0018      	movs	r0, r3
2000035e:	f004 f991 	bl	20004684 <init_roger>
	roger.xPos = 1;
20000362:	4bb9      	ldr	r3, [pc, #740]	; (20000648 <main+0x44c>)
20000364:	2298      	movs	r2, #152	; 0x98
20000366:	00d2      	lsls	r2, r2, #3
20000368:	4694      	mov	ip, r2
2000036a:	44bc      	add	ip, r7
2000036c:	4463      	add	r3, ip
2000036e:	2201      	movs	r2, #1
20000370:	605a      	str	r2, [r3, #4]
	roger.yPos = 1;
20000372:	4bb5      	ldr	r3, [pc, #724]	; (20000648 <main+0x44c>)
20000374:	2298      	movs	r2, #152	; 0x98
20000376:	00d2      	lsls	r2, r2, #3
20000378:	4694      	mov	ip, r2
2000037a:	44bc      	add	ip, r7
2000037c:	4463      	add	r3, ip
2000037e:	2201      	movs	r2, #1
20000380:	609a      	str	r2, [r3, #8]
	
	GameObject indoors;
	init_indoors( &indoors );
20000382:	23da      	movs	r3, #218	; 0xda
20000384:	009b      	lsls	r3, r3, #2
20000386:	18fb      	adds	r3, r7, r3
20000388:	0018      	movs	r0, r3
2000038a:	f004 f81f 	bl	200043cc <init_indoors>
	indoors.xPos = 1;
2000038e:	4baf      	ldr	r3, [pc, #700]	; (2000064c <main+0x450>)
20000390:	2298      	movs	r2, #152	; 0x98
20000392:	00d2      	lsls	r2, r2, #3
20000394:	4694      	mov	ip, r2
20000396:	44bc      	add	ip, r7
20000398:	4463      	add	r3, ip
2000039a:	2201      	movs	r2, #1
2000039c:	605a      	str	r2, [r3, #4]
	indoors.yPos = 1;
2000039e:	4bab      	ldr	r3, [pc, #684]	; (2000064c <main+0x450>)
200003a0:	2298      	movs	r2, #152	; 0x98
200003a2:	00d2      	lsls	r2, r2, #3
200003a4:	4694      	mov	ip, r2
200003a6:	44bc      	add	ip, r7
200003a8:	4463      	add	r3, ip
200003aa:	2201      	movs	r2, #1
200003ac:	609a      	str	r2, [r3, #8]
	
	GameObject indoors2;
	init_indoors2( &indoors2 );
200003ae:	23d1      	movs	r3, #209	; 0xd1
200003b0:	009b      	lsls	r3, r3, #2
200003b2:	18fb      	adds	r3, r7, r3
200003b4:	0018      	movs	r0, r3
200003b6:	f004 f87d 	bl	200044b4 <init_indoors2>
	indoors2.xPos = 1;
200003ba:	4ba5      	ldr	r3, [pc, #660]	; (20000650 <main+0x454>)
200003bc:	2298      	movs	r2, #152	; 0x98
200003be:	00d2      	lsls	r2, r2, #3
200003c0:	4694      	mov	ip, r2
200003c2:	44bc      	add	ip, r7
200003c4:	4463      	add	r3, ip
200003c6:	2201      	movs	r2, #1
200003c8:	605a      	str	r2, [r3, #4]
	indoors2.yPos = 1;
200003ca:	4ba1      	ldr	r3, [pc, #644]	; (20000650 <main+0x454>)
200003cc:	2298      	movs	r2, #152	; 0x98
200003ce:	00d2      	lsls	r2, r2, #3
200003d0:	4694      	mov	ip, r2
200003d2:	44bc      	add	ip, r7
200003d4:	4463      	add	r3, ip
200003d6:	2201      	movs	r2, #1
200003d8:	609a      	str	r2, [r3, #8]
	
	GameObject trophy;
	init_trophy( &trophy );
200003da:	23c8      	movs	r3, #200	; 0xc8
200003dc:	009b      	lsls	r3, r3, #2
200003de:	18fb      	adds	r3, r7, r3
200003e0:	0018      	movs	r0, r3
200003e2:	f004 f8db 	bl	2000459c <init_trophy>

	
	GameObject hair;
	init_flame(&hair);
200003e6:	23bf      	movs	r3, #191	; 0xbf
200003e8:	009b      	lsls	r3, r3, #2
200003ea:	18fb      	adds	r3, r7, r3
200003ec:	0018      	movs	r0, r3
200003ee:	f002 fa41 	bl	20002874 <init_flame>
	hair.xPos = 40;
200003f2:	4b98      	ldr	r3, [pc, #608]	; (20000654 <main+0x458>)
200003f4:	2298      	movs	r2, #152	; 0x98
200003f6:	00d2      	lsls	r2, r2, #3
200003f8:	4694      	mov	ip, r2
200003fa:	44bc      	add	ip, r7
200003fc:	4463      	add	r3, ip
200003fe:	2228      	movs	r2, #40	; 0x28
20000400:	605a      	str	r2, [r3, #4]
	hair.yPos = 10;
20000402:	4b94      	ldr	r3, [pc, #592]	; (20000654 <main+0x458>)
20000404:	2298      	movs	r2, #152	; 0x98
20000406:	00d2      	lsls	r2, r2, #3
20000408:	4694      	mov	ip, r2
2000040a:	44bc      	add	ip, r7
2000040c:	4463      	add	r3, ip
2000040e:	220a      	movs	r2, #10
20000410:	609a      	str	r2, [r3, #8]
	hair.update = gameObjectUpdate;
20000412:	4b90      	ldr	r3, [pc, #576]	; (20000654 <main+0x458>)
20000414:	2298      	movs	r2, #152	; 0x98
20000416:	00d2      	lsls	r2, r2, #3
20000418:	4694      	mov	ip, r2
2000041a:	44bc      	add	ip, r7
2000041c:	4463      	add	r3, ip
2000041e:	4a8e      	ldr	r2, [pc, #568]	; (20000658 <main+0x45c>)
20000420:	60da      	str	r2, [r3, #12]
	
	GameObject bird;
	init_bird( &bird );
20000422:	23b6      	movs	r3, #182	; 0xb6
20000424:	009b      	lsls	r3, r3, #2
20000426:	18fb      	adds	r3, r7, r3
20000428:	0018      	movs	r0, r3
2000042a:	f001 fdcf 	bl	20001fcc <init_bird>
	bird.xPos = 180;
2000042e:	4b8b      	ldr	r3, [pc, #556]	; (2000065c <main+0x460>)
20000430:	2298      	movs	r2, #152	; 0x98
20000432:	00d2      	lsls	r2, r2, #3
20000434:	4694      	mov	ip, r2
20000436:	44bc      	add	ip, r7
20000438:	4463      	add	r3, ip
2000043a:	22b4      	movs	r2, #180	; 0xb4
2000043c:	605a      	str	r2, [r3, #4]
	bird.yPos = 40;
2000043e:	4b87      	ldr	r3, [pc, #540]	; (2000065c <main+0x460>)
20000440:	2298      	movs	r2, #152	; 0x98
20000442:	00d2      	lsls	r2, r2, #3
20000444:	4694      	mov	ip, r2
20000446:	44bc      	add	ip, r7
20000448:	4463      	add	r3, ip
2000044a:	2228      	movs	r2, #40	; 0x28
2000044c:	609a      	str	r2, [r3, #8]
	bird.update = gameObjectUpdate;
2000044e:	4b83      	ldr	r3, [pc, #524]	; (2000065c <main+0x460>)
20000450:	2298      	movs	r2, #152	; 0x98
20000452:	00d2      	lsls	r2, r2, #3
20000454:	4694      	mov	ip, r2
20000456:	44bc      	add	ip, r7
20000458:	4463      	add	r3, ip
2000045a:	4a7f      	ldr	r2, [pc, #508]	; (20000658 <main+0x45c>)
2000045c:	60da      	str	r2, [r3, #12]
	
	GameObject boom;
	init_boom( &boom );
2000045e:	23ad      	movs	r3, #173	; 0xad
20000460:	009b      	lsls	r3, r3, #2
20000462:	18fb      	adds	r3, r7, r3
20000464:	0018      	movs	r0, r3
20000466:	f002 fbc1 	bl	20002bec <init_boom>
	boom.update = gameObjectUpdate;
2000046a:	4b7d      	ldr	r3, [pc, #500]	; (20000660 <main+0x464>)
2000046c:	2298      	movs	r2, #152	; 0x98
2000046e:	00d2      	lsls	r2, r2, #3
20000470:	4694      	mov	ip, r2
20000472:	44bc      	add	ip, r7
20000474:	4463      	add	r3, ip
20000476:	4a78      	ldr	r2, [pc, #480]	; (20000658 <main+0x45c>)
20000478:	60da      	str	r2, [r3, #12]
	
	GameObject DIP;
	init_DIP( &DIP );
2000047a:	23a4      	movs	r3, #164	; 0xa4
2000047c:	009b      	lsls	r3, r3, #2
2000047e:	18fb      	adds	r3, r7, r3
20000480:	0018      	movs	r0, r3
20000482:	f002 f80b 	bl	2000249c <init_DIP>
	DIP.update = DIPUpdate;
20000486:	4b77      	ldr	r3, [pc, #476]	; (20000664 <main+0x468>)
20000488:	2298      	movs	r2, #152	; 0x98
2000048a:	00d2      	lsls	r2, r2, #3
2000048c:	4694      	mov	ip, r2
2000048e:	44bc      	add	ip, r7
20000490:	4463      	add	r3, ip
20000492:	4a75      	ldr	r2, [pc, #468]	; (20000668 <main+0x46c>)
20000494:	60da      	str	r2, [r3, #12]
	
	GameObject player;
	init_witch( &player );
20000496:	239b      	movs	r3, #155	; 0x9b
20000498:	009b      	lsls	r3, r3, #2
2000049a:	18fb      	adds	r3, r7, r3
2000049c:	0018      	movs	r0, r3
2000049e:	f001 fee1 	bl	20002264 <init_witch>
	player.xPos = 3;
200004a2:	4b72      	ldr	r3, [pc, #456]	; (2000066c <main+0x470>)
200004a4:	2298      	movs	r2, #152	; 0x98
200004a6:	00d2      	lsls	r2, r2, #3
200004a8:	4694      	mov	ip, r2
200004aa:	44bc      	add	ip, r7
200004ac:	4463      	add	r3, ip
200004ae:	2203      	movs	r2, #3
200004b0:	605a      	str	r2, [r3, #4]
	player.yPos = LIMIT_DOWN - 1; //player position
200004b2:	4b6e      	ldr	r3, [pc, #440]	; (2000066c <main+0x470>)
200004b4:	2298      	movs	r2, #152	; 0x98
200004b6:	00d2      	lsls	r2, r2, #3
200004b8:	4694      	mov	ip, r2
200004ba:	44bc      	add	ip, r7
200004bc:	4463      	add	r3, ip
200004be:	2226      	movs	r2, #38	; 0x26
200004c0:	609a      	str	r2, [r3, #8]
	player.update = playerUpdate;
200004c2:	4b6a      	ldr	r3, [pc, #424]	; (2000066c <main+0x470>)
200004c4:	2298      	movs	r2, #152	; 0x98
200004c6:	00d2      	lsls	r2, r2, #3
200004c8:	4694      	mov	ip, r2
200004ca:	44bc      	add	ip, r7
200004cc:	4463      	add	r3, ip
200004ce:	4a50      	ldr	r2, [pc, #320]	; (20000610 <main+0x414>)
200004d0:	60da      	str	r2, [r3, #12]
	
	GameObject fire2;
	init_fire( &fire2 );
200004d2:	2392      	movs	r3, #146	; 0x92
200004d4:	009b      	lsls	r3, r3, #2
200004d6:	18fb      	adds	r3, r7, r3
200004d8:	0018      	movs	r0, r3
200004da:	f001 fadd 	bl	20001a98 <init_fire>
	GameObject fire3;
	init_fire( &fire3 );
200004de:	2389      	movs	r3, #137	; 0x89
200004e0:	009b      	lsls	r3, r3, #2
200004e2:	18fb      	adds	r3, r7, r3
200004e4:	0018      	movs	r0, r3
200004e6:	f001 fad7 	bl	20001a98 <init_fire>
	GameObject fire4;
	init_fire( &fire4 );
200004ea:	2380      	movs	r3, #128	; 0x80
200004ec:	009b      	lsls	r3, r3, #2
200004ee:	18fb      	adds	r3, r7, r3
200004f0:	0018      	movs	r0, r3
200004f2:	f001 fad1 	bl	20001a98 <init_fire>
	GameObject fire1;
	init_fire( &fire1 );
200004f6:	23ee      	movs	r3, #238	; 0xee
200004f8:	005b      	lsls	r3, r3, #1
200004fa:	18fb      	adds	r3, r7, r3
200004fc:	0018      	movs	r0, r3
200004fe:	f001 facb 	bl	20001a98 <init_fire>
	
	GameObject fire1_indoors;
	init_fire( &fire1_indoors );
20000502:	23dc      	movs	r3, #220	; 0xdc
20000504:	005b      	lsls	r3, r3, #1
20000506:	18fb      	adds	r3, r7, r3
20000508:	0018      	movs	r0, r3
2000050a:	f001 fac5 	bl	20001a98 <init_fire>
	fire1_indoors.xPos = 50;		//FIRE1_INDO
2000050e:	4b58      	ldr	r3, [pc, #352]	; (20000670 <main+0x474>)
20000510:	2298      	movs	r2, #152	; 0x98
20000512:	00d2      	lsls	r2, r2, #3
20000514:	4694      	mov	ip, r2
20000516:	44bc      	add	ip, r7
20000518:	4463      	add	r3, ip
2000051a:	2232      	movs	r2, #50	; 0x32
2000051c:	605a      	str	r2, [r3, #4]
	fire1_indoors.yPos = 64-12-7;
2000051e:	4b54      	ldr	r3, [pc, #336]	; (20000670 <main+0x474>)
20000520:	2298      	movs	r2, #152	; 0x98
20000522:	00d2      	lsls	r2, r2, #3
20000524:	4694      	mov	ip, r2
20000526:	44bc      	add	ip, r7
20000528:	4463      	add	r3, ip
2000052a:	222d      	movs	r2, #45	; 0x2d
2000052c:	609a      	str	r2, [r3, #8]
	fire1_indoors.update = gameObjectUpdate;
2000052e:	4b50      	ldr	r3, [pc, #320]	; (20000670 <main+0x474>)
20000530:	2298      	movs	r2, #152	; 0x98
20000532:	00d2      	lsls	r2, r2, #3
20000534:	4694      	mov	ip, r2
20000536:	44bc      	add	ip, r7
20000538:	4463      	add	r3, ip
2000053a:	4a47      	ldr	r2, [pc, #284]	; (20000658 <main+0x45c>)
2000053c:	60da      	str	r2, [r3, #12]
	GameObject fire2_indoors;
	init_fire( &fire2_indoors );
2000053e:	23ca      	movs	r3, #202	; 0xca
20000540:	005b      	lsls	r3, r3, #1
20000542:	18fb      	adds	r3, r7, r3
20000544:	0018      	movs	r0, r3
20000546:	f001 faa7 	bl	20001a98 <init_fire>
	fire2_indoors.update = gameObjectUpdate;
2000054a:	4b4a      	ldr	r3, [pc, #296]	; (20000674 <main+0x478>)
2000054c:	2298      	movs	r2, #152	; 0x98
2000054e:	00d2      	lsls	r2, r2, #3
20000550:	4694      	mov	ip, r2
20000552:	44bc      	add	ip, r7
20000554:	4463      	add	r3, ip
20000556:	4a40      	ldr	r2, [pc, #256]	; (20000658 <main+0x45c>)
20000558:	60da      	str	r2, [r3, #12]
	GameObject fire3_indoors;
	init_fire( &fire3_indoors );
2000055a:	23b8      	movs	r3, #184	; 0xb8
2000055c:	005b      	lsls	r3, r3, #1
2000055e:	18fb      	adds	r3, r7, r3
20000560:	0018      	movs	r0, r3
20000562:	f001 fa99 	bl	20001a98 <init_fire>
	fire3_indoors.update = gameObjectUpdate;
20000566:	4b44      	ldr	r3, [pc, #272]	; (20000678 <main+0x47c>)
20000568:	2298      	movs	r2, #152	; 0x98
2000056a:	00d2      	lsls	r2, r2, #3
2000056c:	4694      	mov	ip, r2
2000056e:	44bc      	add	ip, r7
20000570:	4463      	add	r3, ip
20000572:	4a39      	ldr	r2, [pc, #228]	; (20000658 <main+0x45c>)
20000574:	60da      	str	r2, [r3, #12]
	GameObject fires[] = {fire1_indoors, fire2_indoors, fire3_indoors};
20000576:	4b41      	ldr	r3, [pc, #260]	; (2000067c <main+0x480>)
20000578:	2298      	movs	r2, #152	; 0x98
2000057a:	00d2      	lsls	r2, r2, #3
2000057c:	18ba      	adds	r2, r7, r2
2000057e:	18d1      	adds	r1, r2, r3
20000580:	4b3b      	ldr	r3, [pc, #236]	; (20000670 <main+0x474>)
20000582:	2298      	movs	r2, #152	; 0x98
20000584:	00d2      	lsls	r2, r2, #3
20000586:	18ba      	adds	r2, r7, r2
20000588:	18d2      	adds	r2, r2, r3
2000058a:	000b      	movs	r3, r1
2000058c:	ca13      	ldmia	r2!, {r0, r1, r4}
2000058e:	c313      	stmia	r3!, {r0, r1, r4}
20000590:	ca13      	ldmia	r2!, {r0, r1, r4}
20000592:	c313      	stmia	r3!, {r0, r1, r4}
20000594:	ca13      	ldmia	r2!, {r0, r1, r4}
20000596:	c313      	stmia	r3!, {r0, r1, r4}
20000598:	4b38      	ldr	r3, [pc, #224]	; (2000067c <main+0x480>)
2000059a:	2298      	movs	r2, #152	; 0x98
2000059c:	00d2      	lsls	r2, r2, #3
2000059e:	4694      	mov	ip, r2
200005a0:	44bc      	add	ip, r7
200005a2:	4463      	add	r3, ip
200005a4:	4a33      	ldr	r2, [pc, #204]	; (20000674 <main+0x478>)
200005a6:	2198      	movs	r1, #152	; 0x98
200005a8:	00c9      	lsls	r1, r1, #3
200005aa:	468c      	mov	ip, r1
200005ac:	44bc      	add	ip, r7
200005ae:	4462      	add	r2, ip
200005b0:	3324      	adds	r3, #36	; 0x24
200005b2:	ca13      	ldmia	r2!, {r0, r1, r4}
200005b4:	c313      	stmia	r3!, {r0, r1, r4}
200005b6:	ca13      	ldmia	r2!, {r0, r1, r4}
200005b8:	c313      	stmia	r3!, {r0, r1, r4}
200005ba:	ca13      	ldmia	r2!, {r0, r1, r4}
200005bc:	c313      	stmia	r3!, {r0, r1, r4}
200005be:	4b2f      	ldr	r3, [pc, #188]	; (2000067c <main+0x480>)
200005c0:	2298      	movs	r2, #152	; 0x98
200005c2:	00d2      	lsls	r2, r2, #3
200005c4:	4694      	mov	ip, r2
200005c6:	44bc      	add	ip, r7
200005c8:	4463      	add	r3, ip
200005ca:	4a2b      	ldr	r2, [pc, #172]	; (20000678 <main+0x47c>)
200005cc:	2198      	movs	r1, #152	; 0x98
200005ce:	00c9      	lsls	r1, r1, #3
200005d0:	468c      	mov	ip, r1
200005d2:	44bc      	add	ip, r7
200005d4:	4462      	add	r2, ip
200005d6:	3348      	adds	r3, #72	; 0x48
200005d8:	ca13      	ldmia	r2!, {r0, r1, r4}
200005da:	c313      	stmia	r3!, {r0, r1, r4}
200005dc:	ca13      	ldmia	r2!, {r0, r1, r4}
200005de:	c313      	stmia	r3!, {r0, r1, r4}
200005e0:	ca13      	ldmia	r2!, {r0, r1, r4}
200005e2:	c313      	stmia	r3!, {r0, r1, r4}
	
	
	fire2.xPos = 98;
200005e4:	4b26      	ldr	r3, [pc, #152]	; (20000680 <main+0x484>)
200005e6:	2298      	movs	r2, #152	; 0x98
200005e8:	00d2      	lsls	r2, r2, #3
200005ea:	4694      	mov	ip, r2
200005ec:	44bc      	add	ip, r7
200005ee:	4463      	add	r3, ip
200005f0:	2262      	movs	r2, #98	; 0x62
200005f2:	605a      	str	r2, [r3, #4]
200005f4:	e046      	b.n	20000684 <main+0x488>
200005f6:	46c0      	nop			; (mov r8, r8)
200005f8:	fffffb3c 			; <UNDEFINED> instruction: 0xfffffb3c
200005fc:	00000464 	andeq	r0, r0, r4, ror #8
20000600:	0000047c 	andeq	r0, r0, ip, ror r4
20000604:	2000491c 	andcs	r4, r0, ip, lsl r9
20000608:	200049dc 	ldrdcs	r4, [r0], -ip
2000060c:	200049c8 	andcs	r4, r0, r8, asr #19
20000610:	20001bbd 			; <UNDEFINED> instruction: 0x20001bbd
20000614:	00000434 	andeq	r0, r0, r4, lsr r4
20000618:	200049ec 	andcs	r4, r0, ip, ror #19
2000061c:	200049b8 			; <UNDEFINED> instruction: 0x200049b8
20000620:	200049cc 	andcs	r4, r0, ip, asr #19
20000624:	00000404 	andeq	r0, r0, r4, lsl #8
20000628:	200049d8 	ldrdcs	r4, [r0], -r8
2000062c:	20004954 	andcs	r4, r0, r4, asr r9
20000630:	2000499c 	mulcs	r0, ip, r9
20000634:	fffffef0 			; <UNDEFINED> instruction: 0xfffffef0
20000638:	fffffefc 			; <UNDEFINED> instruction: 0xfffffefc
2000063c:	20004944 	andcs	r4, r0, r4, asr #18
20000640:	200049d0 	ldrdcs	r4, [r0], -r0
20000644:	20004980 	andcs	r4, r0, r0, lsl #19
20000648:	fffffecc 			; <UNDEFINED> instruction: 0xfffffecc
2000064c:	fffffea8 			; <UNDEFINED> instruction: 0xfffffea8
20000650:	fffffe84 			; <UNDEFINED> instruction: 0xfffffe84
20000654:	fffffe3c 			; <UNDEFINED> instruction: 0xfffffe3c
20000658:	200018cd 	andcs	r1, r0, sp, asr #17
2000065c:	fffffe18 			; <UNDEFINED> instruction: 0xfffffe18
20000660:	fffffdf4 			; <UNDEFINED> instruction: 0xfffffdf4
20000664:	fffffdd0 			; <UNDEFINED> instruction: 0xfffffdd0
20000668:	200025bd 			; <UNDEFINED> instruction: 0x200025bd
2000066c:	fffffdac 			; <UNDEFINED> instruction: 0xfffffdac
20000670:	fffffcf8 			; <UNDEFINED> instruction: 0xfffffcf8
20000674:	fffffcd4 			; <UNDEFINED> instruction: 0xfffffcd4
20000678:	fffffcb0 			; <UNDEFINED> instruction: 0xfffffcb0
2000067c:	fffffc44 			; <UNDEFINED> instruction: 0xfffffc44
20000680:	fffffd88 			; <UNDEFINED> instruction: 0xfffffd88
	fire2.yPos = 26-12;
20000684:	4be9      	ldr	r3, [pc, #932]	; (20000a2c <main+0x830>)
20000686:	2298      	movs	r2, #152	; 0x98
20000688:	00d2      	lsls	r2, r2, #3
2000068a:	4694      	mov	ip, r2
2000068c:	44bc      	add	ip, r7
2000068e:	4463      	add	r3, ip
20000690:	220e      	movs	r2, #14
20000692:	609a      	str	r2, [r3, #8]
	fire3.xPos = 115;
20000694:	4be6      	ldr	r3, [pc, #920]	; (20000a30 <main+0x834>)
20000696:	2298      	movs	r2, #152	; 0x98
20000698:	00d2      	lsls	r2, r2, #3
2000069a:	4694      	mov	ip, r2
2000069c:	44bc      	add	ip, r7
2000069e:	4463      	add	r3, ip
200006a0:	2273      	movs	r2, #115	; 0x73
200006a2:	605a      	str	r2, [r3, #4]
	fire3.yPos = 34-12;
200006a4:	4be2      	ldr	r3, [pc, #904]	; (20000a30 <main+0x834>)
200006a6:	2298      	movs	r2, #152	; 0x98
200006a8:	00d2      	lsls	r2, r2, #3
200006aa:	4694      	mov	ip, r2
200006ac:	44bc      	add	ip, r7
200006ae:	4463      	add	r3, ip
200006b0:	2216      	movs	r2, #22
200006b2:	609a      	str	r2, [r3, #8]
	
	fire1.xPos = 85;
200006b4:	4bdf      	ldr	r3, [pc, #892]	; (20000a34 <main+0x838>)
200006b6:	2298      	movs	r2, #152	; 0x98
200006b8:	00d2      	lsls	r2, r2, #3
200006ba:	4694      	mov	ip, r2
200006bc:	44bc      	add	ip, r7
200006be:	4463      	add	r3, ip
200006c0:	2255      	movs	r2, #85	; 0x55
200006c2:	605a      	str	r2, [r3, #4]
	fire1.yPos = 23-12;
200006c4:	4bdb      	ldr	r3, [pc, #876]	; (20000a34 <main+0x838>)
200006c6:	2298      	movs	r2, #152	; 0x98
200006c8:	00d2      	lsls	r2, r2, #3
200006ca:	4694      	mov	ip, r2
200006cc:	44bc      	add	ip, r7
200006ce:	4463      	add	r3, ip
200006d0:	220b      	movs	r2, #11
200006d2:	609a      	str	r2, [r3, #8]
	fire4.xPos = 71;
200006d4:	4bd8      	ldr	r3, [pc, #864]	; (20000a38 <main+0x83c>)
200006d6:	2298      	movs	r2, #152	; 0x98
200006d8:	00d2      	lsls	r2, r2, #3
200006da:	4694      	mov	ip, r2
200006dc:	44bc      	add	ip, r7
200006de:	4463      	add	r3, ip
200006e0:	2247      	movs	r2, #71	; 0x47
200006e2:	605a      	str	r2, [r3, #4]
	fire4.yPos = 27-11;
200006e4:	4bd4      	ldr	r3, [pc, #848]	; (20000a38 <main+0x83c>)
200006e6:	2298      	movs	r2, #152	; 0x98
200006e8:	00d2      	lsls	r2, r2, #3
200006ea:	4694      	mov	ip, r2
200006ec:	44bc      	add	ip, r7
200006ee:	4463      	add	r3, ip
200006f0:	2210      	movs	r2, #16
200006f2:	609a      	str	r2, [r3, #8]
	//draw_game_object(&castleObj);
	
	fire2.animation_speed = 2;
200006f4:	4bcd      	ldr	r3, [pc, #820]	; (20000a2c <main+0x830>)
200006f6:	2298      	movs	r2, #152	; 0x98
200006f8:	00d2      	lsls	r2, r2, #3
200006fa:	4694      	mov	ip, r2
200006fc:	44bc      	add	ip, r7
200006fe:	4463      	add	r3, ip
20000700:	2202      	movs	r2, #2
20000702:	61da      	str	r2, [r3, #28]
	fire3.animation_speed = 2;
20000704:	4bca      	ldr	r3, [pc, #808]	; (20000a30 <main+0x834>)
20000706:	2298      	movs	r2, #152	; 0x98
20000708:	00d2      	lsls	r2, r2, #3
2000070a:	4694      	mov	ip, r2
2000070c:	44bc      	add	ip, r7
2000070e:	4463      	add	r3, ip
20000710:	2202      	movs	r2, #2
20000712:	61da      	str	r2, [r3, #28]
	fire1.animation_speed = 2;
20000714:	4bc7      	ldr	r3, [pc, #796]	; (20000a34 <main+0x838>)
20000716:	2298      	movs	r2, #152	; 0x98
20000718:	00d2      	lsls	r2, r2, #3
2000071a:	4694      	mov	ip, r2
2000071c:	44bc      	add	ip, r7
2000071e:	4463      	add	r3, ip
20000720:	2202      	movs	r2, #2
20000722:	61da      	str	r2, [r3, #28]
	fire4.animation_speed = 2;
20000724:	4bc4      	ldr	r3, [pc, #784]	; (20000a38 <main+0x83c>)
20000726:	2298      	movs	r2, #152	; 0x98
20000728:	00d2      	lsls	r2, r2, #3
2000072a:	4694      	mov	ip, r2
2000072c:	44bc      	add	ip, r7
2000072e:	4463      	add	r3, ip
20000730:	2202      	movs	r2, #2
20000732:	61da      	str	r2, [r3, #28]
	
	fire2.update = gameObjectUpdate;
20000734:	4bbd      	ldr	r3, [pc, #756]	; (20000a2c <main+0x830>)
20000736:	2298      	movs	r2, #152	; 0x98
20000738:	00d2      	lsls	r2, r2, #3
2000073a:	4694      	mov	ip, r2
2000073c:	44bc      	add	ip, r7
2000073e:	4463      	add	r3, ip
20000740:	4abe      	ldr	r2, [pc, #760]	; (20000a3c <main+0x840>)
20000742:	60da      	str	r2, [r3, #12]
	fire3.update = gameObjectUpdate;
20000744:	4bba      	ldr	r3, [pc, #744]	; (20000a30 <main+0x834>)
20000746:	2298      	movs	r2, #152	; 0x98
20000748:	00d2      	lsls	r2, r2, #3
2000074a:	4694      	mov	ip, r2
2000074c:	44bc      	add	ip, r7
2000074e:	4463      	add	r3, ip
20000750:	4aba      	ldr	r2, [pc, #744]	; (20000a3c <main+0x840>)
20000752:	60da      	str	r2, [r3, #12]
	fire1.update = gameObjectUpdate;
20000754:	4bb7      	ldr	r3, [pc, #732]	; (20000a34 <main+0x838>)
20000756:	2298      	movs	r2, #152	; 0x98
20000758:	00d2      	lsls	r2, r2, #3
2000075a:	4694      	mov	ip, r2
2000075c:	44bc      	add	ip, r7
2000075e:	4463      	add	r3, ip
20000760:	4ab6      	ldr	r2, [pc, #728]	; (20000a3c <main+0x840>)
20000762:	60da      	str	r2, [r3, #12]
	fire4.update = gameObjectUpdate;
20000764:	4bb4      	ldr	r3, [pc, #720]	; (20000a38 <main+0x83c>)
20000766:	2298      	movs	r2, #152	; 0x98
20000768:	00d2      	lsls	r2, r2, #3
2000076a:	4694      	mov	ip, r2
2000076c:	44bc      	add	ip, r7
2000076e:	4463      	add	r3, ip
20000770:	4ab2      	ldr	r2, [pc, #712]	; (20000a3c <main+0x840>)
20000772:	60da      	str	r2, [r3, #12]
	SlowText text8;
	SlowText text9;
	SlowText text10;
	SlowText text11;
	SlowText text12;
	init_slow_text(&text_kra, "*KRA!* *KRA!*", "   ", 1);
20000774:	4ab2      	ldr	r2, [pc, #712]	; (20000a40 <main+0x844>)
20000776:	49b3      	ldr	r1, [pc, #716]	; (20000a44 <main+0x848>)
20000778:	23f0      	movs	r3, #240	; 0xf0
2000077a:	18f8      	adds	r0, r7, r3
2000077c:	2301      	movs	r3, #1
2000077e:	f003 fdce 	bl	2000431e <init_slow_text>
	init_slow_text(&text1, "For centuries the", "DILs-witches have", 1);
20000782:	4ab1      	ldr	r2, [pc, #708]	; (20000a48 <main+0x84c>)
20000784:	49b1      	ldr	r1, [pc, #708]	; (20000a4c <main+0x850>)
20000786:	23dc      	movs	r3, #220	; 0xdc
20000788:	18f8      	adds	r0, r7, r3
2000078a:	2301      	movs	r3, #1
2000078c:	f003 fdc7 	bl	2000431e <init_slow_text>
	init_slow_text(&text2, "coiled in fear,", "    ", 1);
20000790:	4aaf      	ldr	r2, [pc, #700]	; (20000a50 <main+0x854>)
20000792:	49b0      	ldr	r1, [pc, #704]	; (20000a54 <main+0x858>)
20000794:	23c8      	movs	r3, #200	; 0xc8
20000796:	18f8      	adds	r0, r7, r3
20000798:	2301      	movs	r3, #1
2000079a:	f003 fdc0 	bl	2000431e <init_slow_text>
	init_slow_text(&text3, "whenever they hear", "that a DIPs-witch", 1);
2000079e:	4aae      	ldr	r2, [pc, #696]	; (20000a58 <main+0x85c>)
200007a0:	49ae      	ldr	r1, [pc, #696]	; (20000a5c <main+0x860>)
200007a2:	23b4      	movs	r3, #180	; 0xb4
200007a4:	18f8      	adds	r0, r7, r3
200007a6:	2301      	movs	r3, #1
200007a8:	f003 fdb9 	bl	2000431e <init_slow_text>
	init_slow_text(&text4, "is near.", "   ", 1);
200007ac:	4aa4      	ldr	r2, [pc, #656]	; (20000a40 <main+0x844>)
200007ae:	49ac      	ldr	r1, [pc, #688]	; (20000a60 <main+0x864>)
200007b0:	23a0      	movs	r3, #160	; 0xa0
200007b2:	18f8      	adds	r0, r7, r3
200007b4:	2301      	movs	r3, #1
200007b6:	f003 fdb2 	bl	2000431e <init_slow_text>
	init_slow_text(&text5, "So it is quite", "surprising, finding", 1);
200007ba:	4aaa      	ldr	r2, [pc, #680]	; (20000a64 <main+0x868>)
200007bc:	49aa      	ldr	r1, [pc, #680]	; (20000a68 <main+0x86c>)
200007be:	238c      	movs	r3, #140	; 0x8c
200007c0:	18f8      	adds	r0, r7, r3
200007c2:	2301      	movs	r3, #1
200007c4:	f003 fdab 	bl	2000431e <init_slow_text>
	init_slow_text(&text6, "you here,", "    ", 1);
200007c8:	4aa1      	ldr	r2, [pc, #644]	; (20000a50 <main+0x854>)
200007ca:	49a8      	ldr	r1, [pc, #672]	; (20000a6c <main+0x870>)
200007cc:	2378      	movs	r3, #120	; 0x78
200007ce:	18f8      	adds	r0, r7, r3
200007d0:	2301      	movs	r3, #1
200007d2:	f003 fda4 	bl	2000431e <init_slow_text>
	init_slow_text(&text7, "queen Daffo of DILs,", "heir to king Lear.", 1);
200007d6:	4aa6      	ldr	r2, [pc, #664]	; (20000a70 <main+0x874>)
200007d8:	49a6      	ldr	r1, [pc, #664]	; (20000a74 <main+0x878>)
200007da:	2364      	movs	r3, #100	; 0x64
200007dc:	18f8      	adds	r0, r7, r3
200007de:	2301      	movs	r3, #1
200007e0:	f003 fd9d 	bl	2000431e <init_slow_text>
	init_slow_text(&text8, "But maybe you're", "tempted, to loot", 1);
200007e4:	4aa4      	ldr	r2, [pc, #656]	; (20000a78 <main+0x87c>)
200007e6:	49a5      	ldr	r1, [pc, #660]	; (20000a7c <main+0x880>)
200007e8:	2350      	movs	r3, #80	; 0x50
200007ea:	18f8      	adds	r0, r7, r3
200007ec:	2301      	movs	r3, #1
200007ee:	f003 fd96 	bl	2000431e <init_slow_text>
	init_slow_text(&text9, "from the riches,", "    ", 1);
200007f2:	4a97      	ldr	r2, [pc, #604]	; (20000a50 <main+0x854>)
200007f4:	49a2      	ldr	r1, [pc, #648]	; (20000a80 <main+0x884>)
200007f6:	233c      	movs	r3, #60	; 0x3c
200007f8:	18f8      	adds	r0, r7, r3
200007fa:	2301      	movs	r3, #1
200007fc:	f003 fd8f 	bl	2000431e <init_slow_text>
	init_slow_text(&text12, "wicked DIPs-witches.", "    ", 1);
20000800:	4a93      	ldr	r2, [pc, #588]	; (20000a50 <main+0x854>)
20000802:	49a0      	ldr	r1, [pc, #640]	; (20000a84 <main+0x888>)
20000804:	0038      	movs	r0, r7
20000806:	2301      	movs	r3, #1
20000808:	f003 fd89 	bl	2000431e <init_slow_text>
	init_slow_text(&text10, "so grippily trea-", "sured by", 1);
2000080c:	4a9e      	ldr	r2, [pc, #632]	; (20000a88 <main+0x88c>)
2000080e:	499f      	ldr	r1, [pc, #636]	; (20000a8c <main+0x890>)
20000810:	2328      	movs	r3, #40	; 0x28
20000812:	18f8      	adds	r0, r7, r3
20000814:	2301      	movs	r3, #1
20000816:	f003 fd82 	bl	2000431e <init_slow_text>
	init_slow_text(&text11, "Enter, brave witch,", "- reset the switch!", 1);
2000081a:	4a9d      	ldr	r2, [pc, #628]	; (20000a90 <main+0x894>)
2000081c:	499d      	ldr	r1, [pc, #628]	; (20000a94 <main+0x898>)
2000081e:	2314      	movs	r3, #20
20000820:	18f8      	adds	r0, r7, r3
20000822:	2301      	movs	r3, #1
20000824:	f003 fd7b 	bl	2000431e <init_slow_text>
	//ascii_write_part("Yeeaaah!!!", "This is working! :)", 5, 10);
	set_up_ascii();
20000828:	f003 fc56 	bl	200040d8 <set_up_ascii>
	set_up_DIL();
2000082c:	f003 fa84 	bl	20003d38 <set_up_DIL>
	clear_ascii();
20000830:	f003 fc5b 	bl	200040ea <clear_ascii>
	
	int is_climbing = 0;
20000834:	2300      	movs	r3, #0
20000836:	4a98      	ldr	r2, [pc, #608]	; (20000a98 <main+0x89c>)
20000838:	18ba      	adds	r2, r7, r2
2000083a:	6013      	str	r3, [r2, #0]
	int has_climbed = 0;
2000083c:	2300      	movs	r3, #0
2000083e:	2297      	movs	r2, #151	; 0x97
20000840:	00d2      	lsls	r2, r2, #3
20000842:	18ba      	adds	r2, r7, r2
20000844:	6013      	str	r3, [r2, #0]
	int game_over = 0;
20000846:	2300      	movs	r3, #0
20000848:	4a94      	ldr	r2, [pc, #592]	; (20000a9c <main+0x8a0>)
2000084a:	18ba      	adds	r2, r7, r2
2000084c:	6013      	str	r3, [r2, #0]
	int game_over_adder = 0;
2000084e:	2300      	movs	r3, #0
20000850:	2296      	movs	r2, #150	; 0x96
20000852:	00d2      	lsls	r2, r2, #3
20000854:	18ba      	adds	r2, r7, r2
20000856:	6013      	str	r3, [r2, #0]
	int no_DIP = 0;
20000858:	2300      	movs	r3, #0
2000085a:	4a91      	ldr	r2, [pc, #580]	; (20000aa0 <main+0x8a4>)
2000085c:	18ba      	adds	r2, r7, r2
2000085e:	6013      	str	r3, [r2, #0]
	int exploding = 0;
20000860:	2300      	movs	r3, #0
20000862:	2295      	movs	r2, #149	; 0x95
20000864:	00d2      	lsls	r2, r2, #3
20000866:	18ba      	adds	r2, r7, r2
20000868:	6013      	str	r3, [r2, #0]
	int first = 1;
2000086a:	2301      	movs	r3, #1
2000086c:	4a8d      	ldr	r2, [pc, #564]	; (20000aa4 <main+0x8a8>)
2000086e:	18ba      	adds	r2, r7, r2
20000870:	6013      	str	r3, [r2, #0]
	int lastFireTrigger = 0;
20000872:	2300      	movs	r3, #0
20000874:	2294      	movs	r2, #148	; 0x94
20000876:	00d2      	lsls	r2, r2, #3
20000878:	18ba      	adds	r2, r7, r2
2000087a:	6013      	str	r3, [r2, #0]
		
	current_screen = WIN_SCREEN; //RESET_GAME;
2000087c:	4b8a      	ldr	r3, [pc, #552]	; (20000aa8 <main+0x8ac>)
2000087e:	2204      	movs	r2, #4
20000880:	601a      	str	r2, [r3, #0]
	
	//Game loop
	while(1) {
			
		switch(current_screen) {
20000882:	4b89      	ldr	r3, [pc, #548]	; (20000aa8 <main+0x8ac>)
20000884:	681b      	ldr	r3, [r3, #0]
20000886:	2b0a      	cmp	r3, #10
20000888:	d8fb      	bhi.n	20000882 <main+0x686>
2000088a:	009a      	lsls	r2, r3, #2
2000088c:	4b87      	ldr	r3, [pc, #540]	; (20000aac <main+0x8b0>)
2000088e:	18d3      	adds	r3, r2, r3
20000890:	681b      	ldr	r3, [r3, #0]
20000892:	469f      	mov	pc, r3
			
			case SWITCH_LOCK: //before

				while(read_DIL() == 0){
					draw_game_object(&pressObj);
20000894:	4b86      	ldr	r3, [pc, #536]	; (20000ab0 <main+0x8b4>)
20000896:	18fb      	adds	r3, r7, r3
20000898:	0018      	movs	r0, r3
2000089a:	f003 f9af 	bl	20003bfc <draw_game_object>
					show_frame(1);
2000089e:	2001      	movs	r0, #1
200008a0:	f003 f9ed 	bl	20003c7e <show_frame>
				while(read_DIL() == 0){
200008a4:	f003 fa54 	bl	20003d50 <read_DIL>
200008a8:	1e03      	subs	r3, r0, #0
200008aa:	d0f3      	beq.n	20000894 <main+0x698>
				}
				
				counter = 0;
200008ac:	4b81      	ldr	r3, [pc, #516]	; (20000ab4 <main+0x8b8>)
200008ae:	2200      	movs	r2, #0
200008b0:	601a      	str	r2, [r3, #0]
				current_screen = START_SCREEN;
200008b2:	4b7d      	ldr	r3, [pc, #500]	; (20000aa8 <main+0x8ac>)
200008b4:	2201      	movs	r2, #1
200008b6:	601a      	str	r2, [r3, #0]
				break;
200008b8:	f000 ffd1 	bl	2000185e <main+0x1662>
			
			
			case START_SCREEN: //outside
				
				counter++;
200008bc:	4b7d      	ldr	r3, [pc, #500]	; (20000ab4 <main+0x8b8>)
200008be:	681b      	ldr	r3, [r3, #0]
200008c0:	1c5a      	adds	r2, r3, #1
200008c2:	4b7c      	ldr	r3, [pc, #496]	; (20000ab4 <main+0x8b8>)
200008c4:	601a      	str	r2, [r3, #0]
				
				if(titleObj.yPos < 1) {
200008c6:	2388      	movs	r3, #136	; 0x88
200008c8:	00db      	lsls	r3, r3, #3
200008ca:	18fb      	adds	r3, r7, r3
200008cc:	689b      	ldr	r3, [r3, #8]
200008ce:	2b00      	cmp	r3, #0
200008d0:	dc08      	bgt.n	200008e4 <main+0x6e8>
					titleObj.yPos++;
200008d2:	2388      	movs	r3, #136	; 0x88
200008d4:	00db      	lsls	r3, r3, #3
200008d6:	18fb      	adds	r3, r7, r3
200008d8:	689b      	ldr	r3, [r3, #8]
200008da:	1c5a      	adds	r2, r3, #1
200008dc:	2388      	movs	r3, #136	; 0x88
200008de:	00db      	lsls	r3, r3, #3
200008e0:	18fb      	adds	r3, r7, r3
200008e2:	609a      	str	r2, [r3, #8]
				}
				
				draw_game_object(&castleObj);
200008e4:	23f2      	movs	r3, #242	; 0xf2
200008e6:	009b      	lsls	r3, r3, #2
200008e8:	18fb      	adds	r3, r7, r3
200008ea:	0018      	movs	r0, r3
200008ec:	f003 f986 	bl	20003bfc <draw_game_object>
				draw_game_object(&fire2);
200008f0:	2392      	movs	r3, #146	; 0x92
200008f2:	009b      	lsls	r3, r3, #2
200008f4:	18fb      	adds	r3, r7, r3
200008f6:	0018      	movs	r0, r3
200008f8:	f003 f980 	bl	20003bfc <draw_game_object>
				draw_game_object(&fire3);
200008fc:	2389      	movs	r3, #137	; 0x89
200008fe:	009b      	lsls	r3, r3, #2
20000900:	18fb      	adds	r3, r7, r3
20000902:	0018      	movs	r0, r3
20000904:	f003 f97a 	bl	20003bfc <draw_game_object>
				draw_game_object(&fire1);
20000908:	23ee      	movs	r3, #238	; 0xee
2000090a:	005b      	lsls	r3, r3, #1
2000090c:	18fb      	adds	r3, r7, r3
2000090e:	0018      	movs	r0, r3
20000910:	f003 f974 	bl	20003bfc <draw_game_object>
				draw_game_object(&fire4);
20000914:	2380      	movs	r3, #128	; 0x80
20000916:	009b      	lsls	r3, r3, #2
20000918:	18fb      	adds	r3, r7, r3
2000091a:	0018      	movs	r0, r3
2000091c:	f003 f96e 	bl	20003bfc <draw_game_object>
				draw_game_object(&titleObj);
20000920:	2388      	movs	r3, #136	; 0x88
20000922:	00db      	lsls	r3, r3, #3
20000924:	18fb      	adds	r3, r7, r3
20000926:	0018      	movs	r0, r3
20000928:	f003 f968 	bl	20003bfc <draw_game_object>
				draw_game_object(&bird);
2000092c:	23b6      	movs	r3, #182	; 0xb6
2000092e:	009b      	lsls	r3, r3, #2
20000930:	18fb      	adds	r3, r7, r3
20000932:	0018      	movs	r0, r3
20000934:	f003 f962 	bl	20003bfc <draw_game_object>
				show_frame(1);
20000938:	2001      	movs	r0, #1
2000093a:	f003 f9a0 	bl	20003c7e <show_frame>
				
				static int long_text = 40;
				static int short_text = 20;
				static int delay_until_text = 130;
				
				if (counter < delay_until_text - 55 && counter > delay_until_text - 90)
2000093e:	4b5e      	ldr	r3, [pc, #376]	; (20000ab8 <main+0x8bc>)
20000940:	681b      	ldr	r3, [r3, #0]
20000942:	3b37      	subs	r3, #55	; 0x37
20000944:	001a      	movs	r2, r3
20000946:	4b5b      	ldr	r3, [pc, #364]	; (20000ab4 <main+0x8b8>)
20000948:	681b      	ldr	r3, [r3, #0]
2000094a:	429a      	cmp	r2, r3
2000094c:	dd13      	ble.n	20000976 <main+0x77a>
2000094e:	4b5a      	ldr	r3, [pc, #360]	; (20000ab8 <main+0x8bc>)
20000950:	681b      	ldr	r3, [r3, #0]
20000952:	3b5a      	subs	r3, #90	; 0x5a
20000954:	001a      	movs	r2, r3
20000956:	4b57      	ldr	r3, [pc, #348]	; (20000ab4 <main+0x8b8>)
20000958:	681b      	ldr	r3, [r3, #0]
2000095a:	429a      	cmp	r2, r3
2000095c:	da0b      	bge.n	20000976 <main+0x77a>
					text_kra.display(&text_kra, 20);
2000095e:	4b57      	ldr	r3, [pc, #348]	; (20000abc <main+0x8c0>)
20000960:	2298      	movs	r2, #152	; 0x98
20000962:	00d2      	lsls	r2, r2, #3
20000964:	4694      	mov	ip, r2
20000966:	44bc      	add	ip, r7
20000968:	4463      	add	r3, ip
2000096a:	691b      	ldr	r3, [r3, #16]
2000096c:	22f0      	movs	r2, #240	; 0xf0
2000096e:	18ba      	adds	r2, r7, r2
20000970:	2114      	movs	r1, #20
20000972:	0010      	movs	r0, r2
20000974:	4798      	blx	r3
				if (counter == delay_until_text - 25)
20000976:	4b50      	ldr	r3, [pc, #320]	; (20000ab8 <main+0x8bc>)
20000978:	681b      	ldr	r3, [r3, #0]
2000097a:	3b19      	subs	r3, #25
2000097c:	001a      	movs	r2, r3
2000097e:	4b4d      	ldr	r3, [pc, #308]	; (20000ab4 <main+0x8b8>)
20000980:	681b      	ldr	r3, [r3, #0]
20000982:	429a      	cmp	r2, r3
20000984:	d101      	bne.n	2000098a <main+0x78e>
					clear_ascii();
20000986:	f003 fbb0 	bl	200040ea <clear_ascii>
				
				if (counter < delay_until_text);
2000098a:	4b4a      	ldr	r3, [pc, #296]	; (20000ab4 <main+0x8b8>)
2000098c:	681a      	ldr	r2, [r3, #0]
2000098e:	4b4a      	ldr	r3, [pc, #296]	; (20000ab8 <main+0x8bc>)
20000990:	681b      	ldr	r3, [r3, #0]
20000992:	429a      	cmp	r2, r3
20000994:	da00      	bge.n	20000998 <main+0x79c>
20000996:	e1c5      	b.n	20000d24 <main+0xb28>
				else if (counter < delay_until_text + 1*long_text)
20000998:	4b47      	ldr	r3, [pc, #284]	; (20000ab8 <main+0x8bc>)
2000099a:	681a      	ldr	r2, [r3, #0]
2000099c:	4b48      	ldr	r3, [pc, #288]	; (20000ac0 <main+0x8c4>)
2000099e:	681b      	ldr	r3, [r3, #0]
200009a0:	18d2      	adds	r2, r2, r3
200009a2:	4b44      	ldr	r3, [pc, #272]	; (20000ab4 <main+0x8b8>)
200009a4:	681b      	ldr	r3, [r3, #0]
200009a6:	429a      	cmp	r2, r3
200009a8:	dd0c      	ble.n	200009c4 <main+0x7c8>
					text1.display(&text1, 20);
200009aa:	4b46      	ldr	r3, [pc, #280]	; (20000ac4 <main+0x8c8>)
200009ac:	2298      	movs	r2, #152	; 0x98
200009ae:	00d2      	lsls	r2, r2, #3
200009b0:	4694      	mov	ip, r2
200009b2:	44bc      	add	ip, r7
200009b4:	4463      	add	r3, ip
200009b6:	691b      	ldr	r3, [r3, #16]
200009b8:	22dc      	movs	r2, #220	; 0xdc
200009ba:	18ba      	adds	r2, r7, r2
200009bc:	2114      	movs	r1, #20
200009be:	0010      	movs	r0, r2
200009c0:	4798      	blx	r3
200009c2:	e1af      	b.n	20000d24 <main+0xb28>
				else if(counter < delay_until_text + 1*long_text + 1*short_text)
200009c4:	4b3c      	ldr	r3, [pc, #240]	; (20000ab8 <main+0x8bc>)
200009c6:	681a      	ldr	r2, [r3, #0]
200009c8:	4b3d      	ldr	r3, [pc, #244]	; (20000ac0 <main+0x8c4>)
200009ca:	681b      	ldr	r3, [r3, #0]
200009cc:	18d2      	adds	r2, r2, r3
200009ce:	4b3e      	ldr	r3, [pc, #248]	; (20000ac8 <main+0x8cc>)
200009d0:	681b      	ldr	r3, [r3, #0]
200009d2:	18d2      	adds	r2, r2, r3
200009d4:	4b37      	ldr	r3, [pc, #220]	; (20000ab4 <main+0x8b8>)
200009d6:	681b      	ldr	r3, [r3, #0]
200009d8:	429a      	cmp	r2, r3
200009da:	dd0c      	ble.n	200009f6 <main+0x7fa>
					text2.display(&text2, 20);
200009dc:	4b3b      	ldr	r3, [pc, #236]	; (20000acc <main+0x8d0>)
200009de:	2298      	movs	r2, #152	; 0x98
200009e0:	00d2      	lsls	r2, r2, #3
200009e2:	4694      	mov	ip, r2
200009e4:	44bc      	add	ip, r7
200009e6:	4463      	add	r3, ip
200009e8:	691b      	ldr	r3, [r3, #16]
200009ea:	22c8      	movs	r2, #200	; 0xc8
200009ec:	18ba      	adds	r2, r7, r2
200009ee:	2114      	movs	r1, #20
200009f0:	0010      	movs	r0, r2
200009f2:	4798      	blx	r3
200009f4:	e196      	b.n	20000d24 <main+0xb28>
				else if(counter < delay_until_text + 2*long_text + 1*short_text)
200009f6:	4b32      	ldr	r3, [pc, #200]	; (20000ac0 <main+0x8c4>)
200009f8:	681b      	ldr	r3, [r3, #0]
200009fa:	005a      	lsls	r2, r3, #1
200009fc:	4b2e      	ldr	r3, [pc, #184]	; (20000ab8 <main+0x8bc>)
200009fe:	681b      	ldr	r3, [r3, #0]
20000a00:	18d2      	adds	r2, r2, r3
20000a02:	4b31      	ldr	r3, [pc, #196]	; (20000ac8 <main+0x8cc>)
20000a04:	681b      	ldr	r3, [r3, #0]
20000a06:	18d2      	adds	r2, r2, r3
20000a08:	4b2a      	ldr	r3, [pc, #168]	; (20000ab4 <main+0x8b8>)
20000a0a:	681b      	ldr	r3, [r3, #0]
20000a0c:	429a      	cmp	r2, r3
20000a0e:	dd61      	ble.n	20000ad4 <main+0x8d8>
					text3.display(&text3, 20);
20000a10:	4b2f      	ldr	r3, [pc, #188]	; (20000ad0 <main+0x8d4>)
20000a12:	2298      	movs	r2, #152	; 0x98
20000a14:	00d2      	lsls	r2, r2, #3
20000a16:	4694      	mov	ip, r2
20000a18:	44bc      	add	ip, r7
20000a1a:	4463      	add	r3, ip
20000a1c:	691b      	ldr	r3, [r3, #16]
20000a1e:	22b4      	movs	r2, #180	; 0xb4
20000a20:	18ba      	adds	r2, r7, r2
20000a22:	2114      	movs	r1, #20
20000a24:	0010      	movs	r0, r2
20000a26:	4798      	blx	r3
20000a28:	e17c      	b.n	20000d24 <main+0xb28>
20000a2a:	46c0      	nop			; (mov r8, r8)
20000a2c:	fffffd88 			; <UNDEFINED> instruction: 0xfffffd88
20000a30:	fffffd64 			; <UNDEFINED> instruction: 0xfffffd64
20000a34:	fffffd1c 			; <UNDEFINED> instruction: 0xfffffd1c
20000a38:	fffffd40 			; <UNDEFINED> instruction: 0xfffffd40
20000a3c:	200018cd 	andcs	r1, r0, sp, asr #17
20000a40:	2000f448 	andcs	pc, r0, r8, asr #8
20000a44:	2000f44c 	andcs	pc, r0, ip, asr #8
20000a48:	2000f45c 	andcs	pc, r0, ip, asr r4	; <UNPREDICTABLE>
20000a4c:	2000f470 	andcs	pc, r0, r0, ror r4	; <UNPREDICTABLE>
20000a50:	2000f484 	andcs	pc, r0, r4, lsl #9
20000a54:	2000f48c 	andcs	pc, r0, ip, lsl #9
20000a58:	2000f49c 	mulcs	r0, ip, r4
20000a5c:	2000f4b0 			; <UNDEFINED> instruction: 0x2000f4b0
20000a60:	2000f4c4 	andcs	pc, r0, r4, asr #9
20000a64:	2000f4d0 	ldrdcs	pc, [r0], -r0
20000a68:	2000f4e4 	andcs	pc, r0, r4, ror #9
20000a6c:	2000f4f4 	strdcs	pc, [r0], -r4
20000a70:	2000f500 	andcs	pc, r0, r0, lsl #10
20000a74:	2000f514 	andcs	pc, r0, r4, lsl r5	; <UNPREDICTABLE>
20000a78:	2000f52c 	andcs	pc, r0, ip, lsr #10
20000a7c:	2000f540 	andcs	pc, r0, r0, asr #10
20000a80:	2000f554 	andcs	pc, r0, r4, asr r5	; <UNPREDICTABLE>
20000a84:	2000f568 	andcs	pc, r0, r8, ror #10
20000a88:	2000f580 	andcs	pc, r0, r0, lsl #11
20000a8c:	2000f58c 	andcs	pc, r0, ip, lsl #11
20000a90:	2000f5a0 	andcs	pc, r0, r0, lsr #11
20000a94:	2000f5b4 			; <UNDEFINED> instruction: 0x2000f5b4
20000a98:	000004bc 			; <UNDEFINED> instruction: 0x000004bc
20000a9c:	000004b4 			; <UNDEFINED> instruction: 0x000004b4
20000aa0:	000004ac 	andeq	r0, r0, ip, lsr #9
20000aa4:	000004a4 	andeq	r0, r0, r4, lsr #9
20000aa8:	20008964 	andcs	r8, r0, r4, ror #18
20000aac:	2000f6d8 	ldrdcs	pc, [r0], -r8
20000ab0:	00000404 	andeq	r0, r0, r4, lsl #8
20000ab4:	200048d0 	ldrdcs	r4, [r0], -r0
20000ab8:	20008968 	andcs	r8, r0, r8, ror #18
20000abc:	fffffc30 			; <UNDEFINED> instruction: 0xfffffc30
20000ac0:	2000896c 	andcs	r8, r0, ip, ror #18
20000ac4:	fffffc1c 			; <UNDEFINED> instruction: 0xfffffc1c
20000ac8:	20008970 	andcs	r8, r0, r0, ror r9
20000acc:	fffffc08 			; <UNDEFINED> instruction: 0xfffffc08
20000ad0:	fffffbf4 			; <UNDEFINED> instruction: 0xfffffbf4
				else if(counter < delay_until_text + 2*long_text + 2*short_text)
20000ad4:	4bdb      	ldr	r3, [pc, #876]	; (20000e44 <main+0xc48>)
20000ad6:	681b      	ldr	r3, [r3, #0]
20000ad8:	005a      	lsls	r2, r3, #1
20000ada:	4bdb      	ldr	r3, [pc, #876]	; (20000e48 <main+0xc4c>)
20000adc:	681b      	ldr	r3, [r3, #0]
20000ade:	18d2      	adds	r2, r2, r3
20000ae0:	4bda      	ldr	r3, [pc, #872]	; (20000e4c <main+0xc50>)
20000ae2:	681b      	ldr	r3, [r3, #0]
20000ae4:	005b      	lsls	r3, r3, #1
20000ae6:	18d2      	adds	r2, r2, r3
20000ae8:	4bd9      	ldr	r3, [pc, #868]	; (20000e50 <main+0xc54>)
20000aea:	681b      	ldr	r3, [r3, #0]
20000aec:	429a      	cmp	r2, r3
20000aee:	dd0c      	ble.n	20000b0a <main+0x90e>
					text4.display(&text4, 20);
20000af0:	4bd8      	ldr	r3, [pc, #864]	; (20000e54 <main+0xc58>)
20000af2:	2298      	movs	r2, #152	; 0x98
20000af4:	00d2      	lsls	r2, r2, #3
20000af6:	4694      	mov	ip, r2
20000af8:	44bc      	add	ip, r7
20000afa:	4463      	add	r3, ip
20000afc:	691b      	ldr	r3, [r3, #16]
20000afe:	22a0      	movs	r2, #160	; 0xa0
20000b00:	18ba      	adds	r2, r7, r2
20000b02:	2114      	movs	r1, #20
20000b04:	0010      	movs	r0, r2
20000b06:	4798      	blx	r3
20000b08:	e10c      	b.n	20000d24 <main+0xb28>
				else if(counter < delay_until_text + 3*long_text + 2*short_text)
20000b0a:	4bce      	ldr	r3, [pc, #824]	; (20000e44 <main+0xc48>)
20000b0c:	681a      	ldr	r2, [r3, #0]
20000b0e:	0013      	movs	r3, r2
20000b10:	005b      	lsls	r3, r3, #1
20000b12:	189a      	adds	r2, r3, r2
20000b14:	4bcc      	ldr	r3, [pc, #816]	; (20000e48 <main+0xc4c>)
20000b16:	681b      	ldr	r3, [r3, #0]
20000b18:	18d2      	adds	r2, r2, r3
20000b1a:	4bcc      	ldr	r3, [pc, #816]	; (20000e4c <main+0xc50>)
20000b1c:	681b      	ldr	r3, [r3, #0]
20000b1e:	005b      	lsls	r3, r3, #1
20000b20:	18d2      	adds	r2, r2, r3
20000b22:	4bcb      	ldr	r3, [pc, #812]	; (20000e50 <main+0xc54>)
20000b24:	681b      	ldr	r3, [r3, #0]
20000b26:	429a      	cmp	r2, r3
20000b28:	dd0c      	ble.n	20000b44 <main+0x948>
					text5.display(&text5, 15);
20000b2a:	4bcb      	ldr	r3, [pc, #812]	; (20000e58 <main+0xc5c>)
20000b2c:	2298      	movs	r2, #152	; 0x98
20000b2e:	00d2      	lsls	r2, r2, #3
20000b30:	4694      	mov	ip, r2
20000b32:	44bc      	add	ip, r7
20000b34:	4463      	add	r3, ip
20000b36:	691b      	ldr	r3, [r3, #16]
20000b38:	228c      	movs	r2, #140	; 0x8c
20000b3a:	18ba      	adds	r2, r7, r2
20000b3c:	210f      	movs	r1, #15
20000b3e:	0010      	movs	r0, r2
20000b40:	4798      	blx	r3
20000b42:	e0ef      	b.n	20000d24 <main+0xb28>
				else if(counter < delay_until_text + 3*long_text + 3*short_text)
20000b44:	4bbf      	ldr	r3, [pc, #764]	; (20000e44 <main+0xc48>)
20000b46:	681a      	ldr	r2, [r3, #0]
20000b48:	0013      	movs	r3, r2
20000b4a:	005b      	lsls	r3, r3, #1
20000b4c:	189a      	adds	r2, r3, r2
20000b4e:	4bbe      	ldr	r3, [pc, #760]	; (20000e48 <main+0xc4c>)
20000b50:	681b      	ldr	r3, [r3, #0]
20000b52:	18d1      	adds	r1, r2, r3
20000b54:	4bbd      	ldr	r3, [pc, #756]	; (20000e4c <main+0xc50>)
20000b56:	681a      	ldr	r2, [r3, #0]
20000b58:	0013      	movs	r3, r2
20000b5a:	005b      	lsls	r3, r3, #1
20000b5c:	189b      	adds	r3, r3, r2
20000b5e:	18ca      	adds	r2, r1, r3
20000b60:	4bbb      	ldr	r3, [pc, #748]	; (20000e50 <main+0xc54>)
20000b62:	681b      	ldr	r3, [r3, #0]
20000b64:	429a      	cmp	r2, r3
20000b66:	dd0c      	ble.n	20000b82 <main+0x986>
					text6.display(&text6, 20);
20000b68:	4bbc      	ldr	r3, [pc, #752]	; (20000e5c <main+0xc60>)
20000b6a:	2298      	movs	r2, #152	; 0x98
20000b6c:	00d2      	lsls	r2, r2, #3
20000b6e:	4694      	mov	ip, r2
20000b70:	44bc      	add	ip, r7
20000b72:	4463      	add	r3, ip
20000b74:	691b      	ldr	r3, [r3, #16]
20000b76:	2278      	movs	r2, #120	; 0x78
20000b78:	18ba      	adds	r2, r7, r2
20000b7a:	2114      	movs	r1, #20
20000b7c:	0010      	movs	r0, r2
20000b7e:	4798      	blx	r3
20000b80:	e0d0      	b.n	20000d24 <main+0xb28>
				else if(counter < delay_until_text + 4*long_text + 3*short_text + 3)
20000b82:	4bb0      	ldr	r3, [pc, #704]	; (20000e44 <main+0xc48>)
20000b84:	681b      	ldr	r3, [r3, #0]
20000b86:	009a      	lsls	r2, r3, #2
20000b88:	4baf      	ldr	r3, [pc, #700]	; (20000e48 <main+0xc4c>)
20000b8a:	681b      	ldr	r3, [r3, #0]
20000b8c:	18d1      	adds	r1, r2, r3
20000b8e:	4baf      	ldr	r3, [pc, #700]	; (20000e4c <main+0xc50>)
20000b90:	681a      	ldr	r2, [r3, #0]
20000b92:	0013      	movs	r3, r2
20000b94:	005b      	lsls	r3, r3, #1
20000b96:	189b      	adds	r3, r3, r2
20000b98:	18cb      	adds	r3, r1, r3
20000b9a:	1cda      	adds	r2, r3, #3
20000b9c:	4bac      	ldr	r3, [pc, #688]	; (20000e50 <main+0xc54>)
20000b9e:	681b      	ldr	r3, [r3, #0]
20000ba0:	429a      	cmp	r2, r3
20000ba2:	dd0c      	ble.n	20000bbe <main+0x9c2>
					text7.display(&text7, 20);
20000ba4:	4bae      	ldr	r3, [pc, #696]	; (20000e60 <main+0xc64>)
20000ba6:	2298      	movs	r2, #152	; 0x98
20000ba8:	00d2      	lsls	r2, r2, #3
20000baa:	4694      	mov	ip, r2
20000bac:	44bc      	add	ip, r7
20000bae:	4463      	add	r3, ip
20000bb0:	691b      	ldr	r3, [r3, #16]
20000bb2:	2264      	movs	r2, #100	; 0x64
20000bb4:	18ba      	adds	r2, r7, r2
20000bb6:	2114      	movs	r1, #20
20000bb8:	0010      	movs	r0, r2
20000bba:	4798      	blx	r3
20000bbc:	e0b2      	b.n	20000d24 <main+0xb28>
				else if(counter < delay_until_text + 5*long_text + 3*short_text + 2)
20000bbe:	4ba1      	ldr	r3, [pc, #644]	; (20000e44 <main+0xc48>)
20000bc0:	681a      	ldr	r2, [r3, #0]
20000bc2:	0013      	movs	r3, r2
20000bc4:	009b      	lsls	r3, r3, #2
20000bc6:	189a      	adds	r2, r3, r2
20000bc8:	4b9f      	ldr	r3, [pc, #636]	; (20000e48 <main+0xc4c>)
20000bca:	681b      	ldr	r3, [r3, #0]
20000bcc:	18d1      	adds	r1, r2, r3
20000bce:	4b9f      	ldr	r3, [pc, #636]	; (20000e4c <main+0xc50>)
20000bd0:	681a      	ldr	r2, [r3, #0]
20000bd2:	0013      	movs	r3, r2
20000bd4:	005b      	lsls	r3, r3, #1
20000bd6:	189b      	adds	r3, r3, r2
20000bd8:	18cb      	adds	r3, r1, r3
20000bda:	1c9a      	adds	r2, r3, #2
20000bdc:	4b9c      	ldr	r3, [pc, #624]	; (20000e50 <main+0xc54>)
20000bde:	681b      	ldr	r3, [r3, #0]
20000be0:	429a      	cmp	r2, r3
20000be2:	dd0c      	ble.n	20000bfe <main+0xa02>
					text8.display(&text8, 20);
20000be4:	4b9f      	ldr	r3, [pc, #636]	; (20000e64 <main+0xc68>)
20000be6:	2298      	movs	r2, #152	; 0x98
20000be8:	00d2      	lsls	r2, r2, #3
20000bea:	4694      	mov	ip, r2
20000bec:	44bc      	add	ip, r7
20000bee:	4463      	add	r3, ip
20000bf0:	691b      	ldr	r3, [r3, #16]
20000bf2:	2250      	movs	r2, #80	; 0x50
20000bf4:	18ba      	adds	r2, r7, r2
20000bf6:	2114      	movs	r1, #20
20000bf8:	0010      	movs	r0, r2
20000bfa:	4798      	blx	r3
20000bfc:	e092      	b.n	20000d24 <main+0xb28>
				else if(counter < delay_until_text + 5*long_text + 4*short_text + 2)
20000bfe:	4b91      	ldr	r3, [pc, #580]	; (20000e44 <main+0xc48>)
20000c00:	681a      	ldr	r2, [r3, #0]
20000c02:	0013      	movs	r3, r2
20000c04:	009b      	lsls	r3, r3, #2
20000c06:	189a      	adds	r2, r3, r2
20000c08:	4b8f      	ldr	r3, [pc, #572]	; (20000e48 <main+0xc4c>)
20000c0a:	681b      	ldr	r3, [r3, #0]
20000c0c:	18d2      	adds	r2, r2, r3
20000c0e:	4b8f      	ldr	r3, [pc, #572]	; (20000e4c <main+0xc50>)
20000c10:	681b      	ldr	r3, [r3, #0]
20000c12:	009b      	lsls	r3, r3, #2
20000c14:	18d3      	adds	r3, r2, r3
20000c16:	1c9a      	adds	r2, r3, #2
20000c18:	4b8d      	ldr	r3, [pc, #564]	; (20000e50 <main+0xc54>)
20000c1a:	681b      	ldr	r3, [r3, #0]
20000c1c:	429a      	cmp	r2, r3
20000c1e:	dd0c      	ble.n	20000c3a <main+0xa3e>
					text9.display(&text9, 20);
20000c20:	4b91      	ldr	r3, [pc, #580]	; (20000e68 <main+0xc6c>)
20000c22:	2298      	movs	r2, #152	; 0x98
20000c24:	00d2      	lsls	r2, r2, #3
20000c26:	4694      	mov	ip, r2
20000c28:	44bc      	add	ip, r7
20000c2a:	4463      	add	r3, ip
20000c2c:	691b      	ldr	r3, [r3, #16]
20000c2e:	223c      	movs	r2, #60	; 0x3c
20000c30:	18ba      	adds	r2, r7, r2
20000c32:	2114      	movs	r1, #20
20000c34:	0010      	movs	r0, r2
20000c36:	4798      	blx	r3
20000c38:	e074      	b.n	20000d24 <main+0xb28>
				else if(counter < delay_until_text + 6*long_text + 4*short_text - 2 + 2)
20000c3a:	4b82      	ldr	r3, [pc, #520]	; (20000e44 <main+0xc48>)
20000c3c:	681a      	ldr	r2, [r3, #0]
20000c3e:	0013      	movs	r3, r2
20000c40:	005b      	lsls	r3, r3, #1
20000c42:	189b      	adds	r3, r3, r2
20000c44:	005b      	lsls	r3, r3, #1
20000c46:	001a      	movs	r2, r3
20000c48:	4b7f      	ldr	r3, [pc, #508]	; (20000e48 <main+0xc4c>)
20000c4a:	681b      	ldr	r3, [r3, #0]
20000c4c:	18d2      	adds	r2, r2, r3
20000c4e:	4b7f      	ldr	r3, [pc, #508]	; (20000e4c <main+0xc50>)
20000c50:	681b      	ldr	r3, [r3, #0]
20000c52:	009b      	lsls	r3, r3, #2
20000c54:	18d2      	adds	r2, r2, r3
20000c56:	4b7e      	ldr	r3, [pc, #504]	; (20000e50 <main+0xc54>)
20000c58:	681b      	ldr	r3, [r3, #0]
20000c5a:	429a      	cmp	r2, r3
20000c5c:	dd0c      	ble.n	20000c78 <main+0xa7c>
					text10.display(&text10, 15);
20000c5e:	4b83      	ldr	r3, [pc, #524]	; (20000e6c <main+0xc70>)
20000c60:	2298      	movs	r2, #152	; 0x98
20000c62:	00d2      	lsls	r2, r2, #3
20000c64:	4694      	mov	ip, r2
20000c66:	44bc      	add	ip, r7
20000c68:	4463      	add	r3, ip
20000c6a:	691b      	ldr	r3, [r3, #16]
20000c6c:	2228      	movs	r2, #40	; 0x28
20000c6e:	18ba      	adds	r2, r7, r2
20000c70:	210f      	movs	r1, #15
20000c72:	0010      	movs	r0, r2
20000c74:	4798      	blx	r3
20000c76:	e055      	b.n	20000d24 <main+0xb28>
				else if(counter < delay_until_text + 6*long_text + 5*short_text + 3 + 2)
20000c78:	4b72      	ldr	r3, [pc, #456]	; (20000e44 <main+0xc48>)
20000c7a:	681a      	ldr	r2, [r3, #0]
20000c7c:	0013      	movs	r3, r2
20000c7e:	005b      	lsls	r3, r3, #1
20000c80:	189b      	adds	r3, r3, r2
20000c82:	005b      	lsls	r3, r3, #1
20000c84:	001a      	movs	r2, r3
20000c86:	4b70      	ldr	r3, [pc, #448]	; (20000e48 <main+0xc4c>)
20000c88:	681b      	ldr	r3, [r3, #0]
20000c8a:	18d1      	adds	r1, r2, r3
20000c8c:	4b6f      	ldr	r3, [pc, #444]	; (20000e4c <main+0xc50>)
20000c8e:	681a      	ldr	r2, [r3, #0]
20000c90:	0013      	movs	r3, r2
20000c92:	009b      	lsls	r3, r3, #2
20000c94:	189b      	adds	r3, r3, r2
20000c96:	18cb      	adds	r3, r1, r3
20000c98:	1d5a      	adds	r2, r3, #5
20000c9a:	4b6d      	ldr	r3, [pc, #436]	; (20000e50 <main+0xc54>)
20000c9c:	681b      	ldr	r3, [r3, #0]
20000c9e:	429a      	cmp	r2, r3
20000ca0:	dd0b      	ble.n	20000cba <main+0xabe>
					text12.display(&text12, 15);
20000ca2:	4b73      	ldr	r3, [pc, #460]	; (20000e70 <main+0xc74>)
20000ca4:	2298      	movs	r2, #152	; 0x98
20000ca6:	00d2      	lsls	r2, r2, #3
20000ca8:	4694      	mov	ip, r2
20000caa:	44bc      	add	ip, r7
20000cac:	4463      	add	r3, ip
20000cae:	691b      	ldr	r3, [r3, #16]
20000cb0:	003a      	movs	r2, r7
20000cb2:	210f      	movs	r1, #15
20000cb4:	0010      	movs	r0, r2
20000cb6:	4798      	blx	r3
20000cb8:	e034      	b.n	20000d24 <main+0xb28>
				else if(counter < delay_until_text + 7*long_text + 5*short_text + 6 + 2) {
20000cba:	4b62      	ldr	r3, [pc, #392]	; (20000e44 <main+0xc48>)
20000cbc:	681a      	ldr	r2, [r3, #0]
20000cbe:	0013      	movs	r3, r2
20000cc0:	00db      	lsls	r3, r3, #3
20000cc2:	1a9a      	subs	r2, r3, r2
20000cc4:	4b60      	ldr	r3, [pc, #384]	; (20000e48 <main+0xc4c>)
20000cc6:	681b      	ldr	r3, [r3, #0]
20000cc8:	18d1      	adds	r1, r2, r3
20000cca:	4b60      	ldr	r3, [pc, #384]	; (20000e4c <main+0xc50>)
20000ccc:	681a      	ldr	r2, [r3, #0]
20000cce:	0013      	movs	r3, r2
20000cd0:	009b      	lsls	r3, r3, #2
20000cd2:	189b      	adds	r3, r3, r2
20000cd4:	18cb      	adds	r3, r1, r3
20000cd6:	3308      	adds	r3, #8
20000cd8:	001a      	movs	r2, r3
20000cda:	4b5d      	ldr	r3, [pc, #372]	; (20000e50 <main+0xc54>)
20000cdc:	681b      	ldr	r3, [r3, #0]
20000cde:	429a      	cmp	r2, r3
20000ce0:	dd0c      	ble.n	20000cfc <main+0xb00>
					text11.display(&text11, 20);
20000ce2:	4b64      	ldr	r3, [pc, #400]	; (20000e74 <main+0xc78>)
20000ce4:	2298      	movs	r2, #152	; 0x98
20000ce6:	00d2      	lsls	r2, r2, #3
20000ce8:	4694      	mov	ip, r2
20000cea:	44bc      	add	ip, r7
20000cec:	4463      	add	r3, ip
20000cee:	691b      	ldr	r3, [r3, #16]
20000cf0:	2214      	movs	r2, #20
20000cf2:	18ba      	adds	r2, r7, r2
20000cf4:	2114      	movs	r1, #20
20000cf6:	0010      	movs	r0, r2
20000cf8:	4798      	blx	r3
20000cfa:	e013      	b.n	20000d24 <main+0xb28>
				} else {
					if (read_DIL() == 0) {
20000cfc:	f003 f828 	bl	20003d50 <read_DIL>
20000d00:	1e03      	subs	r3, r0, #0
20000d02:	d10f      	bne.n	20000d24 <main+0xb28>
						current_screen = GAME_SCREEN;
20000d04:	4b5c      	ldr	r3, [pc, #368]	; (20000e78 <main+0xc7c>)
20000d06:	2202      	movs	r2, #2
20000d08:	601a      	str	r2, [r3, #0]
						random_seed = counter;
20000d0a:	4b51      	ldr	r3, [pc, #324]	; (20000e50 <main+0xc54>)
20000d0c:	681a      	ldr	r2, [r3, #0]
20000d0e:	4b5b      	ldr	r3, [pc, #364]	; (20000e7c <main+0xc80>)
20000d10:	601a      	str	r2, [r3, #0]
						counter = 0;
20000d12:	4b4f      	ldr	r3, [pc, #316]	; (20000e50 <main+0xc54>)
20000d14:	2200      	movs	r2, #0
20000d16:	601a      	str	r2, [r3, #0]
						ascii_write("Daffo: I'm feeling ","a bit spooked out...");
20000d18:	4a59      	ldr	r2, [pc, #356]	; (20000e80 <main+0xc84>)
20000d1a:	4b5a      	ldr	r3, [pc, #360]	; (20000e84 <main+0xc88>)
20000d1c:	0011      	movs	r1, r2
20000d1e:	0018      	movs	r0, r3
20000d20:	f003 fa18 	bl	20004154 <ascii_write>
					}
				}
				
				if(read_DIL() == SKIP_VALUE) {
20000d24:	f003 f814 	bl	20003d50 <read_DIL>
20000d28:	0003      	movs	r3, r0
20000d2a:	2b81      	cmp	r3, #129	; 0x81
20000d2c:	d10f      	bne.n	20000d4e <main+0xb52>
					current_screen = GAME_SCREEN;
20000d2e:	4b52      	ldr	r3, [pc, #328]	; (20000e78 <main+0xc7c>)
20000d30:	2202      	movs	r2, #2
20000d32:	601a      	str	r2, [r3, #0]
					random_seed = counter;
20000d34:	4b46      	ldr	r3, [pc, #280]	; (20000e50 <main+0xc54>)
20000d36:	681a      	ldr	r2, [r3, #0]
20000d38:	4b50      	ldr	r3, [pc, #320]	; (20000e7c <main+0xc80>)
20000d3a:	601a      	str	r2, [r3, #0]
					counter = 0;
20000d3c:	4b44      	ldr	r3, [pc, #272]	; (20000e50 <main+0xc54>)
20000d3e:	2200      	movs	r2, #0
20000d40:	601a      	str	r2, [r3, #0]
					ascii_write("Daffo: I'm feeling ","a bit spooked out...");
20000d42:	4a4f      	ldr	r2, [pc, #316]	; (20000e80 <main+0xc84>)
20000d44:	4b4f      	ldr	r3, [pc, #316]	; (20000e84 <main+0xc88>)
20000d46:	0011      	movs	r1, r2
20000d48:	0018      	movs	r0, r3
20000d4a:	f003 fa03 	bl	20004154 <ascii_write>
				}
				
				
				fire2.update(&fire2);
20000d4e:	4b4e      	ldr	r3, [pc, #312]	; (20000e88 <main+0xc8c>)
20000d50:	2298      	movs	r2, #152	; 0x98
20000d52:	00d2      	lsls	r2, r2, #3
20000d54:	4694      	mov	ip, r2
20000d56:	44bc      	add	ip, r7
20000d58:	4463      	add	r3, ip
20000d5a:	68db      	ldr	r3, [r3, #12]
20000d5c:	2292      	movs	r2, #146	; 0x92
20000d5e:	0092      	lsls	r2, r2, #2
20000d60:	18ba      	adds	r2, r7, r2
20000d62:	0010      	movs	r0, r2
20000d64:	4798      	blx	r3
				fire3.update(&fire3);
20000d66:	4b49      	ldr	r3, [pc, #292]	; (20000e8c <main+0xc90>)
20000d68:	2298      	movs	r2, #152	; 0x98
20000d6a:	00d2      	lsls	r2, r2, #3
20000d6c:	4694      	mov	ip, r2
20000d6e:	44bc      	add	ip, r7
20000d70:	4463      	add	r3, ip
20000d72:	68db      	ldr	r3, [r3, #12]
20000d74:	2289      	movs	r2, #137	; 0x89
20000d76:	0092      	lsls	r2, r2, #2
20000d78:	18ba      	adds	r2, r7, r2
20000d7a:	0010      	movs	r0, r2
20000d7c:	4798      	blx	r3
				fire1.update(&fire1);
20000d7e:	4b44      	ldr	r3, [pc, #272]	; (20000e90 <main+0xc94>)
20000d80:	2298      	movs	r2, #152	; 0x98
20000d82:	00d2      	lsls	r2, r2, #3
20000d84:	4694      	mov	ip, r2
20000d86:	44bc      	add	ip, r7
20000d88:	4463      	add	r3, ip
20000d8a:	68db      	ldr	r3, [r3, #12]
20000d8c:	22ee      	movs	r2, #238	; 0xee
20000d8e:	0052      	lsls	r2, r2, #1
20000d90:	18ba      	adds	r2, r7, r2
20000d92:	0010      	movs	r0, r2
20000d94:	4798      	blx	r3
				fire4.update(&fire4);
20000d96:	4b3f      	ldr	r3, [pc, #252]	; (20000e94 <main+0xc98>)
20000d98:	2298      	movs	r2, #152	; 0x98
20000d9a:	00d2      	lsls	r2, r2, #3
20000d9c:	4694      	mov	ip, r2
20000d9e:	44bc      	add	ip, r7
20000da0:	4463      	add	r3, ip
20000da2:	68db      	ldr	r3, [r3, #12]
20000da4:	2280      	movs	r2, #128	; 0x80
20000da6:	0092      	lsls	r2, r2, #2
20000da8:	18ba      	adds	r2, r7, r2
20000daa:	0010      	movs	r0, r2
20000dac:	4798      	blx	r3
				bird.update(&bird);
20000dae:	4b3a      	ldr	r3, [pc, #232]	; (20000e98 <main+0xc9c>)
20000db0:	2298      	movs	r2, #152	; 0x98
20000db2:	00d2      	lsls	r2, r2, #3
20000db4:	4694      	mov	ip, r2
20000db6:	44bc      	add	ip, r7
20000db8:	4463      	add	r3, ip
20000dba:	68db      	ldr	r3, [r3, #12]
20000dbc:	22b6      	movs	r2, #182	; 0xb6
20000dbe:	0092      	lsls	r2, r2, #2
20000dc0:	18ba      	adds	r2, r7, r2
20000dc2:	0010      	movs	r0, r2
20000dc4:	4798      	blx	r3
				bird.xPos -= 2;
20000dc6:	4b34      	ldr	r3, [pc, #208]	; (20000e98 <main+0xc9c>)
20000dc8:	2298      	movs	r2, #152	; 0x98
20000dca:	00d2      	lsls	r2, r2, #3
20000dcc:	4694      	mov	ip, r2
20000dce:	44bc      	add	ip, r7
20000dd0:	4463      	add	r3, ip
20000dd2:	685b      	ldr	r3, [r3, #4]
20000dd4:	1e9a      	subs	r2, r3, #2
20000dd6:	4b30      	ldr	r3, [pc, #192]	; (20000e98 <main+0xc9c>)
20000dd8:	2198      	movs	r1, #152	; 0x98
20000dda:	00c9      	lsls	r1, r1, #3
20000ddc:	468c      	mov	ip, r1
20000dde:	44bc      	add	ip, r7
20000de0:	4463      	add	r3, ip
20000de2:	605a      	str	r2, [r3, #4]
				if (counter % 2 == 0) {
20000de4:	4b1a      	ldr	r3, [pc, #104]	; (20000e50 <main+0xc54>)
20000de6:	681b      	ldr	r3, [r3, #0]
20000de8:	001a      	movs	r2, r3
20000dea:	2301      	movs	r3, #1
20000dec:	4013      	ands	r3, r2
20000dee:	d001      	beq.n	20000df4 <main+0xbf8>
20000df0:	f000 fd31 	bl	20001856 <main+0x165a>
					bird.yPos--;
20000df4:	4b28      	ldr	r3, [pc, #160]	; (20000e98 <main+0xc9c>)
20000df6:	2298      	movs	r2, #152	; 0x98
20000df8:	00d2      	lsls	r2, r2, #3
20000dfa:	4694      	mov	ip, r2
20000dfc:	44bc      	add	ip, r7
20000dfe:	4463      	add	r3, ip
20000e00:	689b      	ldr	r3, [r3, #8]
20000e02:	1e5a      	subs	r2, r3, #1
20000e04:	4b24      	ldr	r3, [pc, #144]	; (20000e98 <main+0xc9c>)
20000e06:	2198      	movs	r1, #152	; 0x98
20000e08:	00c9      	lsls	r1, r1, #3
20000e0a:	468c      	mov	ip, r1
20000e0c:	44bc      	add	ip, r7
20000e0e:	4463      	add	r3, ip
20000e10:	609a      	str	r2, [r3, #8]
				}
				
				break;
20000e12:	f000 fd20 	bl	20001856 <main+0x165a>
				
			case GAME_SCREEN: //inside
				
				counter++;
20000e16:	4b0e      	ldr	r3, [pc, #56]	; (20000e50 <main+0xc54>)
20000e18:	681b      	ldr	r3, [r3, #0]
20000e1a:	1c5a      	adds	r2, r3, #1
20000e1c:	4b0c      	ldr	r3, [pc, #48]	; (20000e50 <main+0xc54>)
20000e1e:	601a      	str	r2, [r3, #0]
				if(read_DIL_single( LIGHT_TRIGGER )) {
20000e20:	2006      	movs	r0, #6
20000e22:	f002 ffa5 	bl	20003d70 <read_DIL_single>
20000e26:	1e03      	subs	r3, r0, #0
20000e28:	d03c      	beq.n	20000ea4 <main+0xca8>
					draw_game_object( &indoors2 );
20000e2a:	23d1      	movs	r3, #209	; 0xd1
20000e2c:	009b      	lsls	r3, r3, #2
20000e2e:	18fb      	adds	r3, r7, r3
20000e30:	0018      	movs	r0, r3
20000e32:	f002 fee3 	bl	20003bfc <draw_game_object>
					ascii_write("*click*","");
20000e36:	4a19      	ldr	r2, [pc, #100]	; (20000e9c <main+0xca0>)
20000e38:	4b19      	ldr	r3, [pc, #100]	; (20000ea0 <main+0xca4>)
20000e3a:	0011      	movs	r1, r2
20000e3c:	0018      	movs	r0, r3
20000e3e:	f003 f989 	bl	20004154 <ascii_write>
20000e42:	e03b      	b.n	20000ebc <main+0xcc0>
20000e44:	2000896c 	andcs	r8, r0, ip, ror #18
20000e48:	20008968 	andcs	r8, r0, r8, ror #18
20000e4c:	20008970 	andcs	r8, r0, r0, ror r9
20000e50:	200048d0 	ldrdcs	r4, [r0], -r0
20000e54:	fffffbe0 			; <UNDEFINED> instruction: 0xfffffbe0
20000e58:	fffffbcc 			; <UNDEFINED> instruction: 0xfffffbcc
20000e5c:	fffffbb8 			; <UNDEFINED> instruction: 0xfffffbb8
20000e60:	fffffba4 			; <UNDEFINED> instruction: 0xfffffba4
20000e64:	fffffb90 			; <UNDEFINED> instruction: 0xfffffb90
20000e68:	fffffb7c 			; <UNDEFINED> instruction: 0xfffffb7c
20000e6c:	fffffb68 			; <UNDEFINED> instruction: 0xfffffb68
20000e70:	fffffb40 			; <UNDEFINED> instruction: 0xfffffb40
20000e74:	fffffb54 			; <UNDEFINED> instruction: 0xfffffb54
20000e78:	20008964 	andcs	r8, r0, r4, ror #18
20000e7c:	200049d4 	ldrdcs	r4, [r0], -r4	; <UNPREDICTABLE>
20000e80:	2000f5c8 	andcs	pc, r0, r8, asr #11
20000e84:	2000f5e0 	andcs	pc, r0, r0, ror #11
20000e88:	fffffd88 			; <UNDEFINED> instruction: 0xfffffd88
20000e8c:	fffffd64 			; <UNDEFINED> instruction: 0xfffffd64
20000e90:	fffffd1c 			; <UNDEFINED> instruction: 0xfffffd1c
20000e94:	fffffd40 			; <UNDEFINED> instruction: 0xfffffd40
20000e98:	fffffe18 			; <UNDEFINED> instruction: 0xfffffe18
20000e9c:	2000f5f4 	strdcs	pc, [r0], -r4
20000ea0:	2000f5f8 	strdcs	pc, [r0], -r8
				} else {
					draw_game_object( &indoors );
20000ea4:	23da      	movs	r3, #218	; 0xda
20000ea6:	009b      	lsls	r3, r3, #2
20000ea8:	18fb      	adds	r3, r7, r3
20000eaa:	0018      	movs	r0, r3
20000eac:	f002 fea6 	bl	20003bfc <draw_game_object>
					draw_game_object( &trophy );
20000eb0:	23c8      	movs	r3, #200	; 0xc8
20000eb2:	009b      	lsls	r3, r3, #2
20000eb4:	18fb      	adds	r3, r7, r3
20000eb6:	0018      	movs	r0, r3
20000eb8:	f002 fea0 	bl	20003bfc <draw_game_object>
				}
				
				if(!no_DIP)
20000ebc:	4be1      	ldr	r3, [pc, #900]	; (20001244 <main+0x1048>)
20000ebe:	18fb      	adds	r3, r7, r3
20000ec0:	681b      	ldr	r3, [r3, #0]
20000ec2:	2b00      	cmp	r3, #0
20000ec4:	d105      	bne.n	20000ed2 <main+0xcd6>
					draw_game_object( &DIP );
20000ec6:	23a4      	movs	r3, #164	; 0xa4
20000ec8:	009b      	lsls	r3, r3, #2
20000eca:	18fb      	adds	r3, r7, r3
20000ecc:	0018      	movs	r0, r3
20000ece:	f002 fe95 	bl	20003bfc <draw_game_object>
				draw_game_object( &player );
20000ed2:	239b      	movs	r3, #155	; 0x9b
20000ed4:	009b      	lsls	r3, r3, #2
20000ed6:	18fb      	adds	r3, r7, r3
20000ed8:	0018      	movs	r0, r3
20000eda:	f002 fe8f 	bl	20003bfc <draw_game_object>
				static int i;
				for(i = 0; i < 3; i++) {
20000ede:	4bda      	ldr	r3, [pc, #872]	; (20001248 <main+0x104c>)
20000ee0:	2200      	movs	r2, #0
20000ee2:	601a      	str	r2, [r3, #0]
20000ee4:	e029      	b.n	20000f3a <main+0xd3e>
					draw_game_object( &fires[i] );
20000ee6:	4bd8      	ldr	r3, [pc, #864]	; (20001248 <main+0x104c>)
20000ee8:	681a      	ldr	r2, [r3, #0]
20000eea:	1d79      	adds	r1, r7, #5
20000eec:	31ff      	adds	r1, #255	; 0xff
20000eee:	0013      	movs	r3, r2
20000ef0:	00db      	lsls	r3, r3, #3
20000ef2:	189b      	adds	r3, r3, r2
20000ef4:	009b      	lsls	r3, r3, #2
20000ef6:	18cb      	adds	r3, r1, r3
20000ef8:	0018      	movs	r0, r3
20000efa:	f002 fe7f 	bl	20003bfc <draw_game_object>
					fires[i].update( &fires[i] );
20000efe:	4bd2      	ldr	r3, [pc, #840]	; (20001248 <main+0x104c>)
20000f00:	681a      	ldr	r2, [r3, #0]
20000f02:	4bd2      	ldr	r3, [pc, #840]	; (2000124c <main+0x1050>)
20000f04:	2198      	movs	r1, #152	; 0x98
20000f06:	00c9      	lsls	r1, r1, #3
20000f08:	1879      	adds	r1, r7, r1
20000f0a:	18c9      	adds	r1, r1, r3
20000f0c:	0013      	movs	r3, r2
20000f0e:	00db      	lsls	r3, r3, #3
20000f10:	189b      	adds	r3, r3, r2
20000f12:	009b      	lsls	r3, r3, #2
20000f14:	18cb      	adds	r3, r1, r3
20000f16:	330c      	adds	r3, #12
20000f18:	6819      	ldr	r1, [r3, #0]
20000f1a:	4bcb      	ldr	r3, [pc, #812]	; (20001248 <main+0x104c>)
20000f1c:	681a      	ldr	r2, [r3, #0]
20000f1e:	1d78      	adds	r0, r7, #5
20000f20:	30ff      	adds	r0, #255	; 0xff
20000f22:	0013      	movs	r3, r2
20000f24:	00db      	lsls	r3, r3, #3
20000f26:	189b      	adds	r3, r3, r2
20000f28:	009b      	lsls	r3, r3, #2
20000f2a:	18c3      	adds	r3, r0, r3
20000f2c:	0018      	movs	r0, r3
20000f2e:	4788      	blx	r1
				for(i = 0; i < 3; i++) {
20000f30:	4bc5      	ldr	r3, [pc, #788]	; (20001248 <main+0x104c>)
20000f32:	681b      	ldr	r3, [r3, #0]
20000f34:	1c5a      	adds	r2, r3, #1
20000f36:	4bc4      	ldr	r3, [pc, #784]	; (20001248 <main+0x104c>)
20000f38:	601a      	str	r2, [r3, #0]
20000f3a:	4bc3      	ldr	r3, [pc, #780]	; (20001248 <main+0x104c>)
20000f3c:	681b      	ldr	r3, [r3, #0]
20000f3e:	2b02      	cmp	r3, #2
20000f40:	ddd1      	ble.n	20000ee6 <main+0xcea>
				}
				draw_game_object( &hair );
20000f42:	23bf      	movs	r3, #191	; 0xbf
20000f44:	009b      	lsls	r3, r3, #2
20000f46:	18fb      	adds	r3, r7, r3
20000f48:	0018      	movs	r0, r3
20000f4a:	f002 fe57 	bl	20003bfc <draw_game_object>
				if(exploding) {
20000f4e:	2395      	movs	r3, #149	; 0x95
20000f50:	00db      	lsls	r3, r3, #3
20000f52:	18fb      	adds	r3, r7, r3
20000f54:	681b      	ldr	r3, [r3, #0]
20000f56:	2b00      	cmp	r3, #0
20000f58:	d055      	beq.n	20001006 <main+0xe0a>
					if (first) {
20000f5a:	4bbd      	ldr	r3, [pc, #756]	; (20001250 <main+0x1054>)
20000f5c:	18fb      	adds	r3, r7, r3
20000f5e:	681b      	ldr	r3, [r3, #0]
20000f60:	2b00      	cmp	r3, #0
20000f62:	d035      	beq.n	20000fd0 <main+0xdd4>
						boom.xPos = player.xPos + 9 - 53;
20000f64:	4bbb      	ldr	r3, [pc, #748]	; (20001254 <main+0x1058>)
20000f66:	2298      	movs	r2, #152	; 0x98
20000f68:	00d2      	lsls	r2, r2, #3
20000f6a:	4694      	mov	ip, r2
20000f6c:	44bc      	add	ip, r7
20000f6e:	4463      	add	r3, ip
20000f70:	685b      	ldr	r3, [r3, #4]
20000f72:	3b2c      	subs	r3, #44	; 0x2c
20000f74:	001a      	movs	r2, r3
20000f76:	4bb8      	ldr	r3, [pc, #736]	; (20001258 <main+0x105c>)
20000f78:	2198      	movs	r1, #152	; 0x98
20000f7a:	00c9      	lsls	r1, r1, #3
20000f7c:	468c      	mov	ip, r1
20000f7e:	44bc      	add	ip, r7
20000f80:	4463      	add	r3, ip
20000f82:	605a      	str	r2, [r3, #4]
						boom.yPos = player.yPos + 9 - 27;
20000f84:	4bb3      	ldr	r3, [pc, #716]	; (20001254 <main+0x1058>)
20000f86:	2298      	movs	r2, #152	; 0x98
20000f88:	00d2      	lsls	r2, r2, #3
20000f8a:	4694      	mov	ip, r2
20000f8c:	44bc      	add	ip, r7
20000f8e:	4463      	add	r3, ip
20000f90:	689b      	ldr	r3, [r3, #8]
20000f92:	3b12      	subs	r3, #18
20000f94:	001a      	movs	r2, r3
20000f96:	4bb0      	ldr	r3, [pc, #704]	; (20001258 <main+0x105c>)
20000f98:	2198      	movs	r1, #152	; 0x98
20000f9a:	00c9      	lsls	r1, r1, #3
20000f9c:	468c      	mov	ip, r1
20000f9e:	44bc      	add	ip, r7
20000fa0:	4463      	add	r3, ip
20000fa2:	609a      	str	r2, [r3, #8]
						player.xPos = -100;
20000fa4:	4bab      	ldr	r3, [pc, #684]	; (20001254 <main+0x1058>)
20000fa6:	2298      	movs	r2, #152	; 0x98
20000fa8:	00d2      	lsls	r2, r2, #3
20000faa:	4694      	mov	ip, r2
20000fac:	44bc      	add	ip, r7
20000fae:	4463      	add	r3, ip
20000fb0:	2264      	movs	r2, #100	; 0x64
20000fb2:	4252      	negs	r2, r2
20000fb4:	605a      	str	r2, [r3, #4]
						player.yPos = -100;
20000fb6:	4ba7      	ldr	r3, [pc, #668]	; (20001254 <main+0x1058>)
20000fb8:	2298      	movs	r2, #152	; 0x98
20000fba:	00d2      	lsls	r2, r2, #3
20000fbc:	4694      	mov	ip, r2
20000fbe:	44bc      	add	ip, r7
20000fc0:	4463      	add	r3, ip
20000fc2:	2264      	movs	r2, #100	; 0x64
20000fc4:	4252      	negs	r2, r2
20000fc6:	609a      	str	r2, [r3, #8]
						first = 0;
20000fc8:	2300      	movs	r3, #0
20000fca:	4aa1      	ldr	r2, [pc, #644]	; (20001250 <main+0x1054>)
20000fcc:	18ba      	adds	r2, r7, r2
20000fce:	6013      	str	r3, [r2, #0]
					}					
					draw_game_object( &boom );
20000fd0:	23ad      	movs	r3, #173	; 0xad
20000fd2:	009b      	lsls	r3, r3, #2
20000fd4:	18fb      	adds	r3, r7, r3
20000fd6:	0018      	movs	r0, r3
20000fd8:	f002 fe10 	bl	20003bfc <draw_game_object>
					if(boom.current_frame < 10)
20000fdc:	4b9e      	ldr	r3, [pc, #632]	; (20001258 <main+0x105c>)
20000fde:	2298      	movs	r2, #152	; 0x98
20000fe0:	00d2      	lsls	r2, r2, #3
20000fe2:	4694      	mov	ip, r2
20000fe4:	44bc      	add	ip, r7
20000fe6:	4463      	add	r3, ip
20000fe8:	695b      	ldr	r3, [r3, #20]
20000fea:	2b09      	cmp	r3, #9
20000fec:	dc0b      	bgt.n	20001006 <main+0xe0a>
						boom.update( &boom );
20000fee:	4b9a      	ldr	r3, [pc, #616]	; (20001258 <main+0x105c>)
20000ff0:	2298      	movs	r2, #152	; 0x98
20000ff2:	00d2      	lsls	r2, r2, #3
20000ff4:	4694      	mov	ip, r2
20000ff6:	44bc      	add	ip, r7
20000ff8:	4463      	add	r3, ip
20000ffa:	68db      	ldr	r3, [r3, #12]
20000ffc:	22ad      	movs	r2, #173	; 0xad
20000ffe:	0092      	lsls	r2, r2, #2
20001000:	18ba      	adds	r2, r7, r2
20001002:	0010      	movs	r0, r2
20001004:	4798      	blx	r3
				}
				
				show_frame(1);
20001006:	2001      	movs	r0, #1
20001008:	f002 fe39 	bl	20003c7e <show_frame>
				
				static int last_climb_value = 100;
				if((read_DIL_single(CLIMB_TRIGGER) != last_climb_value) && player.xPos > 90 && player.xPos < 108 && !has_climbed) {
2000100c:	2004      	movs	r0, #4
2000100e:	f002 feaf 	bl	20003d70 <read_DIL_single>
20001012:	0002      	movs	r2, r0
20001014:	4b91      	ldr	r3, [pc, #580]	; (2000125c <main+0x1060>)
20001016:	681b      	ldr	r3, [r3, #0]
20001018:	429a      	cmp	r2, r3
2000101a:	d023      	beq.n	20001064 <main+0xe68>
2000101c:	4b8d      	ldr	r3, [pc, #564]	; (20001254 <main+0x1058>)
2000101e:	2298      	movs	r2, #152	; 0x98
20001020:	00d2      	lsls	r2, r2, #3
20001022:	4694      	mov	ip, r2
20001024:	44bc      	add	ip, r7
20001026:	4463      	add	r3, ip
20001028:	685b      	ldr	r3, [r3, #4]
2000102a:	2b5a      	cmp	r3, #90	; 0x5a
2000102c:	dd1a      	ble.n	20001064 <main+0xe68>
2000102e:	4b89      	ldr	r3, [pc, #548]	; (20001254 <main+0x1058>)
20001030:	2298      	movs	r2, #152	; 0x98
20001032:	00d2      	lsls	r2, r2, #3
20001034:	4694      	mov	ip, r2
20001036:	44bc      	add	ip, r7
20001038:	4463      	add	r3, ip
2000103a:	685b      	ldr	r3, [r3, #4]
2000103c:	2b6b      	cmp	r3, #107	; 0x6b
2000103e:	dc11      	bgt.n	20001064 <main+0xe68>
20001040:	2397      	movs	r3, #151	; 0x97
20001042:	00db      	lsls	r3, r3, #3
20001044:	18fb      	adds	r3, r7, r3
20001046:	681b      	ldr	r3, [r3, #0]
20001048:	2b00      	cmp	r3, #0
2000104a:	d10b      	bne.n	20001064 <main+0xe68>
					is_climbing = 1;
2000104c:	2301      	movs	r3, #1
2000104e:	4a84      	ldr	r2, [pc, #528]	; (20001260 <main+0x1064>)
20001050:	18ba      	adds	r2, r7, r2
20001052:	6013      	str	r3, [r2, #0]
					player.xPos = 98;
20001054:	4b7f      	ldr	r3, [pc, #508]	; (20001254 <main+0x1058>)
20001056:	2298      	movs	r2, #152	; 0x98
20001058:	00d2      	lsls	r2, r2, #3
2000105a:	4694      	mov	ip, r2
2000105c:	44bc      	add	ip, r7
2000105e:	4463      	add	r3, ip
20001060:	2262      	movs	r2, #98	; 0x62
20001062:	605a      	str	r2, [r3, #4]
				}
				last_climb_value = read_DIL_single(CLIMB_TRIGGER);
20001064:	2004      	movs	r0, #4
20001066:	f002 fe83 	bl	20003d70 <read_DIL_single>
2000106a:	0002      	movs	r2, r0
2000106c:	4b7b      	ldr	r3, [pc, #492]	; (2000125c <main+0x1060>)
2000106e:	601a      	str	r2, [r3, #0]
				
				if(is_climbing) {
20001070:	4b7b      	ldr	r3, [pc, #492]	; (20001260 <main+0x1064>)
20001072:	18fb      	adds	r3, r7, r3
20001074:	681b      	ldr	r3, [r3, #0]
20001076:	2b00      	cmp	r3, #0
20001078:	d060      	beq.n	2000113c <main+0xf40>
					gameObjectUpdate( &player );
2000107a:	239b      	movs	r3, #155	; 0x9b
2000107c:	009b      	lsls	r3, r3, #2
2000107e:	18fb      	adds	r3, r7, r3
20001080:	0018      	movs	r0, r3
20001082:	f000 fc23 	bl	200018cc <gameObjectUpdate>
					if (player.yPos % 6 == 0){
20001086:	4b73      	ldr	r3, [pc, #460]	; (20001254 <main+0x1058>)
20001088:	2298      	movs	r2, #152	; 0x98
2000108a:	00d2      	lsls	r2, r2, #3
2000108c:	4694      	mov	ip, r2
2000108e:	44bc      	add	ip, r7
20001090:	4463      	add	r3, ip
20001092:	689b      	ldr	r3, [r3, #8]
20001094:	2106      	movs	r1, #6
20001096:	0018      	movs	r0, r3
20001098:	f003 fc14 	bl	200048c4 <__aeabi_idivmod>
2000109c:	1e0b      	subs	r3, r1, #0
2000109e:	d106      	bne.n	200010ae <main+0xeb2>
						ascii_write("*tipp*","");
200010a0:	4a70      	ldr	r2, [pc, #448]	; (20001264 <main+0x1068>)
200010a2:	4b71      	ldr	r3, [pc, #452]	; (20001268 <main+0x106c>)
200010a4:	0011      	movs	r1, r2
200010a6:	0018      	movs	r0, r3
200010a8:	f003 f854 	bl	20004154 <ascii_write>
200010ac:	e013      	b.n	200010d6 <main+0xeda>
					}
					else if (player.yPos % 6 == 3) {
200010ae:	4b69      	ldr	r3, [pc, #420]	; (20001254 <main+0x1058>)
200010b0:	2298      	movs	r2, #152	; 0x98
200010b2:	00d2      	lsls	r2, r2, #3
200010b4:	4694      	mov	ip, r2
200010b6:	44bc      	add	ip, r7
200010b8:	4463      	add	r3, ip
200010ba:	689b      	ldr	r3, [r3, #8]
200010bc:	2106      	movs	r1, #6
200010be:	0018      	movs	r0, r3
200010c0:	f003 fc00 	bl	200048c4 <__aeabi_idivmod>
200010c4:	000b      	movs	r3, r1
200010c6:	2b03      	cmp	r3, #3
200010c8:	d105      	bne.n	200010d6 <main+0xeda>
						ascii_write("*tapp*","");
200010ca:	4a66      	ldr	r2, [pc, #408]	; (20001264 <main+0x1068>)
200010cc:	4b67      	ldr	r3, [pc, #412]	; (2000126c <main+0x1070>)
200010ce:	0011      	movs	r1, r2
200010d0:	0018      	movs	r0, r3
200010d2:	f003 f83f 	bl	20004154 <ascii_write>
					}
					if(player.yPos > 4) {
200010d6:	4b5f      	ldr	r3, [pc, #380]	; (20001254 <main+0x1058>)
200010d8:	2298      	movs	r2, #152	; 0x98
200010da:	00d2      	lsls	r2, r2, #3
200010dc:	4694      	mov	ip, r2
200010de:	44bc      	add	ip, r7
200010e0:	4463      	add	r3, ip
200010e2:	689b      	ldr	r3, [r3, #8]
200010e4:	2b04      	cmp	r3, #4
200010e6:	dd0f      	ble.n	20001108 <main+0xf0c>
						player.yPos--;
200010e8:	4b5a      	ldr	r3, [pc, #360]	; (20001254 <main+0x1058>)
200010ea:	2298      	movs	r2, #152	; 0x98
200010ec:	00d2      	lsls	r2, r2, #3
200010ee:	4694      	mov	ip, r2
200010f0:	44bc      	add	ip, r7
200010f2:	4463      	add	r3, ip
200010f4:	689b      	ldr	r3, [r3, #8]
200010f6:	1e5a      	subs	r2, r3, #1
200010f8:	4b56      	ldr	r3, [pc, #344]	; (20001254 <main+0x1058>)
200010fa:	2198      	movs	r1, #152	; 0x98
200010fc:	00c9      	lsls	r1, r1, #3
200010fe:	468c      	mov	ip, r1
20001100:	44bc      	add	ip, r7
20001102:	4463      	add	r3, ip
20001104:	609a      	str	r2, [r3, #8]
20001106:	e025      	b.n	20001154 <main+0xf58>
					} else {	//Stay at top level and disable climbing forever!
						player.yPos = 5;
20001108:	4b52      	ldr	r3, [pc, #328]	; (20001254 <main+0x1058>)
2000110a:	2298      	movs	r2, #152	; 0x98
2000110c:	00d2      	lsls	r2, r2, #3
2000110e:	4694      	mov	ip, r2
20001110:	44bc      	add	ip, r7
20001112:	4463      	add	r3, ip
20001114:	2205      	movs	r2, #5
20001116:	609a      	str	r2, [r3, #8]
						player.xPos = 96;
20001118:	4b4e      	ldr	r3, [pc, #312]	; (20001254 <main+0x1058>)
2000111a:	2298      	movs	r2, #152	; 0x98
2000111c:	00d2      	lsls	r2, r2, #3
2000111e:	4694      	mov	ip, r2
20001120:	44bc      	add	ip, r7
20001122:	4463      	add	r3, ip
20001124:	2260      	movs	r2, #96	; 0x60
20001126:	605a      	str	r2, [r3, #4]
						is_climbing = 0;
20001128:	2300      	movs	r3, #0
2000112a:	4a4d      	ldr	r2, [pc, #308]	; (20001260 <main+0x1064>)
2000112c:	18ba      	adds	r2, r7, r2
2000112e:	6013      	str	r3, [r2, #0]
						has_climbed = 1;
20001130:	2301      	movs	r3, #1
20001132:	2297      	movs	r2, #151	; 0x97
20001134:	00d2      	lsls	r2, r2, #3
20001136:	18ba      	adds	r2, r7, r2
20001138:	6013      	str	r3, [r2, #0]
2000113a:	e00b      	b.n	20001154 <main+0xf58>
					}
				} else {
					player.update(&player);
2000113c:	4b45      	ldr	r3, [pc, #276]	; (20001254 <main+0x1058>)
2000113e:	2298      	movs	r2, #152	; 0x98
20001140:	00d2      	lsls	r2, r2, #3
20001142:	4694      	mov	ip, r2
20001144:	44bc      	add	ip, r7
20001146:	4463      	add	r3, ip
20001148:	68db      	ldr	r3, [r3, #12]
2000114a:	229b      	movs	r2, #155	; 0x9b
2000114c:	0092      	lsls	r2, r2, #2
2000114e:	18ba      	adds	r2, r7, r2
20001150:	0010      	movs	r0, r2
20001152:	4798      	blx	r3
				}
				
				if (trophy.yPos >= player.yPos && (player.xPos + PLAYER_WIDTH/2 >= trophy.xPos && player.xPos <= trophy.xPos + PLAYER_WIDTH/2 )) {
20001154:	4b46      	ldr	r3, [pc, #280]	; (20001270 <main+0x1074>)
20001156:	2298      	movs	r2, #152	; 0x98
20001158:	00d2      	lsls	r2, r2, #3
2000115a:	4694      	mov	ip, r2
2000115c:	44bc      	add	ip, r7
2000115e:	4463      	add	r3, ip
20001160:	689a      	ldr	r2, [r3, #8]
20001162:	4b3c      	ldr	r3, [pc, #240]	; (20001254 <main+0x1058>)
20001164:	2198      	movs	r1, #152	; 0x98
20001166:	00c9      	lsls	r1, r1, #3
20001168:	468c      	mov	ip, r1
2000116a:	44bc      	add	ip, r7
2000116c:	4463      	add	r3, ip
2000116e:	689b      	ldr	r3, [r3, #8]
20001170:	429a      	cmp	r2, r3
20001172:	db28      	blt.n	200011c6 <main+0xfca>
20001174:	4b37      	ldr	r3, [pc, #220]	; (20001254 <main+0x1058>)
20001176:	2298      	movs	r2, #152	; 0x98
20001178:	00d2      	lsls	r2, r2, #3
2000117a:	4694      	mov	ip, r2
2000117c:	44bc      	add	ip, r7
2000117e:	4463      	add	r3, ip
20001180:	685b      	ldr	r3, [r3, #4]
20001182:	3309      	adds	r3, #9
20001184:	001a      	movs	r2, r3
20001186:	4b3a      	ldr	r3, [pc, #232]	; (20001270 <main+0x1074>)
20001188:	2198      	movs	r1, #152	; 0x98
2000118a:	00c9      	lsls	r1, r1, #3
2000118c:	468c      	mov	ip, r1
2000118e:	44bc      	add	ip, r7
20001190:	4463      	add	r3, ip
20001192:	685b      	ldr	r3, [r3, #4]
20001194:	429a      	cmp	r2, r3
20001196:	db16      	blt.n	200011c6 <main+0xfca>
20001198:	4b2e      	ldr	r3, [pc, #184]	; (20001254 <main+0x1058>)
2000119a:	2298      	movs	r2, #152	; 0x98
2000119c:	00d2      	lsls	r2, r2, #3
2000119e:	4694      	mov	ip, r2
200011a0:	44bc      	add	ip, r7
200011a2:	4463      	add	r3, ip
200011a4:	685a      	ldr	r2, [r3, #4]
200011a6:	4b32      	ldr	r3, [pc, #200]	; (20001270 <main+0x1074>)
200011a8:	2198      	movs	r1, #152	; 0x98
200011aa:	00c9      	lsls	r1, r1, #3
200011ac:	468c      	mov	ip, r1
200011ae:	44bc      	add	ip, r7
200011b0:	4463      	add	r3, ip
200011b2:	685b      	ldr	r3, [r3, #4]
200011b4:	3309      	adds	r3, #9
200011b6:	429a      	cmp	r2, r3
200011b8:	dc05      	bgt.n	200011c6 <main+0xfca>
					ascii_write("Daffo: I need magic ","to grab the trophy!");
200011ba:	4a2e      	ldr	r2, [pc, #184]	; (20001274 <main+0x1078>)
200011bc:	4b2e      	ldr	r3, [pc, #184]	; (20001278 <main+0x107c>)
200011be:	0011      	movs	r1, r2
200011c0:	0018      	movs	r0, r3
200011c2:	f002 ffc7 	bl	20004154 <ascii_write>
				}
				
				if (read_DIL_single(EXPLOSION_TRIGGER)){
200011c6:	2003      	movs	r0, #3
200011c8:	f002 fdd2 	bl	20003d70 <read_DIL_single>
200011cc:	1e03      	subs	r3, r0, #0
200011ce:	d067      	beq.n	200012a0 <main+0x10a4>
					if (trophy.yPos >= player.yPos && (player.xPos + PLAYER_WIDTH/2 >= trophy.xPos && player.xPos <= trophy.xPos + PLAYER_WIDTH/2 )){
200011d0:	4b27      	ldr	r3, [pc, #156]	; (20001270 <main+0x1074>)
200011d2:	2298      	movs	r2, #152	; 0x98
200011d4:	00d2      	lsls	r2, r2, #3
200011d6:	4694      	mov	ip, r2
200011d8:	44bc      	add	ip, r7
200011da:	4463      	add	r3, ip
200011dc:	689a      	ldr	r2, [r3, #8]
200011de:	4b1d      	ldr	r3, [pc, #116]	; (20001254 <main+0x1058>)
200011e0:	2198      	movs	r1, #152	; 0x98
200011e2:	00c9      	lsls	r1, r1, #3
200011e4:	468c      	mov	ip, r1
200011e6:	44bc      	add	ip, r7
200011e8:	4463      	add	r3, ip
200011ea:	689b      	ldr	r3, [r3, #8]
200011ec:	429a      	cmp	r2, r3
200011ee:	db47      	blt.n	20001280 <main+0x1084>
200011f0:	4b18      	ldr	r3, [pc, #96]	; (20001254 <main+0x1058>)
200011f2:	2298      	movs	r2, #152	; 0x98
200011f4:	00d2      	lsls	r2, r2, #3
200011f6:	4694      	mov	ip, r2
200011f8:	44bc      	add	ip, r7
200011fa:	4463      	add	r3, ip
200011fc:	685b      	ldr	r3, [r3, #4]
200011fe:	3309      	adds	r3, #9
20001200:	001a      	movs	r2, r3
20001202:	4b1b      	ldr	r3, [pc, #108]	; (20001270 <main+0x1074>)
20001204:	2198      	movs	r1, #152	; 0x98
20001206:	00c9      	lsls	r1, r1, #3
20001208:	468c      	mov	ip, r1
2000120a:	44bc      	add	ip, r7
2000120c:	4463      	add	r3, ip
2000120e:	685b      	ldr	r3, [r3, #4]
20001210:	429a      	cmp	r2, r3
20001212:	db35      	blt.n	20001280 <main+0x1084>
20001214:	4b0f      	ldr	r3, [pc, #60]	; (20001254 <main+0x1058>)
20001216:	2298      	movs	r2, #152	; 0x98
20001218:	00d2      	lsls	r2, r2, #3
2000121a:	4694      	mov	ip, r2
2000121c:	44bc      	add	ip, r7
2000121e:	4463      	add	r3, ip
20001220:	685a      	ldr	r2, [r3, #4]
20001222:	4b13      	ldr	r3, [pc, #76]	; (20001270 <main+0x1074>)
20001224:	2198      	movs	r1, #152	; 0x98
20001226:	00c9      	lsls	r1, r1, #3
20001228:	468c      	mov	ip, r1
2000122a:	44bc      	add	ip, r7
2000122c:	4463      	add	r3, ip
2000122e:	685b      	ldr	r3, [r3, #4]
20001230:	3309      	adds	r3, #9
20001232:	429a      	cmp	r2, r3
20001234:	dc24      	bgt.n	20001280 <main+0x1084>
						//TODO WIN
						ascii_write("PLACEHOLDER DU VANN","");
20001236:	4a0b      	ldr	r2, [pc, #44]	; (20001264 <main+0x1068>)
20001238:	4b10      	ldr	r3, [pc, #64]	; (2000127c <main+0x1080>)
2000123a:	0011      	movs	r1, r2
2000123c:	0018      	movs	r0, r3
2000123e:	f002 ff89 	bl	20004154 <ascii_write>
20001242:	e02d      	b.n	200012a0 <main+0x10a4>
20001244:	000004ac 	andeq	r0, r0, ip, lsr #9
20001248:	200048d4 	ldrdcs	r4, [r0], -r4	; <UNPREDICTABLE>
2000124c:	fffffc44 			; <UNDEFINED> instruction: 0xfffffc44
20001250:	000004a4 	andeq	r0, r0, r4, lsr #9
20001254:	fffffdac 			; <UNDEFINED> instruction: 0xfffffdac
20001258:	fffffdf4 			; <UNDEFINED> instruction: 0xfffffdf4
2000125c:	20008974 	andcs	r8, r0, r4, ror r9
20001260:	000004bc 			; <UNDEFINED> instruction: 0x000004bc
20001264:	2000f5f4 	strdcs	pc, [r0], -r4
20001268:	2000f600 	andcs	pc, r0, r0, lsl #12
2000126c:	2000f608 	andcs	pc, r0, r8, lsl #12
20001270:	fffffe60 			; <UNDEFINED> instruction: 0xfffffe60
20001274:	2000f610 	andcs	pc, r0, r0, lsl r6	; <UNPREDICTABLE>
20001278:	2000f624 	andcs	pc, r0, r4, lsr #12
2000127c:	2000f63c 	andcs	pc, r0, ip, lsr r6	; <UNPREDICTABLE>
					}
					else{
						game_over_adder = 3;
20001280:	2303      	movs	r3, #3
20001282:	2296      	movs	r2, #150	; 0x96
20001284:	00d2      	lsls	r2, r2, #3
20001286:	18ba      	adds	r2, r7, r2
20001288:	6013      	str	r3, [r2, #0]
						ascii_write("*KABOOOOM*","");
2000128a:	4a61      	ldr	r2, [pc, #388]	; (20001410 <main+0x1214>)
2000128c:	4b61      	ldr	r3, [pc, #388]	; (20001414 <main+0x1218>)
2000128e:	0011      	movs	r1, r2
20001290:	0018      	movs	r0, r3
20001292:	f002 ff5f 	bl	20004154 <ascii_write>
						exploding = 1;
20001296:	2301      	movs	r3, #1
20001298:	2295      	movs	r2, #149	; 0x95
2000129a:	00d2      	lsls	r2, r2, #3
2000129c:	18ba      	adds	r2, r7, r2
2000129e:	6013      	str	r3, [r2, #0]
					}
				}
				
				//fire1_indoors.update(&fire1_indoors);
				//fire updates done above
				if(!no_DIP) {
200012a0:	4b5d      	ldr	r3, [pc, #372]	; (20001418 <main+0x121c>)
200012a2:	18fb      	adds	r3, r7, r3
200012a4:	681b      	ldr	r3, [r3, #0]
200012a6:	2b00      	cmp	r3, #0
200012a8:	d11d      	bne.n	200012e6 <main+0x10ea>
					setPlayerPosition(player.xPos, player.yPos);
200012aa:	4b5c      	ldr	r3, [pc, #368]	; (2000141c <main+0x1220>)
200012ac:	2298      	movs	r2, #152	; 0x98
200012ae:	00d2      	lsls	r2, r2, #3
200012b0:	4694      	mov	ip, r2
200012b2:	44bc      	add	ip, r7
200012b4:	4463      	add	r3, ip
200012b6:	685a      	ldr	r2, [r3, #4]
200012b8:	4b58      	ldr	r3, [pc, #352]	; (2000141c <main+0x1220>)
200012ba:	2198      	movs	r1, #152	; 0x98
200012bc:	00c9      	lsls	r1, r1, #3
200012be:	468c      	mov	ip, r1
200012c0:	44bc      	add	ip, r7
200012c2:	4463      	add	r3, ip
200012c4:	689b      	ldr	r3, [r3, #8]
200012c6:	0019      	movs	r1, r3
200012c8:	0010      	movs	r0, r2
200012ca:	f001 f963 	bl	20002594 <setPlayerPosition>
					DIP.update(&DIP);					
200012ce:	4b54      	ldr	r3, [pc, #336]	; (20001420 <main+0x1224>)
200012d0:	2298      	movs	r2, #152	; 0x98
200012d2:	00d2      	lsls	r2, r2, #3
200012d4:	4694      	mov	ip, r2
200012d6:	44bc      	add	ip, r7
200012d8:	4463      	add	r3, ip
200012da:	68db      	ldr	r3, [r3, #12]
200012dc:	22a4      	movs	r2, #164	; 0xa4
200012de:	0092      	lsls	r2, r2, #2
200012e0:	18ba      	adds	r2, r7, r2
200012e2:	0010      	movs	r0, r2
200012e4:	4798      	blx	r3
				}
				hair.update(&hair);
200012e6:	4b4f      	ldr	r3, [pc, #316]	; (20001424 <main+0x1228>)
200012e8:	2298      	movs	r2, #152	; 0x98
200012ea:	00d2      	lsls	r2, r2, #3
200012ec:	4694      	mov	ip, r2
200012ee:	44bc      	add	ip, r7
200012f0:	4463      	add	r3, ip
200012f2:	68db      	ldr	r3, [r3, #12]
200012f4:	22bf      	movs	r2, #191	; 0xbf
200012f6:	0092      	lsls	r2, r2, #2
200012f8:	18ba      	adds	r2, r7, r2
200012fa:	0010      	movs	r0, r2
200012fc:	4798      	blx	r3
				if(read_DIL_single(HAIR_TRIGGER)) {
200012fe:	2001      	movs	r0, #1
20001300:	f002 fd36 	bl	20003d70 <read_DIL_single>
20001304:	1e03      	subs	r3, r0, #0
20001306:	d02a      	beq.n	2000135e <main+0x1162>
					if (lastFireTrigger == 0){
20001308:	2394      	movs	r3, #148	; 0x94
2000130a:	00db      	lsls	r3, r3, #3
2000130c:	18fb      	adds	r3, r7, r3
2000130e:	681b      	ldr	r3, [r3, #0]
20001310:	2b00      	cmp	r3, #0
20001312:	d105      	bne.n	20001320 <main+0x1124>
						ascii_write("*FwOOOo*","");
20001314:	4a3e      	ldr	r2, [pc, #248]	; (20001410 <main+0x1214>)
20001316:	4b44      	ldr	r3, [pc, #272]	; (20001428 <main+0x122c>)
20001318:	0011      	movs	r1, r2
2000131a:	0018      	movs	r0, r3
2000131c:	f002 ff1a 	bl	20004154 <ascii_write>
					}
					hair.xPos = player.xPos;
20001320:	4b3e      	ldr	r3, [pc, #248]	; (2000141c <main+0x1220>)
20001322:	2298      	movs	r2, #152	; 0x98
20001324:	00d2      	lsls	r2, r2, #3
20001326:	4694      	mov	ip, r2
20001328:	44bc      	add	ip, r7
2000132a:	4463      	add	r3, ip
2000132c:	685a      	ldr	r2, [r3, #4]
2000132e:	4b3d      	ldr	r3, [pc, #244]	; (20001424 <main+0x1228>)
20001330:	2198      	movs	r1, #152	; 0x98
20001332:	00c9      	lsls	r1, r1, #3
20001334:	468c      	mov	ip, r1
20001336:	44bc      	add	ip, r7
20001338:	4463      	add	r3, ip
2000133a:	605a      	str	r2, [r3, #4]
					hair.yPos = player.yPos - 28;
2000133c:	4b37      	ldr	r3, [pc, #220]	; (2000141c <main+0x1220>)
2000133e:	2298      	movs	r2, #152	; 0x98
20001340:	00d2      	lsls	r2, r2, #3
20001342:	4694      	mov	ip, r2
20001344:	44bc      	add	ip, r7
20001346:	4463      	add	r3, ip
20001348:	689b      	ldr	r3, [r3, #8]
2000134a:	3b1c      	subs	r3, #28
2000134c:	001a      	movs	r2, r3
2000134e:	4b35      	ldr	r3, [pc, #212]	; (20001424 <main+0x1228>)
20001350:	2198      	movs	r1, #152	; 0x98
20001352:	00c9      	lsls	r1, r1, #3
20001354:	468c      	mov	ip, r1
20001356:	44bc      	add	ip, r7
20001358:	4463      	add	r3, ip
2000135a:	609a      	str	r2, [r3, #8]
2000135c:	e011      	b.n	20001382 <main+0x1186>
				} else {
					hair.xPos = -100;
2000135e:	4b31      	ldr	r3, [pc, #196]	; (20001424 <main+0x1228>)
20001360:	2298      	movs	r2, #152	; 0x98
20001362:	00d2      	lsls	r2, r2, #3
20001364:	4694      	mov	ip, r2
20001366:	44bc      	add	ip, r7
20001368:	4463      	add	r3, ip
2000136a:	2264      	movs	r2, #100	; 0x64
2000136c:	4252      	negs	r2, r2
2000136e:	605a      	str	r2, [r3, #4]
					hair.yPos = -100;
20001370:	4b2c      	ldr	r3, [pc, #176]	; (20001424 <main+0x1228>)
20001372:	2298      	movs	r2, #152	; 0x98
20001374:	00d2      	lsls	r2, r2, #3
20001376:	4694      	mov	ip, r2
20001378:	44bc      	add	ip, r7
2000137a:	4463      	add	r3, ip
2000137c:	2264      	movs	r2, #100	; 0x64
2000137e:	4252      	negs	r2, r2
20001380:	609a      	str	r2, [r3, #8]
				}
				
				
				
				if (!no_DIP && DIP.yPos >= player.yPos && (player.xPos + DIP_WIDTH/2 >= DIP.xPos && player.xPos <= DIP.xPos + DIP_WIDTH/2 )){ // DIP_collision
20001382:	4b25      	ldr	r3, [pc, #148]	; (20001418 <main+0x121c>)
20001384:	18fb      	adds	r3, r7, r3
20001386:	681b      	ldr	r3, [r3, #0]
20001388:	2b00      	cmp	r3, #0
2000138a:	d13d      	bne.n	20001408 <main+0x120c>
2000138c:	4b24      	ldr	r3, [pc, #144]	; (20001420 <main+0x1224>)
2000138e:	2298      	movs	r2, #152	; 0x98
20001390:	00d2      	lsls	r2, r2, #3
20001392:	4694      	mov	ip, r2
20001394:	44bc      	add	ip, r7
20001396:	4463      	add	r3, ip
20001398:	689a      	ldr	r2, [r3, #8]
2000139a:	4b20      	ldr	r3, [pc, #128]	; (2000141c <main+0x1220>)
2000139c:	2198      	movs	r1, #152	; 0x98
2000139e:	00c9      	lsls	r1, r1, #3
200013a0:	468c      	mov	ip, r1
200013a2:	44bc      	add	ip, r7
200013a4:	4463      	add	r3, ip
200013a6:	689b      	ldr	r3, [r3, #8]
200013a8:	429a      	cmp	r2, r3
200013aa:	db2d      	blt.n	20001408 <main+0x120c>
200013ac:	4b1b      	ldr	r3, [pc, #108]	; (2000141c <main+0x1220>)
200013ae:	2298      	movs	r2, #152	; 0x98
200013b0:	00d2      	lsls	r2, r2, #3
200013b2:	4694      	mov	ip, r2
200013b4:	44bc      	add	ip, r7
200013b6:	4463      	add	r3, ip
200013b8:	685b      	ldr	r3, [r3, #4]
200013ba:	3309      	adds	r3, #9
200013bc:	001a      	movs	r2, r3
200013be:	4b18      	ldr	r3, [pc, #96]	; (20001420 <main+0x1224>)
200013c0:	2198      	movs	r1, #152	; 0x98
200013c2:	00c9      	lsls	r1, r1, #3
200013c4:	468c      	mov	ip, r1
200013c6:	44bc      	add	ip, r7
200013c8:	4463      	add	r3, ip
200013ca:	685b      	ldr	r3, [r3, #4]
200013cc:	429a      	cmp	r2, r3
200013ce:	db1b      	blt.n	20001408 <main+0x120c>
200013d0:	4b12      	ldr	r3, [pc, #72]	; (2000141c <main+0x1220>)
200013d2:	2298      	movs	r2, #152	; 0x98
200013d4:	00d2      	lsls	r2, r2, #3
200013d6:	4694      	mov	ip, r2
200013d8:	44bc      	add	ip, r7
200013da:	4463      	add	r3, ip
200013dc:	685a      	ldr	r2, [r3, #4]
200013de:	4b10      	ldr	r3, [pc, #64]	; (20001420 <main+0x1224>)
200013e0:	2198      	movs	r1, #152	; 0x98
200013e2:	00c9      	lsls	r1, r1, #3
200013e4:	468c      	mov	ip, r1
200013e6:	44bc      	add	ip, r7
200013e8:	4463      	add	r3, ip
200013ea:	685b      	ldr	r3, [r3, #4]
200013ec:	3309      	adds	r3, #9
200013ee:	429a      	cmp	r2, r3
200013f0:	dc0a      	bgt.n	20001408 <main+0x120c>
					game_over_adder = 100;
200013f2:	2364      	movs	r3, #100	; 0x64
200013f4:	2296      	movs	r2, #150	; 0x96
200013f6:	00d2      	lsls	r2, r2, #3
200013f8:	18ba      	adds	r2, r7, r2
200013fa:	6013      	str	r3, [r2, #0]
					ascii_write("DIPs-WITCH:","      NyAHAHAHAH!");
200013fc:	4a0b      	ldr	r2, [pc, #44]	; (2000142c <main+0x1230>)
200013fe:	4b0c      	ldr	r3, [pc, #48]	; (20001430 <main+0x1234>)
20001400:	0011      	movs	r1, r2
20001402:	0018      	movs	r0, r3
20001404:	f002 fea6 	bl	20004154 <ascii_write>
				}
				
				static int distance_player_fire;	//fire_collision
				static int j;
				for(j = 0; j < 3; j++) {
20001408:	4b0a      	ldr	r3, [pc, #40]	; (20001434 <main+0x1238>)
2000140a:	2200      	movs	r2, #0
2000140c:	601a      	str	r2, [r3, #0]
2000140e:	e075      	b.n	200014fc <main+0x1300>
20001410:	2000f5f4 	strdcs	pc, [r0], -r4
20001414:	2000f650 	andcs	pc, r0, r0, asr r6	; <UNPREDICTABLE>
20001418:	000004ac 	andeq	r0, r0, ip, lsr #9
2000141c:	fffffdac 			; <UNDEFINED> instruction: 0xfffffdac
20001420:	fffffdd0 			; <UNDEFINED> instruction: 0xfffffdd0
20001424:	fffffe3c 			; <UNDEFINED> instruction: 0xfffffe3c
20001428:	2000f65c 	andcs	pc, r0, ip, asr r6	; <UNPREDICTABLE>
2000142c:	2000f668 	andcs	pc, r0, r8, ror #12
20001430:	2000f67c 	andcs	pc, r0, ip, ror r6	; <UNPREDICTABLE>
20001434:	200048d8 	ldrdcs	r4, [r0], -r8
					distance_player_fire = (player.xPos + 9) - (fires[j].xPos + 5);
20001438:	4b94      	ldr	r3, [pc, #592]	; (2000168c <main+0x1490>)
2000143a:	2298      	movs	r2, #152	; 0x98
2000143c:	00d2      	lsls	r2, r2, #3
2000143e:	4694      	mov	ip, r2
20001440:	44bc      	add	ip, r7
20001442:	4463      	add	r3, ip
20001444:	685b      	ldr	r3, [r3, #4]
20001446:	3309      	adds	r3, #9
20001448:	0019      	movs	r1, r3
2000144a:	4b91      	ldr	r3, [pc, #580]	; (20001690 <main+0x1494>)
2000144c:	681a      	ldr	r2, [r3, #0]
2000144e:	4b91      	ldr	r3, [pc, #580]	; (20001694 <main+0x1498>)
20001450:	2098      	movs	r0, #152	; 0x98
20001452:	00c0      	lsls	r0, r0, #3
20001454:	1838      	adds	r0, r7, r0
20001456:	18c0      	adds	r0, r0, r3
20001458:	0013      	movs	r3, r2
2000145a:	00db      	lsls	r3, r3, #3
2000145c:	189b      	adds	r3, r3, r2
2000145e:	009b      	lsls	r3, r3, #2
20001460:	18c3      	adds	r3, r0, r3
20001462:	3304      	adds	r3, #4
20001464:	681b      	ldr	r3, [r3, #0]
20001466:	3305      	adds	r3, #5
20001468:	1aca      	subs	r2, r1, r3
2000146a:	4b8b      	ldr	r3, [pc, #556]	; (20001698 <main+0x149c>)
2000146c:	601a      	str	r2, [r3, #0]
					if(player.yPos > (fires[j].yPos - 18 + 7) && 
2000146e:	4b87      	ldr	r3, [pc, #540]	; (2000168c <main+0x1490>)
20001470:	2298      	movs	r2, #152	; 0x98
20001472:	00d2      	lsls	r2, r2, #3
20001474:	4694      	mov	ip, r2
20001476:	44bc      	add	ip, r7
20001478:	4463      	add	r3, ip
2000147a:	6899      	ldr	r1, [r3, #8]
2000147c:	4b84      	ldr	r3, [pc, #528]	; (20001690 <main+0x1494>)
2000147e:	681a      	ldr	r2, [r3, #0]
20001480:	4b84      	ldr	r3, [pc, #528]	; (20001694 <main+0x1498>)
20001482:	2098      	movs	r0, #152	; 0x98
20001484:	00c0      	lsls	r0, r0, #3
20001486:	1838      	adds	r0, r7, r0
20001488:	18c0      	adds	r0, r0, r3
2000148a:	0013      	movs	r3, r2
2000148c:	00db      	lsls	r3, r3, #3
2000148e:	189b      	adds	r3, r3, r2
20001490:	009b      	lsls	r3, r3, #2
20001492:	18c3      	adds	r3, r0, r3
20001494:	3308      	adds	r3, #8
20001496:	681b      	ldr	r3, [r3, #0]
20001498:	3b0b      	subs	r3, #11
2000149a:	4299      	cmp	r1, r3
2000149c:	dd29      	ble.n	200014f2 <main+0x12f6>
							player.yPos < fires[j].yPos && distance_player_fire < 8 && distance_player_fire > -8) {
2000149e:	4b7b      	ldr	r3, [pc, #492]	; (2000168c <main+0x1490>)
200014a0:	2298      	movs	r2, #152	; 0x98
200014a2:	00d2      	lsls	r2, r2, #3
200014a4:	4694      	mov	ip, r2
200014a6:	44bc      	add	ip, r7
200014a8:	4463      	add	r3, ip
200014aa:	6899      	ldr	r1, [r3, #8]
200014ac:	4b78      	ldr	r3, [pc, #480]	; (20001690 <main+0x1494>)
200014ae:	681a      	ldr	r2, [r3, #0]
200014b0:	4b78      	ldr	r3, [pc, #480]	; (20001694 <main+0x1498>)
200014b2:	2098      	movs	r0, #152	; 0x98
200014b4:	00c0      	lsls	r0, r0, #3
200014b6:	1838      	adds	r0, r7, r0
200014b8:	18c0      	adds	r0, r0, r3
200014ba:	0013      	movs	r3, r2
200014bc:	00db      	lsls	r3, r3, #3
200014be:	189b      	adds	r3, r3, r2
200014c0:	009b      	lsls	r3, r3, #2
200014c2:	18c3      	adds	r3, r0, r3
200014c4:	3308      	adds	r3, #8
200014c6:	681b      	ldr	r3, [r3, #0]
					if(player.yPos > (fires[j].yPos - 18 + 7) && 
200014c8:	4299      	cmp	r1, r3
200014ca:	da12      	bge.n	200014f2 <main+0x12f6>
							player.yPos < fires[j].yPos && distance_player_fire < 8 && distance_player_fire > -8) {
200014cc:	4b72      	ldr	r3, [pc, #456]	; (20001698 <main+0x149c>)
200014ce:	681b      	ldr	r3, [r3, #0]
200014d0:	2b07      	cmp	r3, #7
200014d2:	dc0e      	bgt.n	200014f2 <main+0x12f6>
200014d4:	4b70      	ldr	r3, [pc, #448]	; (20001698 <main+0x149c>)
200014d6:	681b      	ldr	r3, [r3, #0]
200014d8:	3307      	adds	r3, #7
200014da:	db0a      	blt.n	200014f2 <main+0x12f6>
						game_over_adder = 20;
200014dc:	2314      	movs	r3, #20
200014de:	2296      	movs	r2, #150	; 0x96
200014e0:	00d2      	lsls	r2, r2, #3
200014e2:	18ba      	adds	r2, r7, r2
200014e4:	6013      	str	r3, [r2, #0]
						ascii_write("*FWOOSH*","");
200014e6:	4a6d      	ldr	r2, [pc, #436]	; (2000169c <main+0x14a0>)
200014e8:	4b6d      	ldr	r3, [pc, #436]	; (200016a0 <main+0x14a4>)
200014ea:	0011      	movs	r1, r2
200014ec:	0018      	movs	r0, r3
200014ee:	f002 fe31 	bl	20004154 <ascii_write>
				for(j = 0; j < 3; j++) {
200014f2:	4b67      	ldr	r3, [pc, #412]	; (20001690 <main+0x1494>)
200014f4:	681b      	ldr	r3, [r3, #0]
200014f6:	1c5a      	adds	r2, r3, #1
200014f8:	4b65      	ldr	r3, [pc, #404]	; (20001690 <main+0x1494>)
200014fa:	601a      	str	r2, [r3, #0]
200014fc:	4b64      	ldr	r3, [pc, #400]	; (20001690 <main+0x1494>)
200014fe:	681b      	ldr	r3, [r3, #0]
20001500:	2b02      	cmp	r3, #2
20001502:	dd99      	ble.n	20001438 <main+0x123c>
					}					
				}
				
				static int trophy_burned = 0;	//trophy burning
				static int distance_hair_trophy;
				distance_hair_trophy = (hair.xPos + 9) - (trophy.xPos + 5);
20001504:	4b67      	ldr	r3, [pc, #412]	; (200016a4 <main+0x14a8>)
20001506:	2298      	movs	r2, #152	; 0x98
20001508:	00d2      	lsls	r2, r2, #3
2000150a:	4694      	mov	ip, r2
2000150c:	44bc      	add	ip, r7
2000150e:	4463      	add	r3, ip
20001510:	685b      	ldr	r3, [r3, #4]
20001512:	3309      	adds	r3, #9
20001514:	001a      	movs	r2, r3
20001516:	4b64      	ldr	r3, [pc, #400]	; (200016a8 <main+0x14ac>)
20001518:	2198      	movs	r1, #152	; 0x98
2000151a:	00c9      	lsls	r1, r1, #3
2000151c:	468c      	mov	ip, r1
2000151e:	44bc      	add	ip, r7
20001520:	4463      	add	r3, ip
20001522:	685b      	ldr	r3, [r3, #4]
20001524:	3305      	adds	r3, #5
20001526:	1ad2      	subs	r2, r2, r3
20001528:	4b60      	ldr	r3, [pc, #384]	; (200016ac <main+0x14b0>)
2000152a:	601a      	str	r2, [r3, #0]
				if(!trophy_burned && abs(distance_hair_trophy) < 5) {
2000152c:	4b60      	ldr	r3, [pc, #384]	; (200016b0 <main+0x14b4>)
2000152e:	681b      	ldr	r3, [r3, #0]
20001530:	2b00      	cmp	r3, #0
20001532:	d136      	bne.n	200015a2 <main+0x13a6>
20001534:	4b5d      	ldr	r3, [pc, #372]	; (200016ac <main+0x14b0>)
20001536:	681b      	ldr	r3, [r3, #0]
20001538:	3304      	adds	r3, #4
2000153a:	db32      	blt.n	200015a2 <main+0x13a6>
2000153c:	4b5b      	ldr	r3, [pc, #364]	; (200016ac <main+0x14b0>)
2000153e:	681b      	ldr	r3, [r3, #0]
20001540:	2b04      	cmp	r3, #4
20001542:	dc2e      	bgt.n	200015a2 <main+0x13a6>
					trophy_burned = 1;
20001544:	4b5a      	ldr	r3, [pc, #360]	; (200016b0 <main+0x14b4>)
20001546:	2201      	movs	r2, #1
20001548:	601a      	str	r2, [r3, #0]
					fires[1].xPos = trophy.xPos;
2000154a:	4b57      	ldr	r3, [pc, #348]	; (200016a8 <main+0x14ac>)
2000154c:	2298      	movs	r2, #152	; 0x98
2000154e:	00d2      	lsls	r2, r2, #3
20001550:	4694      	mov	ip, r2
20001552:	44bc      	add	ip, r7
20001554:	4463      	add	r3, ip
20001556:	685a      	ldr	r2, [r3, #4]
20001558:	4b4e      	ldr	r3, [pc, #312]	; (20001694 <main+0x1498>)
2000155a:	2198      	movs	r1, #152	; 0x98
2000155c:	00c9      	lsls	r1, r1, #3
2000155e:	468c      	mov	ip, r1
20001560:	44bc      	add	ip, r7
20001562:	4463      	add	r3, ip
20001564:	629a      	str	r2, [r3, #40]	; 0x28
					fires[1].yPos = trophy.yPos + 5;
20001566:	4b50      	ldr	r3, [pc, #320]	; (200016a8 <main+0x14ac>)
20001568:	2298      	movs	r2, #152	; 0x98
2000156a:	00d2      	lsls	r2, r2, #3
2000156c:	4694      	mov	ip, r2
2000156e:	44bc      	add	ip, r7
20001570:	4463      	add	r3, ip
20001572:	689b      	ldr	r3, [r3, #8]
20001574:	1d5a      	adds	r2, r3, #5
20001576:	4b47      	ldr	r3, [pc, #284]	; (20001694 <main+0x1498>)
20001578:	2198      	movs	r1, #152	; 0x98
2000157a:	00c9      	lsls	r1, r1, #3
2000157c:	468c      	mov	ip, r1
2000157e:	44bc      	add	ip, r7
20001580:	4463      	add	r3, ip
20001582:	62da      	str	r2, [r3, #44]	; 0x2c
					trophy.xPos = 500;
20001584:	4b48      	ldr	r3, [pc, #288]	; (200016a8 <main+0x14ac>)
20001586:	2298      	movs	r2, #152	; 0x98
20001588:	00d2      	lsls	r2, r2, #3
2000158a:	4694      	mov	ip, r2
2000158c:	44bc      	add	ip, r7
2000158e:	4463      	add	r3, ip
20001590:	22fa      	movs	r2, #250	; 0xfa
20001592:	0052      	lsls	r2, r2, #1
20001594:	605a      	str	r2, [r3, #4]
					ascii_write("DAFFO:  ","        Oops...!");
20001596:	4a47      	ldr	r2, [pc, #284]	; (200016b4 <main+0x14b8>)
20001598:	4b47      	ldr	r3, [pc, #284]	; (200016b8 <main+0x14bc>)
2000159a:	0011      	movs	r1, r2
2000159c:	0018      	movs	r0, r3
2000159e:	f002 fdd9 	bl	20004154 <ascii_write>
				}
				
				static int DIP_burned = 0;
				static int distance_hair_DIP;
				distance_hair_DIP = (hair.xPos + 9) - (DIP.xPos + 9);
200015a2:	4b40      	ldr	r3, [pc, #256]	; (200016a4 <main+0x14a8>)
200015a4:	2298      	movs	r2, #152	; 0x98
200015a6:	00d2      	lsls	r2, r2, #3
200015a8:	4694      	mov	ip, r2
200015aa:	44bc      	add	ip, r7
200015ac:	4463      	add	r3, ip
200015ae:	685b      	ldr	r3, [r3, #4]
200015b0:	3309      	adds	r3, #9
200015b2:	001a      	movs	r2, r3
200015b4:	4b41      	ldr	r3, [pc, #260]	; (200016bc <main+0x14c0>)
200015b6:	2198      	movs	r1, #152	; 0x98
200015b8:	00c9      	lsls	r1, r1, #3
200015ba:	468c      	mov	ip, r1
200015bc:	44bc      	add	ip, r7
200015be:	4463      	add	r3, ip
200015c0:	685b      	ldr	r3, [r3, #4]
200015c2:	3309      	adds	r3, #9
200015c4:	1ad2      	subs	r2, r2, r3
200015c6:	4b3e      	ldr	r3, [pc, #248]	; (200016c0 <main+0x14c4>)
200015c8:	601a      	str	r2, [r3, #0]
				if(!DIP_burned && read_DIL_single(LIGHT_TRIGGER) && player.yPos > 10 && abs(distance_hair_DIP) < 5) {
200015ca:	4b3e      	ldr	r3, [pc, #248]	; (200016c4 <main+0x14c8>)
200015cc:	681b      	ldr	r3, [r3, #0]
200015ce:	2b00      	cmp	r3, #0
200015d0:	d13f      	bne.n	20001652 <main+0x1456>
200015d2:	2006      	movs	r0, #6
200015d4:	f002 fbcc 	bl	20003d70 <read_DIL_single>
200015d8:	1e03      	subs	r3, r0, #0
200015da:	d03a      	beq.n	20001652 <main+0x1456>
200015dc:	4b2b      	ldr	r3, [pc, #172]	; (2000168c <main+0x1490>)
200015de:	2298      	movs	r2, #152	; 0x98
200015e0:	00d2      	lsls	r2, r2, #3
200015e2:	4694      	mov	ip, r2
200015e4:	44bc      	add	ip, r7
200015e6:	4463      	add	r3, ip
200015e8:	689b      	ldr	r3, [r3, #8]
200015ea:	2b0a      	cmp	r3, #10
200015ec:	dd31      	ble.n	20001652 <main+0x1456>
200015ee:	4b34      	ldr	r3, [pc, #208]	; (200016c0 <main+0x14c4>)
200015f0:	681b      	ldr	r3, [r3, #0]
200015f2:	3304      	adds	r3, #4
200015f4:	db2d      	blt.n	20001652 <main+0x1456>
200015f6:	4b32      	ldr	r3, [pc, #200]	; (200016c0 <main+0x14c4>)
200015f8:	681b      	ldr	r3, [r3, #0]
200015fa:	2b04      	cmp	r3, #4
200015fc:	dc29      	bgt.n	20001652 <main+0x1456>
					DIP_burned = 1;
200015fe:	4b31      	ldr	r3, [pc, #196]	; (200016c4 <main+0x14c8>)
20001600:	2201      	movs	r2, #1
20001602:	601a      	str	r2, [r3, #0]
					fires[2].xPos = DIP.xPos;
20001604:	4b2d      	ldr	r3, [pc, #180]	; (200016bc <main+0x14c0>)
20001606:	2298      	movs	r2, #152	; 0x98
20001608:	00d2      	lsls	r2, r2, #3
2000160a:	4694      	mov	ip, r2
2000160c:	44bc      	add	ip, r7
2000160e:	4463      	add	r3, ip
20001610:	685a      	ldr	r2, [r3, #4]
20001612:	4b20      	ldr	r3, [pc, #128]	; (20001694 <main+0x1498>)
20001614:	2198      	movs	r1, #152	; 0x98
20001616:	00c9      	lsls	r1, r1, #3
20001618:	468c      	mov	ip, r1
2000161a:	44bc      	add	ip, r7
2000161c:	4463      	add	r3, ip
2000161e:	64da      	str	r2, [r3, #76]	; 0x4c
					fires[2].yPos = DIP.yPos + 6;
20001620:	4b26      	ldr	r3, [pc, #152]	; (200016bc <main+0x14c0>)
20001622:	2298      	movs	r2, #152	; 0x98
20001624:	00d2      	lsls	r2, r2, #3
20001626:	4694      	mov	ip, r2
20001628:	44bc      	add	ip, r7
2000162a:	4463      	add	r3, ip
2000162c:	689b      	ldr	r3, [r3, #8]
2000162e:	1d9a      	adds	r2, r3, #6
20001630:	4b18      	ldr	r3, [pc, #96]	; (20001694 <main+0x1498>)
20001632:	2198      	movs	r1, #152	; 0x98
20001634:	00c9      	lsls	r1, r1, #3
20001636:	468c      	mov	ip, r1
20001638:	44bc      	add	ip, r7
2000163a:	4463      	add	r3, ip
2000163c:	651a      	str	r2, [r3, #80]	; 0x50
					no_DIP = 1;
2000163e:	2301      	movs	r3, #1
20001640:	4a21      	ldr	r2, [pc, #132]	; (200016c8 <main+0x14cc>)
20001642:	18ba      	adds	r2, r7, r2
20001644:	6013      	str	r3, [r2, #0]
					ascii_write("DIPs-WITCH: ","       ARGHGHHRH!");
20001646:	4a21      	ldr	r2, [pc, #132]	; (200016cc <main+0x14d0>)
20001648:	4b21      	ldr	r3, [pc, #132]	; (200016d0 <main+0x14d4>)
2000164a:	0011      	movs	r1, r2
2000164c:	0018      	movs	r0, r3
2000164e:	f002 fd81 	bl	20004154 <ascii_write>
				}
				
				lastFireTrigger = read_DIL_single(HAIR_TRIGGER);
20001652:	2001      	movs	r0, #1
20001654:	f002 fb8c 	bl	20003d70 <read_DIL_single>
20001658:	0003      	movs	r3, r0
2000165a:	2294      	movs	r2, #148	; 0x94
2000165c:	00d2      	lsls	r2, r2, #3
2000165e:	18ba      	adds	r2, r7, r2
20001660:	6013      	str	r3, [r2, #0]
				
				game_over += game_over_adder;
20001662:	4b1c      	ldr	r3, [pc, #112]	; (200016d4 <main+0x14d8>)
20001664:	18fb      	adds	r3, r7, r3
20001666:	681a      	ldr	r2, [r3, #0]
20001668:	2396      	movs	r3, #150	; 0x96
2000166a:	00db      	lsls	r3, r3, #3
2000166c:	18fb      	adds	r3, r7, r3
2000166e:	681b      	ldr	r3, [r3, #0]
20001670:	18d3      	adds	r3, r2, r3
20001672:	4a18      	ldr	r2, [pc, #96]	; (200016d4 <main+0x14d8>)
20001674:	18ba      	adds	r2, r7, r2
20001676:	6013      	str	r3, [r2, #0]
				
				if(game_over >= 100) {
20001678:	4b16      	ldr	r3, [pc, #88]	; (200016d4 <main+0x14d8>)
2000167a:	18fb      	adds	r3, r7, r3
2000167c:	681b      	ldr	r3, [r3, #0]
2000167e:	2b63      	cmp	r3, #99	; 0x63
20001680:	dc00      	bgt.n	20001684 <main+0x1488>
20001682:	e0eb      	b.n	2000185c <main+0x1660>
					current_screen = RESET_GAME;
20001684:	4b14      	ldr	r3, [pc, #80]	; (200016d8 <main+0x14dc>)
20001686:	220a      	movs	r2, #10
20001688:	601a      	str	r2, [r3, #0]
				}
				
				break;
2000168a:	e0e7      	b.n	2000185c <main+0x1660>
2000168c:	fffffdac 			; <UNDEFINED> instruction: 0xfffffdac
20001690:	200048d8 	ldrdcs	r4, [r0], -r8
20001694:	fffffc44 			; <UNDEFINED> instruction: 0xfffffc44
20001698:	200048dc 	ldrdcs	r4, [r0], -ip
2000169c:	2000f5f4 	strdcs	pc, [r0], -r4
200016a0:	2000f688 	andcs	pc, r0, r8, lsl #13
200016a4:	fffffe3c 			; <UNDEFINED> instruction: 0xfffffe3c
200016a8:	fffffe60 			; <UNDEFINED> instruction: 0xfffffe60
200016ac:	200048e0 	andcs	r4, r0, r0, ror #17
200016b0:	200048e4 	andcs	r4, r0, r4, ror #17
200016b4:	2000f694 	mulcs	r0, r4, r6
200016b8:	2000f6a8 	andcs	pc, r0, r8, lsr #13
200016bc:	fffffdd0 			; <UNDEFINED> instruction: 0xfffffdd0
200016c0:	200048e8 	andcs	r4, r0, r8, ror #17
200016c4:	200048ec 	andcs	r4, r0, ip, ror #17
200016c8:	000004ac 	andeq	r0, r0, ip, lsr #9
200016cc:	2000f6b4 			; <UNDEFINED> instruction: 0x2000f6b4
200016d0:	2000f6c8 	andcs	pc, r0, r8, asr #13
200016d4:	000004b4 			; <UNDEFINED> instruction: 0x000004b4
200016d8:	20008964 	andcs	r8, r0, r4, ror #18
				
			
			case RESET_GAME: //restart
				counter = 0;
200016dc:	4b61      	ldr	r3, [pc, #388]	; (20001864 <main+0x1668>)
200016de:	2200      	movs	r2, #0
200016e0:	601a      	str	r2, [r3, #0]
				current_screen = START_SCREEN;
200016e2:	4b61      	ldr	r3, [pc, #388]	; (20001868 <main+0x166c>)
200016e4:	2201      	movs	r2, #1
200016e6:	601a      	str	r2, [r3, #0]
				if(read_DIL() == 0) {
200016e8:	f002 fb32 	bl	20003d50 <read_DIL>
200016ec:	1e03      	subs	r3, r0, #0
200016ee:	d102      	bne.n	200016f6 <main+0x14fa>
					current_screen = SWITCH_LOCK; 
200016f0:	4b5d      	ldr	r3, [pc, #372]	; (20001868 <main+0x166c>)
200016f2:	2200      	movs	r2, #0
200016f4:	601a      	str	r2, [r3, #0]
				}
	
				static int test = 0;
				test+=2;
200016f6:	4b5d      	ldr	r3, [pc, #372]	; (2000186c <main+0x1670>)
200016f8:	681b      	ldr	r3, [r3, #0]
200016fa:	1c9a      	adds	r2, r3, #2
200016fc:	4b5b      	ldr	r3, [pc, #364]	; (2000186c <main+0x1670>)
200016fe:	601a      	str	r2, [r3, #0]
	
				first = 1;
20001700:	2301      	movs	r3, #1
20001702:	4a5b      	ldr	r2, [pc, #364]	; (20001870 <main+0x1674>)
20001704:	18ba      	adds	r2, r7, r2
20001706:	6013      	str	r3, [r2, #0]
				exploding = 0;
20001708:	2300      	movs	r3, #0
2000170a:	2295      	movs	r2, #149	; 0x95
2000170c:	00d2      	lsls	r2, r2, #3
2000170e:	18ba      	adds	r2, r7, r2
20001710:	6013      	str	r3, [r2, #0]
				is_climbing = 0;
20001712:	2300      	movs	r3, #0
20001714:	4a57      	ldr	r2, [pc, #348]	; (20001874 <main+0x1678>)
20001716:	18ba      	adds	r2, r7, r2
20001718:	6013      	str	r3, [r2, #0]
				has_climbed = 0;
2000171a:	2300      	movs	r3, #0
2000171c:	2297      	movs	r2, #151	; 0x97
2000171e:	00d2      	lsls	r2, r2, #3
20001720:	18ba      	adds	r2, r7, r2
20001722:	6013      	str	r3, [r2, #0]
				game_over = 0;
20001724:	2300      	movs	r3, #0
20001726:	4a54      	ldr	r2, [pc, #336]	; (20001878 <main+0x167c>)
20001728:	18ba      	adds	r2, r7, r2
2000172a:	6013      	str	r3, [r2, #0]
				game_over_adder = 0;
2000172c:	2300      	movs	r3, #0
2000172e:	2296      	movs	r2, #150	; 0x96
20001730:	00d2      	lsls	r2, r2, #3
20001732:	18ba      	adds	r2, r7, r2
20001734:	6013      	str	r3, [r2, #0]
				fires[0].xPos = 40;		//FIRE1_INDO
20001736:	4b51      	ldr	r3, [pc, #324]	; (2000187c <main+0x1680>)
20001738:	2298      	movs	r2, #152	; 0x98
2000173a:	00d2      	lsls	r2, r2, #3
2000173c:	4694      	mov	ip, r2
2000173e:	44bc      	add	ip, r7
20001740:	4463      	add	r3, ip
20001742:	2228      	movs	r2, #40	; 0x28
20001744:	605a      	str	r2, [r3, #4]
				fires[0].yPos = 64-12-8;
20001746:	4b4d      	ldr	r3, [pc, #308]	; (2000187c <main+0x1680>)
20001748:	2298      	movs	r2, #152	; 0x98
2000174a:	00d2      	lsls	r2, r2, #3
2000174c:	4694      	mov	ip, r2
2000174e:	44bc      	add	ip, r7
20001750:	4463      	add	r3, ip
20001752:	222c      	movs	r2, #44	; 0x2c
20001754:	609a      	str	r2, [r3, #8]
				fires[2].xPos = -50;		//FIRE1_INDO
20001756:	4b49      	ldr	r3, [pc, #292]	; (2000187c <main+0x1680>)
20001758:	2298      	movs	r2, #152	; 0x98
2000175a:	00d2      	lsls	r2, r2, #3
2000175c:	4694      	mov	ip, r2
2000175e:	44bc      	add	ip, r7
20001760:	4463      	add	r3, ip
20001762:	2232      	movs	r2, #50	; 0x32
20001764:	4252      	negs	r2, r2
20001766:	64da      	str	r2, [r3, #76]	; 0x4c
				fires[2].yPos = -50;
20001768:	4b44      	ldr	r3, [pc, #272]	; (2000187c <main+0x1680>)
2000176a:	2298      	movs	r2, #152	; 0x98
2000176c:	00d2      	lsls	r2, r2, #3
2000176e:	4694      	mov	ip, r2
20001770:	44bc      	add	ip, r7
20001772:	4463      	add	r3, ip
20001774:	2232      	movs	r2, #50	; 0x32
20001776:	4252      	negs	r2, r2
20001778:	651a      	str	r2, [r3, #80]	; 0x50
				fires[1].xPos = -50;		//FIRE1_INDO
2000177a:	4b40      	ldr	r3, [pc, #256]	; (2000187c <main+0x1680>)
2000177c:	2298      	movs	r2, #152	; 0x98
2000177e:	00d2      	lsls	r2, r2, #3
20001780:	4694      	mov	ip, r2
20001782:	44bc      	add	ip, r7
20001784:	4463      	add	r3, ip
20001786:	2232      	movs	r2, #50	; 0x32
20001788:	4252      	negs	r2, r2
2000178a:	629a      	str	r2, [r3, #40]	; 0x28
				fires[1].yPos = -50;
2000178c:	4b3b      	ldr	r3, [pc, #236]	; (2000187c <main+0x1680>)
2000178e:	2298      	movs	r2, #152	; 0x98
20001790:	00d2      	lsls	r2, r2, #3
20001792:	4694      	mov	ip, r2
20001794:	44bc      	add	ip, r7
20001796:	4463      	add	r3, ip
20001798:	2232      	movs	r2, #50	; 0x32
2000179a:	4252      	negs	r2, r2
2000179c:	62da      	str	r2, [r3, #44]	; 0x2c
				bird.xPos = 180;
2000179e:	4b38      	ldr	r3, [pc, #224]	; (20001880 <main+0x1684>)
200017a0:	2298      	movs	r2, #152	; 0x98
200017a2:	00d2      	lsls	r2, r2, #3
200017a4:	4694      	mov	ip, r2
200017a6:	44bc      	add	ip, r7
200017a8:	4463      	add	r3, ip
200017aa:	22b4      	movs	r2, #180	; 0xb4
200017ac:	605a      	str	r2, [r3, #4]
				bird.yPos = 40;
200017ae:	4b34      	ldr	r3, [pc, #208]	; (20001880 <main+0x1684>)
200017b0:	2298      	movs	r2, #152	; 0x98
200017b2:	00d2      	lsls	r2, r2, #3
200017b4:	4694      	mov	ip, r2
200017b6:	44bc      	add	ip, r7
200017b8:	4463      	add	r3, ip
200017ba:	2228      	movs	r2, #40	; 0x28
200017bc:	609a      	str	r2, [r3, #8]
				
				trophy.xPos = 24;
200017be:	4b31      	ldr	r3, [pc, #196]	; (20001884 <main+0x1688>)
200017c0:	2298      	movs	r2, #152	; 0x98
200017c2:	00d2      	lsls	r2, r2, #3
200017c4:	4694      	mov	ip, r2
200017c6:	44bc      	add	ip, r7
200017c8:	4463      	add	r3, ip
200017ca:	2218      	movs	r2, #24
200017cc:	605a      	str	r2, [r3, #4]
				trophy.yPos = 5;
200017ce:	4b2d      	ldr	r3, [pc, #180]	; (20001884 <main+0x1688>)
200017d0:	2298      	movs	r2, #152	; 0x98
200017d2:	00d2      	lsls	r2, r2, #3
200017d4:	4694      	mov	ip, r2
200017d6:	44bc      	add	ip, r7
200017d8:	4463      	add	r3, ip
200017da:	2205      	movs	r2, #5
200017dc:	609a      	str	r2, [r3, #8]
				trophy_burned = 0;
200017de:	4b2a      	ldr	r3, [pc, #168]	; (20001888 <main+0x168c>)
200017e0:	2200      	movs	r2, #0
200017e2:	601a      	str	r2, [r3, #0]
				
				DIP.xPos = 100;
200017e4:	4b29      	ldr	r3, [pc, #164]	; (2000188c <main+0x1690>)
200017e6:	2298      	movs	r2, #152	; 0x98
200017e8:	00d2      	lsls	r2, r2, #3
200017ea:	4694      	mov	ip, r2
200017ec:	44bc      	add	ip, r7
200017ee:	4463      	add	r3, ip
200017f0:	2264      	movs	r2, #100	; 0x64
200017f2:	605a      	str	r2, [r3, #4]
				DIP.yPos = 5;
200017f4:	4b25      	ldr	r3, [pc, #148]	; (2000188c <main+0x1690>)
200017f6:	2298      	movs	r2, #152	; 0x98
200017f8:	00d2      	lsls	r2, r2, #3
200017fa:	4694      	mov	ip, r2
200017fc:	44bc      	add	ip, r7
200017fe:	4463      	add	r3, ip
20001800:	2205      	movs	r2, #5
20001802:	609a      	str	r2, [r3, #8]
				DIP_burned = 0;
20001804:	4b22      	ldr	r3, [pc, #136]	; (20001890 <main+0x1694>)
20001806:	2200      	movs	r2, #0
20001808:	601a      	str	r2, [r3, #0]
				no_DIP = 0;
2000180a:	2300      	movs	r3, #0
2000180c:	4a21      	ldr	r2, [pc, #132]	; (20001894 <main+0x1698>)
2000180e:	18ba      	adds	r2, r7, r2
20001810:	6013      	str	r3, [r2, #0]
				
				lastFireTrigger = 0;
20001812:	2300      	movs	r3, #0
20001814:	2294      	movs	r2, #148	; 0x94
20001816:	00d2      	lsls	r2, r2, #3
20001818:	18ba      	adds	r2, r7, r2
2000181a:	6013      	str	r3, [r2, #0]
				
				player.xPos = 3;
2000181c:	4b1e      	ldr	r3, [pc, #120]	; (20001898 <main+0x169c>)
2000181e:	2298      	movs	r2, #152	; 0x98
20001820:	00d2      	lsls	r2, r2, #3
20001822:	4694      	mov	ip, r2
20001824:	44bc      	add	ip, r7
20001826:	4463      	add	r3, ip
20001828:	2203      	movs	r2, #3
2000182a:	605a      	str	r2, [r3, #4]
				player.yPos = 64-18-7; //player position
2000182c:	4b1a      	ldr	r3, [pc, #104]	; (20001898 <main+0x169c>)
2000182e:	2298      	movs	r2, #152	; 0x98
20001830:	00d2      	lsls	r2, r2, #3
20001832:	4694      	mov	ip, r2
20001834:	44bc      	add	ip, r7
20001836:	4463      	add	r3, ip
20001838:	2227      	movs	r2, #39	; 0x27
2000183a:	609a      	str	r2, [r3, #8]
				clear_ascii();
2000183c:	f002 fc55 	bl	200040ea <clear_ascii>
				break;
20001840:	e00d      	b.n	2000185e <main+0x1662>
				
				
			case WIN_SCREEN:
				draw_game_object( &roger );
20001842:	23e3      	movs	r3, #227	; 0xe3
20001844:	009b      	lsls	r3, r3, #2
20001846:	18fb      	adds	r3, r7, r3
20001848:	0018      	movs	r0, r3
2000184a:	f002 f9d7 	bl	20003bfc <draw_game_object>
				show_frame(1);
2000184e:	2001      	movs	r0, #1
20001850:	f002 fa15 	bl	20003c7e <show_frame>
				break;
20001854:	e003      	b.n	2000185e <main+0x1662>
				break;
20001856:	46c0      	nop			; (mov r8, r8)
20001858:	f7ff f813 	bl	20000882 <main+0x686>
				break;
2000185c:	46c0      	nop			; (mov r8, r8)
		switch(current_screen) {
2000185e:	f7ff f810 	bl	20000882 <main+0x686>
20001862:	46c0      	nop			; (mov r8, r8)
20001864:	200048d0 	ldrdcs	r4, [r0], -r0
20001868:	20008964 	andcs	r8, r0, r4, ror #18
2000186c:	200048f0 	strdcs	r4, [r0], -r0
20001870:	000004a4 	andeq	r0, r0, r4, lsr #9
20001874:	000004bc 			; <UNDEFINED> instruction: 0x000004bc
20001878:	000004b4 			; <UNDEFINED> instruction: 0x000004b4
2000187c:	fffffc44 			; <UNDEFINED> instruction: 0xfffffc44
20001880:	fffffe18 			; <UNDEFINED> instruction: 0xfffffe18
20001884:	fffffe60 			; <UNDEFINED> instruction: 0xfffffe60
20001888:	200048e4 	andcs	r4, r0, r4, ror #17
2000188c:	fffffdd0 			; <UNDEFINED> instruction: 0xfffffdd0
20001890:	200048ec 	andcs	r4, r0, ip, ror #17
20001894:	000004ac 	andeq	r0, r0, ip, lsr #9
20001898:	fffffdac 			; <UNDEFINED> instruction: 0xfffffdac

2000189c <abs>:
		
	}
	
}

int abs(int value) {
2000189c:	b580      	push	{r7, lr}
2000189e:	b082      	sub	sp, #8
200018a0:	af00      	add	r7, sp, #0
200018a2:	6078      	str	r0, [r7, #4]
	if(value < 0) {
200018a4:	687b      	ldr	r3, [r7, #4]
200018a6:	2b00      	cmp	r3, #0
200018a8:	da02      	bge.n	200018b0 <abs+0x14>
		return -value;
200018aa:	687b      	ldr	r3, [r7, #4]
200018ac:	425b      	negs	r3, r3
200018ae:	e000      	b.n	200018b2 <abs+0x16>
	}
	return value;
200018b0:	687b      	ldr	r3, [r7, #4]
}
200018b2:	0018      	movs	r0, r3
200018b4:	46bd      	mov	sp, r7
200018b6:	b002      	add	sp, #8
200018b8:	bd80      	pop	{r7, pc}
200018ba:	46c0      	nop			; (mov r8, r8)

200018bc <render>:
GameObject* gameObjects[100];
int nGameObjects = 0;


void render(GameObject* this)
{
200018bc:	b580      	push	{r7, lr}
200018be:	b082      	sub	sp, #8
200018c0:	af00      	add	r7, sp, #0
200018c2:	6078      	str	r0, [r7, #4]
    
}
200018c4:	46c0      	nop			; (mov r8, r8)
200018c6:	46bd      	mov	sp, r7
200018c8:	b002      	add	sp, #8
200018ca:	bd80      	pop	{r7, pc}

200018cc <gameObjectUpdate>:

void gameObjectUpdate(GameObject *this) {
200018cc:	b580      	push	{r7, lr}
200018ce:	b082      	sub	sp, #8
200018d0:	af00      	add	r7, sp, #0
200018d2:	6078      	str	r0, [r7, #4]
	this->animation_counter++;
200018d4:	687b      	ldr	r3, [r7, #4]
200018d6:	6a1b      	ldr	r3, [r3, #32]
200018d8:	1c5a      	adds	r2, r3, #1
200018da:	687b      	ldr	r3, [r7, #4]
200018dc:	621a      	str	r2, [r3, #32]
	if (this->animation_counter == this->animation_speed) {
200018de:	687b      	ldr	r3, [r7, #4]
200018e0:	6a1a      	ldr	r2, [r3, #32]
200018e2:	687b      	ldr	r3, [r7, #4]
200018e4:	69db      	ldr	r3, [r3, #28]
200018e6:	429a      	cmp	r2, r3
200018e8:	d10f      	bne.n	2000190a <gameObjectUpdate+0x3e>
		this->animation_counter = 0;
200018ea:	687b      	ldr	r3, [r7, #4]
200018ec:	2200      	movs	r2, #0
200018ee:	621a      	str	r2, [r3, #32]
		this->current_frame = (this->current_frame + 1) % this->n_frames;
200018f0:	687b      	ldr	r3, [r7, #4]
200018f2:	695b      	ldr	r3, [r3, #20]
200018f4:	1c5a      	adds	r2, r3, #1
200018f6:	687b      	ldr	r3, [r7, #4]
200018f8:	699b      	ldr	r3, [r3, #24]
200018fa:	0019      	movs	r1, r3
200018fc:	0010      	movs	r0, r2
200018fe:	f002 ffe1 	bl	200048c4 <__aeabi_idivmod>
20001902:	000b      	movs	r3, r1
20001904:	001a      	movs	r2, r3
20001906:	687b      	ldr	r3, [r7, #4]
20001908:	615a      	str	r2, [r3, #20]
	}
}
2000190a:	46c0      	nop			; (mov r8, r8)
2000190c:	46bd      	mov	sp, r7
2000190e:	b002      	add	sp, #8
20001910:	bd80      	pop	{r7, pc}
	...

20001914 <initSprites>:
Image fire2Image;
Image fire3Image;
Image fire4Image;
Image fire5Image;
Image fireImages[5];
static void initSprites( void ) {	
20001914:	b580      	push	{r7, lr}
20001916:	b08c      	sub	sp, #48	; 0x30
20001918:	af00      	add	r7, sp, #0
	sprite *pointer0 = &tempFireBlack;
2000191a:	4b3e      	ldr	r3, [pc, #248]	; (20001a14 <initSprites+0x100>)
2000191c:	62fb      	str	r3, [r7, #44]	; 0x2c
	load_sprite(pointer0, fire_black_2_bits, fire1_gray_width, fire1_gray_height);
2000191e:	493e      	ldr	r1, [pc, #248]	; (20001a18 <initSprites+0x104>)
20001920:	6af8      	ldr	r0, [r7, #44]	; 0x2c
20001922:	230c      	movs	r3, #12
20001924:	2208      	movs	r2, #8
20001926:	f002 f9f3 	bl	20003d10 <load_sprite>
	fireBlack = pointer0;
2000192a:	4b3c      	ldr	r3, [pc, #240]	; (20001a1c <initSprites+0x108>)
2000192c:	6afa      	ldr	r2, [r7, #44]	; 0x2c
2000192e:	601a      	str	r2, [r3, #0]
	
	sprite *pointer1 = &tempFire1Gray;
20001930:	4b3b      	ldr	r3, [pc, #236]	; (20001a20 <initSprites+0x10c>)
20001932:	62bb      	str	r3, [r7, #40]	; 0x28
	load_sprite(pointer1, fire1_gray_bits, fire1_gray_width, fire1_gray_height);
20001934:	493b      	ldr	r1, [pc, #236]	; (20001a24 <initSprites+0x110>)
20001936:	6ab8      	ldr	r0, [r7, #40]	; 0x28
20001938:	230c      	movs	r3, #12
2000193a:	2208      	movs	r2, #8
2000193c:	f002 f9e8 	bl	20003d10 <load_sprite>
	fire1Gray = pointer1;
20001940:	4b39      	ldr	r3, [pc, #228]	; (20001a28 <initSprites+0x114>)
20001942:	6aba      	ldr	r2, [r7, #40]	; 0x28
20001944:	601a      	str	r2, [r3, #0]

	sprite *pointer2 = &tempFire1Light;
20001946:	4b39      	ldr	r3, [pc, #228]	; (20001a2c <initSprites+0x118>)
20001948:	627b      	str	r3, [r7, #36]	; 0x24
	load_sprite(pointer2, fire1_light_bits, fire1_gray_width, fire1_gray_height);
2000194a:	4939      	ldr	r1, [pc, #228]	; (20001a30 <initSprites+0x11c>)
2000194c:	6a78      	ldr	r0, [r7, #36]	; 0x24
2000194e:	230c      	movs	r3, #12
20001950:	2208      	movs	r2, #8
20001952:	f002 f9dd 	bl	20003d10 <load_sprite>
	fire1Light = pointer2;
20001956:	4b37      	ldr	r3, [pc, #220]	; (20001a34 <initSprites+0x120>)
20001958:	6a7a      	ldr	r2, [r7, #36]	; 0x24
2000195a:	601a      	str	r2, [r3, #0]

	sprite *pointer3 = &tempFire2Gray;
2000195c:	4b36      	ldr	r3, [pc, #216]	; (20001a38 <initSprites+0x124>)
2000195e:	623b      	str	r3, [r7, #32]
	load_sprite(pointer3, fire2_gray_bits, fire1_gray_width, fire1_gray_height);
20001960:	4936      	ldr	r1, [pc, #216]	; (20001a3c <initSprites+0x128>)
20001962:	6a38      	ldr	r0, [r7, #32]
20001964:	230c      	movs	r3, #12
20001966:	2208      	movs	r2, #8
20001968:	f002 f9d2 	bl	20003d10 <load_sprite>
	fire2Gray = pointer3;
2000196c:	4b34      	ldr	r3, [pc, #208]	; (20001a40 <initSprites+0x12c>)
2000196e:	6a3a      	ldr	r2, [r7, #32]
20001970:	601a      	str	r2, [r3, #0]

	sprite *pointer4 = &tempFire2Light;
20001972:	4b34      	ldr	r3, [pc, #208]	; (20001a44 <initSprites+0x130>)
20001974:	61fb      	str	r3, [r7, #28]
	load_sprite(pointer4, fire2_light_bits, fire1_gray_width, fire1_gray_height);
20001976:	4934      	ldr	r1, [pc, #208]	; (20001a48 <initSprites+0x134>)
20001978:	69f8      	ldr	r0, [r7, #28]
2000197a:	230c      	movs	r3, #12
2000197c:	2208      	movs	r2, #8
2000197e:	f002 f9c7 	bl	20003d10 <load_sprite>
	fire2Light = pointer4;
20001982:	4b32      	ldr	r3, [pc, #200]	; (20001a4c <initSprites+0x138>)
20001984:	69fa      	ldr	r2, [r7, #28]
20001986:	601a      	str	r2, [r3, #0]

	sprite *pointer5 = &tempFire3Gray;
20001988:	4b31      	ldr	r3, [pc, #196]	; (20001a50 <initSprites+0x13c>)
2000198a:	61bb      	str	r3, [r7, #24]
	load_sprite(pointer5, fire3_gray_bits, fire1_gray_width, fire1_gray_height);
2000198c:	4931      	ldr	r1, [pc, #196]	; (20001a54 <initSprites+0x140>)
2000198e:	69b8      	ldr	r0, [r7, #24]
20001990:	230c      	movs	r3, #12
20001992:	2208      	movs	r2, #8
20001994:	f002 f9bc 	bl	20003d10 <load_sprite>
	fire3Gray = pointer5;
20001998:	4b2f      	ldr	r3, [pc, #188]	; (20001a58 <initSprites+0x144>)
2000199a:	69ba      	ldr	r2, [r7, #24]
2000199c:	601a      	str	r2, [r3, #0]

	sprite *pointer6 = &tempFire3Light;
2000199e:	4b2f      	ldr	r3, [pc, #188]	; (20001a5c <initSprites+0x148>)
200019a0:	617b      	str	r3, [r7, #20]
	load_sprite(pointer6, fire3_light_bits, fire1_gray_width, fire1_gray_height);
200019a2:	492f      	ldr	r1, [pc, #188]	; (20001a60 <initSprites+0x14c>)
200019a4:	6978      	ldr	r0, [r7, #20]
200019a6:	230c      	movs	r3, #12
200019a8:	2208      	movs	r2, #8
200019aa:	f002 f9b1 	bl	20003d10 <load_sprite>
	fire3Light = pointer6;
200019ae:	4b2d      	ldr	r3, [pc, #180]	; (20001a64 <initSprites+0x150>)
200019b0:	697a      	ldr	r2, [r7, #20]
200019b2:	601a      	str	r2, [r3, #0]

	sprite *pointer7 = &tempFire4Gray;
200019b4:	4b2c      	ldr	r3, [pc, #176]	; (20001a68 <initSprites+0x154>)
200019b6:	613b      	str	r3, [r7, #16]
	load_sprite(pointer7, fire4_gray_bits, fire1_gray_width, fire1_gray_height);
200019b8:	492c      	ldr	r1, [pc, #176]	; (20001a6c <initSprites+0x158>)
200019ba:	6938      	ldr	r0, [r7, #16]
200019bc:	230c      	movs	r3, #12
200019be:	2208      	movs	r2, #8
200019c0:	f002 f9a6 	bl	20003d10 <load_sprite>
	fire4Gray = pointer7;
200019c4:	4b2a      	ldr	r3, [pc, #168]	; (20001a70 <initSprites+0x15c>)
200019c6:	693a      	ldr	r2, [r7, #16]
200019c8:	601a      	str	r2, [r3, #0]

	sprite *pointer8 = &tempFire4Light;
200019ca:	4b2a      	ldr	r3, [pc, #168]	; (20001a74 <initSprites+0x160>)
200019cc:	60fb      	str	r3, [r7, #12]
	load_sprite(pointer8, fire4_light_bits, fire1_gray_width, fire1_gray_height);
200019ce:	492a      	ldr	r1, [pc, #168]	; (20001a78 <initSprites+0x164>)
200019d0:	68f8      	ldr	r0, [r7, #12]
200019d2:	230c      	movs	r3, #12
200019d4:	2208      	movs	r2, #8
200019d6:	f002 f99b 	bl	20003d10 <load_sprite>
	fire4Light = pointer8;
200019da:	4b28      	ldr	r3, [pc, #160]	; (20001a7c <initSprites+0x168>)
200019dc:	68fa      	ldr	r2, [r7, #12]
200019de:	601a      	str	r2, [r3, #0]

	sprite *pointer9 = &tempFire5Gray;
200019e0:	4b27      	ldr	r3, [pc, #156]	; (20001a80 <initSprites+0x16c>)
200019e2:	60bb      	str	r3, [r7, #8]
	load_sprite(pointer9, fire5_gray_bits, fire1_gray_width, fire1_gray_height);
200019e4:	4927      	ldr	r1, [pc, #156]	; (20001a84 <initSprites+0x170>)
200019e6:	68b8      	ldr	r0, [r7, #8]
200019e8:	230c      	movs	r3, #12
200019ea:	2208      	movs	r2, #8
200019ec:	f002 f990 	bl	20003d10 <load_sprite>
	fire5Gray = pointer9;
200019f0:	4b25      	ldr	r3, [pc, #148]	; (20001a88 <initSprites+0x174>)
200019f2:	68ba      	ldr	r2, [r7, #8]
200019f4:	601a      	str	r2, [r3, #0]

	sprite *pointer10 = &tempFire5Light;
200019f6:	4b25      	ldr	r3, [pc, #148]	; (20001a8c <initSprites+0x178>)
200019f8:	607b      	str	r3, [r7, #4]
	load_sprite(pointer10, fire5_light_bits, fire1_gray_width, fire1_gray_height);
200019fa:	4925      	ldr	r1, [pc, #148]	; (20001a90 <initSprites+0x17c>)
200019fc:	6878      	ldr	r0, [r7, #4]
200019fe:	230c      	movs	r3, #12
20001a00:	2208      	movs	r2, #8
20001a02:	f002 f985 	bl	20003d10 <load_sprite>
	fire5Light = pointer10;
20001a06:	4b23      	ldr	r3, [pc, #140]	; (20001a94 <initSprites+0x180>)
20001a08:	687a      	ldr	r2, [r7, #4]
20001a0a:	601a      	str	r2, [r3, #0]
}
20001a0c:	46c0      	nop			; (mov r8, r8)
20001a0e:	46bd      	mov	sp, r7
20001a10:	b00c      	add	sp, #48	; 0x30
20001a12:	bd80      	pop	{r7, pc}
20001a14:	20004bb8 			; <UNDEFINED> instruction: 0x20004bb8
20001a18:	20008978 	andcs	r8, r0, r8, ror r9
20001a1c:	20004cb0 			; <UNDEFINED> instruction: 0x20004cb0
20001a20:	20004ca4 	andcs	r4, r0, r4, lsr #25
20001a24:	20008984 	andcs	r8, r0, r4, lsl #19
20001a28:	20004cc8 	andcs	r4, r0, r8, asr #25
20001a2c:	20004c80 	andcs	r4, r0, r0, lsl #25
20001a30:	20008990 	mulcs	r0, r0, r9
20001a34:	20004b80 	andcs	r4, r0, r0, lsl #23
20001a38:	20004bac 	andcs	r4, r0, ip, lsr #23
20001a3c:	2000899c 	mulcs	r0, ip, r9
20001a40:	20004cc4 	andcs	r4, r0, r4, asr #25
20001a44:	20004cb4 			; <UNDEFINED> instruction: 0x20004cb4
20001a48:	200089a8 	andcs	r8, r0, r8, lsr #19
20001a4c:	20004c9c 	mulcs	r0, ip, ip
20001a50:	20004c64 	andcs	r4, r0, r4, ror #24
20001a54:	200089b4 			; <UNDEFINED> instruction: 0x200089b4
20001a58:	20004b90 	mulcs	r0, r0, fp
20001a5c:	20004b84 	andcs	r4, r0, r4, lsl #23
20001a60:	200089c0 	andcs	r8, r0, r0, asr #19
20001a64:	20004cc0 	andcs	r4, r0, r0, asr #25
20001a68:	20004b94 	mulcs	r0, r4, fp
20001a6c:	200089cc 	andcs	r8, r0, ip, asr #19
20001a70:	20004c7c 	andcs	r4, r0, ip, ror ip
20001a74:	20004bd0 	ldrdcs	r4, [r0], -r0
20001a78:	200089d8 	ldrdcs	r8, [r0], -r8	; <UNPREDICTABLE>
20001a7c:	20004be8 	andcs	r4, r0, r8, ror #23
20001a80:	20004c58 	andcs	r4, r0, r8, asr ip
20001a84:	200089e4 	andcs	r8, r0, r4, ror #19
20001a88:	20004c98 	mulcs	r0, r8, ip
20001a8c:	20004c8c 	andcs	r4, r0, ip, lsl #25
20001a90:	200089f0 	strdcs	r8, [r0], -r0
20001a94:	20004ca0 	andcs	r4, r0, r0, lsr #25

20001a98 <init_fire>:
	
void init_fire( GameObject *fireObj ) {
20001a98:	b590      	push	{r4, r7, lr}
20001a9a:	b083      	sub	sp, #12
20001a9c:	af00      	add	r7, sp, #0
20001a9e:	6078      	str	r0, [r7, #4]
	static int firstTime = 1;
	if (firstTime) {
20001aa0:	4b30      	ldr	r3, [pc, #192]	; (20001b64 <init_fire+0xcc>)
20001aa2:	681b      	ldr	r3, [r3, #0]
20001aa4:	2b00      	cmp	r3, #0
20001aa6:	d049      	beq.n	20001b3c <init_fire+0xa4>
		initSprites();
20001aa8:	f7ff ff34 	bl	20001914 <initSprites>
		firstTime = 0;			
20001aac:	4b2d      	ldr	r3, [pc, #180]	; (20001b64 <init_fire+0xcc>)
20001aae:	2200      	movs	r2, #0
20001ab0:	601a      	str	r2, [r3, #0]

		fireImages[0] = fire1Image;
20001ab2:	4b2d      	ldr	r3, [pc, #180]	; (20001b68 <init_fire+0xd0>)
20001ab4:	4a2d      	ldr	r2, [pc, #180]	; (20001b6c <init_fire+0xd4>)
20001ab6:	ca13      	ldmia	r2!, {r0, r1, r4}
20001ab8:	c313      	stmia	r3!, {r0, r1, r4}
		fireImages[1] = fire2Image;
20001aba:	4b2b      	ldr	r3, [pc, #172]	; (20001b68 <init_fire+0xd0>)
20001abc:	4a2c      	ldr	r2, [pc, #176]	; (20001b70 <init_fire+0xd8>)
20001abe:	330c      	adds	r3, #12
20001ac0:	ca13      	ldmia	r2!, {r0, r1, r4}
20001ac2:	c313      	stmia	r3!, {r0, r1, r4}
		fireImages[2] = fire3Image;
20001ac4:	4b28      	ldr	r3, [pc, #160]	; (20001b68 <init_fire+0xd0>)
20001ac6:	4a2b      	ldr	r2, [pc, #172]	; (20001b74 <init_fire+0xdc>)
20001ac8:	3318      	adds	r3, #24
20001aca:	ca13      	ldmia	r2!, {r0, r1, r4}
20001acc:	c313      	stmia	r3!, {r0, r1, r4}
		fireImages[3] = fire4Image;
20001ace:	4b26      	ldr	r3, [pc, #152]	; (20001b68 <init_fire+0xd0>)
20001ad0:	4a29      	ldr	r2, [pc, #164]	; (20001b78 <init_fire+0xe0>)
20001ad2:	3324      	adds	r3, #36	; 0x24
20001ad4:	ca13      	ldmia	r2!, {r0, r1, r4}
20001ad6:	c313      	stmia	r3!, {r0, r1, r4}
		fireImages[4] = fire5Image;
20001ad8:	4b23      	ldr	r3, [pc, #140]	; (20001b68 <init_fire+0xd0>)
20001ada:	4a28      	ldr	r2, [pc, #160]	; (20001b7c <init_fire+0xe4>)
20001adc:	3330      	adds	r3, #48	; 0x30
20001ade:	ca13      	ldmia	r2!, {r0, r1, r4}
20001ae0:	c313      	stmia	r3!, {r0, r1, r4}
		
		load_image(&fireImages[0], fire1Gray, fire1Light, fireBlack);
20001ae2:	4b27      	ldr	r3, [pc, #156]	; (20001b80 <init_fire+0xe8>)
20001ae4:	6819      	ldr	r1, [r3, #0]
20001ae6:	4b27      	ldr	r3, [pc, #156]	; (20001b84 <init_fire+0xec>)
20001ae8:	681a      	ldr	r2, [r3, #0]
20001aea:	4b27      	ldr	r3, [pc, #156]	; (20001b88 <init_fire+0xf0>)
20001aec:	681b      	ldr	r3, [r3, #0]
20001aee:	481e      	ldr	r0, [pc, #120]	; (20001b68 <init_fire+0xd0>)
20001af0:	f002 f8fa 	bl	20003ce8 <load_image>
		load_image(&fireImages[1], fire2Gray, fire2Light, fireBlack);
20001af4:	4b25      	ldr	r3, [pc, #148]	; (20001b8c <init_fire+0xf4>)
20001af6:	6819      	ldr	r1, [r3, #0]
20001af8:	4b25      	ldr	r3, [pc, #148]	; (20001b90 <init_fire+0xf8>)
20001afa:	681a      	ldr	r2, [r3, #0]
20001afc:	4b22      	ldr	r3, [pc, #136]	; (20001b88 <init_fire+0xf0>)
20001afe:	681b      	ldr	r3, [r3, #0]
20001b00:	4824      	ldr	r0, [pc, #144]	; (20001b94 <init_fire+0xfc>)
20001b02:	f002 f8f1 	bl	20003ce8 <load_image>
		load_image(&fireImages[2], fire3Gray, fire3Light, fireBlack);
20001b06:	4b24      	ldr	r3, [pc, #144]	; (20001b98 <init_fire+0x100>)
20001b08:	6819      	ldr	r1, [r3, #0]
20001b0a:	4b24      	ldr	r3, [pc, #144]	; (20001b9c <init_fire+0x104>)
20001b0c:	681a      	ldr	r2, [r3, #0]
20001b0e:	4b1e      	ldr	r3, [pc, #120]	; (20001b88 <init_fire+0xf0>)
20001b10:	681b      	ldr	r3, [r3, #0]
20001b12:	4823      	ldr	r0, [pc, #140]	; (20001ba0 <init_fire+0x108>)
20001b14:	f002 f8e8 	bl	20003ce8 <load_image>
		load_image(&fireImages[3], fire4Gray, fire4Light, fireBlack);
20001b18:	4b22      	ldr	r3, [pc, #136]	; (20001ba4 <init_fire+0x10c>)
20001b1a:	6819      	ldr	r1, [r3, #0]
20001b1c:	4b22      	ldr	r3, [pc, #136]	; (20001ba8 <init_fire+0x110>)
20001b1e:	681a      	ldr	r2, [r3, #0]
20001b20:	4b19      	ldr	r3, [pc, #100]	; (20001b88 <init_fire+0xf0>)
20001b22:	681b      	ldr	r3, [r3, #0]
20001b24:	4821      	ldr	r0, [pc, #132]	; (20001bac <init_fire+0x114>)
20001b26:	f002 f8df 	bl	20003ce8 <load_image>
		load_image(&fireImages[4], fire5Gray, fire5Light, fireBlack);
20001b2a:	4b21      	ldr	r3, [pc, #132]	; (20001bb0 <init_fire+0x118>)
20001b2c:	6819      	ldr	r1, [r3, #0]
20001b2e:	4b21      	ldr	r3, [pc, #132]	; (20001bb4 <init_fire+0x11c>)
20001b30:	681a      	ldr	r2, [r3, #0]
20001b32:	4b15      	ldr	r3, [pc, #84]	; (20001b88 <init_fire+0xf0>)
20001b34:	681b      	ldr	r3, [r3, #0]
20001b36:	4820      	ldr	r0, [pc, #128]	; (20001bb8 <init_fire+0x120>)
20001b38:	f002 f8d6 	bl	20003ce8 <load_image>
	}
	
	fireObj->images = fireImages;
20001b3c:	687b      	ldr	r3, [r7, #4]
20001b3e:	4a0a      	ldr	r2, [pc, #40]	; (20001b68 <init_fire+0xd0>)
20001b40:	601a      	str	r2, [r3, #0]

	fireObj->current_frame = 0;
20001b42:	687b      	ldr	r3, [r7, #4]
20001b44:	2200      	movs	r2, #0
20001b46:	615a      	str	r2, [r3, #20]
	fireObj->n_frames = 5;
20001b48:	687b      	ldr	r3, [r7, #4]
20001b4a:	2205      	movs	r2, #5
20001b4c:	619a      	str	r2, [r3, #24]
	fireObj->animation_speed = 1;
20001b4e:	687b      	ldr	r3, [r7, #4]
20001b50:	2201      	movs	r2, #1
20001b52:	61da      	str	r2, [r3, #28]
	fireObj->animation_counter = 0;
20001b54:	687b      	ldr	r3, [r7, #4]
20001b56:	2200      	movs	r2, #0
20001b58:	621a      	str	r2, [r3, #32]
}
20001b5a:	46c0      	nop			; (mov r8, r8)
20001b5c:	46bd      	mov	sp, r7
20001b5e:	b003      	add	sp, #12
20001b60:	bd90      	pop	{r4, r7, pc}
20001b62:	46c0      	nop			; (mov r8, r8)
20001b64:	200089fc 	strdcs	r8, [r0], -ip
20001b68:	20004c1c 	andcs	r4, r0, ip, lsl ip
20001b6c:	20004bdc 	ldrdcs	r4, [r0], -ip
20001b70:	20004ba0 	andcs	r4, r0, r0, lsr #23
20001b74:	20004bc4 	andcs	r4, r0, r4, asr #23
20001b78:	20004c70 	andcs	r4, r0, r0, ror ip
20001b7c:	20004c10 	andcs	r4, r0, r0, lsl ip
20001b80:	20004cc8 	andcs	r4, r0, r8, asr #25
20001b84:	20004b80 	andcs	r4, r0, r0, lsl #23
20001b88:	20004cb0 			; <UNDEFINED> instruction: 0x20004cb0
20001b8c:	20004cc4 	andcs	r4, r0, r4, asr #25
20001b90:	20004c9c 	mulcs	r0, ip, ip
20001b94:	20004c28 	andcs	r4, r0, r8, lsr #24
20001b98:	20004b90 	mulcs	r0, r0, fp
20001b9c:	20004cc0 	andcs	r4, r0, r0, asr #25
20001ba0:	20004c34 	andcs	r4, r0, r4, lsr ip
20001ba4:	20004c7c 	andcs	r4, r0, ip, ror ip
20001ba8:	20004be8 	andcs	r4, r0, r8, ror #23
20001bac:	20004c40 	andcs	r4, r0, r0, asr #24
20001bb0:	20004c98 	mulcs	r0, r8, ip
20001bb4:	20004ca0 	andcs	r4, r0, r0, lsr #25
20001bb8:	20004c4c 	andcs	r4, r0, ip, asr #24

20001bbc <playerUpdate>:
#include "controls.h"
#include "gameobject.h"
#include "player.h"
#include "ascii_display.h"

void playerUpdate(GameObject *this) {
20001bbc:	b580      	push	{r7, lr}
20001bbe:	b082      	sub	sp, #8
20001bc0:	af00      	add	r7, sp, #0
20001bc2:	6078      	str	r0, [r7, #4]
	
	// Animate
	this->animation_counter++;
20001bc4:	687b      	ldr	r3, [r7, #4]
20001bc6:	6a1b      	ldr	r3, [r3, #32]
20001bc8:	1c5a      	adds	r2, r3, #1
20001bca:	687b      	ldr	r3, [r7, #4]
20001bcc:	621a      	str	r2, [r3, #32]
	if (this->animation_counter == this->animation_speed) {
20001bce:	687b      	ldr	r3, [r7, #4]
20001bd0:	6a1a      	ldr	r2, [r3, #32]
20001bd2:	687b      	ldr	r3, [r7, #4]
20001bd4:	69db      	ldr	r3, [r3, #28]
20001bd6:	429a      	cmp	r2, r3
20001bd8:	d10f      	bne.n	20001bfa <playerUpdate+0x3e>
		this->animation_counter = 0;
20001bda:	687b      	ldr	r3, [r7, #4]
20001bdc:	2200      	movs	r2, #0
20001bde:	621a      	str	r2, [r3, #32]
		this->current_frame = (this->current_frame + 1) % this->n_frames;
20001be0:	687b      	ldr	r3, [r7, #4]
20001be2:	695b      	ldr	r3, [r3, #20]
20001be4:	1c5a      	adds	r2, r3, #1
20001be6:	687b      	ldr	r3, [r7, #4]
20001be8:	699b      	ldr	r3, [r3, #24]
20001bea:	0019      	movs	r1, r3
20001bec:	0010      	movs	r0, r2
20001bee:	f002 fe69 	bl	200048c4 <__aeabi_idivmod>
20001bf2:	000b      	movs	r3, r1
20001bf4:	001a      	movs	r2, r3
20001bf6:	687b      	ldr	r3, [r7, #4]
20001bf8:	615a      	str	r2, [r3, #20]
	static xSpeed = 0;
	static ySpeed = 0;
	
	// Y position changes
	
	if (lastJumpValue != read_DIL_single(JUMP_TRIGGER) && (this->yPos == LIMIT_DOWN || this->yPos == PLATFORM_Y - PLAYER_HEIGHT)){
20001bfa:	2005      	movs	r0, #5
20001bfc:	f002 f8b8 	bl	20003d70 <read_DIL_single>
20001c00:	0002      	movs	r2, r0
20001c02:	4b68      	ldr	r3, [pc, #416]	; (20001da4 <playerUpdate+0x1e8>)
20001c04:	681b      	ldr	r3, [r3, #0]
20001c06:	429a      	cmp	r2, r3
20001c08:	d00b      	beq.n	20001c22 <playerUpdate+0x66>
20001c0a:	687b      	ldr	r3, [r7, #4]
20001c0c:	689b      	ldr	r3, [r3, #8]
20001c0e:	2b27      	cmp	r3, #39	; 0x27
20001c10:	d003      	beq.n	20001c1a <playerUpdate+0x5e>
20001c12:	687b      	ldr	r3, [r7, #4]
20001c14:	689b      	ldr	r3, [r3, #8]
20001c16:	2b05      	cmp	r3, #5
20001c18:	d103      	bne.n	20001c22 <playerUpdate+0x66>
		ySpeed = -(SPEED_ADD_Y);
20001c1a:	4b63      	ldr	r3, [pc, #396]	; (20001da8 <playerUpdate+0x1ec>)
20001c1c:	2204      	movs	r2, #4
20001c1e:	4252      	negs	r2, r2
20001c20:	601a      	str	r2, [r3, #0]
	}
	
	if (this->yPos + ySpeed > LIMIT_DOWN){
20001c22:	687b      	ldr	r3, [r7, #4]
20001c24:	689a      	ldr	r2, [r3, #8]
20001c26:	4b60      	ldr	r3, [pc, #384]	; (20001da8 <playerUpdate+0x1ec>)
20001c28:	681b      	ldr	r3, [r3, #0]
20001c2a:	18d3      	adds	r3, r2, r3
20001c2c:	2b27      	cmp	r3, #39	; 0x27
20001c2e:	dd10      	ble.n	20001c52 <playerUpdate+0x96>
		this->yPos = LIMIT_DOWN;
20001c30:	687b      	ldr	r3, [r7, #4]
20001c32:	2227      	movs	r2, #39	; 0x27
20001c34:	609a      	str	r2, [r3, #8]
		if (ySpeed == SPEED_ADD_Y + 1){
20001c36:	4b5c      	ldr	r3, [pc, #368]	; (20001da8 <playerUpdate+0x1ec>)
20001c38:	681b      	ldr	r3, [r3, #0]
20001c3a:	2b05      	cmp	r3, #5
20001c3c:	d105      	bne.n	20001c4a <playerUpdate+0x8e>
			ascii_write("*THUMP*","");
20001c3e:	4a5b      	ldr	r2, [pc, #364]	; (20001dac <playerUpdate+0x1f0>)
20001c40:	4b5b      	ldr	r3, [pc, #364]	; (20001db0 <playerUpdate+0x1f4>)
20001c42:	0011      	movs	r1, r2
20001c44:	0018      	movs	r0, r3
20001c46:	f002 fa85 	bl	20004154 <ascii_write>
		}
		ySpeed = 0;
20001c4a:	4b57      	ldr	r3, [pc, #348]	; (20001da8 <playerUpdate+0x1ec>)
20001c4c:	2200      	movs	r2, #0
20001c4e:	601a      	str	r2, [r3, #0]
20001c50:	e02a      	b.n	20001ca8 <playerUpdate+0xec>
	}
	else if (this->yPos + ySpeed > PLATFORM_Y - PLAYER_HEIGHT && this->yPos + ySpeed < PLATFORM_Y - PLAYER_HEIGHT + 2*SPEED_ADD_Y){
20001c52:	687b      	ldr	r3, [r7, #4]
20001c54:	689a      	ldr	r2, [r3, #8]
20001c56:	4b54      	ldr	r3, [pc, #336]	; (20001da8 <playerUpdate+0x1ec>)
20001c58:	681b      	ldr	r3, [r3, #0]
20001c5a:	18d3      	adds	r3, r2, r3
20001c5c:	2b05      	cmp	r3, #5
20001c5e:	dd17      	ble.n	20001c90 <playerUpdate+0xd4>
20001c60:	687b      	ldr	r3, [r7, #4]
20001c62:	689a      	ldr	r2, [r3, #8]
20001c64:	4b50      	ldr	r3, [pc, #320]	; (20001da8 <playerUpdate+0x1ec>)
20001c66:	681b      	ldr	r3, [r3, #0]
20001c68:	18d3      	adds	r3, r2, r3
20001c6a:	2b0c      	cmp	r3, #12
20001c6c:	dc10      	bgt.n	20001c90 <playerUpdate+0xd4>
		this->yPos = PLATFORM_Y - PLAYER_HEIGHT;
20001c6e:	687b      	ldr	r3, [r7, #4]
20001c70:	2205      	movs	r2, #5
20001c72:	609a      	str	r2, [r3, #8]
		if (ySpeed == SPEED_ADD_Y + 1){
20001c74:	4b4c      	ldr	r3, [pc, #304]	; (20001da8 <playerUpdate+0x1ec>)
20001c76:	681b      	ldr	r3, [r3, #0]
20001c78:	2b05      	cmp	r3, #5
20001c7a:	d105      	bne.n	20001c88 <playerUpdate+0xcc>
			ascii_write("*THUMP*","");
20001c7c:	4a4b      	ldr	r2, [pc, #300]	; (20001dac <playerUpdate+0x1f0>)
20001c7e:	4b4c      	ldr	r3, [pc, #304]	; (20001db0 <playerUpdate+0x1f4>)
20001c80:	0011      	movs	r1, r2
20001c82:	0018      	movs	r0, r3
20001c84:	f002 fa66 	bl	20004154 <ascii_write>
		}
		ySpeed = 0;
20001c88:	4b47      	ldr	r3, [pc, #284]	; (20001da8 <playerUpdate+0x1ec>)
20001c8a:	2200      	movs	r2, #0
20001c8c:	601a      	str	r2, [r3, #0]
20001c8e:	e00b      	b.n	20001ca8 <playerUpdate+0xec>
	}
	else{
		this->yPos+=ySpeed;
20001c90:	687b      	ldr	r3, [r7, #4]
20001c92:	689a      	ldr	r2, [r3, #8]
20001c94:	4b44      	ldr	r3, [pc, #272]	; (20001da8 <playerUpdate+0x1ec>)
20001c96:	681b      	ldr	r3, [r3, #0]
20001c98:	18d2      	adds	r2, r2, r3
20001c9a:	687b      	ldr	r3, [r7, #4]
20001c9c:	609a      	str	r2, [r3, #8]
		ySpeed++;
20001c9e:	4b42      	ldr	r3, [pc, #264]	; (20001da8 <playerUpdate+0x1ec>)
20001ca0:	681b      	ldr	r3, [r3, #0]
20001ca2:	1c5a      	adds	r2, r3, #1
20001ca4:	4b40      	ldr	r3, [pc, #256]	; (20001da8 <playerUpdate+0x1ec>)
20001ca6:	601a      	str	r2, [r3, #0]
	}

	// X position changes
	
	if (!lastRightValue && read_DIL_single(RIGHT_TRIGGER)){ 
20001ca8:	4b42      	ldr	r3, [pc, #264]	; (20001db4 <playerUpdate+0x1f8>)
20001caa:	681b      	ldr	r3, [r3, #0]
20001cac:	2b00      	cmp	r3, #0
20001cae:	d109      	bne.n	20001cc4 <playerUpdate+0x108>
20001cb0:	2000      	movs	r0, #0
20001cb2:	f002 f85d 	bl	20003d70 <read_DIL_single>
20001cb6:	1e03      	subs	r3, r0, #0
20001cb8:	d004      	beq.n	20001cc4 <playerUpdate+0x108>
		xSpeed += SPEED_ADD_X;
20001cba:	4b3f      	ldr	r3, [pc, #252]	; (20001db8 <playerUpdate+0x1fc>)
20001cbc:	681b      	ldr	r3, [r3, #0]
20001cbe:	1cda      	adds	r2, r3, #3
20001cc0:	4b3d      	ldr	r3, [pc, #244]	; (20001db8 <playerUpdate+0x1fc>)
20001cc2:	601a      	str	r2, [r3, #0]
	}
	
	if (!lastLeftValue && read_DIL_single(LEFT_TRIGGER)){
20001cc4:	4b3d      	ldr	r3, [pc, #244]	; (20001dbc <playerUpdate+0x200>)
20001cc6:	681b      	ldr	r3, [r3, #0]
20001cc8:	2b00      	cmp	r3, #0
20001cca:	d109      	bne.n	20001ce0 <playerUpdate+0x124>
20001ccc:	2007      	movs	r0, #7
20001cce:	f002 f84f 	bl	20003d70 <read_DIL_single>
20001cd2:	1e03      	subs	r3, r0, #0
20001cd4:	d004      	beq.n	20001ce0 <playerUpdate+0x124>
		xSpeed -= SPEED_ADD_X;
20001cd6:	4b38      	ldr	r3, [pc, #224]	; (20001db8 <playerUpdate+0x1fc>)
20001cd8:	681b      	ldr	r3, [r3, #0]
20001cda:	1eda      	subs	r2, r3, #3
20001cdc:	4b36      	ldr	r3, [pc, #216]	; (20001db8 <playerUpdate+0x1fc>)
20001cde:	601a      	str	r2, [r3, #0]
	}
	
	if (((!lastLeftValue && read_DIL_single(LEFT_TRIGGER)) || (!lastRightValue && read_DIL_single(RIGHT_TRIGGER))) && this->yPos != PLATFORM_Y - PLAYER_HEIGHT && this->yPos != LIMIT_DOWN){
20001ce0:	4b36      	ldr	r3, [pc, #216]	; (20001dbc <playerUpdate+0x200>)
20001ce2:	681b      	ldr	r3, [r3, #0]
20001ce4:	2b00      	cmp	r3, #0
20001ce6:	d104      	bne.n	20001cf2 <playerUpdate+0x136>
20001ce8:	2007      	movs	r0, #7
20001cea:	f002 f841 	bl	20003d70 <read_DIL_single>
20001cee:	1e03      	subs	r3, r0, #0
20001cf0:	d108      	bne.n	20001d04 <playerUpdate+0x148>
20001cf2:	4b30      	ldr	r3, [pc, #192]	; (20001db4 <playerUpdate+0x1f8>)
20001cf4:	681b      	ldr	r3, [r3, #0]
20001cf6:	2b00      	cmp	r3, #0
20001cf8:	d111      	bne.n	20001d1e <playerUpdate+0x162>
20001cfa:	2000      	movs	r0, #0
20001cfc:	f002 f838 	bl	20003d70 <read_DIL_single>
20001d00:	1e03      	subs	r3, r0, #0
20001d02:	d00c      	beq.n	20001d1e <playerUpdate+0x162>
20001d04:	687b      	ldr	r3, [r7, #4]
20001d06:	689b      	ldr	r3, [r3, #8]
20001d08:	2b05      	cmp	r3, #5
20001d0a:	d008      	beq.n	20001d1e <playerUpdate+0x162>
20001d0c:	687b      	ldr	r3, [r7, #4]
20001d0e:	689b      	ldr	r3, [r3, #8]
20001d10:	2b27      	cmp	r3, #39	; 0x27
20001d12:	d004      	beq.n	20001d1e <playerUpdate+0x162>
		xSpeed *=2;
20001d14:	4b28      	ldr	r3, [pc, #160]	; (20001db8 <playerUpdate+0x1fc>)
20001d16:	681b      	ldr	r3, [r3, #0]
20001d18:	005a      	lsls	r2, r3, #1
20001d1a:	4b27      	ldr	r3, [pc, #156]	; (20001db8 <playerUpdate+0x1fc>)
20001d1c:	601a      	str	r2, [r3, #0]
	}
	
	if (this->xPos + xSpeed > LIMIT_RIGHT || this->xPos + xSpeed < LIMIT_LEFT){
20001d1e:	687b      	ldr	r3, [r7, #4]
20001d20:	685a      	ldr	r2, [r3, #4]
20001d22:	4b25      	ldr	r3, [pc, #148]	; (20001db8 <playerUpdate+0x1fc>)
20001d24:	681b      	ldr	r3, [r3, #0]
20001d26:	18d3      	adds	r3, r2, r3
20001d28:	2b6e      	cmp	r3, #110	; 0x6e
20001d2a:	dc06      	bgt.n	20001d3a <playerUpdate+0x17e>
20001d2c:	687b      	ldr	r3, [r7, #4]
20001d2e:	685a      	ldr	r2, [r3, #4]
20001d30:	4b21      	ldr	r3, [pc, #132]	; (20001db8 <playerUpdate+0x1fc>)
20001d32:	681b      	ldr	r3, [r3, #0]
20001d34:	18d3      	adds	r3, r2, r3
20001d36:	2b00      	cmp	r3, #0
20001d38:	da04      	bge.n	20001d44 <playerUpdate+0x188>
		xSpeed *= -1;	
20001d3a:	4b1f      	ldr	r3, [pc, #124]	; (20001db8 <playerUpdate+0x1fc>)
20001d3c:	681b      	ldr	r3, [r3, #0]
20001d3e:	425a      	negs	r2, r3
20001d40:	4b1d      	ldr	r3, [pc, #116]	; (20001db8 <playerUpdate+0x1fc>)
20001d42:	601a      	str	r2, [r3, #0]
	}
	
	this->xPos += xSpeed;	
20001d44:	687b      	ldr	r3, [r7, #4]
20001d46:	685a      	ldr	r2, [r3, #4]
20001d48:	4b1b      	ldr	r3, [pc, #108]	; (20001db8 <playerUpdate+0x1fc>)
20001d4a:	681b      	ldr	r3, [r3, #0]
20001d4c:	18d2      	adds	r2, r2, r3
20001d4e:	687b      	ldr	r3, [r7, #4]
20001d50:	605a      	str	r2, [r3, #4]
	
	if (xSpeed > 0){
20001d52:	4b19      	ldr	r3, [pc, #100]	; (20001db8 <playerUpdate+0x1fc>)
20001d54:	681b      	ldr	r3, [r3, #0]
20001d56:	2b00      	cmp	r3, #0
20001d58:	dd05      	ble.n	20001d66 <playerUpdate+0x1aa>
		xSpeed--;
20001d5a:	4b17      	ldr	r3, [pc, #92]	; (20001db8 <playerUpdate+0x1fc>)
20001d5c:	681b      	ldr	r3, [r3, #0]
20001d5e:	1e5a      	subs	r2, r3, #1
20001d60:	4b15      	ldr	r3, [pc, #84]	; (20001db8 <playerUpdate+0x1fc>)
20001d62:	601a      	str	r2, [r3, #0]
20001d64:	e008      	b.n	20001d78 <playerUpdate+0x1bc>
	}
	else if (xSpeed < 0){
20001d66:	4b14      	ldr	r3, [pc, #80]	; (20001db8 <playerUpdate+0x1fc>)
20001d68:	681b      	ldr	r3, [r3, #0]
20001d6a:	2b00      	cmp	r3, #0
20001d6c:	da04      	bge.n	20001d78 <playerUpdate+0x1bc>
		xSpeed++;
20001d6e:	4b12      	ldr	r3, [pc, #72]	; (20001db8 <playerUpdate+0x1fc>)
20001d70:	681b      	ldr	r3, [r3, #0]
20001d72:	1c5a      	adds	r2, r3, #1
20001d74:	4b10      	ldr	r3, [pc, #64]	; (20001db8 <playerUpdate+0x1fc>)
20001d76:	601a      	str	r2, [r3, #0]
	}
	
	// Prepare values
	lastRightValue = read_DIL_single(RIGHT_TRIGGER);
20001d78:	2000      	movs	r0, #0
20001d7a:	f001 fff9 	bl	20003d70 <read_DIL_single>
20001d7e:	0002      	movs	r2, r0
20001d80:	4b0c      	ldr	r3, [pc, #48]	; (20001db4 <playerUpdate+0x1f8>)
20001d82:	601a      	str	r2, [r3, #0]
	lastLeftValue = read_DIL_single(LEFT_TRIGGER);
20001d84:	2007      	movs	r0, #7
20001d86:	f001 fff3 	bl	20003d70 <read_DIL_single>
20001d8a:	0002      	movs	r2, r0
20001d8c:	4b0b      	ldr	r3, [pc, #44]	; (20001dbc <playerUpdate+0x200>)
20001d8e:	601a      	str	r2, [r3, #0]
	lastJumpValue = read_DIL_single(JUMP_TRIGGER);
20001d90:	2005      	movs	r0, #5
20001d92:	f001 ffed 	bl	20003d70 <read_DIL_single>
20001d96:	0002      	movs	r2, r0
20001d98:	4b02      	ldr	r3, [pc, #8]	; (20001da4 <playerUpdate+0x1e8>)
20001d9a:	601a      	str	r2, [r3, #0]
	
20001d9c:	46c0      	nop			; (mov r8, r8)
20001d9e:	46bd      	mov	sp, r7
20001da0:	b002      	add	sp, #8
20001da2:	bd80      	pop	{r7, pc}
20001da4:	200048f8 	strdcs	r4, [r0], -r8
20001da8:	200048fc 	strdcs	r4, [r0], -ip
20001dac:	2000f704 	andcs	pc, r0, r4, lsl #14
20001db0:	2000f708 	andcs	pc, r0, r8, lsl #14
20001db4:	20004900 	andcs	r4, r0, r0, lsl #18
20001db8:	20004904 	andcs	r4, r0, r4, lsl #18
20001dbc:	20004908 	andcs	r4, r0, r8, lsl #18

20001dc0 <initSprites>:
Image bird5Image;
Image bird6Image;
//Image bird7Image;
//Image bird8Image;
Image birdImages[6];
static void initSprites( void ) {	
20001dc0:	b580      	push	{r7, lr}
20001dc2:	b090      	sub	sp, #64	; 0x40
20001dc4:	af00      	add	r7, sp, #0
	
	sprite *pointer11 = &tempBirdLight;
20001dc6:	4b54      	ldr	r3, [pc, #336]	; (20001f18 <initSprites+0x158>)
20001dc8:	63fb      	str	r3, [r7, #60]	; 0x3c
	load_sprite(pointer11, bird1_light_bits, bird1_black_width, bird1_black_height);
20001dca:	4954      	ldr	r1, [pc, #336]	; (20001f1c <initSprites+0x15c>)
20001dcc:	6bf8      	ldr	r0, [r7, #60]	; 0x3c
20001dce:	2319      	movs	r3, #25
20001dd0:	2219      	movs	r2, #25
20001dd2:	f001 ff9d 	bl	20003d10 <load_sprite>
	bird1Light = pointer11;
20001dd6:	4b52      	ldr	r3, [pc, #328]	; (20001f20 <initSprites+0x160>)
20001dd8:	6bfa      	ldr	r2, [r7, #60]	; 0x3c
20001dda:	601a      	str	r2, [r3, #0]
	sprite *pointer12 = &tempBirdGray;
20001ddc:	4b51      	ldr	r3, [pc, #324]	; (20001f24 <initSprites+0x164>)
20001dde:	63bb      	str	r3, [r7, #56]	; 0x38
	load_sprite(pointer12, bird1_gray_bits, bird1_black_width, bird1_black_height);
20001de0:	4951      	ldr	r1, [pc, #324]	; (20001f28 <initSprites+0x168>)
20001de2:	6bb8      	ldr	r0, [r7, #56]	; 0x38
20001de4:	2319      	movs	r3, #25
20001de6:	2219      	movs	r2, #25
20001de8:	f001 ff92 	bl	20003d10 <load_sprite>
	bird1Gray = pointer12;
20001dec:	4b4f      	ldr	r3, [pc, #316]	; (20001f2c <initSprites+0x16c>)
20001dee:	6bba      	ldr	r2, [r7, #56]	; 0x38
20001df0:	601a      	str	r2, [r3, #0]
	sprite *pointer13 = &tempBirdBlack;
20001df2:	4b4f      	ldr	r3, [pc, #316]	; (20001f30 <initSprites+0x170>)
20001df4:	637b      	str	r3, [r7, #52]	; 0x34
	load_sprite(pointer13, bird1_black_bits, bird1_black_width, bird1_black_height);
20001df6:	494f      	ldr	r1, [pc, #316]	; (20001f34 <initSprites+0x174>)
20001df8:	6b78      	ldr	r0, [r7, #52]	; 0x34
20001dfa:	2319      	movs	r3, #25
20001dfc:	2219      	movs	r2, #25
20001dfe:	f001 ff87 	bl	20003d10 <load_sprite>
	bird1Black = pointer13;	
20001e02:	4b4d      	ldr	r3, [pc, #308]	; (20001f38 <initSprites+0x178>)
20001e04:	6b7a      	ldr	r2, [r7, #52]	; 0x34
20001e06:	601a      	str	r2, [r3, #0]
	
	sprite *pointer14 = &tempBird2Light;
20001e08:	4b4c      	ldr	r3, [pc, #304]	; (20001f3c <initSprites+0x17c>)
20001e0a:	633b      	str	r3, [r7, #48]	; 0x30
	load_sprite(pointer14, bird2_light_bits, bird2_black_width, bird2_black_height);
20001e0c:	494c      	ldr	r1, [pc, #304]	; (20001f40 <initSprites+0x180>)
20001e0e:	6b38      	ldr	r0, [r7, #48]	; 0x30
20001e10:	2319      	movs	r3, #25
20001e12:	2219      	movs	r2, #25
20001e14:	f001 ff7c 	bl	20003d10 <load_sprite>
	bird2Light = pointer14;
20001e18:	4b4a      	ldr	r3, [pc, #296]	; (20001f44 <initSprites+0x184>)
20001e1a:	6b3a      	ldr	r2, [r7, #48]	; 0x30
20001e1c:	601a      	str	r2, [r3, #0]
	sprite *pointer15 = &tempBird2Gray;
20001e1e:	4b4a      	ldr	r3, [pc, #296]	; (20001f48 <initSprites+0x188>)
20001e20:	62fb      	str	r3, [r7, #44]	; 0x2c
	load_sprite(pointer15, bird2_gray_bits, bird2_black_width, bird2_black_height);
20001e22:	494a      	ldr	r1, [pc, #296]	; (20001f4c <initSprites+0x18c>)
20001e24:	6af8      	ldr	r0, [r7, #44]	; 0x2c
20001e26:	2319      	movs	r3, #25
20001e28:	2219      	movs	r2, #25
20001e2a:	f001 ff71 	bl	20003d10 <load_sprite>
	bird2Gray = pointer15;
20001e2e:	4b48      	ldr	r3, [pc, #288]	; (20001f50 <initSprites+0x190>)
20001e30:	6afa      	ldr	r2, [r7, #44]	; 0x2c
20001e32:	601a      	str	r2, [r3, #0]
	sprite *pointer16 = &tempBird2Black;
20001e34:	4b47      	ldr	r3, [pc, #284]	; (20001f54 <initSprites+0x194>)
20001e36:	62bb      	str	r3, [r7, #40]	; 0x28
	load_sprite(pointer16, bird2_black_bits, bird2_black_width, bird2_black_height);
20001e38:	4947      	ldr	r1, [pc, #284]	; (20001f58 <initSprites+0x198>)
20001e3a:	6ab8      	ldr	r0, [r7, #40]	; 0x28
20001e3c:	2319      	movs	r3, #25
20001e3e:	2219      	movs	r2, #25
20001e40:	f001 ff66 	bl	20003d10 <load_sprite>
	bird2Black = pointer16;
20001e44:	4b45      	ldr	r3, [pc, #276]	; (20001f5c <initSprites+0x19c>)
20001e46:	6aba      	ldr	r2, [r7, #40]	; 0x28
20001e48:	601a      	str	r2, [r3, #0]
	
	
	sprite *finalPointer = &tempBird3Light;
20001e4a:	4b45      	ldr	r3, [pc, #276]	; (20001f60 <initSprites+0x1a0>)
20001e4c:	627b      	str	r3, [r7, #36]	; 0x24
	load_sprite(finalPointer, bird3_light_bits, bird3_black_width, bird3_black_height);
20001e4e:	4945      	ldr	r1, [pc, #276]	; (20001f64 <initSprites+0x1a4>)
20001e50:	6a78      	ldr	r0, [r7, #36]	; 0x24
20001e52:	2319      	movs	r3, #25
20001e54:	2219      	movs	r2, #25
20001e56:	f001 ff5b 	bl	20003d10 <load_sprite>
	bird3Light = finalPointer;
20001e5a:	4b43      	ldr	r3, [pc, #268]	; (20001f68 <initSprites+0x1a8>)
20001e5c:	6a7a      	ldr	r2, [r7, #36]	; 0x24
20001e5e:	601a      	str	r2, [r3, #0]
	sprite *pointer17 = &tempBird3Gray;
20001e60:	4b42      	ldr	r3, [pc, #264]	; (20001f6c <initSprites+0x1ac>)
20001e62:	623b      	str	r3, [r7, #32]
	load_sprite(pointer17, bird3_gray_bits, bird3_black_width, bird3_black_height);
20001e64:	4942      	ldr	r1, [pc, #264]	; (20001f70 <initSprites+0x1b0>)
20001e66:	6a38      	ldr	r0, [r7, #32]
20001e68:	2319      	movs	r3, #25
20001e6a:	2219      	movs	r2, #25
20001e6c:	f001 ff50 	bl	20003d10 <load_sprite>
	bird3Gray = pointer17;
20001e70:	4b40      	ldr	r3, [pc, #256]	; (20001f74 <initSprites+0x1b4>)
20001e72:	6a3a      	ldr	r2, [r7, #32]
20001e74:	601a      	str	r2, [r3, #0]
	sprite *pointer18 = &tempBird3Black;
20001e76:	4b40      	ldr	r3, [pc, #256]	; (20001f78 <initSprites+0x1b8>)
20001e78:	61fb      	str	r3, [r7, #28]
	load_sprite(pointer18, bird3_black_bits, bird3_black_width, bird3_black_height);
20001e7a:	4940      	ldr	r1, [pc, #256]	; (20001f7c <initSprites+0x1bc>)
20001e7c:	69f8      	ldr	r0, [r7, #28]
20001e7e:	2319      	movs	r3, #25
20001e80:	2219      	movs	r2, #25
20001e82:	f001 ff45 	bl	20003d10 <load_sprite>
	bird3Black = pointer18;	
20001e86:	4b3e      	ldr	r3, [pc, #248]	; (20001f80 <initSprites+0x1c0>)
20001e88:	69fa      	ldr	r2, [r7, #28]
20001e8a:	601a      	str	r2, [r3, #0]
	
	sprite *pointer19 = &tempBird4Light;
20001e8c:	4b3d      	ldr	r3, [pc, #244]	; (20001f84 <initSprites+0x1c4>)
20001e8e:	61bb      	str	r3, [r7, #24]
	load_sprite(pointer19, bird4_light_bits, bird4_black_width, bird4_black_height);
20001e90:	493d      	ldr	r1, [pc, #244]	; (20001f88 <initSprites+0x1c8>)
20001e92:	69b8      	ldr	r0, [r7, #24]
20001e94:	2319      	movs	r3, #25
20001e96:	2219      	movs	r2, #25
20001e98:	f001 ff3a 	bl	20003d10 <load_sprite>
	bird4Light = pointer19;
20001e9c:	4b3b      	ldr	r3, [pc, #236]	; (20001f8c <initSprites+0x1cc>)
20001e9e:	69ba      	ldr	r2, [r7, #24]
20001ea0:	601a      	str	r2, [r3, #0]
	sprite *pointer20 = &tempBird4Gray;
20001ea2:	4b3b      	ldr	r3, [pc, #236]	; (20001f90 <initSprites+0x1d0>)
20001ea4:	617b      	str	r3, [r7, #20]
	load_sprite(pointer20, bird4_gray_bits, bird4_black_width, bird4_black_height);
20001ea6:	493b      	ldr	r1, [pc, #236]	; (20001f94 <initSprites+0x1d4>)
20001ea8:	6978      	ldr	r0, [r7, #20]
20001eaa:	2319      	movs	r3, #25
20001eac:	2219      	movs	r2, #25
20001eae:	f001 ff2f 	bl	20003d10 <load_sprite>
	bird4Gray = pointer20;
20001eb2:	4b39      	ldr	r3, [pc, #228]	; (20001f98 <initSprites+0x1d8>)
20001eb4:	697a      	ldr	r2, [r7, #20]
20001eb6:	601a      	str	r2, [r3, #0]
	sprite *pointer21 = &tempBird4Black;
20001eb8:	4b38      	ldr	r3, [pc, #224]	; (20001f9c <initSprites+0x1dc>)
20001eba:	613b      	str	r3, [r7, #16]
	load_sprite(pointer21, bird4_black_bits, bird4_black_width, bird4_black_height);
20001ebc:	4938      	ldr	r1, [pc, #224]	; (20001fa0 <initSprites+0x1e0>)
20001ebe:	6938      	ldr	r0, [r7, #16]
20001ec0:	2319      	movs	r3, #25
20001ec2:	2219      	movs	r2, #25
20001ec4:	f001 ff24 	bl	20003d10 <load_sprite>
	bird4Black = pointer21;	
20001ec8:	4b36      	ldr	r3, [pc, #216]	; (20001fa4 <initSprites+0x1e4>)
20001eca:	693a      	ldr	r2, [r7, #16]
20001ecc:	601a      	str	r2, [r3, #0]
	
	sprite *pointer22 = &tempBird5Light;
20001ece:	4b36      	ldr	r3, [pc, #216]	; (20001fa8 <initSprites+0x1e8>)
20001ed0:	60fb      	str	r3, [r7, #12]
	load_sprite(pointer22, bird5_light_bits, bird5_black_width, bird5_black_height);
20001ed2:	4936      	ldr	r1, [pc, #216]	; (20001fac <initSprites+0x1ec>)
20001ed4:	68f8      	ldr	r0, [r7, #12]
20001ed6:	2319      	movs	r3, #25
20001ed8:	2219      	movs	r2, #25
20001eda:	f001 ff19 	bl	20003d10 <load_sprite>
	bird5Light = pointer22;
20001ede:	4b34      	ldr	r3, [pc, #208]	; (20001fb0 <initSprites+0x1f0>)
20001ee0:	68fa      	ldr	r2, [r7, #12]
20001ee2:	601a      	str	r2, [r3, #0]
	sprite *pointer23 = &tempBird5Gray;
20001ee4:	4b33      	ldr	r3, [pc, #204]	; (20001fb4 <initSprites+0x1f4>)
20001ee6:	60bb      	str	r3, [r7, #8]
	load_sprite(pointer23, bird5_gray_bits, bird5_black_width, bird5_black_height);
20001ee8:	4933      	ldr	r1, [pc, #204]	; (20001fb8 <initSprites+0x1f8>)
20001eea:	68b8      	ldr	r0, [r7, #8]
20001eec:	2319      	movs	r3, #25
20001eee:	2219      	movs	r2, #25
20001ef0:	f001 ff0e 	bl	20003d10 <load_sprite>
	bird5Gray = pointer23;
20001ef4:	4b31      	ldr	r3, [pc, #196]	; (20001fbc <initSprites+0x1fc>)
20001ef6:	68ba      	ldr	r2, [r7, #8]
20001ef8:	601a      	str	r2, [r3, #0]
	sprite *pointer24 = &tempBird5Black;
20001efa:	4b31      	ldr	r3, [pc, #196]	; (20001fc0 <initSprites+0x200>)
20001efc:	607b      	str	r3, [r7, #4]
	load_sprite(pointer24, bird5_black_bits, bird5_black_width, bird5_black_height);
20001efe:	4931      	ldr	r1, [pc, #196]	; (20001fc4 <initSprites+0x204>)
20001f00:	6878      	ldr	r0, [r7, #4]
20001f02:	2319      	movs	r3, #25
20001f04:	2219      	movs	r2, #25
20001f06:	f001 ff03 	bl	20003d10 <load_sprite>
	bird5Black = pointer24;
20001f0a:	4b2f      	ldr	r3, [pc, #188]	; (20001fc8 <initSprites+0x208>)
20001f0c:	687a      	ldr	r2, [r7, #4]
20001f0e:	601a      	str	r2, [r3, #0]
}
20001f10:	46c0      	nop			; (mov r8, r8)
20001f12:	46bd      	mov	sp, r7
20001f14:	b010      	add	sp, #64	; 0x40
20001f16:	bd80      	pop	{r7, pc}
20001f18:	20004dbc 			; <UNDEFINED> instruction: 0x20004dbc
20001f1c:	20008ac8 	andcs	r8, r0, r8, asr #21
20001f20:	20004dc8 	andcs	r4, r0, r8, asr #27
20001f24:	20004d58 	andcs	r4, r0, r8, asr sp
20001f28:	20008a64 	andcs	r8, r0, r4, ror #20
20001f2c:	20004cd0 	ldrdcs	r4, [r0], -r0
20001f30:	20004d48 	andcs	r4, r0, r8, asr #26
20001f34:	20008a00 	andcs	r8, r0, r0, lsl #20
20001f38:	20004d38 	andcs	r4, r0, r8, lsr sp
20001f3c:	20004dcc 	andcs	r4, r0, ip, asr #27
20001f40:	20008bf4 	strdcs	r8, [r0], -r4
20001f44:	20004e6c 	andcs	r4, r0, ip, ror #28
20001f48:	20004d74 	andcs	r4, r0, r4, ror sp
20001f4c:	20008b90 	mulcs	r0, r0, fp
20001f50:	20004db8 			; <UNDEFINED> instruction: 0x20004db8
20001f54:	20004e54 	andcs	r4, r0, r4, asr lr
20001f58:	20008b2c 	andcs	r8, r0, ip, lsr #22
20001f5c:	20004d34 	andcs	r4, r0, r4, lsr sp
20001f60:	20004df0 	strdcs	r4, [r0], -r0
20001f64:	20008d20 	andcs	r8, r0, r0, lsr #26
20001f68:	20004d80 	andcs	r4, r0, r0, lsl #27
20001f6c:	20004dfc 	strdcs	r4, [r0], -ip
20001f70:	20008cbc 			; <UNDEFINED> instruction: 0x20008cbc
20001f74:	20004d54 	andcs	r4, r0, r4, asr sp
20001f78:	20004dac 	andcs	r4, r0, ip, lsr #27
20001f7c:	20008c58 	andcs	r8, r0, r8, asr ip
20001f80:	20004d2c 	andcs	r4, r0, ip, lsr #26
20001f84:	20004de4 	andcs	r4, r0, r4, ror #27
20001f88:	20008e4c 	andcs	r8, r0, ip, asr #28
20001f8c:	20004ccc 	andcs	r4, r0, ip, asr #25
20001f90:	20004e60 	andcs	r4, r0, r0, ror #28
20001f94:	20008de8 	andcs	r8, r0, r8, ror #27
20001f98:	20004d30 	andcs	r4, r0, r0, lsr sp
20001f9c:	20004ce4 	andcs	r4, r0, r4, ror #25
20001fa0:	20008d84 	andcs	r8, r0, r4, lsl #27
20001fa4:	20004e50 	andcs	r4, r0, r0, asr lr
20001fa8:	20004d68 	andcs	r4, r0, r8, ror #26
20001fac:	20008f78 	andcs	r8, r0, r8, ror pc
20001fb0:	20004da8 	andcs	r4, r0, r8, lsr #27
20001fb4:	20004d84 	andcs	r4, r0, r4, lsl #27
20001fb8:	20008f14 	andcs	r8, r0, r4, lsl pc
20001fbc:	20004d64 	andcs	r4, r0, r4, ror #26
20001fc0:	20004d90 	mulcs	r0, r0, sp
20001fc4:	20008eb0 			; <UNDEFINED> instruction: 0x20008eb0
20001fc8:	20004ce0 	andcs	r4, r0, r0, ror #25

20001fcc <init_bird>:
	
void init_bird( GameObject *birdObj ) {
20001fcc:	b590      	push	{r4, r7, lr}
20001fce:	b083      	sub	sp, #12
20001fd0:	af00      	add	r7, sp, #0
20001fd2:	6078      	str	r0, [r7, #4]
	static int firstTime = 1;
	if (firstTime) {
20001fd4:	4b37      	ldr	r3, [pc, #220]	; (200020b4 <init_bird+0xe8>)
20001fd6:	681b      	ldr	r3, [r3, #0]
20001fd8:	2b00      	cmp	r3, #0
20001fda:	d057      	beq.n	2000208c <init_bird+0xc0>
		initSprites();
20001fdc:	f7ff fef0 	bl	20001dc0 <initSprites>
		firstTime = 0;			
20001fe0:	4b34      	ldr	r3, [pc, #208]	; (200020b4 <init_bird+0xe8>)
20001fe2:	2200      	movs	r2, #0
20001fe4:	601a      	str	r2, [r3, #0]

		birdImages[0] = bird1Image;
20001fe6:	4b34      	ldr	r3, [pc, #208]	; (200020b8 <init_bird+0xec>)
20001fe8:	4a34      	ldr	r2, [pc, #208]	; (200020bc <init_bird+0xf0>)
20001fea:	ca13      	ldmia	r2!, {r0, r1, r4}
20001fec:	c313      	stmia	r3!, {r0, r1, r4}
		birdImages[1] = bird2Image;
20001fee:	4b32      	ldr	r3, [pc, #200]	; (200020b8 <init_bird+0xec>)
20001ff0:	4a33      	ldr	r2, [pc, #204]	; (200020c0 <init_bird+0xf4>)
20001ff2:	330c      	adds	r3, #12
20001ff4:	ca13      	ldmia	r2!, {r0, r1, r4}
20001ff6:	c313      	stmia	r3!, {r0, r1, r4}
		birdImages[2] = bird3Image;
20001ff8:	4b2f      	ldr	r3, [pc, #188]	; (200020b8 <init_bird+0xec>)
20001ffa:	4a32      	ldr	r2, [pc, #200]	; (200020c4 <init_bird+0xf8>)
20001ffc:	3318      	adds	r3, #24
20001ffe:	ca13      	ldmia	r2!, {r0, r1, r4}
20002000:	c313      	stmia	r3!, {r0, r1, r4}
		birdImages[3] = bird4Image;
20002002:	4b2d      	ldr	r3, [pc, #180]	; (200020b8 <init_bird+0xec>)
20002004:	4a30      	ldr	r2, [pc, #192]	; (200020c8 <init_bird+0xfc>)
20002006:	3324      	adds	r3, #36	; 0x24
20002008:	ca13      	ldmia	r2!, {r0, r1, r4}
2000200a:	c313      	stmia	r3!, {r0, r1, r4}
		birdImages[4] = bird5Image;
2000200c:	4b2a      	ldr	r3, [pc, #168]	; (200020b8 <init_bird+0xec>)
2000200e:	4a2f      	ldr	r2, [pc, #188]	; (200020cc <init_bird+0x100>)
20002010:	3330      	adds	r3, #48	; 0x30
20002012:	ca13      	ldmia	r2!, {r0, r1, r4}
20002014:	c313      	stmia	r3!, {r0, r1, r4}
		birdImages[5] = bird6Image;
20002016:	4b28      	ldr	r3, [pc, #160]	; (200020b8 <init_bird+0xec>)
20002018:	4a2d      	ldr	r2, [pc, #180]	; (200020d0 <init_bird+0x104>)
2000201a:	333c      	adds	r3, #60	; 0x3c
2000201c:	ca13      	ldmia	r2!, {r0, r1, r4}
2000201e:	c313      	stmia	r3!, {r0, r1, r4}
//		birdImages[6] = bird7Image;
		//birdImages[7] = bird8Image;
		
		load_image(&birdImages[0], bird1Black, bird1Gray, bird1Light);
20002020:	4b2c      	ldr	r3, [pc, #176]	; (200020d4 <init_bird+0x108>)
20002022:	6819      	ldr	r1, [r3, #0]
20002024:	4b2c      	ldr	r3, [pc, #176]	; (200020d8 <init_bird+0x10c>)
20002026:	681a      	ldr	r2, [r3, #0]
20002028:	4b2c      	ldr	r3, [pc, #176]	; (200020dc <init_bird+0x110>)
2000202a:	681b      	ldr	r3, [r3, #0]
2000202c:	4822      	ldr	r0, [pc, #136]	; (200020b8 <init_bird+0xec>)
2000202e:	f001 fe5b 	bl	20003ce8 <load_image>
		load_image(&birdImages[1], bird2Black, bird2Gray, bird2Light);
20002032:	4b2b      	ldr	r3, [pc, #172]	; (200020e0 <init_bird+0x114>)
20002034:	6819      	ldr	r1, [r3, #0]
20002036:	4b2b      	ldr	r3, [pc, #172]	; (200020e4 <init_bird+0x118>)
20002038:	681a      	ldr	r2, [r3, #0]
2000203a:	4b2b      	ldr	r3, [pc, #172]	; (200020e8 <init_bird+0x11c>)
2000203c:	681b      	ldr	r3, [r3, #0]
2000203e:	482b      	ldr	r0, [pc, #172]	; (200020ec <init_bird+0x120>)
20002040:	f001 fe52 	bl	20003ce8 <load_image>
		load_image(&birdImages[2], bird3Black, bird3Gray, bird3Light);
20002044:	4b2a      	ldr	r3, [pc, #168]	; (200020f0 <init_bird+0x124>)
20002046:	6819      	ldr	r1, [r3, #0]
20002048:	4b2a      	ldr	r3, [pc, #168]	; (200020f4 <init_bird+0x128>)
2000204a:	681a      	ldr	r2, [r3, #0]
2000204c:	4b2a      	ldr	r3, [pc, #168]	; (200020f8 <init_bird+0x12c>)
2000204e:	681b      	ldr	r3, [r3, #0]
20002050:	482a      	ldr	r0, [pc, #168]	; (200020fc <init_bird+0x130>)
20002052:	f001 fe49 	bl	20003ce8 <load_image>
		load_image(&birdImages[3], bird4Black, bird4Gray, bird4Light);
20002056:	4b2a      	ldr	r3, [pc, #168]	; (20002100 <init_bird+0x134>)
20002058:	6819      	ldr	r1, [r3, #0]
2000205a:	4b2a      	ldr	r3, [pc, #168]	; (20002104 <init_bird+0x138>)
2000205c:	681a      	ldr	r2, [r3, #0]
2000205e:	4b2a      	ldr	r3, [pc, #168]	; (20002108 <init_bird+0x13c>)
20002060:	681b      	ldr	r3, [r3, #0]
20002062:	482a      	ldr	r0, [pc, #168]	; (2000210c <init_bird+0x140>)
20002064:	f001 fe40 	bl	20003ce8 <load_image>
		load_image(&birdImages[4], bird5Black, bird5Gray, bird5Light);
20002068:	4b29      	ldr	r3, [pc, #164]	; (20002110 <init_bird+0x144>)
2000206a:	6819      	ldr	r1, [r3, #0]
2000206c:	4b29      	ldr	r3, [pc, #164]	; (20002114 <init_bird+0x148>)
2000206e:	681a      	ldr	r2, [r3, #0]
20002070:	4b29      	ldr	r3, [pc, #164]	; (20002118 <init_bird+0x14c>)
20002072:	681b      	ldr	r3, [r3, #0]
20002074:	4829      	ldr	r0, [pc, #164]	; (2000211c <init_bird+0x150>)
20002076:	f001 fe37 	bl	20003ce8 <load_image>
		
		//load_image(&birdImages[7], bird2Black, bird2Gray, bird2Light);
		load_image(&birdImages[5], bird3Black, bird3Gray, bird3Light);
2000207a:	4b1d      	ldr	r3, [pc, #116]	; (200020f0 <init_bird+0x124>)
2000207c:	6819      	ldr	r1, [r3, #0]
2000207e:	4b1d      	ldr	r3, [pc, #116]	; (200020f4 <init_bird+0x128>)
20002080:	681a      	ldr	r2, [r3, #0]
20002082:	4b1d      	ldr	r3, [pc, #116]	; (200020f8 <init_bird+0x12c>)
20002084:	681b      	ldr	r3, [r3, #0]
20002086:	4826      	ldr	r0, [pc, #152]	; (20002120 <init_bird+0x154>)
20002088:	f001 fe2e 	bl	20003ce8 <load_image>
		//load_image(&birdImages[5], bird4Black, bird4Gray, bird4Light);
	}
	
	birdObj->images = birdImages;
2000208c:	687b      	ldr	r3, [r7, #4]
2000208e:	4a0a      	ldr	r2, [pc, #40]	; (200020b8 <init_bird+0xec>)
20002090:	601a      	str	r2, [r3, #0]

	birdObj->current_frame = 0;
20002092:	687b      	ldr	r3, [r7, #4]
20002094:	2200      	movs	r2, #0
20002096:	615a      	str	r2, [r3, #20]
	birdObj->n_frames = 6;
20002098:	687b      	ldr	r3, [r7, #4]
2000209a:	2206      	movs	r2, #6
2000209c:	619a      	str	r2, [r3, #24]
	birdObj->animation_speed = 1;
2000209e:	687b      	ldr	r3, [r7, #4]
200020a0:	2201      	movs	r2, #1
200020a2:	61da      	str	r2, [r3, #28]
	birdObj->animation_counter = 0;
200020a4:	687b      	ldr	r3, [r7, #4]
200020a6:	2200      	movs	r2, #0
200020a8:	621a      	str	r2, [r3, #32]
}
200020aa:	46c0      	nop			; (mov r8, r8)
200020ac:	46bd      	mov	sp, r7
200020ae:	b003      	add	sp, #12
200020b0:	bd90      	pop	{r4, r7, pc}
200020b2:	46c0      	nop			; (mov r8, r8)
200020b4:	20008fdc 	ldrdcs	r8, [r0], -ip
200020b8:	20004e08 	andcs	r4, r0, r8, lsl #28
200020bc:	20004d20 	andcs	r4, r0, r0, lsr #26
200020c0:	20004cf0 	strdcs	r4, [r0], -r0
200020c4:	20004dd8 	ldrdcs	r4, [r0], -r8
200020c8:	20004d3c 	andcs	r4, r0, ip, lsr sp
200020cc:	20004d9c 	mulcs	r0, ip, sp
200020d0:	20004cd4 	ldrdcs	r4, [r0], -r4	; <UNPREDICTABLE>
200020d4:	20004d38 	andcs	r4, r0, r8, lsr sp
200020d8:	20004cd0 	ldrdcs	r4, [r0], -r0
200020dc:	20004dc8 	andcs	r4, r0, r8, asr #27
200020e0:	20004d34 	andcs	r4, r0, r4, lsr sp
200020e4:	20004db8 			; <UNDEFINED> instruction: 0x20004db8
200020e8:	20004e6c 	andcs	r4, r0, ip, ror #28
200020ec:	20004e14 	andcs	r4, r0, r4, lsl lr
200020f0:	20004d2c 	andcs	r4, r0, ip, lsr #26
200020f4:	20004d54 	andcs	r4, r0, r4, asr sp
200020f8:	20004d80 	andcs	r4, r0, r0, lsl #27
200020fc:	20004e20 	andcs	r4, r0, r0, lsr #28
20002100:	20004e50 	andcs	r4, r0, r0, asr lr
20002104:	20004d30 	andcs	r4, r0, r0, lsr sp
20002108:	20004ccc 	andcs	r4, r0, ip, asr #25
2000210c:	20004e2c 	andcs	r4, r0, ip, lsr #28
20002110:	20004ce0 	andcs	r4, r0, r0, ror #25
20002114:	20004d64 	andcs	r4, r0, r4, ror #26
20002118:	20004da8 	andcs	r4, r0, r8, lsr #27
2000211c:	20004e38 	andcs	r4, r0, r8, lsr lr
20002120:	20004e44 	andcs	r4, r0, r4, asr #28

20002124 <initSprites>:
Image witch1Image;
Image witch2Image;
Image witch3Image;
Image witch4Image;
Image witchImages[4];
static void initSprites( void ) {	
20002124:	b580      	push	{r7, lr}
20002126:	b08a      	sub	sp, #40	; 0x28
20002128:	af00      	add	r7, sp, #0
	
	sprite *pointer11 = &tempWitchLight;
2000212a:	4b33      	ldr	r3, [pc, #204]	; (200021f8 <initSprites+0xd4>)
2000212c:	627b      	str	r3, [r7, #36]	; 0x24
	load_sprite(pointer11, witch1_light_bits, witch1_black_width, witch1_black_height);
2000212e:	4933      	ldr	r1, [pc, #204]	; (200021fc <initSprites+0xd8>)
20002130:	6a78      	ldr	r0, [r7, #36]	; 0x24
20002132:	2312      	movs	r3, #18
20002134:	2212      	movs	r2, #18
20002136:	f001 fdeb 	bl	20003d10 <load_sprite>
	witch1Light = pointer11;
2000213a:	4b31      	ldr	r3, [pc, #196]	; (20002200 <initSprites+0xdc>)
2000213c:	6a7a      	ldr	r2, [r7, #36]	; 0x24
2000213e:	601a      	str	r2, [r3, #0]
	sprite *pointer12 = &tempWitchGray;
20002140:	4b30      	ldr	r3, [pc, #192]	; (20002204 <initSprites+0xe0>)
20002142:	623b      	str	r3, [r7, #32]
	load_sprite(pointer12, witch1_gray_bits, witch1_black_width, witch1_black_height);
20002144:	4930      	ldr	r1, [pc, #192]	; (20002208 <initSprites+0xe4>)
20002146:	6a38      	ldr	r0, [r7, #32]
20002148:	2312      	movs	r3, #18
2000214a:	2212      	movs	r2, #18
2000214c:	f001 fde0 	bl	20003d10 <load_sprite>
	witch1Gray = pointer12;
20002150:	4b2e      	ldr	r3, [pc, #184]	; (2000220c <initSprites+0xe8>)
20002152:	6a3a      	ldr	r2, [r7, #32]
20002154:	601a      	str	r2, [r3, #0]
	sprite *pointer13 = &tempWitchBlack;
20002156:	4b2e      	ldr	r3, [pc, #184]	; (20002210 <initSprites+0xec>)
20002158:	61fb      	str	r3, [r7, #28]
	load_sprite(pointer13, witch1_black_bits, witch1_black_width, witch1_black_height);
2000215a:	492e      	ldr	r1, [pc, #184]	; (20002214 <initSprites+0xf0>)
2000215c:	69f8      	ldr	r0, [r7, #28]
2000215e:	2312      	movs	r3, #18
20002160:	2212      	movs	r2, #18
20002162:	f001 fdd5 	bl	20003d10 <load_sprite>
	witch1Black = pointer13;	
20002166:	4b2c      	ldr	r3, [pc, #176]	; (20002218 <initSprites+0xf4>)
20002168:	69fa      	ldr	r2, [r7, #28]
2000216a:	601a      	str	r2, [r3, #0]
	
	sprite *pointer14 = &tempWitch2Light;
2000216c:	4b2b      	ldr	r3, [pc, #172]	; (2000221c <initSprites+0xf8>)
2000216e:	61bb      	str	r3, [r7, #24]
	load_sprite(pointer14, witch2_light_bits, witch2_black_width, witch2_black_height);
20002170:	492b      	ldr	r1, [pc, #172]	; (20002220 <initSprites+0xfc>)
20002172:	69b8      	ldr	r0, [r7, #24]
20002174:	2312      	movs	r3, #18
20002176:	2212      	movs	r2, #18
20002178:	f001 fdca 	bl	20003d10 <load_sprite>
	witch2Light = pointer14;
2000217c:	4b29      	ldr	r3, [pc, #164]	; (20002224 <initSprites+0x100>)
2000217e:	69ba      	ldr	r2, [r7, #24]
20002180:	601a      	str	r2, [r3, #0]
	sprite *pointer15 = &tempWitch2Gray;
20002182:	4b29      	ldr	r3, [pc, #164]	; (20002228 <initSprites+0x104>)
20002184:	617b      	str	r3, [r7, #20]
	load_sprite(pointer15, witch2_gray_bits, witch2_black_width, witch2_black_height);
20002186:	4929      	ldr	r1, [pc, #164]	; (2000222c <initSprites+0x108>)
20002188:	6978      	ldr	r0, [r7, #20]
2000218a:	2312      	movs	r3, #18
2000218c:	2212      	movs	r2, #18
2000218e:	f001 fdbf 	bl	20003d10 <load_sprite>
	witch2Gray = pointer15;
20002192:	4b27      	ldr	r3, [pc, #156]	; (20002230 <initSprites+0x10c>)
20002194:	697a      	ldr	r2, [r7, #20]
20002196:	601a      	str	r2, [r3, #0]
	sprite *pointer16 = &tempWitch2Black;
20002198:	4b26      	ldr	r3, [pc, #152]	; (20002234 <initSprites+0x110>)
2000219a:	613b      	str	r3, [r7, #16]
	load_sprite(pointer16, witch2_black_bits, witch2_black_width, witch2_black_height);
2000219c:	4926      	ldr	r1, [pc, #152]	; (20002238 <initSprites+0x114>)
2000219e:	6938      	ldr	r0, [r7, #16]
200021a0:	2312      	movs	r3, #18
200021a2:	2212      	movs	r2, #18
200021a4:	f001 fdb4 	bl	20003d10 <load_sprite>
	witch2Black = pointer16;
200021a8:	4b24      	ldr	r3, [pc, #144]	; (2000223c <initSprites+0x118>)
200021aa:	693a      	ldr	r2, [r7, #16]
200021ac:	601a      	str	r2, [r3, #0]
	
	
	sprite *finalPointer = &tempWitch3Light;
200021ae:	4b24      	ldr	r3, [pc, #144]	; (20002240 <initSprites+0x11c>)
200021b0:	60fb      	str	r3, [r7, #12]
	load_sprite(finalPointer, witch3_light_bits, witch3_black_width, witch3_black_height);
200021b2:	4924      	ldr	r1, [pc, #144]	; (20002244 <initSprites+0x120>)
200021b4:	68f8      	ldr	r0, [r7, #12]
200021b6:	2312      	movs	r3, #18
200021b8:	2212      	movs	r2, #18
200021ba:	f001 fda9 	bl	20003d10 <load_sprite>
	witch3Light = finalPointer;
200021be:	4b22      	ldr	r3, [pc, #136]	; (20002248 <initSprites+0x124>)
200021c0:	68fa      	ldr	r2, [r7, #12]
200021c2:	601a      	str	r2, [r3, #0]
	sprite *pointer17 = &tempWitch3Gray;
200021c4:	4b21      	ldr	r3, [pc, #132]	; (2000224c <initSprites+0x128>)
200021c6:	60bb      	str	r3, [r7, #8]
	load_sprite(pointer17, witch3_gray_bits, witch3_black_width, witch3_black_height);
200021c8:	4921      	ldr	r1, [pc, #132]	; (20002250 <initSprites+0x12c>)
200021ca:	68b8      	ldr	r0, [r7, #8]
200021cc:	2312      	movs	r3, #18
200021ce:	2212      	movs	r2, #18
200021d0:	f001 fd9e 	bl	20003d10 <load_sprite>
	witch3Gray = pointer17;
200021d4:	4b1f      	ldr	r3, [pc, #124]	; (20002254 <initSprites+0x130>)
200021d6:	68ba      	ldr	r2, [r7, #8]
200021d8:	601a      	str	r2, [r3, #0]
	sprite *pointer18 = &tempWitch3Black;
200021da:	4b1f      	ldr	r3, [pc, #124]	; (20002258 <initSprites+0x134>)
200021dc:	607b      	str	r3, [r7, #4]
	load_sprite(pointer18, witch3_black_bits, witch3_black_width, witch3_black_height);
200021de:	491f      	ldr	r1, [pc, #124]	; (2000225c <initSprites+0x138>)
200021e0:	6878      	ldr	r0, [r7, #4]
200021e2:	2312      	movs	r3, #18
200021e4:	2212      	movs	r2, #18
200021e6:	f001 fd93 	bl	20003d10 <load_sprite>
	witch3Black = pointer18;	
200021ea:	4b1d      	ldr	r3, [pc, #116]	; (20002260 <initSprites+0x13c>)
200021ec:	687a      	ldr	r2, [r7, #4]
200021ee:	601a      	str	r2, [r3, #0]
	
}
200021f0:	46c0      	nop			; (mov r8, r8)
200021f2:	46bd      	mov	sp, r7
200021f4:	b00a      	add	sp, #40	; 0x28
200021f6:	bd80      	pop	{r7, pc}
200021f8:	20004f58 	andcs	r4, r0, r8, asr pc
200021fc:	20009050 	andcs	r9, r0, r0, asr r0
20002200:	20004f70 	andcs	r4, r0, r0, ror pc
20002204:	20004ee8 	andcs	r4, r0, r8, ror #29
20002208:	20009018 	andcs	r9, r0, r8, lsl r0
2000220c:	20004e70 	andcs	r4, r0, r0, ror lr
20002210:	20004ec0 	andcs	r4, r0, r0, asr #29
20002214:	20008fe0 	andcs	r8, r0, r0, ror #31
20002218:	20004f44 	andcs	r4, r0, r4, asr #30
2000221c:	20004f64 	andcs	r4, r0, r4, ror #30
20002220:	200090f8 	strdcs	r9, [r0], -r8
20002224:	20004e74 	andcs	r4, r0, r4, ror lr
20002228:	20004f00 	andcs	r4, r0, r0, lsl #30
2000222c:	200090c0 	andcs	r9, r0, r0, asr #1
20002230:	20004ee4 	andcs	r4, r0, r4, ror #29
20002234:	20004eb4 			; <UNDEFINED> instruction: 0x20004eb4
20002238:	20009088 	andcs	r9, r0, r8, lsl #1
2000223c:	20004f80 	andcs	r4, r0, r0, lsl #31
20002240:	20004ecc 	andcs	r4, r0, ip, asr #29
20002244:	200091a0 	andcs	r9, r0, r0, lsr #3
20002248:	20004f34 	andcs	r4, r0, r4, lsr pc
2000224c:	20004f38 	andcs	r4, r0, r8, lsr pc
20002250:	20009168 	andcs	r9, r0, r8, ror #2
20002254:	20004f48 	andcs	r4, r0, r8, asr #30
20002258:	20004ef4 	strdcs	r4, [r0], -r4	; <UNPREDICTABLE>
2000225c:	20009130 	andcs	r9, r0, r0, lsr r1
20002260:	20004f0c 	andcs	r4, r0, ip, lsl #30

20002264 <init_witch>:
	
void init_witch( GameObject *witchObj ) {
20002264:	b590      	push	{r4, r7, lr}
20002266:	b083      	sub	sp, #12
20002268:	af00      	add	r7, sp, #0
2000226a:	6078      	str	r0, [r7, #4]
	static int firstTime = 1;
	if (firstTime) {
2000226c:	4b29      	ldr	r3, [pc, #164]	; (20002314 <init_witch+0xb0>)
2000226e:	681b      	ldr	r3, [r3, #0]
20002270:	2b00      	cmp	r3, #0
20002272:	d03b      	beq.n	200022ec <init_witch+0x88>
		initSprites();
20002274:	f7ff ff56 	bl	20002124 <initSprites>
		firstTime = 0;			
20002278:	4b26      	ldr	r3, [pc, #152]	; (20002314 <init_witch+0xb0>)
2000227a:	2200      	movs	r2, #0
2000227c:	601a      	str	r2, [r3, #0]

		witchImages[0] = witch1Image;
2000227e:	4b26      	ldr	r3, [pc, #152]	; (20002318 <init_witch+0xb4>)
20002280:	4a26      	ldr	r2, [pc, #152]	; (2000231c <init_witch+0xb8>)
20002282:	ca13      	ldmia	r2!, {r0, r1, r4}
20002284:	c313      	stmia	r3!, {r0, r1, r4}
		witchImages[1] = witch2Image;
20002286:	4b24      	ldr	r3, [pc, #144]	; (20002318 <init_witch+0xb4>)
20002288:	4a25      	ldr	r2, [pc, #148]	; (20002320 <init_witch+0xbc>)
2000228a:	330c      	adds	r3, #12
2000228c:	ca13      	ldmia	r2!, {r0, r1, r4}
2000228e:	c313      	stmia	r3!, {r0, r1, r4}
		witchImages[2] = witch3Image;
20002290:	4b21      	ldr	r3, [pc, #132]	; (20002318 <init_witch+0xb4>)
20002292:	4a24      	ldr	r2, [pc, #144]	; (20002324 <init_witch+0xc0>)
20002294:	3318      	adds	r3, #24
20002296:	ca13      	ldmia	r2!, {r0, r1, r4}
20002298:	c313      	stmia	r3!, {r0, r1, r4}
		witchImages[3] = witch4Image;
2000229a:	4b1f      	ldr	r3, [pc, #124]	; (20002318 <init_witch+0xb4>)
2000229c:	4a22      	ldr	r2, [pc, #136]	; (20002328 <init_witch+0xc4>)
2000229e:	3324      	adds	r3, #36	; 0x24
200022a0:	ca13      	ldmia	r2!, {r0, r1, r4}
200022a2:	c313      	stmia	r3!, {r0, r1, r4}
		
		
		load_image(&witchImages[0], witch1Black, witch1Gray, witch1Light);
200022a4:	4b21      	ldr	r3, [pc, #132]	; (2000232c <init_witch+0xc8>)
200022a6:	6819      	ldr	r1, [r3, #0]
200022a8:	4b21      	ldr	r3, [pc, #132]	; (20002330 <init_witch+0xcc>)
200022aa:	681a      	ldr	r2, [r3, #0]
200022ac:	4b21      	ldr	r3, [pc, #132]	; (20002334 <init_witch+0xd0>)
200022ae:	681b      	ldr	r3, [r3, #0]
200022b0:	4819      	ldr	r0, [pc, #100]	; (20002318 <init_witch+0xb4>)
200022b2:	f001 fd19 	bl	20003ce8 <load_image>
		load_image(&witchImages[1], witch2Black, witch2Gray, witch2Light);
200022b6:	4b20      	ldr	r3, [pc, #128]	; (20002338 <init_witch+0xd4>)
200022b8:	6819      	ldr	r1, [r3, #0]
200022ba:	4b20      	ldr	r3, [pc, #128]	; (2000233c <init_witch+0xd8>)
200022bc:	681a      	ldr	r2, [r3, #0]
200022be:	4b20      	ldr	r3, [pc, #128]	; (20002340 <init_witch+0xdc>)
200022c0:	681b      	ldr	r3, [r3, #0]
200022c2:	4820      	ldr	r0, [pc, #128]	; (20002344 <init_witch+0xe0>)
200022c4:	f001 fd10 	bl	20003ce8 <load_image>
		load_image(&witchImages[2], witch3Black, witch3Gray, witch3Light);
200022c8:	4b1f      	ldr	r3, [pc, #124]	; (20002348 <init_witch+0xe4>)
200022ca:	6819      	ldr	r1, [r3, #0]
200022cc:	4b1f      	ldr	r3, [pc, #124]	; (2000234c <init_witch+0xe8>)
200022ce:	681a      	ldr	r2, [r3, #0]
200022d0:	4b1f      	ldr	r3, [pc, #124]	; (20002350 <init_witch+0xec>)
200022d2:	681b      	ldr	r3, [r3, #0]
200022d4:	481f      	ldr	r0, [pc, #124]	; (20002354 <init_witch+0xf0>)
200022d6:	f001 fd07 	bl	20003ce8 <load_image>
		load_image(&witchImages[3], witch2Black, witch2Gray, witch2Light);
200022da:	4b17      	ldr	r3, [pc, #92]	; (20002338 <init_witch+0xd4>)
200022dc:	6819      	ldr	r1, [r3, #0]
200022de:	4b17      	ldr	r3, [pc, #92]	; (2000233c <init_witch+0xd8>)
200022e0:	681a      	ldr	r2, [r3, #0]
200022e2:	4b17      	ldr	r3, [pc, #92]	; (20002340 <init_witch+0xdc>)
200022e4:	681b      	ldr	r3, [r3, #0]
200022e6:	481c      	ldr	r0, [pc, #112]	; (20002358 <init_witch+0xf4>)
200022e8:	f001 fcfe 	bl	20003ce8 <load_image>
		
	}
	
	witchObj->images = witchImages;
200022ec:	687b      	ldr	r3, [r7, #4]
200022ee:	4a0a      	ldr	r2, [pc, #40]	; (20002318 <init_witch+0xb4>)
200022f0:	601a      	str	r2, [r3, #0]

	witchObj->current_frame = 0;
200022f2:	687b      	ldr	r3, [r7, #4]
200022f4:	2200      	movs	r2, #0
200022f6:	615a      	str	r2, [r3, #20]
	witchObj->n_frames = 4;
200022f8:	687b      	ldr	r3, [r7, #4]
200022fa:	2204      	movs	r2, #4
200022fc:	619a      	str	r2, [r3, #24]
	witchObj->animation_speed = 1;
200022fe:	687b      	ldr	r3, [r7, #4]
20002300:	2201      	movs	r2, #1
20002302:	61da      	str	r2, [r3, #28]
	witchObj->animation_counter = 0;
20002304:	687b      	ldr	r3, [r7, #4]
20002306:	2200      	movs	r2, #0
20002308:	621a      	str	r2, [r3, #32]
}
2000230a:	46c0      	nop			; (mov r8, r8)
2000230c:	46bd      	mov	sp, r7
2000230e:	b003      	add	sp, #12
20002310:	bd90      	pop	{r4, r7, pc}
20002312:	46c0      	nop			; (mov r8, r8)
20002314:	200091d8 	ldrdcs	r9, [r0], -r8
20002318:	20004e78 	andcs	r4, r0, r8, ror lr
2000231c:	20004f4c 	andcs	r4, r0, ip, asr #30
20002320:	20004ea8 	andcs	r4, r0, r8, lsr #29
20002324:	20004f74 	andcs	r4, r0, r4, ror pc
20002328:	20004ed8 	ldrdcs	r4, [r0], -r8
2000232c:	20004f44 	andcs	r4, r0, r4, asr #30
20002330:	20004e70 	andcs	r4, r0, r0, ror lr
20002334:	20004f70 	andcs	r4, r0, r0, ror pc
20002338:	20004f80 	andcs	r4, r0, r0, lsl #31
2000233c:	20004ee4 	andcs	r4, r0, r4, ror #29
20002340:	20004e74 	andcs	r4, r0, r4, ror lr
20002344:	20004e84 	andcs	r4, r0, r4, lsl #29
20002348:	20004f0c 	andcs	r4, r0, ip, lsl #30
2000234c:	20004f48 	andcs	r4, r0, r8, asr #30
20002350:	20004f34 	andcs	r4, r0, r4, lsr pc
20002354:	20004e90 	mulcs	r0, r0, lr
20002358:	20004e9c 	mulcs	r0, ip, lr

2000235c <initSprites>:
Image DIP1Image;
Image DIP2Image;
Image DIP3Image;
Image DIP4Image;
Image DIPImages[4];
static void initSprites( void ) {	
2000235c:	b580      	push	{r7, lr}
2000235e:	b08a      	sub	sp, #40	; 0x28
20002360:	af00      	add	r7, sp, #0
	
	sprite *pointer11 = &tempDIPLight;
20002362:	4b33      	ldr	r3, [pc, #204]	; (20002430 <initSprites+0xd4>)
20002364:	627b      	str	r3, [r7, #36]	; 0x24
	load_sprite(pointer11, witch1_light_bits, witch1_black_width, witch1_black_height);
20002366:	4933      	ldr	r1, [pc, #204]	; (20002434 <initSprites+0xd8>)
20002368:	6a78      	ldr	r0, [r7, #36]	; 0x24
2000236a:	2312      	movs	r3, #18
2000236c:	2212      	movs	r2, #18
2000236e:	f001 fccf 	bl	20003d10 <load_sprite>
	DIP1Light = pointer11;
20002372:	4b31      	ldr	r3, [pc, #196]	; (20002438 <initSprites+0xdc>)
20002374:	6a7a      	ldr	r2, [r7, #36]	; 0x24
20002376:	601a      	str	r2, [r3, #0]
	sprite *pointer12 = &tempDIPGray;
20002378:	4b30      	ldr	r3, [pc, #192]	; (2000243c <initSprites+0xe0>)
2000237a:	623b      	str	r3, [r7, #32]
	load_sprite(pointer12, witch1_gray_bits, witch1_black_width, witch1_black_height);
2000237c:	4930      	ldr	r1, [pc, #192]	; (20002440 <initSprites+0xe4>)
2000237e:	6a38      	ldr	r0, [r7, #32]
20002380:	2312      	movs	r3, #18
20002382:	2212      	movs	r2, #18
20002384:	f001 fcc4 	bl	20003d10 <load_sprite>
	DIP1Gray = pointer12;
20002388:	4b2e      	ldr	r3, [pc, #184]	; (20002444 <initSprites+0xe8>)
2000238a:	6a3a      	ldr	r2, [r7, #32]
2000238c:	601a      	str	r2, [r3, #0]
	sprite *pointer13 = &tempDIPBlack;
2000238e:	4b2e      	ldr	r3, [pc, #184]	; (20002448 <initSprites+0xec>)
20002390:	61fb      	str	r3, [r7, #28]
	load_sprite(pointer13, witch1_black_bits, witch1_black_width, witch1_black_height);
20002392:	492e      	ldr	r1, [pc, #184]	; (2000244c <initSprites+0xf0>)
20002394:	69f8      	ldr	r0, [r7, #28]
20002396:	2312      	movs	r3, #18
20002398:	2212      	movs	r2, #18
2000239a:	f001 fcb9 	bl	20003d10 <load_sprite>
	DIP1Black = pointer13;	
2000239e:	4b2c      	ldr	r3, [pc, #176]	; (20002450 <initSprites+0xf4>)
200023a0:	69fa      	ldr	r2, [r7, #28]
200023a2:	601a      	str	r2, [r3, #0]
	
	sprite *pointer14 = &tempDIP2Light;
200023a4:	4b2b      	ldr	r3, [pc, #172]	; (20002454 <initSprites+0xf8>)
200023a6:	61bb      	str	r3, [r7, #24]
	load_sprite(pointer14, witch2_light_bits, witch2_black_width, witch2_black_height);
200023a8:	492b      	ldr	r1, [pc, #172]	; (20002458 <initSprites+0xfc>)
200023aa:	69b8      	ldr	r0, [r7, #24]
200023ac:	2312      	movs	r3, #18
200023ae:	2212      	movs	r2, #18
200023b0:	f001 fcae 	bl	20003d10 <load_sprite>
	DIP2Light = pointer14;
200023b4:	4b29      	ldr	r3, [pc, #164]	; (2000245c <initSprites+0x100>)
200023b6:	69ba      	ldr	r2, [r7, #24]
200023b8:	601a      	str	r2, [r3, #0]
	sprite *pointer15 = &tempDIP2Gray;
200023ba:	4b29      	ldr	r3, [pc, #164]	; (20002460 <initSprites+0x104>)
200023bc:	617b      	str	r3, [r7, #20]
	load_sprite(pointer15, witch2_gray_bits, witch2_black_width, witch2_black_height);
200023be:	4929      	ldr	r1, [pc, #164]	; (20002464 <initSprites+0x108>)
200023c0:	6978      	ldr	r0, [r7, #20]
200023c2:	2312      	movs	r3, #18
200023c4:	2212      	movs	r2, #18
200023c6:	f001 fca3 	bl	20003d10 <load_sprite>
	DIP2Gray = pointer15;
200023ca:	4b27      	ldr	r3, [pc, #156]	; (20002468 <initSprites+0x10c>)
200023cc:	697a      	ldr	r2, [r7, #20]
200023ce:	601a      	str	r2, [r3, #0]
	sprite *pointer16 = &tempDIP2Black;
200023d0:	4b26      	ldr	r3, [pc, #152]	; (2000246c <initSprites+0x110>)
200023d2:	613b      	str	r3, [r7, #16]
	load_sprite(pointer16, witch2_black_bits, witch2_black_width, witch2_black_height);
200023d4:	4926      	ldr	r1, [pc, #152]	; (20002470 <initSprites+0x114>)
200023d6:	6938      	ldr	r0, [r7, #16]
200023d8:	2312      	movs	r3, #18
200023da:	2212      	movs	r2, #18
200023dc:	f001 fc98 	bl	20003d10 <load_sprite>
	DIP2Black = pointer16;
200023e0:	4b24      	ldr	r3, [pc, #144]	; (20002474 <initSprites+0x118>)
200023e2:	693a      	ldr	r2, [r7, #16]
200023e4:	601a      	str	r2, [r3, #0]
	
	
	sprite *finalPointer = &tempDIP3Light;
200023e6:	4b24      	ldr	r3, [pc, #144]	; (20002478 <initSprites+0x11c>)
200023e8:	60fb      	str	r3, [r7, #12]
	load_sprite(finalPointer, witch3_light_bits, witch3_black_width, witch3_black_height);
200023ea:	4924      	ldr	r1, [pc, #144]	; (2000247c <initSprites+0x120>)
200023ec:	68f8      	ldr	r0, [r7, #12]
200023ee:	2312      	movs	r3, #18
200023f0:	2212      	movs	r2, #18
200023f2:	f001 fc8d 	bl	20003d10 <load_sprite>
	DIP3Light = finalPointer;
200023f6:	4b22      	ldr	r3, [pc, #136]	; (20002480 <initSprites+0x124>)
200023f8:	68fa      	ldr	r2, [r7, #12]
200023fa:	601a      	str	r2, [r3, #0]
	sprite *pointer17 = &tempDIP3Gray;
200023fc:	4b21      	ldr	r3, [pc, #132]	; (20002484 <initSprites+0x128>)
200023fe:	60bb      	str	r3, [r7, #8]
	load_sprite(pointer17, witch3_gray_bits, witch3_black_width, witch3_black_height);
20002400:	4921      	ldr	r1, [pc, #132]	; (20002488 <initSprites+0x12c>)
20002402:	68b8      	ldr	r0, [r7, #8]
20002404:	2312      	movs	r3, #18
20002406:	2212      	movs	r2, #18
20002408:	f001 fc82 	bl	20003d10 <load_sprite>
	DIP3Gray = pointer17;
2000240c:	4b1f      	ldr	r3, [pc, #124]	; (2000248c <initSprites+0x130>)
2000240e:	68ba      	ldr	r2, [r7, #8]
20002410:	601a      	str	r2, [r3, #0]
	sprite *pointer18 = &tempDIP3Black;
20002412:	4b1f      	ldr	r3, [pc, #124]	; (20002490 <initSprites+0x134>)
20002414:	607b      	str	r3, [r7, #4]
	load_sprite(pointer18, witch3_black_bits, witch3_black_width, witch3_black_height);
20002416:	491f      	ldr	r1, [pc, #124]	; (20002494 <initSprites+0x138>)
20002418:	6878      	ldr	r0, [r7, #4]
2000241a:	2312      	movs	r3, #18
2000241c:	2212      	movs	r2, #18
2000241e:	f001 fc77 	bl	20003d10 <load_sprite>
	DIP3Black = pointer18;	
20002422:	4b1d      	ldr	r3, [pc, #116]	; (20002498 <initSprites+0x13c>)
20002424:	687a      	ldr	r2, [r7, #4]
20002426:	601a      	str	r2, [r3, #0]
	
}
20002428:	46c0      	nop			; (mov r8, r8)
2000242a:	46bd      	mov	sp, r7
2000242c:	b00a      	add	sp, #40	; 0x28
2000242e:	bd80      	pop	{r7, pc}
20002430:	20004fcc 	andcs	r4, r0, ip, asr #31
20002434:	2000924c 	andcs	r9, r0, ip, asr #4
20002438:	20005038 	andcs	r5, r0, r8, lsr r0
2000243c:	2000508c 	andcs	r5, r0, ip, lsl #1
20002440:	20009214 	andcs	r9, r0, r4, lsl r2
20002444:	20005060 	andcs	r5, r0, r0, rrx
20002448:	20005054 	andcs	r5, r0, r4, asr r0
2000244c:	200091dc 	ldrdcs	r9, [r0], -ip
20002450:	20004fc8 	andcs	r4, r0, r8, asr #31
20002454:	20005080 	andcs	r5, r0, r0, lsl #1
20002458:	200092f4 	strdcs	r9, [r0], -r4
2000245c:	2000503c 	andcs	r5, r0, ip, lsr r0
20002460:	20004fb8 			; <UNDEFINED> instruction: 0x20004fb8
20002464:	200092bc 			; <UNDEFINED> instruction: 0x200092bc
20002468:	20004fb4 			; <UNDEFINED> instruction: 0x20004fb4
2000246c:	20005014 	andcs	r5, r0, r4, lsl r0
20002470:	20009284 	andcs	r9, r0, r4, lsl #5
20002474:	20005044 	andcs	r5, r0, r4, asr #32
20002478:	20004fd8 	ldrdcs	r4, [r0], -r8
2000247c:	2000939c 	mulcs	r0, ip, r3
20002480:	20005040 	andcs	r5, r0, r0, asr #32
20002484:	20005048 	andcs	r5, r0, r8, asr #32
20002488:	20009364 	andcs	r9, r0, r4, ror #6
2000248c:	20005070 	andcs	r5, r0, r0, ror r0
20002490:	20005064 	andcs	r5, r0, r4, rrx
20002494:	2000932c 	andcs	r9, r0, ip, lsr #6
20002498:	20004fc4 	andcs	r4, r0, r4, asr #31

2000249c <init_DIP>:
	
void init_DIP( GameObject *DIPObj ) {
2000249c:	b590      	push	{r4, r7, lr}
2000249e:	b083      	sub	sp, #12
200024a0:	af00      	add	r7, sp, #0
200024a2:	6078      	str	r0, [r7, #4]
	static int firstTime = 1;
	if (firstTime) {
200024a4:	4b29      	ldr	r3, [pc, #164]	; (2000254c <init_DIP+0xb0>)
200024a6:	681b      	ldr	r3, [r3, #0]
200024a8:	2b00      	cmp	r3, #0
200024aa:	d03b      	beq.n	20002524 <init_DIP+0x88>
		initSprites();
200024ac:	f7ff ff56 	bl	2000235c <initSprites>
		firstTime = 0;			
200024b0:	4b26      	ldr	r3, [pc, #152]	; (2000254c <init_DIP+0xb0>)
200024b2:	2200      	movs	r2, #0
200024b4:	601a      	str	r2, [r3, #0]

		DIPImages[0] = DIP1Image;
200024b6:	4b26      	ldr	r3, [pc, #152]	; (20002550 <init_DIP+0xb4>)
200024b8:	4a26      	ldr	r2, [pc, #152]	; (20002554 <init_DIP+0xb8>)
200024ba:	ca13      	ldmia	r2!, {r0, r1, r4}
200024bc:	c313      	stmia	r3!, {r0, r1, r4}
		DIPImages[1] = DIP2Image;
200024be:	4b24      	ldr	r3, [pc, #144]	; (20002550 <init_DIP+0xb4>)
200024c0:	4a25      	ldr	r2, [pc, #148]	; (20002558 <init_DIP+0xbc>)
200024c2:	330c      	adds	r3, #12
200024c4:	ca13      	ldmia	r2!, {r0, r1, r4}
200024c6:	c313      	stmia	r3!, {r0, r1, r4}
		DIPImages[2] = DIP3Image;
200024c8:	4b21      	ldr	r3, [pc, #132]	; (20002550 <init_DIP+0xb4>)
200024ca:	4a24      	ldr	r2, [pc, #144]	; (2000255c <init_DIP+0xc0>)
200024cc:	3318      	adds	r3, #24
200024ce:	ca13      	ldmia	r2!, {r0, r1, r4}
200024d0:	c313      	stmia	r3!, {r0, r1, r4}
		DIPImages[3] = DIP4Image;
200024d2:	4b1f      	ldr	r3, [pc, #124]	; (20002550 <init_DIP+0xb4>)
200024d4:	4a22      	ldr	r2, [pc, #136]	; (20002560 <init_DIP+0xc4>)
200024d6:	3324      	adds	r3, #36	; 0x24
200024d8:	ca13      	ldmia	r2!, {r0, r1, r4}
200024da:	c313      	stmia	r3!, {r0, r1, r4}
		
		
		load_image(&DIPImages[0], DIP1Black, DIP1Light, DIP1Gray);
200024dc:	4b21      	ldr	r3, [pc, #132]	; (20002564 <init_DIP+0xc8>)
200024de:	6819      	ldr	r1, [r3, #0]
200024e0:	4b21      	ldr	r3, [pc, #132]	; (20002568 <init_DIP+0xcc>)
200024e2:	681a      	ldr	r2, [r3, #0]
200024e4:	4b21      	ldr	r3, [pc, #132]	; (2000256c <init_DIP+0xd0>)
200024e6:	681b      	ldr	r3, [r3, #0]
200024e8:	4819      	ldr	r0, [pc, #100]	; (20002550 <init_DIP+0xb4>)
200024ea:	f001 fbfd 	bl	20003ce8 <load_image>
		load_image(&DIPImages[1], DIP2Black, DIP2Light, DIP2Gray);
200024ee:	4b20      	ldr	r3, [pc, #128]	; (20002570 <init_DIP+0xd4>)
200024f0:	6819      	ldr	r1, [r3, #0]
200024f2:	4b20      	ldr	r3, [pc, #128]	; (20002574 <init_DIP+0xd8>)
200024f4:	681a      	ldr	r2, [r3, #0]
200024f6:	4b20      	ldr	r3, [pc, #128]	; (20002578 <init_DIP+0xdc>)
200024f8:	681b      	ldr	r3, [r3, #0]
200024fa:	4820      	ldr	r0, [pc, #128]	; (2000257c <init_DIP+0xe0>)
200024fc:	f001 fbf4 	bl	20003ce8 <load_image>
		load_image(&DIPImages[2], DIP3Black, DIP3Light, DIP3Gray);
20002500:	4b1f      	ldr	r3, [pc, #124]	; (20002580 <init_DIP+0xe4>)
20002502:	6819      	ldr	r1, [r3, #0]
20002504:	4b1f      	ldr	r3, [pc, #124]	; (20002584 <init_DIP+0xe8>)
20002506:	681a      	ldr	r2, [r3, #0]
20002508:	4b1f      	ldr	r3, [pc, #124]	; (20002588 <init_DIP+0xec>)
2000250a:	681b      	ldr	r3, [r3, #0]
2000250c:	481f      	ldr	r0, [pc, #124]	; (2000258c <init_DIP+0xf0>)
2000250e:	f001 fbeb 	bl	20003ce8 <load_image>
		load_image(&DIPImages[3], DIP2Black, DIP2Light, DIP2Gray);
20002512:	4b17      	ldr	r3, [pc, #92]	; (20002570 <init_DIP+0xd4>)
20002514:	6819      	ldr	r1, [r3, #0]
20002516:	4b17      	ldr	r3, [pc, #92]	; (20002574 <init_DIP+0xd8>)
20002518:	681a      	ldr	r2, [r3, #0]
2000251a:	4b17      	ldr	r3, [pc, #92]	; (20002578 <init_DIP+0xdc>)
2000251c:	681b      	ldr	r3, [r3, #0]
2000251e:	481c      	ldr	r0, [pc, #112]	; (20002590 <init_DIP+0xf4>)
20002520:	f001 fbe2 	bl	20003ce8 <load_image>
		
	}
	
	DIPObj->images = DIPImages;
20002524:	687b      	ldr	r3, [r7, #4]
20002526:	4a0a      	ldr	r2, [pc, #40]	; (20002550 <init_DIP+0xb4>)
20002528:	601a      	str	r2, [r3, #0]

	DIPObj->current_frame = 0;
2000252a:	687b      	ldr	r3, [r7, #4]
2000252c:	2200      	movs	r2, #0
2000252e:	615a      	str	r2, [r3, #20]
	DIPObj->n_frames = 4;
20002530:	687b      	ldr	r3, [r7, #4]
20002532:	2204      	movs	r2, #4
20002534:	619a      	str	r2, [r3, #24]
	DIPObj->animation_speed = 1;
20002536:	687b      	ldr	r3, [r7, #4]
20002538:	2201      	movs	r2, #1
2000253a:	61da      	str	r2, [r3, #28]
	DIPObj->animation_counter = 0;
2000253c:	687b      	ldr	r3, [r7, #4]
2000253e:	2200      	movs	r2, #0
20002540:	621a      	str	r2, [r3, #32]
}
20002542:	46c0      	nop			; (mov r8, r8)
20002544:	46bd      	mov	sp, r7
20002546:	b003      	add	sp, #12
20002548:	bd90      	pop	{r4, r7, pc}
2000254a:	46c0      	nop			; (mov r8, r8)
2000254c:	200093d4 	ldrdcs	r9, [r0], -r4
20002550:	20004fe4 	andcs	r4, r0, r4, ror #31
20002554:	2000502c 	andcs	r5, r0, ip, lsr #32
20002558:	20004fa8 	andcs	r4, r0, r8, lsr #31
2000255c:	20005020 	andcs	r5, r0, r0, lsr #32
20002560:	20005074 	andcs	r5, r0, r4, ror r0
20002564:	20004fc8 	andcs	r4, r0, r8, asr #31
20002568:	20005038 	andcs	r5, r0, r8, lsr r0
2000256c:	20005060 	andcs	r5, r0, r0, rrx
20002570:	20005044 	andcs	r5, r0, r4, asr #32
20002574:	2000503c 	andcs	r5, r0, ip, lsr r0
20002578:	20004fb4 			; <UNDEFINED> instruction: 0x20004fb4
2000257c:	20004ff0 	strdcs	r4, [r0], -r0
20002580:	20004fc4 	andcs	r4, r0, r4, asr #31
20002584:	20005040 	andcs	r5, r0, r0, asr #32
20002588:	20005070 	andcs	r5, r0, r0, ror r0
2000258c:	20004ffc 	strdcs	r4, [r0], -ip
20002590:	20005008 	andcs	r5, r0, r8

20002594 <setPlayerPosition>:

static int playerPositionX = 0;
static int playerPositionY = 0;

void setPlayerPosition(int x, int y){
20002594:	b580      	push	{r7, lr}
20002596:	b082      	sub	sp, #8
20002598:	af00      	add	r7, sp, #0
2000259a:	6078      	str	r0, [r7, #4]
2000259c:	6039      	str	r1, [r7, #0]
	playerPositionX = x;
2000259e:	4b05      	ldr	r3, [pc, #20]	; (200025b4 <setPlayerPosition+0x20>)
200025a0:	687a      	ldr	r2, [r7, #4]
200025a2:	601a      	str	r2, [r3, #0]
	playerPositionY = y;
200025a4:	4b04      	ldr	r3, [pc, #16]	; (200025b8 <setPlayerPosition+0x24>)
200025a6:	683a      	ldr	r2, [r7, #0]
200025a8:	601a      	str	r2, [r3, #0]
}
200025aa:	46c0      	nop			; (mov r8, r8)
200025ac:	46bd      	mov	sp, r7
200025ae:	b002      	add	sp, #8
200025b0:	bd80      	pop	{r7, pc}
200025b2:	46c0      	nop			; (mov r8, r8)
200025b4:	2000490c 	andcs	r4, r0, ip, lsl #18
200025b8:	20004910 	andcs	r4, r0, r0, lsl r9

200025bc <DIPUpdate>:


void DIPUpdate(GameObject *this) {
200025bc:	b580      	push	{r7, lr}
200025be:	b082      	sub	sp, #8
200025c0:	af00      	add	r7, sp, #0
200025c2:	6078      	str	r0, [r7, #4]
	gameObjectUpdate(this);
200025c4:	687b      	ldr	r3, [r7, #4]
200025c6:	0018      	movs	r0, r3
200025c8:	f7ff f980 	bl	200018cc <gameObjectUpdate>
	static int counter = 0;
	static int direction = -1;
	static int isRunning = 0;
	counter++;
200025cc:	4b39      	ldr	r3, [pc, #228]	; (200026b4 <DIPUpdate+0xf8>)
200025ce:	681b      	ldr	r3, [r3, #0]
200025d0:	1c5a      	adds	r2, r3, #1
200025d2:	4b38      	ldr	r3, [pc, #224]	; (200026b4 <DIPUpdate+0xf8>)
200025d4:	601a      	str	r2, [r3, #0]
	
	if (!read_DIL_single(LIGHT_TRIGGER)){ // Only move if the light is off
200025d6:	2006      	movs	r0, #6
200025d8:	f001 fbca 	bl	20003d70 <read_DIL_single>
200025dc:	1e03      	subs	r3, r0, #0
200025de:	d165      	bne.n	200026ac <DIPUpdate+0xf0>
		
		if (this->yPos >= playerPositionY){
200025e0:	687b      	ldr	r3, [r7, #4]
200025e2:	689a      	ldr	r2, [r3, #8]
200025e4:	4b34      	ldr	r3, [pc, #208]	; (200026b8 <DIPUpdate+0xfc>)
200025e6:	681b      	ldr	r3, [r3, #0]
200025e8:	429a      	cmp	r2, r3
200025ea:	db03      	blt.n	200025f4 <DIPUpdate+0x38>
			isRunning = 1;
200025ec:	4b33      	ldr	r3, [pc, #204]	; (200026bc <DIPUpdate+0x100>)
200025ee:	2201      	movs	r2, #1
200025f0:	601a      	str	r2, [r3, #0]
200025f2:	e023      	b.n	2000263c <DIPUpdate+0x80>
		}
		else if ((playerPositionX + DIP_WIDTH >= this->xPos && playerPositionX <= this->xPos + DIP_WIDTH )) { // Move faster if player is below or on the same level
200025f4:	4b32      	ldr	r3, [pc, #200]	; (200026c0 <DIPUpdate+0x104>)
200025f6:	681b      	ldr	r3, [r3, #0]
200025f8:	3312      	adds	r3, #18
200025fa:	001a      	movs	r2, r3
200025fc:	687b      	ldr	r3, [r7, #4]
200025fe:	685b      	ldr	r3, [r3, #4]
20002600:	429a      	cmp	r2, r3
20002602:	db1b      	blt.n	2000263c <DIPUpdate+0x80>
20002604:	687b      	ldr	r3, [r7, #4]
20002606:	685b      	ldr	r3, [r3, #4]
20002608:	3312      	adds	r3, #18
2000260a:	001a      	movs	r2, r3
2000260c:	4b2c      	ldr	r3, [pc, #176]	; (200026c0 <DIPUpdate+0x104>)
2000260e:	681b      	ldr	r3, [r3, #0]
20002610:	429a      	cmp	r2, r3
20002612:	db13      	blt.n	2000263c <DIPUpdate+0x80>
			isRunning = 1;
20002614:	4b29      	ldr	r3, [pc, #164]	; (200026bc <DIPUpdate+0x100>)
20002616:	2201      	movs	r2, #1
20002618:	601a      	str	r2, [r3, #0]
			if (RIGHT_POINT - playerPositionX > playerPositionX - LEFT_POINT){
2000261a:	4b29      	ldr	r3, [pc, #164]	; (200026c0 <DIPUpdate+0x104>)
2000261c:	681b      	ldr	r3, [r3, #0]
2000261e:	226b      	movs	r2, #107	; 0x6b
20002620:	1ad2      	subs	r2, r2, r3
20002622:	4b27      	ldr	r3, [pc, #156]	; (200026c0 <DIPUpdate+0x104>)
20002624:	681b      	ldr	r3, [r3, #0]
20002626:	3b2e      	subs	r3, #46	; 0x2e
20002628:	429a      	cmp	r2, r3
2000262a:	dd03      	ble.n	20002634 <DIPUpdate+0x78>
				direction = 1;
2000262c:	4b25      	ldr	r3, [pc, #148]	; (200026c4 <DIPUpdate+0x108>)
2000262e:	2201      	movs	r2, #1
20002630:	601a      	str	r2, [r3, #0]
20002632:	e003      	b.n	2000263c <DIPUpdate+0x80>
			}
			else{
				direction = -1;
20002634:	4b23      	ldr	r3, [pc, #140]	; (200026c4 <DIPUpdate+0x108>)
20002636:	2201      	movs	r2, #1
20002638:	4252      	negs	r2, r2
2000263a:	601a      	str	r2, [r3, #0]
			}
		} 
		
		
		
		if (isRunning){
2000263c:	4b1f      	ldr	r3, [pc, #124]	; (200026bc <DIPUpdate+0x100>)
2000263e:	681b      	ldr	r3, [r3, #0]
20002640:	2b00      	cmp	r3, #0
20002642:	d00a      	beq.n	2000265a <DIPUpdate+0x9e>
			this->xPos += direction*3;
20002644:	687b      	ldr	r3, [r7, #4]
20002646:	6859      	ldr	r1, [r3, #4]
20002648:	4b1e      	ldr	r3, [pc, #120]	; (200026c4 <DIPUpdate+0x108>)
2000264a:	681a      	ldr	r2, [r3, #0]
2000264c:	0013      	movs	r3, r2
2000264e:	005b      	lsls	r3, r3, #1
20002650:	189b      	adds	r3, r3, r2
20002652:	18ca      	adds	r2, r1, r3
20002654:	687b      	ldr	r3, [r7, #4]
20002656:	605a      	str	r2, [r3, #4]
20002658:	e012      	b.n	20002680 <DIPUpdate+0xc4>
		} else {
			this->xPos += (counter % 2)*direction;
2000265a:	687b      	ldr	r3, [r7, #4]
2000265c:	685a      	ldr	r2, [r3, #4]
2000265e:	4b15      	ldr	r3, [pc, #84]	; (200026b4 <DIPUpdate+0xf8>)
20002660:	681b      	ldr	r3, [r3, #0]
20002662:	4919      	ldr	r1, [pc, #100]	; (200026c8 <DIPUpdate+0x10c>)
20002664:	400b      	ands	r3, r1
20002666:	d504      	bpl.n	20002672 <DIPUpdate+0xb6>
20002668:	3b01      	subs	r3, #1
2000266a:	2102      	movs	r1, #2
2000266c:	4249      	negs	r1, r1
2000266e:	430b      	orrs	r3, r1
20002670:	3301      	adds	r3, #1
20002672:	0019      	movs	r1, r3
20002674:	4b13      	ldr	r3, [pc, #76]	; (200026c4 <DIPUpdate+0x108>)
20002676:	681b      	ldr	r3, [r3, #0]
20002678:	434b      	muls	r3, r1
2000267a:	18d2      	adds	r2, r2, r3
2000267c:	687b      	ldr	r3, [r7, #4]
2000267e:	605a      	str	r2, [r3, #4]
		}
		
		if(this->xPos > RIGHT_POINT) {
20002680:	687b      	ldr	r3, [r7, #4]
20002682:	685b      	ldr	r3, [r3, #4]
20002684:	2b6b      	cmp	r3, #107	; 0x6b
20002686:	dd07      	ble.n	20002698 <DIPUpdate+0xdc>
			isRunning = 0;
20002688:	4b0c      	ldr	r3, [pc, #48]	; (200026bc <DIPUpdate+0x100>)
2000268a:	2200      	movs	r2, #0
2000268c:	601a      	str	r2, [r3, #0]
			direction = -1;
2000268e:	4b0d      	ldr	r3, [pc, #52]	; (200026c4 <DIPUpdate+0x108>)
20002690:	2201      	movs	r2, #1
20002692:	4252      	negs	r2, r2
20002694:	601a      	str	r2, [r3, #0]
		} else if(this->xPos < LEFT_POINT) {
			isRunning = 0;
			direction = 1;
		}
	}
}
20002696:	e009      	b.n	200026ac <DIPUpdate+0xf0>
		} else if(this->xPos < LEFT_POINT) {
20002698:	687b      	ldr	r3, [r7, #4]
2000269a:	685b      	ldr	r3, [r3, #4]
2000269c:	2b2d      	cmp	r3, #45	; 0x2d
2000269e:	dc05      	bgt.n	200026ac <DIPUpdate+0xf0>
			isRunning = 0;
200026a0:	4b06      	ldr	r3, [pc, #24]	; (200026bc <DIPUpdate+0x100>)
200026a2:	2200      	movs	r2, #0
200026a4:	601a      	str	r2, [r3, #0]
			direction = 1;
200026a6:	4b07      	ldr	r3, [pc, #28]	; (200026c4 <DIPUpdate+0x108>)
200026a8:	2201      	movs	r2, #1
200026aa:	601a      	str	r2, [r3, #0]
}
200026ac:	46c0      	nop			; (mov r8, r8)
200026ae:	46bd      	mov	sp, r7
200026b0:	b002      	add	sp, #8
200026b2:	bd80      	pop	{r7, pc}
200026b4:	20004914 	andcs	r4, r0, r4, lsl r9
200026b8:	20004910 	andcs	r4, r0, r0, lsl r9
200026bc:	20004918 	andcs	r4, r0, r8, lsl r9
200026c0:	2000490c 	andcs	r4, r0, ip, lsl #18
200026c4:	200093d8 	ldrdcs	r9, [r0], -r8
200026c8:	80000001 	andhi	r0, r0, r1

200026cc <initSprites>:
Image flame1Image;
Image flame2Image;
Image flame3Image;
Image flame4Image;
Image flameImages[4];
static void initSprites( void ) {	
200026cc:	b580      	push	{r7, lr}
200026ce:	b08c      	sub	sp, #48	; 0x30
200026d0:	af00      	add	r7, sp, #0
	
	sprite *pointer11 = &tempFlameLight;
200026d2:	4b44      	ldr	r3, [pc, #272]	; (200027e4 <initSprites+0x118>)
200026d4:	62fb      	str	r3, [r7, #44]	; 0x2c
	load_sprite(pointer11, flame1_light_bits, flame1_black_width, flame1_black_height);
200026d6:	4944      	ldr	r1, [pc, #272]	; (200027e8 <initSprites+0x11c>)
200026d8:	6af8      	ldr	r0, [r7, #44]	; 0x2c
200026da:	2327      	movs	r3, #39	; 0x27
200026dc:	2211      	movs	r2, #17
200026de:	f001 fb17 	bl	20003d10 <load_sprite>
	flame1Light = pointer11;
200026e2:	4b42      	ldr	r3, [pc, #264]	; (200027ec <initSprites+0x120>)
200026e4:	6afa      	ldr	r2, [r7, #44]	; 0x2c
200026e6:	601a      	str	r2, [r3, #0]
	sprite *pointer12 = &tempFlameGray;
200026e8:	4b41      	ldr	r3, [pc, #260]	; (200027f0 <initSprites+0x124>)
200026ea:	62bb      	str	r3, [r7, #40]	; 0x28
	load_sprite(pointer12, flame1_gray_bits, flame1_black_width, flame1_black_height);
200026ec:	4941      	ldr	r1, [pc, #260]	; (200027f4 <initSprites+0x128>)
200026ee:	6ab8      	ldr	r0, [r7, #40]	; 0x28
200026f0:	2327      	movs	r3, #39	; 0x27
200026f2:	2211      	movs	r2, #17
200026f4:	f001 fb0c 	bl	20003d10 <load_sprite>
	flame1Gray = pointer12;
200026f8:	4b3f      	ldr	r3, [pc, #252]	; (200027f8 <initSprites+0x12c>)
200026fa:	6aba      	ldr	r2, [r7, #40]	; 0x28
200026fc:	601a      	str	r2, [r3, #0]
	sprite *pointer13 = &tempFlameBlack;
200026fe:	4b3f      	ldr	r3, [pc, #252]	; (200027fc <initSprites+0x130>)
20002700:	627b      	str	r3, [r7, #36]	; 0x24
	load_sprite(pointer13, flame1_black_bits, flame1_black_width, flame1_black_height);
20002702:	493f      	ldr	r1, [pc, #252]	; (20002800 <initSprites+0x134>)
20002704:	6a78      	ldr	r0, [r7, #36]	; 0x24
20002706:	2327      	movs	r3, #39	; 0x27
20002708:	2211      	movs	r2, #17
2000270a:	f001 fb01 	bl	20003d10 <load_sprite>
	flame1Black = pointer13;	
2000270e:	4b3d      	ldr	r3, [pc, #244]	; (20002804 <initSprites+0x138>)
20002710:	6a7a      	ldr	r2, [r7, #36]	; 0x24
20002712:	601a      	str	r2, [r3, #0]
	
	sprite *pointer14 = &tempFlame2Light;
20002714:	4b3c      	ldr	r3, [pc, #240]	; (20002808 <initSprites+0x13c>)
20002716:	623b      	str	r3, [r7, #32]
	load_sprite(pointer14, flame2_light_bits, flame2_black_width, flame2_black_height);
20002718:	493c      	ldr	r1, [pc, #240]	; (2000280c <initSprites+0x140>)
2000271a:	6a38      	ldr	r0, [r7, #32]
2000271c:	2327      	movs	r3, #39	; 0x27
2000271e:	2211      	movs	r2, #17
20002720:	f001 faf6 	bl	20003d10 <load_sprite>
	flame2Light = pointer14;
20002724:	4b3a      	ldr	r3, [pc, #232]	; (20002810 <initSprites+0x144>)
20002726:	6a3a      	ldr	r2, [r7, #32]
20002728:	601a      	str	r2, [r3, #0]
	sprite *pointer15 = &tempFlame2Gray;
2000272a:	4b3a      	ldr	r3, [pc, #232]	; (20002814 <initSprites+0x148>)
2000272c:	61fb      	str	r3, [r7, #28]
	load_sprite(pointer15, flame2_gray_bits, flame2_black_width, flame2_black_height);
2000272e:	493a      	ldr	r1, [pc, #232]	; (20002818 <initSprites+0x14c>)
20002730:	69f8      	ldr	r0, [r7, #28]
20002732:	2327      	movs	r3, #39	; 0x27
20002734:	2211      	movs	r2, #17
20002736:	f001 faeb 	bl	20003d10 <load_sprite>
	flame2Gray = pointer15;
2000273a:	4b38      	ldr	r3, [pc, #224]	; (2000281c <initSprites+0x150>)
2000273c:	69fa      	ldr	r2, [r7, #28]
2000273e:	601a      	str	r2, [r3, #0]
	sprite *pointer16 = &tempFlame2Black;
20002740:	4b37      	ldr	r3, [pc, #220]	; (20002820 <initSprites+0x154>)
20002742:	61bb      	str	r3, [r7, #24]
	load_sprite(pointer16, flame2_black_bits, flame2_black_width, flame2_black_height);
20002744:	4937      	ldr	r1, [pc, #220]	; (20002824 <initSprites+0x158>)
20002746:	69b8      	ldr	r0, [r7, #24]
20002748:	2327      	movs	r3, #39	; 0x27
2000274a:	2211      	movs	r2, #17
2000274c:	f001 fae0 	bl	20003d10 <load_sprite>
	flame2Black = pointer16;
20002750:	4b35      	ldr	r3, [pc, #212]	; (20002828 <initSprites+0x15c>)
20002752:	69ba      	ldr	r2, [r7, #24]
20002754:	601a      	str	r2, [r3, #0]
	
	
	sprite *finalPointer = &tempFlame3Light;
20002756:	4b35      	ldr	r3, [pc, #212]	; (2000282c <initSprites+0x160>)
20002758:	617b      	str	r3, [r7, #20]
	load_sprite(finalPointer, flame3_light_bits, flame3_black_width, flame3_black_height);
2000275a:	4935      	ldr	r1, [pc, #212]	; (20002830 <initSprites+0x164>)
2000275c:	6978      	ldr	r0, [r7, #20]
2000275e:	2327      	movs	r3, #39	; 0x27
20002760:	2211      	movs	r2, #17
20002762:	f001 fad5 	bl	20003d10 <load_sprite>
	flame3Light = finalPointer;
20002766:	4b33      	ldr	r3, [pc, #204]	; (20002834 <initSprites+0x168>)
20002768:	697a      	ldr	r2, [r7, #20]
2000276a:	601a      	str	r2, [r3, #0]
	sprite *pointer17 = &tempFlame3Gray;
2000276c:	4b32      	ldr	r3, [pc, #200]	; (20002838 <initSprites+0x16c>)
2000276e:	613b      	str	r3, [r7, #16]
	load_sprite(pointer17, flame3_gray_bits, flame3_black_width, flame3_black_height);
20002770:	4932      	ldr	r1, [pc, #200]	; (2000283c <initSprites+0x170>)
20002772:	6938      	ldr	r0, [r7, #16]
20002774:	2327      	movs	r3, #39	; 0x27
20002776:	2211      	movs	r2, #17
20002778:	f001 faca 	bl	20003d10 <load_sprite>
	flame3Gray = pointer17;
2000277c:	4b30      	ldr	r3, [pc, #192]	; (20002840 <initSprites+0x174>)
2000277e:	693a      	ldr	r2, [r7, #16]
20002780:	601a      	str	r2, [r3, #0]
	sprite *pointer18 = &tempFlame3Black;
20002782:	4b30      	ldr	r3, [pc, #192]	; (20002844 <initSprites+0x178>)
20002784:	60fb      	str	r3, [r7, #12]
	load_sprite(pointer18, flame3_black_bits, flame3_black_width, flame3_black_height);
20002786:	4930      	ldr	r1, [pc, #192]	; (20002848 <initSprites+0x17c>)
20002788:	68f8      	ldr	r0, [r7, #12]
2000278a:	2327      	movs	r3, #39	; 0x27
2000278c:	2211      	movs	r2, #17
2000278e:	f001 fabf 	bl	20003d10 <load_sprite>
	flame3Black = pointer18;	
20002792:	4b2e      	ldr	r3, [pc, #184]	; (2000284c <initSprites+0x180>)
20002794:	68fa      	ldr	r2, [r7, #12]
20002796:	601a      	str	r2, [r3, #0]
	
	sprite *pointer19 = &tempFlame4Light;
20002798:	4b2d      	ldr	r3, [pc, #180]	; (20002850 <initSprites+0x184>)
2000279a:	60bb      	str	r3, [r7, #8]
	load_sprite(pointer19, flame4_light_bits, flame4_black_width, flame4_black_height);
2000279c:	492d      	ldr	r1, [pc, #180]	; (20002854 <initSprites+0x188>)
2000279e:	68b8      	ldr	r0, [r7, #8]
200027a0:	2327      	movs	r3, #39	; 0x27
200027a2:	2211      	movs	r2, #17
200027a4:	f001 fab4 	bl	20003d10 <load_sprite>
	flame4Light = pointer19;
200027a8:	4b2b      	ldr	r3, [pc, #172]	; (20002858 <initSprites+0x18c>)
200027aa:	68ba      	ldr	r2, [r7, #8]
200027ac:	601a      	str	r2, [r3, #0]
	sprite *pointer20 = &tempFlame4Gray;
200027ae:	4b2b      	ldr	r3, [pc, #172]	; (2000285c <initSprites+0x190>)
200027b0:	607b      	str	r3, [r7, #4]
	load_sprite(pointer20, flame4_gray_bits, flame4_black_width, flame4_black_height);
200027b2:	492b      	ldr	r1, [pc, #172]	; (20002860 <initSprites+0x194>)
200027b4:	6878      	ldr	r0, [r7, #4]
200027b6:	2327      	movs	r3, #39	; 0x27
200027b8:	2211      	movs	r2, #17
200027ba:	f001 faa9 	bl	20003d10 <load_sprite>
	flame4Gray = pointer20;
200027be:	4b29      	ldr	r3, [pc, #164]	; (20002864 <initSprites+0x198>)
200027c0:	687a      	ldr	r2, [r7, #4]
200027c2:	601a      	str	r2, [r3, #0]
	sprite *pointer21 = &tempFlame4Black;
200027c4:	4b28      	ldr	r3, [pc, #160]	; (20002868 <initSprites+0x19c>)
200027c6:	603b      	str	r3, [r7, #0]
	load_sprite(pointer21, flame4_black_bits, flame4_black_width, flame4_black_height);
200027c8:	4928      	ldr	r1, [pc, #160]	; (2000286c <initSprites+0x1a0>)
200027ca:	6838      	ldr	r0, [r7, #0]
200027cc:	2327      	movs	r3, #39	; 0x27
200027ce:	2211      	movs	r2, #17
200027d0:	f001 fa9e 	bl	20003d10 <load_sprite>
	flame4Black = pointer21;	
200027d4:	4b26      	ldr	r3, [pc, #152]	; (20002870 <initSprites+0x1a4>)
200027d6:	683a      	ldr	r2, [r7, #0]
200027d8:	601a      	str	r2, [r3, #0]
	
}
200027da:	46c0      	nop			; (mov r8, r8)
200027dc:	46bd      	mov	sp, r7
200027de:	b00c      	add	sp, #48	; 0x30
200027e0:	bd80      	pop	{r7, pc}
200027e2:	46c0      	nop			; (mov r8, r8)
200027e4:	200051b4 			; <UNDEFINED> instruction: 0x200051b4
200027e8:	200094cc 	andcs	r9, r0, ip, asr #9
200027ec:	2000512c 	andcs	r5, r0, ip, lsr #2
200027f0:	20005098 	mulcs	r0, r8, r0
200027f4:	20009454 	andcs	r9, r0, r4, asr r4
200027f8:	20005128 	andcs	r5, r0, r8, lsr #2
200027fc:	200051c8 	andcs	r5, r0, r8, asr #3
20002800:	200093dc 	ldrdcs	r9, [r0], -ip
20002804:	200051b0 			; <UNDEFINED> instruction: 0x200051b0
20002808:	20005100 	andcs	r5, r0, r0, lsl #2
2000280c:	20009634 	andcs	r9, r0, r4, lsr r6
20002810:	200051c0 	andcs	r5, r0, r0, asr #3
20002814:	20005164 	andcs	r5, r0, r4, ror #2
20002818:	200095bc 			; <UNDEFINED> instruction: 0x200095bc
2000281c:	20005124 	andcs	r5, r0, r4, lsr #2
20002820:	20005118 	andcs	r5, r0, r8, lsl r1
20002824:	20009544 	andcs	r9, r0, r4, asr #10
20002828:	200051d8 	ldrdcs	r5, [r0], -r8
2000282c:	200050c0 	andcs	r5, r0, r0, asr #1
20002830:	2000979c 	mulcs	r0, ip, r7
20002834:	200050bc 	strhcs	r5, [r0], -ip
20002838:	2000510c 	andcs	r5, r0, ip, lsl #2
2000283c:	20009724 	andcs	r9, r0, r4, lsr #14
20002840:	200050d8 	ldrdcs	r5, [r0], -r8
20002844:	200051a0 	andcs	r5, r0, r0, lsr #3
20002848:	200096ac 	andcs	r9, r0, ip, lsr #13
2000284c:	200051c4 	andcs	r5, r0, r4, asr #3
20002850:	200050a4 	andcs	r5, r0, r4, lsr #1
20002854:	20009904 	andcs	r9, r0, r4, lsl #18
20002858:	200051d4 	ldrdcs	r5, [r0], -r4
2000285c:	2000513c 	andcs	r5, r0, ip, lsr r1
20002860:	2000988c 	andcs	r9, r0, ip, lsl #17
20002864:	20005148 	andcs	r5, r0, r8, asr #2
20002868:	20005130 	andcs	r5, r0, r0, lsr r1
2000286c:	20009814 	andcs	r9, r0, r4, lsl r8
20002870:	200051ac 	andcs	r5, r0, ip, lsr #3

20002874 <init_flame>:
	
void init_flame( GameObject *flameObj ) {
20002874:	b590      	push	{r4, r7, lr}
20002876:	b083      	sub	sp, #12
20002878:	af00      	add	r7, sp, #0
2000287a:	6078      	str	r0, [r7, #4]
	static int firstTime = 1;
	if (firstTime) {
2000287c:	4b29      	ldr	r3, [pc, #164]	; (20002924 <init_flame+0xb0>)
2000287e:	681b      	ldr	r3, [r3, #0]
20002880:	2b00      	cmp	r3, #0
20002882:	d03b      	beq.n	200028fc <init_flame+0x88>
		initSprites();
20002884:	f7ff ff22 	bl	200026cc <initSprites>
		firstTime = 0;			
20002888:	4b26      	ldr	r3, [pc, #152]	; (20002924 <init_flame+0xb0>)
2000288a:	2200      	movs	r2, #0
2000288c:	601a      	str	r2, [r3, #0]

		flameImages[0] = flame1Image;
2000288e:	4b26      	ldr	r3, [pc, #152]	; (20002928 <init_flame+0xb4>)
20002890:	4a26      	ldr	r2, [pc, #152]	; (2000292c <init_flame+0xb8>)
20002892:	ca13      	ldmia	r2!, {r0, r1, r4}
20002894:	c313      	stmia	r3!, {r0, r1, r4}
		flameImages[1] = flame2Image;
20002896:	4b24      	ldr	r3, [pc, #144]	; (20002928 <init_flame+0xb4>)
20002898:	4a25      	ldr	r2, [pc, #148]	; (20002930 <init_flame+0xbc>)
2000289a:	330c      	adds	r3, #12
2000289c:	ca13      	ldmia	r2!, {r0, r1, r4}
2000289e:	c313      	stmia	r3!, {r0, r1, r4}
		flameImages[2] = flame3Image;
200028a0:	4b21      	ldr	r3, [pc, #132]	; (20002928 <init_flame+0xb4>)
200028a2:	4a24      	ldr	r2, [pc, #144]	; (20002934 <init_flame+0xc0>)
200028a4:	3318      	adds	r3, #24
200028a6:	ca13      	ldmia	r2!, {r0, r1, r4}
200028a8:	c313      	stmia	r3!, {r0, r1, r4}
		flameImages[3] = flame4Image;
200028aa:	4b1f      	ldr	r3, [pc, #124]	; (20002928 <init_flame+0xb4>)
200028ac:	4a22      	ldr	r2, [pc, #136]	; (20002938 <init_flame+0xc4>)
200028ae:	3324      	adds	r3, #36	; 0x24
200028b0:	ca13      	ldmia	r2!, {r0, r1, r4}
200028b2:	c313      	stmia	r3!, {r0, r1, r4}
		
		load_image(&flameImages[0], flame1Black, flame1Gray, flame1Light);
200028b4:	4b21      	ldr	r3, [pc, #132]	; (2000293c <init_flame+0xc8>)
200028b6:	6819      	ldr	r1, [r3, #0]
200028b8:	4b21      	ldr	r3, [pc, #132]	; (20002940 <init_flame+0xcc>)
200028ba:	681a      	ldr	r2, [r3, #0]
200028bc:	4b21      	ldr	r3, [pc, #132]	; (20002944 <init_flame+0xd0>)
200028be:	681b      	ldr	r3, [r3, #0]
200028c0:	4819      	ldr	r0, [pc, #100]	; (20002928 <init_flame+0xb4>)
200028c2:	f001 fa11 	bl	20003ce8 <load_image>
		load_image(&flameImages[1], flame2Black, flame2Gray, flame2Light);
200028c6:	4b20      	ldr	r3, [pc, #128]	; (20002948 <init_flame+0xd4>)
200028c8:	6819      	ldr	r1, [r3, #0]
200028ca:	4b20      	ldr	r3, [pc, #128]	; (2000294c <init_flame+0xd8>)
200028cc:	681a      	ldr	r2, [r3, #0]
200028ce:	4b20      	ldr	r3, [pc, #128]	; (20002950 <init_flame+0xdc>)
200028d0:	681b      	ldr	r3, [r3, #0]
200028d2:	4820      	ldr	r0, [pc, #128]	; (20002954 <init_flame+0xe0>)
200028d4:	f001 fa08 	bl	20003ce8 <load_image>
		load_image(&flameImages[2], flame3Black, flame3Gray, flame3Light);
200028d8:	4b1f      	ldr	r3, [pc, #124]	; (20002958 <init_flame+0xe4>)
200028da:	6819      	ldr	r1, [r3, #0]
200028dc:	4b1f      	ldr	r3, [pc, #124]	; (2000295c <init_flame+0xe8>)
200028de:	681a      	ldr	r2, [r3, #0]
200028e0:	4b1f      	ldr	r3, [pc, #124]	; (20002960 <init_flame+0xec>)
200028e2:	681b      	ldr	r3, [r3, #0]
200028e4:	481f      	ldr	r0, [pc, #124]	; (20002964 <init_flame+0xf0>)
200028e6:	f001 f9ff 	bl	20003ce8 <load_image>
		load_image(&flameImages[3], flame4Black, flame4Gray, flame4Light);
200028ea:	4b1f      	ldr	r3, [pc, #124]	; (20002968 <init_flame+0xf4>)
200028ec:	6819      	ldr	r1, [r3, #0]
200028ee:	4b1f      	ldr	r3, [pc, #124]	; (2000296c <init_flame+0xf8>)
200028f0:	681a      	ldr	r2, [r3, #0]
200028f2:	4b1f      	ldr	r3, [pc, #124]	; (20002970 <init_flame+0xfc>)
200028f4:	681b      	ldr	r3, [r3, #0]
200028f6:	481f      	ldr	r0, [pc, #124]	; (20002974 <init_flame+0x100>)
200028f8:	f001 f9f6 	bl	20003ce8 <load_image>
}
	
	flameObj->images = flameImages;
200028fc:	687b      	ldr	r3, [r7, #4]
200028fe:	4a0a      	ldr	r2, [pc, #40]	; (20002928 <init_flame+0xb4>)
20002900:	601a      	str	r2, [r3, #0]

	flameObj->current_frame = 0;
20002902:	687b      	ldr	r3, [r7, #4]
20002904:	2200      	movs	r2, #0
20002906:	615a      	str	r2, [r3, #20]
	flameObj->n_frames = 4;
20002908:	687b      	ldr	r3, [r7, #4]
2000290a:	2204      	movs	r2, #4
2000290c:	619a      	str	r2, [r3, #24]
	flameObj->animation_speed = 1;
2000290e:	687b      	ldr	r3, [r7, #4]
20002910:	2201      	movs	r2, #1
20002912:	61da      	str	r2, [r3, #28]
	flameObj->animation_counter = 0;
20002914:	687b      	ldr	r3, [r7, #4]
20002916:	2200      	movs	r2, #0
20002918:	621a      	str	r2, [r3, #32]
}
2000291a:	46c0      	nop			; (mov r8, r8)
2000291c:	46bd      	mov	sp, r7
2000291e:	b003      	add	sp, #12
20002920:	bd90      	pop	{r4, r7, pc}
20002922:	46c0      	nop			; (mov r8, r8)
20002924:	2000997c 	andcs	r9, r0, ip, ror r9
20002928:	20005170 	andcs	r5, r0, r0, ror r1
2000292c:	20005158 	andcs	r5, r0, r8, asr r1
20002930:	200050b0 	strhcs	r5, [r0], -r0
20002934:	200050cc 	andcs	r5, r0, ip, asr #1
20002938:	2000514c 	andcs	r5, r0, ip, asr #2
2000293c:	200051b0 			; <UNDEFINED> instruction: 0x200051b0
20002940:	20005128 	andcs	r5, r0, r8, lsr #2
20002944:	2000512c 	andcs	r5, r0, ip, lsr #2
20002948:	200051d8 	ldrdcs	r5, [r0], -r8
2000294c:	20005124 	andcs	r5, r0, r4, lsr #2
20002950:	200051c0 	andcs	r5, r0, r0, asr #3
20002954:	2000517c 	andcs	r5, r0, ip, ror r1
20002958:	200051c4 	andcs	r5, r0, r4, asr #3
2000295c:	200050d8 	ldrdcs	r5, [r0], -r8
20002960:	200050bc 	strhcs	r5, [r0], -ip
20002964:	20005188 	andcs	r5, r0, r8, lsl #3
20002968:	200051ac 	andcs	r5, r0, ip, lsr #3
2000296c:	20005148 	andcs	r5, r0, r8, asr #2
20002970:	200051d4 	ldrdcs	r5, [r0], -r4
20002974:	20005194 	mulcs	r0, r4, r1

20002978 <initSprites>:
Image boom12Image;
Image boom13Image;
Image boom14Image;
Image boom15Image;
Image boomImages[15];
static void initSprites( void ) {	
20002978:	b580      	push	{r7, lr}
2000297a:	b092      	sub	sp, #72	; 0x48
2000297c:	af00      	add	r7, sp, #0
	
	sprite *pointer11 = &tempBoomLight;
2000297e:	4b65      	ldr	r3, [pc, #404]	; (20002b14 <initSprites+0x19c>)
20002980:	647b      	str	r3, [r7, #68]	; 0x44
	load_sprite(pointer11, boom1_light_bits, boom1_black_width, boom1_black_height);
20002982:	4965      	ldr	r1, [pc, #404]	; (20002b18 <initSprites+0x1a0>)
20002984:	6c78      	ldr	r0, [r7, #68]	; 0x44
20002986:	2337      	movs	r3, #55	; 0x37
20002988:	226a      	movs	r2, #106	; 0x6a
2000298a:	f001 f9c1 	bl	20003d10 <load_sprite>
	boom1Light = pointer11;
2000298e:	4b63      	ldr	r3, [pc, #396]	; (20002b1c <initSprites+0x1a4>)
20002990:	6c7a      	ldr	r2, [r7, #68]	; 0x44
20002992:	601a      	str	r2, [r3, #0]
	sprite *pointer12 = &tempBoomGray;
20002994:	4b62      	ldr	r3, [pc, #392]	; (20002b20 <initSprites+0x1a8>)
20002996:	643b      	str	r3, [r7, #64]	; 0x40
	load_sprite(pointer12, boom1_gray_bits, boom1_black_width, boom1_black_height);
20002998:	4962      	ldr	r1, [pc, #392]	; (20002b24 <initSprites+0x1ac>)
2000299a:	6c38      	ldr	r0, [r7, #64]	; 0x40
2000299c:	2337      	movs	r3, #55	; 0x37
2000299e:	226a      	movs	r2, #106	; 0x6a
200029a0:	f001 f9b6 	bl	20003d10 <load_sprite>
	boom1Gray = pointer12;
200029a4:	4b60      	ldr	r3, [pc, #384]	; (20002b28 <initSprites+0x1b0>)
200029a6:	6c3a      	ldr	r2, [r7, #64]	; 0x40
200029a8:	601a      	str	r2, [r3, #0]
	sprite *pointer13 = &tempBoomBlack;
200029aa:	4b60      	ldr	r3, [pc, #384]	; (20002b2c <initSprites+0x1b4>)
200029ac:	63fb      	str	r3, [r7, #60]	; 0x3c
	load_sprite(pointer13, boom1_black_bits, boom1_black_width, boom1_black_height);
200029ae:	4960      	ldr	r1, [pc, #384]	; (20002b30 <initSprites+0x1b8>)
200029b0:	6bf8      	ldr	r0, [r7, #60]	; 0x3c
200029b2:	2337      	movs	r3, #55	; 0x37
200029b4:	226a      	movs	r2, #106	; 0x6a
200029b6:	f001 f9ab 	bl	20003d10 <load_sprite>
	boom1Black = pointer13;	
200029ba:	4b5e      	ldr	r3, [pc, #376]	; (20002b34 <initSprites+0x1bc>)
200029bc:	6bfa      	ldr	r2, [r7, #60]	; 0x3c
200029be:	601a      	str	r2, [r3, #0]
	
	sprite *pointer14 = &tempBoom2Light;
200029c0:	4b5d      	ldr	r3, [pc, #372]	; (20002b38 <initSprites+0x1c0>)
200029c2:	63bb      	str	r3, [r7, #56]	; 0x38
	load_sprite(pointer14, boom2_light_bits, boom2_black_width, boom2_black_height);
200029c4:	495d      	ldr	r1, [pc, #372]	; (20002b3c <initSprites+0x1c4>)
200029c6:	6bb8      	ldr	r0, [r7, #56]	; 0x38
200029c8:	2337      	movs	r3, #55	; 0x37
200029ca:	226a      	movs	r2, #106	; 0x6a
200029cc:	f001 f9a0 	bl	20003d10 <load_sprite>
	boom2Light = pointer14;
200029d0:	4b5b      	ldr	r3, [pc, #364]	; (20002b40 <initSprites+0x1c8>)
200029d2:	6bba      	ldr	r2, [r7, #56]	; 0x38
200029d4:	601a      	str	r2, [r3, #0]
	sprite *pointer15 = &tempBoom2Gray;
200029d6:	4b5b      	ldr	r3, [pc, #364]	; (20002b44 <initSprites+0x1cc>)
200029d8:	637b      	str	r3, [r7, #52]	; 0x34
	load_sprite(pointer15, boom2_gray_bits, boom2_black_width, boom2_black_height);
200029da:	495b      	ldr	r1, [pc, #364]	; (20002b48 <initSprites+0x1d0>)
200029dc:	6b78      	ldr	r0, [r7, #52]	; 0x34
200029de:	2337      	movs	r3, #55	; 0x37
200029e0:	226a      	movs	r2, #106	; 0x6a
200029e2:	f001 f995 	bl	20003d10 <load_sprite>
	boom2Gray = pointer15;
200029e6:	4b59      	ldr	r3, [pc, #356]	; (20002b4c <initSprites+0x1d4>)
200029e8:	6b7a      	ldr	r2, [r7, #52]	; 0x34
200029ea:	601a      	str	r2, [r3, #0]
	sprite *pointer16 = &tempBoom2Black;
200029ec:	4b58      	ldr	r3, [pc, #352]	; (20002b50 <initSprites+0x1d8>)
200029ee:	633b      	str	r3, [r7, #48]	; 0x30
	load_sprite(pointer16, boom2_black_bits, boom2_black_width, boom2_black_height);
200029f0:	4958      	ldr	r1, [pc, #352]	; (20002b54 <initSprites+0x1dc>)
200029f2:	6b38      	ldr	r0, [r7, #48]	; 0x30
200029f4:	2337      	movs	r3, #55	; 0x37
200029f6:	226a      	movs	r2, #106	; 0x6a
200029f8:	f001 f98a 	bl	20003d10 <load_sprite>
	boom2Black = pointer16;
200029fc:	4b56      	ldr	r3, [pc, #344]	; (20002b58 <initSprites+0x1e0>)
200029fe:	6b3a      	ldr	r2, [r7, #48]	; 0x30
20002a00:	601a      	str	r2, [r3, #0]
	
	
	sprite *finalPointer = &tempBoom3Light;
20002a02:	4b56      	ldr	r3, [pc, #344]	; (20002b5c <initSprites+0x1e4>)
20002a04:	62fb      	str	r3, [r7, #44]	; 0x2c
	load_sprite(finalPointer, boom3_light_bits, boom3_black_width, boom3_black_height);
20002a06:	4956      	ldr	r1, [pc, #344]	; (20002b60 <initSprites+0x1e8>)
20002a08:	6af8      	ldr	r0, [r7, #44]	; 0x2c
20002a0a:	2337      	movs	r3, #55	; 0x37
20002a0c:	226a      	movs	r2, #106	; 0x6a
20002a0e:	f001 f97f 	bl	20003d10 <load_sprite>
	boom3Light = finalPointer;
20002a12:	4b54      	ldr	r3, [pc, #336]	; (20002b64 <initSprites+0x1ec>)
20002a14:	6afa      	ldr	r2, [r7, #44]	; 0x2c
20002a16:	601a      	str	r2, [r3, #0]
	sprite *pointer17 = &tempBoom3Gray;
20002a18:	4b53      	ldr	r3, [pc, #332]	; (20002b68 <initSprites+0x1f0>)
20002a1a:	62bb      	str	r3, [r7, #40]	; 0x28
	load_sprite(pointer17, boom3_gray_bits, boom3_black_width, boom3_black_height);
20002a1c:	4953      	ldr	r1, [pc, #332]	; (20002b6c <initSprites+0x1f4>)
20002a1e:	6ab8      	ldr	r0, [r7, #40]	; 0x28
20002a20:	2337      	movs	r3, #55	; 0x37
20002a22:	226a      	movs	r2, #106	; 0x6a
20002a24:	f001 f974 	bl	20003d10 <load_sprite>
	boom3Gray = pointer17;
20002a28:	4b51      	ldr	r3, [pc, #324]	; (20002b70 <initSprites+0x1f8>)
20002a2a:	6aba      	ldr	r2, [r7, #40]	; 0x28
20002a2c:	601a      	str	r2, [r3, #0]
	sprite *pointer18 = &tempBoom3Black;
20002a2e:	4b51      	ldr	r3, [pc, #324]	; (20002b74 <initSprites+0x1fc>)
20002a30:	627b      	str	r3, [r7, #36]	; 0x24
	load_sprite(pointer18, boom3_black_bits, boom3_black_width, boom3_black_height);
20002a32:	4951      	ldr	r1, [pc, #324]	; (20002b78 <initSprites+0x200>)
20002a34:	6a78      	ldr	r0, [r7, #36]	; 0x24
20002a36:	2337      	movs	r3, #55	; 0x37
20002a38:	226a      	movs	r2, #106	; 0x6a
20002a3a:	f001 f969 	bl	20003d10 <load_sprite>
	boom3Black = pointer18;	
20002a3e:	4b4f      	ldr	r3, [pc, #316]	; (20002b7c <initSprites+0x204>)
20002a40:	6a7a      	ldr	r2, [r7, #36]	; 0x24
20002a42:	601a      	str	r2, [r3, #0]
	
	sprite *pointer19 = &tempBoom4Light;
20002a44:	4b4e      	ldr	r3, [pc, #312]	; (20002b80 <initSprites+0x208>)
20002a46:	623b      	str	r3, [r7, #32]
	load_sprite(pointer19, boom4_light_bits, boom4_black_width, boom4_black_height);
20002a48:	494e      	ldr	r1, [pc, #312]	; (20002b84 <initSprites+0x20c>)
20002a4a:	6a38      	ldr	r0, [r7, #32]
20002a4c:	2337      	movs	r3, #55	; 0x37
20002a4e:	226a      	movs	r2, #106	; 0x6a
20002a50:	f001 f95e 	bl	20003d10 <load_sprite>
	boom4Light = pointer19;
20002a54:	4b4c      	ldr	r3, [pc, #304]	; (20002b88 <initSprites+0x210>)
20002a56:	6a3a      	ldr	r2, [r7, #32]
20002a58:	601a      	str	r2, [r3, #0]
	sprite *pointer20 = &tempBoom4Gray;
20002a5a:	4b4c      	ldr	r3, [pc, #304]	; (20002b8c <initSprites+0x214>)
20002a5c:	61fb      	str	r3, [r7, #28]
	load_sprite(pointer20, boom4_gray_bits, boom4_black_width, boom4_black_height);
20002a5e:	494c      	ldr	r1, [pc, #304]	; (20002b90 <initSprites+0x218>)
20002a60:	69f8      	ldr	r0, [r7, #28]
20002a62:	2337      	movs	r3, #55	; 0x37
20002a64:	226a      	movs	r2, #106	; 0x6a
20002a66:	f001 f953 	bl	20003d10 <load_sprite>
	boom4Gray = pointer20;
20002a6a:	4b4a      	ldr	r3, [pc, #296]	; (20002b94 <initSprites+0x21c>)
20002a6c:	69fa      	ldr	r2, [r7, #28]
20002a6e:	601a      	str	r2, [r3, #0]
	sprite *pointer21 = &tempBoom4Black;
20002a70:	4b49      	ldr	r3, [pc, #292]	; (20002b98 <initSprites+0x220>)
20002a72:	61bb      	str	r3, [r7, #24]
	load_sprite(pointer21, boom4_black_bits, boom4_black_width, boom4_black_height);
20002a74:	4949      	ldr	r1, [pc, #292]	; (20002b9c <initSprites+0x224>)
20002a76:	69b8      	ldr	r0, [r7, #24]
20002a78:	2337      	movs	r3, #55	; 0x37
20002a7a:	226a      	movs	r2, #106	; 0x6a
20002a7c:	f001 f948 	bl	20003d10 <load_sprite>
	boom4Black = pointer21;	
20002a80:	4b47      	ldr	r3, [pc, #284]	; (20002ba0 <initSprites+0x228>)
20002a82:	69ba      	ldr	r2, [r7, #24]
20002a84:	601a      	str	r2, [r3, #0]
	
	sprite *pointer22 = &tempBoom5Light;
20002a86:	4b47      	ldr	r3, [pc, #284]	; (20002ba4 <initSprites+0x22c>)
20002a88:	617b      	str	r3, [r7, #20]
	load_sprite(pointer22, boom5_light_bits, boom5_black_width, boom5_black_height);
20002a8a:	4947      	ldr	r1, [pc, #284]	; (20002ba8 <initSprites+0x230>)
20002a8c:	6978      	ldr	r0, [r7, #20]
20002a8e:	2337      	movs	r3, #55	; 0x37
20002a90:	226a      	movs	r2, #106	; 0x6a
20002a92:	f001 f93d 	bl	20003d10 <load_sprite>
	boom5Light = pointer22;
20002a96:	4b45      	ldr	r3, [pc, #276]	; (20002bac <initSprites+0x234>)
20002a98:	697a      	ldr	r2, [r7, #20]
20002a9a:	601a      	str	r2, [r3, #0]
	sprite *pointer23 = &tempBoom5Gray;
20002a9c:	4b44      	ldr	r3, [pc, #272]	; (20002bb0 <initSprites+0x238>)
20002a9e:	613b      	str	r3, [r7, #16]
	load_sprite(pointer23, boom5_gray_bits, boom5_black_width, boom5_black_height);
20002aa0:	4944      	ldr	r1, [pc, #272]	; (20002bb4 <initSprites+0x23c>)
20002aa2:	6938      	ldr	r0, [r7, #16]
20002aa4:	2337      	movs	r3, #55	; 0x37
20002aa6:	226a      	movs	r2, #106	; 0x6a
20002aa8:	f001 f932 	bl	20003d10 <load_sprite>
	boom5Gray = pointer23;
20002aac:	4b42      	ldr	r3, [pc, #264]	; (20002bb8 <initSprites+0x240>)
20002aae:	693a      	ldr	r2, [r7, #16]
20002ab0:	601a      	str	r2, [r3, #0]
	sprite *pointer24 = &tempBoom5Black;
20002ab2:	4b42      	ldr	r3, [pc, #264]	; (20002bbc <initSprites+0x244>)
20002ab4:	60fb      	str	r3, [r7, #12]
	load_sprite(pointer24, boom5_black_bits, boom5_black_width, boom5_black_height);
20002ab6:	4942      	ldr	r1, [pc, #264]	; (20002bc0 <initSprites+0x248>)
20002ab8:	68f8      	ldr	r0, [r7, #12]
20002aba:	2337      	movs	r3, #55	; 0x37
20002abc:	226a      	movs	r2, #106	; 0x6a
20002abe:	f001 f927 	bl	20003d10 <load_sprite>
	boom5Black = pointer24;
20002ac2:	4b40      	ldr	r3, [pc, #256]	; (20002bc4 <initSprites+0x24c>)
20002ac4:	68fa      	ldr	r2, [r7, #12]
20002ac6:	601a      	str	r2, [r3, #0]

	sprite *pointer25 = &tempBoom6Light;
20002ac8:	4b3f      	ldr	r3, [pc, #252]	; (20002bc8 <initSprites+0x250>)
20002aca:	60bb      	str	r3, [r7, #8]
	load_sprite(pointer25, boom6_light_bits, boom6_black_width, boom6_black_height);
20002acc:	493f      	ldr	r1, [pc, #252]	; (20002bcc <initSprites+0x254>)
20002ace:	68b8      	ldr	r0, [r7, #8]
20002ad0:	2337      	movs	r3, #55	; 0x37
20002ad2:	226a      	movs	r2, #106	; 0x6a
20002ad4:	f001 f91c 	bl	20003d10 <load_sprite>
	boom6Light = pointer25;
20002ad8:	4b3d      	ldr	r3, [pc, #244]	; (20002bd0 <initSprites+0x258>)
20002ada:	68ba      	ldr	r2, [r7, #8]
20002adc:	601a      	str	r2, [r3, #0]
	sprite *pointer26 = &tempBoom6Gray;
20002ade:	4b3d      	ldr	r3, [pc, #244]	; (20002bd4 <initSprites+0x25c>)
20002ae0:	607b      	str	r3, [r7, #4]
	load_sprite(pointer26, boom6_gray_bits, boom6_black_width, boom6_black_height);
20002ae2:	493d      	ldr	r1, [pc, #244]	; (20002bd8 <initSprites+0x260>)
20002ae4:	6878      	ldr	r0, [r7, #4]
20002ae6:	2337      	movs	r3, #55	; 0x37
20002ae8:	226a      	movs	r2, #106	; 0x6a
20002aea:	f001 f911 	bl	20003d10 <load_sprite>
	boom6Gray = pointer26;
20002aee:	4b3b      	ldr	r3, [pc, #236]	; (20002bdc <initSprites+0x264>)
20002af0:	687a      	ldr	r2, [r7, #4]
20002af2:	601a      	str	r2, [r3, #0]
	sprite *pointer27 = &tempBoom6Black;
20002af4:	4b3a      	ldr	r3, [pc, #232]	; (20002be0 <initSprites+0x268>)
20002af6:	603b      	str	r3, [r7, #0]
	load_sprite(pointer27, boom6_black_bits, boom6_black_width, boom6_black_height);
20002af8:	493a      	ldr	r1, [pc, #232]	; (20002be4 <initSprites+0x26c>)
20002afa:	6838      	ldr	r0, [r7, #0]
20002afc:	2337      	movs	r3, #55	; 0x37
20002afe:	226a      	movs	r2, #106	; 0x6a
20002b00:	f001 f906 	bl	20003d10 <load_sprite>
	boom6Black = pointer27;
20002b04:	4b38      	ldr	r3, [pc, #224]	; (20002be8 <initSprites+0x270>)
20002b06:	683a      	ldr	r2, [r7, #0]
20002b08:	601a      	str	r2, [r3, #0]
}
20002b0a:	46c0      	nop			; (mov r8, r8)
20002b0c:	46bd      	mov	sp, r7
20002b0e:	b012      	add	sp, #72	; 0x48
20002b10:	bd80      	pop	{r7, pc}
20002b12:	46c0      	nop			; (mov r8, r8)
20002b14:	200051f4 	strdcs	r5, [r0], -r4
20002b18:	20009f88 	andcs	r9, r0, r8, lsl #31
20002b1c:	20005464 	andcs	r5, r0, r4, ror #8
20002b20:	200053b4 			; <UNDEFINED> instruction: 0x200053b4
20002b24:	20009c84 	andcs	r9, r0, r4, lsl #25
20002b28:	20005400 	andcs	r5, r0, r0, lsl #8
20002b2c:	2000547c 	andcs	r5, r0, ip, ror r4
20002b30:	20009980 	andcs	r9, r0, r0, lsl #19
20002b34:	200053c4 	andcs	r5, r0, r4, asr #7
20002b38:	2000544c 	andcs	r5, r0, ip, asr #8
20002b3c:	2000a894 	mulcs	r0, r4, r8
20002b40:	20005478 	andcs	r5, r0, r8, ror r4
20002b44:	200053d4 	ldrdcs	r5, [r0], -r4
20002b48:	2000a590 	mulcs	r0, r0, r5
20002b4c:	200053c0 	andcs	r5, r0, r0, asr #7
20002b50:	200051e8 	andcs	r5, r0, r8, ror #3
20002b54:	2000a28c 	andcs	sl, r0, ip, lsl #5
20002b58:	20005474 	andcs	r5, r0, r4, ror r4
20002b5c:	200052c0 	andcs	r5, r0, r0, asr #5
20002b60:	2000b1a0 	andcs	fp, r0, r0, lsr #3
20002b64:	20005224 	andcs	r5, r0, r4, lsr #4
20002b68:	200053ec 	andcs	r5, r0, ip, ror #7
20002b6c:	2000ae9c 	mulcs	r0, ip, lr
20002b70:	2000527c 	andcs	r5, r0, ip, ror r2
20002b74:	20005398 	mulcs	r0, r8, r3
20002b78:	2000ab98 	mulcs	r0, r8, fp
20002b7c:	20005228 	andcs	r5, r0, r8, lsr #4
20002b80:	20005280 	andcs	r5, r0, r0, lsl #5
20002b84:	2000baac 	andcs	fp, r0, ip, lsr #21
20002b88:	20005248 	andcs	r5, r0, r8, asr #4
20002b8c:	200053e0 	andcs	r5, r0, r0, ror #7
20002b90:	2000b7a8 	andcs	fp, r0, r8, lsr #15
20002b94:	200053f8 	strdcs	r5, [r0], -r8
20002b98:	20005440 	andcs	r5, r0, r0, asr #8
20002b9c:	2000b4a4 	andcs	fp, r0, r4, lsr #9
20002ba0:	200053a4 	andcs	r5, r0, r4, lsr #7
20002ba4:	20005434 	andcs	r5, r0, r4, lsr r4
20002ba8:	2000c3b8 			; <UNDEFINED> instruction: 0x2000c3b8
20002bac:	200053fc 	strdcs	r5, [r0], -ip
20002bb0:	200051dc 	ldrdcs	r5, [r0], -ip
20002bb4:	2000c0b4 	strhcs	ip, [r0], -r4
20002bb8:	2000528c 	andcs	r5, r0, ip, lsl #5
20002bbc:	20005458 	andcs	r5, r0, r8, asr r4
20002bc0:	2000bdb0 			; <UNDEFINED> instruction: 0x2000bdb0
20002bc4:	20005244 	andcs	r5, r0, r4, asr #4
20002bc8:	20005200 	andcs	r5, r0, r0, lsl #4
20002bcc:	2000ccc4 	andcs	ip, r0, r4, asr #25
20002bd0:	200052dc 	ldrdcs	r5, [r0], -ip
20002bd4:	200053c8 	andcs	r5, r0, r8, asr #7
20002bd8:	2000c9c0 	andcs	ip, r0, r0, asr #19
20002bdc:	200052cc 	andcs	r5, r0, ip, asr #5
20002be0:	200053a8 	andcs	r5, r0, r8, lsr #7
20002be4:	2000c6bc 			; <UNDEFINED> instruction: 0x2000c6bc
20002be8:	20005394 	mulcs	r0, r4, r3

20002bec <init_boom>:
	
void init_boom( GameObject *boomObj ) {
20002bec:	b590      	push	{r4, r7, lr}
20002bee:	b083      	sub	sp, #12
20002bf0:	af00      	add	r7, sp, #0
20002bf2:	6078      	str	r0, [r7, #4]
	static int firstTime = 1;
	if (firstTime) {
20002bf4:	4b7a      	ldr	r3, [pc, #488]	; (20002de0 <init_boom+0x1f4>)
20002bf6:	681b      	ldr	r3, [r3, #0]
20002bf8:	2b00      	cmp	r3, #0
20002bfa:	d100      	bne.n	20002bfe <init_boom+0x12>
20002bfc:	e0dd      	b.n	20002dba <init_boom+0x1ce>
		initSprites();
20002bfe:	f7ff febb 	bl	20002978 <initSprites>
		firstTime = 0;			
20002c02:	4b77      	ldr	r3, [pc, #476]	; (20002de0 <init_boom+0x1f4>)
20002c04:	2200      	movs	r2, #0
20002c06:	601a      	str	r2, [r3, #0]

		boomImages[0] = boom1Image;
20002c08:	4b76      	ldr	r3, [pc, #472]	; (20002de4 <init_boom+0x1f8>)
20002c0a:	4a77      	ldr	r2, [pc, #476]	; (20002de8 <init_boom+0x1fc>)
20002c0c:	ca13      	ldmia	r2!, {r0, r1, r4}
20002c0e:	c313      	stmia	r3!, {r0, r1, r4}
		boomImages[1] = boom2Image;
20002c10:	4b74      	ldr	r3, [pc, #464]	; (20002de4 <init_boom+0x1f8>)
20002c12:	4a76      	ldr	r2, [pc, #472]	; (20002dec <init_boom+0x200>)
20002c14:	330c      	adds	r3, #12
20002c16:	ca13      	ldmia	r2!, {r0, r1, r4}
20002c18:	c313      	stmia	r3!, {r0, r1, r4}
		boomImages[2] = boom3Image;
20002c1a:	4b72      	ldr	r3, [pc, #456]	; (20002de4 <init_boom+0x1f8>)
20002c1c:	4a74      	ldr	r2, [pc, #464]	; (20002df0 <init_boom+0x204>)
20002c1e:	3318      	adds	r3, #24
20002c20:	ca13      	ldmia	r2!, {r0, r1, r4}
20002c22:	c313      	stmia	r3!, {r0, r1, r4}
		boomImages[3] = boom4Image;
20002c24:	4b6f      	ldr	r3, [pc, #444]	; (20002de4 <init_boom+0x1f8>)
20002c26:	4a73      	ldr	r2, [pc, #460]	; (20002df4 <init_boom+0x208>)
20002c28:	3324      	adds	r3, #36	; 0x24
20002c2a:	ca13      	ldmia	r2!, {r0, r1, r4}
20002c2c:	c313      	stmia	r3!, {r0, r1, r4}
		boomImages[4] = boom5Image;
20002c2e:	4b6d      	ldr	r3, [pc, #436]	; (20002de4 <init_boom+0x1f8>)
20002c30:	4a71      	ldr	r2, [pc, #452]	; (20002df8 <init_boom+0x20c>)
20002c32:	3330      	adds	r3, #48	; 0x30
20002c34:	ca13      	ldmia	r2!, {r0, r1, r4}
20002c36:	c313      	stmia	r3!, {r0, r1, r4}
		boomImages[5] = boom6Image;
20002c38:	4b6a      	ldr	r3, [pc, #424]	; (20002de4 <init_boom+0x1f8>)
20002c3a:	4a70      	ldr	r2, [pc, #448]	; (20002dfc <init_boom+0x210>)
20002c3c:	333c      	adds	r3, #60	; 0x3c
20002c3e:	ca13      	ldmia	r2!, {r0, r1, r4}
20002c40:	c313      	stmia	r3!, {r0, r1, r4}
		boomImages[6] = boom7Image;
20002c42:	4b68      	ldr	r3, [pc, #416]	; (20002de4 <init_boom+0x1f8>)
20002c44:	4a6e      	ldr	r2, [pc, #440]	; (20002e00 <init_boom+0x214>)
20002c46:	3348      	adds	r3, #72	; 0x48
20002c48:	ca13      	ldmia	r2!, {r0, r1, r4}
20002c4a:	c313      	stmia	r3!, {r0, r1, r4}
		boomImages[7] = boom8Image;
20002c4c:	4b65      	ldr	r3, [pc, #404]	; (20002de4 <init_boom+0x1f8>)
20002c4e:	4a6d      	ldr	r2, [pc, #436]	; (20002e04 <init_boom+0x218>)
20002c50:	3354      	adds	r3, #84	; 0x54
20002c52:	ca13      	ldmia	r2!, {r0, r1, r4}
20002c54:	c313      	stmia	r3!, {r0, r1, r4}
		boomImages[8] = boom9Image;
20002c56:	4b63      	ldr	r3, [pc, #396]	; (20002de4 <init_boom+0x1f8>)
20002c58:	4a6b      	ldr	r2, [pc, #428]	; (20002e08 <init_boom+0x21c>)
20002c5a:	3360      	adds	r3, #96	; 0x60
20002c5c:	ca13      	ldmia	r2!, {r0, r1, r4}
20002c5e:	c313      	stmia	r3!, {r0, r1, r4}
		boomImages[9] = boom10Image;
20002c60:	4b60      	ldr	r3, [pc, #384]	; (20002de4 <init_boom+0x1f8>)
20002c62:	4a6a      	ldr	r2, [pc, #424]	; (20002e0c <init_boom+0x220>)
20002c64:	336c      	adds	r3, #108	; 0x6c
20002c66:	ca13      	ldmia	r2!, {r0, r1, r4}
20002c68:	c313      	stmia	r3!, {r0, r1, r4}
		boomImages[10] = boom11Image;
20002c6a:	4b5e      	ldr	r3, [pc, #376]	; (20002de4 <init_boom+0x1f8>)
20002c6c:	4a68      	ldr	r2, [pc, #416]	; (20002e10 <init_boom+0x224>)
20002c6e:	3378      	adds	r3, #120	; 0x78
20002c70:	ca13      	ldmia	r2!, {r0, r1, r4}
20002c72:	c313      	stmia	r3!, {r0, r1, r4}
		boomImages[11] = boom12Image;
20002c74:	4b5b      	ldr	r3, [pc, #364]	; (20002de4 <init_boom+0x1f8>)
20002c76:	2284      	movs	r2, #132	; 0x84
20002c78:	4966      	ldr	r1, [pc, #408]	; (20002e14 <init_boom+0x228>)
20002c7a:	189b      	adds	r3, r3, r2
20002c7c:	000a      	movs	r2, r1
20002c7e:	ca13      	ldmia	r2!, {r0, r1, r4}
20002c80:	c313      	stmia	r3!, {r0, r1, r4}
		boomImages[12] = boom13Image;
20002c82:	4b58      	ldr	r3, [pc, #352]	; (20002de4 <init_boom+0x1f8>)
20002c84:	2290      	movs	r2, #144	; 0x90
20002c86:	4964      	ldr	r1, [pc, #400]	; (20002e18 <init_boom+0x22c>)
20002c88:	189b      	adds	r3, r3, r2
20002c8a:	000a      	movs	r2, r1
20002c8c:	ca13      	ldmia	r2!, {r0, r1, r4}
20002c8e:	c313      	stmia	r3!, {r0, r1, r4}
		boomImages[13] = boom14Image;
20002c90:	4b54      	ldr	r3, [pc, #336]	; (20002de4 <init_boom+0x1f8>)
20002c92:	229c      	movs	r2, #156	; 0x9c
20002c94:	4961      	ldr	r1, [pc, #388]	; (20002e1c <init_boom+0x230>)
20002c96:	189b      	adds	r3, r3, r2
20002c98:	000a      	movs	r2, r1
20002c9a:	ca13      	ldmia	r2!, {r0, r1, r4}
20002c9c:	c313      	stmia	r3!, {r0, r1, r4}
		boomImages[14] = boom15Image;
20002c9e:	4b51      	ldr	r3, [pc, #324]	; (20002de4 <init_boom+0x1f8>)
20002ca0:	22a8      	movs	r2, #168	; 0xa8
20002ca2:	495f      	ldr	r1, [pc, #380]	; (20002e20 <init_boom+0x234>)
20002ca4:	189b      	adds	r3, r3, r2
20002ca6:	000a      	movs	r2, r1
20002ca8:	ca13      	ldmia	r2!, {r0, r1, r4}
20002caa:	c313      	stmia	r3!, {r0, r1, r4}
		
		load_image(&boomImages[0], boom1Black, boom1Gray, boom1Light);
20002cac:	4b5d      	ldr	r3, [pc, #372]	; (20002e24 <init_boom+0x238>)
20002cae:	6819      	ldr	r1, [r3, #0]
20002cb0:	4b5d      	ldr	r3, [pc, #372]	; (20002e28 <init_boom+0x23c>)
20002cb2:	681a      	ldr	r2, [r3, #0]
20002cb4:	4b5d      	ldr	r3, [pc, #372]	; (20002e2c <init_boom+0x240>)
20002cb6:	681b      	ldr	r3, [r3, #0]
20002cb8:	484a      	ldr	r0, [pc, #296]	; (20002de4 <init_boom+0x1f8>)
20002cba:	f001 f815 	bl	20003ce8 <load_image>
		load_image(&boomImages[1], boom2Black, boom2Gray, boom2Light);
20002cbe:	4b5c      	ldr	r3, [pc, #368]	; (20002e30 <init_boom+0x244>)
20002cc0:	6819      	ldr	r1, [r3, #0]
20002cc2:	4b5c      	ldr	r3, [pc, #368]	; (20002e34 <init_boom+0x248>)
20002cc4:	681a      	ldr	r2, [r3, #0]
20002cc6:	4b5c      	ldr	r3, [pc, #368]	; (20002e38 <init_boom+0x24c>)
20002cc8:	681b      	ldr	r3, [r3, #0]
20002cca:	485c      	ldr	r0, [pc, #368]	; (20002e3c <init_boom+0x250>)
20002ccc:	f001 f80c 	bl	20003ce8 <load_image>
		load_image(&boomImages[2], boom3Black, boom3Gray, boom3Light);
20002cd0:	4b5b      	ldr	r3, [pc, #364]	; (20002e40 <init_boom+0x254>)
20002cd2:	6819      	ldr	r1, [r3, #0]
20002cd4:	4b5b      	ldr	r3, [pc, #364]	; (20002e44 <init_boom+0x258>)
20002cd6:	681a      	ldr	r2, [r3, #0]
20002cd8:	4b5b      	ldr	r3, [pc, #364]	; (20002e48 <init_boom+0x25c>)
20002cda:	681b      	ldr	r3, [r3, #0]
20002cdc:	485b      	ldr	r0, [pc, #364]	; (20002e4c <init_boom+0x260>)
20002cde:	f001 f803 	bl	20003ce8 <load_image>
		load_image(&boomImages[3], boom4Black, boom4Gray, boom4Light);
20002ce2:	4b5b      	ldr	r3, [pc, #364]	; (20002e50 <init_boom+0x264>)
20002ce4:	6819      	ldr	r1, [r3, #0]
20002ce6:	4b5b      	ldr	r3, [pc, #364]	; (20002e54 <init_boom+0x268>)
20002ce8:	681a      	ldr	r2, [r3, #0]
20002cea:	4b5b      	ldr	r3, [pc, #364]	; (20002e58 <init_boom+0x26c>)
20002cec:	681b      	ldr	r3, [r3, #0]
20002cee:	485b      	ldr	r0, [pc, #364]	; (20002e5c <init_boom+0x270>)
20002cf0:	f000 fffa 	bl	20003ce8 <load_image>
		load_image(&boomImages[4], boom5Black, boom5Gray, boom5Light);
20002cf4:	4b5a      	ldr	r3, [pc, #360]	; (20002e60 <init_boom+0x274>)
20002cf6:	6819      	ldr	r1, [r3, #0]
20002cf8:	4b5a      	ldr	r3, [pc, #360]	; (20002e64 <init_boom+0x278>)
20002cfa:	681a      	ldr	r2, [r3, #0]
20002cfc:	4b5a      	ldr	r3, [pc, #360]	; (20002e68 <init_boom+0x27c>)
20002cfe:	681b      	ldr	r3, [r3, #0]
20002d00:	485a      	ldr	r0, [pc, #360]	; (20002e6c <init_boom+0x280>)
20002d02:	f000 fff1 	bl	20003ce8 <load_image>
		load_image(&boomImages[5], boom6Black, boom6Gray, boom6Light);
20002d06:	4b5a      	ldr	r3, [pc, #360]	; (20002e70 <init_boom+0x284>)
20002d08:	6819      	ldr	r1, [r3, #0]
20002d0a:	4b5a      	ldr	r3, [pc, #360]	; (20002e74 <init_boom+0x288>)
20002d0c:	681a      	ldr	r2, [r3, #0]
20002d0e:	4b5a      	ldr	r3, [pc, #360]	; (20002e78 <init_boom+0x28c>)
20002d10:	681b      	ldr	r3, [r3, #0]
20002d12:	485a      	ldr	r0, [pc, #360]	; (20002e7c <init_boom+0x290>)
20002d14:	f000 ffe8 	bl	20003ce8 <load_image>
		load_image(&boomImages[6], boom6Black, boom6Gray, boom6Light);
20002d18:	4b55      	ldr	r3, [pc, #340]	; (20002e70 <init_boom+0x284>)
20002d1a:	6819      	ldr	r1, [r3, #0]
20002d1c:	4b55      	ldr	r3, [pc, #340]	; (20002e74 <init_boom+0x288>)
20002d1e:	681a      	ldr	r2, [r3, #0]
20002d20:	4b55      	ldr	r3, [pc, #340]	; (20002e78 <init_boom+0x28c>)
20002d22:	681b      	ldr	r3, [r3, #0]
20002d24:	4856      	ldr	r0, [pc, #344]	; (20002e80 <init_boom+0x294>)
20002d26:	f000 ffdf 	bl	20003ce8 <load_image>
		load_image(&boomImages[7], boom6Black, boom6Gray, boom6Light);
20002d2a:	4b51      	ldr	r3, [pc, #324]	; (20002e70 <init_boom+0x284>)
20002d2c:	6819      	ldr	r1, [r3, #0]
20002d2e:	4b51      	ldr	r3, [pc, #324]	; (20002e74 <init_boom+0x288>)
20002d30:	681a      	ldr	r2, [r3, #0]
20002d32:	4b51      	ldr	r3, [pc, #324]	; (20002e78 <init_boom+0x28c>)
20002d34:	681b      	ldr	r3, [r3, #0]
20002d36:	4853      	ldr	r0, [pc, #332]	; (20002e84 <init_boom+0x298>)
20002d38:	f000 ffd6 	bl	20003ce8 <load_image>
		load_image(&boomImages[8], boom6Black, boom6Gray, boom6Light);
20002d3c:	4b4c      	ldr	r3, [pc, #304]	; (20002e70 <init_boom+0x284>)
20002d3e:	6819      	ldr	r1, [r3, #0]
20002d40:	4b4c      	ldr	r3, [pc, #304]	; (20002e74 <init_boom+0x288>)
20002d42:	681a      	ldr	r2, [r3, #0]
20002d44:	4b4c      	ldr	r3, [pc, #304]	; (20002e78 <init_boom+0x28c>)
20002d46:	681b      	ldr	r3, [r3, #0]
20002d48:	484f      	ldr	r0, [pc, #316]	; (20002e88 <init_boom+0x29c>)
20002d4a:	f000 ffcd 	bl	20003ce8 <load_image>
		load_image(&boomImages[9], boom6Black, boom6Gray, boom6Light);
20002d4e:	4b48      	ldr	r3, [pc, #288]	; (20002e70 <init_boom+0x284>)
20002d50:	6819      	ldr	r1, [r3, #0]
20002d52:	4b48      	ldr	r3, [pc, #288]	; (20002e74 <init_boom+0x288>)
20002d54:	681a      	ldr	r2, [r3, #0]
20002d56:	4b48      	ldr	r3, [pc, #288]	; (20002e78 <init_boom+0x28c>)
20002d58:	681b      	ldr	r3, [r3, #0]
20002d5a:	484c      	ldr	r0, [pc, #304]	; (20002e8c <init_boom+0x2a0>)
20002d5c:	f000 ffc4 	bl	20003ce8 <load_image>
		load_image(&boomImages[10], boom6Black, boom6Gray, boom6Light);
20002d60:	4b43      	ldr	r3, [pc, #268]	; (20002e70 <init_boom+0x284>)
20002d62:	6819      	ldr	r1, [r3, #0]
20002d64:	4b43      	ldr	r3, [pc, #268]	; (20002e74 <init_boom+0x288>)
20002d66:	681a      	ldr	r2, [r3, #0]
20002d68:	4b43      	ldr	r3, [pc, #268]	; (20002e78 <init_boom+0x28c>)
20002d6a:	681b      	ldr	r3, [r3, #0]
20002d6c:	4848      	ldr	r0, [pc, #288]	; (20002e90 <init_boom+0x2a4>)
20002d6e:	f000 ffbb 	bl	20003ce8 <load_image>
		load_image(&boomImages[11], boom6Black, boom6Gray, boom6Light);
20002d72:	4b3f      	ldr	r3, [pc, #252]	; (20002e70 <init_boom+0x284>)
20002d74:	6819      	ldr	r1, [r3, #0]
20002d76:	4b3f      	ldr	r3, [pc, #252]	; (20002e74 <init_boom+0x288>)
20002d78:	681a      	ldr	r2, [r3, #0]
20002d7a:	4b3f      	ldr	r3, [pc, #252]	; (20002e78 <init_boom+0x28c>)
20002d7c:	681b      	ldr	r3, [r3, #0]
20002d7e:	4845      	ldr	r0, [pc, #276]	; (20002e94 <init_boom+0x2a8>)
20002d80:	f000 ffb2 	bl	20003ce8 <load_image>
		load_image(&boomImages[12], boom6Black, boom6Gray, boom6Light);
20002d84:	4b3a      	ldr	r3, [pc, #232]	; (20002e70 <init_boom+0x284>)
20002d86:	6819      	ldr	r1, [r3, #0]
20002d88:	4b3a      	ldr	r3, [pc, #232]	; (20002e74 <init_boom+0x288>)
20002d8a:	681a      	ldr	r2, [r3, #0]
20002d8c:	4b3a      	ldr	r3, [pc, #232]	; (20002e78 <init_boom+0x28c>)
20002d8e:	681b      	ldr	r3, [r3, #0]
20002d90:	4841      	ldr	r0, [pc, #260]	; (20002e98 <init_boom+0x2ac>)
20002d92:	f000 ffa9 	bl	20003ce8 <load_image>
		load_image(&boomImages[13], boom6Black, boom6Gray, boom6Light);
20002d96:	4b36      	ldr	r3, [pc, #216]	; (20002e70 <init_boom+0x284>)
20002d98:	6819      	ldr	r1, [r3, #0]
20002d9a:	4b36      	ldr	r3, [pc, #216]	; (20002e74 <init_boom+0x288>)
20002d9c:	681a      	ldr	r2, [r3, #0]
20002d9e:	4b36      	ldr	r3, [pc, #216]	; (20002e78 <init_boom+0x28c>)
20002da0:	681b      	ldr	r3, [r3, #0]
20002da2:	483e      	ldr	r0, [pc, #248]	; (20002e9c <init_boom+0x2b0>)
20002da4:	f000 ffa0 	bl	20003ce8 <load_image>
		load_image(&boomImages[14], boom6Black, boom6Gray, boom6Light);
20002da8:	4b31      	ldr	r3, [pc, #196]	; (20002e70 <init_boom+0x284>)
20002daa:	6819      	ldr	r1, [r3, #0]
20002dac:	4b31      	ldr	r3, [pc, #196]	; (20002e74 <init_boom+0x288>)
20002dae:	681a      	ldr	r2, [r3, #0]
20002db0:	4b31      	ldr	r3, [pc, #196]	; (20002e78 <init_boom+0x28c>)
20002db2:	681b      	ldr	r3, [r3, #0]
20002db4:	483a      	ldr	r0, [pc, #232]	; (20002ea0 <init_boom+0x2b4>)
20002db6:	f000 ff97 	bl	20003ce8 <load_image>
	}
	
	boomObj->images = boomImages;
20002dba:	687b      	ldr	r3, [r7, #4]
20002dbc:	4a09      	ldr	r2, [pc, #36]	; (20002de4 <init_boom+0x1f8>)
20002dbe:	601a      	str	r2, [r3, #0]

	boomObj->current_frame = 0;
20002dc0:	687b      	ldr	r3, [r7, #4]
20002dc2:	2200      	movs	r2, #0
20002dc4:	615a      	str	r2, [r3, #20]
	boomObj->n_frames = 15;
20002dc6:	687b      	ldr	r3, [r7, #4]
20002dc8:	220f      	movs	r2, #15
20002dca:	619a      	str	r2, [r3, #24]
	boomObj->animation_speed = 1;
20002dcc:	687b      	ldr	r3, [r7, #4]
20002dce:	2201      	movs	r2, #1
20002dd0:	61da      	str	r2, [r3, #28]
	boomObj->animation_counter = 0;
20002dd2:	687b      	ldr	r3, [r7, #4]
20002dd4:	2200      	movs	r2, #0
20002dd6:	621a      	str	r2, [r3, #32]
}
20002dd8:	46c0      	nop			; (mov r8, r8)
20002dda:	46bd      	mov	sp, r7
20002ddc:	b003      	add	sp, #12
20002dde:	bd90      	pop	{r4, r7, pc}
20002de0:	2000cfc8 	andcs	ip, r0, r8, asr #31
20002de4:	200052e0 	andcs	r5, r0, r0, ror #5
20002de8:	20005410 	andcs	r5, r0, r0, lsl r4
20002dec:	20005238 	andcs	r5, r0, r8, lsr r2
20002df0:	20005428 	andcs	r5, r0, r8, lsr #8
20002df4:	2000522c 	andcs	r5, r0, ip, lsr #4
20002df8:	20005270 	andcs	r5, r0, r0, ror r2
20002dfc:	200052b4 			; <UNDEFINED> instruction: 0x200052b4
20002e00:	2000541c 	andcs	r5, r0, ip, lsl r4
20002e04:	20005264 	andcs	r5, r0, r4, ror #4
20002e08:	2000520c 	andcs	r5, r0, ip, lsl #4
20002e0c:	2000524c 	andcs	r5, r0, ip, asr #4
20002e10:	20005404 	andcs	r5, r0, r4, lsl #8
20002e14:	20005218 	andcs	r5, r0, r8, lsl r2
20002e18:	200052d0 	ldrdcs	r5, [r0], -r0
20002e1c:	20005258 	andcs	r5, r0, r8, asr r2
20002e20:	20005468 	andcs	r5, r0, r8, ror #8
20002e24:	200053c4 	andcs	r5, r0, r4, asr #7
20002e28:	20005400 	andcs	r5, r0, r0, lsl #8
20002e2c:	20005464 	andcs	r5, r0, r4, ror #8
20002e30:	20005474 	andcs	r5, r0, r4, ror r4
20002e34:	200053c0 	andcs	r5, r0, r0, asr #7
20002e38:	20005478 	andcs	r5, r0, r8, ror r4
20002e3c:	200052ec 	andcs	r5, r0, ip, ror #5
20002e40:	20005228 	andcs	r5, r0, r8, lsr #4
20002e44:	2000527c 	andcs	r5, r0, ip, ror r2
20002e48:	20005224 	andcs	r5, r0, r4, lsr #4
20002e4c:	200052f8 	strdcs	r5, [r0], -r8
20002e50:	200053a4 	andcs	r5, r0, r4, lsr #7
20002e54:	200053f8 	strdcs	r5, [r0], -r8
20002e58:	20005248 	andcs	r5, r0, r8, asr #4
20002e5c:	20005304 	andcs	r5, r0, r4, lsl #6
20002e60:	20005244 	andcs	r5, r0, r4, asr #4
20002e64:	2000528c 	andcs	r5, r0, ip, lsl #5
20002e68:	200053fc 	strdcs	r5, [r0], -ip
20002e6c:	20005310 	andcs	r5, r0, r0, lsl r3
20002e70:	20005394 	mulcs	r0, r4, r3
20002e74:	200052cc 	andcs	r5, r0, ip, asr #5
20002e78:	200052dc 	ldrdcs	r5, [r0], -ip
20002e7c:	2000531c 	andcs	r5, r0, ip, lsl r3
20002e80:	20005328 	andcs	r5, r0, r8, lsr #6
20002e84:	20005334 	andcs	r5, r0, r4, lsr r3
20002e88:	20005340 	andcs	r5, r0, r0, asr #6
20002e8c:	2000534c 	andcs	r5, r0, ip, asr #6
20002e90:	20005358 	andcs	r5, r0, r8, asr r3
20002e94:	20005364 	andcs	r5, r0, r4, ror #6
20002e98:	20005370 	andcs	r5, r0, r0, ror r3
20002e9c:	2000537c 	andcs	r5, r0, ip, ror r3
20002ea0:	20005388 	andcs	r5, r0, r8, lsl #7

20002ea4 <delay_250ns>:
#include "graphics.h"


void delay_250ns(void){
20002ea4:	b580      	push	{r7, lr}
20002ea6:	af00      	add	r7, sp, #0
	/* SystemCoreClock = 168000000 */
	*STK_CTRL = 0;
20002ea8:	4b0c      	ldr	r3, [pc, #48]	; (20002edc <delay_250ns+0x38>)
20002eaa:	2200      	movs	r2, #0
20002eac:	601a      	str	r2, [r3, #0]
	*STK_LOAD = ( (168/4) -1);
20002eae:	4b0c      	ldr	r3, [pc, #48]	; (20002ee0 <delay_250ns+0x3c>)
20002eb0:	2229      	movs	r2, #41	; 0x29
20002eb2:	601a      	str	r2, [r3, #0]
	*STK_VAL = 0;
20002eb4:	4b0b      	ldr	r3, [pc, #44]	; (20002ee4 <delay_250ns+0x40>)
20002eb6:	2200      	movs	r2, #0
20002eb8:	601a      	str	r2, [r3, #0]
	*STK_CTRL = 5;
20002eba:	4b08      	ldr	r3, [pc, #32]	; (20002edc <delay_250ns+0x38>)
20002ebc:	2205      	movs	r2, #5
20002ebe:	601a      	str	r2, [r3, #0]
	while( (*STK_CTRL & 0x10000)== 0 ){}
20002ec0:	46c0      	nop			; (mov r8, r8)
20002ec2:	4b06      	ldr	r3, [pc, #24]	; (20002edc <delay_250ns+0x38>)
20002ec4:	681a      	ldr	r2, [r3, #0]
20002ec6:	2380      	movs	r3, #128	; 0x80
20002ec8:	025b      	lsls	r3, r3, #9
20002eca:	4013      	ands	r3, r2
20002ecc:	d0f9      	beq.n	20002ec2 <delay_250ns+0x1e>
	*STK_CTRL = 0;
20002ece:	4b03      	ldr	r3, [pc, #12]	; (20002edc <delay_250ns+0x38>)
20002ed0:	2200      	movs	r2, #0
20002ed2:	601a      	str	r2, [r3, #0]
}
20002ed4:	46c0      	nop			; (mov r8, r8)
20002ed6:	46bd      	mov	sp, r7
20002ed8:	bd80      	pop	{r7, pc}
20002eda:	46c0      	nop			; (mov r8, r8)
20002edc:	e000e010 	and	lr, r0, r0, lsl r0
20002ee0:	e000e014 	and	lr, r0, r4, lsl r0
20002ee4:	e000e018 	and	lr, r0, r8, lsl r0

20002ee8 <delay_500ns>:

void delay_500ns(void){
20002ee8:	b580      	push	{r7, lr}
20002eea:	af00      	add	r7, sp, #0
	/* SystemCoreClock = 168000000 */
	*STK_CTRL = 0;
20002eec:	4b0c      	ldr	r3, [pc, #48]	; (20002f20 <delay_500ns+0x38>)
20002eee:	2200      	movs	r2, #0
20002ef0:	601a      	str	r2, [r3, #0]
	*STK_LOAD = ( (168/2) -1);
20002ef2:	4b0c      	ldr	r3, [pc, #48]	; (20002f24 <delay_500ns+0x3c>)
20002ef4:	2253      	movs	r2, #83	; 0x53
20002ef6:	601a      	str	r2, [r3, #0]
	*STK_VAL = 0;
20002ef8:	4b0b      	ldr	r3, [pc, #44]	; (20002f28 <delay_500ns+0x40>)
20002efa:	2200      	movs	r2, #0
20002efc:	601a      	str	r2, [r3, #0]
	*STK_CTRL = 5;
20002efe:	4b08      	ldr	r3, [pc, #32]	; (20002f20 <delay_500ns+0x38>)
20002f00:	2205      	movs	r2, #5
20002f02:	601a      	str	r2, [r3, #0]
	while( (*STK_CTRL & 0x10000)== 0 ){}
20002f04:	46c0      	nop			; (mov r8, r8)
20002f06:	4b06      	ldr	r3, [pc, #24]	; (20002f20 <delay_500ns+0x38>)
20002f08:	681a      	ldr	r2, [r3, #0]
20002f0a:	2380      	movs	r3, #128	; 0x80
20002f0c:	025b      	lsls	r3, r3, #9
20002f0e:	4013      	ands	r3, r2
20002f10:	d0f9      	beq.n	20002f06 <delay_500ns+0x1e>
	*STK_CTRL = 0;
20002f12:	4b03      	ldr	r3, [pc, #12]	; (20002f20 <delay_500ns+0x38>)
20002f14:	2200      	movs	r2, #0
20002f16:	601a      	str	r2, [r3, #0]
}
20002f18:	46c0      	nop			; (mov r8, r8)
20002f1a:	46bd      	mov	sp, r7
20002f1c:	bd80      	pop	{r7, pc}
20002f1e:	46c0      	nop			; (mov r8, r8)
20002f20:	e000e010 	and	lr, r0, r0, lsl r0
20002f24:	e000e014 	and	lr, r0, r4, lsl r0
20002f28:	e000e018 	and	lr, r0, r8, lsl r0

20002f2c <delay_micro>:

void delay_micro(unsigned int us){
20002f2c:	b580      	push	{r7, lr}
20002f2e:	b082      	sub	sp, #8
20002f30:	af00      	add	r7, sp, #0
20002f32:	6078      	str	r0, [r7, #4]
	while(us--) {
20002f34:	e007      	b.n	20002f46 <delay_micro+0x1a>
		delay_250ns();
20002f36:	f7ff ffb5 	bl	20002ea4 <delay_250ns>
		delay_250ns();
20002f3a:	f7ff ffb3 	bl	20002ea4 <delay_250ns>
		delay_250ns();
20002f3e:	f7ff ffb1 	bl	20002ea4 <delay_250ns>
		delay_250ns();
20002f42:	f7ff ffaf 	bl	20002ea4 <delay_250ns>
	while(us--) {
20002f46:	687b      	ldr	r3, [r7, #4]
20002f48:	1e5a      	subs	r2, r3, #1
20002f4a:	607a      	str	r2, [r7, #4]
20002f4c:	2b00      	cmp	r3, #0
20002f4e:	d1f2      	bne.n	20002f36 <delay_micro+0xa>
	}
}
20002f50:	46c0      	nop			; (mov r8, r8)
20002f52:	46bd      	mov	sp, r7
20002f54:	b002      	add	sp, #8
20002f56:	bd80      	pop	{r7, pc}

20002f58 <delay_milli>:

void delay_milli(unsigned int ms){
20002f58:	b580      	push	{r7, lr}
20002f5a:	b082      	sub	sp, #8
20002f5c:	af00      	add	r7, sp, #0
20002f5e:	6078      	str	r0, [r7, #4]
	#ifdef SIMULATOR
		while(ms--)
			delay_micro(1);
	#else
		while(ms--)
20002f60:	e004      	b.n	20002f6c <delay_milli+0x14>
			delay_micro(1000);
20002f62:	23fa      	movs	r3, #250	; 0xfa
20002f64:	009b      	lsls	r3, r3, #2
20002f66:	0018      	movs	r0, r3
20002f68:	f7ff ffe0 	bl	20002f2c <delay_micro>
		while(ms--)
20002f6c:	687b      	ldr	r3, [r7, #4]
20002f6e:	1e5a      	subs	r2, r3, #1
20002f70:	607a      	str	r2, [r7, #4]
20002f72:	2b00      	cmp	r3, #0
20002f74:	d1f5      	bne.n	20002f62 <delay_milli+0xa>
	#endif
}
20002f76:	46c0      	nop			; (mov r8, r8)
20002f78:	46bd      	mov	sp, r7
20002f7a:	b002      	add	sp, #8
20002f7c:	bd80      	pop	{r7, pc}

20002f7e <clear_thisBackBuffer>:
uint8_t draw_buffer_black_light[1024]; // 128 * 64 / 8
uint8_t draw_buffer_black_gray_light[1024]; // 128 * 64 / 8
uint8_t backBuffer[1024]; // 128 * 64 / 8
uint8_t backBufferGray[1024]; // 128 * 64 / 8
uint8_t backBufferLight[1024]; // 128 * 64 / 8
void clear_thisBackBuffer(uint8_t *buffer) {
20002f7e:	b580      	push	{r7, lr}
20002f80:	b084      	sub	sp, #16
20002f82:	af00      	add	r7, sp, #0
20002f84:	6078      	str	r0, [r7, #4]
	int i;
	for (i = 0; i < 1024; i++)
20002f86:	2300      	movs	r3, #0
20002f88:	60fb      	str	r3, [r7, #12]
20002f8a:	e007      	b.n	20002f9c <clear_thisBackBuffer+0x1e>
		buffer[i] = 0;
20002f8c:	68fb      	ldr	r3, [r7, #12]
20002f8e:	687a      	ldr	r2, [r7, #4]
20002f90:	18d3      	adds	r3, r2, r3
20002f92:	2200      	movs	r2, #0
20002f94:	701a      	strb	r2, [r3, #0]
	for (i = 0; i < 1024; i++)
20002f96:	68fb      	ldr	r3, [r7, #12]
20002f98:	3301      	adds	r3, #1
20002f9a:	60fb      	str	r3, [r7, #12]
20002f9c:	68fb      	ldr	r3, [r7, #12]
20002f9e:	4a03      	ldr	r2, [pc, #12]	; (20002fac <clear_thisBackBuffer+0x2e>)
20002fa0:	4293      	cmp	r3, r2
20002fa2:	ddf3      	ble.n	20002f8c <clear_thisBackBuffer+0xe>
}
20002fa4:	46c0      	nop			; (mov r8, r8)
20002fa6:	46bd      	mov	sp, r7
20002fa8:	b004      	add	sp, #16
20002faa:	bd80      	pop	{r7, pc}
20002fac:	000003ff 	strdeq	r0, [r0], -pc	; <UNPREDICTABLE>

20002fb0 <clear_backBuffer>:
void clear_backBuffer() {
20002fb0:	b580      	push	{r7, lr}
20002fb2:	af00      	add	r7, sp, #0
	clear_thisBackBuffer(backBuffer);
20002fb4:	4b03      	ldr	r3, [pc, #12]	; (20002fc4 <clear_backBuffer+0x14>)
20002fb6:	0018      	movs	r0, r3
20002fb8:	f7ff ffe1 	bl	20002f7e <clear_thisBackBuffer>
}
20002fbc:	46c0      	nop			; (mov r8, r8)
20002fbe:	46bd      	mov	sp, r7
20002fc0:	bd80      	pop	{r7, pc}
20002fc2:	46c0      	nop			; (mov r8, r8)
20002fc4:	20005c88 	andcs	r5, r0, r8, lsl #25

20002fc8 <clear_all_backBuffers>:
void clear_all_backBuffers() {
20002fc8:	b580      	push	{r7, lr}
20002fca:	af00      	add	r7, sp, #0
	clear_thisBackBuffer(backBuffer);
20002fcc:	4b07      	ldr	r3, [pc, #28]	; (20002fec <clear_all_backBuffers+0x24>)
20002fce:	0018      	movs	r0, r3
20002fd0:	f7ff ffd5 	bl	20002f7e <clear_thisBackBuffer>
	clear_thisBackBuffer(backBufferGray);
20002fd4:	4b06      	ldr	r3, [pc, #24]	; (20002ff0 <clear_all_backBuffers+0x28>)
20002fd6:	0018      	movs	r0, r3
20002fd8:	f7ff ffd1 	bl	20002f7e <clear_thisBackBuffer>
	clear_thisBackBuffer(backBufferLight);
20002fdc:	4b05      	ldr	r3, [pc, #20]	; (20002ff4 <clear_all_backBuffers+0x2c>)
20002fde:	0018      	movs	r0, r3
20002fe0:	f7ff ffcd 	bl	20002f7e <clear_thisBackBuffer>
}
20002fe4:	46c0      	nop			; (mov r8, r8)
20002fe6:	46bd      	mov	sp, r7
20002fe8:	bd80      	pop	{r7, pc}
20002fea:	46c0      	nop			; (mov r8, r8)
20002fec:	20005c88 	andcs	r5, r0, r8, lsl #25
20002ff0:	20005488 	andcs	r5, r0, r8, lsl #9
20002ff4:	20006c88 	andcs	r6, r0, r8, lsl #25

20002ff8 <graphic_ctrl_bit_set>:

/* välj grafik-display och ettställ de bitar som är 1 i x */
static void graphic_ctrl_bit_set( uint8_t x) {
20002ff8:	b580      	push	{r7, lr}
20002ffa:	b084      	sub	sp, #16
20002ffc:	af00      	add	r7, sp, #0
20002ffe:	0002      	movs	r2, r0
20003000:	1dfb      	adds	r3, r7, #7
20003002:	701a      	strb	r2, [r3, #0]
	uint8_t c;
	c = *portOdrLow;
20003004:	4a0f      	ldr	r2, [pc, #60]	; (20003044 <graphic_ctrl_bit_set+0x4c>)
20003006:	230f      	movs	r3, #15
20003008:	18fb      	adds	r3, r7, r3
2000300a:	7812      	ldrb	r2, [r2, #0]
2000300c:	701a      	strb	r2, [r3, #0]
	c |= x;
2000300e:	230f      	movs	r3, #15
20003010:	18fb      	adds	r3, r7, r3
20003012:	220f      	movs	r2, #15
20003014:	18b9      	adds	r1, r7, r2
20003016:	1dfa      	adds	r2, r7, #7
20003018:	7809      	ldrb	r1, [r1, #0]
2000301a:	7812      	ldrb	r2, [r2, #0]
2000301c:	430a      	orrs	r2, r1
2000301e:	701a      	strb	r2, [r3, #0]
	c &= ~B_SELECT; //Graphic display istället för alphanum
20003020:	230f      	movs	r3, #15
20003022:	18fb      	adds	r3, r7, r3
20003024:	220f      	movs	r2, #15
20003026:	18ba      	adds	r2, r7, r2
20003028:	7812      	ldrb	r2, [r2, #0]
2000302a:	2104      	movs	r1, #4
2000302c:	438a      	bics	r2, r1
2000302e:	701a      	strb	r2, [r3, #0]
	*portOdrLow = c;
20003030:	4a04      	ldr	r2, [pc, #16]	; (20003044 <graphic_ctrl_bit_set+0x4c>)
20003032:	230f      	movs	r3, #15
20003034:	18fb      	adds	r3, r7, r3
20003036:	781b      	ldrb	r3, [r3, #0]
20003038:	7013      	strb	r3, [r2, #0]
}
2000303a:	46c0      	nop			; (mov r8, r8)
2000303c:	46bd      	mov	sp, r7
2000303e:	b004      	add	sp, #16
20003040:	bd80      	pop	{r7, pc}
20003042:	46c0      	nop			; (mov r8, r8)
20003044:	40021014 	andmi	r1, r2, r4, lsl r0

20003048 <graphic_ctrl_bit_clear>:
/* välj grafik-display och nollställ de bitar som är 1 i x */
static void graphic_ctrl_bit_clear( uint8_t x) {
20003048:	b580      	push	{r7, lr}
2000304a:	b084      	sub	sp, #16
2000304c:	af00      	add	r7, sp, #0
2000304e:	0002      	movs	r2, r0
20003050:	1dfb      	adds	r3, r7, #7
20003052:	701a      	strb	r2, [r3, #0]
	uint8_t c;
	c = *portOdrLow;
20003054:	4a11      	ldr	r2, [pc, #68]	; (2000309c <graphic_ctrl_bit_clear+0x54>)
20003056:	230f      	movs	r3, #15
20003058:	18fb      	adds	r3, r7, r3
2000305a:	7812      	ldrb	r2, [r2, #0]
2000305c:	701a      	strb	r2, [r3, #0]
	c &= ~x;
2000305e:	1dfb      	adds	r3, r7, #7
20003060:	781b      	ldrb	r3, [r3, #0]
20003062:	b25b      	sxtb	r3, r3
20003064:	43db      	mvns	r3, r3
20003066:	b25b      	sxtb	r3, r3
20003068:	220f      	movs	r2, #15
2000306a:	18ba      	adds	r2, r7, r2
2000306c:	7812      	ldrb	r2, [r2, #0]
2000306e:	b252      	sxtb	r2, r2
20003070:	4013      	ands	r3, r2
20003072:	b25a      	sxtb	r2, r3
20003074:	230f      	movs	r3, #15
20003076:	18fb      	adds	r3, r7, r3
20003078:	701a      	strb	r2, [r3, #0]
	c &= ~B_SELECT; //Graphic display istället för alphanum
2000307a:	230f      	movs	r3, #15
2000307c:	18fb      	adds	r3, r7, r3
2000307e:	220f      	movs	r2, #15
20003080:	18ba      	adds	r2, r7, r2
20003082:	7812      	ldrb	r2, [r2, #0]
20003084:	2104      	movs	r1, #4
20003086:	438a      	bics	r2, r1
20003088:	701a      	strb	r2, [r3, #0]
	*portOdrLow = c;
2000308a:	4a04      	ldr	r2, [pc, #16]	; (2000309c <graphic_ctrl_bit_clear+0x54>)
2000308c:	230f      	movs	r3, #15
2000308e:	18fb      	adds	r3, r7, r3
20003090:	781b      	ldrb	r3, [r3, #0]
20003092:	7013      	strb	r3, [r2, #0]
}
20003094:	46c0      	nop			; (mov r8, r8)
20003096:	46bd      	mov	sp, r7
20003098:	b004      	add	sp, #16
2000309a:	bd80      	pop	{r7, pc}
2000309c:	40021014 	andmi	r1, r2, r4, lsl r0

200030a0 <select_controller>:
void select_controller( uint8_t controller) {
200030a0:	b580      	push	{r7, lr}
200030a2:	b082      	sub	sp, #8
200030a4:	af00      	add	r7, sp, #0
200030a6:	0002      	movs	r2, r0
200030a8:	1dfb      	adds	r3, r7, #7
200030aa:	701a      	strb	r2, [r3, #0]
	switch (controller) {
200030ac:	1dfb      	adds	r3, r7, #7
200030ae:	781b      	ldrb	r3, [r3, #0]
200030b0:	2b08      	cmp	r3, #8
200030b2:	d00f      	beq.n	200030d4 <select_controller+0x34>
200030b4:	dc02      	bgt.n	200030bc <select_controller+0x1c>
200030b6:	2b00      	cmp	r3, #0
200030b8:	d005      	beq.n	200030c6 <select_controller+0x26>
		case (B_CS1|B_CS2): 
			graphic_ctrl_bit_set(B_CS1); 
			graphic_ctrl_bit_set(B_CS2); 
			break;
	}
}
200030ba:	e020      	b.n	200030fe <select_controller+0x5e>
	switch (controller) {
200030bc:	2b10      	cmp	r3, #16
200030be:	d010      	beq.n	200030e2 <select_controller+0x42>
200030c0:	2b18      	cmp	r3, #24
200030c2:	d015      	beq.n	200030f0 <select_controller+0x50>
}
200030c4:	e01b      	b.n	200030fe <select_controller+0x5e>
			graphic_ctrl_bit_clear(B_CS1); 
200030c6:	2008      	movs	r0, #8
200030c8:	f7ff ffbe 	bl	20003048 <graphic_ctrl_bit_clear>
			graphic_ctrl_bit_clear(B_CS2); 
200030cc:	2010      	movs	r0, #16
200030ce:	f7ff ffbb 	bl	20003048 <graphic_ctrl_bit_clear>
			break;
200030d2:	e014      	b.n	200030fe <select_controller+0x5e>
			graphic_ctrl_bit_set(B_CS1); 
200030d4:	2008      	movs	r0, #8
200030d6:	f7ff ff8f 	bl	20002ff8 <graphic_ctrl_bit_set>
			graphic_ctrl_bit_clear(B_CS2); 
200030da:	2010      	movs	r0, #16
200030dc:	f7ff ffb4 	bl	20003048 <graphic_ctrl_bit_clear>
			break;
200030e0:	e00d      	b.n	200030fe <select_controller+0x5e>
			graphic_ctrl_bit_clear(B_CS1); 
200030e2:	2008      	movs	r0, #8
200030e4:	f7ff ffb0 	bl	20003048 <graphic_ctrl_bit_clear>
			graphic_ctrl_bit_set(B_CS2); 
200030e8:	2010      	movs	r0, #16
200030ea:	f7ff ff85 	bl	20002ff8 <graphic_ctrl_bit_set>
			break;
200030ee:	e006      	b.n	200030fe <select_controller+0x5e>
			graphic_ctrl_bit_set(B_CS1); 
200030f0:	2008      	movs	r0, #8
200030f2:	f7ff ff81 	bl	20002ff8 <graphic_ctrl_bit_set>
			graphic_ctrl_bit_set(B_CS2); 
200030f6:	2010      	movs	r0, #16
200030f8:	f7ff ff7e 	bl	20002ff8 <graphic_ctrl_bit_set>
			break;
200030fc:	46c0      	nop			; (mov r8, r8)
}
200030fe:	46c0      	nop			; (mov r8, r8)
20003100:	46bd      	mov	sp, r7
20003102:	b002      	add	sp, #8
20003104:	bd80      	pop	{r7, pc}

20003106 <graphic_wait_ready>:

void graphic_wait_ready( void ) {
20003106:	b580      	push	{r7, lr}
20003108:	b082      	sub	sp, #8
2000310a:	af00      	add	r7, sp, #0
	uint8_t c;
	graphic_ctrl_bit_clear(B_E);
2000310c:	2040      	movs	r0, #64	; 0x40
2000310e:	f7ff ff9b 	bl	20003048 <graphic_ctrl_bit_clear>
	*portModer = 0x00005555;
20003112:	4b14      	ldr	r3, [pc, #80]	; (20003164 <graphic_wait_ready+0x5e>)
20003114:	4a14      	ldr	r2, [pc, #80]	; (20003168 <graphic_wait_ready+0x62>)
20003116:	601a      	str	r2, [r3, #0]
	graphic_ctrl_bit_clear(B_RS);
20003118:	2001      	movs	r0, #1
2000311a:	f7ff ff95 	bl	20003048 <graphic_ctrl_bit_clear>
	graphic_ctrl_bit_set(B_RW);
2000311e:	2002      	movs	r0, #2
20003120:	f7ff ff6a 	bl	20002ff8 <graphic_ctrl_bit_set>
	delay_500ns();
20003124:	f7ff fee0 	bl	20002ee8 <delay_500ns>
	
	while(1) {
		graphic_ctrl_bit_set(B_E);
20003128:	2040      	movs	r0, #64	; 0x40
2000312a:	f7ff ff65 	bl	20002ff8 <graphic_ctrl_bit_set>
		delay_500ns();
2000312e:	f7ff fedb 	bl	20002ee8 <delay_500ns>
		c = *portIdrHigh & LCD_BUSY; //...
20003132:	4b0e      	ldr	r3, [pc, #56]	; (2000316c <graphic_wait_ready+0x66>)
20003134:	781b      	ldrb	r3, [r3, #0]
20003136:	b2da      	uxtb	r2, r3
20003138:	1dfb      	adds	r3, r7, #7
2000313a:	217f      	movs	r1, #127	; 0x7f
2000313c:	438a      	bics	r2, r1
2000313e:	701a      	strb	r2, [r3, #0]
		graphic_ctrl_bit_clear(B_E);
20003140:	2040      	movs	r0, #64	; 0x40
20003142:	f7ff ff81 	bl	20003048 <graphic_ctrl_bit_clear>
		delay_500ns();
20003146:	f7ff fecf 	bl	20002ee8 <delay_500ns>
		/*if (*portIdrHigh & 0x80 == 0x80) {
			break; }*/
		if (c == 0) break;
2000314a:	1dfb      	adds	r3, r7, #7
2000314c:	781b      	ldrb	r3, [r3, #0]
2000314e:	2b00      	cmp	r3, #0
20003150:	d000      	beq.n	20003154 <graphic_wait_ready+0x4e>
		graphic_ctrl_bit_set(B_E);
20003152:	e7e9      	b.n	20003128 <graphic_wait_ready+0x22>
		if (c == 0) break;
20003154:	46c0      	nop			; (mov r8, r8)
	}
	//graphic_ctrl_bit_set(B_E); //<--
	*portModer = 0x55555555;	
20003156:	4b03      	ldr	r3, [pc, #12]	; (20003164 <graphic_wait_ready+0x5e>)
20003158:	4a05      	ldr	r2, [pc, #20]	; (20003170 <graphic_wait_ready+0x6a>)
2000315a:	601a      	str	r2, [r3, #0]
}
2000315c:	46c0      	nop			; (mov r8, r8)
2000315e:	46bd      	mov	sp, r7
20003160:	b002      	add	sp, #8
20003162:	bd80      	pop	{r7, pc}
20003164:	40021000 	andmi	r1, r2, r0
20003168:	00005555 	andeq	r5, r0, r5, asr r5
2000316c:	40021011 	andmi	r1, r2, r1, lsl r0
20003170:	55555555 	ldrbpl	r5, [r5, #-1365]	; 0xfffffaab

20003174 <graphic_read>:

static uint8_t graphic_read(uint8_t controller) {
20003174:	b580      	push	{r7, lr}
20003176:	b084      	sub	sp, #16
20003178:	af00      	add	r7, sp, #0
2000317a:	0002      	movs	r2, r0
2000317c:	1dfb      	adds	r3, r7, #7
2000317e:	701a      	strb	r2, [r3, #0]
	graphic_ctrl_bit_clear(B_E);
20003180:	2040      	movs	r0, #64	; 0x40
20003182:	f7ff ff61 	bl	20003048 <graphic_ctrl_bit_clear>
	*portModer = 0x00005555;
20003186:	4b1c      	ldr	r3, [pc, #112]	; (200031f8 <graphic_read+0x84>)
20003188:	4a1c      	ldr	r2, [pc, #112]	; (200031fc <graphic_read+0x88>)
2000318a:	601a      	str	r2, [r3, #0]
	graphic_ctrl_bit_set(B_RS);
2000318c:	2001      	movs	r0, #1
2000318e:	f7ff ff33 	bl	20002ff8 <graphic_ctrl_bit_set>
	graphic_ctrl_bit_set(B_RW);
20003192:	2002      	movs	r0, #2
20003194:	f7ff ff30 	bl	20002ff8 <graphic_ctrl_bit_set>
	select_controller(controller);
20003198:	1dfb      	adds	r3, r7, #7
2000319a:	781b      	ldrb	r3, [r3, #0]
2000319c:	0018      	movs	r0, r3
2000319e:	f7ff ff7f 	bl	200030a0 <select_controller>
	delay_500ns();
200031a2:	f7ff fea1 	bl	20002ee8 <delay_500ns>
	graphic_ctrl_bit_set(B_E);
200031a6:	2040      	movs	r0, #64	; 0x40
200031a8:	f7ff ff26 	bl	20002ff8 <graphic_ctrl_bit_set>
	delay_500ns();
200031ac:	f7ff fe9c 	bl	20002ee8 <delay_500ns>
	unsigned char rv = *portIdrHigh;
200031b0:	4a13      	ldr	r2, [pc, #76]	; (20003200 <graphic_read+0x8c>)
200031b2:	230f      	movs	r3, #15
200031b4:	18fb      	adds	r3, r7, r3
200031b6:	7812      	ldrb	r2, [r2, #0]
200031b8:	701a      	strb	r2, [r3, #0]
	graphic_ctrl_bit_clear(B_E);
200031ba:	2040      	movs	r0, #64	; 0x40
200031bc:	f7ff ff44 	bl	20003048 <graphic_ctrl_bit_clear>
	*portModer = 0x55555555;
200031c0:	4b0d      	ldr	r3, [pc, #52]	; (200031f8 <graphic_read+0x84>)
200031c2:	4a10      	ldr	r2, [pc, #64]	; (20003204 <graphic_read+0x90>)
200031c4:	601a      	str	r2, [r3, #0]
	
	if(controller == B_CS1) {
200031c6:	1dfb      	adds	r3, r7, #7
200031c8:	781b      	ldrb	r3, [r3, #0]
200031ca:	2b08      	cmp	r3, #8
200031cc:	d104      	bne.n	200031d8 <graphic_read+0x64>
		select_controller(B_CS1);
200031ce:	2008      	movs	r0, #8
200031d0:	f7ff ff66 	bl	200030a0 <select_controller>
		graphic_wait_ready();
200031d4:	f7ff ff97 	bl	20003106 <graphic_wait_ready>
	}
	if(controller == B_CS2) {
200031d8:	1dfb      	adds	r3, r7, #7
200031da:	781b      	ldrb	r3, [r3, #0]
200031dc:	2b10      	cmp	r3, #16
200031de:	d104      	bne.n	200031ea <graphic_read+0x76>
		select_controller(B_CS2);
200031e0:	2010      	movs	r0, #16
200031e2:	f7ff ff5d 	bl	200030a0 <select_controller>
		graphic_wait_ready();
200031e6:	f7ff ff8e 	bl	20003106 <graphic_wait_ready>
	}
	
	return rv;
200031ea:	230f      	movs	r3, #15
200031ec:	18fb      	adds	r3, r7, r3
200031ee:	781b      	ldrb	r3, [r3, #0]
}
200031f0:	0018      	movs	r0, r3
200031f2:	46bd      	mov	sp, r7
200031f4:	b004      	add	sp, #16
200031f6:	bd80      	pop	{r7, pc}
200031f8:	40021000 	andmi	r1, r2, r0
200031fc:	00005555 	andeq	r5, r0, r5, asr r5
20003200:	40021011 	andmi	r1, r2, r1, lsl r0
20003204:	55555555 	ldrbpl	r5, [r5, #-1365]	; 0xfffffaab

20003208 <graphic_read_data>:

graphic_read_data(uint8_t controller) {
20003208:	b580      	push	{r7, lr}
2000320a:	b082      	sub	sp, #8
2000320c:	af00      	add	r7, sp, #0
2000320e:	0002      	movs	r2, r0
20003210:	1dfb      	adds	r3, r7, #7
20003212:	701a      	strb	r2, [r3, #0]
	graphic_read(controller);
20003214:	1dfb      	adds	r3, r7, #7
20003216:	781b      	ldrb	r3, [r3, #0]
20003218:	0018      	movs	r0, r3
2000321a:	f7ff ffab 	bl	20003174 <graphic_read>
	graphic_read(controller);
2000321e:	1dfb      	adds	r3, r7, #7
20003220:	781b      	ldrb	r3, [r3, #0]
20003222:	0018      	movs	r0, r3
20003224:	f7ff ffa6 	bl	20003174 <graphic_read>
}
20003228:	46c0      	nop			; (mov r8, r8)
2000322a:	0018      	movs	r0, r3
2000322c:	46bd      	mov	sp, r7
2000322e:	b002      	add	sp, #8
20003230:	bd80      	pop	{r7, pc}

20003232 <graphic_write>:

void graphic_write(uint8_t value, uint8_t controller) {
20003232:	b580      	push	{r7, lr}
20003234:	b082      	sub	sp, #8
20003236:	af00      	add	r7, sp, #0
20003238:	0002      	movs	r2, r0
2000323a:	1dfb      	adds	r3, r7, #7
2000323c:	701a      	strb	r2, [r3, #0]
2000323e:	1dbb      	adds	r3, r7, #6
20003240:	1c0a      	adds	r2, r1, #0
20003242:	701a      	strb	r2, [r3, #0]
	*portOdrHigh = value; //I
20003244:	4a19      	ldr	r2, [pc, #100]	; (200032ac <graphic_write+0x7a>)
20003246:	1dfb      	adds	r3, r7, #7
20003248:	781b      	ldrb	r3, [r3, #0]
2000324a:	7013      	strb	r3, [r2, #0]
	select_controller(controller);
2000324c:	1dbb      	adds	r3, r7, #6
2000324e:	781b      	ldrb	r3, [r3, #0]
20003250:	0018      	movs	r0, r3
20003252:	f7ff ff25 	bl	200030a0 <select_controller>
	delay_500ns();
20003256:	f7ff fe47 	bl	20002ee8 <delay_500ns>
	graphic_ctrl_bit_set(B_E);
2000325a:	2040      	movs	r0, #64	; 0x40
2000325c:	f7ff fecc 	bl	20002ff8 <graphic_ctrl_bit_set>
	delay_500ns();
20003260:	f7ff fe42 	bl	20002ee8 <delay_500ns>
	graphic_ctrl_bit_clear(B_E);
20003264:	2040      	movs	r0, #64	; 0x40
20003266:	f7ff feef 	bl	20003048 <graphic_ctrl_bit_clear>
	
	if(controller & B_CS1) {
2000326a:	1dbb      	adds	r3, r7, #6
2000326c:	781b      	ldrb	r3, [r3, #0]
2000326e:	2208      	movs	r2, #8
20003270:	4013      	ands	r3, r2
20003272:	d004      	beq.n	2000327e <graphic_write+0x4c>
		select_controller(B_CS1);
20003274:	2008      	movs	r0, #8
20003276:	f7ff ff13 	bl	200030a0 <select_controller>
		graphic_wait_ready();
2000327a:	f7ff ff44 	bl	20003106 <graphic_wait_ready>
	}
	if(controller & B_CS2) {
2000327e:	1dbb      	adds	r3, r7, #6
20003280:	781b      	ldrb	r3, [r3, #0]
20003282:	2210      	movs	r2, #16
20003284:	4013      	ands	r3, r2
20003286:	d004      	beq.n	20003292 <graphic_write+0x60>
		select_controller(B_CS2);
20003288:	2010      	movs	r0, #16
2000328a:	f7ff ff09 	bl	200030a0 <select_controller>
		graphic_wait_ready();
2000328e:	f7ff ff3a 	bl	20003106 <graphic_wait_ready>
	}
	
	*portOdrHigh = 0;	//I
20003292:	4b06      	ldr	r3, [pc, #24]	; (200032ac <graphic_write+0x7a>)
20003294:	2200      	movs	r2, #0
20003296:	701a      	strb	r2, [r3, #0]
	graphic_ctrl_bit_set(B_E);
20003298:	2040      	movs	r0, #64	; 0x40
2000329a:	f7ff fead 	bl	20002ff8 <graphic_ctrl_bit_set>
	select_controller(0);
2000329e:	2000      	movs	r0, #0
200032a0:	f7ff fefe 	bl	200030a0 <select_controller>
}
200032a4:	46c0      	nop			; (mov r8, r8)
200032a6:	46bd      	mov	sp, r7
200032a8:	b002      	add	sp, #8
200032aa:	bd80      	pop	{r7, pc}
200032ac:	40021015 	andmi	r1, r2, r5, lsl r0

200032b0 <graphic_write_command>:
void graphic_write_command(uint8_t command, uint8_t controller) {
200032b0:	b580      	push	{r7, lr}
200032b2:	b082      	sub	sp, #8
200032b4:	af00      	add	r7, sp, #0
200032b6:	0002      	movs	r2, r0
200032b8:	1dfb      	adds	r3, r7, #7
200032ba:	701a      	strb	r2, [r3, #0]
200032bc:	1dbb      	adds	r3, r7, #6
200032be:	1c0a      	adds	r2, r1, #0
200032c0:	701a      	strb	r2, [r3, #0]
	graphic_ctrl_bit_clear(B_E);
200032c2:	2040      	movs	r0, #64	; 0x40
200032c4:	f7ff fec0 	bl	20003048 <graphic_ctrl_bit_clear>
	select_controller(controller);
200032c8:	1dbb      	adds	r3, r7, #6
200032ca:	781b      	ldrb	r3, [r3, #0]
200032cc:	0018      	movs	r0, r3
200032ce:	f7ff fee7 	bl	200030a0 <select_controller>
	graphic_ctrl_bit_clear(B_RS);
200032d2:	2001      	movs	r0, #1
200032d4:	f7ff feb8 	bl	20003048 <graphic_ctrl_bit_clear>
	graphic_ctrl_bit_clear(B_RW);
200032d8:	2002      	movs	r0, #2
200032da:	f7ff feb5 	bl	20003048 <graphic_ctrl_bit_clear>
	graphic_write(command, controller);
200032de:	1dbb      	adds	r3, r7, #6
200032e0:	781a      	ldrb	r2, [r3, #0]
200032e2:	1dfb      	adds	r3, r7, #7
200032e4:	781b      	ldrb	r3, [r3, #0]
200032e6:	0011      	movs	r1, r2
200032e8:	0018      	movs	r0, r3
200032ea:	f7ff ffa2 	bl	20003232 <graphic_write>
}
200032ee:	46c0      	nop			; (mov r8, r8)
200032f0:	46bd      	mov	sp, r7
200032f2:	b002      	add	sp, #8
200032f4:	bd80      	pop	{r7, pc}

200032f6 <graphic_write_data>:
void graphic_write_data(uint8_t command, uint8_t controller) {
200032f6:	b580      	push	{r7, lr}
200032f8:	b082      	sub	sp, #8
200032fa:	af00      	add	r7, sp, #0
200032fc:	0002      	movs	r2, r0
200032fe:	1dfb      	adds	r3, r7, #7
20003300:	701a      	strb	r2, [r3, #0]
20003302:	1dbb      	adds	r3, r7, #6
20003304:	1c0a      	adds	r2, r1, #0
20003306:	701a      	strb	r2, [r3, #0]
	graphic_ctrl_bit_clear(B_E);
20003308:	2040      	movs	r0, #64	; 0x40
2000330a:	f7ff fe9d 	bl	20003048 <graphic_ctrl_bit_clear>
	select_controller(controller);
2000330e:	1dbb      	adds	r3, r7, #6
20003310:	781b      	ldrb	r3, [r3, #0]
20003312:	0018      	movs	r0, r3
20003314:	f7ff fec4 	bl	200030a0 <select_controller>
	graphic_ctrl_bit_set(B_RS);
20003318:	2001      	movs	r0, #1
2000331a:	f7ff fe6d 	bl	20002ff8 <graphic_ctrl_bit_set>
	graphic_ctrl_bit_clear(B_RW);
2000331e:	2002      	movs	r0, #2
20003320:	f7ff fe92 	bl	20003048 <graphic_ctrl_bit_clear>
	graphic_write(command, controller);
20003324:	1dbb      	adds	r3, r7, #6
20003326:	781a      	ldrb	r2, [r3, #0]
20003328:	1dfb      	adds	r3, r7, #7
2000332a:	781b      	ldrb	r3, [r3, #0]
2000332c:	0011      	movs	r1, r2
2000332e:	0018      	movs	r0, r3
20003330:	f7ff ff7f 	bl	20003232 <graphic_write>
}
20003334:	46c0      	nop			; (mov r8, r8)
20003336:	46bd      	mov	sp, r7
20003338:	b002      	add	sp, #8
2000333a:	bd80      	pop	{r7, pc}

2000333c <graphic_initialize>:

void graphic_initialize( void ) {
2000333c:	b580      	push	{r7, lr}
2000333e:	af00      	add	r7, sp, #0
	graphic_ctrl_bit_set(B_E);
20003340:	2040      	movs	r0, #64	; 0x40
20003342:	f7ff fe59 	bl	20002ff8 <graphic_ctrl_bit_set>
	delay_micro(10);
20003346:	200a      	movs	r0, #10
20003348:	f7ff fdf0 	bl	20002f2c <delay_micro>
	
	graphic_ctrl_bit_clear(B_CS1);
2000334c:	2008      	movs	r0, #8
2000334e:	f7ff fe7b 	bl	20003048 <graphic_ctrl_bit_clear>
	graphic_ctrl_bit_clear(B_CS2);
20003352:	2010      	movs	r0, #16
20003354:	f7ff fe78 	bl	20003048 <graphic_ctrl_bit_clear>
	graphic_ctrl_bit_clear(B_RST);
20003358:	2020      	movs	r0, #32
2000335a:	f7ff fe75 	bl	20003048 <graphic_ctrl_bit_clear>
	graphic_ctrl_bit_clear(B_E);
2000335e:	2040      	movs	r0, #64	; 0x40
20003360:	f7ff fe72 	bl	20003048 <graphic_ctrl_bit_clear>
	//#define SIMULATOR
	delay_milli(30);
20003364:	201e      	movs	r0, #30
20003366:	f7ff fdf7 	bl	20002f58 <delay_milli>
	graphic_ctrl_bit_set(B_RST);
2000336a:	2020      	movs	r0, #32
2000336c:	f7ff fe44 	bl	20002ff8 <graphic_ctrl_bit_set>
	delay_milli(100); //...
20003370:	2064      	movs	r0, #100	; 0x64
20003372:	f7ff fdf1 	bl	20002f58 <delay_milli>
	
	graphic_write_command(LCD_OFF, B_CS1|B_CS2);
20003376:	2118      	movs	r1, #24
20003378:	203e      	movs	r0, #62	; 0x3e
2000337a:	f7ff ff99 	bl	200032b0 <graphic_write_command>
	graphic_write_command(LCD_ON, B_CS1|B_CS2);
2000337e:	2118      	movs	r1, #24
20003380:	203f      	movs	r0, #63	; 0x3f
20003382:	f7ff ff95 	bl	200032b0 <graphic_write_command>
	graphic_write_command(LCD_DISP_START, B_CS1|B_CS2);
20003386:	2118      	movs	r1, #24
20003388:	20c0      	movs	r0, #192	; 0xc0
2000338a:	f7ff ff91 	bl	200032b0 <graphic_write_command>
	graphic_write_command(LCD_SET_ADD, B_CS1|B_CS2);
2000338e:	2118      	movs	r1, #24
20003390:	2040      	movs	r0, #64	; 0x40
20003392:	f7ff ff8d 	bl	200032b0 <graphic_write_command>
	graphic_write_command(LCD_SET_PAGE, B_CS1|B_CS2);
20003396:	2118      	movs	r1, #24
20003398:	20b8      	movs	r0, #184	; 0xb8
2000339a:	f7ff ff89 	bl	200032b0 <graphic_write_command>
	select_controller(0);
2000339e:	2000      	movs	r0, #0
200033a0:	f7ff fe7e 	bl	200030a0 <select_controller>
}
200033a4:	46c0      	nop			; (mov r8, r8)
200033a6:	46bd      	mov	sp, r7
200033a8:	bd80      	pop	{r7, pc}

200033aa <graphic_clear_screen>:
void graphic_clear_screen( void ) {	//Annat i slidesen
200033aa:	b580      	push	{r7, lr}
200033ac:	b082      	sub	sp, #8
200033ae:	af00      	add	r7, sp, #0
	uint8_t page;
	for (page = 0; page < 8; page++) {
200033b0:	1dfb      	adds	r3, r7, #7
200033b2:	2200      	movs	r2, #0
200033b4:	701a      	strb	r2, [r3, #0]
200033b6:	e023      	b.n	20003400 <graphic_clear_screen+0x56>
		graphic_write_command(LCD_SET_PAGE | page, B_CS1|B_CS2);
200033b8:	1dfb      	adds	r3, r7, #7
200033ba:	781b      	ldrb	r3, [r3, #0]
200033bc:	2248      	movs	r2, #72	; 0x48
200033be:	4252      	negs	r2, r2
200033c0:	4313      	orrs	r3, r2
200033c2:	b2db      	uxtb	r3, r3
200033c4:	2118      	movs	r1, #24
200033c6:	0018      	movs	r0, r3
200033c8:	f7ff ff72 	bl	200032b0 <graphic_write_command>
		graphic_write_command(LCD_SET_ADD | 0, B_CS1|B_CS2);
200033cc:	2118      	movs	r1, #24
200033ce:	2040      	movs	r0, #64	; 0x40
200033d0:	f7ff ff6e 	bl	200032b0 <graphic_write_command>
		uint8_t add;
		for (add = 0; add < 64; add++) {
200033d4:	1dbb      	adds	r3, r7, #6
200033d6:	2200      	movs	r2, #0
200033d8:	701a      	strb	r2, [r3, #0]
200033da:	e008      	b.n	200033ee <graphic_clear_screen+0x44>
			graphic_write_data(0, B_CS1|B_CS2);
200033dc:	2118      	movs	r1, #24
200033de:	2000      	movs	r0, #0
200033e0:	f7ff ff89 	bl	200032f6 <graphic_write_data>
		for (add = 0; add < 64; add++) {
200033e4:	1dbb      	adds	r3, r7, #6
200033e6:	781a      	ldrb	r2, [r3, #0]
200033e8:	1dbb      	adds	r3, r7, #6
200033ea:	3201      	adds	r2, #1
200033ec:	701a      	strb	r2, [r3, #0]
200033ee:	1dbb      	adds	r3, r7, #6
200033f0:	781b      	ldrb	r3, [r3, #0]
200033f2:	2b3f      	cmp	r3, #63	; 0x3f
200033f4:	d9f2      	bls.n	200033dc <graphic_clear_screen+0x32>
	for (page = 0; page < 8; page++) {
200033f6:	1dfb      	adds	r3, r7, #7
200033f8:	781a      	ldrb	r2, [r3, #0]
200033fa:	1dfb      	adds	r3, r7, #7
200033fc:	3201      	adds	r2, #1
200033fe:	701a      	strb	r2, [r3, #0]
20003400:	1dfb      	adds	r3, r7, #7
20003402:	781b      	ldrb	r3, [r3, #0]
20003404:	2b07      	cmp	r3, #7
20003406:	d9d7      	bls.n	200033b8 <graphic_clear_screen+0xe>
		}
	}
}
20003408:	46c0      	nop			; (mov r8, r8)
2000340a:	46bd      	mov	sp, r7
2000340c:	b002      	add	sp, #8
2000340e:	bd80      	pop	{r7, pc}

20003410 <pixel>:

/** Color: 1=light 2=gray 3=black*/
void pixel(int x, int y, int set, int color) {
20003410:	b580      	push	{r7, lr}
20003412:	b086      	sub	sp, #24
20003414:	af00      	add	r7, sp, #0
20003416:	60f8      	str	r0, [r7, #12]
20003418:	60b9      	str	r1, [r7, #8]
2000341a:	607a      	str	r2, [r7, #4]
2000341c:	603b      	str	r3, [r7, #0]
	uint8_t mask;
	int index = 0;
2000341e:	2300      	movs	r3, #0
20003420:	613b      	str	r3, [r7, #16]
	if( (x > 128 ) || (x < 1) || (y > 64) || (y < 1) ) 
20003422:	68fb      	ldr	r3, [r7, #12]
20003424:	2b80      	cmp	r3, #128	; 0x80
20003426:	dd00      	ble.n	2000342a <pixel+0x1a>
20003428:	e0a6      	b.n	20003578 <pixel+0x168>
2000342a:	68fb      	ldr	r3, [r7, #12]
2000342c:	2b00      	cmp	r3, #0
2000342e:	dc00      	bgt.n	20003432 <pixel+0x22>
20003430:	e0a2      	b.n	20003578 <pixel+0x168>
20003432:	68bb      	ldr	r3, [r7, #8]
20003434:	2b40      	cmp	r3, #64	; 0x40
20003436:	dd00      	ble.n	2000343a <pixel+0x2a>
20003438:	e09e      	b.n	20003578 <pixel+0x168>
2000343a:	68bb      	ldr	r3, [r7, #8]
2000343c:	2b00      	cmp	r3, #0
2000343e:	dc00      	bgt.n	20003442 <pixel+0x32>
20003440:	e09a      	b.n	20003578 <pixel+0x168>
		return;
	mask = 1 << ((y-1)%8);
20003442:	68bb      	ldr	r3, [r7, #8]
20003444:	3b01      	subs	r3, #1
20003446:	4a4e      	ldr	r2, [pc, #312]	; (20003580 <pixel+0x170>)
20003448:	4013      	ands	r3, r2
2000344a:	d504      	bpl.n	20003456 <pixel+0x46>
2000344c:	3b01      	subs	r3, #1
2000344e:	2208      	movs	r2, #8
20003450:	4252      	negs	r2, r2
20003452:	4313      	orrs	r3, r2
20003454:	3301      	adds	r3, #1
20003456:	001a      	movs	r2, r3
20003458:	2301      	movs	r3, #1
2000345a:	4093      	lsls	r3, r2
2000345c:	001a      	movs	r2, r3
2000345e:	2317      	movs	r3, #23
20003460:	18fb      	adds	r3, r7, r3
20003462:	701a      	strb	r2, [r3, #0]
	if(x > 64) {
20003464:	68fb      	ldr	r3, [r7, #12]
20003466:	2b40      	cmp	r3, #64	; 0x40
20003468:	dd05      	ble.n	20003476 <pixel+0x66>
		x -= 65;
2000346a:	68fb      	ldr	r3, [r7, #12]
2000346c:	3b41      	subs	r3, #65	; 0x41
2000346e:	60fb      	str	r3, [r7, #12]
		index = 512;
20003470:	2380      	movs	r3, #128	; 0x80
20003472:	009b      	lsls	r3, r3, #2
20003474:	613b      	str	r3, [r7, #16]
	}
	index += x + ((y-1)/8)*64;
20003476:	68bb      	ldr	r3, [r7, #8]
20003478:	3b01      	subs	r3, #1
2000347a:	2b00      	cmp	r3, #0
2000347c:	da00      	bge.n	20003480 <pixel+0x70>
2000347e:	3307      	adds	r3, #7
20003480:	10db      	asrs	r3, r3, #3
20003482:	019a      	lsls	r2, r3, #6
20003484:	68fb      	ldr	r3, [r7, #12]
20003486:	18d3      	adds	r3, r2, r3
20003488:	693a      	ldr	r2, [r7, #16]
2000348a:	18d3      	adds	r3, r2, r3
2000348c:	613b      	str	r3, [r7, #16]

	if(set == 0)
2000348e:	687b      	ldr	r3, [r7, #4]
20003490:	2b00      	cmp	r3, #0
20003492:	d106      	bne.n	200034a2 <pixel+0x92>
		mask = ~mask;
20003494:	2317      	movs	r3, #23
20003496:	18fb      	adds	r3, r7, r3
20003498:	2217      	movs	r2, #23
2000349a:	18ba      	adds	r2, r7, r2
2000349c:	7812      	ldrb	r2, [r2, #0]
2000349e:	43d2      	mvns	r2, r2
200034a0:	701a      	strb	r2, [r3, #0]

	switch (color) {
200034a2:	683b      	ldr	r3, [r7, #0]
200034a4:	2b02      	cmp	r3, #2
200034a6:	d024      	beq.n	200034f2 <pixel+0xe2>
200034a8:	2b03      	cmp	r3, #3
200034aa:	d043      	beq.n	20003534 <pixel+0x124>
200034ac:	2b01      	cmp	r3, #1
200034ae:	d164      	bne.n	2000357a <pixel+0x16a>
		case 1:	
			if(set)
200034b0:	687b      	ldr	r3, [r7, #4]
200034b2:	2b00      	cmp	r3, #0
200034b4:	d00e      	beq.n	200034d4 <pixel+0xc4>
				backBufferLight[index] |= mask;
200034b6:	4a33      	ldr	r2, [pc, #204]	; (20003584 <pixel+0x174>)
200034b8:	693b      	ldr	r3, [r7, #16]
200034ba:	18d3      	adds	r3, r2, r3
200034bc:	781a      	ldrb	r2, [r3, #0]
200034be:	2317      	movs	r3, #23
200034c0:	18fb      	adds	r3, r7, r3
200034c2:	781b      	ldrb	r3, [r3, #0]
200034c4:	4313      	orrs	r3, r2
200034c6:	b2d9      	uxtb	r1, r3
200034c8:	4a2e      	ldr	r2, [pc, #184]	; (20003584 <pixel+0x174>)
200034ca:	693b      	ldr	r3, [r7, #16]
200034cc:	18d3      	adds	r3, r2, r3
200034ce:	1c0a      	adds	r2, r1, #0
200034d0:	701a      	strb	r2, [r3, #0]
			else
				backBufferLight[index] &= mask;
			break;
200034d2:	e052      	b.n	2000357a <pixel+0x16a>
				backBufferLight[index] &= mask;
200034d4:	4a2b      	ldr	r2, [pc, #172]	; (20003584 <pixel+0x174>)
200034d6:	693b      	ldr	r3, [r7, #16]
200034d8:	18d3      	adds	r3, r2, r3
200034da:	781b      	ldrb	r3, [r3, #0]
200034dc:	2217      	movs	r2, #23
200034de:	18ba      	adds	r2, r7, r2
200034e0:	7812      	ldrb	r2, [r2, #0]
200034e2:	4013      	ands	r3, r2
200034e4:	b2d9      	uxtb	r1, r3
200034e6:	4a27      	ldr	r2, [pc, #156]	; (20003584 <pixel+0x174>)
200034e8:	693b      	ldr	r3, [r7, #16]
200034ea:	18d3      	adds	r3, r2, r3
200034ec:	1c0a      	adds	r2, r1, #0
200034ee:	701a      	strb	r2, [r3, #0]
			break;
200034f0:	e043      	b.n	2000357a <pixel+0x16a>
		
		case 2:	
			if(set)
200034f2:	687b      	ldr	r3, [r7, #4]
200034f4:	2b00      	cmp	r3, #0
200034f6:	d00e      	beq.n	20003516 <pixel+0x106>
				backBufferGray[index] |= mask;
200034f8:	4a23      	ldr	r2, [pc, #140]	; (20003588 <pixel+0x178>)
200034fa:	693b      	ldr	r3, [r7, #16]
200034fc:	18d3      	adds	r3, r2, r3
200034fe:	781a      	ldrb	r2, [r3, #0]
20003500:	2317      	movs	r3, #23
20003502:	18fb      	adds	r3, r7, r3
20003504:	781b      	ldrb	r3, [r3, #0]
20003506:	4313      	orrs	r3, r2
20003508:	b2d9      	uxtb	r1, r3
2000350a:	4a1f      	ldr	r2, [pc, #124]	; (20003588 <pixel+0x178>)
2000350c:	693b      	ldr	r3, [r7, #16]
2000350e:	18d3      	adds	r3, r2, r3
20003510:	1c0a      	adds	r2, r1, #0
20003512:	701a      	strb	r2, [r3, #0]
			else
				backBufferGray[index] &= mask;
			break;
20003514:	e031      	b.n	2000357a <pixel+0x16a>
				backBufferGray[index] &= mask;
20003516:	4a1c      	ldr	r2, [pc, #112]	; (20003588 <pixel+0x178>)
20003518:	693b      	ldr	r3, [r7, #16]
2000351a:	18d3      	adds	r3, r2, r3
2000351c:	781b      	ldrb	r3, [r3, #0]
2000351e:	2217      	movs	r2, #23
20003520:	18ba      	adds	r2, r7, r2
20003522:	7812      	ldrb	r2, [r2, #0]
20003524:	4013      	ands	r3, r2
20003526:	b2d9      	uxtb	r1, r3
20003528:	4a17      	ldr	r2, [pc, #92]	; (20003588 <pixel+0x178>)
2000352a:	693b      	ldr	r3, [r7, #16]
2000352c:	18d3      	adds	r3, r2, r3
2000352e:	1c0a      	adds	r2, r1, #0
20003530:	701a      	strb	r2, [r3, #0]
			break;
20003532:	e022      	b.n	2000357a <pixel+0x16a>
		
		case 3:	
			if(set)
20003534:	687b      	ldr	r3, [r7, #4]
20003536:	2b00      	cmp	r3, #0
20003538:	d00e      	beq.n	20003558 <pixel+0x148>
				backBuffer[index] |= mask;
2000353a:	4a14      	ldr	r2, [pc, #80]	; (2000358c <pixel+0x17c>)
2000353c:	693b      	ldr	r3, [r7, #16]
2000353e:	18d3      	adds	r3, r2, r3
20003540:	781a      	ldrb	r2, [r3, #0]
20003542:	2317      	movs	r3, #23
20003544:	18fb      	adds	r3, r7, r3
20003546:	781b      	ldrb	r3, [r3, #0]
20003548:	4313      	orrs	r3, r2
2000354a:	b2d9      	uxtb	r1, r3
2000354c:	4a0f      	ldr	r2, [pc, #60]	; (2000358c <pixel+0x17c>)
2000354e:	693b      	ldr	r3, [r7, #16]
20003550:	18d3      	adds	r3, r2, r3
20003552:	1c0a      	adds	r2, r1, #0
20003554:	701a      	strb	r2, [r3, #0]
			else
				backBuffer[index] &= mask;
			break;
20003556:	e010      	b.n	2000357a <pixel+0x16a>
				backBuffer[index] &= mask;
20003558:	4a0c      	ldr	r2, [pc, #48]	; (2000358c <pixel+0x17c>)
2000355a:	693b      	ldr	r3, [r7, #16]
2000355c:	18d3      	adds	r3, r2, r3
2000355e:	781b      	ldrb	r3, [r3, #0]
20003560:	2217      	movs	r2, #23
20003562:	18ba      	adds	r2, r7, r2
20003564:	7812      	ldrb	r2, [r2, #0]
20003566:	4013      	ands	r3, r2
20003568:	b2d9      	uxtb	r1, r3
2000356a:	4a08      	ldr	r2, [pc, #32]	; (2000358c <pixel+0x17c>)
2000356c:	693b      	ldr	r3, [r7, #16]
2000356e:	18d3      	adds	r3, r2, r3
20003570:	1c0a      	adds	r2, r1, #0
20003572:	701a      	strb	r2, [r3, #0]
			break;
20003574:	46c0      	nop			; (mov r8, r8)
20003576:	e000      	b.n	2000357a <pixel+0x16a>
		return;
20003578:	46c0      	nop			; (mov r8, r8)
			
	}

}
2000357a:	46bd      	mov	sp, r7
2000357c:	b006      	add	sp, #24
2000357e:	bd80      	pop	{r7, pc}
20003580:	80000007 	andhi	r0, r0, r7
20003584:	20006c88 	andcs	r6, r0, r8, lsl #25
20003588:	20005488 	andcs	r5, r0, r8, lsl #9
2000358c:	20005c88 	andcs	r5, r0, r8, lsl #25

20003590 <pixel2>:


void pixel2(int x, int y, int set) {
20003590:	b580      	push	{r7, lr}
20003592:	b088      	sub	sp, #32
20003594:	af00      	add	r7, sp, #0
20003596:	60f8      	str	r0, [r7, #12]
20003598:	60b9      	str	r1, [r7, #8]
2000359a:	607a      	str	r2, [r7, #4]
	uint8_t mask, c, controller;
	int index;
	if((x < 1) || (y < 1) || (x > 128) || (y > 64)) return;
2000359c:	68fb      	ldr	r3, [r7, #12]
2000359e:	2b00      	cmp	r3, #0
200035a0:	dc00      	bgt.n	200035a4 <pixel2+0x14>
200035a2:	e0bc      	b.n	2000371e <pixel2+0x18e>
200035a4:	68bb      	ldr	r3, [r7, #8]
200035a6:	2b00      	cmp	r3, #0
200035a8:	dc00      	bgt.n	200035ac <pixel2+0x1c>
200035aa:	e0b8      	b.n	2000371e <pixel2+0x18e>
200035ac:	68fb      	ldr	r3, [r7, #12]
200035ae:	2b80      	cmp	r3, #128	; 0x80
200035b0:	dd00      	ble.n	200035b4 <pixel2+0x24>
200035b2:	e0b4      	b.n	2000371e <pixel2+0x18e>
200035b4:	68bb      	ldr	r3, [r7, #8]
200035b6:	2b40      	cmp	r3, #64	; 0x40
200035b8:	dd00      	ble.n	200035bc <pixel2+0x2c>
200035ba:	e0b0      	b.n	2000371e <pixel2+0x18e>
	index = (y-1)/8;
200035bc:	68bb      	ldr	r3, [r7, #8]
200035be:	3b01      	subs	r3, #1
200035c0:	2b00      	cmp	r3, #0
200035c2:	da00      	bge.n	200035c6 <pixel2+0x36>
200035c4:	3307      	adds	r3, #7
200035c6:	10db      	asrs	r3, r3, #3
200035c8:	61bb      	str	r3, [r7, #24]
	switch( (y-1)%8 ) {
200035ca:	68bb      	ldr	r3, [r7, #8]
200035cc:	3b01      	subs	r3, #1
200035ce:	4a56      	ldr	r2, [pc, #344]	; (20003728 <pixel2+0x198>)
200035d0:	4013      	ands	r3, r2
200035d2:	d504      	bpl.n	200035de <pixel2+0x4e>
200035d4:	3b01      	subs	r3, #1
200035d6:	2208      	movs	r2, #8
200035d8:	4252      	negs	r2, r2
200035da:	4313      	orrs	r3, r2
200035dc:	3301      	adds	r3, #1
200035de:	2b07      	cmp	r3, #7
200035e0:	d82c      	bhi.n	2000363c <pixel2+0xac>
200035e2:	009a      	lsls	r2, r3, #2
200035e4:	4b51      	ldr	r3, [pc, #324]	; (2000372c <pixel2+0x19c>)
200035e6:	18d3      	adds	r3, r2, r3
200035e8:	681b      	ldr	r3, [r3, #0]
200035ea:	469f      	mov	pc, r3
		case 0: mask = 1; break;
200035ec:	231f      	movs	r3, #31
200035ee:	18fb      	adds	r3, r7, r3
200035f0:	2201      	movs	r2, #1
200035f2:	701a      	strb	r2, [r3, #0]
200035f4:	e022      	b.n	2000363c <pixel2+0xac>
		case 1: mask = 2; break;
200035f6:	231f      	movs	r3, #31
200035f8:	18fb      	adds	r3, r7, r3
200035fa:	2202      	movs	r2, #2
200035fc:	701a      	strb	r2, [r3, #0]
200035fe:	e01d      	b.n	2000363c <pixel2+0xac>
		case 2: mask = 4; break;
20003600:	231f      	movs	r3, #31
20003602:	18fb      	adds	r3, r7, r3
20003604:	2204      	movs	r2, #4
20003606:	701a      	strb	r2, [r3, #0]
20003608:	e018      	b.n	2000363c <pixel2+0xac>
		case 3: mask = 8; break;
2000360a:	231f      	movs	r3, #31
2000360c:	18fb      	adds	r3, r7, r3
2000360e:	2208      	movs	r2, #8
20003610:	701a      	strb	r2, [r3, #0]
20003612:	e013      	b.n	2000363c <pixel2+0xac>
		case 4: mask = 0x10; break;
20003614:	231f      	movs	r3, #31
20003616:	18fb      	adds	r3, r7, r3
20003618:	2210      	movs	r2, #16
2000361a:	701a      	strb	r2, [r3, #0]
2000361c:	e00e      	b.n	2000363c <pixel2+0xac>
		case 5: mask = 0x20; break;
2000361e:	231f      	movs	r3, #31
20003620:	18fb      	adds	r3, r7, r3
20003622:	2220      	movs	r2, #32
20003624:	701a      	strb	r2, [r3, #0]
20003626:	e009      	b.n	2000363c <pixel2+0xac>
		case 6: mask = 0x40; break;
20003628:	231f      	movs	r3, #31
2000362a:	18fb      	adds	r3, r7, r3
2000362c:	2240      	movs	r2, #64	; 0x40
2000362e:	701a      	strb	r2, [r3, #0]
20003630:	e004      	b.n	2000363c <pixel2+0xac>
		case 7: mask = 0x80; break;
20003632:	231f      	movs	r3, #31
20003634:	18fb      	adds	r3, r7, r3
20003636:	2280      	movs	r2, #128	; 0x80
20003638:	701a      	strb	r2, [r3, #0]
2000363a:	46c0      	nop			; (mov r8, r8)
	}
	
	if(set == 0)
2000363c:	687b      	ldr	r3, [r7, #4]
2000363e:	2b00      	cmp	r3, #0
20003640:	d106      	bne.n	20003650 <pixel2+0xc0>
		mask = ~mask;
20003642:	231f      	movs	r3, #31
20003644:	18fb      	adds	r3, r7, r3
20003646:	221f      	movs	r2, #31
20003648:	18ba      	adds	r2, r7, r2
2000364a:	7812      	ldrb	r2, [r2, #0]
2000364c:	43d2      	mvns	r2, r2
2000364e:	701a      	strb	r2, [r3, #0]
	
	if(x > 64){
20003650:	68fb      	ldr	r3, [r7, #12]
20003652:	2b40      	cmp	r3, #64	; 0x40
20003654:	dd07      	ble.n	20003666 <pixel2+0xd6>
		controller = B_CS2;
20003656:	231e      	movs	r3, #30
20003658:	18fb      	adds	r3, r7, r3
2000365a:	2210      	movs	r2, #16
2000365c:	701a      	strb	r2, [r3, #0]
		x = x - 65;
2000365e:	68fb      	ldr	r3, [r7, #12]
20003660:	3b41      	subs	r3, #65	; 0x41
20003662:	60fb      	str	r3, [r7, #12]
20003664:	e006      	b.n	20003674 <pixel2+0xe4>
	} else {
		controller = B_CS1;
20003666:	231e      	movs	r3, #30
20003668:	18fb      	adds	r3, r7, r3
2000366a:	2208      	movs	r2, #8
2000366c:	701a      	strb	r2, [r3, #0]
		x = x-1;
2000366e:	68fb      	ldr	r3, [r7, #12]
20003670:	3b01      	subs	r3, #1
20003672:	60fb      	str	r3, [r7, #12]
	}
	graphic_write_command(LCD_SET_ADD | x, controller );
20003674:	68fb      	ldr	r3, [r7, #12]
20003676:	b25b      	sxtb	r3, r3
20003678:	2240      	movs	r2, #64	; 0x40
2000367a:	4313      	orrs	r3, r2
2000367c:	b25b      	sxtb	r3, r3
2000367e:	b2da      	uxtb	r2, r3
20003680:	231e      	movs	r3, #30
20003682:	18fb      	adds	r3, r7, r3
20003684:	781b      	ldrb	r3, [r3, #0]
20003686:	0019      	movs	r1, r3
20003688:	0010      	movs	r0, r2
2000368a:	f7ff fe11 	bl	200032b0 <graphic_write_command>
	graphic_write_command(LCD_SET_PAGE | index, controller );
2000368e:	69bb      	ldr	r3, [r7, #24]
20003690:	b25b      	sxtb	r3, r3
20003692:	2248      	movs	r2, #72	; 0x48
20003694:	4252      	negs	r2, r2
20003696:	4313      	orrs	r3, r2
20003698:	b25b      	sxtb	r3, r3
2000369a:	b2da      	uxtb	r2, r3
2000369c:	231e      	movs	r3, #30
2000369e:	18fb      	adds	r3, r7, r3
200036a0:	781b      	ldrb	r3, [r3, #0]
200036a2:	0019      	movs	r1, r3
200036a4:	0010      	movs	r0, r2
200036a6:	f7ff fe03 	bl	200032b0 <graphic_write_command>
	
	c = graphic_read_data(controller);
200036aa:	231e      	movs	r3, #30
200036ac:	18fb      	adds	r3, r7, r3
200036ae:	781b      	ldrb	r3, [r3, #0]
200036b0:	0018      	movs	r0, r3
200036b2:	f7ff fda9 	bl	20003208 <graphic_read_data>
200036b6:	0002      	movs	r2, r0
200036b8:	2317      	movs	r3, #23
200036ba:	18fb      	adds	r3, r7, r3
200036bc:	701a      	strb	r2, [r3, #0]
	graphic_write_command(LCD_SET_ADD | x, controller);
200036be:	68fb      	ldr	r3, [r7, #12]
200036c0:	b25b      	sxtb	r3, r3
200036c2:	2240      	movs	r2, #64	; 0x40
200036c4:	4313      	orrs	r3, r2
200036c6:	b25b      	sxtb	r3, r3
200036c8:	b2da      	uxtb	r2, r3
200036ca:	231e      	movs	r3, #30
200036cc:	18fb      	adds	r3, r7, r3
200036ce:	781b      	ldrb	r3, [r3, #0]
200036d0:	0019      	movs	r1, r3
200036d2:	0010      	movs	r0, r2
200036d4:	f7ff fdec 	bl	200032b0 <graphic_write_command>
	
	if(set)
200036d8:	687b      	ldr	r3, [r7, #4]
200036da:	2b00      	cmp	r3, #0
200036dc:	d00a      	beq.n	200036f4 <pixel2+0x164>
		mask = mask | c;
200036de:	231f      	movs	r3, #31
200036e0:	18fb      	adds	r3, r7, r3
200036e2:	221f      	movs	r2, #31
200036e4:	18b9      	adds	r1, r7, r2
200036e6:	2217      	movs	r2, #23
200036e8:	18ba      	adds	r2, r7, r2
200036ea:	7809      	ldrb	r1, [r1, #0]
200036ec:	7812      	ldrb	r2, [r2, #0]
200036ee:	430a      	orrs	r2, r1
200036f0:	701a      	strb	r2, [r3, #0]
200036f2:	e009      	b.n	20003708 <pixel2+0x178>
	else
		mask = mask & c;
200036f4:	231f      	movs	r3, #31
200036f6:	18fb      	adds	r3, r7, r3
200036f8:	221f      	movs	r2, #31
200036fa:	18ba      	adds	r2, r7, r2
200036fc:	2117      	movs	r1, #23
200036fe:	1879      	adds	r1, r7, r1
20003700:	7812      	ldrb	r2, [r2, #0]
20003702:	7809      	ldrb	r1, [r1, #0]
20003704:	400a      	ands	r2, r1
20003706:	701a      	strb	r2, [r3, #0]
	
	graphic_write_data(mask, controller);
20003708:	231e      	movs	r3, #30
2000370a:	18fb      	adds	r3, r7, r3
2000370c:	781a      	ldrb	r2, [r3, #0]
2000370e:	231f      	movs	r3, #31
20003710:	18fb      	adds	r3, r7, r3
20003712:	781b      	ldrb	r3, [r3, #0]
20003714:	0011      	movs	r1, r2
20003716:	0018      	movs	r0, r3
20003718:	f7ff fded 	bl	200032f6 <graphic_write_data>
2000371c:	e000      	b.n	20003720 <pixel2+0x190>
	if((x < 1) || (y < 1) || (x > 128) || (y > 64)) return;
2000371e:	46c0      	nop			; (mov r8, r8)
}
20003720:	46bd      	mov	sp, r7
20003722:	b008      	add	sp, #32
20003724:	bd80      	pop	{r7, pc}
20003726:	46c0      	nop			; (mov r8, r8)
20003728:	80000007 	andhi	r0, r0, r7
2000372c:	2000f710 	andcs	pc, r0, r0, lsl r7	; <UNPREDICTABLE>

20003730 <graphic_draw_screen>:

void graphic_draw_screen(uint8_t *buffer) {
20003730:	b580      	push	{r7, lr}
20003732:	b086      	sub	sp, #24
20003734:	af00      	add	r7, sp, #0
20003736:	6078      	str	r0, [r7, #4]
	uint8_t i, j, controller, c;
	unsigned int k = 0;
20003738:	2300      	movs	r3, #0
2000373a:	613b      	str	r3, [r7, #16]
	for(c = 0; c < 2; c++) {
2000373c:	2315      	movs	r3, #21
2000373e:	18fb      	adds	r3, r7, r3
20003740:	2200      	movs	r2, #0
20003742:	701a      	strb	r2, [r3, #0]
20003744:	e056      	b.n	200037f4 <graphic_draw_screen+0xc4>
		controller = (c == 0) ? B_CS1 : B_CS2;
20003746:	2315      	movs	r3, #21
20003748:	18fb      	adds	r3, r7, r3
2000374a:	781b      	ldrb	r3, [r3, #0]
2000374c:	2b00      	cmp	r3, #0
2000374e:	d101      	bne.n	20003754 <graphic_draw_screen+0x24>
20003750:	2208      	movs	r2, #8
20003752:	e000      	b.n	20003756 <graphic_draw_screen+0x26>
20003754:	2210      	movs	r2, #16
20003756:	230f      	movs	r3, #15
20003758:	18fb      	adds	r3, r7, r3
2000375a:	701a      	strb	r2, [r3, #0]
		for(j = 0; j < 8; j++) {
2000375c:	2316      	movs	r3, #22
2000375e:	18fb      	adds	r3, r7, r3
20003760:	2200      	movs	r2, #0
20003762:	701a      	strb	r2, [r3, #0]
20003764:	e03a      	b.n	200037dc <graphic_draw_screen+0xac>
			graphic_write_command(LCD_SET_PAGE | j, controller);
20003766:	2316      	movs	r3, #22
20003768:	18fb      	adds	r3, r7, r3
2000376a:	781b      	ldrb	r3, [r3, #0]
2000376c:	2248      	movs	r2, #72	; 0x48
2000376e:	4252      	negs	r2, r2
20003770:	4313      	orrs	r3, r2
20003772:	b2da      	uxtb	r2, r3
20003774:	230f      	movs	r3, #15
20003776:	18fb      	adds	r3, r7, r3
20003778:	781b      	ldrb	r3, [r3, #0]
2000377a:	0019      	movs	r1, r3
2000377c:	0010      	movs	r0, r2
2000377e:	f7ff fd97 	bl	200032b0 <graphic_write_command>
			graphic_write_command(LCD_SET_ADD | 0, controller);
20003782:	230f      	movs	r3, #15
20003784:	18fb      	adds	r3, r7, r3
20003786:	781b      	ldrb	r3, [r3, #0]
20003788:	0019      	movs	r1, r3
2000378a:	2040      	movs	r0, #64	; 0x40
2000378c:	f7ff fd90 	bl	200032b0 <graphic_write_command>
			for(i = 0; i <= 63; i++, k++) {
20003790:	2317      	movs	r3, #23
20003792:	18fb      	adds	r3, r7, r3
20003794:	2200      	movs	r2, #0
20003796:	701a      	strb	r2, [r3, #0]
20003798:	e014      	b.n	200037c4 <graphic_draw_screen+0x94>
				graphic_write_data(buffer[k], controller);
2000379a:	687a      	ldr	r2, [r7, #4]
2000379c:	693b      	ldr	r3, [r7, #16]
2000379e:	18d3      	adds	r3, r2, r3
200037a0:	781a      	ldrb	r2, [r3, #0]
200037a2:	230f      	movs	r3, #15
200037a4:	18fb      	adds	r3, r7, r3
200037a6:	781b      	ldrb	r3, [r3, #0]
200037a8:	0019      	movs	r1, r3
200037aa:	0010      	movs	r0, r2
200037ac:	f7ff fda3 	bl	200032f6 <graphic_write_data>
			for(i = 0; i <= 63; i++, k++) {
200037b0:	2317      	movs	r3, #23
200037b2:	18fb      	adds	r3, r7, r3
200037b4:	781a      	ldrb	r2, [r3, #0]
200037b6:	2317      	movs	r3, #23
200037b8:	18fb      	adds	r3, r7, r3
200037ba:	3201      	adds	r2, #1
200037bc:	701a      	strb	r2, [r3, #0]
200037be:	693b      	ldr	r3, [r7, #16]
200037c0:	3301      	adds	r3, #1
200037c2:	613b      	str	r3, [r7, #16]
200037c4:	2317      	movs	r3, #23
200037c6:	18fb      	adds	r3, r7, r3
200037c8:	781b      	ldrb	r3, [r3, #0]
200037ca:	2b3f      	cmp	r3, #63	; 0x3f
200037cc:	d9e5      	bls.n	2000379a <graphic_draw_screen+0x6a>
		for(j = 0; j < 8; j++) {
200037ce:	2316      	movs	r3, #22
200037d0:	18fb      	adds	r3, r7, r3
200037d2:	781a      	ldrb	r2, [r3, #0]
200037d4:	2316      	movs	r3, #22
200037d6:	18fb      	adds	r3, r7, r3
200037d8:	3201      	adds	r2, #1
200037da:	701a      	strb	r2, [r3, #0]
200037dc:	2316      	movs	r3, #22
200037de:	18fb      	adds	r3, r7, r3
200037e0:	781b      	ldrb	r3, [r3, #0]
200037e2:	2b07      	cmp	r3, #7
200037e4:	d9bf      	bls.n	20003766 <graphic_draw_screen+0x36>
	for(c = 0; c < 2; c++) {
200037e6:	2315      	movs	r3, #21
200037e8:	18fb      	adds	r3, r7, r3
200037ea:	781a      	ldrb	r2, [r3, #0]
200037ec:	2315      	movs	r3, #21
200037ee:	18fb      	adds	r3, r7, r3
200037f0:	3201      	adds	r2, #1
200037f2:	701a      	strb	r2, [r3, #0]
200037f4:	2315      	movs	r3, #21
200037f6:	18fb      	adds	r3, r7, r3
200037f8:	781b      	ldrb	r3, [r3, #0]
200037fa:	2b01      	cmp	r3, #1
200037fc:	d9a3      	bls.n	20003746 <graphic_draw_screen+0x16>
			}
		}
	}
}
200037fe:	46c0      	nop			; (mov r8, r8)
20003800:	46bd      	mov	sp, r7
20003802:	b006      	add	sp, #24
20003804:	bd80      	pop	{r7, pc}

20003806 <draw_sprite>:


void grayScaleTest( void );


void draw_sprite(sprite* s, int x, int y, int set, int color) {
20003806:	b5b0      	push	{r4, r5, r7, lr}
20003808:	b08a      	sub	sp, #40	; 0x28
2000380a:	af00      	add	r7, sp, #0
2000380c:	60f8      	str	r0, [r7, #12]
2000380e:	60b9      	str	r1, [r7, #8]
20003810:	607a      	str	r2, [r7, #4]
20003812:	603b      	str	r3, [r7, #0]
	int i,j,k, width_in_bytes;
	if (s->width % 8 == 0)
20003814:	68fb      	ldr	r3, [r7, #12]
20003816:	681b      	ldr	r3, [r3, #0]
20003818:	2207      	movs	r2, #7
2000381a:	4013      	ands	r3, r2
2000381c:	d104      	bne.n	20003828 <draw_sprite+0x22>
		width_in_bytes = s->width / 8;
2000381e:	68fb      	ldr	r3, [r7, #12]
20003820:	681b      	ldr	r3, [r3, #0]
20003822:	08db      	lsrs	r3, r3, #3
20003824:	61bb      	str	r3, [r7, #24]
20003826:	e004      	b.n	20003832 <draw_sprite+0x2c>
	else
		width_in_bytes = (s->width / 8) + 1;
20003828:	68fb      	ldr	r3, [r7, #12]
2000382a:	681b      	ldr	r3, [r3, #0]
2000382c:	08db      	lsrs	r3, r3, #3
2000382e:	3301      	adds	r3, #1
20003830:	61bb      	str	r3, [r7, #24]
	for (i = 0; i < s->height; i++)
20003832:	2300      	movs	r3, #0
20003834:	627b      	str	r3, [r7, #36]	; 0x24
20003836:	e06a      	b.n	2000390e <draw_sprite+0x108>
		for (j = 0; j < width_in_bytes; j++) {
20003838:	2300      	movs	r3, #0
2000383a:	623b      	str	r3, [r7, #32]
2000383c:	e060      	b.n	20003900 <draw_sprite+0xfa>
			unsigned char byte = s->data[i * width_in_bytes + j];
2000383e:	68fb      	ldr	r3, [r7, #12]
20003840:	689b      	ldr	r3, [r3, #8]
20003842:	6a7a      	ldr	r2, [r7, #36]	; 0x24
20003844:	69b9      	ldr	r1, [r7, #24]
20003846:	4351      	muls	r1, r2
20003848:	6a3a      	ldr	r2, [r7, #32]
2000384a:	188a      	adds	r2, r1, r2
2000384c:	189a      	adds	r2, r3, r2
2000384e:	2317      	movs	r3, #23
20003850:	18fb      	adds	r3, r7, r3
20003852:	7812      	ldrb	r2, [r2, #0]
20003854:	701a      	strb	r2, [r3, #0]
			for (k =0; k < 8; k++) {
20003856:	2300      	movs	r3, #0
20003858:	61fb      	str	r3, [r7, #28]
2000385a:	e04b      	b.n	200038f4 <draw_sprite+0xee>
				if (byte & (1 << k)){
2000385c:	2317      	movs	r3, #23
2000385e:	18fb      	adds	r3, r7, r3
20003860:	781a      	ldrb	r2, [r3, #0]
20003862:	69fb      	ldr	r3, [r7, #28]
20003864:	411a      	asrs	r2, r3
20003866:	0013      	movs	r3, r2
20003868:	2201      	movs	r2, #1
2000386a:	4013      	ands	r3, r2
2000386c:	d03f      	beq.n	200038ee <draw_sprite+0xe8>
					pixel(8 * j + k + x + 1, i + y + 1, set, color);
2000386e:	6a3b      	ldr	r3, [r7, #32]
20003870:	00da      	lsls	r2, r3, #3
20003872:	69fb      	ldr	r3, [r7, #28]
20003874:	18d2      	adds	r2, r2, r3
20003876:	68bb      	ldr	r3, [r7, #8]
20003878:	18d3      	adds	r3, r2, r3
2000387a:	1c58      	adds	r0, r3, #1
2000387c:	6a7a      	ldr	r2, [r7, #36]	; 0x24
2000387e:	687b      	ldr	r3, [r7, #4]
20003880:	18d3      	adds	r3, r2, r3
20003882:	1c59      	adds	r1, r3, #1
20003884:	6bbb      	ldr	r3, [r7, #56]	; 0x38
20003886:	683a      	ldr	r2, [r7, #0]
20003888:	f7ff fdc2 	bl	20003410 <pixel>
					
					if(set) {	//Remove the other colors from this pixel
2000388c:	683b      	ldr	r3, [r7, #0]
2000388e:	2b00      	cmp	r3, #0
20003890:	d02d      	beq.n	200038ee <draw_sprite+0xe8>
						pixel(8 * j + k + x + 1, i + y + 1, 0, (color+1) % 3);
20003892:	6a3b      	ldr	r3, [r7, #32]
20003894:	00da      	lsls	r2, r3, #3
20003896:	69fb      	ldr	r3, [r7, #28]
20003898:	18d2      	adds	r2, r2, r3
2000389a:	68bb      	ldr	r3, [r7, #8]
2000389c:	18d3      	adds	r3, r2, r3
2000389e:	1c5c      	adds	r4, r3, #1
200038a0:	6a7a      	ldr	r2, [r7, #36]	; 0x24
200038a2:	687b      	ldr	r3, [r7, #4]
200038a4:	18d3      	adds	r3, r2, r3
200038a6:	1c5d      	adds	r5, r3, #1
200038a8:	6bbb      	ldr	r3, [r7, #56]	; 0x38
200038aa:	3301      	adds	r3, #1
200038ac:	2103      	movs	r1, #3
200038ae:	0018      	movs	r0, r3
200038b0:	f001 f808 	bl	200048c4 <__aeabi_idivmod>
200038b4:	000b      	movs	r3, r1
200038b6:	2200      	movs	r2, #0
200038b8:	0029      	movs	r1, r5
200038ba:	0020      	movs	r0, r4
200038bc:	f7ff fda8 	bl	20003410 <pixel>
						pixel(8 * j + k + x + 1, i + y + 1, 0, (color+2) % 3);
200038c0:	6a3b      	ldr	r3, [r7, #32]
200038c2:	00da      	lsls	r2, r3, #3
200038c4:	69fb      	ldr	r3, [r7, #28]
200038c6:	18d2      	adds	r2, r2, r3
200038c8:	68bb      	ldr	r3, [r7, #8]
200038ca:	18d3      	adds	r3, r2, r3
200038cc:	1c5c      	adds	r4, r3, #1
200038ce:	6a7a      	ldr	r2, [r7, #36]	; 0x24
200038d0:	687b      	ldr	r3, [r7, #4]
200038d2:	18d3      	adds	r3, r2, r3
200038d4:	1c5d      	adds	r5, r3, #1
200038d6:	6bbb      	ldr	r3, [r7, #56]	; 0x38
200038d8:	3302      	adds	r3, #2
200038da:	2103      	movs	r1, #3
200038dc:	0018      	movs	r0, r3
200038de:	f000 fff1 	bl	200048c4 <__aeabi_idivmod>
200038e2:	000b      	movs	r3, r1
200038e4:	2200      	movs	r2, #0
200038e6:	0029      	movs	r1, r5
200038e8:	0020      	movs	r0, r4
200038ea:	f7ff fd91 	bl	20003410 <pixel>
			for (k =0; k < 8; k++) {
200038ee:	69fb      	ldr	r3, [r7, #28]
200038f0:	3301      	adds	r3, #1
200038f2:	61fb      	str	r3, [r7, #28]
200038f4:	69fb      	ldr	r3, [r7, #28]
200038f6:	2b07      	cmp	r3, #7
200038f8:	ddb0      	ble.n	2000385c <draw_sprite+0x56>
		for (j = 0; j < width_in_bytes; j++) {
200038fa:	6a3b      	ldr	r3, [r7, #32]
200038fc:	3301      	adds	r3, #1
200038fe:	623b      	str	r3, [r7, #32]
20003900:	6a3a      	ldr	r2, [r7, #32]
20003902:	69bb      	ldr	r3, [r7, #24]
20003904:	429a      	cmp	r2, r3
20003906:	db9a      	blt.n	2000383e <draw_sprite+0x38>
	for (i = 0; i < s->height; i++)
20003908:	6a7b      	ldr	r3, [r7, #36]	; 0x24
2000390a:	3301      	adds	r3, #1
2000390c:	627b      	str	r3, [r7, #36]	; 0x24
2000390e:	68fb      	ldr	r3, [r7, #12]
20003910:	685a      	ldr	r2, [r3, #4]
20003912:	6a7b      	ldr	r3, [r7, #36]	; 0x24
20003914:	429a      	cmp	r2, r3
20003916:	d88f      	bhi.n	20003838 <draw_sprite+0x32>
					}
				}
			}
		}
}
20003918:	46c0      	nop			; (mov r8, r8)
2000391a:	46bd      	mov	sp, r7
2000391c:	b00a      	add	sp, #40	; 0x28
2000391e:	bdb0      	pop	{r4, r5, r7, pc}

20003920 <fillRectangle>:

void fillRectangle( int x, int y, int width, int height ){
20003920:	b580      	push	{r7, lr}
20003922:	b086      	sub	sp, #24
20003924:	af00      	add	r7, sp, #0
20003926:	60f8      	str	r0, [r7, #12]
20003928:	60b9      	str	r1, [r7, #8]
2000392a:	607a      	str	r2, [r7, #4]
2000392c:	603b      	str	r3, [r7, #0]
	int i;
	int j;
	for (i = x; i < x + width; i++) {
2000392e:	68fb      	ldr	r3, [r7, #12]
20003930:	617b      	str	r3, [r7, #20]
20003932:	e014      	b.n	2000395e <fillRectangle+0x3e>
		for (j = y; j < y + height; j++) {
20003934:	68bb      	ldr	r3, [r7, #8]
20003936:	613b      	str	r3, [r7, #16]
20003938:	e008      	b.n	2000394c <fillRectangle+0x2c>
			pixel(i, j, 1, 3);
2000393a:	6939      	ldr	r1, [r7, #16]
2000393c:	6978      	ldr	r0, [r7, #20]
2000393e:	2303      	movs	r3, #3
20003940:	2201      	movs	r2, #1
20003942:	f7ff fd65 	bl	20003410 <pixel>
		for (j = y; j < y + height; j++) {
20003946:	693b      	ldr	r3, [r7, #16]
20003948:	3301      	adds	r3, #1
2000394a:	613b      	str	r3, [r7, #16]
2000394c:	68ba      	ldr	r2, [r7, #8]
2000394e:	683b      	ldr	r3, [r7, #0]
20003950:	18d2      	adds	r2, r2, r3
20003952:	693b      	ldr	r3, [r7, #16]
20003954:	429a      	cmp	r2, r3
20003956:	dcf0      	bgt.n	2000393a <fillRectangle+0x1a>
	for (i = x; i < x + width; i++) {
20003958:	697b      	ldr	r3, [r7, #20]
2000395a:	3301      	adds	r3, #1
2000395c:	617b      	str	r3, [r7, #20]
2000395e:	68fa      	ldr	r2, [r7, #12]
20003960:	687b      	ldr	r3, [r7, #4]
20003962:	18d2      	adds	r2, r2, r3
20003964:	697b      	ldr	r3, [r7, #20]
20003966:	429a      	cmp	r2, r3
20003968:	dce4      	bgt.n	20003934 <fillRectangle+0x14>
		}
	}
}
2000396a:	46c0      	nop			; (mov r8, r8)
2000396c:	46bd      	mov	sp, r7
2000396e:	b006      	add	sp, #24
20003970:	bd80      	pop	{r7, pc}

20003972 <clearRectangle>:

void clearRectangle( int x, int y, int width, int height ){
20003972:	b580      	push	{r7, lr}
20003974:	b086      	sub	sp, #24
20003976:	af00      	add	r7, sp, #0
20003978:	60f8      	str	r0, [r7, #12]
2000397a:	60b9      	str	r1, [r7, #8]
2000397c:	607a      	str	r2, [r7, #4]
2000397e:	603b      	str	r3, [r7, #0]
	int i;
	int j;
	for (i = x; i < x + width; i++) {
20003980:	68fb      	ldr	r3, [r7, #12]
20003982:	617b      	str	r3, [r7, #20]
20003984:	e014      	b.n	200039b0 <clearRectangle+0x3e>
		for (j = y; j < y + height; j++) {
20003986:	68bb      	ldr	r3, [r7, #8]
20003988:	613b      	str	r3, [r7, #16]
2000398a:	e008      	b.n	2000399e <clearRectangle+0x2c>
			pixel(i, j, 0, 3);
2000398c:	6939      	ldr	r1, [r7, #16]
2000398e:	6978      	ldr	r0, [r7, #20]
20003990:	2303      	movs	r3, #3
20003992:	2200      	movs	r2, #0
20003994:	f7ff fd3c 	bl	20003410 <pixel>
		for (j = y; j < y + height; j++) {
20003998:	693b      	ldr	r3, [r7, #16]
2000399a:	3301      	adds	r3, #1
2000399c:	613b      	str	r3, [r7, #16]
2000399e:	68ba      	ldr	r2, [r7, #8]
200039a0:	683b      	ldr	r3, [r7, #0]
200039a2:	18d2      	adds	r2, r2, r3
200039a4:	693b      	ldr	r3, [r7, #16]
200039a6:	429a      	cmp	r2, r3
200039a8:	dcf0      	bgt.n	2000398c <clearRectangle+0x1a>
	for (i = x; i < x + width; i++) {
200039aa:	697b      	ldr	r3, [r7, #20]
200039ac:	3301      	adds	r3, #1
200039ae:	617b      	str	r3, [r7, #20]
200039b0:	68fa      	ldr	r2, [r7, #12]
200039b2:	687b      	ldr	r3, [r7, #4]
200039b4:	18d2      	adds	r2, r2, r3
200039b6:	697b      	ldr	r3, [r7, #20]
200039b8:	429a      	cmp	r2, r3
200039ba:	dce4      	bgt.n	20003986 <clearRectangle+0x14>
		}
	}
}
200039bc:	46c0      	nop			; (mov r8, r8)
200039be:	46bd      	mov	sp, r7
200039c0:	b006      	add	sp, #24
200039c2:	bd80      	pop	{r7, pc}

200039c4 <grayScaleTest>:


void grayScaleTest( void ) {
200039c4:	b590      	push	{r4, r7, lr}
200039c6:	b087      	sub	sp, #28
200039c8:	af00      	add	r7, sp, #0
	int x = 10;
200039ca:	230a      	movs	r3, #10
200039cc:	617b      	str	r3, [r7, #20]
	int y = 10;
200039ce:	230a      	movs	r3, #10
200039d0:	613b      	str	r3, [r7, #16]
	int width = 70;
200039d2:	2346      	movs	r3, #70	; 0x46
200039d4:	60fb      	str	r3, [r7, #12]
	int height = 50;
200039d6:	2332      	movs	r3, #50	; 0x32
200039d8:	60bb      	str	r3, [r7, #8]
	
	int x2 = 50;
200039da:	2332      	movs	r3, #50	; 0x32
200039dc:	607b      	str	r3, [r7, #4]
	
	fillRectangle(x, y, width, height);
200039de:	68bb      	ldr	r3, [r7, #8]
200039e0:	68fa      	ldr	r2, [r7, #12]
200039e2:	6939      	ldr	r1, [r7, #16]
200039e4:	6978      	ldr	r0, [r7, #20]
200039e6:	f7ff ff9b 	bl	20003920 <fillRectangle>
	
	int i;
	int k = 5;
200039ea:	2305      	movs	r3, #5
200039ec:	603b      	str	r3, [r7, #0]
	while(1) {
		clear_backBuffer();
200039ee:	f7ff fadf 	bl	20002fb0 <clear_backBuffer>
		fillRectangle(x, y, width, height);
200039f2:	68bb      	ldr	r3, [r7, #8]
200039f4:	68fa      	ldr	r2, [r7, #12]
200039f6:	6939      	ldr	r1, [r7, #16]
200039f8:	6978      	ldr	r0, [r7, #20]
200039fa:	f7ff ff91 	bl	20003920 <fillRectangle>
		clearRectangle(x+2+2, y+1, width-k, height-k); //outer square
200039fe:	697b      	ldr	r3, [r7, #20]
20003a00:	1d18      	adds	r0, r3, #4
20003a02:	693b      	ldr	r3, [r7, #16]
20003a04:	1c59      	adds	r1, r3, #1
20003a06:	68fa      	ldr	r2, [r7, #12]
20003a08:	683b      	ldr	r3, [r7, #0]
20003a0a:	1ad4      	subs	r4, r2, r3
20003a0c:	68ba      	ldr	r2, [r7, #8]
20003a0e:	683b      	ldr	r3, [r7, #0]
20003a10:	1ad3      	subs	r3, r2, r3
20003a12:	0022      	movs	r2, r4
20003a14:	f7ff ffad 	bl	20003972 <clearRectangle>
		clearRectangle(x+2+k, y+2, width-4-k, height-4-k); //inner square
20003a18:	697b      	ldr	r3, [r7, #20]
20003a1a:	1c9a      	adds	r2, r3, #2
20003a1c:	683b      	ldr	r3, [r7, #0]
20003a1e:	18d0      	adds	r0, r2, r3
20003a20:	693b      	ldr	r3, [r7, #16]
20003a22:	1c99      	adds	r1, r3, #2
20003a24:	68fb      	ldr	r3, [r7, #12]
20003a26:	1f1a      	subs	r2, r3, #4
20003a28:	683b      	ldr	r3, [r7, #0]
20003a2a:	1ad4      	subs	r4, r2, r3
20003a2c:	68bb      	ldr	r3, [r7, #8]
20003a2e:	1f1a      	subs	r2, r3, #4
20003a30:	683b      	ldr	r3, [r7, #0]
20003a32:	1ad3      	subs	r3, r2, r3
20003a34:	0022      	movs	r2, r4
20003a36:	f7ff ff9c 	bl	20003972 <clearRectangle>
		graphic_draw_screen(draw_buffer_black);
20003a3a:	4b2d      	ldr	r3, [pc, #180]	; (20003af0 <grayScaleTest+0x12c>)
20003a3c:	0018      	movs	r0, r3
20003a3e:	f7ff fe77 	bl	20003730 <graphic_draw_screen>
		clear_backBuffer();
20003a42:	f7ff fab5 	bl	20002fb0 <clear_backBuffer>
		fillRectangle(x, y, width, height);
20003a46:	68bb      	ldr	r3, [r7, #8]
20003a48:	68fa      	ldr	r2, [r7, #12]
20003a4a:	6939      	ldr	r1, [r7, #16]
20003a4c:	6978      	ldr	r0, [r7, #20]
20003a4e:	f7ff ff67 	bl	20003920 <fillRectangle>
		
		fillRectangle(x+2+2, y+1, width-k, height-k); //outer white square
20003a52:	697b      	ldr	r3, [r7, #20]
20003a54:	1d18      	adds	r0, r3, #4
20003a56:	693b      	ldr	r3, [r7, #16]
20003a58:	1c59      	adds	r1, r3, #1
20003a5a:	68fa      	ldr	r2, [r7, #12]
20003a5c:	683b      	ldr	r3, [r7, #0]
20003a5e:	1ad4      	subs	r4, r2, r3
20003a60:	68ba      	ldr	r2, [r7, #8]
20003a62:	683b      	ldr	r3, [r7, #0]
20003a64:	1ad3      	subs	r3, r2, r3
20003a66:	0022      	movs	r2, r4
20003a68:	f7ff ff5a 	bl	20003920 <fillRectangle>
		fillRectangle(x+2+k, y+2, width-4-k, height-4-k); //inner square
20003a6c:	697b      	ldr	r3, [r7, #20]
20003a6e:	1c9a      	adds	r2, r3, #2
20003a70:	683b      	ldr	r3, [r7, #0]
20003a72:	18d0      	adds	r0, r2, r3
20003a74:	693b      	ldr	r3, [r7, #16]
20003a76:	1c99      	adds	r1, r3, #2
20003a78:	68fb      	ldr	r3, [r7, #12]
20003a7a:	1f1a      	subs	r2, r3, #4
20003a7c:	683b      	ldr	r3, [r7, #0]
20003a7e:	1ad4      	subs	r4, r2, r3
20003a80:	68bb      	ldr	r3, [r7, #8]
20003a82:	1f1a      	subs	r2, r3, #4
20003a84:	683b      	ldr	r3, [r7, #0]
20003a86:	1ad3      	subs	r3, r2, r3
20003a88:	0022      	movs	r2, r4
20003a8a:	f7ff ff49 	bl	20003920 <fillRectangle>
		clearRectangle(x+12, y+5, 5, 5);
20003a8e:	697b      	ldr	r3, [r7, #20]
20003a90:	330c      	adds	r3, #12
20003a92:	0018      	movs	r0, r3
20003a94:	693b      	ldr	r3, [r7, #16]
20003a96:	1d59      	adds	r1, r3, #5
20003a98:	2305      	movs	r3, #5
20003a9a:	2205      	movs	r2, #5
20003a9c:	f7ff ff69 	bl	20003972 <clearRectangle>
		
		graphic_draw_screen(draw_buffer_black);
20003aa0:	4b13      	ldr	r3, [pc, #76]	; (20003af0 <grayScaleTest+0x12c>)
20003aa2:	0018      	movs	r0, r3
20003aa4:	f7ff fe44 	bl	20003730 <graphic_draw_screen>
		delay_milli(20);
20003aa8:	2014      	movs	r0, #20
20003aaa:	f7ff fa55 	bl	20002f58 <delay_milli>
		
		clear_backBuffer();
20003aae:	f7ff fa7f 	bl	20002fb0 <clear_backBuffer>
		fillRectangle(x, y, width, height);
20003ab2:	68bb      	ldr	r3, [r7, #8]
20003ab4:	68fa      	ldr	r2, [r7, #12]
20003ab6:	6939      	ldr	r1, [r7, #16]
20003ab8:	6978      	ldr	r0, [r7, #20]
20003aba:	f7ff ff31 	bl	20003920 <fillRectangle>
		clearRectangle(x+2+k, y+2, width-4-k, height-4-k); //inner square
20003abe:	697b      	ldr	r3, [r7, #20]
20003ac0:	1c9a      	adds	r2, r3, #2
20003ac2:	683b      	ldr	r3, [r7, #0]
20003ac4:	18d0      	adds	r0, r2, r3
20003ac6:	693b      	ldr	r3, [r7, #16]
20003ac8:	1c99      	adds	r1, r3, #2
20003aca:	68fb      	ldr	r3, [r7, #12]
20003acc:	1f1a      	subs	r2, r3, #4
20003ace:	683b      	ldr	r3, [r7, #0]
20003ad0:	1ad4      	subs	r4, r2, r3
20003ad2:	68bb      	ldr	r3, [r7, #8]
20003ad4:	1f1a      	subs	r2, r3, #4
20003ad6:	683b      	ldr	r3, [r7, #0]
20003ad8:	1ad3      	subs	r3, r2, r3
20003ada:	0022      	movs	r2, r4
20003adc:	f7ff ff49 	bl	20003972 <clearRectangle>
		graphic_draw_screen(draw_buffer_black);
20003ae0:	4b03      	ldr	r3, [pc, #12]	; (20003af0 <grayScaleTest+0x12c>)
20003ae2:	0018      	movs	r0, r3
20003ae4:	f7ff fe24 	bl	20003730 <graphic_draw_screen>
		
		delay_milli(20);
20003ae8:	2014      	movs	r0, #20
20003aea:	f7ff fa35 	bl	20002f58 <delay_milli>
		clear_backBuffer();
20003aee:	e77e      	b.n	200039ee <grayScaleTest+0x2a>
20003af0:	20006488 	andcs	r6, r0, r8, lsl #9

20003af4 <set_up_draw_buffers>:
	}
}

/** Should prepare the different drawing buffers, before the drawing of each frame.*/
void set_up_draw_buffers( void ) {
20003af4:	b580      	push	{r7, lr}
20003af6:	b082      	sub	sp, #8
20003af8:	af00      	add	r7, sp, #0
	int i;
	for(i = 0; i < 1024; i++) {
20003afa:	2300      	movs	r3, #0
20003afc:	607b      	str	r3, [r7, #4]
20003afe:	e065      	b.n	20003bcc <set_up_draw_buffers+0xd8>
		draw_buffer_black[i] = backBuffer[i] & (~backBufferGray[i] & ~backBufferLight[i]); //Had to work a bit on these
20003b00:	4a36      	ldr	r2, [pc, #216]	; (20003bdc <set_up_draw_buffers+0xe8>)
20003b02:	687b      	ldr	r3, [r7, #4]
20003b04:	18d3      	adds	r3, r2, r3
20003b06:	781b      	ldrb	r3, [r3, #0]
20003b08:	b25b      	sxtb	r3, r3
20003b0a:	4935      	ldr	r1, [pc, #212]	; (20003be0 <set_up_draw_buffers+0xec>)
20003b0c:	687a      	ldr	r2, [r7, #4]
20003b0e:	188a      	adds	r2, r1, r2
20003b10:	7811      	ldrb	r1, [r2, #0]
20003b12:	4834      	ldr	r0, [pc, #208]	; (20003be4 <set_up_draw_buffers+0xf0>)
20003b14:	687a      	ldr	r2, [r7, #4]
20003b16:	1882      	adds	r2, r0, r2
20003b18:	7812      	ldrb	r2, [r2, #0]
20003b1a:	430a      	orrs	r2, r1
20003b1c:	b2d2      	uxtb	r2, r2
20003b1e:	b252      	sxtb	r2, r2
20003b20:	43d2      	mvns	r2, r2
20003b22:	b252      	sxtb	r2, r2
20003b24:	4013      	ands	r3, r2
20003b26:	b25b      	sxtb	r3, r3
20003b28:	b2d9      	uxtb	r1, r3
20003b2a:	4a2f      	ldr	r2, [pc, #188]	; (20003be8 <set_up_draw_buffers+0xf4>)
20003b2c:	687b      	ldr	r3, [r7, #4]
20003b2e:	18d3      	adds	r3, r2, r3
20003b30:	1c0a      	adds	r2, r1, #0
20003b32:	701a      	strb	r2, [r3, #0]
		draw_buffer_black_gray[i] = (backBuffer[i] | backBufferGray[i]) & ~backBufferLight[i]; //in order to make it possible
20003b34:	4a29      	ldr	r2, [pc, #164]	; (20003bdc <set_up_draw_buffers+0xe8>)
20003b36:	687b      	ldr	r3, [r7, #4]
20003b38:	18d3      	adds	r3, r2, r3
20003b3a:	781a      	ldrb	r2, [r3, #0]
20003b3c:	4928      	ldr	r1, [pc, #160]	; (20003be0 <set_up_draw_buffers+0xec>)
20003b3e:	687b      	ldr	r3, [r7, #4]
20003b40:	18cb      	adds	r3, r1, r3
20003b42:	781b      	ldrb	r3, [r3, #0]
20003b44:	4313      	orrs	r3, r2
20003b46:	b2db      	uxtb	r3, r3
20003b48:	b25b      	sxtb	r3, r3
20003b4a:	4926      	ldr	r1, [pc, #152]	; (20003be4 <set_up_draw_buffers+0xf0>)
20003b4c:	687a      	ldr	r2, [r7, #4]
20003b4e:	188a      	adds	r2, r1, r2
20003b50:	7812      	ldrb	r2, [r2, #0]
20003b52:	b252      	sxtb	r2, r2
20003b54:	43d2      	mvns	r2, r2
20003b56:	b252      	sxtb	r2, r2
20003b58:	4013      	ands	r3, r2
20003b5a:	b25b      	sxtb	r3, r3
20003b5c:	b2d9      	uxtb	r1, r3
20003b5e:	4a23      	ldr	r2, [pc, #140]	; (20003bec <set_up_draw_buffers+0xf8>)
20003b60:	687b      	ldr	r3, [r7, #4]
20003b62:	18d3      	adds	r3, r2, r3
20003b64:	1c0a      	adds	r2, r1, #0
20003b66:	701a      	strb	r2, [r3, #0]
		draw_buffer_black_light[i] = (backBuffer[i] | backBufferLight[i]) & ~backBufferGray[i]; //to show a lighter sprite
20003b68:	4a1c      	ldr	r2, [pc, #112]	; (20003bdc <set_up_draw_buffers+0xe8>)
20003b6a:	687b      	ldr	r3, [r7, #4]
20003b6c:	18d3      	adds	r3, r2, r3
20003b6e:	781a      	ldrb	r2, [r3, #0]
20003b70:	491c      	ldr	r1, [pc, #112]	; (20003be4 <set_up_draw_buffers+0xf0>)
20003b72:	687b      	ldr	r3, [r7, #4]
20003b74:	18cb      	adds	r3, r1, r3
20003b76:	781b      	ldrb	r3, [r3, #0]
20003b78:	4313      	orrs	r3, r2
20003b7a:	b2db      	uxtb	r3, r3
20003b7c:	b25b      	sxtb	r3, r3
20003b7e:	4918      	ldr	r1, [pc, #96]	; (20003be0 <set_up_draw_buffers+0xec>)
20003b80:	687a      	ldr	r2, [r7, #4]
20003b82:	188a      	adds	r2, r1, r2
20003b84:	7812      	ldrb	r2, [r2, #0]
20003b86:	b252      	sxtb	r2, r2
20003b88:	43d2      	mvns	r2, r2
20003b8a:	b252      	sxtb	r2, r2
20003b8c:	4013      	ands	r3, r2
20003b8e:	b25b      	sxtb	r3, r3
20003b90:	b2d9      	uxtb	r1, r3
20003b92:	4a17      	ldr	r2, [pc, #92]	; (20003bf0 <set_up_draw_buffers+0xfc>)
20003b94:	687b      	ldr	r3, [r7, #4]
20003b96:	18d3      	adds	r3, r2, r3
20003b98:	1c0a      	adds	r2, r1, #0
20003b9a:	701a      	strb	r2, [r3, #0]
		draw_buffer_black_gray_light[i] = backBuffer[i] | backBufferGray[i] | backBufferLight[i]; //on top of a darker one.
20003b9c:	4a0f      	ldr	r2, [pc, #60]	; (20003bdc <set_up_draw_buffers+0xe8>)
20003b9e:	687b      	ldr	r3, [r7, #4]
20003ba0:	18d3      	adds	r3, r2, r3
20003ba2:	781a      	ldrb	r2, [r3, #0]
20003ba4:	490e      	ldr	r1, [pc, #56]	; (20003be0 <set_up_draw_buffers+0xec>)
20003ba6:	687b      	ldr	r3, [r7, #4]
20003ba8:	18cb      	adds	r3, r1, r3
20003baa:	781b      	ldrb	r3, [r3, #0]
20003bac:	4313      	orrs	r3, r2
20003bae:	b2da      	uxtb	r2, r3
20003bb0:	490c      	ldr	r1, [pc, #48]	; (20003be4 <set_up_draw_buffers+0xf0>)
20003bb2:	687b      	ldr	r3, [r7, #4]
20003bb4:	18cb      	adds	r3, r1, r3
20003bb6:	781b      	ldrb	r3, [r3, #0]
20003bb8:	4313      	orrs	r3, r2
20003bba:	b2d9      	uxtb	r1, r3
20003bbc:	4a0d      	ldr	r2, [pc, #52]	; (20003bf4 <set_up_draw_buffers+0x100>)
20003bbe:	687b      	ldr	r3, [r7, #4]
20003bc0:	18d3      	adds	r3, r2, r3
20003bc2:	1c0a      	adds	r2, r1, #0
20003bc4:	701a      	strb	r2, [r3, #0]
	for(i = 0; i < 1024; i++) {
20003bc6:	687b      	ldr	r3, [r7, #4]
20003bc8:	3301      	adds	r3, #1
20003bca:	607b      	str	r3, [r7, #4]
20003bcc:	687b      	ldr	r3, [r7, #4]
20003bce:	4a0a      	ldr	r2, [pc, #40]	; (20003bf8 <set_up_draw_buffers+0x104>)
20003bd0:	4293      	cmp	r3, r2
20003bd2:	dd95      	ble.n	20003b00 <set_up_draw_buffers+0xc>
	}
}
20003bd4:	46c0      	nop			; (mov r8, r8)
20003bd6:	46bd      	mov	sp, r7
20003bd8:	b002      	add	sp, #8
20003bda:	bd80      	pop	{r7, pc}
20003bdc:	20005c88 	andcs	r5, r0, r8, lsl #25
20003be0:	20005488 	andcs	r5, r0, r8, lsl #9
20003be4:	20006c88 	andcs	r6, r0, r8, lsl #25
20003be8:	20006488 	andcs	r6, r0, r8, lsl #9
20003bec:	20005888 	andcs	r5, r0, r8, lsl #17
20003bf0:	20006088 	andcs	r6, r0, r8, lsl #1
20003bf4:	20006888 	andcs	r6, r0, r8, lsl #17
20003bf8:	000003ff 	strdeq	r0, [r0], -pc	; <UNPREDICTABLE>

20003bfc <draw_game_object>:

void draw_game_object(GameObject *gObj) {
20003bfc:	b580      	push	{r7, lr}
20003bfe:	b086      	sub	sp, #24
20003c00:	af02      	add	r7, sp, #8
20003c02:	6078      	str	r0, [r7, #4]
	int frame = gObj->current_frame;
20003c04:	687b      	ldr	r3, [r7, #4]
20003c06:	695b      	ldr	r3, [r3, #20]
20003c08:	60fb      	str	r3, [r7, #12]
	draw_sprite(gObj->images[frame].blackImage, gObj->xPos, gObj->yPos, 1, 3);
20003c0a:	687b      	ldr	r3, [r7, #4]
20003c0c:	6819      	ldr	r1, [r3, #0]
20003c0e:	68fa      	ldr	r2, [r7, #12]
20003c10:	0013      	movs	r3, r2
20003c12:	005b      	lsls	r3, r3, #1
20003c14:	189b      	adds	r3, r3, r2
20003c16:	009b      	lsls	r3, r3, #2
20003c18:	18cb      	adds	r3, r1, r3
20003c1a:	6818      	ldr	r0, [r3, #0]
20003c1c:	687b      	ldr	r3, [r7, #4]
20003c1e:	6859      	ldr	r1, [r3, #4]
20003c20:	687b      	ldr	r3, [r7, #4]
20003c22:	689a      	ldr	r2, [r3, #8]
20003c24:	2303      	movs	r3, #3
20003c26:	9300      	str	r3, [sp, #0]
20003c28:	2301      	movs	r3, #1
20003c2a:	f7ff fdec 	bl	20003806 <draw_sprite>
	draw_sprite(gObj->images[frame].grayImage, gObj->xPos, gObj->yPos, 1, 2);
20003c2e:	687b      	ldr	r3, [r7, #4]
20003c30:	6819      	ldr	r1, [r3, #0]
20003c32:	68fa      	ldr	r2, [r7, #12]
20003c34:	0013      	movs	r3, r2
20003c36:	005b      	lsls	r3, r3, #1
20003c38:	189b      	adds	r3, r3, r2
20003c3a:	009b      	lsls	r3, r3, #2
20003c3c:	18cb      	adds	r3, r1, r3
20003c3e:	6858      	ldr	r0, [r3, #4]
20003c40:	687b      	ldr	r3, [r7, #4]
20003c42:	6859      	ldr	r1, [r3, #4]
20003c44:	687b      	ldr	r3, [r7, #4]
20003c46:	689a      	ldr	r2, [r3, #8]
20003c48:	2302      	movs	r3, #2
20003c4a:	9300      	str	r3, [sp, #0]
20003c4c:	2301      	movs	r3, #1
20003c4e:	f7ff fdda 	bl	20003806 <draw_sprite>
	draw_sprite(gObj->images[frame].lightImage, gObj->xPos, gObj->yPos, 1, 1);
20003c52:	687b      	ldr	r3, [r7, #4]
20003c54:	6819      	ldr	r1, [r3, #0]
20003c56:	68fa      	ldr	r2, [r7, #12]
20003c58:	0013      	movs	r3, r2
20003c5a:	005b      	lsls	r3, r3, #1
20003c5c:	189b      	adds	r3, r3, r2
20003c5e:	009b      	lsls	r3, r3, #2
20003c60:	18cb      	adds	r3, r1, r3
20003c62:	6898      	ldr	r0, [r3, #8]
20003c64:	687b      	ldr	r3, [r7, #4]
20003c66:	6859      	ldr	r1, [r3, #4]
20003c68:	687b      	ldr	r3, [r7, #4]
20003c6a:	689a      	ldr	r2, [r3, #8]
20003c6c:	2301      	movs	r3, #1
20003c6e:	9300      	str	r3, [sp, #0]
20003c70:	2301      	movs	r3, #1
20003c72:	f7ff fdc8 	bl	20003806 <draw_sprite>
}
20003c76:	46c0      	nop			; (mov r8, r8)
20003c78:	46bd      	mov	sp, r7
20003c7a:	b004      	add	sp, #16
20003c7c:	bd80      	pop	{r7, pc}

20003c7e <show_frame>:


void show_frame(int frame_length) {
20003c7e:	b580      	push	{r7, lr}
20003c80:	b082      	sub	sp, #8
20003c82:	af00      	add	r7, sp, #0
20003c84:	6078      	str	r0, [r7, #4]
	set_up_draw_buffers();
20003c86:	f7ff ff35 	bl	20003af4 <set_up_draw_buffers>
	
	while(frame_length--) {
20003c8a:	e01b      	b.n	20003cc4 <show_frame+0x46>
		graphic_draw_screen(draw_buffer_black_gray_light);
20003c8c:	4b13      	ldr	r3, [pc, #76]	; (20003cdc <show_frame+0x5e>)
20003c8e:	0018      	movs	r0, r3
20003c90:	f7ff fd4e 	bl	20003730 <graphic_draw_screen>
		delay_milli(1);
20003c94:	2001      	movs	r0, #1
20003c96:	f7ff f95f 	bl	20002f58 <delay_milli>
		
		graphic_draw_screen(draw_buffer_black);
20003c9a:	4b11      	ldr	r3, [pc, #68]	; (20003ce0 <show_frame+0x62>)
20003c9c:	0018      	movs	r0, r3
20003c9e:	f7ff fd47 	bl	20003730 <graphic_draw_screen>
		delay_milli(1);
20003ca2:	2001      	movs	r0, #1
20003ca4:	f7ff f958 	bl	20002f58 <delay_milli>
		
		graphic_draw_screen(draw_buffer_black_gray);
20003ca8:	4b0e      	ldr	r3, [pc, #56]	; (20003ce4 <show_frame+0x66>)
20003caa:	0018      	movs	r0, r3
20003cac:	f7ff fd40 	bl	20003730 <graphic_draw_screen>
		delay_milli(1);
20003cb0:	2001      	movs	r0, #1
20003cb2:	f7ff f951 	bl	20002f58 <delay_milli>
		
		graphic_draw_screen(draw_buffer_black);
20003cb6:	4b0a      	ldr	r3, [pc, #40]	; (20003ce0 <show_frame+0x62>)
20003cb8:	0018      	movs	r0, r3
20003cba:	f7ff fd39 	bl	20003730 <graphic_draw_screen>
		delay_milli(1);
20003cbe:	2001      	movs	r0, #1
20003cc0:	f7ff f94a 	bl	20002f58 <delay_milli>
	while(frame_length--) {
20003cc4:	687b      	ldr	r3, [r7, #4]
20003cc6:	1e5a      	subs	r2, r3, #1
20003cc8:	607a      	str	r2, [r7, #4]
20003cca:	2b00      	cmp	r3, #0
20003ccc:	d1de      	bne.n	20003c8c <show_frame+0xe>
	}
	
	clear_all_backBuffers();	//Maybe we could be more effective by only clearing the necessary stuff,
20003cce:	f7ff f97b 	bl	20002fc8 <clear_all_backBuffers>
								//but let's keep it like this if it works.
20003cd2:	46c0      	nop			; (mov r8, r8)
20003cd4:	46bd      	mov	sp, r7
20003cd6:	b002      	add	sp, #8
20003cd8:	bd80      	pop	{r7, pc}
20003cda:	46c0      	nop			; (mov r8, r8)
20003cdc:	20006888 	andcs	r6, r0, r8, lsl #17
20003ce0:	20006488 	andcs	r6, r0, r8, lsl #9
20003ce4:	20005888 	andcs	r5, r0, r8, lsl #17

20003ce8 <load_image>:
#include "image.h"

void load_image( Image *image, sprite *blackImage, sprite *grayImage, sprite *lightImage ) {
20003ce8:	b580      	push	{r7, lr}
20003cea:	b084      	sub	sp, #16
20003cec:	af00      	add	r7, sp, #0
20003cee:	60f8      	str	r0, [r7, #12]
20003cf0:	60b9      	str	r1, [r7, #8]
20003cf2:	607a      	str	r2, [r7, #4]
20003cf4:	603b      	str	r3, [r7, #0]
	image->blackImage = blackImage;
20003cf6:	68fb      	ldr	r3, [r7, #12]
20003cf8:	68ba      	ldr	r2, [r7, #8]
20003cfa:	601a      	str	r2, [r3, #0]
	image->grayImage = grayImage;
20003cfc:	68fb      	ldr	r3, [r7, #12]
20003cfe:	687a      	ldr	r2, [r7, #4]
20003d00:	605a      	str	r2, [r3, #4]
	image->lightImage = lightImage;
20003d02:	68fb      	ldr	r3, [r7, #12]
20003d04:	683a      	ldr	r2, [r7, #0]
20003d06:	609a      	str	r2, [r3, #8]
}
20003d08:	46c0      	nop			; (mov r8, r8)
20003d0a:	46bd      	mov	sp, r7
20003d0c:	b004      	add	sp, #16
20003d0e:	bd80      	pop	{r7, pc}

20003d10 <load_sprite>:
#include "sprite.h"

void load_sprite(sprite* s, unsigned char* data, int width, int height)
{
20003d10:	b580      	push	{r7, lr}
20003d12:	b084      	sub	sp, #16
20003d14:	af00      	add	r7, sp, #0
20003d16:	60f8      	str	r0, [r7, #12]
20003d18:	60b9      	str	r1, [r7, #8]
20003d1a:	607a      	str	r2, [r7, #4]
20003d1c:	603b      	str	r3, [r7, #0]
	s->width = width;
20003d1e:	687a      	ldr	r2, [r7, #4]
20003d20:	68fb      	ldr	r3, [r7, #12]
20003d22:	601a      	str	r2, [r3, #0]
	s->height = height;
20003d24:	683a      	ldr	r2, [r7, #0]
20003d26:	68fb      	ldr	r3, [r7, #12]
20003d28:	605a      	str	r2, [r3, #4]
	s->data = data;
20003d2a:	68fb      	ldr	r3, [r7, #12]
20003d2c:	68ba      	ldr	r2, [r7, #8]
20003d2e:	609a      	str	r2, [r3, #8]
}
20003d30:	46c0      	nop			; (mov r8, r8)
20003d32:	46bd      	mov	sp, r7
20003d34:	b004      	add	sp, #16
20003d36:	bd80      	pop	{r7, pc}

20003d38 <set_up_DIL>:
#include "gpio.h"

/** Sets up PE0-7 as inports and PE8-15 as outports. */
void set_up_DIL( void ) {
20003d38:	b580      	push	{r7, lr}
20003d3a:	af00      	add	r7, sp, #0
	GPIO_D.Moder = 0x55550000;
20003d3c:	4b02      	ldr	r3, [pc, #8]	; (20003d48 <set_up_DIL+0x10>)
20003d3e:	4a03      	ldr	r2, [pc, #12]	; (20003d4c <set_up_DIL+0x14>)
20003d40:	601a      	str	r2, [r3, #0]
}
20003d42:	46c0      	nop			; (mov r8, r8)
20003d44:	46bd      	mov	sp, r7
20003d46:	bd80      	pop	{r7, pc}
20003d48:	40020c00 	andmi	r0, r2, r0, lsl #24
20003d4c:	55550000 	ldrbpl	r0, [r5, #-0]

20003d50 <read_DIL>:

char read_DIL( void ) {
20003d50:	b580      	push	{r7, lr}
20003d52:	af00      	add	r7, sp, #0
	GPIO_D.odrHigh = GPIO_D.idrLow; //Show on bargraph
20003d54:	4b05      	ldr	r3, [pc, #20]	; (20003d6c <read_DIL+0x1c>)
20003d56:	4a05      	ldr	r2, [pc, #20]	; (20003d6c <read_DIL+0x1c>)
20003d58:	7c12      	ldrb	r2, [r2, #16]
20003d5a:	b2d2      	uxtb	r2, r2
20003d5c:	755a      	strb	r2, [r3, #21]
	return GPIO_D.idrLow;
20003d5e:	4b03      	ldr	r3, [pc, #12]	; (20003d6c <read_DIL+0x1c>)
20003d60:	7c1b      	ldrb	r3, [r3, #16]
20003d62:	b2db      	uxtb	r3, r3
}
20003d64:	0018      	movs	r0, r3
20003d66:	46bd      	mov	sp, r7
20003d68:	bd80      	pop	{r7, pc}
20003d6a:	46c0      	nop			; (mov r8, r8)
20003d6c:	40020c00 	andmi	r0, r2, r0, lsl #24

20003d70 <read_DIL_single>:


int read_DIL_single( int bit ) {
20003d70:	b590      	push	{r4, r7, lr}
20003d72:	b085      	sub	sp, #20
20003d74:	af00      	add	r7, sp, #0
20003d76:	6078      	str	r0, [r7, #4]
	char DIL = read_DIL();
20003d78:	230f      	movs	r3, #15
20003d7a:	18fc      	adds	r4, r7, r3
20003d7c:	f7ff ffe8 	bl	20003d50 <read_DIL>
20003d80:	0003      	movs	r3, r0
20003d82:	7023      	strb	r3, [r4, #0]
	if (DIL & (1<<bit)) {
20003d84:	230f      	movs	r3, #15
20003d86:	18fb      	adds	r3, r7, r3
20003d88:	781a      	ldrb	r2, [r3, #0]
20003d8a:	687b      	ldr	r3, [r7, #4]
20003d8c:	411a      	asrs	r2, r3
20003d8e:	0013      	movs	r3, r2
20003d90:	2201      	movs	r2, #1
20003d92:	4013      	ands	r3, r2
20003d94:	d001      	beq.n	20003d9a <read_DIL_single+0x2a>
		return 1;
20003d96:	2301      	movs	r3, #1
20003d98:	e000      	b.n	20003d9c <read_DIL_single+0x2c>
	} else {
		return 0;
20003d9a:	2300      	movs	r3, #0
	}
20003d9c:	0018      	movs	r0, r3
20003d9e:	46bd      	mov	sp, r7
20003da0:	b005      	add	sp, #20
20003da2:	bd90      	pop	{r4, r7, pc}

20003da4 <ascii_ctrl_bit_set>:
void ascii_write_data(unsigned char data);
unsigned char ascii_read_status(void);
unsigned char ascii_read_data(void);


void ascii_ctrl_bit_set(unsigned char x){
20003da4:	b580      	push	{r7, lr}
20003da6:	b084      	sub	sp, #16
20003da8:	af00      	add	r7, sp, #0
20003daa:	0002      	movs	r2, r0
20003dac:	1dfb      	adds	r3, r7, #7
20003dae:	701a      	strb	r2, [r3, #0]
//adressera ASCii-displayen och ettstÃƒÂ¤ll de bitar som ÃƒÂ¤r 1 i x
	unsigned char c;
	c = *portOdrLow;
20003db0:	4a0c      	ldr	r2, [pc, #48]	; (20003de4 <ascii_ctrl_bit_set+0x40>)
20003db2:	230f      	movs	r3, #15
20003db4:	18fb      	adds	r3, r7, r3
20003db6:	7812      	ldrb	r2, [r2, #0]
20003db8:	701a      	strb	r2, [r3, #0]
	c |= (B_SELECT | x);
20003dba:	1dfa      	adds	r2, r7, #7
20003dbc:	230f      	movs	r3, #15
20003dbe:	18fb      	adds	r3, r7, r3
20003dc0:	7812      	ldrb	r2, [r2, #0]
20003dc2:	781b      	ldrb	r3, [r3, #0]
20003dc4:	4313      	orrs	r3, r2
20003dc6:	b2da      	uxtb	r2, r3
20003dc8:	230f      	movs	r3, #15
20003dca:	18fb      	adds	r3, r7, r3
20003dcc:	2104      	movs	r1, #4
20003dce:	430a      	orrs	r2, r1
20003dd0:	701a      	strb	r2, [r3, #0]
	*portOdrLow = c;
20003dd2:	4a04      	ldr	r2, [pc, #16]	; (20003de4 <ascii_ctrl_bit_set+0x40>)
20003dd4:	230f      	movs	r3, #15
20003dd6:	18fb      	adds	r3, r7, r3
20003dd8:	781b      	ldrb	r3, [r3, #0]
20003dda:	7013      	strb	r3, [r2, #0]
}
20003ddc:	46c0      	nop			; (mov r8, r8)
20003dde:	46bd      	mov	sp, r7
20003de0:	b004      	add	sp, #16
20003de2:	bd80      	pop	{r7, pc}
20003de4:	40021014 	andmi	r1, r2, r4, lsl r0

20003de8 <ascii_ctrl_bit_clear>:

void ascii_ctrl_bit_clear(unsigned char x){
20003de8:	b580      	push	{r7, lr}
20003dea:	b084      	sub	sp, #16
20003dec:	af00      	add	r7, sp, #0
20003dee:	0002      	movs	r2, r0
20003df0:	1dfb      	adds	r3, r7, #7
20003df2:	701a      	strb	r2, [r3, #0]
//adressera ASCii-displayen och nollstÃ¤ll de bitar som Ã¤r 1 i x
	unsigned char c;
	c = *portOdrLow;
20003df4:	4a0f      	ldr	r2, [pc, #60]	; (20003e34 <ascii_ctrl_bit_clear+0x4c>)
20003df6:	230f      	movs	r3, #15
20003df8:	18fb      	adds	r3, r7, r3
20003dfa:	7812      	ldrb	r2, [r2, #0]
20003dfc:	701a      	strb	r2, [r3, #0]
	c = (B_SELECT | c & ~x);
20003dfe:	1dfb      	adds	r3, r7, #7
20003e00:	781b      	ldrb	r3, [r3, #0]
20003e02:	b25b      	sxtb	r3, r3
20003e04:	43db      	mvns	r3, r3
20003e06:	b25b      	sxtb	r3, r3
20003e08:	220f      	movs	r2, #15
20003e0a:	18ba      	adds	r2, r7, r2
20003e0c:	7812      	ldrb	r2, [r2, #0]
20003e0e:	b252      	sxtb	r2, r2
20003e10:	4013      	ands	r3, r2
20003e12:	b25b      	sxtb	r3, r3
20003e14:	2204      	movs	r2, #4
20003e16:	4313      	orrs	r3, r2
20003e18:	b25a      	sxtb	r2, r3
20003e1a:	230f      	movs	r3, #15
20003e1c:	18fb      	adds	r3, r7, r3
20003e1e:	701a      	strb	r2, [r3, #0]
	*portOdrLow = c;
20003e20:	4a04      	ldr	r2, [pc, #16]	; (20003e34 <ascii_ctrl_bit_clear+0x4c>)
20003e22:	230f      	movs	r3, #15
20003e24:	18fb      	adds	r3, r7, r3
20003e26:	781b      	ldrb	r3, [r3, #0]
20003e28:	7013      	strb	r3, [r2, #0]
}
20003e2a:	46c0      	nop			; (mov r8, r8)
20003e2c:	46bd      	mov	sp, r7
20003e2e:	b004      	add	sp, #16
20003e30:	bd80      	pop	{r7, pc}
20003e32:	46c0      	nop			; (mov r8, r8)
20003e34:	40021014 	andmi	r1, r2, r4, lsl r0

20003e38 <ascii_write_cmd>:

void ascii_write_cmd(unsigned char command){
20003e38:	b580      	push	{r7, lr}
20003e3a:	b082      	sub	sp, #8
20003e3c:	af00      	add	r7, sp, #0
20003e3e:	0002      	movs	r2, r0
20003e40:	1dfb      	adds	r3, r7, #7
20003e42:	701a      	strb	r2, [r3, #0]
	ascii_ctrl_bit_clear(B_RS);
20003e44:	2001      	movs	r0, #1
20003e46:	f7ff ffcf 	bl	20003de8 <ascii_ctrl_bit_clear>
	ascii_ctrl_bit_clear(B_RW);
20003e4a:	2002      	movs	r0, #2
20003e4c:	f7ff ffcc 	bl	20003de8 <ascii_ctrl_bit_clear>
	ascii_write_controller(command);
20003e50:	1dfb      	adds	r3, r7, #7
20003e52:	781b      	ldrb	r3, [r3, #0]
20003e54:	0018      	movs	r0, r3
20003e56:	f000 f86d 	bl	20003f34 <ascii_write_controller>
}
20003e5a:	46c0      	nop			; (mov r8, r8)
20003e5c:	46bd      	mov	sp, r7
20003e5e:	b002      	add	sp, #8
20003e60:	bd80      	pop	{r7, pc}

20003e62 <ascii_write_data>:

void ascii_write_data(unsigned char data){
20003e62:	b580      	push	{r7, lr}
20003e64:	b082      	sub	sp, #8
20003e66:	af00      	add	r7, sp, #0
20003e68:	0002      	movs	r2, r0
20003e6a:	1dfb      	adds	r3, r7, #7
20003e6c:	701a      	strb	r2, [r3, #0]
	ascii_ctrl_bit_set(B_RS);
20003e6e:	2001      	movs	r0, #1
20003e70:	f7ff ff98 	bl	20003da4 <ascii_ctrl_bit_set>
	ascii_ctrl_bit_clear(B_RW);
20003e74:	2002      	movs	r0, #2
20003e76:	f7ff ffb7 	bl	20003de8 <ascii_ctrl_bit_clear>
	ascii_write_controller(data);
20003e7a:	1dfb      	adds	r3, r7, #7
20003e7c:	781b      	ldrb	r3, [r3, #0]
20003e7e:	0018      	movs	r0, r3
20003e80:	f000 f858 	bl	20003f34 <ascii_write_controller>
}
20003e84:	46c0      	nop			; (mov r8, r8)
20003e86:	46bd      	mov	sp, r7
20003e88:	b002      	add	sp, #8
20003e8a:	bd80      	pop	{r7, pc}

20003e8c <ascii_read_status>:

unsigned char ascii_read_status(void){
20003e8c:	b590      	push	{r4, r7, lr}
20003e8e:	b083      	sub	sp, #12
20003e90:	af00      	add	r7, sp, #0
	//sÃƒÂ¤tt Port E bit15-8 som ingÃƒÂ¥ngar
	*portModer &= 0x0000FFFF;
20003e92:	4b11      	ldr	r3, [pc, #68]	; (20003ed8 <ascii_read_status+0x4c>)
20003e94:	4a10      	ldr	r2, [pc, #64]	; (20003ed8 <ascii_read_status+0x4c>)
20003e96:	6812      	ldr	r2, [r2, #0]
20003e98:	0412      	lsls	r2, r2, #16
20003e9a:	0c12      	lsrs	r2, r2, #16
20003e9c:	601a      	str	r2, [r3, #0]
	ascii_ctrl_bit_clear(B_RS);
20003e9e:	2001      	movs	r0, #1
20003ea0:	f7ff ffa2 	bl	20003de8 <ascii_ctrl_bit_clear>
	ascii_ctrl_bit_set(B_RW);
20003ea4:	2002      	movs	r0, #2
20003ea6:	f7ff ff7d 	bl	20003da4 <ascii_ctrl_bit_set>
	unsigned char rv = ascii_read_controller();
20003eaa:	1dfc      	adds	r4, r7, #7
20003eac:	f000 f85a 	bl	20003f64 <ascii_read_controller>
20003eb0:	0003      	movs	r3, r0
20003eb2:	7023      	strb	r3, [r4, #0]
	//sÃƒÂ¤tt Port E bit15-8 som utgÃƒÂ¥ngar
	*portModer &= 0x0000FFFF;
20003eb4:	4b08      	ldr	r3, [pc, #32]	; (20003ed8 <ascii_read_status+0x4c>)
20003eb6:	4a08      	ldr	r2, [pc, #32]	; (20003ed8 <ascii_read_status+0x4c>)
20003eb8:	6812      	ldr	r2, [r2, #0]
20003eba:	0412      	lsls	r2, r2, #16
20003ebc:	0c12      	lsrs	r2, r2, #16
20003ebe:	601a      	str	r2, [r3, #0]
	*portModer |= 0x55550000;
20003ec0:	4b05      	ldr	r3, [pc, #20]	; (20003ed8 <ascii_read_status+0x4c>)
20003ec2:	4a05      	ldr	r2, [pc, #20]	; (20003ed8 <ascii_read_status+0x4c>)
20003ec4:	6812      	ldr	r2, [r2, #0]
20003ec6:	4905      	ldr	r1, [pc, #20]	; (20003edc <ascii_read_status+0x50>)
20003ec8:	430a      	orrs	r2, r1
20003eca:	601a      	str	r2, [r3, #0]
	return rv;
20003ecc:	1dfb      	adds	r3, r7, #7
20003ece:	781b      	ldrb	r3, [r3, #0]
}
20003ed0:	0018      	movs	r0, r3
20003ed2:	46bd      	mov	sp, r7
20003ed4:	b003      	add	sp, #12
20003ed6:	bd90      	pop	{r4, r7, pc}
20003ed8:	40021000 	andmi	r1, r2, r0
20003edc:	55550000 	ldrbpl	r0, [r5, #-0]

20003ee0 <ascii_read_data>:

unsigned char ascii_read_data(void){
20003ee0:	b590      	push	{r4, r7, lr}
20003ee2:	b083      	sub	sp, #12
20003ee4:	af00      	add	r7, sp, #0
	//sÃƒÂ¤tt Port E bit15-8 som ingÃƒÂ¥ngar
	*portModer &= 0x0000FFFF;
20003ee6:	4b11      	ldr	r3, [pc, #68]	; (20003f2c <ascii_read_data+0x4c>)
20003ee8:	4a10      	ldr	r2, [pc, #64]	; (20003f2c <ascii_read_data+0x4c>)
20003eea:	6812      	ldr	r2, [r2, #0]
20003eec:	0412      	lsls	r2, r2, #16
20003eee:	0c12      	lsrs	r2, r2, #16
20003ef0:	601a      	str	r2, [r3, #0]
	ascii_ctrl_bit_set(B_RS);
20003ef2:	2001      	movs	r0, #1
20003ef4:	f7ff ff56 	bl	20003da4 <ascii_ctrl_bit_set>
	ascii_ctrl_bit_set(B_RW);
20003ef8:	2002      	movs	r0, #2
20003efa:	f7ff ff53 	bl	20003da4 <ascii_ctrl_bit_set>
	unsigned char rv = ascii_read_controller();
20003efe:	1dfc      	adds	r4, r7, #7
20003f00:	f000 f830 	bl	20003f64 <ascii_read_controller>
20003f04:	0003      	movs	r3, r0
20003f06:	7023      	strb	r3, [r4, #0]
	//sÃƒÂ¤tt Port E bit15-8 som utgÃƒÂ¥ngar
	*portModer &= 0x0000FFFF;
20003f08:	4b08      	ldr	r3, [pc, #32]	; (20003f2c <ascii_read_data+0x4c>)
20003f0a:	4a08      	ldr	r2, [pc, #32]	; (20003f2c <ascii_read_data+0x4c>)
20003f0c:	6812      	ldr	r2, [r2, #0]
20003f0e:	0412      	lsls	r2, r2, #16
20003f10:	0c12      	lsrs	r2, r2, #16
20003f12:	601a      	str	r2, [r3, #0]
	*portModer |= 0x55550000;
20003f14:	4b05      	ldr	r3, [pc, #20]	; (20003f2c <ascii_read_data+0x4c>)
20003f16:	4a05      	ldr	r2, [pc, #20]	; (20003f2c <ascii_read_data+0x4c>)
20003f18:	6812      	ldr	r2, [r2, #0]
20003f1a:	4905      	ldr	r1, [pc, #20]	; (20003f30 <ascii_read_data+0x50>)
20003f1c:	430a      	orrs	r2, r1
20003f1e:	601a      	str	r2, [r3, #0]
	return rv;
20003f20:	1dfb      	adds	r3, r7, #7
20003f22:	781b      	ldrb	r3, [r3, #0]
}
20003f24:	0018      	movs	r0, r3
20003f26:	46bd      	mov	sp, r7
20003f28:	b003      	add	sp, #12
20003f2a:	bd90      	pop	{r4, r7, pc}
20003f2c:	40021000 	andmi	r1, r2, r0
20003f30:	55550000 	ldrbpl	r0, [r5, #-0]

20003f34 <ascii_write_controller>:

void ascii_write_controller(unsigned char c){
20003f34:	b580      	push	{r7, lr}
20003f36:	b082      	sub	sp, #8
20003f38:	af00      	add	r7, sp, #0
20003f3a:	0002      	movs	r2, r0
20003f3c:	1dfb      	adds	r3, r7, #7
20003f3e:	701a      	strb	r2, [r3, #0]
	ascii_ctrl_bit_set(B_E);
20003f40:	2040      	movs	r0, #64	; 0x40
20003f42:	f7ff ff2f 	bl	20003da4 <ascii_ctrl_bit_set>
	*portOdrHigh = c;
20003f46:	4a06      	ldr	r2, [pc, #24]	; (20003f60 <ascii_write_controller+0x2c>)
20003f48:	1dfb      	adds	r3, r7, #7
20003f4a:	781b      	ldrb	r3, [r3, #0]
20003f4c:	7013      	strb	r3, [r2, #0]
	delay_250ns();
20003f4e:	f7fe ffa9 	bl	20002ea4 <delay_250ns>
	ascii_ctrl_bit_clear(B_E);
20003f52:	2040      	movs	r0, #64	; 0x40
20003f54:	f7ff ff48 	bl	20003de8 <ascii_ctrl_bit_clear>
}
20003f58:	46c0      	nop			; (mov r8, r8)
20003f5a:	46bd      	mov	sp, r7
20003f5c:	b002      	add	sp, #8
20003f5e:	bd80      	pop	{r7, pc}
20003f60:	40021015 	andmi	r1, r2, r5, lsl r0

20003f64 <ascii_read_controller>:

unsigned char ascii_read_controller(void){
20003f64:	b580      	push	{r7, lr}
20003f66:	b082      	sub	sp, #8
20003f68:	af00      	add	r7, sp, #0
	unsigned char c;
	ascii_ctrl_bit_set(B_E);
20003f6a:	2040      	movs	r0, #64	; 0x40
20003f6c:	f7ff ff1a 	bl	20003da4 <ascii_ctrl_bit_set>
	delay_250ns();
20003f70:	f7fe ff98 	bl	20002ea4 <delay_250ns>
	delay_250ns();
20003f74:	f7fe ff96 	bl	20002ea4 <delay_250ns>
	c = *portIdrHigh;
20003f78:	4a06      	ldr	r2, [pc, #24]	; (20003f94 <ascii_read_controller+0x30>)
20003f7a:	1dfb      	adds	r3, r7, #7
20003f7c:	7812      	ldrb	r2, [r2, #0]
20003f7e:	701a      	strb	r2, [r3, #0]
	ascii_ctrl_bit_clear(B_E);
20003f80:	2040      	movs	r0, #64	; 0x40
20003f82:	f7ff ff31 	bl	20003de8 <ascii_ctrl_bit_clear>
	return c;
20003f86:	1dfb      	adds	r3, r7, #7
20003f88:	781b      	ldrb	r3, [r3, #0]
}
20003f8a:	0018      	movs	r0, r3
20003f8c:	46bd      	mov	sp, r7
20003f8e:	b002      	add	sp, #8
20003f90:	bd80      	pop	{r7, pc}
20003f92:	46c0      	nop			; (mov r8, r8)
20003f94:	40021011 	andmi	r1, r2, r1, lsl r0

20003f98 <ascii_write_char>:

void ascii_write_char(unsigned char c){
20003f98:	b580      	push	{r7, lr}
20003f9a:	b082      	sub	sp, #8
20003f9c:	af00      	add	r7, sp, #0
20003f9e:	0002      	movs	r2, r0
20003fa0:	1dfb      	adds	r3, r7, #7
20003fa2:	701a      	strb	r2, [r3, #0]
		while((ascii_read_status() & 0x80) == 0x80){} //VÃƒÂ¤nta tills displayed ÃƒÂ¤r redo
20003fa4:	46c0      	nop			; (mov r8, r8)
20003fa6:	f7ff ff71 	bl	20003e8c <ascii_read_status>
20003faa:	0003      	movs	r3, r0
20003fac:	001a      	movs	r2, r3
20003fae:	2380      	movs	r3, #128	; 0x80
20003fb0:	4013      	ands	r3, r2
20003fb2:	2b80      	cmp	r3, #128	; 0x80
20003fb4:	d0f7      	beq.n	20003fa6 <ascii_write_char+0xe>
		delay_micro(8); //latenstid
20003fb6:	2008      	movs	r0, #8
20003fb8:	f7fe ffb8 	bl	20002f2c <delay_micro>
		ascii_write_data(c);
20003fbc:	1dfb      	adds	r3, r7, #7
20003fbe:	781b      	ldrb	r3, [r3, #0]
20003fc0:	0018      	movs	r0, r3
20003fc2:	f7ff ff4e 	bl	20003e62 <ascii_write_data>
		delay_micro(50); //istÃƒÂ¤llet fÃƒÂ¶r 43us
20003fc6:	2032      	movs	r0, #50	; 0x32
20003fc8:	f7fe ffb0 	bl	20002f2c <delay_micro>
}
20003fcc:	46c0      	nop			; (mov r8, r8)
20003fce:	46bd      	mov	sp, r7
20003fd0:	b002      	add	sp, #8
20003fd2:	bd80      	pop	{r7, pc}

20003fd4 <ascii_goToXY>:

void ascii_goToXY(unsigned char row, unsigned char column){
20003fd4:	b580      	push	{r7, lr}
20003fd6:	b084      	sub	sp, #16
20003fd8:	af00      	add	r7, sp, #0
20003fda:	0002      	movs	r2, r0
20003fdc:	1dfb      	adds	r3, r7, #7
20003fde:	701a      	strb	r2, [r3, #0]
20003fe0:	1dbb      	adds	r3, r7, #6
20003fe2:	1c0a      	adds	r2, r1, #0
20003fe4:	701a      	strb	r2, [r3, #0]
	unsigned char address = row-1;
20003fe6:	230f      	movs	r3, #15
20003fe8:	18fb      	adds	r3, r7, r3
20003fea:	1dfa      	adds	r2, r7, #7
20003fec:	7812      	ldrb	r2, [r2, #0]
20003fee:	3a01      	subs	r2, #1
20003ff0:	701a      	strb	r2, [r3, #0]
	if(column == 2){
20003ff2:	1dbb      	adds	r3, r7, #6
20003ff4:	781b      	ldrb	r3, [r3, #0]
20003ff6:	2b02      	cmp	r3, #2
20003ff8:	d106      	bne.n	20004008 <ascii_goToXY+0x34>
		address += 0x40;
20003ffa:	230f      	movs	r3, #15
20003ffc:	18fb      	adds	r3, r7, r3
20003ffe:	220f      	movs	r2, #15
20004000:	18ba      	adds	r2, r7, r2
20004002:	7812      	ldrb	r2, [r2, #0]
20004004:	3240      	adds	r2, #64	; 0x40
20004006:	701a      	strb	r2, [r3, #0]
	}
	ascii_write_cmd(0x80 | address);
20004008:	230f      	movs	r3, #15
2000400a:	18fb      	adds	r3, r7, r3
2000400c:	781b      	ldrb	r3, [r3, #0]
2000400e:	2280      	movs	r2, #128	; 0x80
20004010:	4252      	negs	r2, r2
20004012:	4313      	orrs	r3, r2
20004014:	b2db      	uxtb	r3, r3
20004016:	0018      	movs	r0, r3
20004018:	f7ff ff0e 	bl	20003e38 <ascii_write_cmd>
}
2000401c:	46c0      	nop			; (mov r8, r8)
2000401e:	46bd      	mov	sp, r7
20004020:	b004      	add	sp, #16
20004022:	bd80      	pop	{r7, pc}

20004024 <ascii_init>:

void ascii_init(void){
20004024:	b580      	push	{r7, lr}
20004026:	af00      	add	r7, sp, #0
	//initiera displayen:
		while((ascii_read_status() & 0x80) == 0x80){} //VÃ¤nta tills displayed Ã¤r redo
20004028:	46c0      	nop			; (mov r8, r8)
2000402a:	f7ff ff2f 	bl	20003e8c <ascii_read_status>
2000402e:	0003      	movs	r3, r0
20004030:	001a      	movs	r2, r3
20004032:	2380      	movs	r3, #128	; 0x80
20004034:	4013      	ands	r3, r2
20004036:	2b80      	cmp	r3, #128	; 0x80
20004038:	d0f7      	beq.n	2000402a <ascii_init+0x6>
		delay_micro(20); //latenstid 
2000403a:	2014      	movs	r0, #20
2000403c:	f7fe ff76 	bl	20002f2c <delay_micro>
		ascii_write_cmd(0x38); //Function set (39us), 000011NFXX, N = antal rader = 2, F = -->0=5x8<--, 1=5x11
20004040:	2038      	movs	r0, #56	; 0x38
20004042:	f7ff fef9 	bl	20003e38 <ascii_write_cmd>
		delay_micro(100); //istÃƒÂ¤llet fÃƒÂ¶r 39us
20004046:	2064      	movs	r0, #100	; 0x64
20004048:	f7fe ff70 	bl	20002f2c <delay_micro>
		
	// clear display
		while((ascii_read_status() & 0x80) == 0x80){} //VÃƒÂ¤nta tills displayed ÃƒÂ¤r redo
2000404c:	46c0      	nop			; (mov r8, r8)
2000404e:	f7ff ff1d 	bl	20003e8c <ascii_read_status>
20004052:	0003      	movs	r3, r0
20004054:	001a      	movs	r2, r3
20004056:	2380      	movs	r3, #128	; 0x80
20004058:	4013      	ands	r3, r2
2000405a:	2b80      	cmp	r3, #128	; 0x80
2000405c:	d0f7      	beq.n	2000404e <ascii_init+0x2a>
		delay_micro(20); //latenstid
2000405e:	2014      	movs	r0, #20
20004060:	f7fe ff64 	bl	20002f2c <delay_micro>
		ascii_write_cmd(0x01); 
20004064:	2001      	movs	r0, #1
20004066:	f7ff fee7 	bl	20003e38 <ascii_write_cmd>
		delay_micro(100); //istÃƒÂ¤llet fÃƒÂ¶r 39us
2000406a:	2064      	movs	r0, #100	; 0x64
2000406c:	f7fe ff5e 	bl	20002f2c <delay_micro>

	//display control:
		while((ascii_read_status() & 0x80) == 0x80){} //VÃƒÂ¤nta tills displayed ÃƒÂ¤r redo
20004070:	46c0      	nop			; (mov r8, r8)
20004072:	f7ff ff0b 	bl	20003e8c <ascii_read_status>
20004076:	0003      	movs	r3, r0
20004078:	001a      	movs	r2, r3
2000407a:	2380      	movs	r3, #128	; 0x80
2000407c:	4013      	ands	r3, r2
2000407e:	2b80      	cmp	r3, #128	; 0x80
20004080:	d0f7      	beq.n	20004072 <ascii_init+0x4e>
		delay_micro(20); //latenstid
20004082:	2014      	movs	r0, #20
20004084:	f7fe ff52 	bl	20002f2c <delay_micro>
		ascii_write_cmd(0x0C); //000001 + XXX. X:ena = 0:av / 1:pÃƒÂ¥ -  SkÃƒÂ¤rm/MarkÃƒÂ¶r/BlinkaMarkÃƒÂ¶ren
20004088:	200c      	movs	r0, #12
2000408a:	f7ff fed5 	bl	20003e38 <ascii_write_cmd>
		delay_micro(100); //istÃƒÂ¤llet fÃƒÂ¶r 39us
2000408e:	2064      	movs	r0, #100	; 0x64
20004090:	f7fe ff4c 	bl	20002f2c <delay_micro>
		
	// entry mode set
		while((ascii_read_status() & 0x80) == 0x80){} //VÃƒÂ¤nta tills displayed ÃƒÂ¤r redo
20004094:	46c0      	nop			; (mov r8, r8)
20004096:	f7ff fef9 	bl	20003e8c <ascii_read_status>
2000409a:	0003      	movs	r3, r0
2000409c:	001a      	movs	r2, r3
2000409e:	2380      	movs	r3, #128	; 0x80
200040a0:	4013      	ands	r3, r2
200040a2:	2b80      	cmp	r3, #128	; 0x80
200040a4:	d0f7      	beq.n	20004096 <ascii_init+0x72>
		delay_micro(20); //latenstid
200040a6:	2014      	movs	r0, #20
200040a8:	f7fe ff40 	bl	20002f2c <delay_micro>
		ascii_write_cmd(0x06); //00000001 + XY. X=0: markÃƒÂ¶ren vÃƒÂ¤nst. || X=1: marÃƒÂ¶kren hÃƒÂ¶g. - Y=0: skift av || Y=1: skift pÃƒÂ¥
200040ac:	2006      	movs	r0, #6
200040ae:	f7ff fec3 	bl	20003e38 <ascii_write_cmd>
		delay_micro(100); //istÃƒÂ¤llet fÃƒÂ¶r 39us
200040b2:	2064      	movs	r0, #100	; 0x64
200040b4:	f7fe ff3a 	bl	20002f2c <delay_micro>
		
		
}
200040b8:	46c0      	nop			; (mov r8, r8)
200040ba:	46bd      	mov	sp, r7
200040bc:	bd80      	pop	{r7, pc}

200040be <init_application>:

void init_application(void){
200040be:	b580      	push	{r7, lr}
200040c0:	af00      	add	r7, sp, #0
	#ifdef USBDM
		*((unsigned long *) 0x40023830) = 0x18; //startar klockor pÃ¥ port D och E
		//__asm volatile ("LDR R0, =0x08000209\n BLX R0 \n"); //initiera PLL
	#endif
	//"initierar Port E med anvÃƒÂ¤ndning med LCD-modulen, dvs. sÃƒÂ¥vÃƒÂ¤l port E0-7 som E8-15 sÃƒÂ¤tts till utgÃƒÂ¥ngar
	* portModer = 0x55555555;
200040c2:	4b03      	ldr	r3, [pc, #12]	; (200040d0 <init_application+0x12>)
200040c4:	4a03      	ldr	r2, [pc, #12]	; (200040d4 <init_application+0x16>)
200040c6:	601a      	str	r2, [r3, #0]
}
200040c8:	46c0      	nop			; (mov r8, r8)
200040ca:	46bd      	mov	sp, r7
200040cc:	bd80      	pop	{r7, pc}
200040ce:	46c0      	nop			; (mov r8, r8)
200040d0:	40021000 	andmi	r1, r2, r0
200040d4:	55555555 	ldrbpl	r5, [r5, #-1365]	; 0xfffffaab

200040d8 <set_up_ascii>:

void set_up_ascii( void ) {
200040d8:	b580      	push	{r7, lr}
200040da:	af00      	add	r7, sp, #0
	init_application();
200040dc:	f7ff ffef 	bl	200040be <init_application>
	ascii_init();
200040e0:	f7ff ffa0 	bl	20004024 <ascii_init>
}
200040e4:	46c0      	nop			; (mov r8, r8)
200040e6:	46bd      	mov	sp, r7
200040e8:	bd80      	pop	{r7, pc}

200040ea <clear_ascii>:

void clear_ascii( void ) {
200040ea:	b590      	push	{r4, r7, lr}
200040ec:	b089      	sub	sp, #36	; 0x24
200040ee:	af00      	add	r7, sp, #0
	char *s;
	char clear[] = "                    ";
200040f0:	1d3b      	adds	r3, r7, #4
200040f2:	4a17      	ldr	r2, [pc, #92]	; (20004150 <clear_ascii+0x66>)
200040f4:	ca13      	ldmia	r2!, {r0, r1, r4}
200040f6:	c313      	stmia	r3!, {r0, r1, r4}
200040f8:	ca03      	ldmia	r2!, {r0, r1}
200040fa:	c303      	stmia	r3!, {r0, r1}
200040fc:	7812      	ldrb	r2, [r2, #0]
200040fe:	701a      	strb	r2, [r3, #0]
	
	s = clear;
20004100:	1d3b      	adds	r3, r7, #4
20004102:	61fb      	str	r3, [r7, #28]
	ascii_goToXY(1,1);
20004104:	2101      	movs	r1, #1
20004106:	2001      	movs	r0, #1
20004108:	f7ff ff64 	bl	20003fd4 <ascii_goToXY>
	while(*s){
2000410c:	e006      	b.n	2000411c <clear_ascii+0x32>
		ascii_write_char(*s++);
2000410e:	69fb      	ldr	r3, [r7, #28]
20004110:	1c5a      	adds	r2, r3, #1
20004112:	61fa      	str	r2, [r7, #28]
20004114:	781b      	ldrb	r3, [r3, #0]
20004116:	0018      	movs	r0, r3
20004118:	f7ff ff3e 	bl	20003f98 <ascii_write_char>
	while(*s){
2000411c:	69fb      	ldr	r3, [r7, #28]
2000411e:	781b      	ldrb	r3, [r3, #0]
20004120:	2b00      	cmp	r3, #0
20004122:	d1f4      	bne.n	2000410e <clear_ascii+0x24>
	}
	s = clear;
20004124:	1d3b      	adds	r3, r7, #4
20004126:	61fb      	str	r3, [r7, #28]
	ascii_goToXY(1,2);
20004128:	2102      	movs	r1, #2
2000412a:	2001      	movs	r0, #1
2000412c:	f7ff ff52 	bl	20003fd4 <ascii_goToXY>
	while(*s){
20004130:	e006      	b.n	20004140 <clear_ascii+0x56>
		ascii_write_char(*s++);
20004132:	69fb      	ldr	r3, [r7, #28]
20004134:	1c5a      	adds	r2, r3, #1
20004136:	61fa      	str	r2, [r7, #28]
20004138:	781b      	ldrb	r3, [r3, #0]
2000413a:	0018      	movs	r0, r3
2000413c:	f7ff ff2c 	bl	20003f98 <ascii_write_char>
	while(*s){
20004140:	69fb      	ldr	r3, [r7, #28]
20004142:	781b      	ldrb	r3, [r3, #0]
20004144:	2b00      	cmp	r3, #0
20004146:	d1f4      	bne.n	20004132 <clear_ascii+0x48>
	}
}
20004148:	46c0      	nop			; (mov r8, r8)
2000414a:	46bd      	mov	sp, r7
2000414c:	b009      	add	sp, #36	; 0x24
2000414e:	bd90      	pop	{r4, r7, pc}
20004150:	2000f730 	andcs	pc, r0, r0, lsr r7	; <UNPREDICTABLE>

20004154 <ascii_write>:

void ascii_write(char *row1, char *row2) {
20004154:	b580      	push	{r7, lr}
20004156:	b082      	sub	sp, #8
20004158:	af00      	add	r7, sp, #0
2000415a:	6078      	str	r0, [r7, #4]
2000415c:	6039      	str	r1, [r7, #0]
	clear_ascii();
2000415e:	f7ff ffc4 	bl	200040ea <clear_ascii>
	
	ascii_goToXY(1,1);
20004162:	2101      	movs	r1, #1
20004164:	2001      	movs	r0, #1
20004166:	f7ff ff35 	bl	20003fd4 <ascii_goToXY>
	while(*row1){
2000416a:	e006      	b.n	2000417a <ascii_write+0x26>
		ascii_write_char(*row1++);
2000416c:	687b      	ldr	r3, [r7, #4]
2000416e:	1c5a      	adds	r2, r3, #1
20004170:	607a      	str	r2, [r7, #4]
20004172:	781b      	ldrb	r3, [r3, #0]
20004174:	0018      	movs	r0, r3
20004176:	f7ff ff0f 	bl	20003f98 <ascii_write_char>
	while(*row1){
2000417a:	687b      	ldr	r3, [r7, #4]
2000417c:	781b      	ldrb	r3, [r3, #0]
2000417e:	2b00      	cmp	r3, #0
20004180:	d1f4      	bne.n	2000416c <ascii_write+0x18>
	}	
	ascii_goToXY(1,2);
20004182:	2102      	movs	r1, #2
20004184:	2001      	movs	r0, #1
20004186:	f7ff ff25 	bl	20003fd4 <ascii_goToXY>
	while(*row2){
2000418a:	e006      	b.n	2000419a <ascii_write+0x46>
		ascii_write_char(*row2++);
2000418c:	683b      	ldr	r3, [r7, #0]
2000418e:	1c5a      	adds	r2, r3, #1
20004190:	603a      	str	r2, [r7, #0]
20004192:	781b      	ldrb	r3, [r3, #0]
20004194:	0018      	movs	r0, r3
20004196:	f7ff feff 	bl	20003f98 <ascii_write_char>
	while(*row2){
2000419a:	683b      	ldr	r3, [r7, #0]
2000419c:	781b      	ldrb	r3, [r3, #0]
2000419e:	2b00      	cmp	r3, #0
200041a0:	d1f4      	bne.n	2000418c <ascii_write+0x38>
	}
	
	ascii_goToXY(21,1);
200041a2:	2101      	movs	r1, #1
200041a4:	2015      	movs	r0, #21
200041a6:	f7ff ff15 	bl	20003fd4 <ascii_goToXY>
}
200041aa:	46c0      	nop			; (mov r8, r8)
200041ac:	46bd      	mov	sp, r7
200041ae:	b002      	add	sp, #8
200041b0:	bd80      	pop	{r7, pc}

200041b2 <ascii_write_part>:

void ascii_write_part(char *row1, char *row2, int limit1, int limit2) {
200041b2:	b580      	push	{r7, lr}
200041b4:	b086      	sub	sp, #24
200041b6:	af00      	add	r7, sp, #0
200041b8:	60f8      	str	r0, [r7, #12]
200041ba:	60b9      	str	r1, [r7, #8]
200041bc:	607a      	str	r2, [r7, #4]
200041be:	603b      	str	r3, [r7, #0]
	clear_ascii();
200041c0:	f7ff ff93 	bl	200040ea <clear_ascii>
	
	ascii_goToXY(1,1);
200041c4:	2101      	movs	r1, #1
200041c6:	2001      	movs	r0, #1
200041c8:	f7ff ff04 	bl	20003fd4 <ascii_goToXY>
	int i = 0;
200041cc:	2300      	movs	r3, #0
200041ce:	617b      	str	r3, [r7, #20]
	if(limit1 > 0) {
200041d0:	687b      	ldr	r3, [r7, #4]
200041d2:	2b00      	cmp	r3, #0
200041d4:	dd11      	ble.n	200041fa <ascii_write_part+0x48>
		while(*row1 && (i++ < limit1)){
200041d6:	e006      	b.n	200041e6 <ascii_write_part+0x34>
			ascii_write_char(*row1++);
200041d8:	68fb      	ldr	r3, [r7, #12]
200041da:	1c5a      	adds	r2, r3, #1
200041dc:	60fa      	str	r2, [r7, #12]
200041de:	781b      	ldrb	r3, [r3, #0]
200041e0:	0018      	movs	r0, r3
200041e2:	f7ff fed9 	bl	20003f98 <ascii_write_char>
		while(*row1 && (i++ < limit1)){
200041e6:	68fb      	ldr	r3, [r7, #12]
200041e8:	781b      	ldrb	r3, [r3, #0]
200041ea:	2b00      	cmp	r3, #0
200041ec:	d005      	beq.n	200041fa <ascii_write_part+0x48>
200041ee:	697b      	ldr	r3, [r7, #20]
200041f0:	1c5a      	adds	r2, r3, #1
200041f2:	617a      	str	r2, [r7, #20]
200041f4:	687a      	ldr	r2, [r7, #4]
200041f6:	4293      	cmp	r3, r2
200041f8:	dbee      	blt.n	200041d8 <ascii_write_part+0x26>
		}			
	}

	ascii_goToXY(1,2);
200041fa:	2102      	movs	r1, #2
200041fc:	2001      	movs	r0, #1
200041fe:	f7ff fee9 	bl	20003fd4 <ascii_goToXY>
	i = 0;
20004202:	2300      	movs	r3, #0
20004204:	617b      	str	r3, [r7, #20]
	if(limit2 > 0) {
20004206:	683b      	ldr	r3, [r7, #0]
20004208:	2b00      	cmp	r3, #0
2000420a:	dd11      	ble.n	20004230 <ascii_write_part+0x7e>
		while(*row2 && (i++ < limit2)){
2000420c:	e006      	b.n	2000421c <ascii_write_part+0x6a>
			ascii_write_char(*row2++);
2000420e:	68bb      	ldr	r3, [r7, #8]
20004210:	1c5a      	adds	r2, r3, #1
20004212:	60ba      	str	r2, [r7, #8]
20004214:	781b      	ldrb	r3, [r3, #0]
20004216:	0018      	movs	r0, r3
20004218:	f7ff febe 	bl	20003f98 <ascii_write_char>
		while(*row2 && (i++ < limit2)){
2000421c:	68bb      	ldr	r3, [r7, #8]
2000421e:	781b      	ldrb	r3, [r3, #0]
20004220:	2b00      	cmp	r3, #0
20004222:	d005      	beq.n	20004230 <ascii_write_part+0x7e>
20004224:	697b      	ldr	r3, [r7, #20]
20004226:	1c5a      	adds	r2, r3, #1
20004228:	617a      	str	r2, [r7, #20]
2000422a:	683a      	ldr	r2, [r7, #0]
2000422c:	4293      	cmp	r3, r2
2000422e:	dbee      	blt.n	2000420e <ascii_write_part+0x5c>
		}
	}
	
	ascii_goToXY(21,1);
20004230:	2101      	movs	r1, #1
20004232:	2015      	movs	r0, #21
20004234:	f7ff fece 	bl	20003fd4 <ascii_goToXY>
}
20004238:	46c0      	nop			; (mov r8, r8)
2000423a:	46bd      	mov	sp, r7
2000423c:	b006      	add	sp, #24
2000423e:	bd80      	pop	{r7, pc}

20004240 <ascii_test>:



void ascii_test(void) {
20004240:	b590      	push	{r4, r7, lr}
20004242:	b08b      	sub	sp, #44	; 0x2c
20004244:	af00      	add	r7, sp, #0
	char *s;
	char test1[] = "Alfanumerisk";
20004246:	2314      	movs	r3, #20
20004248:	18fb      	adds	r3, r7, r3
2000424a:	4a1c      	ldr	r2, [pc, #112]	; (200042bc <ascii_test+0x7c>)
2000424c:	ca13      	ldmia	r2!, {r0, r1, r4}
2000424e:	c313      	stmia	r3!, {r0, r1, r4}
20004250:	7812      	ldrb	r2, [r2, #0]
20004252:	701a      	strb	r2, [r3, #0]
	char test2[] = "hardåäöare suger";
20004254:	003b      	movs	r3, r7
20004256:	4a1a      	ldr	r2, [pc, #104]	; (200042c0 <ascii_test+0x80>)
20004258:	ca13      	ldmia	r2!, {r0, r1, r4}
2000425a:	c313      	stmia	r3!, {r0, r1, r4}
2000425c:	ca03      	ldmia	r2!, {r0, r1}
2000425e:	c303      	stmia	r3!, {r0, r1}
	
	init_application();
20004260:	f7ff ff2d 	bl	200040be <init_application>
	ascii_init();
20004264:	f7ff fede 	bl	20004024 <ascii_init>
	ascii_goToXY(1,1);
20004268:	2101      	movs	r1, #1
2000426a:	2001      	movs	r0, #1
2000426c:	f7ff feb2 	bl	20003fd4 <ascii_goToXY>
	s = test1;
20004270:	2314      	movs	r3, #20
20004272:	18fb      	adds	r3, r7, r3
20004274:	627b      	str	r3, [r7, #36]	; 0x24
	while(*s){
20004276:	e006      	b.n	20004286 <ascii_test+0x46>
		ascii_write_char(*s++);
20004278:	6a7b      	ldr	r3, [r7, #36]	; 0x24
2000427a:	1c5a      	adds	r2, r3, #1
2000427c:	627a      	str	r2, [r7, #36]	; 0x24
2000427e:	781b      	ldrb	r3, [r3, #0]
20004280:	0018      	movs	r0, r3
20004282:	f7ff fe89 	bl	20003f98 <ascii_write_char>
	while(*s){
20004286:	6a7b      	ldr	r3, [r7, #36]	; 0x24
20004288:	781b      	ldrb	r3, [r3, #0]
2000428a:	2b00      	cmp	r3, #0
2000428c:	d1f4      	bne.n	20004278 <ascii_test+0x38>
	}
	ascii_goToXY(1,2);
2000428e:	2102      	movs	r1, #2
20004290:	2001      	movs	r0, #1
20004292:	f7ff fe9f 	bl	20003fd4 <ascii_goToXY>
	s = test2;
20004296:	003b      	movs	r3, r7
20004298:	627b      	str	r3, [r7, #36]	; 0x24
	while(*s){
2000429a:	e006      	b.n	200042aa <ascii_test+0x6a>
		ascii_write_char(*s++);
2000429c:	6a7b      	ldr	r3, [r7, #36]	; 0x24
2000429e:	1c5a      	adds	r2, r3, #1
200042a0:	627a      	str	r2, [r7, #36]	; 0x24
200042a2:	781b      	ldrb	r3, [r3, #0]
200042a4:	0018      	movs	r0, r3
200042a6:	f7ff fe77 	bl	20003f98 <ascii_write_char>
	while(*s){
200042aa:	6a7b      	ldr	r3, [r7, #36]	; 0x24
200042ac:	781b      	ldrb	r3, [r3, #0]
200042ae:	2b00      	cmp	r3, #0
200042b0:	d1f4      	bne.n	2000429c <ascii_test+0x5c>
	}
	return 0;
200042b2:	46c0      	nop			; (mov r8, r8)
200042b4:	46bd      	mov	sp, r7
200042b6:	b00b      	add	sp, #44	; 0x2c
200042b8:	bd90      	pop	{r4, r7, pc}
200042ba:	46c0      	nop			; (mov r8, r8)
200042bc:	2000f748 	andcs	pc, r0, r8, asr #14
200042c0:	2000f758 	andcs	pc, r0, r8, asr r7	; <UNPREDICTABLE>

200042c4 <display>:
#include "slow_text.h"
#include "ascii_display.h"

void display(SlowText *this, int length_of_row1) {
200042c4:	b580      	push	{r7, lr}
200042c6:	b084      	sub	sp, #16
200042c8:	af00      	add	r7, sp, #0
200042ca:	6078      	str	r0, [r7, #4]
200042cc:	6039      	str	r1, [r7, #0]
	int limit1 = this->counter / this->speed;
200042ce:	687b      	ldr	r3, [r7, #4]
200042d0:	689a      	ldr	r2, [r3, #8]
200042d2:	687b      	ldr	r3, [r7, #4]
200042d4:	68db      	ldr	r3, [r3, #12]
200042d6:	0019      	movs	r1, r3
200042d8:	0010      	movs	r0, r2
200042da:	f000 fa0d 	bl	200046f8 <__divsi3>
200042de:	0003      	movs	r3, r0
200042e0:	60fb      	str	r3, [r7, #12]
	int limit2 = this->counter / this->speed - length_of_row1;
200042e2:	687b      	ldr	r3, [r7, #4]
200042e4:	689a      	ldr	r2, [r3, #8]
200042e6:	687b      	ldr	r3, [r7, #4]
200042e8:	68db      	ldr	r3, [r3, #12]
200042ea:	0019      	movs	r1, r3
200042ec:	0010      	movs	r0, r2
200042ee:	f000 fa03 	bl	200046f8 <__divsi3>
200042f2:	0003      	movs	r3, r0
200042f4:	001a      	movs	r2, r3
200042f6:	683b      	ldr	r3, [r7, #0]
200042f8:	1ad3      	subs	r3, r2, r3
200042fa:	60bb      	str	r3, [r7, #8]
	ascii_write_part(this->row1, this->row2, limit1, limit2);
200042fc:	687b      	ldr	r3, [r7, #4]
200042fe:	6818      	ldr	r0, [r3, #0]
20004300:	687b      	ldr	r3, [r7, #4]
20004302:	6859      	ldr	r1, [r3, #4]
20004304:	68bb      	ldr	r3, [r7, #8]
20004306:	68fa      	ldr	r2, [r7, #12]
20004308:	f7ff ff53 	bl	200041b2 <ascii_write_part>
	
	this->counter++;
2000430c:	687b      	ldr	r3, [r7, #4]
2000430e:	689b      	ldr	r3, [r3, #8]
20004310:	1c5a      	adds	r2, r3, #1
20004312:	687b      	ldr	r3, [r7, #4]
20004314:	609a      	str	r2, [r3, #8]
}
20004316:	46c0      	nop			; (mov r8, r8)
20004318:	46bd      	mov	sp, r7
2000431a:	b004      	add	sp, #16
2000431c:	bd80      	pop	{r7, pc}

2000431e <init_slow_text>:

void init_slow_text(SlowText *obj, char *row1, char *row2, int speed) {
2000431e:	b580      	push	{r7, lr}
20004320:	b084      	sub	sp, #16
20004322:	af00      	add	r7, sp, #0
20004324:	60f8      	str	r0, [r7, #12]
20004326:	60b9      	str	r1, [r7, #8]
20004328:	607a      	str	r2, [r7, #4]
2000432a:	603b      	str	r3, [r7, #0]
	obj->row1 = row1;
2000432c:	68fb      	ldr	r3, [r7, #12]
2000432e:	68ba      	ldr	r2, [r7, #8]
20004330:	601a      	str	r2, [r3, #0]
	obj->row2 = row2;
20004332:	68fb      	ldr	r3, [r7, #12]
20004334:	687a      	ldr	r2, [r7, #4]
20004336:	605a      	str	r2, [r3, #4]
	obj->speed = speed;
20004338:	68fb      	ldr	r3, [r7, #12]
2000433a:	683a      	ldr	r2, [r7, #0]
2000433c:	60da      	str	r2, [r3, #12]
	obj->counter = 0;
2000433e:	68fb      	ldr	r3, [r7, #12]
20004340:	2200      	movs	r2, #0
20004342:	609a      	str	r2, [r3, #8]
	obj->display = display;
20004344:	68fb      	ldr	r3, [r7, #12]
20004346:	4a03      	ldr	r2, [pc, #12]	; (20004354 <init_slow_text+0x36>)
20004348:	611a      	str	r2, [r3, #16]
2000434a:	46c0      	nop			; (mov r8, r8)
2000434c:	46bd      	mov	sp, r7
2000434e:	b004      	add	sp, #16
20004350:	bd80      	pop	{r7, pc}
20004352:	46c0      	nop			; (mov r8, r8)
20004354:	200042c5 	andcs	r4, r0, r5, asr #5

20004358 <initSprites>:


GameObject indoorsObj;
Image indoorsImage;
Image indoorsImages[1];
static void initSprites( void ) {	
20004358:	b580      	push	{r7, lr}
2000435a:	b084      	sub	sp, #16
2000435c:	af00      	add	r7, sp, #0
	
	sprite *pointer11 = &tempIndoorsLight;
2000435e:	4b12      	ldr	r3, [pc, #72]	; (200043a8 <initSprites+0x50>)
20004360:	60fb      	str	r3, [r7, #12]
	load_sprite(pointer11, indoors_light_bits, indoors_black_width, indoors_black_height);
20004362:	4912      	ldr	r1, [pc, #72]	; (200043ac <initSprites+0x54>)
20004364:	68f8      	ldr	r0, [r7, #12]
20004366:	2340      	movs	r3, #64	; 0x40
20004368:	2280      	movs	r2, #128	; 0x80
2000436a:	f7ff fcd1 	bl	20003d10 <load_sprite>
	indoorsLight = pointer11;
2000436e:	4b10      	ldr	r3, [pc, #64]	; (200043b0 <initSprites+0x58>)
20004370:	68fa      	ldr	r2, [r7, #12]
20004372:	601a      	str	r2, [r3, #0]
	sprite *pointer12 = &tempIndoorsGray;
20004374:	4b0f      	ldr	r3, [pc, #60]	; (200043b4 <initSprites+0x5c>)
20004376:	60bb      	str	r3, [r7, #8]
	load_sprite(pointer12, indoors_gray_bits, indoors_black_width, indoors_black_height);
20004378:	490f      	ldr	r1, [pc, #60]	; (200043b8 <initSprites+0x60>)
2000437a:	68b8      	ldr	r0, [r7, #8]
2000437c:	2340      	movs	r3, #64	; 0x40
2000437e:	2280      	movs	r2, #128	; 0x80
20004380:	f7ff fcc6 	bl	20003d10 <load_sprite>
	indoorsGray = pointer12;
20004384:	4b0d      	ldr	r3, [pc, #52]	; (200043bc <initSprites+0x64>)
20004386:	68ba      	ldr	r2, [r7, #8]
20004388:	601a      	str	r2, [r3, #0]
	sprite *pointer13 = &tempIndoorsBlack;
2000438a:	4b0d      	ldr	r3, [pc, #52]	; (200043c0 <initSprites+0x68>)
2000438c:	607b      	str	r3, [r7, #4]
	load_sprite(pointer13, indoors_black_bits, indoors_black_width, indoors_black_height);
2000438e:	490d      	ldr	r1, [pc, #52]	; (200043c4 <initSprites+0x6c>)
20004390:	6878      	ldr	r0, [r7, #4]
20004392:	2340      	movs	r3, #64	; 0x40
20004394:	2280      	movs	r2, #128	; 0x80
20004396:	f7ff fcbb 	bl	20003d10 <load_sprite>
	indoorsBlack = pointer13;	
2000439a:	4b0b      	ldr	r3, [pc, #44]	; (200043c8 <initSprites+0x70>)
2000439c:	687a      	ldr	r2, [r7, #4]
2000439e:	601a      	str	r2, [r3, #0]
	
}
200043a0:	46c0      	nop			; (mov r8, r8)
200043a2:	46bd      	mov	sp, r7
200043a4:	b004      	add	sp, #16
200043a6:	bd80      	pop	{r7, pc}
200043a8:	20007094 	mulcs	r0, r4, r0
200043ac:	2000d7cc 	andcs	sp, r0, ip, asr #15
200043b0:	200070f0 	strdcs	r7, [r0], -r0
200043b4:	20007088 	andcs	r7, r0, r8, lsl #1
200043b8:	2000d3cc 	andcs	sp, r0, ip, asr #7
200043bc:	200070ac 	andcs	r7, r0, ip, lsr #1
200043c0:	200070a0 	andcs	r7, r0, r0, lsr #1
200043c4:	2000cfcc 	andcs	ip, r0, ip, asr #31
200043c8:	200070e0 	andcs	r7, r0, r0, ror #1

200043cc <init_indoors>:
	
void init_indoors( GameObject *indoorsObj ) {
200043cc:	b590      	push	{r4, r7, lr}
200043ce:	b083      	sub	sp, #12
200043d0:	af00      	add	r7, sp, #0
200043d2:	6078      	str	r0, [r7, #4]
	static int firstTime = 1;
	if (firstTime) {
200043d4:	4b14      	ldr	r3, [pc, #80]	; (20004428 <init_indoors+0x5c>)
200043d6:	681b      	ldr	r3, [r3, #0]
200043d8:	2b00      	cmp	r3, #0
200043da:	d011      	beq.n	20004400 <init_indoors+0x34>
		initSprites();
200043dc:	f7ff ffbc 	bl	20004358 <initSprites>
		firstTime = 0;			
200043e0:	4b11      	ldr	r3, [pc, #68]	; (20004428 <init_indoors+0x5c>)
200043e2:	2200      	movs	r2, #0
200043e4:	601a      	str	r2, [r3, #0]

		indoorsImages[0] = indoorsImage;
200043e6:	4b11      	ldr	r3, [pc, #68]	; (2000442c <init_indoors+0x60>)
200043e8:	4a11      	ldr	r2, [pc, #68]	; (20004430 <init_indoors+0x64>)
200043ea:	ca13      	ldmia	r2!, {r0, r1, r4}
200043ec:	c313      	stmia	r3!, {r0, r1, r4}
		
		load_image(&indoorsImages[0], indoorsBlack, indoorsGray, indoorsLight);
200043ee:	4b11      	ldr	r3, [pc, #68]	; (20004434 <init_indoors+0x68>)
200043f0:	6819      	ldr	r1, [r3, #0]
200043f2:	4b11      	ldr	r3, [pc, #68]	; (20004438 <init_indoors+0x6c>)
200043f4:	681a      	ldr	r2, [r3, #0]
200043f6:	4b11      	ldr	r3, [pc, #68]	; (2000443c <init_indoors+0x70>)
200043f8:	681b      	ldr	r3, [r3, #0]
200043fa:	480c      	ldr	r0, [pc, #48]	; (2000442c <init_indoors+0x60>)
200043fc:	f7ff fc74 	bl	20003ce8 <load_image>
	}
	
	indoorsObj->images = indoorsImages;
20004400:	687b      	ldr	r3, [r7, #4]
20004402:	4a0a      	ldr	r2, [pc, #40]	; (2000442c <init_indoors+0x60>)
20004404:	601a      	str	r2, [r3, #0]

	indoorsObj->current_frame = 0;
20004406:	687b      	ldr	r3, [r7, #4]
20004408:	2200      	movs	r2, #0
2000440a:	615a      	str	r2, [r3, #20]
	indoorsObj->n_frames = 1;
2000440c:	687b      	ldr	r3, [r7, #4]
2000440e:	2201      	movs	r2, #1
20004410:	619a      	str	r2, [r3, #24]
	indoorsObj->animation_speed = 1;
20004412:	687b      	ldr	r3, [r7, #4]
20004414:	2201      	movs	r2, #1
20004416:	61da      	str	r2, [r3, #28]
	indoorsObj->animation_counter = 0;
20004418:	687b      	ldr	r3, [r7, #4]
2000441a:	2200      	movs	r2, #0
2000441c:	621a      	str	r2, [r3, #32]
}
2000441e:	46c0      	nop			; (mov r8, r8)
20004420:	46bd      	mov	sp, r7
20004422:	b003      	add	sp, #12
20004424:	bd90      	pop	{r4, r7, pc}
20004426:	46c0      	nop			; (mov r8, r8)
20004428:	2000dbcc 	andcs	sp, r0, ip, asr #23
2000442c:	200070d4 	ldrdcs	r7, [r0], -r4
20004430:	200070e4 	andcs	r7, r0, r4, ror #1
20004434:	200070e0 	andcs	r7, r0, r0, ror #1
20004438:	200070ac 	andcs	r7, r0, ip, lsr #1
2000443c:	200070f0 	strdcs	r7, [r0], -r0

20004440 <initSprites>:


GameObject indoors2Obj;
Image indoors2Image;
Image indoors2Images[1];
static void initSprites( void ) {	
20004440:	b580      	push	{r7, lr}
20004442:	b084      	sub	sp, #16
20004444:	af00      	add	r7, sp, #0
	
	sprite *pointer11 = &tempIndoors2Light;
20004446:	4b12      	ldr	r3, [pc, #72]	; (20004490 <initSprites+0x50>)
20004448:	60fb      	str	r3, [r7, #12]
	load_sprite(pointer11, indoors2_light_bits, indoors2_black_width, indoors2_black_height);
2000444a:	4912      	ldr	r1, [pc, #72]	; (20004494 <initSprites+0x54>)
2000444c:	68f8      	ldr	r0, [r7, #12]
2000444e:	2340      	movs	r3, #64	; 0x40
20004450:	2280      	movs	r2, #128	; 0x80
20004452:	f7ff fc5d 	bl	20003d10 <load_sprite>
	indoors2Light = pointer11;
20004456:	4b10      	ldr	r3, [pc, #64]	; (20004498 <initSprites+0x58>)
20004458:	68fa      	ldr	r2, [r7, #12]
2000445a:	601a      	str	r2, [r3, #0]
	sprite *pointer12 = &tempIndoors2Gray;
2000445c:	4b0f      	ldr	r3, [pc, #60]	; (2000449c <initSprites+0x5c>)
2000445e:	60bb      	str	r3, [r7, #8]
	load_sprite(pointer12, indoors2_gray_bits, indoors2_black_width, indoors2_black_height);
20004460:	490f      	ldr	r1, [pc, #60]	; (200044a0 <initSprites+0x60>)
20004462:	68b8      	ldr	r0, [r7, #8]
20004464:	2340      	movs	r3, #64	; 0x40
20004466:	2280      	movs	r2, #128	; 0x80
20004468:	f7ff fc52 	bl	20003d10 <load_sprite>
	indoors2Gray = pointer12;
2000446c:	4b0d      	ldr	r3, [pc, #52]	; (200044a4 <initSprites+0x64>)
2000446e:	68ba      	ldr	r2, [r7, #8]
20004470:	601a      	str	r2, [r3, #0]
	sprite *pointer13 = &tempIndoors2Black;
20004472:	4b0d      	ldr	r3, [pc, #52]	; (200044a8 <initSprites+0x68>)
20004474:	607b      	str	r3, [r7, #4]
	load_sprite(pointer13, indoors2_black_bits, indoors2_black_width, indoors2_black_height);
20004476:	490d      	ldr	r1, [pc, #52]	; (200044ac <initSprites+0x6c>)
20004478:	6878      	ldr	r0, [r7, #4]
2000447a:	2340      	movs	r3, #64	; 0x40
2000447c:	2280      	movs	r2, #128	; 0x80
2000447e:	f7ff fc47 	bl	20003d10 <load_sprite>
	indoors2Black = pointer13;	
20004482:	4b0b      	ldr	r3, [pc, #44]	; (200044b0 <initSprites+0x70>)
20004484:	687a      	ldr	r2, [r7, #4]
20004486:	601a      	str	r2, [r3, #0]
	
}
20004488:	46c0      	nop			; (mov r8, r8)
2000448a:	46bd      	mov	sp, r7
2000448c:	b004      	add	sp, #16
2000448e:	bd80      	pop	{r7, pc}
20004490:	20007150 	andcs	r7, r0, r0, asr r1
20004494:	2000e3d0 	ldrdcs	lr, [r0], -r0
20004498:	20007140 	andcs	r7, r0, r0, asr #2
2000449c:	20007134 	andcs	r7, r0, r4, lsr r1
200044a0:	2000dfd0 	ldrdcs	sp, [r0], -r0
200044a4:	20007118 	andcs	r7, r0, r8, lsl r1
200044a8:	20007144 	andcs	r7, r0, r4, asr #2
200044ac:	2000dbd0 	ldrdcs	sp, [r0], -r0
200044b0:	2000715c 	andcs	r7, r0, ip, asr r1

200044b4 <init_indoors2>:
	
void init_indoors2( GameObject *indoors2Obj ) {
200044b4:	b590      	push	{r4, r7, lr}
200044b6:	b083      	sub	sp, #12
200044b8:	af00      	add	r7, sp, #0
200044ba:	6078      	str	r0, [r7, #4]
	static int firstTime = 1;
	if (firstTime) {
200044bc:	4b14      	ldr	r3, [pc, #80]	; (20004510 <init_indoors2+0x5c>)
200044be:	681b      	ldr	r3, [r3, #0]
200044c0:	2b00      	cmp	r3, #0
200044c2:	d011      	beq.n	200044e8 <init_indoors2+0x34>
		initSprites();
200044c4:	f7ff ffbc 	bl	20004440 <initSprites>
		firstTime = 0;			
200044c8:	4b11      	ldr	r3, [pc, #68]	; (20004510 <init_indoors2+0x5c>)
200044ca:	2200      	movs	r2, #0
200044cc:	601a      	str	r2, [r3, #0]

		indoors2Images[0] = indoors2Image;
200044ce:	4b11      	ldr	r3, [pc, #68]	; (20004514 <init_indoors2+0x60>)
200044d0:	4a11      	ldr	r2, [pc, #68]	; (20004518 <init_indoors2+0x64>)
200044d2:	ca13      	ldmia	r2!, {r0, r1, r4}
200044d4:	c313      	stmia	r3!, {r0, r1, r4}
		
		load_image(&indoors2Images[0], indoors2Black, indoors2Gray, indoors2Light);
200044d6:	4b11      	ldr	r3, [pc, #68]	; (2000451c <init_indoors2+0x68>)
200044d8:	6819      	ldr	r1, [r3, #0]
200044da:	4b11      	ldr	r3, [pc, #68]	; (20004520 <init_indoors2+0x6c>)
200044dc:	681a      	ldr	r2, [r3, #0]
200044de:	4b11      	ldr	r3, [pc, #68]	; (20004524 <init_indoors2+0x70>)
200044e0:	681b      	ldr	r3, [r3, #0]
200044e2:	480c      	ldr	r0, [pc, #48]	; (20004514 <init_indoors2+0x60>)
200044e4:	f7ff fc00 	bl	20003ce8 <load_image>
	}
	
	indoors2Obj->images = indoors2Images;
200044e8:	687b      	ldr	r3, [r7, #4]
200044ea:	4a0a      	ldr	r2, [pc, #40]	; (20004514 <init_indoors2+0x60>)
200044ec:	601a      	str	r2, [r3, #0]

	indoors2Obj->current_frame = 0;
200044ee:	687b      	ldr	r3, [r7, #4]
200044f0:	2200      	movs	r2, #0
200044f2:	615a      	str	r2, [r3, #20]
	indoors2Obj->n_frames = 1;
200044f4:	687b      	ldr	r3, [r7, #4]
200044f6:	2201      	movs	r2, #1
200044f8:	619a      	str	r2, [r3, #24]
	indoors2Obj->animation_speed = 1;
200044fa:	687b      	ldr	r3, [r7, #4]
200044fc:	2201      	movs	r2, #1
200044fe:	61da      	str	r2, [r3, #28]
	indoors2Obj->animation_counter = 0;
20004500:	687b      	ldr	r3, [r7, #4]
20004502:	2200      	movs	r2, #0
20004504:	621a      	str	r2, [r3, #32]
}
20004506:	46c0      	nop			; (mov r8, r8)
20004508:	46bd      	mov	sp, r7
2000450a:	b003      	add	sp, #12
2000450c:	bd90      	pop	{r4, r7, pc}
2000450e:	46c0      	nop			; (mov r8, r8)
20004510:	2000e7d0 	ldrdcs	lr, [r0], -r0
20004514:	2000711c 	andcs	r7, r0, ip, lsl r1
20004518:	20007128 	andcs	r7, r0, r8, lsr #2
2000451c:	2000715c 	andcs	r7, r0, ip, asr r1
20004520:	20007118 	andcs	r7, r0, r8, lsl r1
20004524:	20007140 	andcs	r7, r0, r0, asr #2

20004528 <initSprites>:


GameObject trophyObj;
Image trophyImage;
Image trophyImages[1];
static void initSprites( void ) {	
20004528:	b580      	push	{r7, lr}
2000452a:	b084      	sub	sp, #16
2000452c:	af00      	add	r7, sp, #0
	
	sprite *pointer11 = &tempTrophyLight;
2000452e:	4b12      	ldr	r3, [pc, #72]	; (20004578 <initSprites+0x50>)
20004530:	60fb      	str	r3, [r7, #12]
	load_sprite(pointer11, trophy_light_bits, trophy_black_width, trophy_black_height);
20004532:	4912      	ldr	r1, [pc, #72]	; (2000457c <initSprites+0x54>)
20004534:	68f8      	ldr	r0, [r7, #12]
20004536:	2311      	movs	r3, #17
20004538:	220b      	movs	r2, #11
2000453a:	f7ff fbe9 	bl	20003d10 <load_sprite>
	trophyLight = pointer11;
2000453e:	4b10      	ldr	r3, [pc, #64]	; (20004580 <initSprites+0x58>)
20004540:	68fa      	ldr	r2, [r7, #12]
20004542:	601a      	str	r2, [r3, #0]
	sprite *pointer12 = &tempTrophyGray;
20004544:	4b0f      	ldr	r3, [pc, #60]	; (20004584 <initSprites+0x5c>)
20004546:	60bb      	str	r3, [r7, #8]
	load_sprite(pointer12, trophy_gray_bits, trophy_black_width, trophy_black_height);
20004548:	490f      	ldr	r1, [pc, #60]	; (20004588 <initSprites+0x60>)
2000454a:	68b8      	ldr	r0, [r7, #8]
2000454c:	2311      	movs	r3, #17
2000454e:	220b      	movs	r2, #11
20004550:	f7ff fbde 	bl	20003d10 <load_sprite>
	trophyGray = pointer12;
20004554:	4b0d      	ldr	r3, [pc, #52]	; (2000458c <initSprites+0x64>)
20004556:	68ba      	ldr	r2, [r7, #8]
20004558:	601a      	str	r2, [r3, #0]
	sprite *pointer13 = &tempTrophyBlack;
2000455a:	4b0d      	ldr	r3, [pc, #52]	; (20004590 <initSprites+0x68>)
2000455c:	607b      	str	r3, [r7, #4]
	load_sprite(pointer13, trophy_black_bits, trophy_black_width, trophy_black_height);
2000455e:	490d      	ldr	r1, [pc, #52]	; (20004594 <initSprites+0x6c>)
20004560:	6878      	ldr	r0, [r7, #4]
20004562:	2311      	movs	r3, #17
20004564:	220b      	movs	r2, #11
20004566:	f7ff fbd3 	bl	20003d10 <load_sprite>
	trophyBlack = pointer13;	
2000456a:	4b0b      	ldr	r3, [pc, #44]	; (20004598 <initSprites+0x70>)
2000456c:	687a      	ldr	r2, [r7, #4]
2000456e:	601a      	str	r2, [r3, #0]
	
}
20004570:	46c0      	nop			; (mov r8, r8)
20004572:	46bd      	mov	sp, r7
20004574:	b004      	add	sp, #16
20004576:	bd80      	pop	{r7, pc}
20004578:	2000717c 	andcs	r7, r0, ip, ror r1
2000457c:	2000e81c 	andcs	lr, r0, ip, lsl r8
20004580:	200071c8 	andcs	r7, r0, r8, asr #3
20004584:	200071bc 			; <UNDEFINED> instruction: 0x200071bc
20004588:	2000e7f8 	strdcs	lr, [r0], -r8
2000458c:	200071ac 	andcs	r7, r0, ip, lsr #3
20004590:	200071b0 			; <UNDEFINED> instruction: 0x200071b0
20004594:	2000e7d4 	ldrdcs	lr, [r0], -r4
20004598:	2000716c 	andcs	r7, r0, ip, ror #2

2000459c <init_trophy>:
	
void init_trophy( GameObject *trophyObj ) {
2000459c:	b590      	push	{r4, r7, lr}
2000459e:	b083      	sub	sp, #12
200045a0:	af00      	add	r7, sp, #0
200045a2:	6078      	str	r0, [r7, #4]
	static int firstTime = 1;
	if (firstTime) {
200045a4:	4b14      	ldr	r3, [pc, #80]	; (200045f8 <init_trophy+0x5c>)
200045a6:	681b      	ldr	r3, [r3, #0]
200045a8:	2b00      	cmp	r3, #0
200045aa:	d011      	beq.n	200045d0 <init_trophy+0x34>
		initSprites();
200045ac:	f7ff ffbc 	bl	20004528 <initSprites>
		firstTime = 0;			
200045b0:	4b11      	ldr	r3, [pc, #68]	; (200045f8 <init_trophy+0x5c>)
200045b2:	2200      	movs	r2, #0
200045b4:	601a      	str	r2, [r3, #0]

		trophyImages[0] = trophyImage;
200045b6:	4b11      	ldr	r3, [pc, #68]	; (200045fc <init_trophy+0x60>)
200045b8:	4a11      	ldr	r2, [pc, #68]	; (20004600 <init_trophy+0x64>)
200045ba:	ca13      	ldmia	r2!, {r0, r1, r4}
200045bc:	c313      	stmia	r3!, {r0, r1, r4}
		
		load_image(&trophyImages[0], trophyBlack, trophyGray, trophyLight);
200045be:	4b11      	ldr	r3, [pc, #68]	; (20004604 <init_trophy+0x68>)
200045c0:	6819      	ldr	r1, [r3, #0]
200045c2:	4b11      	ldr	r3, [pc, #68]	; (20004608 <init_trophy+0x6c>)
200045c4:	681a      	ldr	r2, [r3, #0]
200045c6:	4b11      	ldr	r3, [pc, #68]	; (2000460c <init_trophy+0x70>)
200045c8:	681b      	ldr	r3, [r3, #0]
200045ca:	480c      	ldr	r0, [pc, #48]	; (200045fc <init_trophy+0x60>)
200045cc:	f7ff fb8c 	bl	20003ce8 <load_image>
	}
	
	trophyObj->images = trophyImages;
200045d0:	687b      	ldr	r3, [r7, #4]
200045d2:	4a0a      	ldr	r2, [pc, #40]	; (200045fc <init_trophy+0x60>)
200045d4:	601a      	str	r2, [r3, #0]

	trophyObj->current_frame = 0;
200045d6:	687b      	ldr	r3, [r7, #4]
200045d8:	2200      	movs	r2, #0
200045da:	615a      	str	r2, [r3, #20]
	trophyObj->n_frames = 1;
200045dc:	687b      	ldr	r3, [r7, #4]
200045de:	2201      	movs	r2, #1
200045e0:	619a      	str	r2, [r3, #24]
	trophyObj->animation_speed = 1;
200045e2:	687b      	ldr	r3, [r7, #4]
200045e4:	2201      	movs	r2, #1
200045e6:	61da      	str	r2, [r3, #28]
	trophyObj->animation_counter = 0;
200045e8:	687b      	ldr	r3, [r7, #4]
200045ea:	2200      	movs	r2, #0
200045ec:	621a      	str	r2, [r3, #32]
}
200045ee:	46c0      	nop			; (mov r8, r8)
200045f0:	46bd      	mov	sp, r7
200045f2:	b003      	add	sp, #12
200045f4:	bd90      	pop	{r4, r7, pc}
200045f6:	46c0      	nop			; (mov r8, r8)
200045f8:	2000e840 	andcs	lr, r0, r0, asr #16
200045fc:	20007160 	andcs	r7, r0, r0, ror #2
20004600:	20007170 	andcs	r7, r0, r0, ror r1
20004604:	2000716c 	andcs	r7, r0, ip, ror #2
20004608:	200071ac 	andcs	r7, r0, ip, lsr #3
2000460c:	200071c8 	andcs	r7, r0, r8, asr #3

20004610 <initSprites>:


GameObject rogerObj;
Image rogerImage;
Image rogerImages[1];
static void initSprites( void ) {	
20004610:	b580      	push	{r7, lr}
20004612:	b084      	sub	sp, #16
20004614:	af00      	add	r7, sp, #0
	
	sprite *pointer11 = &tempRogerLight;
20004616:	4b12      	ldr	r3, [pc, #72]	; (20004660 <initSprites+0x50>)
20004618:	60fb      	str	r3, [r7, #12]
	load_sprite(pointer11, roger_light_bits, roger_black_width, roger_black_height);
2000461a:	4912      	ldr	r1, [pc, #72]	; (20004664 <initSprites+0x54>)
2000461c:	68f8      	ldr	r0, [r7, #12]
2000461e:	2340      	movs	r3, #64	; 0x40
20004620:	2280      	movs	r2, #128	; 0x80
20004622:	f7ff fb75 	bl	20003d10 <load_sprite>
	rogerLight = pointer11;
20004626:	4b10      	ldr	r3, [pc, #64]	; (20004668 <initSprites+0x58>)
20004628:	68fa      	ldr	r2, [r7, #12]
2000462a:	601a      	str	r2, [r3, #0]
	sprite *pointer12 = &tempRogerGray;
2000462c:	4b0f      	ldr	r3, [pc, #60]	; (2000466c <initSprites+0x5c>)
2000462e:	60bb      	str	r3, [r7, #8]
	load_sprite(pointer12, roger_gray_bits, roger_black_width, roger_black_height);
20004630:	490f      	ldr	r1, [pc, #60]	; (20004670 <initSprites+0x60>)
20004632:	68b8      	ldr	r0, [r7, #8]
20004634:	2340      	movs	r3, #64	; 0x40
20004636:	2280      	movs	r2, #128	; 0x80
20004638:	f7ff fb6a 	bl	20003d10 <load_sprite>
	rogerGray = pointer12;
2000463c:	4b0d      	ldr	r3, [pc, #52]	; (20004674 <initSprites+0x64>)
2000463e:	68ba      	ldr	r2, [r7, #8]
20004640:	601a      	str	r2, [r3, #0]
	sprite *pointer13 = &tempRogerBlack;
20004642:	4b0d      	ldr	r3, [pc, #52]	; (20004678 <initSprites+0x68>)
20004644:	607b      	str	r3, [r7, #4]
	load_sprite(pointer13, roger_black_bits, roger_black_width, roger_black_height);
20004646:	490d      	ldr	r1, [pc, #52]	; (2000467c <initSprites+0x6c>)
20004648:	6878      	ldr	r0, [r7, #4]
2000464a:	2340      	movs	r3, #64	; 0x40
2000464c:	2280      	movs	r2, #128	; 0x80
2000464e:	f7ff fb5f 	bl	20003d10 <load_sprite>
	rogerBlack = pointer13;	
20004652:	4b0b      	ldr	r3, [pc, #44]	; (20004680 <initSprites+0x70>)
20004654:	687a      	ldr	r2, [r7, #4]
20004656:	601a      	str	r2, [r3, #0]
	
}
20004658:	46c0      	nop			; (mov r8, r8)
2000465a:	46bd      	mov	sp, r7
2000465c:	b004      	add	sp, #16
2000465e:	bd80      	pop	{r7, pc}
20004660:	200071e8 	andcs	r7, r0, r8, ror #3
20004664:	2000f044 	andcs	pc, r0, r4, asr #32
20004668:	200071f4 	strdcs	r7, [r0], -r4
2000466c:	200071dc 	ldrdcs	r7, [r0], -ip
20004670:	2000ec44 	andcs	lr, r0, r4, asr #24
20004674:	200071d8 	ldrdcs	r7, [r0], -r8
20004678:	2000721c 	andcs	r7, r0, ip, lsl r2
2000467c:	2000e844 	andcs	lr, r0, r4, asr #16
20004680:	20007228 	andcs	r7, r0, r8, lsr #4

20004684 <init_roger>:
	
void init_roger( GameObject *rogerObj ) {
20004684:	b590      	push	{r4, r7, lr}
20004686:	b083      	sub	sp, #12
20004688:	af00      	add	r7, sp, #0
2000468a:	6078      	str	r0, [r7, #4]
	static int firstTime = 1;
	if (firstTime) {
2000468c:	4b14      	ldr	r3, [pc, #80]	; (200046e0 <init_roger+0x5c>)
2000468e:	681b      	ldr	r3, [r3, #0]
20004690:	2b00      	cmp	r3, #0
20004692:	d011      	beq.n	200046b8 <init_roger+0x34>
		initSprites();
20004694:	f7ff ffbc 	bl	20004610 <initSprites>
		firstTime = 0;			
20004698:	4b11      	ldr	r3, [pc, #68]	; (200046e0 <init_roger+0x5c>)
2000469a:	2200      	movs	r2, #0
2000469c:	601a      	str	r2, [r3, #0]

		rogerImages[0] = rogerImage;
2000469e:	4b11      	ldr	r3, [pc, #68]	; (200046e4 <init_roger+0x60>)
200046a0:	4a11      	ldr	r2, [pc, #68]	; (200046e8 <init_roger+0x64>)
200046a2:	ca13      	ldmia	r2!, {r0, r1, r4}
200046a4:	c313      	stmia	r3!, {r0, r1, r4}
		
		load_image(&rogerImages[0], rogerBlack, rogerGray, rogerLight);
200046a6:	4b11      	ldr	r3, [pc, #68]	; (200046ec <init_roger+0x68>)
200046a8:	6819      	ldr	r1, [r3, #0]
200046aa:	4b11      	ldr	r3, [pc, #68]	; (200046f0 <init_roger+0x6c>)
200046ac:	681a      	ldr	r2, [r3, #0]
200046ae:	4b11      	ldr	r3, [pc, #68]	; (200046f4 <init_roger+0x70>)
200046b0:	681b      	ldr	r3, [r3, #0]
200046b2:	480c      	ldr	r0, [pc, #48]	; (200046e4 <init_roger+0x60>)
200046b4:	f7ff fb18 	bl	20003ce8 <load_image>
	}
	
	rogerObj->images = rogerImages;
200046b8:	687b      	ldr	r3, [r7, #4]
200046ba:	4a0a      	ldr	r2, [pc, #40]	; (200046e4 <init_roger+0x60>)
200046bc:	601a      	str	r2, [r3, #0]

	rogerObj->current_frame = 0;
200046be:	687b      	ldr	r3, [r7, #4]
200046c0:	2200      	movs	r2, #0
200046c2:	615a      	str	r2, [r3, #20]
	rogerObj->n_frames = 1;
200046c4:	687b      	ldr	r3, [r7, #4]
200046c6:	2201      	movs	r2, #1
200046c8:	619a      	str	r2, [r3, #24]
	rogerObj->animation_speed = 1;
200046ca:	687b      	ldr	r3, [r7, #4]
200046cc:	2201      	movs	r2, #1
200046ce:	61da      	str	r2, [r3, #28]
	rogerObj->animation_counter = 0;
200046d0:	687b      	ldr	r3, [r7, #4]
200046d2:	2200      	movs	r2, #0
200046d4:	621a      	str	r2, [r3, #32]
}
200046d6:	46c0      	nop			; (mov r8, r8)
200046d8:	46bd      	mov	sp, r7
200046da:	b003      	add	sp, #12
200046dc:	bd90      	pop	{r4, r7, pc}
200046de:	46c0      	nop			; (mov r8, r8)
200046e0:	2000f444 	andcs	pc, r0, r4, asr #8
200046e4:	2000722c 	andcs	r7, r0, ip, lsr #4
200046e8:	200071cc 	andcs	r7, r0, ip, asr #3
200046ec:	20007228 	andcs	r7, r0, r8, lsr #4
200046f0:	200071d8 	ldrdcs	r7, [r0], -r8
200046f4:	200071f4 	strdcs	r7, [r0], -r4

200046f8 <__divsi3>:
200046f8:	4603      	mov	r3, r0
200046fa:	430b      	orrs	r3, r1
200046fc:	d47f      	bmi.n	200047fe <__divsi3+0x106>
200046fe:	2200      	movs	r2, #0
20004700:	0843      	lsrs	r3, r0, #1
20004702:	428b      	cmp	r3, r1
20004704:	d374      	bcc.n	200047f0 <__divsi3+0xf8>
20004706:	0903      	lsrs	r3, r0, #4
20004708:	428b      	cmp	r3, r1
2000470a:	d35f      	bcc.n	200047cc <__divsi3+0xd4>
2000470c:	0a03      	lsrs	r3, r0, #8
2000470e:	428b      	cmp	r3, r1
20004710:	d344      	bcc.n	2000479c <__divsi3+0xa4>
20004712:	0b03      	lsrs	r3, r0, #12
20004714:	428b      	cmp	r3, r1
20004716:	d328      	bcc.n	2000476a <__divsi3+0x72>
20004718:	0c03      	lsrs	r3, r0, #16
2000471a:	428b      	cmp	r3, r1
2000471c:	d30d      	bcc.n	2000473a <__divsi3+0x42>
2000471e:	22ff      	movs	r2, #255	; 0xff
20004720:	0209      	lsls	r1, r1, #8
20004722:	ba12      	rev	r2, r2
20004724:	0c03      	lsrs	r3, r0, #16
20004726:	428b      	cmp	r3, r1
20004728:	d302      	bcc.n	20004730 <__divsi3+0x38>
2000472a:	1212      	asrs	r2, r2, #8
2000472c:	0209      	lsls	r1, r1, #8
2000472e:	d065      	beq.n	200047fc <__divsi3+0x104>
20004730:	0b03      	lsrs	r3, r0, #12
20004732:	428b      	cmp	r3, r1
20004734:	d319      	bcc.n	2000476a <__divsi3+0x72>
20004736:	e000      	b.n	2000473a <__divsi3+0x42>
20004738:	0a09      	lsrs	r1, r1, #8
2000473a:	0bc3      	lsrs	r3, r0, #15
2000473c:	428b      	cmp	r3, r1
2000473e:	d301      	bcc.n	20004744 <__divsi3+0x4c>
20004740:	03cb      	lsls	r3, r1, #15
20004742:	1ac0      	subs	r0, r0, r3
20004744:	4152      	adcs	r2, r2
20004746:	0b83      	lsrs	r3, r0, #14
20004748:	428b      	cmp	r3, r1
2000474a:	d301      	bcc.n	20004750 <__divsi3+0x58>
2000474c:	038b      	lsls	r3, r1, #14
2000474e:	1ac0      	subs	r0, r0, r3
20004750:	4152      	adcs	r2, r2
20004752:	0b43      	lsrs	r3, r0, #13
20004754:	428b      	cmp	r3, r1
20004756:	d301      	bcc.n	2000475c <__divsi3+0x64>
20004758:	034b      	lsls	r3, r1, #13
2000475a:	1ac0      	subs	r0, r0, r3
2000475c:	4152      	adcs	r2, r2
2000475e:	0b03      	lsrs	r3, r0, #12
20004760:	428b      	cmp	r3, r1
20004762:	d301      	bcc.n	20004768 <__divsi3+0x70>
20004764:	030b      	lsls	r3, r1, #12
20004766:	1ac0      	subs	r0, r0, r3
20004768:	4152      	adcs	r2, r2
2000476a:	0ac3      	lsrs	r3, r0, #11
2000476c:	428b      	cmp	r3, r1
2000476e:	d301      	bcc.n	20004774 <__divsi3+0x7c>
20004770:	02cb      	lsls	r3, r1, #11
20004772:	1ac0      	subs	r0, r0, r3
20004774:	4152      	adcs	r2, r2
20004776:	0a83      	lsrs	r3, r0, #10
20004778:	428b      	cmp	r3, r1
2000477a:	d301      	bcc.n	20004780 <__divsi3+0x88>
2000477c:	028b      	lsls	r3, r1, #10
2000477e:	1ac0      	subs	r0, r0, r3
20004780:	4152      	adcs	r2, r2
20004782:	0a43      	lsrs	r3, r0, #9
20004784:	428b      	cmp	r3, r1
20004786:	d301      	bcc.n	2000478c <__divsi3+0x94>
20004788:	024b      	lsls	r3, r1, #9
2000478a:	1ac0      	subs	r0, r0, r3
2000478c:	4152      	adcs	r2, r2
2000478e:	0a03      	lsrs	r3, r0, #8
20004790:	428b      	cmp	r3, r1
20004792:	d301      	bcc.n	20004798 <__divsi3+0xa0>
20004794:	020b      	lsls	r3, r1, #8
20004796:	1ac0      	subs	r0, r0, r3
20004798:	4152      	adcs	r2, r2
2000479a:	d2cd      	bcs.n	20004738 <__divsi3+0x40>
2000479c:	09c3      	lsrs	r3, r0, #7
2000479e:	428b      	cmp	r3, r1
200047a0:	d301      	bcc.n	200047a6 <__divsi3+0xae>
200047a2:	01cb      	lsls	r3, r1, #7
200047a4:	1ac0      	subs	r0, r0, r3
200047a6:	4152      	adcs	r2, r2
200047a8:	0983      	lsrs	r3, r0, #6
200047aa:	428b      	cmp	r3, r1
200047ac:	d301      	bcc.n	200047b2 <__divsi3+0xba>
200047ae:	018b      	lsls	r3, r1, #6
200047b0:	1ac0      	subs	r0, r0, r3
200047b2:	4152      	adcs	r2, r2
200047b4:	0943      	lsrs	r3, r0, #5
200047b6:	428b      	cmp	r3, r1
200047b8:	d301      	bcc.n	200047be <__divsi3+0xc6>
200047ba:	014b      	lsls	r3, r1, #5
200047bc:	1ac0      	subs	r0, r0, r3
200047be:	4152      	adcs	r2, r2
200047c0:	0903      	lsrs	r3, r0, #4
200047c2:	428b      	cmp	r3, r1
200047c4:	d301      	bcc.n	200047ca <__divsi3+0xd2>
200047c6:	010b      	lsls	r3, r1, #4
200047c8:	1ac0      	subs	r0, r0, r3
200047ca:	4152      	adcs	r2, r2
200047cc:	08c3      	lsrs	r3, r0, #3
200047ce:	428b      	cmp	r3, r1
200047d0:	d301      	bcc.n	200047d6 <__divsi3+0xde>
200047d2:	00cb      	lsls	r3, r1, #3
200047d4:	1ac0      	subs	r0, r0, r3
200047d6:	4152      	adcs	r2, r2
200047d8:	0883      	lsrs	r3, r0, #2
200047da:	428b      	cmp	r3, r1
200047dc:	d301      	bcc.n	200047e2 <__divsi3+0xea>
200047de:	008b      	lsls	r3, r1, #2
200047e0:	1ac0      	subs	r0, r0, r3
200047e2:	4152      	adcs	r2, r2
200047e4:	0843      	lsrs	r3, r0, #1
200047e6:	428b      	cmp	r3, r1
200047e8:	d301      	bcc.n	200047ee <__divsi3+0xf6>
200047ea:	004b      	lsls	r3, r1, #1
200047ec:	1ac0      	subs	r0, r0, r3
200047ee:	4152      	adcs	r2, r2
200047f0:	1a41      	subs	r1, r0, r1
200047f2:	d200      	bcs.n	200047f6 <__divsi3+0xfe>
200047f4:	4601      	mov	r1, r0
200047f6:	4152      	adcs	r2, r2
200047f8:	4610      	mov	r0, r2
200047fa:	4770      	bx	lr
200047fc:	e05d      	b.n	200048ba <__divsi3+0x1c2>
200047fe:	0fca      	lsrs	r2, r1, #31
20004800:	d000      	beq.n	20004804 <__divsi3+0x10c>
20004802:	4249      	negs	r1, r1
20004804:	1003      	asrs	r3, r0, #32
20004806:	d300      	bcc.n	2000480a <__divsi3+0x112>
20004808:	4240      	negs	r0, r0
2000480a:	4053      	eors	r3, r2
2000480c:	2200      	movs	r2, #0
2000480e:	469c      	mov	ip, r3
20004810:	0903      	lsrs	r3, r0, #4
20004812:	428b      	cmp	r3, r1
20004814:	d32d      	bcc.n	20004872 <__divsi3+0x17a>
20004816:	0a03      	lsrs	r3, r0, #8
20004818:	428b      	cmp	r3, r1
2000481a:	d312      	bcc.n	20004842 <__divsi3+0x14a>
2000481c:	22fc      	movs	r2, #252	; 0xfc
2000481e:	0189      	lsls	r1, r1, #6
20004820:	ba12      	rev	r2, r2
20004822:	0a03      	lsrs	r3, r0, #8
20004824:	428b      	cmp	r3, r1
20004826:	d30c      	bcc.n	20004842 <__divsi3+0x14a>
20004828:	0189      	lsls	r1, r1, #6
2000482a:	1192      	asrs	r2, r2, #6
2000482c:	428b      	cmp	r3, r1
2000482e:	d308      	bcc.n	20004842 <__divsi3+0x14a>
20004830:	0189      	lsls	r1, r1, #6
20004832:	1192      	asrs	r2, r2, #6
20004834:	428b      	cmp	r3, r1
20004836:	d304      	bcc.n	20004842 <__divsi3+0x14a>
20004838:	0189      	lsls	r1, r1, #6
2000483a:	d03a      	beq.n	200048b2 <__divsi3+0x1ba>
2000483c:	1192      	asrs	r2, r2, #6
2000483e:	e000      	b.n	20004842 <__divsi3+0x14a>
20004840:	0989      	lsrs	r1, r1, #6
20004842:	09c3      	lsrs	r3, r0, #7
20004844:	428b      	cmp	r3, r1
20004846:	d301      	bcc.n	2000484c <__divsi3+0x154>
20004848:	01cb      	lsls	r3, r1, #7
2000484a:	1ac0      	subs	r0, r0, r3
2000484c:	4152      	adcs	r2, r2
2000484e:	0983      	lsrs	r3, r0, #6
20004850:	428b      	cmp	r3, r1
20004852:	d301      	bcc.n	20004858 <__divsi3+0x160>
20004854:	018b      	lsls	r3, r1, #6
20004856:	1ac0      	subs	r0, r0, r3
20004858:	4152      	adcs	r2, r2
2000485a:	0943      	lsrs	r3, r0, #5
2000485c:	428b      	cmp	r3, r1
2000485e:	d301      	bcc.n	20004864 <__divsi3+0x16c>
20004860:	014b      	lsls	r3, r1, #5
20004862:	1ac0      	subs	r0, r0, r3
20004864:	4152      	adcs	r2, r2
20004866:	0903      	lsrs	r3, r0, #4
20004868:	428b      	cmp	r3, r1
2000486a:	d301      	bcc.n	20004870 <__divsi3+0x178>
2000486c:	010b      	lsls	r3, r1, #4
2000486e:	1ac0      	subs	r0, r0, r3
20004870:	4152      	adcs	r2, r2
20004872:	08c3      	lsrs	r3, r0, #3
20004874:	428b      	cmp	r3, r1
20004876:	d301      	bcc.n	2000487c <__divsi3+0x184>
20004878:	00cb      	lsls	r3, r1, #3
2000487a:	1ac0      	subs	r0, r0, r3
2000487c:	4152      	adcs	r2, r2
2000487e:	0883      	lsrs	r3, r0, #2
20004880:	428b      	cmp	r3, r1
20004882:	d301      	bcc.n	20004888 <__divsi3+0x190>
20004884:	008b      	lsls	r3, r1, #2
20004886:	1ac0      	subs	r0, r0, r3
20004888:	4152      	adcs	r2, r2
2000488a:	d2d9      	bcs.n	20004840 <__divsi3+0x148>
2000488c:	0843      	lsrs	r3, r0, #1
2000488e:	428b      	cmp	r3, r1
20004890:	d301      	bcc.n	20004896 <__divsi3+0x19e>
20004892:	004b      	lsls	r3, r1, #1
20004894:	1ac0      	subs	r0, r0, r3
20004896:	4152      	adcs	r2, r2
20004898:	1a41      	subs	r1, r0, r1
2000489a:	d200      	bcs.n	2000489e <__divsi3+0x1a6>
2000489c:	4601      	mov	r1, r0
2000489e:	4663      	mov	r3, ip
200048a0:	4152      	adcs	r2, r2
200048a2:	105b      	asrs	r3, r3, #1
200048a4:	4610      	mov	r0, r2
200048a6:	d301      	bcc.n	200048ac <__divsi3+0x1b4>
200048a8:	4240      	negs	r0, r0
200048aa:	2b00      	cmp	r3, #0
200048ac:	d500      	bpl.n	200048b0 <__divsi3+0x1b8>
200048ae:	4249      	negs	r1, r1
200048b0:	4770      	bx	lr
200048b2:	4663      	mov	r3, ip
200048b4:	105b      	asrs	r3, r3, #1
200048b6:	d300      	bcc.n	200048ba <__divsi3+0x1c2>
200048b8:	4240      	negs	r0, r0
200048ba:	b501      	push	{r0, lr}
200048bc:	2000      	movs	r0, #0
200048be:	f000 f805 	bl	200048cc <__aeabi_idiv0>
200048c2:	bd02      	pop	{r1, pc}

200048c4 <__aeabi_idivmod>:
200048c4:	2900      	cmp	r1, #0
200048c6:	d0f8      	beq.n	200048ba <__divsi3+0x1c2>
200048c8:	e716      	b.n	200046f8 <__divsi3>
200048ca:	4770      	bx	lr

200048cc <__aeabi_idiv0>:
200048cc:	4770      	bx	lr
200048ce:	46c0      	nop			; (mov r8, r8)

200048d0 <counter>:
200048d0:	00000000 	andeq	r0, r0, r0

200048d4 <i.4312>:
200048d4:	00000000 	andeq	r0, r0, r0

200048d8 <j.4318>:
200048d8:	00000000 	andeq	r0, r0, r0

200048dc <distance_player_fire.4317>:
200048dc:	00000000 	andeq	r0, r0, r0

200048e0 <distance_hair_trophy.4323>:
200048e0:	00000000 	andeq	r0, r0, r0

200048e4 <trophy_burned.4322>:
200048e4:	00000000 	andeq	r0, r0, r0

200048e8 <distance_hair_DIP.4325>:
200048e8:	00000000 	andeq	r0, r0, r0

200048ec <DIP_burned.4324>:
200048ec:	00000000 	andeq	r0, r0, r0

200048f0 <test.4327>:
200048f0:	00000000 	andeq	r0, r0, r0

200048f4 <nGameObjects>:
200048f4:	00000000 	andeq	r0, r0, r0

200048f8 <lastJumpValue.4106>:
200048f8:	00000000 	andeq	r0, r0, r0

200048fc <ySpeed.4110>:
200048fc:	00000000 	andeq	r0, r0, r0

20004900 <lastRightValue.4107>:
20004900:	00000000 	andeq	r0, r0, r0

20004904 <xSpeed.4109>:
20004904:	00000000 	andeq	r0, r0, r0

20004908 <lastLeftValue.4108>:
20004908:	00000000 	andeq	r0, r0, r0

2000490c <playerPositionX>:
2000490c:	00000000 	andeq	r0, r0, r0

20004910 <playerPositionY>:
20004910:	00000000 	andeq	r0, r0, r0

20004914 <counter.4152>:
20004914:	00000000 	andeq	r0, r0, r0

20004918 <isRunning.4154>:
20004918:	00000000 	andeq	r0, r0, r0

2000491c <monster>:
2000491c:	00000000 	andeq	r0, r0, r0

20004920 <tempCastleBlack>:
	...

2000492c <tempPressGray>:
	...

20004938 <tempTitleGray>:
	...

20004944 <castleBlack>:
20004944:	00000000 	andeq	r0, r0, r0

20004948 <tempMonster>:
	...

20004954 <pressLight>:
20004954:	00000000 	andeq	r0, r0, r0

20004958 <tempTitleBlack>:
	...

20004964 <bg>:
20004964:	00000000 	andeq	r0, r0, r0

20004968 <tempMonsterGray>:
	...

20004974 <tempTitleLight>:
	...

20004980 <castleLight>:
20004980:	00000000 	andeq	r0, r0, r0

20004984 <tempPressLight>:
	...

20004990 <tempCastleLight>:
	...

2000499c <pressGray>:
2000499c:	00000000 	andeq	r0, r0, r0

200049a0 <tempMonsterLight>:
	...

200049ac <tempPressBlack>:
	...

200049b8 <titleGray>:
200049b8:	00000000 	andeq	r0, r0, r0

200049bc <tempCastleGray>:
	...

200049c8 <monsterLight>:
200049c8:	00000000 	andeq	r0, r0, r0

200049cc <titleLight>:
200049cc:	00000000 	andeq	r0, r0, r0

200049d0 <castleGray>:
200049d0:	00000000 	andeq	r0, r0, r0

200049d4 <random_seed>:
200049d4:	00000000 	andeq	r0, r0, r0

200049d8 <pressBlack>:
200049d8:	00000000 	andeq	r0, r0, r0

200049dc <monsterGray>:
200049dc:	00000000 	andeq	r0, r0, r0

200049e0 <tempBg>:
	...

200049ec <titleBlack>:
200049ec:	00000000 	andeq	r0, r0, r0

200049f0 <gameObjects>:
	...

20004b80 <fire1Light>:
20004b80:	00000000 	andeq	r0, r0, r0

20004b84 <tempFire3Light>:
	...

20004b90 <fire3Gray>:
20004b90:	00000000 	andeq	r0, r0, r0

20004b94 <tempFire4Gray>:
	...

20004ba0 <fire2Image>:
	...

20004bac <tempFire2Gray>:
	...

20004bb8 <tempFireBlack>:
	...

20004bc4 <fire3Image>:
	...

20004bd0 <tempFire4Light>:
	...

20004bdc <fire1Image>:
	...

20004be8 <fire4Light>:
20004be8:	00000000 	andeq	r0, r0, r0

20004bec <fireObj>:
	...

20004c10 <fire5Image>:
	...

20004c1c <fireImages>:
	...

20004c58 <tempFire5Gray>:
	...

20004c64 <tempFire3Gray>:
	...

20004c70 <fire4Image>:
	...

20004c7c <fire4Gray>:
20004c7c:	00000000 	andeq	r0, r0, r0

20004c80 <tempFire1Light>:
	...

20004c8c <tempFire5Light>:
	...

20004c98 <fire5Gray>:
20004c98:	00000000 	andeq	r0, r0, r0

20004c9c <fire2Light>:
20004c9c:	00000000 	andeq	r0, r0, r0

20004ca0 <fire5Light>:
20004ca0:	00000000 	andeq	r0, r0, r0

20004ca4 <tempFire1Gray>:
	...

20004cb0 <fireBlack>:
20004cb0:	00000000 	andeq	r0, r0, r0

20004cb4 <tempFire2Light>:
	...

20004cc0 <fire3Light>:
20004cc0:	00000000 	andeq	r0, r0, r0

20004cc4 <fire2Gray>:
20004cc4:	00000000 	andeq	r0, r0, r0

20004cc8 <fire1Gray>:
20004cc8:	00000000 	andeq	r0, r0, r0

20004ccc <bird4Light>:
20004ccc:	00000000 	andeq	r0, r0, r0

20004cd0 <bird1Gray>:
20004cd0:	00000000 	andeq	r0, r0, r0

20004cd4 <bird6Image>:
	...

20004ce0 <bird5Black>:
20004ce0:	00000000 	andeq	r0, r0, r0

20004ce4 <tempBird4Black>:
	...

20004cf0 <bird2Image>:
	...

20004cfc <birdObj>:
	...

20004d20 <bird1Image>:
	...

20004d2c <bird3Black>:
20004d2c:	00000000 	andeq	r0, r0, r0

20004d30 <bird4Gray>:
20004d30:	00000000 	andeq	r0, r0, r0

20004d34 <bird2Black>:
20004d34:	00000000 	andeq	r0, r0, r0

20004d38 <bird1Black>:
20004d38:	00000000 	andeq	r0, r0, r0

20004d3c <bird4Image>:
	...

20004d48 <tempBirdBlack>:
	...

20004d54 <bird3Gray>:
20004d54:	00000000 	andeq	r0, r0, r0

20004d58 <tempBirdGray>:
	...

20004d64 <bird5Gray>:
20004d64:	00000000 	andeq	r0, r0, r0

20004d68 <tempBird5Light>:
	...

20004d74 <tempBird2Gray>:
	...

20004d80 <bird3Light>:
20004d80:	00000000 	andeq	r0, r0, r0

20004d84 <tempBird5Gray>:
	...

20004d90 <tempBird5Black>:
	...

20004d9c <bird5Image>:
	...

20004da8 <bird5Light>:
20004da8:	00000000 	andeq	r0, r0, r0

20004dac <tempBird3Black>:
	...

20004db8 <bird2Gray>:
20004db8:	00000000 	andeq	r0, r0, r0

20004dbc <tempBirdLight>:
	...

20004dc8 <bird1Light>:
20004dc8:	00000000 	andeq	r0, r0, r0

20004dcc <tempBird2Light>:
	...

20004dd8 <bird3Image>:
	...

20004de4 <tempBird4Light>:
	...

20004df0 <tempBird3Light>:
	...

20004dfc <tempBird3Gray>:
	...

20004e08 <birdImages>:
	...

20004e50 <bird4Black>:
20004e50:	00000000 	andeq	r0, r0, r0

20004e54 <tempBird2Black>:
	...

20004e60 <tempBird4Gray>:
	...

20004e6c <bird2Light>:
20004e6c:	00000000 	andeq	r0, r0, r0

20004e70 <witch1Gray>:
20004e70:	00000000 	andeq	r0, r0, r0

20004e74 <witch2Light>:
20004e74:	00000000 	andeq	r0, r0, r0

20004e78 <witchImages>:
	...

20004ea8 <witch2Image>:
	...

20004eb4 <tempWitch2Black>:
	...

20004ec0 <tempWitchBlack>:
	...

20004ecc <tempWitch3Light>:
	...

20004ed8 <witch4Image>:
	...

20004ee4 <witch2Gray>:
20004ee4:	00000000 	andeq	r0, r0, r0

20004ee8 <tempWitchGray>:
	...

20004ef4 <tempWitch3Black>:
	...

20004f00 <tempWitch2Gray>:
	...

20004f0c <witch3Black>:
20004f0c:	00000000 	andeq	r0, r0, r0

20004f10 <witchObj>:
	...

20004f34 <witch3Light>:
20004f34:	00000000 	andeq	r0, r0, r0

20004f38 <tempWitch3Gray>:
	...

20004f44 <witch1Black>:
20004f44:	00000000 	andeq	r0, r0, r0

20004f48 <witch3Gray>:
20004f48:	00000000 	andeq	r0, r0, r0

20004f4c <witch1Image>:
	...

20004f58 <tempWitchLight>:
	...

20004f64 <tempWitch2Light>:
	...

20004f70 <witch1Light>:
20004f70:	00000000 	andeq	r0, r0, r0

20004f74 <witch3Image>:
	...

20004f80 <witch2Black>:
20004f80:	00000000 	andeq	r0, r0, r0

20004f84 <DIPObj>:
	...

20004fa8 <DIP2Image>:
	...

20004fb4 <DIP2Gray>:
20004fb4:	00000000 	andeq	r0, r0, r0

20004fb8 <tempDIP2Gray>:
	...

20004fc4 <DIP3Black>:
20004fc4:	00000000 	andeq	r0, r0, r0

20004fc8 <DIP1Black>:
20004fc8:	00000000 	andeq	r0, r0, r0

20004fcc <tempDIPLight>:
	...

20004fd8 <tempDIP3Light>:
	...

20004fe4 <DIPImages>:
	...

20005014 <tempDIP2Black>:
	...

20005020 <DIP3Image>:
	...

2000502c <DIP1Image>:
	...

20005038 <DIP1Light>:
20005038:	00000000 	andeq	r0, r0, r0

2000503c <DIP2Light>:
2000503c:	00000000 	andeq	r0, r0, r0

20005040 <DIP3Light>:
20005040:	00000000 	andeq	r0, r0, r0

20005044 <DIP2Black>:
20005044:	00000000 	andeq	r0, r0, r0

20005048 <tempDIP3Gray>:
	...

20005054 <tempDIPBlack>:
	...

20005060 <DIP1Gray>:
20005060:	00000000 	andeq	r0, r0, r0

20005064 <tempDIP3Black>:
	...

20005070 <DIP3Gray>:
20005070:	00000000 	andeq	r0, r0, r0

20005074 <DIP4Image>:
	...

20005080 <tempDIP2Light>:
	...

2000508c <tempDIPGray>:
	...

20005098 <tempFlameGray>:
	...

200050a4 <tempFlame4Light>:
	...

200050b0 <flame2Image>:
	...

200050bc <flame3Light>:
200050bc:	00000000 	andeq	r0, r0, r0

200050c0 <tempFlame3Light>:
	...

200050cc <flame3Image>:
	...

200050d8 <flame3Gray>:
200050d8:	00000000 	andeq	r0, r0, r0

200050dc <flameObj>:
	...

20005100 <tempFlame2Light>:
	...

2000510c <tempFlame3Gray>:
	...

20005118 <tempFlame2Black>:
	...

20005124 <flame2Gray>:
20005124:	00000000 	andeq	r0, r0, r0

20005128 <flame1Gray>:
20005128:	00000000 	andeq	r0, r0, r0

2000512c <flame1Light>:
2000512c:	00000000 	andeq	r0, r0, r0

20005130 <tempFlame4Black>:
	...

2000513c <tempFlame4Gray>:
	...

20005148 <flame4Gray>:
20005148:	00000000 	andeq	r0, r0, r0

2000514c <flame4Image>:
	...

20005158 <flame1Image>:
	...

20005164 <tempFlame2Gray>:
	...

20005170 <flameImages>:
	...

200051a0 <tempFlame3Black>:
	...

200051ac <flame4Black>:
200051ac:	00000000 	andeq	r0, r0, r0

200051b0 <flame1Black>:
200051b0:	00000000 	andeq	r0, r0, r0

200051b4 <tempFlameLight>:
	...

200051c0 <flame2Light>:
200051c0:	00000000 	andeq	r0, r0, r0

200051c4 <flame3Black>:
200051c4:	00000000 	andeq	r0, r0, r0

200051c8 <tempFlameBlack>:
	...

200051d4 <flame4Light>:
200051d4:	00000000 	andeq	r0, r0, r0

200051d8 <flame2Black>:
200051d8:	00000000 	andeq	r0, r0, r0

200051dc <tempBoom5Gray>:
	...

200051e8 <tempBoom2Black>:
	...

200051f4 <tempBoomLight>:
	...

20005200 <tempBoom6Light>:
	...

2000520c <boom9Image>:
	...

20005218 <boom12Image>:
	...

20005224 <boom3Light>:
20005224:	00000000 	andeq	r0, r0, r0

20005228 <boom3Black>:
20005228:	00000000 	andeq	r0, r0, r0

2000522c <boom4Image>:
	...

20005238 <boom2Image>:
	...

20005244 <boom5Black>:
20005244:	00000000 	andeq	r0, r0, r0

20005248 <boom4Light>:
20005248:	00000000 	andeq	r0, r0, r0

2000524c <boom10Image>:
	...

20005258 <boom14Image>:
	...

20005264 <boom8Image>:
	...

20005270 <boom5Image>:
	...

2000527c <boom3Gray>:
2000527c:	00000000 	andeq	r0, r0, r0

20005280 <tempBoom4Light>:
	...

2000528c <boom5Gray>:
2000528c:	00000000 	andeq	r0, r0, r0

20005290 <boomObj>:
	...

200052b4 <boom6Image>:
	...

200052c0 <tempBoom3Light>:
	...

200052cc <boom6Gray>:
200052cc:	00000000 	andeq	r0, r0, r0

200052d0 <boom13Image>:
	...

200052dc <boom6Light>:
200052dc:	00000000 	andeq	r0, r0, r0

200052e0 <boomImages>:
	...

20005394 <boom6Black>:
20005394:	00000000 	andeq	r0, r0, r0

20005398 <tempBoom3Black>:
	...

200053a4 <boom4Black>:
200053a4:	00000000 	andeq	r0, r0, r0

200053a8 <tempBoom6Black>:
	...

200053b4 <tempBoomGray>:
	...

200053c0 <boom2Gray>:
200053c0:	00000000 	andeq	r0, r0, r0

200053c4 <boom1Black>:
200053c4:	00000000 	andeq	r0, r0, r0

200053c8 <tempBoom6Gray>:
	...

200053d4 <tempBoom2Gray>:
	...

200053e0 <tempBoom4Gray>:
	...

200053ec <tempBoom3Gray>:
	...

200053f8 <boom4Gray>:
200053f8:	00000000 	andeq	r0, r0, r0

200053fc <boom5Light>:
200053fc:	00000000 	andeq	r0, r0, r0

20005400 <boom1Gray>:
20005400:	00000000 	andeq	r0, r0, r0

20005404 <boom11Image>:
	...

20005410 <boom1Image>:
	...

2000541c <boom7Image>:
	...

20005428 <boom3Image>:
	...

20005434 <tempBoom5Light>:
	...

20005440 <tempBoom4Black>:
	...

2000544c <tempBoom2Light>:
	...

20005458 <tempBoom5Black>:
	...

20005464 <boom1Light>:
20005464:	00000000 	andeq	r0, r0, r0

20005468 <boom15Image>:
	...

20005474 <boom2Black>:
20005474:	00000000 	andeq	r0, r0, r0

20005478 <boom2Light>:
20005478:	00000000 	andeq	r0, r0, r0

2000547c <tempBoomBlack>:
	...

20005488 <backBufferGray>:
	...

20005888 <draw_buffer_black_gray>:
	...

20005c88 <backBuffer>:
	...

20006088 <draw_buffer_black_light>:
	...

20006488 <draw_buffer_black>:
	...

20006888 <draw_buffer_black_gray_light>:
	...

20006c88 <backBufferLight>:
	...

20007088 <tempIndoorsGray>:
	...

20007094 <tempIndoorsLight>:
	...

200070a0 <tempIndoorsBlack>:
	...

200070ac <indoorsGray>:
200070ac:	00000000 	andeq	r0, r0, r0

200070b0 <indoorsObj>:
	...

200070d4 <indoorsImages>:
	...

200070e0 <indoorsBlack>:
200070e0:	00000000 	andeq	r0, r0, r0

200070e4 <indoorsImage>:
	...

200070f0 <indoorsLight>:
200070f0:	00000000 	andeq	r0, r0, r0

200070f4 <indoors2Obj>:
	...

20007118 <indoors2Gray>:
20007118:	00000000 	andeq	r0, r0, r0

2000711c <indoors2Images>:
	...

20007128 <indoors2Image>:
	...

20007134 <tempIndoors2Gray>:
	...

20007140 <indoors2Light>:
20007140:	00000000 	andeq	r0, r0, r0

20007144 <tempIndoors2Black>:
	...

20007150 <tempIndoors2Light>:
	...

2000715c <indoors2Black>:
2000715c:	00000000 	andeq	r0, r0, r0

20007160 <trophyImages>:
	...

2000716c <trophyBlack>:
2000716c:	00000000 	andeq	r0, r0, r0

20007170 <trophyImage>:
	...

2000717c <tempTrophyLight>:
	...

20007188 <trophyObj>:
	...

200071ac <trophyGray>:
200071ac:	00000000 	andeq	r0, r0, r0

200071b0 <tempTrophyBlack>:
	...

200071bc <tempTrophyGray>:
	...

200071c8 <trophyLight>:
200071c8:	00000000 	andeq	r0, r0, r0

200071cc <rogerImage>:
	...

200071d8 <rogerGray>:
200071d8:	00000000 	andeq	r0, r0, r0

200071dc <tempRogerGray>:
	...

200071e8 <tempRogerLight>:
	...

200071f4 <rogerLight>:
200071f4:	00000000 	andeq	r0, r0, r0

200071f8 <rogerObj>:
	...

2000721c <tempRogerBlack>:
	...

20007228 <rogerBlack>:
20007228:	00000000 	andeq	r0, r0, r0

2000722c <rogerImages>:
	...

20007238 <monster_black_bits>:
	...
20007248:	0001c000 	andeq	ip, r1, r0
2000724c:	00023000 	andeq	r3, r2, r0
20007250:	00021000 	andeq	r1, r2, r0
20007254:	00060800 	andeq	r0, r6, r0, lsl #16
20007258:	00040800 	andeq	r0, r4, r0, lsl #16
2000725c:	00040800 	andeq	r0, r4, r0, lsl #16
20007260:	00092800 	andeq	r2, r9, r0, lsl #16
20007264:	00092800 	andeq	r2, r9, r0, lsl #16
20007268:	00100400 	andseq	r0, r0, r0, lsl #8
2000726c:	00100400 	andseq	r0, r0, r0, lsl #8
20007270:	00200200 	eoreq	r0, r0, r0, lsl #4
20007274:	00661b00 	rsbeq	r1, r6, r0, lsl #22
20007278:	0043b100 	subeq	fp, r3, r0, lsl #2
2000727c:	0080e080 	addeq	lr, r0, r0, lsl #1
20007280:	01800080 	orreq	r0, r0, r0, lsl #1
20007284:	01000040 	tsteq	r0, r0, asr #32
20007288:	02000040 	andeq	r0, r0, #64	; 0x40
2000728c:	02000060 	andeq	r0, r0, #96	; 0x60
20007290:	02000020 	andeq	r0, r0, #32
20007294:	03ff03e0 	mvnseq	r0, #224, 6	; 0x80000003
20007298:	0001fc00 	andeq	pc, r1, r0, lsl #24
	...

200072b0 <monster_light_bits>:
	...
200072c4:	00010000 	andeq	r0, r1, r0
200072c8:	00018000 	andeq	r8, r1, r0
200072cc:	0001f000 	andeq	pc, r1, r0
200072d0:	0001f000 	andeq	pc, r1, r0
200072d4:	00009000 	andeq	r9, r0, r0
200072d8:	00009000 	andeq	r9, r0, r0
200072dc:	0000d000 	andeq	sp, r0, r0
200072e0:	0001f800 	andeq	pc, r1, r0, lsl #16
200072e4:	0003f800 	andeq	pc, r3, r0, lsl #16
200072e8:	0003fc00 	andeq	pc, r3, r0, lsl #24
200072ec:	0001e400 	andeq	lr, r1, r0, lsl #8
200072f0:	00044c00 	andeq	r4, r4, r0, lsl #24
200072f4:	00060c00 	andeq	r0, r6, r0, lsl #24
200072f8:	0006ee00 	andeq	lr, r6, r0, lsl #28
200072fc:	000ffe00 	andeq	pc, pc, r0, lsl #28
20007300:	000f3f00 	andeq	r3, pc, r0, lsl #30
20007304:	00000780 	andeq	r0, r0, r0, lsl #15
20007308:	000003c0 	andeq	r0, r0, r0, asr #7
	...

20007328 <monster_gray_bits>:
	...
20007348:	00020000 	andeq	r0, r2, r0
2000734c:	00000000 	andeq	r0, r0, r0
20007350:	00040000 	andeq	r0, r4, r0
20007354:	00060000 	andeq	r0, r6, r0
20007358:	000e0000 	andeq	r0, lr, r0
2000735c:	000c0000 	andeq	r0, ip, r0
20007360:	001c0000 	andseq	r0, ip, r0
20007364:	00180000 	andseq	r0, r8, r0
20007368:	00380000 	eorseq	r0, r8, r0
2000736c:	00780000 	rsbseq	r0, r8, r0
20007370:	00780000 	rsbseq	r0, r8, r0
20007374:	00f00000 	rscseq	r0, r0, r0
20007378:	01f0c000 	mvnseq	ip, r0
2000737c:	01fff800 	mvnseq	pc, r0, lsl #16
20007380:	01fffc00 	mvnseq	pc, r0, lsl #24
20007384:	0000fc00 	andeq	pc, r0, r0, lsl #24
	...

200073a0 <press_black_bits>:
	...
200073d8:	001c0000 	andseq	r0, ip, r0
200073dc:	00000000 	andeq	r0, r0, r0
200073e0:	00240000 	eoreq	r0, r4, r0
200073e4:	00000000 	andeq	r0, r0, r0
200073e8:	00440000 	subeq	r0, r4, r0
200073ec:	00000000 	andeq	r0, r0, r0
200073f0:	c5240000 	strgt	r0, [r4, #-0]!
200073f4:	00000198 	muleq	r0, r8, r1
200073f8:	2b1c0000 	blcs	20707400 <firstTime.4040+0x6f7fbc>
200073fc:	00000045 	andeq	r0, r0, r5, asr #32
20007400:	e1040000 	mrs	r0, (UNDEF: 4)
20007404:	000000cd 	andeq	r0, r0, sp, asr #1
20007408:	21040000 	mrscs	r0, (UNDEF: 4)
2000740c:	00000110 	andeq	r0, r0, r0, lsl r1
20007410:	c1040000 	mrsgt	r0, (UNDEF: 4)
20007414:	000000cc 	andeq	r0, r0, ip, asr #1
	...
20007444:	00000004 	andeq	r0, r0, r4
20007448:	00000000 	andeq	r0, r0, r0
2000744c:	00000004 	andeq	r0, r0, r4
20007450:	00000000 	andeq	r0, r0, r0
20007454:	00000004 	andeq	r0, r0, r4
20007458:	0494e000 	ldreq	lr, [r4], #0
2000745c:	00009334 	andeq	r9, r0, r4, lsr r3
20007460:	04ac9000 	strteq	r9, [ip], #0
20007464:	00009494 	muleq	r0, r4, r4
20007468:	04a49000 	strteq	r9, [r4], #0
2000746c:	0000978c 	andeq	r9, r0, ip, lsl #15
20007470:	04a49000 	strteq	r9, [r4], #0
20007474:	00009094 	muleq	r0, r4, r0
20007478:	07256000 	streq	r6, [r5, -r0]!
2000747c:	0000e324 	andeq	lr, r0, r4, lsr #6
20007480:	04000000 	streq	r0, [r0], #-0
20007484:	00008000 	andeq	r8, r0, r0
20007488:	04000000 	streq	r0, [r0], #-0
2000748c:	00008000 	andeq	r8, r0, r0
20007490:	03000000 	movweq	r0, #0
20007494:	00006000 	andeq	r6, r0, r0
	...

200074b8 <press_light_bits>:
	...
200074f8:	00000200 	andeq	r0, r0, r0, lsl #4
200074fc:	00000000 	andeq	r0, r0, r0
20007500:	00000700 	andeq	r0, r0, r0, lsl #14
20007504:	00000000 	andeq	r0, r0, r0
20007508:	00000200 	andeq	r0, r0, r0, lsl #4
	...
2000754c:	00800000 	addeq	r0, r0, r0
20007550:	00000000 	andeq	r0, r0, r0
20007554:	01c00000 	biceq	r0, r0, r0
20007558:	00000000 	andeq	r0, r0, r0
2000755c:	00800000 	addeq	r0, r0, r0
20007560:	00000010 	andeq	r0, r0, r0, lsl r0
20007564:	00000000 	andeq	r0, r0, r0
20007568:	00000038 	andeq	r0, r0, r8, lsr r0
2000756c:	00000000 	andeq	r0, r0, r0
20007570:	00000010 	andeq	r0, r0, r0, lsl r0
	...

200075d0 <press_gray_bits>:
	...
20007610:	00180000 	andseq	r0, r8, r0
20007614:	00000000 	andeq	r0, r0, r0
20007618:	00380000 	eorseq	r0, r8, r0
2000761c:	00000000 	andeq	r0, r0, r0
20007620:	00580000 	subseq	r0, r8, r0
20007624:	00000020 	andeq	r0, r0, r0, lsr #32
20007628:	d4200000 	strtle	r0, [r0], #-0
2000762c:	0000039a 	muleq	r0, sl, r3
20007630:	0a380000 	beq	20e07638 <firstTime.4040+0xdf81f4>
20007634:	00000102 	andeq	r0, r0, r2, lsl #2
20007638:	c2080000 	andgt	r0, r8, #0
2000763c:	00000223 	andeq	r0, r0, r3, lsr #4
20007640:	02080000 	andeq	r0, r8, #0
20007644:	00000311 	andeq	r0, r0, r1, lsl r3
20007648:	c1080000 	mrsgt	r0, (UNDEF: 8)
2000764c:	000001dd 	ldrdeq	r0, [r0], -sp
	...
2000767c:	00000008 	andeq	r0, r0, r8
20007680:	00000000 	andeq	r0, r0, r0
20007684:	00000008 	andeq	r0, r0, r8
20007688:	00000000 	andeq	r0, r0, r0
2000768c:	00000008 	andeq	r0, r0, r8
20007690:	09116000 	ldmdbeq	r1, {sp, lr}
20007694:	00012328 	andeq	r2, r1, r8, lsr #6
20007698:	09596000 	ldmdbeq	r9, {sp, lr}^
2000769c:	00012810 	andeq	r2, r1, r0, lsl r8
200076a0:	0b492000 	bleq	2124f6a8 <firstTime.4040+0x1240264>
200076a4:	00012f08 	andeq	r2, r1, r8, lsl #30
200076a8:	08488000 	stmdaeq	r8, {pc}^
200076ac:	00010458 	andeq	r0, r1, r8, asr r4
200076b0:	0b6be000 	bleq	21aff6b8 <firstTime.4040+0x1af0274>
200076b4:	00016768 	andeq	r6, r1, r8, ror #14
200076b8:	08000000 	stmdaeq	r0, {}	; <UNPREDICTABLE>
200076bc:	00010000 	andeq	r0, r1, r0
200076c0:	0c000000 	stceq	0, cr0, [r0], {-0}
200076c4:	00018000 	andeq	r8, r1, r0
200076c8:	06000000 	streq	r0, [r0], -r0
200076cc:	0000c000 	andeq	ip, r0, r0
	...

200076e8 <castle_black_bits>:
200076e8:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
200076ec:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
200076f0:	000007ff 	strdeq	r0, [r0], -pc	; <UNPREDICTABLE>
200076f4:	00000000 	andeq	r0, r0, r0
200076f8:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
200076fc:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
20007700:	000001ff 	strdeq	r0, [r0], -pc	; <UNPREDICTABLE>
20007704:	00000000 	andeq	r0, r0, r0
20007708:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
2000770c:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
20007710:	00000001 	andeq	r0, r0, r1
20007714:	00000000 	andeq	r0, r0, r0
20007718:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
2000771c:	7fffffff 	svcvc	0x00ffffff
	...
20007728:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
2000772c:	3fffffff 	svccc	0x00ffffff
	...
20007738:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
2000773c:	1fffffff 	svcne	0x00ffffff
	...
20007748:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
2000774c:	07ffffff 			; <UNDEFINED> instruction: 0x07ffffff
	...
20007758:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
2000775c:	03ffffff 	mvnseq	pc, #1020	; 0x3fc
	...
20007768:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
2000776c:	01ffffff 	ldrsheq	pc, [pc, #255]	; 20007873 <castle_black_bits+0x18b>	; <UNPREDICTABLE>
	...
20007778:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
2000777c:	00ffffff 	ldrshteq	pc, [pc], #255	; <UNPREDICTABLE>
	...
20007788:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
2000778c:	007fffff 	ldrshteq	pc, [pc], #-255	; <UNPREDICTABLE>
	...
20007798:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
2000779c:	003fffff 	ldrshteq	pc, [pc], -pc	; <UNPREDICTABLE>
	...
200077a8:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
200077ac:	003fffff 	ldrshteq	pc, [pc], -pc	; <UNPREDICTABLE>
	...
200077b8:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
200077bc:	003fffff 	ldrshteq	pc, [pc], -pc	; <UNPREDICTABLE>
	...
200077c8:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
200077cc:	001fffff 			; <UNDEFINED> instruction: 0x001fffff
	...
200077d8:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
200077dc:	001fffff 			; <UNDEFINED> instruction: 0x001fffff
	...
200077e8:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
200077ec:	000fffff 	strdeq	pc, [pc], -pc	; <UNPREDICTABLE>
	...
200077f8:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
200077fc:	000fffff 	strdeq	pc, [pc], -pc	; <UNPREDICTABLE>
	...
20007808:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
2000780c:	0007ffff 	strdeq	pc, [r7], -pc	; <UNPREDICTABLE>
	...
20007818:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
2000781c:	0003ffff 	strdeq	pc, [r3], -pc	; <UNPREDICTABLE>
	...
20007828:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
2000782c:	0003ffff 	strdeq	pc, [r3], -pc	; <UNPREDICTABLE>
	...
20007838:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
2000783c:	0003ffff 	strdeq	pc, [r3], -pc	; <UNPREDICTABLE>
	...
20007848:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
2000784c:	0003ffff 	strdeq	pc, [r3], -pc	; <UNPREDICTABLE>
20007850:	04900000 	ldreq	r0, [r0], #0
20007854:	00000000 	andeq	r0, r0, r0
20007858:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
2000785c:	0003ffff 	strdeq	pc, [r3], -pc	; <UNPREDICTABLE>
20007860:	0b680000 	bleq	21a07868 <firstTime.4040+0x19f8424>
20007864:	00000000 	andeq	r0, r0, r0
20007868:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
2000786c:	0001ffff 	strdeq	pc, [r1], -pc	; <UNPREDICTABLE>
20007870:	08080000 	stmdaeq	r8, {}	; <UNPREDICTABLE>
20007874:	00000000 	andeq	r0, r0, r0
20007878:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
2000787c:	0001ffff 	strdeq	pc, [r1], -pc	; <UNPREDICTABLE>
20007880:	08080000 	stmdaeq	r8, {}	; <UNPREDICTABLE>
20007884:	00000092 	muleq	r0, r2, r0
20007888:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
2000788c:	0001ffff 	strdeq	pc, [r1], -pc	; <UNPREDICTABLE>
20007890:	04100000 	ldreq	r0, [r0], #-0
20007894:	0000016d 	andeq	r0, r0, sp, ror #2
20007898:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
2000789c:	0001ffff 	strdeq	pc, [r1], -pc	; <UNPREDICTABLE>
200078a0:	04101240 	ldreq	r1, [r0], #-576	; 0xfffffdc0
200078a4:	00000101 	andeq	r0, r0, r1, lsl #2
200078a8:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
200078ac:	0000ffff 	strdeq	pc, [r0], -pc	; <UNPREDICTABLE>
200078b0:	04102da0 	ldreq	r2, [r0], #-3488	; 0xfffff260
200078b4:	00000101 	andeq	r0, r0, r1, lsl #2
200078b8:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
200078bc:	0000ffff 	strdeq	pc, [r0], -pc	; <UNPREDICTABLE>
200078c0:	04102020 	ldreq	r2, [r0], #-32	; 0xffffffe0
200078c4:	00000101 	andeq	r0, r0, r1, lsl #2
200078c8:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
200078cc:	0000ffff 	strdeq	pc, [r0], -pc	; <UNPREDICTABLE>
200078d0:	04102020 	ldreq	r2, [r0], #-32	; 0xffffffe0
200078d4:	00000101 	andeq	r0, r0, r1, lsl #2
200078d8:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
200078dc:	0000ffff 	strdeq	pc, [r0], -pc	; <UNPREDICTABLE>
200078e0:	04101040 	ldreq	r1, [r0], #-64	; 0xffffffc0
200078e4:	00000082 	andeq	r0, r0, r2, lsl #1
200078e8:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
200078ec:	0000ffff 	strdeq	pc, [r0], -pc	; <UNPREDICTABLE>
200078f0:	04101040 	ldreq	r1, [r0], #-64	; 0xffffffc0
200078f4:	00000092 	muleq	r0, r2, r0
200078f8:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
200078fc:	0000ffff 	strdeq	pc, [r0], -pc	; <UNPREDICTABLE>
20007900:	04101040 	ldreq	r1, [r0], #-64	; 0xffffffc0
20007904:	012400a2 	smulwbeq	r4, r2, r0
20007908:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
2000790c:	00007fff 	strdeq	r7, [r0], -pc	; <UNPREDICTABLE>
20007910:	04101040 	ldreq	r1, [r0], #-64	; 0xffffffc0
20007914:	02da00a2 	sbcseq	r0, sl, #162	; 0xa2
20007918:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
2000791c:	00004fff 	strdeq	r4, [r0], -pc	; <UNPREDICTABLE>
20007920:	04101040 	ldreq	r1, [r0], #-64	; 0xffffffc0
20007924:	020200a2 	andeq	r0, r2, #162	; 0xa2
20007928:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
2000792c:	000007ff 	strdeq	r0, [r0], -pc	; <UNPREDICTABLE>
20007930:	08081040 	stmdaeq	r8, {r6, ip}
20007934:	0202009a 	andeq	r0, r2, #154	; 0x9a
20007938:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
2000793c:	000003ff 	strdeq	r0, [r0], -pc	; <UNPREDICTABLE>
20007940:	08082020 	stmdaeq	r8, {r5, sp}
20007944:	01040082 	smlabbeq	r4, r2, r0, r0
20007948:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
2000794c:	000003ff 	strdeq	r0, [r0], -pc	; <UNPREDICTABLE>
20007950:	48082020 	stmdami	r8, {r5, sp}
20007954:	01040102 	tsteq	r4, r2, lsl #2
20007958:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
2000795c:	000003ff 	strdeq	r0, [r0], -pc	; <UNPREDICTABLE>
20007960:	b0082020 	andlt	r2, r8, r0, lsr #32
20007964:	01040101 	tsteq	r4, r1, lsl #2
20007968:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
2000796c:	000001ff 	strdeq	r0, [r0], -pc	; <UNPREDICTABLE>
20007970:	00082220 	andeq	r2, r8, r0, lsr #4
20007974:	01040100 	mrseq	r0, (UNDEF: 20)
20007978:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
2000797c:	000001ff 	strdeq	r0, [r0], -pc	; <UNPREDICTABLE>
20007980:	00882420 	addeq	r2, r8, r0, lsr #8
20007984:	01040100 	mrseq	r0, (UNDEF: 20)
20007988:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
2000798c:	000000ff 	strdeq	r0, [r0], -pc	; <UNPREDICTABLE>
20007990:	01082420 	tsteq	r8, r0, lsr #8
20007994:	01045a00 	tsteq	r4, r0, lsl #20
20007998:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
2000799c:	0000007f 	andeq	r0, r0, pc, ror r0
200079a0:	01082420 	tsteq	r8, r0, lsr #8
200079a4:	0104a400 	tsteq	r4, r0, lsl #8
200079a8:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
200079ac:	00000001 	andeq	r0, r0, r1
200079b0:	010b2320 	tsteq	fp, r0, lsr #6
200079b4:	01030001 	tsteq	r3, r1
200079b8:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
200079bc:	00000000 	andeq	r0, r0, r0
200079c0:	00c4c020 	sbceq	ip, r4, r0, lsr #32
200079c4:	02000002 	andeq	r0, r0, #2
200079c8:	3fffffff 	svccc	0x00ffffff
200079cc:	00000000 	andeq	r0, r0, r0
200079d0:	00000020 	andeq	r0, r0, r0, lsr #32
200079d4:	02200002 	eoreq	r0, r0, #2
200079d8:	3fffffff 	svccc	0x00ffffff
200079dc:	00000000 	andeq	r0, r0, r0
200079e0:	00000020 	andeq	r0, r0, r0, lsr #32
200079e4:	02400002 	subeq	r0, r0, #2
200079e8:	1fffffff 	svcne	0x00ffffff
200079ec:	00000000 	andeq	r0, r0, r0
200079f0:	80000020 	andhi	r0, r0, r0, lsr #32
200079f4:	02400001 	subeq	r0, r0, #1
200079f8:	1fffffff 	svcne	0x00ffffff
200079fc:	00000000 	andeq	r0, r0, r0
20007a00:	00000010 	andeq	r0, r0, r0, lsl r0
20007a04:	02400000 	subeq	r0, r0, #0
20007a08:	0fffffff 	svceq	0x00ffffff
20007a0c:	00000000 	andeq	r0, r0, r0
20007a10:	00000010 	andeq	r0, r0, r0, lsl r0
20007a14:	02300000 	eorseq	r0, r0, #0
20007a18:	0fffffff 	svceq	0x00ffffff
20007a1c:	00000000 	andeq	r0, r0, r0
20007a20:	00000010 	andeq	r0, r0, r0, lsl r0
20007a24:	02000000 	andeq	r0, r0, #0
20007a28:	07ffffff 			; <UNDEFINED> instruction: 0x07ffffff
20007a2c:	00000000 	andeq	r0, r0, r0
20007a30:	00000010 	andeq	r0, r0, r0, lsl r0
20007a34:	04000000 	streq	r0, [r0], #-0
20007a38:	03ffffff 	mvnseq	pc, #1020	; 0x3fc
20007a3c:	00000000 	andeq	r0, r0, r0
20007a40:	00000010 	andeq	r0, r0, r0, lsl r0
20007a44:	04000000 	streq	r0, [r0], #-0
20007a48:	01ffffff 	ldrsheq	pc, [pc, #255]	; 20007b4f <castle_gray_bits+0x67>	; <UNPREDICTABLE>
20007a4c:	00000000 	andeq	r0, r0, r0
20007a50:	00000008 	andeq	r0, r0, r8
20007a54:	04000000 	streq	r0, [r0], #-0
20007a58:	01ffffff 	ldrsheq	pc, [pc, #255]	; 20007b5f <castle_gray_bits+0x77>	; <UNPREDICTABLE>
20007a5c:	00000000 	andeq	r0, r0, r0
20007a60:	00000008 	andeq	r0, r0, r8
20007a64:	04000000 	streq	r0, [r0], #-0
20007a68:	00ffffff 	ldrshteq	pc, [pc], #255	; <UNPREDICTABLE>
20007a6c:	00000000 	andeq	r0, r0, r0
20007a70:	00000008 	andeq	r0, r0, r8
20007a74:	060001c0 	streq	r0, [r0], -r0, asr #3
20007a78:	00ffffff 	ldrshteq	pc, [pc], #255	; <UNPREDICTABLE>
20007a7c:	00000000 	andeq	r0, r0, r0
20007a80:	00000008 	andeq	r0, r0, r8
20007a84:	04000220 	streq	r0, [r0], #-544	; 0xfffffde0
20007a88:	007fffff 	ldrshteq	pc, [pc], #-255	; <UNPREDICTABLE>
20007a8c:	00000000 	andeq	r0, r0, r0
20007a90:	00000008 	andeq	r0, r0, r8
20007a94:	04100400 	ldreq	r0, [r0], #-1024	; 0xfffffc00
20007a98:	003fffff 	ldrshteq	pc, [pc], -pc	; <UNPREDICTABLE>
20007a9c:	00000000 	andeq	r0, r0, r0
20007aa0:	00000008 	andeq	r0, r0, r8
20007aa4:	04a00400 	strteq	r0, [r0], #1024	; 0x400
20007aa8:	001fffff 			; <UNDEFINED> instruction: 0x001fffff
20007aac:	00000000 	andeq	r0, r0, r0
20007ab0:	00000008 	andeq	r0, r0, r8
20007ab4:	04000400 	streq	r0, [r0], #-1024	; 0xfffffc00
20007ab8:	0007ffff 	strdeq	pc, [r7], -pc	; <UNPREDICTABLE>
20007abc:	00000000 	andeq	r0, r0, r0
20007ac0:	00000008 	andeq	r0, r0, r8
20007ac4:	07400400 	strbeq	r0, [r0, -r0, lsl #8]
20007ac8:	0001ffff 	strdeq	pc, [r1], -pc	; <UNPREDICTABLE>
20007acc:	00000000 	andeq	r0, r0, r0
20007ad0:	00000008 	andeq	r0, r0, r8
20007ad4:	04000400 	streq	r0, [r0], #-1024	; 0xfffffc00
20007ad8:	0000ffff 	strdeq	pc, [r0], -pc	; <UNPREDICTABLE>
20007adc:	00000000 	andeq	r0, r0, r0
20007ae0:	00000008 	andeq	r0, r0, r8
20007ae4:	04000400 	streq	r0, [r0], #-1024	; 0xfffffc00

20007ae8 <castle_gray_bits>:
	...
20007af0:	fffff800 	vcmla.f32	d31, d15, d0[0], #270
20007af4:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
	...
20007b00:	fffffe00 			; <UNDEFINED> instruction: 0xfffffe00
20007b04:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
	...
20007b10:	fffffffe 			; <UNDEFINED> instruction: 0xfffffffe
20007b14:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
20007b18:	00000000 	andeq	r0, r0, r0
20007b1c:	80000000 	andhi	r0, r0, r0
20007b20:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
20007b24:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
20007b28:	00000000 	andeq	r0, r0, r0
20007b2c:	c0000000 	andgt	r0, r0, r0
20007b30:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
20007b34:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
20007b38:	00000000 	andeq	r0, r0, r0
20007b3c:	e0000000 	and	r0, r0, r0
20007b40:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
20007b44:	ffffffbf 			; <UNDEFINED> instruction: 0xffffffbf
20007b48:	00000000 	andeq	r0, r0, r0
20007b4c:	f8000000 			; <UNDEFINED> instruction: 0xf8000000
20007b50:	f3ffcfff 			; <UNDEFINED> instruction: 0xf3ffcfff
20007b54:	ffffffbf 			; <UNDEFINED> instruction: 0xffffffbf
20007b58:	00000000 	andeq	r0, r0, r0
20007b5c:	fc000000 	stc2	0, cr0, [r0], {-0}
20007b60:	f1ff8fff 			; <UNDEFINED> instruction: 0xf1ff8fff
20007b64:	fff9ff3f 			; <UNDEFINED> instruction: 0xfff9ff3f
20007b68:	00000000 	andeq	r0, r0, r0
20007b6c:	fe000000 	cdp2	0, 0, cr0, cr0, cr0, {0}
20007b70:	f0ff8fef 			; <UNDEFINED> instruction: 0xf0ff8fef
20007b74:	fff9fe1f 			; <UNDEFINED> instruction: 0xfff9fe1f
20007b78:	00000000 	andeq	r0, r0, r0
20007b7c:	ff000000 			; <UNDEFINED> instruction: 0xff000000
20007b80:	e0ff87ef 	rscs	r8, pc, pc, ror #15
20007b84:	fff9fe1f 			; <UNDEFINED> instruction: 0xfff9fe1f
20007b88:	00000000 	andeq	r0, r0, r0
20007b8c:	ff800000 			; <UNDEFINED> instruction: 0xff800000
20007b90:	c07e07e7 	rsbsgt	r0, lr, r7, ror #15
20007b94:	ffe0fc1f 			; <UNDEFINED> instruction: 0xffe0fc1f
20007b98:	00000000 	andeq	r0, r0, r0
20007b9c:	ffc00000 			; <UNDEFINED> instruction: 0xffc00000
20007ba0:	001c07e7 	andseq	r0, ip, r7, ror #15
20007ba4:	ffe0380e 	vcmla.f32	d19, d0, d14[0], #170
20007ba8:	00000000 	andeq	r0, r0, r0
20007bac:	ffc00000 			; <UNDEFINED> instruction: 0xffc00000
20007bb0:	000003e3 	andeq	r0, r0, r3, ror #7
20007bb4:	f7c00000 			; <UNDEFINED> instruction: 0xf7c00000
20007bb8:	00000000 	andeq	r0, r0, r0
20007bbc:	ffc00000 			; <UNDEFINED> instruction: 0xffc00000
20007bc0:	000001c3 	andeq	r0, r0, r3, asr #3
20007bc4:	e7800000 	str	r0, [r0, r0]
20007bc8:	00000000 	andeq	r0, r0, r0
20007bcc:	ffe00000 			; <UNDEFINED> instruction: 0xffe00000
20007bd0:	00000003 	andeq	r0, r0, r3
20007bd4:	c3800000 	orrgt	r0, r0, #0
20007bd8:	00000000 	andeq	r0, r0, r0
20007bdc:	ffe00000 			; <UNDEFINED> instruction: 0xffe00000
20007be0:	00000001 	andeq	r0, r0, r1
20007be4:	c0000000 	andgt	r0, r0, r0
20007be8:	00000000 	andeq	r0, r0, r0
20007bec:	9ff00000 	svcls	0x00f00000	; IMB
20007bf0:	00000001 	andeq	r0, r0, r1
20007bf4:	80000000 	andhi	r0, r0, r0
20007bf8:	00000000 	andeq	r0, r0, r0
20007bfc:	8ff00000 	svchi	0x00f00000	; IMB
20007c00:	00000000 	andeq	r0, r0, r0
20007c04:	80000000 	andhi	r0, r0, r0
20007c08:	00000000 	andeq	r0, r0, r0
20007c0c:	8ff80000 	svchi	0x00f80000
	...
20007c1c:	0ffc0000 	svceq	0x00fc0000
	...
20007c2c:	0ffc0000 	svceq	0x00fc0000
	...
20007c3c:	0ffc0000 	svceq	0x00fc0000
	...
20007c4c:	0ffc0000 	svceq	0x00fc0000
	...
20007c5c:	0ffc0000 	svceq	0x00fc0000
	...
20007c6c:	07fe0000 	ldrbeq	r0, [lr, r0]!
	...
20007c7c:	07fe0000 	ldrbeq	r0, [lr, r0]!
	...
20007c8c:	07fe0000 	ldrbeq	r0, [lr, r0]!
20007c90:	03800000 	orreq	r0, r0, #0
	...
20007c9c:	03fe0000 	mvnseq	r0, #0
20007ca0:	02000000 	andeq	r0, r0, #0
	...
20007cac:	03ff0000 	mvnseq	r0, #0
20007cb0:	02000000 	andeq	r0, r0, #0
	...
20007cbc:	03ff0000 	mvnseq	r0, #0
20007cc0:	02000000 	andeq	r0, r0, #0
	...
20007ccc:	03ff0000 	mvnseq	r0, #0
20007cd0:	02000000 	andeq	r0, r0, #0
	...
20007cdc:	03ff0000 	mvnseq	r0, #0
20007ce0:	02800c00 	addeq	r0, r0, #0, 24
20007ce4:	00000060 	andeq	r0, r0, r0, rrx
20007ce8:	00000000 	andeq	r0, r0, r0
20007cec:	03ff0000 	mvnseq	r0, #0
20007cf0:	03000800 	movweq	r0, #2048	; 0x800
20007cf4:	00000040 	andeq	r0, r0, r0, asr #32
20007cf8:	00000000 	andeq	r0, r0, r0
20007cfc:	03ff0000 	mvnseq	r0, #0
20007d00:	03000800 	movweq	r0, #2048	; 0x800
20007d04:	00000040 	andeq	r0, r0, r0, asr #32
20007d08:	00000000 	andeq	r0, r0, r0
20007d0c:	03ff8000 	mvnseq	r8, #0
20007d10:	03000a00 	movweq	r0, #2560	; 0xa00
20007d14:	00000040 	andeq	r0, r0, r0, asr #32
20007d18:	00000000 	andeq	r0, r0, r0
20007d1c:	01ffb000 	mvnseq	fp, r0
20007d20:	03000c00 	movweq	r0, #3072	; 0xc00
20007d24:	00000040 	andeq	r0, r0, r0, asr #32
20007d28:	00000000 	andeq	r0, r0, r0
20007d2c:	01fff800 	mvnseq	pc, r0, lsl #16
20007d30:	07800c00 	streq	r0, [r0, r0, lsl #24]
20007d34:	00000060 	andeq	r0, r0, r0, rrx
20007d38:	00000000 	andeq	r0, r0, r0
20007d3c:	01fffc00 	mvnseq	pc, r0, lsl #24
20007d40:	04001800 	streq	r1, [r0], #-2048	; 0xfffff800
20007d44:	00c00058 	sbceq	r0, r0, r8, asr r0
20007d48:	00000000 	andeq	r0, r0, r0
20007d4c:	00fffc00 	rscseq	pc, pc, r0, lsl #24
20007d50:	06001400 	streq	r1, [r0], -r0, lsl #8
20007d54:	00c000c0 	sbceq	r0, r0, r0, asr #1
20007d58:	00000000 	andeq	r0, r0, r0
20007d5c:	007ffc00 	rsbseq	pc, pc, r0, lsl #24
20007d60:	45001000 	strmi	r1, [r0, #-0]
20007d64:	008000a0 	addeq	r0, r0, r0, lsr #1
20007d68:	00000000 	andeq	r0, r0, r0
20007d6c:	007ffe00 	rsbseq	pc, pc, r0, lsl #28
20007d70:	80001000 	andhi	r1, r0, r0
20007d74:	008000c1 	addeq	r0, r0, r1, asr #1
20007d78:	00000000 	andeq	r0, r0, r0
20007d7c:	003ffe00 	eorseq	pc, pc, r0, lsl #28
20007d80:	00001000 	andeq	r1, r0, r0
20007d84:	00a000f0 	strdeq	r0, [r0], r0	; <UNPREDICTABLE>
20007d88:	00000000 	andeq	r0, r0, r0
20007d8c:	003fff00 	eorseq	pc, pc, r0, lsl #30
20007d90:	00001000 	andeq	r1, r0, r0
20007d94:	00c000e0 	sbceq	r0, r0, r0, ror #1
20007d98:	00000000 	andeq	r0, r0, r0
20007d9c:	001fff80 	andseq	pc, pc, r0, lsl #31
20007da0:	02001800 	andeq	r1, r0, #0, 16
20007da4:	00c000c0 	sbceq	r0, r0, r0, asr #1
20007da8:	00000000 	andeq	r0, r0, r0
20007dac:	0019fffe 			; <UNDEFINED> instruction: 0x0019fffe
20007db0:	02001400 	andeq	r1, r0, #0, 8
20007db4:	00803000 	addeq	r3, r0, r0
20007db8:	00000000 	andeq	r0, r0, r0
20007dbc:	0018ffff 			; <UNDEFINED> instruction: 0x0018ffff
20007dc0:	05033f00 	streq	r3, [r3, #-3840]	; 0xfffff100
20007dc4:	01000000 	mrseq	r0, (UNDEF: 0)
20007dc8:	c0000000 	andgt	r0, r0, r0
20007dcc:	0008ffff 	strdeq	pc, [r8], -pc	; <UNPREDICTABLE>
20007dd0:	00c0e400 	sbceq	lr, r0, r0, lsl #8
20007dd4:	01000004 	tsteq	r0, r4
20007dd8:	c0000000 	andgt	r0, r0, r0
20007ddc:	00007fff 	strdeq	r7, [r0], -pc	; <UNPREDICTABLE>
20007de0:	00002000 	andeq	r2, r0, r0
20007de4:	01000008 	tsteq	r0, r8
20007de8:	e0000000 	and	r0, r0, r0
20007dec:	00007fff 	strdeq	r7, [r0], -pc	; <UNPREDICTABLE>
20007df0:	00001000 	andeq	r1, r0, r0
20007df4:	01000006 	tsteq	r0, r6
20007df8:	e0000000 	and	r0, r0, r0
20007dfc:	00003fff 	strdeq	r3, [r0], -pc	; <UNPREDICTABLE>
20007e00:	80000000 	andhi	r0, r0, r0
20007e04:	01800001 	orreq	r0, r0, r1
20007e08:	f0000000 			; <UNDEFINED> instruction: 0xf0000000
20007e0c:	00003fff 	strdeq	r3, [r0], -pc	; <UNPREDICTABLE>
20007e10:	00400000 	subeq	r0, r0, r0
20007e14:	01400000 	mrseq	r0, (UNDEF: 64)
20007e18:	f0000000 			; <UNDEFINED> instruction: 0xf0000000
20007e1c:	00001fff 	strdeq	r1, [r0], -pc	; <UNPREDICTABLE>
20007e20:	03800000 	orreq	r0, r0, #0
20007e24:	01300000 	teqeq	r0, r0
20007e28:	f8000000 			; <UNDEFINED> instruction: 0xf8000000
20007e2c:	00001bff 	strdeq	r1, [r0], -pc	; <UNPREDICTABLE>
20007e30:	10e00000 	rscne	r0, r0, r0
20007e34:	03000000 	movweq	r0, #0
20007e38:	fc000000 	stc2	0, cr0, [r0], {-0}
20007e3c:	000001ff 	strdeq	r0, [r0], -pc	; <UNPREDICTABLE>
20007e40:	0f800000 	svceq	0x00800000
20007e44:	03900000 	orrseq	r0, r0, #0
20007e48:	fe000000 	cdp2	0, 0, cr0, cr0, cr0, {0}
20007e4c:	000001ff 	strdeq	r0, [r0], -pc	; <UNPREDICTABLE>
20007e50:	00000000 	andeq	r0, r0, r0
20007e54:	03e00000 	mvneq	r0, #0
20007e58:	fe000000 	cdp2	0, 0, cr0, cr0, cr0, {0}
20007e5c:	000000ff 	strdeq	r0, [r0], -pc	; <UNPREDICTABLE>
20007e60:	00000000 	andeq	r0, r0, r0
20007e64:	03f40000 	mvnseq	r0, #0
20007e68:	ff000000 			; <UNDEFINED> instruction: 0xff000000
20007e6c:	000000ff 	strdeq	r0, [r0], -pc	; <UNPREDICTABLE>
20007e70:	00002000 	andeq	r2, r0, r0
20007e74:	01f80000 	mvnseq	r0, r0
20007e78:	ff000000 			; <UNDEFINED> instruction: 0xff000000
20007e7c:	0000007f 	andeq	r0, r0, pc, ror r0
20007e80:	0010c000 	andseq	ip, r0, r0
20007e84:	03f80000 	mvnseq	r0, #0
20007e88:	ff800000 			; <UNDEFINED> instruction: 0xff800000
20007e8c:	0000003f 	andeq	r0, r0, pc, lsr r0
20007e90:	000f0000 	andeq	r0, pc, r0
20007e94:	03e000e0 	mvneq	r0, #224	; 0xe0
20007e98:	ffc00000 			; <UNDEFINED> instruction: 0xffc00000
20007e9c:	0000001f 	andeq	r0, r0, pc, lsl r0
20007ea0:	00026000 	andeq	r6, r2, r0
20007ea4:	035001f0 	cmpeq	r0, #240, 2	; 0x3c
20007ea8:	ffe00000 			; <UNDEFINED> instruction: 0xffe00000
20007eac:	0000001f 	andeq	r0, r0, pc, lsl r0
20007eb0:	00118000 	andseq	r8, r1, r0
20007eb4:	03ec01f0 	mvneq	r0, #240, 2	; 0x3c
20007eb8:	fff80000 			; <UNDEFINED> instruction: 0xfff80000
20007ebc:	0000000f 	andeq	r0, r0, pc
20007ec0:	200e0000 	andcs	r0, lr, r0
20007ec4:	00a022f0 	strdeq	r2, [r0], r0	; <UNPREDICTABLE>
20007ec8:	fffe0000 			; <UNDEFINED> instruction: 0xfffe0000
20007ecc:	00000007 	andeq	r0, r0, r7
20007ed0:	18000000 	stmdane	r0, {}	; <UNPREDICTABLE>
20007ed4:	03c0c170 	biceq	ip, r0, #112, 2
20007ed8:	ffff0000 			; <UNDEFINED> instruction: 0xffff0000
20007edc:	00000003 	andeq	r0, r0, r3
20007ee0:	e4000000 	str	r0, [r0], #-0
20007ee4:	03c270f3 	biceq	r7, r2, #243	; 0xf3

20007ee8 <castle_light_bits>:
	...
20007f44:	00000040 	andeq	r0, r0, r0, asr #32
	...
20007f50:	0c003000 	stceq	0, cr3, [r0], {-0}
20007f54:	00000040 	andeq	r0, r0, r0, asr #32
	...
20007f60:	0e007000 	cdpeq	0, 0, cr7, cr0, cr0, {0}
20007f64:	000600c0 	andeq	r0, r6, r0, asr #1
	...
20007f70:	0f007010 	svceq	0x00007010
20007f74:	000601e0 	andeq	r0, r6, r0, ror #3
	...
20007f80:	1f007810 	svcne	0x00007810
20007f84:	000601e0 	andeq	r0, r6, r0, ror #3
	...
20007f90:	3f81f818 	svccc	0x0081f818
20007f94:	001f03e0 	andseq	r0, pc, r0, ror #7
	...
20007fa0:	ffe3f818 			; <UNDEFINED> instruction: 0xffe3f818
20007fa4:	001fc7f1 			; <UNDEFINED> instruction: 0x001fc7f1
	...
20007fb0:	fffffc1c 			; <UNDEFINED> instruction: 0xfffffc1c
20007fb4:	083fffff 	ldmdaeq	pc!, {r0, r1, r2, r3, r4, r5, r6, r7, r8, r9, sl, fp, ip, sp, lr, pc}	; <UNPREDICTABLE>
	...
20007fc0:	fffffe3c 			; <UNDEFINED> instruction: 0xfffffe3c
20007fc4:	187fffff 	ldmdane	pc!, {r0, r1, r2, r3, r4, r5, r6, r7, r8, r9, sl, fp, ip, sp, lr, pc}^	; <UNPREDICTABLE>
	...
20007fd0:	fffffffc 			; <UNDEFINED> instruction: 0xfffffffc
20007fd4:	3c7fffff 	ldclcc	15, cr15, [pc], #-1020	; 20007be0 <castle_gray_bits+0xf8>
	...
20007fe0:	fffffffe 			; <UNDEFINED> instruction: 0xfffffffe
20007fe4:	3fffffff 	svccc	0x00ffffff
20007fe8:	00000000 	andeq	r0, r0, r0
20007fec:	60000000 	andvs	r0, r0, r0
20007ff0:	fffffffe 			; <UNDEFINED> instruction: 0xfffffffe
20007ff4:	7fffffff 	svcvc	0x00ffffff
20007ff8:	00000000 	andeq	r0, r0, r0
20007ffc:	70000000 	andvc	r0, r0, r0
20008000:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
20008004:	7fffffff 	svcvc	0x00ffffff
20008008:	00000000 	andeq	r0, r0, r0
2000800c:	70000000 	andvc	r0, r0, r0
20008010:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
20008014:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
20008018:	00000000 	andeq	r0, r0, r0
2000801c:	f0000000 			; <UNDEFINED> instruction: 0xf0000000
20008020:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
20008024:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
20008028:	00000000 	andeq	r0, r0, r0
2000802c:	f0000000 			; <UNDEFINED> instruction: 0xf0000000
20008030:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
20008034:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
20008038:	00000000 	andeq	r0, r0, r0
2000803c:	f0000000 			; <UNDEFINED> instruction: 0xf0000000
20008040:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
20008044:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
20008048:	00000000 	andeq	r0, r0, r0
2000804c:	f0000000 			; <UNDEFINED> instruction: 0xf0000000
20008050:	fb6fffff 	blx	21c08056 <firstTime.4040+0x1bf8c12>
20008054:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
20008058:	00000000 	andeq	r0, r0, r0
2000805c:	f0000000 			; <UNDEFINED> instruction: 0xf0000000
20008060:	f007ffff 			; <UNDEFINED> instruction: 0xf007ffff
20008064:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
20008068:	00000000 	andeq	r0, r0, r0
2000806c:	f8000000 			; <UNDEFINED> instruction: 0xf8000000
20008070:	f407ffff 			; <UNDEFINED> instruction: 0xf407ffff
20008074:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
20008078:	00000000 	andeq	r0, r0, r0
2000807c:	f8000000 			; <UNDEFINED> instruction: 0xf8000000
20008080:	f007ffff 			; <UNDEFINED> instruction: 0xf007ffff
20008084:	ffffff6d 			; <UNDEFINED> instruction: 0xffffff6d
20008088:	00000000 	andeq	r0, r0, r0
2000808c:	f8000000 			; <UNDEFINED> instruction: 0xf8000000
20008090:	f80fffff 			; <UNDEFINED> instruction: 0xf80fffff
20008094:	fffffe00 			; <UNDEFINED> instruction: 0xfffffe00
20008098:	00000000 	andeq	r0, r0, r0
2000809c:	fc000000 	stc2	0, cr0, [r0], {-0}
200080a0:	f80fedbf 			; <UNDEFINED> instruction: 0xf80fedbf
200080a4:	fffffe00 			; <UNDEFINED> instruction: 0xfffffe00
200080a8:	00000000 	andeq	r0, r0, r0
200080ac:	fc000000 	stc2	0, cr0, [r0], {-0}
200080b0:	f80fc01f 			; <UNDEFINED> instruction: 0xf80fc01f
200080b4:	fffffe80 			; <UNDEFINED> instruction: 0xfffffe80
200080b8:	00000000 	andeq	r0, r0, r0
200080bc:	fc000000 	stc2	0, cr0, [r0], {-0}
200080c0:	f90fc81f 			; <UNDEFINED> instruction: 0xf90fc81f
200080c4:	fffffe80 			; <UNDEFINED> instruction: 0xfffffe80
200080c8:	00000000 	andeq	r0, r0, r0
200080cc:	fc000000 	stc2	0, cr0, [r0], {-0}
200080d0:	f90fd41f 			; <UNDEFINED> instruction: 0xf90fd41f
200080d4:	fffffe00 			; <UNDEFINED> instruction: 0xfffffe00
200080d8:	00000000 	andeq	r0, r0, r0
200080dc:	fc000000 	stc2	0, cr0, [r0], {-0}
200080e0:	f90fe03f 			; <UNDEFINED> instruction: 0xf90fe03f
200080e4:	ffffff01 			; <UNDEFINED> instruction: 0xffffff01
200080e8:	00000000 	andeq	r0, r0, r0
200080ec:	fc000000 	stc2	0, cr0, [r0], {-0}
200080f0:	f88fe03f 			; <UNDEFINED> instruction: 0xf88fe03f
200080f4:	ffffff01 			; <UNDEFINED> instruction: 0xffffff01
200080f8:	00000000 	andeq	r0, r0, r0
200080fc:	fc000000 	stc2	0, cr0, [r0], {-0}
20008100:	f88fe03f 			; <UNDEFINED> instruction: 0xf88fe03f
20008104:	fedbff19 	mrc2	15, 6, pc, cr11, cr9, {0}
20008108:	00000000 	andeq	r0, r0, r0
2000810c:	fc000000 	stc2	0, cr0, [r0], {-0}
20008110:	f80fe03f 			; <UNDEFINED> instruction: 0xf80fe03f
20008114:	fd01ff11 	stc2	15, cr15, [r1, #-68]	; 0xffffffbc
20008118:	00000000 	andeq	r0, r0, r0
2000811c:	fe000000 	cdp2	0, 0, cr0, cr0, cr0, {0}
20008120:	f80fe03f 			; <UNDEFINED> instruction: 0xf80fe03f
20008124:	fd01ff19 	stc2	15, cr15, [r1, #-100]	; 0xffffff9c
20008128:	00000000 	andeq	r0, r0, r0
2000812c:	fe000000 	cdp2	0, 0, cr0, cr0, cr0, {0}
20008130:	f007e03f 			; <UNDEFINED> instruction: 0xf007e03f
20008134:	fc01ff01 	stc2	15, cr15, [r1], {1}
20008138:	00000000 	andeq	r0, r0, r0
2000813c:	fe000000 	cdp2	0, 0, cr0, cr0, cr0, {0}
20008140:	f007c01f 			; <UNDEFINED> instruction: 0xf007c01f
20008144:	fe03ff01 	cdp2	15, 0, cr15, cr3, cr1, {0}
20008148:	00000000 	andeq	r0, r0, r0
2000814c:	ff000000 			; <UNDEFINED> instruction: 0xff000000
20008150:	b007c01f 	andlt	ip, r7, pc, lsl r0
20008154:	fe03fe01 	cdp2	14, 0, cr15, cr3, cr1, {0}
20008158:	00000000 	andeq	r0, r0, r0
2000815c:	ff800000 			; <UNDEFINED> instruction: 0xff800000
20008160:	0007c01f 	andeq	ip, r7, pc, lsl r0
20008164:	fe03fe00 	cdp2	14, 0, cr15, cr3, cr0, {0}
20008168:	00000000 	andeq	r0, r0, r0
2000816c:	ff800000 			; <UNDEFINED> instruction: 0xff800000
20008170:	0007c01f 	andeq	ip, r7, pc, lsl r0
20008174:	fe03fe10 	mcr2	14, 0, pc, cr3, cr0, {0}	; <UNPREDICTABLE>
20008178:	00000000 	andeq	r0, r0, r0
2000817c:	ffc00000 			; <UNDEFINED> instruction: 0xffc00000
20008180:	0007c21f 	andeq	ip, r7, pc, lsl r2
20008184:	fe03fe00 	cdp2	14, 0, cr15, cr3, cr0, {0}
20008188:	00000000 	andeq	r0, r0, r0
2000818c:	ffc00000 			; <UNDEFINED> instruction: 0xffc00000
20008190:	0087c31f 	addeq	ip, r7, pc, lsl r3
20008194:	fe03a400 	cdp2	4, 0, cr10, cr3, cr0, {0}
20008198:	00000000 	andeq	r0, r0, r0
2000819c:	ffe00000 			; <UNDEFINED> instruction: 0xffe00000
200081a0:	00c7c31f 	sbceq	ip, r7, pc, lsl r3
200081a4:	fe030000 	cdp2	0, 0, cr0, cr3, cr0, {0}
200081a8:	00000000 	andeq	r0, r0, r0
200081ac:	ffe60000 			; <UNDEFINED> instruction: 0xffe60000
200081b0:	00c4c01f 	sbceq	ip, r4, pc, lsl r0
200081b4:	fe000000 	cdp2	0, 0, cr0, cr0, cr0, {0}
200081b8:	00000000 	andeq	r0, r0, r0
200081bc:	ffe70000 			; <UNDEFINED> instruction: 0xffe70000
200081c0:	8000001f 	andhi	r0, r0, pc, lsl r0
200081c4:	fc000001 	stc2	0, cr0, [r0], {1}
200081c8:	00000000 	andeq	r0, r0, r0
200081cc:	fff70000 			; <UNDEFINED> instruction: 0xfff70000
200081d0:	8000001f 	andhi	r0, r0, pc, lsl r0
200081d4:	fc000009 	stc2	0, cr0, [r0], {9}
200081d8:	00000000 	andeq	r0, r0, r0
200081dc:	ffff8000 			; <UNDEFINED> instruction: 0xffff8000
200081e0:	8000001f 	andhi	r0, r0, pc, lsl r0
200081e4:	fc200001 	stc2	0, cr0, [r0], #-4
200081e8:	00000000 	andeq	r0, r0, r0
200081ec:	ffff8000 			; <UNDEFINED> instruction: 0xffff8000
200081f0:	0000001f 	andeq	r0, r0, pc, lsl r0
200081f4:	fc300000 	ldc2	0, cr0, [r0], #-0
200081f8:	00000000 	andeq	r0, r0, r0
200081fc:	ffffc000 			; <UNDEFINED> instruction: 0xffffc000
20008200:	0000000f 	andeq	r0, r0, pc
20008204:	fc300000 	ldc2	0, cr0, [r0], #-0
20008208:	00000000 	andeq	r0, r0, r0
2000820c:	ffffc000 			; <UNDEFINED> instruction: 0xffffc000
20008210:	0000000f 	andeq	r0, r0, pc
20008214:	fc000000 	stc2	0, cr0, [r0], {-0}
20008218:	00000000 	andeq	r0, r0, r0
2000821c:	ffffe000 			; <UNDEFINED> instruction: 0xffffe000
20008220:	1000000f 	andne	r0, r0, pc
20008224:	fc000000 	stc2	0, cr0, [r0], {-0}
20008228:	00000000 	andeq	r0, r0, r0
2000822c:	ffffe400 			; <UNDEFINED> instruction: 0xffffe400
20008230:	0800000f 	stmdaeq	r0, {r0, r1, r2, r3}
20008234:	f8080000 			; <UNDEFINED> instruction: 0xf8080000
20008238:	00000000 	andeq	r0, r0, r0
2000823c:	fffffe00 			; <UNDEFINED> instruction: 0xfffffe00
20008240:	0000000f 	andeq	r0, r0, pc
20008244:	f8000000 			; <UNDEFINED> instruction: 0xf8000000
20008248:	00000000 	andeq	r0, r0, r0
2000824c:	fffffe00 			; <UNDEFINED> instruction: 0xfffffe00
20008250:	00000007 	andeq	r0, r0, r7
20008254:	f8020000 			; <UNDEFINED> instruction: 0xf8020000
20008258:	00000000 	andeq	r0, r0, r0
2000825c:	ffffff00 			; <UNDEFINED> instruction: 0xffffff00
20008260:	00000007 	andeq	r0, r0, r7
20008264:	f8020000 			; <UNDEFINED> instruction: 0xf8020000
20008268:	00000000 	andeq	r0, r0, r0
2000826c:	ffffff00 			; <UNDEFINED> instruction: 0xffffff00
20008270:	00100007 	andseq	r0, r0, r7
20008274:	f8040000 			; <UNDEFINED> instruction: 0xf8040000
20008278:	00000000 	andeq	r0, r0, r0
2000827c:	ffffff80 			; <UNDEFINED> instruction: 0xffffff80
20008280:	00080007 	andeq	r0, r8, r7
20008284:	f80001c0 			; <UNDEFINED> instruction: 0xf80001c0
20008288:	00000000 	andeq	r0, r0, r0
2000828c:	ffffffc0 			; <UNDEFINED> instruction: 0xffffffc0
20008290:	00000007 	andeq	r0, r0, r7
20008294:	f8080300 			; <UNDEFINED> instruction: 0xf8080300
20008298:	00000000 	andeq	r0, r0, r0
2000829c:	ffffffe0 			; <UNDEFINED> instruction: 0xffffffe0
200082a0:	00200007 	eoreq	r0, r0, r7
200082a4:	f8080200 			; <UNDEFINED> instruction: 0xf8080200
200082a8:	00000000 	andeq	r0, r0, r0
200082ac:	ffffffe0 			; <UNDEFINED> instruction: 0xffffffe0
200082b0:	00000007 	andeq	r0, r0, r7
200082b4:	f8000200 			; <UNDEFINED> instruction: 0xf8000200
200082b8:	00000000 	andeq	r0, r0, r0
200082bc:	fffffff0 			; <UNDEFINED> instruction: 0xfffffff0
200082c0:	00000007 	andeq	r0, r0, r7
200082c4:	f8000100 			; <UNDEFINED> instruction: 0xf8000100
200082c8:	00000000 	andeq	r0, r0, r0
200082cc:	fffffff8 			; <UNDEFINED> instruction: 0xfffffff8
200082d0:	01000007 	tsteq	r0, r7
200082d4:	f8100280 			; <UNDEFINED> instruction: 0xf8100280
200082d8:	00000000 	andeq	r0, r0, r0
200082dc:	fffffffc 			; <UNDEFINED> instruction: 0xfffffffc
200082e0:	02000007 	andeq	r0, r0, #7
200082e4:	f8000300 			; <UNDEFINED> instruction: 0xf8000300

200082e8 <title_light_bits>:
	...
20008304:	00000400 	andeq	r0, r0, r0, lsl #8
20008308:	30000000 	andcc	r0, r0, r0
2000830c:	f80f9e06 			; <UNDEFINED> instruction: 0xf80f9e06
20008310:	06300000 	ldrteq	r0, [r0], -r0
20008314:	00cb8cba 	strheq	r8, [fp], #202	; 0xca
20008318:	ba033000 	blt	200d4320 <firstTime.4040+0xc4edc>
2000831c:	0000eb4f 	andeq	lr, r0, pc, asr #22
20008320:	439ef3f0 	orrsmi	pc, lr, #240, 6	; 0xc0000003
20008324:	f000003a 			; <UNDEFINED> instruction: 0xf000003a
20008328:	5a478e9b 	bpl	211ebd9c <firstTime.4040+0x11dc958>
2000832c:	9b300000 	blls	20c08334 <firstTime.4040+0xbf8ef0>
20008330:	019bcd36 	orrseq	ip, fp, r6, lsr sp
20008334:	66db3000 	ldrbvs	r3, [fp], r0
20008338:	000319d9 	ldrdeq	r1, [r3], -r9
2000833c:	19667330 	stmdbne	r6!, {r4, r5, r8, r9, ip, sp, lr}^
20008340:	30000310 	andcc	r0, r0, r0, lsl r3
20008344:	00000001 	andeq	r0, r0, r1
20008348:	80000000 	andhi	r0, r0, r0
2000834c:	001d3e7b 	andseq	r3, sp, fp, ror lr
20008350:	0ac00000 	beq	1f008358 <startup-0xff7ca8>
20008354:	00000528 	andeq	r0, r0, r8, lsr #10
20008358:	ec3a4000 	ldc	0, cr4, [sl], #-0
2000835c:	0000000d 	andeq	r0, r0, sp
20008360:	05240bc0 	streq	r0, [r4, #-3008]!	; 0xfffff440
20008364:	00f00000 	rscseq	r0, r0, r0
20008368:	001c0000 	andseq	r0, ip, r0
2000836c:	03ebb000 	mvneq	fp, #0
20008370:	00000000 	andeq	r0, r0, r0
20008374:	0c032330 	stceq	3, cr2, [r3], {48}	; 0x30
20008378:	300123e4 	andcc	r2, r1, r4, ror #7
2000837c:	940c1b2a 	strls	r1, [ip], #-2858	; 0xfffff4d6
20008380:	ea300120 	b	20c08808 <firstTime.4040+0xbf93c4>
20008384:	ec860c3d 	stc	12, cr0, [r6], {61}	; 0x3d
20008388:	06ea3001 	strbteq	r3, [sl], r1
2000838c:	01e69648 	mvneq	r9, r8, asr #12
20008390:	4b9e6b30 	blmi	1e7a3058 <startup-0x185cfa8>
20008394:	30012696 	mulcc	r1, r6, r6
20008398:	92bbb06b 	adcsls	fp, fp, #107	; 0x6b
2000839c:	69f00126 	ldmibvs	r0!, {r1, r2, r5, r8}^
200083a0:	2691b832 			; <UNDEFINED> instruction: 0x2691b832
200083a4:	1e687001 	cdpne	0, 6, cr7, cr8, cr1, {0}
200083a8:	010e9110 	tsteq	lr, r0, lsl r1
	...

200083bc <title_gray_bits>:
	...
200083c4:	40000000 	andmi	r0, r0, r0
200083c8:	0f840000 	svceq	0x00840000
200083cc:	00b0c3fe 	ldrshteq	ip, [r0], lr
200083d0:	fffff800 	vcmla.f32	d31, d15, d0[0], #270
200083d4:	001f8f1f 	andseq	r8, pc, pc, lsl pc	; <UNPREDICTABLE>
200083d8:	fffffbf8 			; <UNDEFINED> instruction: 0xfffffbf8
200083dc:	c8001fff 	stmdagt	r0, {r0, r1, r2, r3, r4, r5, r6, r7, r8, r9, sl, fp, ip}
200083e0:	07f061f9 			; <UNDEFINED> instruction: 0x07f061f9
200083e4:	f1cc001f 			; <UNDEFINED> instruction: 0xf1cc001f
200083e8:	be347305 	cdplt	3, 3, cr7, cr4, cr5, {0}
200083ec:	05f0ce00 	ldrbeq	ip, [r0, #3584]!	; 0xe00
200083f0:	007e1430 	rsbseq	r1, lr, r0, lsr r4
200083f4:	2041080f 	subcs	r0, r1, pc, lsl #16
200083f8:	0e003e01 	cdpeq	14, 0, cr3, cr0, cr1, {0}
200083fc:	01384060 	teqeq	r8, r0, rrx
20008400:	600c001e 	andvs	r0, ip, lr, lsl r0
20008404:	1c4030c0 	mcrrne	0, 12, r3, r0, cr0
20008408:	10208c00 	eorne	r8, r0, r0, lsl #24
2000840c:	0038c024 	eorseq	ip, r8, r4, lsr #32
20008410:	0411088c 	ldreq	r0, [r1], #-2188	; 0xfffff774
20008414:	c800f8ce 	stmdagt	r0, {r1, r2, r3, r6, r7, fp, ip, sp, lr, pc}
20008418:	ffe6990c 			; <UNDEFINED> instruction: 0xffe6990c
2000841c:	7cfa0178 	ldfvce	f0, [sl], #480	; 0x1e0
20008420:	3fe0c184 	svccc	0x00e0c184
20008424:	013ff400 	teqeq	pc, r0, lsl #8	; <UNPREDICTABLE>
20008428:	001fc0c7 	andseq	ip, pc, r7, asr #1
2000842c:	03c03ff0 	biceq	r3, r0, #240, 30	; 0x3c0
20008430:	fc0007e0 	stc2	7, cr0, [r0], {224}	; 0xe0
20008434:	e003803f 	and	r8, r3, pc, lsr r0
20008438:	7f0c009f 	svcvc	0x000c009f
2000843c:	ffc1fbe4 			; <UNDEFINED> instruction: 0xffc1fbe4
20008440:	fc140c03 	ldc2	12, cr0, [r4], {3}
20008444:	03ffc7ff 	mvnseq	ip, #66846720	; 0x3fc0000
20008448:	f3fc1c0c 	vdup.32	d17, d12[1]
2000844c:	0e02dc1b 	mcreq	12, 0, sp, cr2, cr11, {0}
20008450:	63f3e490 	mvnsvs	lr, #144, 8	; 0x90000000
20008454:	018e0218 	orreq	r0, lr, r8, lsl r2
20008458:	1251e382 	subsne	lr, r1, #134217730	; 0x8000002
2000845c:	88018e02 	stmdahi	r1, {r1, r9, sl, fp, pc}
20008460:	020061a7 	andeq	r6, r0, #-1073741783	; 0xc0000029
20008464:	2460008e 	strbtcs	r0, [r0], #-142	; 0xffffff72
20008468:	8e021041 	cdphi	0, 0, cr1, cr2, cr1, {2}
2000846c:	41000300 	mrsmi	r0, LR_irq
20008470:	000e0290 	muleq	lr, r0, r2
20008474:	9048008d 	subls	r0, r8, sp, lsl #1
20008478:	81040c02 	tsthi	r4, r2, lsl #24
2000847c:	02a04c87 	adceq	r4, r0, #34560	; 0x8700
20008480:	cffffffc 	svcgt	0x00fffffc
20008484:	8203e2fc 	andhi	lr, r3, #252, 4	; 0xc000000f
20008488:	e3f81c07 	mvns	r1, #1792	; 0x700
2000848c:	000001ff 	strdeq	r0, [r0], -pc	; <UNPREDICTABLE>

20008490 <title_black_bits>:
	...
200084b8:	08000000 	stmdaeq	r0, {}	; <UNPREDICTABLE>
200084bc:	01000040 	tsteq	r0, r0, asr #32
200084c0:	400c0000 	andmi	r0, ip, r0
200084c4:	00010080 	andeq	r0, r1, r0, lsl #1
200084c8:	9c200400 	cfstrsls	mvf0, [r0], #-0
200084cc:	000001c4 	andeq	r0, r0, r4, asr #3
200084d0:	a4803104 	strge	r3, [r0], #260	; 0x104
200084d4:	04c00001 	strbeq	r0, [r0], #1
200084d8:	02240209 	eoreq	r0, r4, #-1879048192	; 0x90000000
200084dc:	89044000 	stmdbhi	r4, {lr}
200084e0:	00042602 	andeq	r2, r4, r2, lsl #12
200084e4:	e2888440 	add	r8, r8, #64, 8	; 0x40000000
200084e8:	00000421 	andeq	r0, r0, r1, lsr #8
200084ec:	001966f2 			; <UNDEFINED> instruction: 0x001966f2
200084f0:	03000007 	movweq	r0, #7
200084f4:	00020000 	andeq	r0, r2, r0
200084f8:	f4000000 	vst4.8	{d0-d3}, [r0], r0
200084fc:	00003a10 	andeq	r3, r0, r0, lsl sl
20008500:	10058000 	andne	r8, r5, r0
20008504:	00000012 	andeq	r0, r0, r2, lsl r0
20008508:	1ad87400 	bne	1f625510 <startup-0x9daaf0>
2000850c:	80000000 	andhi	r0, r0, r0
20008510:	0022041b 	eoreq	r0, r2, fp, lsl r4
20008514:	00004000 	andeq	r4, r0, r0
20008518:	00003800 	andeq	r3, r0, r0, lsl #16
2000851c:	0000c0c0 	andeq	ip, r0, r0, asr #1
20008520:	c0000000 	andgt	r0, r0, r0
20008524:	08000045 	stmdaeq	r0, {r0, r2, r6}
20008528:	144000c7 	strbne	r0, [r0], #-199	; 0xffffff39
2000852c:	01281040 			; <UNDEFINED> instruction: 0x01281040
20008530:	71144000 	tstvc	r4, r0
20008534:	00190810 	andseq	r0, r9, r0, lsl r8
20008538:	90019440 	andls	r9, r1, r0, asr #8
2000853c:	4000c928 	andmi	ip, r0, r8, lsr #18
20008540:	2c444c94 	mcrrcs	12, 9, r4, r4, cr4
20008544:	96000049 	strls	r0, [r0], -r9, asr #32
20008548:	49264740 	stmdbmi	r6!, {r6, r8, r9, sl, lr}
2000854c:	60938000 	addsvs	r8, r3, r0
20008550:	00512268 	subseq	r2, r1, r8, ror #4
20008554:	30000000 	andcc	r0, r0, r0
20008558:	00001d03 	andeq	r1, r0, r3, lsl #26
	...

20008564 <bg_bits>:
	...
20008574:	fff80000 			; <UNDEFINED> instruction: 0xfff80000
20008578:	0000001f 	andeq	r0, r0, pc, lsl r0
	...
20008584:	fffe0000 			; <UNDEFINED> instruction: 0xfffe0000
20008588:	000003ff 	strdeq	r0, [r0], -pc	; <UNPREDICTABLE>
	...
20008594:	ffff0000 			; <UNDEFINED> instruction: 0xffff0000
20008598:	00001fff 	strdeq	r1, [r0], -pc	; <UNPREDICTABLE>
	...
200085a4:	ffff8000 			; <UNDEFINED> instruction: 0xffff8000
200085a8:	0000ffff 	strdeq	pc, [r0], -pc	; <UNPREDICTABLE>
	...
200085b4:	ffff8000 			; <UNDEFINED> instruction: 0xffff8000
200085b8:	0007ffff 	strdeq	pc, [r7], -pc	; <UNPREDICTABLE>
	...
200085c4:	ffffc000 			; <UNDEFINED> instruction: 0xffffc000
200085c8:	003fffff 	ldrshteq	pc, [pc], -pc	; <UNPREDICTABLE>
	...
200085d4:	ffffe000 			; <UNDEFINED> instruction: 0xffffe000
200085d8:	01ffffff 	ldrsheq	pc, [pc, #255]	; 200086df <bg_bits+0x17b>	; <UNPREDICTABLE>
200085dc:	0001f000 	andeq	pc, r1, r0
200085e0:	00000000 	andeq	r0, r0, r0
200085e4:	007fe000 	rsbseq	lr, pc, r0
200085e8:	0ffffffe 	svceq	0x00fffffe
200085ec:	0003f800 	andeq	pc, r3, r0, lsl #16
200085f0:	00000000 	andeq	r0, r0, r0
200085f4:	003fe000 	eorseq	lr, pc, r0
200085f8:	7fffffc0 	svcvc	0x00ffffc0
200085fc:	0003f800 	andeq	pc, r3, r0, lsl #16
20008600:	001f8000 	andseq	r8, pc, r0
20008604:	001fe000 	andseq	lr, pc, r0
20008608:	fffffe00 			; <UNDEFINED> instruction: 0xfffffe00
2000860c:	0003f801 	andeq	pc, r3, r1, lsl #16
20008610:	003fc000 	eorseq	ip, pc, r0
20008614:	003fe000 	eorseq	lr, pc, r0
20008618:	fffff000 			; <UNDEFINED> instruction: 0xfffff000
2000861c:	3f83f807 	svccc	0x0083f807
20008620:	003fe000 	eorseq	lr, pc, r0
20008624:	01ffe000 	mvnseq	lr, r0
20008628:	ffff8000 			; <UNDEFINED> instruction: 0xffff8000
2000862c:	7fc3f80f 	svcvc	0x00c3f80f
20008630:	003fe7f8 	ldrshteq	lr, [pc], -r8
20008634:	07ffe000 	ldrbeq	lr, [pc, r0]!
20008638:	fffc0000 			; <UNDEFINED> instruction: 0xfffc0000
2000863c:	7fe1f01f 	svcvc	0x00e1f01f
20008640:	003ffffc 	ldrshteq	pc, [pc], -ip	; <UNPREDICTABLE>
20008644:	3fffc000 	svccc	0x00ffc000
20008648:	ffe00000 			; <UNDEFINED> instruction: 0xffe00000
2000864c:	7ff0003f 	svcvc	0x00f0003f
20008650:	007ffffc 	ldrshteq	pc, [pc], #-252	; <UNPREDICTABLE>
20008654:	ffffc000 			; <UNDEFINED> instruction: 0xffffc000
20008658:	ff000000 			; <UNDEFINED> instruction: 0xff000000
2000865c:	7ff8007f 	svcvc	0x00f8007f
20008660:	3ffffffc 	svccc	0x00fffffc
20008664:	ffffc000 			; <UNDEFINED> instruction: 0xffffc000
20008668:	f8000003 			; <UNDEFINED> instruction: 0xf8000003
2000866c:	7ffc00ff 	svcvc	0x00fc00ff
20008670:	7ffffffc 	svcvc	0x00fffffc
20008674:	ffff8000 			; <UNDEFINED> instruction: 0xffff8000
20008678:	e000000f 	and	r0, r0, pc
2000867c:	7ffe01ff 	svcvc	0x00fe01ff
20008680:	fffffffc 			; <UNDEFINED> instruction: 0xfffffffc
20008684:	fffc0000 			; <UNDEFINED> instruction: 0xfffc0000
20008688:	8000001f 	andhi	r0, r0, pc, lsl r0
2000868c:	7fff01ff 	svcvc	0x00ff01ff
20008690:	fffffffc 			; <UNDEFINED> instruction: 0xfffffffc
20008694:	ffe00000 			; <UNDEFINED> instruction: 0xffe00000
20008698:	0000007f 	andeq	r0, r0, pc, ror r0
2000869c:	7fff83ff 	svcvc	0x00ff83ff
200086a0:	fffffff8 			; <UNDEFINED> instruction: 0xfffffff8
200086a4:	ff800000 			; <UNDEFINED> instruction: 0xff800000
200086a8:	000000ff 	strdeq	r0, [r0], -pc	; <UNPREDICTABLE>
200086ac:	7fffc3fe 	svcvc	0x00ffc3fe
200086b0:	ffffffe0 			; <UNDEFINED> instruction: 0xffffffe0
200086b4:	fc7ffff0 	ldc2l	15, cr15, [pc], #-960	; 200082fc <title_light_bits+0x14>
200086b8:	07c001ff 			; <UNDEFINED> instruction: 0x07c001ff
200086bc:	7fffe7fc 	svcvc	0x00ffe7fc
200086c0:	ffffffc0 			; <UNDEFINED> instruction: 0xffffffc0
200086c4:	f0fffffe 			; <UNDEFINED> instruction: 0xf0fffffe
200086c8:	0fe007ff 	svceq	0x00e007ff
200086cc:	7ffff7fc 	svcvc	0x00fff7fc
200086d0:	ffffff80 			; <UNDEFINED> instruction: 0xffffff80
200086d4:	c0ffffff 	ldrshtgt	pc, [pc], #255	; <UNPREDICTABLE>
200086d8:	0fe00fff 	svceq	0x00e00fff
200086dc:	7ffffff8 	svcvc	0x00fffff8
200086e0:	ffffff00 			; <UNDEFINED> instruction: 0xffffff00
200086e4:	01ffffff 	ldrsheq	pc, [pc, #255]	; 200087eb <bg_bits+0x287>	; <UNPREDICTABLE>
200086e8:	0fe01fff 	svceq	0x00e01fff
200086ec:	7ffffff8 	svcvc	0x00fffff8
200086f0:	7ffffc00 	svcvc	0x00fffc00
200086f4:	01ffffff 	ldrsheq	pc, [pc, #255]	; 200087fb <bg_bits+0x297>	; <UNPREDICTABLE>
200086f8:	0fe03ffe 	svceq	0x00e03ffe
200086fc:	3fdffff0 	svccc	0x00dffff0
20008700:	3ffffe00 	svccc	0x00fffe00
20008704:	01ffffff 	ldrsheq	pc, [pc, #255]	; 2000880b <bg_bits+0x2a7>	; <UNPREDICTABLE>
20008708:	0fe03ff8 	svceq	0x00e03ff8
2000870c:	3fe7fff0 	svccc	0x00e7fff0
20008710:	07fffe00 	ldrbeq	pc, [pc, r0, lsl #28]!	; <UNPREDICTABLE>
20008714:	03ffffff 	mvnseq	pc, #1020	; 0x3fc
20008718:	07c07ff0 			; <UNDEFINED> instruction: 0x07c07ff0
2000871c:	1fe7fff0 	svcne	0x00e7fff0
20008720:	0ffffe00 	svceq	0x00fffe00
20008724:	03fc00ff 	mvnseq	r0, #255	; 0xff
20008728:	0000ffe0 	andeq	pc, r0, r0, ror #31
2000872c:	1ff3ffe0 	svcne	0x00f3ffe0
20008730:	1ffffe00 	svcne	0x00fffe00
20008734:	03fc001f 	mvnseq	r0, #31
20008738:	0001ff80 	andeq	pc, r1, r0, lsl #31
2000873c:	1ff9ffe0 	svcne	0x00f9ffe0
20008740:	3ffffe00 	svccc	0x00fffe00
20008744:	03fc0007 	mvnseq	r0, #7
20008748:	0001ff80 	andeq	pc, r1, r0, lsl #31
2000874c:	0ffcffe0 	svceq	0x00fcffe0
20008750:	3ffdfe00 	svccc	0x00fdfe00
20008754:	07f80007 	ldrbeq	r0, [r8, r7]!
20008758:	0003ff00 	andeq	pc, r3, r0, lsl #30
2000875c:	0ffe7ff0 	svceq	0x00fe7ff0
20008760:	3ffcfe00 	svccc	0x00fcfe00
20008764:	07f80003 	ldrbeq	r0, [r8, r3]!
20008768:	0007fe00 	andeq	pc, r7, r0, lsl #28
2000876c:	07fe7ff8 			; <UNDEFINED> instruction: 0x07fe7ff8
20008770:	3ff8fe00 	svccc	0x00f8fe00
20008774:	0ff80003 	svceq	0x00f80003
20008778:	0007fc00 	andeq	pc, r7, r0, lsl #24
2000877c:	03fffffc 	mvnseq	pc, #252, 30	; 0x3f0
20008780:	3ff87c00 	svccc	0x00f87c00
20008784:	0ff80003 	svceq	0x00f80003
20008788:	0007fc00 	andeq	pc, r7, r0, lsl #24
2000878c:	01fffffe 	ldrsheq	pc, [pc, #254]	; 20008892 <bg_bits+0x32e>	; <UNPREDICTABLE>
20008790:	1ff00000 	svcne	0x00f00000	; IMB
20008794:	0ff00007 	svceq	0x00f00007
20008798:	000ff800 	andeq	pc, pc, r0, lsl #16
2000879c:	01ffffff 	ldrsheq	pc, [pc, #255]	; 200088a3 <bg_bits+0x33f>	; <UNPREDICTABLE>
200087a0:	07f0003e 			; <UNDEFINED> instruction: 0x07f0003e
200087a4:	0ff00007 	svceq	0x00f00007
200087a8:	800ff000 	andhi	pc, pc, r0
200087ac:	00ffffff 	ldrshteq	pc, [pc], #255	; <UNPREDICTABLE>
200087b0:	03e0007f 	mvneq	r0, #127	; 0x7f
200087b4:	0fe00007 	svceq	0x00e00007
200087b8:	c00ff000 	andgt	pc, pc, r0
200087bc:	007fffff 	ldrshteq	pc, [pc], #-255	; <UNPREDICTABLE>
200087c0:	0000007f 	andeq	r0, r0, pc, ror r0
200087c4:	0fe00007 	svceq	0x00e00007
200087c8:	e00ff000 	and	pc, pc, r0
200087cc:	007ffeff 	ldrshteq	pc, [pc], #-239	; <UNPREDICTABLE>
200087d0:	0000007f 	andeq	r0, r0, pc, ror r0
200087d4:	0fe00007 	svceq	0x00e00007
200087d8:	f00ff000 			; <UNDEFINED> instruction: 0xf00ff000
200087dc:	003ffe7f 	eorseq	pc, pc, pc, ror lr	; <UNPREDICTABLE>
200087e0:	0000007f 	andeq	r0, r0, pc, ror r0
200087e4:	0fe00007 	svceq	0x00e00007
200087e8:	f80ff000 			; <UNDEFINED> instruction: 0xf80ff000
200087ec:	001ffc3f 	andseq	pc, pc, pc, lsr ip	; <UNPREDICTABLE>
200087f0:	0000007f 	andeq	r0, r0, pc, ror r0
200087f4:	1fe0000f 	svcne	0x00e0000f
200087f8:	fc0ff000 	stc2	0, cr15, [pc], {-0}
200087fc:	000ff81f 	andeq	pc, pc, pc, lsl r8	; <UNPREDICTABLE>
20008800:	0000003e 	andeq	r0, r0, lr, lsr r0
20008804:	1fe0000f 	svcne	0x00e0000f
20008808:	fc07f000 	stc2	0, cr15, [r7], {-0}
2000880c:	0007f00f 	andeq	pc, r7, pc
20008810:	00000000 	andeq	r0, r0, r0
20008814:	1fe0000f 	svcne	0x00e0000f
20008818:	fc07f000 	stc2	0, cr15, [r7], {-0}
2000881c:	00000007 	andeq	r0, r0, r7
20008820:	00000000 	andeq	r0, r0, r0
20008824:	1fe0000f 	svcne	0x00e0000f
20008828:	fc07f800 	stc2	8, cr15, [r7], {-0}
2000882c:	00000003 	andeq	r0, r0, r3
20008830:	000ff800 	andeq	pc, pc, r0, lsl #16
20008834:	1fc0001f 	svcne	0x00c0001f
20008838:	fc07fc00 	stc2	12, cr15, [r7], {-0}
2000883c:	00000001 	andeq	r0, r0, r1
20008840:	001ffc00 	andseq	pc, pc, r0, lsl #24
20008844:	1fc0003f 	svcne	0x00c0003f
20008848:	fc07ff80 	stc2	15, cr15, [r7], {128}	; 0x80
2000884c:	00000001 	andeq	r0, r0, r1
20008850:	003fff00 	eorseq	pc, pc, r0, lsl #30
20008854:	3fc0003f 	svccc	0x00c0003f
20008858:	fc07fffc 	stc2	15, cr15, [r7], {252}	; 0xfc
2000885c:	00000001 	andeq	r0, r0, r1
20008860:	007fff80 	rsbseq	pc, pc, r0, lsl #31
20008864:	ffc0003f 			; <UNDEFINED> instruction: 0xffc0003f
20008868:	fc03ffff 	stc2	15, cr15, [r3], {255}	; 0xff
2000886c:	00000001 	andeq	r0, r0, r1
20008870:	00ffffe0 	rscseq	pc, pc, r0, ror #31
20008874:	ffc0007f 			; <UNDEFINED> instruction: 0xffc0007f
20008878:	fc01ffff 	stc2	15, cr15, [r1], {255}	; 0xff
2000887c:	00000007 	andeq	r0, r0, r7
20008880:	03fffff0 	mvnseq	pc, #240, 30	; 0x3c0
20008884:	ffc0007f 			; <UNDEFINED> instruction: 0xffc0007f
20008888:	fc00ffff 	stc2	15, cr15, [r0], {255}	; 0xff
2000888c:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
20008890:	07fffff8 			; <UNDEFINED> instruction: 0x07fffff8
20008894:	ffc0007f 			; <UNDEFINED> instruction: 0xffc0007f
20008898:	fc007fff 	stc2	15, cr7, [r0], {255}	; 0xff
2000889c:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
200088a0:	07ff7ffd 			; <UNDEFINED> instruction: 0x07ff7ffd
200088a4:	ff80007f 			; <UNDEFINED> instruction: 0xff80007f
200088a8:	fc003fff 	stc2	15, cr3, [r0], {255}	; 0xff
200088ac:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
200088b0:	0ffe3fff 	svceq	0x00fe3fff
200088b4:	ff1f007f 			; <UNDEFINED> instruction: 0xff1f007f
200088b8:	f80007ff 			; <UNDEFINED> instruction: 0xf80007ff
200088bc:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
200088c0:	1ffc3fff 	svcne	0x00fc3fff
200088c4:	fc3f807f 	ldc2	0, cr8, [pc], #-508	; 200086d0 <bg_bits+0x16c>
200088c8:	f800003f 			; <UNDEFINED> instruction: 0xf800003f
200088cc:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
200088d0:	1ff83fff 	svcne	0x00f83fff
200088d4:	003f807f 	eorseq	r8, pc, pc, ror r0	; <UNPREDICTABLE>
200088d8:	f0000000 			; <UNDEFINED> instruction: 0xf0000000
200088dc:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
200088e0:	3ff03fff 	svccc	0x00f03fff
200088e4:	003f807f 	eorseq	r8, pc, pc, ror r0	; <UNPREDICTABLE>
200088e8:	c0000000 	andgt	r0, r0, r0
200088ec:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
200088f0:	7fe03fff 	svcvc	0x00e03fff
200088f4:	003f803f 	eorseq	r8, pc, pc, lsr r0	; <UNPREDICTABLE>
200088f8:	00000000 	andeq	r0, r0, r0
200088fc:	f8000000 			; <UNDEFINED> instruction: 0xf8000000
20008900:	7fc03fff 	svcvc	0x00c03fff
20008904:	003f803f 	eorseq	r8, pc, pc, lsr r0	; <UNPREDICTABLE>
20008908:	fffff000 			; <UNDEFINED> instruction: 0xfffff000
2000890c:	f800000f 			; <UNDEFINED> instruction: 0xf800000f
20008910:	ffc01fff 			; <UNDEFINED> instruction: 0xffc01fff
20008914:	001f003f 	andseq	r0, pc, pc, lsr r0	; <UNPREDICTABLE>
20008918:	fffff800 	vcmla.f32	d31, d15, d0[0], #270
2000891c:	f8007fff 			; <UNDEFINED> instruction: 0xf8007fff
20008920:	ff801fff 			; <UNDEFINED> instruction: 0xff801fff
20008924:	0000003f 	andeq	r0, r0, pc, lsr r0
20008928:	fffff800 	vcmla.f32	d31, d15, d0[0], #270
2000892c:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
20008930:	ff801fff 			; <UNDEFINED> instruction: 0xff801fff
20008934:	0000003f 	andeq	r0, r0, pc, lsr r0
20008938:	fffff800 	vcmla.f32	d31, d15, d0[0], #270
2000893c:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
20008940:	ff001fff 			; <UNDEFINED> instruction: 0xff001fff
20008944:	0000003f 	andeq	r0, r0, pc, lsr r0
20008948:	fffff800 	vcmla.f32	d31, d15, d0[0], #270
2000894c:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
20008950:	fe001fff 	mcr2	15, 0, r1, cr0, cr15, {7}
20008954:	0000003f 	andeq	r0, r0, pc, lsr r0
20008958:	fffff800 	vcmla.f32	d31, d15, d0[0], #270
2000895c:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
20008960:	fe001fff 	mcr2	15, 0, r1, cr0, cr15, {7}

20008964 <current_screen>:
20008964:	00000001 	andeq	r0, r0, r1

20008968 <delay_until_text.4310>:
20008968:	00000082 	andeq	r0, r0, r2, lsl #1

2000896c <long_text.4308>:
2000896c:	00000028 	andeq	r0, r0, r8, lsr #32

20008970 <short_text.4309>:
20008970:	00000014 	andeq	r0, r0, r4, lsl r0

20008974 <last_climb_value.4316>:
20008974:	00000064 	andeq	r0, r0, r4, rrx

20008978 <fire_black_2_bits>:
	...
20008980:	18000000 	stmdane	r0, {}	; <UNPREDICTABLE>

20008984 <fire1_gray_bits>:
20008984:	00000000 	andeq	r0, r0, r0
20008988:	06000804 	streq	r0, [r0], -r4, lsl #16
2000898c:	02494204 	subeq	r4, r9, #4, 4	; 0x40000000

20008990 <fire1_light_bits>:
20008990:	00002000 	andeq	r2, r0, r0
20008994:	48000010 	stmdami	r0, {r4}
20008998:	2c243020 	stccs	0, cr3, [r4], #-128	; 0xffffff80

2000899c <fire2_gray_bits>:
2000899c:	00000000 	andeq	r0, r0, r0
200089a0:	10220000 	eorne	r0, r2, r0
200089a4:	00420444 	subeq	r0, r2, r4, asr #8

200089a8 <fire2_light_bits>:
200089a8:	04200000 	strteq	r0, [r0], #-0
200089ac:	240c0010 	strcs	r0, [ip], #-16
200089b0:	123c6008 	eorsne	r6, ip, #8

200089b4 <fire3_gray_bits>:
200089b4:	00000000 	andeq	r0, r0, r0
200089b8:	24100802 	ldrcs	r0, [r0], #-2050	; 0xfffff7fe
200089bc:	00020260 	andeq	r0, r2, r0, ror #4

200089c0 <fire3_light_bits>:
200089c0:	10200000 	eorne	r0, r0, r0
200089c4:	18040400 	stmdane	r4, {sl}
200089c8:	143c5812 	ldrtne	r5, [ip], #-2066	; 0xfffff7ee

200089cc <fire4_gray_bits>:
200089cc:	08000000 	stmdaeq	r0, {}	; <UNPREDICTABLE>
200089d0:	10320000 	eorsne	r0, r2, r0
200089d4:	02400012 	subeq	r0, r0, #18

200089d8 <fire4_light_bits>:
200089d8:	00001000 	andeq	r1, r0, r0
200089dc:	04082000 	streq	r2, [r8], #-0
200089e0:	24283a0c 	strtcs	r3, [r8], #-2572	; 0xfffff5f4

200089e4 <fire5_gray_bits>:
200089e4:	00000000 	andeq	r0, r0, r0
200089e8:	22001020 	andcs	r1, r0, #32
200089ec:	04044206 	streq	r4, [r4], #-518	; 0xfffffdfa

200089f0 <fire5_light_bits>:
200089f0:	00040000 	andeq	r0, r4, r0
200089f4:	04240800 	strteq	r0, [r4], #-2048	; 0xfffff800
200089f8:	502a1810 	eorpl	r1, sl, r0, lsl r8

200089fc <firstTime.4076>:
200089fc:	00000001 	andeq	r0, r0, r1

20008a00 <bird1_black_bits>:
	...
20008a10:	00010040 	andeq	r0, r1, r0, asr #32
20008a14:	00118060 	andseq	r8, r1, r0, rrx
20008a18:	00118060 	andseq	r8, r1, r0, rrx
20008a1c:	001b80ec 	andseq	r8, fp, ip, ror #1
20008a20:	003f81fc 	ldrshteq	r8, [pc], -ip
20008a24:	007fe1f8 	ldrshteq	lr, [pc], #-24
20008a28:	007ff3f8 	ldrshteq	pc, [pc], #-56	; <UNPREDICTABLE>
20008a2c:	003ffff8 	ldrshteq	pc, [pc], -r8	; <UNPREDICTABLE>
20008a30:	003fedf8 	ldrshteq	lr, [pc], -r8
20008a34:	001ff1f0 			; <UNDEFINED> instruction: 0x001ff1f0
20008a38:	000ff0e0 	andeq	pc, pc, r0, ror #1
20008a3c:	0007ff80 	andeq	pc, r7, r0, lsl #31
20008a40:	00007c00 	andeq	r7, r0, r0, lsl #24
20008a44:	00008800 	andeq	r8, r0, r0, lsl #16
20008a48:	00033000 	andeq	r3, r3, r0
20008a4c:	00011000 	andeq	r1, r1, r0
	...

20008a64 <bird1_gray_bits>:
	...
20008a98:	00000e00 	andeq	r0, r0, r0, lsl #28
20008a9c:	00000f00 	andeq	r0, r0, r0, lsl #30
	...

20008ac8 <bird1_light_bits>:
	...
20008af8:	00001200 	andeq	r1, r0, r0, lsl #4
	...

20008b2c <bird2_black_bits>:
	...
20008b44:	000b0000 	andeq	r0, fp, r0
20008b48:	001e0028 	andseq	r0, lr, r8, lsr #32
20008b4c:	003e0068 	eorseq	r0, lr, r8, rrx
20008b50:	003e007c 	eorseq	r0, lr, ip, ror r0
20008b54:	003e007c 	eorseq	r0, lr, ip, ror r0
20008b58:	007e007c 	rsbseq	r0, lr, ip, ror r0
20008b5c:	007e7cfc 	ldrshteq	r7, [lr], #-204	; 0xffffff34
20008b60:	007ffff8 	ldrshteq	pc, [pc], #-248	; <UNPREDICTABLE>
20008b64:	003fd7f0 	ldrshteq	sp, [pc], -r0
20008b68:	003fc3c0 	eorseq	ip, pc, r0, asr #7
20008b6c:	000fc100 	andeq	ip, pc, r0, lsl #2
20008b70:	00007000 	andeq	r7, r0, r0
20008b74:	0000a000 	andeq	sl, r0, r0
20008b78:	0001e000 	andeq	lr, r1, r0
20008b7c:	0000a000 	andeq	sl, r0, r0
20008b80:	00008000 	andeq	r8, r0, r0
	...

20008b90 <bird2_gray_bits>:
	...
20008bcc:	00003c00 	andeq	r3, r0, r0, lsl #24
20008bd0:	00003e00 	andeq	r3, r0, r0, lsl #28
	...

20008bf4 <bird2_light_bits>:
	...
20008c2c:	00002800 	andeq	r2, r0, r0, lsl #16
	...

20008c58 <bird3_black_bits>:
	...
20008c78:	00280000 	eoreq	r0, r8, r0
20008c7c:	00680020 	rsbeq	r0, r8, r0, lsr #32
20008c80:	00f80038 	rscseq	r0, r8, r8, lsr r0
20008c84:	00fc0038 	rscseq	r0, ip, r8, lsr r0
20008c88:	00fc007c 	rscseq	r0, ip, ip, ror r0
20008c8c:	00fe3dfe 	ldrshteq	r3, [lr], #222	; 0xde
20008c90:	00fffffe 	ldrshteq	pc, [pc], #254	; <UNPREDICTABLE>
20008c94:	007febfc 	ldrshteq	lr, [pc], #-188
20008c98:	003ff1f0 	ldrshteq	pc, [pc], -r0	; <UNPREDICTABLE>
20008c9c:	001ff0c0 	andseq	pc, pc, r0, asr #1
20008ca0:	0001e800 	andeq	lr, r1, r0, lsl #16
20008ca4:	00005000 	andeq	r5, r0, r0
20008ca8:	0000f000 	andeq	pc, r0, r0
20008cac:	00009000 	andeq	r9, r0, r0
	...

20008cbc <bird3_gray_bits>:
	...
20008cfc:	00000e00 	andeq	r0, r0, r0, lsl #28
20008d00:	00000f00 	andeq	r0, r0, r0, lsl #30
	...

20008d20 <bird3_light_bits>:
	...
20008d5c:	00001400 	andeq	r1, r0, r0, lsl #8
	...

20008d84 <bird4_black_bits>:
	...
20008db8:	00007800 	andeq	r7, r0, r0, lsl #16
20008dbc:	0000ff80 	andeq	pc, r0, r0, lsl #31
20008dc0:	0003d7f4 	strdeq	sp, [r3], -r4
20008dc4:	008fe3fc 	strdeq	lr, [pc], ip
20008dc8:	01ffc1fc 	ldrsheq	ip, [pc, #28]	; 20008dec <bird4_gray_bits+0x4>
20008dcc:	00ffd9f8 	ldrshteq	sp, [pc], #152
20008dd0:	007fb0f0 	ldrshteq	fp, [pc], #-0
20008dd4:	007ea000 	rsbseq	sl, lr, r0
20008dd8:	00792000 	rsbseq	r2, r9, r0
20008ddc:	00300000 	eorseq	r0, r0, r0
	...

20008de8 <bird4_gray_bits>:
	...
20008e28:	00001c00 	andeq	r1, r0, r0, lsl #24
20008e2c:	00003e00 	andeq	r3, r0, r0, lsl #28
	...

20008e4c <bird4_light_bits>:
	...
20008e88:	00002800 	andeq	r2, r0, r0, lsl #16
	...

20008eb0 <bird5_black_bits>:
	...
20008edc:	00001c00 	andeq	r1, r0, r0, lsl #24
20008ee0:	0000ff00 	andeq	pc, r0, r0, lsl #30
20008ee4:	0003eb00 	andeq	lr, r3, r0, lsl #22
20008ee8:	0007f180 	andeq	pc, r7, r0, lsl #3
20008eec:	000ff080 	andeq	pc, pc, r0, lsl #1
20008ef0:	000fff80 	andeq	pc, pc, r0, lsl #31
20008ef4:	001fd3c0 	andseq	sp, pc, r0, asr #7
20008ef8:	003fa3c0 	eorseq	sl, pc, r0, asr #7
20008efc:	003fa3c0 	eorseq	sl, pc, r0, asr #7
20008f00:	003fd3c0 	eorseq	sp, pc, r0, asr #7
20008f04:	003e8380 	eorseq	r8, lr, r0, lsl #7
20008f08:	00778580 	rsbseq	r8, r7, r0, lsl #11
20008f0c:	00610000 	rsbeq	r0, r1, r0
20008f10:	00000000 	andeq	r0, r0, r0

20008f14 <bird5_gray_bits>:
	...
20008f4c:	00000e00 	andeq	r0, r0, r0, lsl #28
20008f50:	00000f00 	andeq	r0, r0, r0, lsl #30
	...

20008f78 <bird5_light_bits>:
	...
20008fac:	00001400 	andeq	r1, r0, r0, lsl #8
	...

20008fdc <firstTime.4093>:
20008fdc:	00000001 	andeq	r0, r0, r1

20008fe0 <witch1_black_bits>:
20008fe0:	200001f8 	strdcs	r0, [r0], -r8
20008fe4:	03400001 	movteq	r0, #1
20008fe8:	00074000 	andeq	r4, r7, r0
20008fec:	20000720 	andcs	r0, r0, r0, lsr #14
20008ff0:	3ff80066 	svccc	0x00f80066
20008ff4:	00044000 	andeq	r4, r4, r0
20008ff8:	40000440 	andmi	r0, r0, r0, asr #8
20008ffc:	03800004 	orreq	r0, r0, #4
20009000:	00064000 	andeq	r4, r6, r0
20009004:	20000640 	andcs	r0, r0, r0, asr #12
20009008:	0e200006 	cdpeq	0, 2, cr0, cr0, cr6, {0}
2000900c:	000e1000 	andeq	r1, lr, r0
20009010:	f8000c10 			; <UNDEFINED> instruction: 0xf8000c10
20009014:	0000001f 	andeq	r0, r0, pc, lsl r0

20009018 <witch1_gray_bits>:
20009018:	c0000000 	andgt	r0, r0, r0
2000901c:	00800000 	addeq	r0, r0, r0
20009020:	00008000 	andeq	r8, r0, r0
20009024:	c00000c0 	andgt	r0, r0, r0, asr #1
20009028:	00000001 	andeq	r0, r0, r1
	...
20009038:	00018000 	andeq	r8, r1, r0
2000903c:	c0000180 	andgt	r0, r0, r0, lsl #3
20009040:	01c00001 	biceq	r0, r0, r1
20009044:	0001e000 	andeq	lr, r1, r0
20009048:	000003e0 	andeq	r0, r0, r0, ror #7
2000904c:	00000000 	andeq	r0, r0, r0

20009050 <witch1_light_bits>:
	...
20009064:	00038000 	andeq	r8, r3, r0
20009068:	80000380 	andhi	r0, r0, r0, lsl #7
2000906c:	00000003 	andeq	r0, r0, r3
	...

20009088 <witch2_black_bits>:
20009088:	f8000000 			; <UNDEFINED> instruction: 0xf8000000
2000908c:	01200001 			; <UNDEFINED> instruction: 0x01200001
20009090:	00034000 	andeq	r4, r3, r0
20009094:	20000740 	andcs	r0, r0, r0, asr #14
20009098:	66200007 	strtvs	r0, [r0], -r7
2000909c:	003ff800 	eorseq	pc, pc, r0, lsl #16
200090a0:	40000440 	andmi	r0, r0, r0, asr #8
200090a4:	04400004 	strbeq	r0, [r0], #-4
200090a8:	00038000 	andeq	r8, r3, r0
200090ac:	20000660 	andcs	r0, r0, r0, ror #12
200090b0:	0e100006 	cdpeq	0, 1, cr0, cr0, cr6, {0}
200090b4:	001c0800 	andseq	r0, ip, r0, lsl #16
200090b8:	fc001c08 	stc2	12, cr1, [r0], {8}
200090bc:	0000003f 	andeq	r0, r0, pc, lsr r0

200090c0 <witch2_gray_bits>:
200090c0:	00000000 	andeq	r0, r0, r0
200090c4:	00c00000 	sbceq	r0, r0, r0
200090c8:	00008000 	andeq	r8, r0, r0
200090cc:	c0000080 	andgt	r0, r0, r0, lsl #1
200090d0:	01c00000 	biceq	r0, r0, r0
	...
200090e4:	c0000180 	andgt	r0, r0, r0, lsl #3
200090e8:	01e00001 	mvneq	r0, r1
200090ec:	0003f000 	andeq	pc, r3, r0
200090f0:	000003f0 	strdeq	r0, [r0], -r0	; <UNPREDICTABLE>
200090f4:	00000000 	andeq	r0, r0, r0

200090f8 <witch2_light_bits>:
	...
20009110:	80000380 	andhi	r0, r0, r0, lsl #7
20009114:	03800003 	orreq	r0, r0, #3
	...

20009130 <witch3_black_bits>:
20009130:	f8000000 			; <UNDEFINED> instruction: 0xf8000000
20009134:	01200001 			; <UNDEFINED> instruction: 0x01200001
20009138:	00034000 	andeq	r4, r3, r0
2000913c:	20000740 	andcs	r0, r0, r0, asr #14
20009140:	66200007 	strtvs	r0, [r0], -r7
20009144:	003ff800 	eorseq	pc, pc, r0, lsl #16
20009148:	40000440 	andmi	r0, r0, r0, asr #8
2000914c:	04400004 	strbeq	r0, [r0], #-4
20009150:	00038000 	andeq	r8, r3, r0
20009154:	10000660 	andne	r0, r0, r0, ror #12
20009158:	1c08000e 	stcne	0, cr0, [r8], {14}
2000915c:	00380800 	eorseq	r0, r8, r0, lsl #16
20009160:	fe003804 	vcmla.f16	d3, d0, d4[0], #0
20009164:	0000007f 	andeq	r0, r0, pc, ror r0

20009168 <witch3_gray_bits>:
20009168:	00000000 	andeq	r0, r0, r0
2000916c:	00c00000 	sbceq	r0, r0, r0
20009170:	00008000 	andeq	r8, r0, r0
20009174:	c0000080 	andgt	r0, r0, r0, lsl #1
20009178:	01c00000 	biceq	r0, r0, r0
	...
2000918c:	e0000180 	and	r0, r0, r0, lsl #3
20009190:	03f00001 	mvnseq	r0, #1
20009194:	0007f000 	andeq	pc, r7, r0
20009198:	000007f8 	strdeq	r0, [r0], -r8
2000919c:	00000000 	andeq	r0, r0, r0

200091a0 <witch3_light_bits>:
	...
200091b8:	80000380 	andhi	r0, r0, r0, lsl #7
200091bc:	03800003 	orreq	r0, r0, #3
	...

200091d8 <firstTime.4067>:
200091d8:	00000001 	andeq	r0, r0, r1

200091dc <witch1_black_bits>:
200091dc:	200001f8 	strdcs	r0, [r0], -r8
200091e0:	03400001 	movteq	r0, #1
200091e4:	00074000 	andeq	r4, r7, r0
200091e8:	20000720 	andcs	r0, r0, r0, lsr #14
200091ec:	3ff80066 	svccc	0x00f80066
200091f0:	00044000 	andeq	r4, r4, r0
200091f4:	40000440 	andmi	r0, r0, r0, asr #8
200091f8:	03800004 	orreq	r0, r0, #4
200091fc:	00064000 	andeq	r4, r6, r0
20009200:	20000640 	andcs	r0, r0, r0, asr #12
20009204:	0e200006 	cdpeq	0, 2, cr0, cr0, cr6, {0}
20009208:	000e1000 	andeq	r1, lr, r0
2000920c:	f8000c10 			; <UNDEFINED> instruction: 0xf8000c10
20009210:	0000001f 	andeq	r0, r0, pc, lsl r0

20009214 <witch1_gray_bits>:
20009214:	c0000000 	andgt	r0, r0, r0
20009218:	00800000 	addeq	r0, r0, r0
2000921c:	00008000 	andeq	r8, r0, r0
20009220:	c00000c0 	andgt	r0, r0, r0, asr #1
20009224:	00000001 	andeq	r0, r0, r1
	...
20009234:	00018000 	andeq	r8, r1, r0
20009238:	c0000180 	andgt	r0, r0, r0, lsl #3
2000923c:	01c00001 	biceq	r0, r0, r1
20009240:	0001e000 	andeq	lr, r1, r0
20009244:	000003e0 	andeq	r0, r0, r0, ror #7
20009248:	00000000 	andeq	r0, r0, r0

2000924c <witch1_light_bits>:
	...
20009260:	00038000 	andeq	r8, r3, r0
20009264:	80000380 	andhi	r0, r0, r0, lsl #7
20009268:	00000003 	andeq	r0, r0, r3
	...

20009284 <witch2_black_bits>:
20009284:	f8000000 			; <UNDEFINED> instruction: 0xf8000000
20009288:	01200001 			; <UNDEFINED> instruction: 0x01200001
2000928c:	00034000 	andeq	r4, r3, r0
20009290:	20000740 	andcs	r0, r0, r0, asr #14
20009294:	66200007 	strtvs	r0, [r0], -r7
20009298:	003ff800 	eorseq	pc, pc, r0, lsl #16
2000929c:	40000440 	andmi	r0, r0, r0, asr #8
200092a0:	04400004 	strbeq	r0, [r0], #-4
200092a4:	00038000 	andeq	r8, r3, r0
200092a8:	20000660 	andcs	r0, r0, r0, ror #12
200092ac:	0e100006 	cdpeq	0, 1, cr0, cr0, cr6, {0}
200092b0:	001c0800 	andseq	r0, ip, r0, lsl #16
200092b4:	fc001c08 	stc2	12, cr1, [r0], {8}
200092b8:	0000003f 	andeq	r0, r0, pc, lsr r0

200092bc <witch2_gray_bits>:
200092bc:	00000000 	andeq	r0, r0, r0
200092c0:	00c00000 	sbceq	r0, r0, r0
200092c4:	00008000 	andeq	r8, r0, r0
200092c8:	c0000080 	andgt	r0, r0, r0, lsl #1
200092cc:	01c00000 	biceq	r0, r0, r0
	...
200092e0:	c0000180 	andgt	r0, r0, r0, lsl #3
200092e4:	01e00001 	mvneq	r0, r1
200092e8:	0003f000 	andeq	pc, r3, r0
200092ec:	000003f0 	strdeq	r0, [r0], -r0	; <UNPREDICTABLE>
200092f0:	00000000 	andeq	r0, r0, r0

200092f4 <witch2_light_bits>:
	...
2000930c:	80000380 	andhi	r0, r0, r0, lsl #7
20009310:	03800003 	orreq	r0, r0, #3
	...

2000932c <witch3_black_bits>:
2000932c:	f8000000 			; <UNDEFINED> instruction: 0xf8000000
20009330:	01200001 			; <UNDEFINED> instruction: 0x01200001
20009334:	00034000 	andeq	r4, r3, r0
20009338:	20000740 	andcs	r0, r0, r0, asr #14
2000933c:	66200007 	strtvs	r0, [r0], -r7
20009340:	003ff800 	eorseq	pc, pc, r0, lsl #16
20009344:	40000440 	andmi	r0, r0, r0, asr #8
20009348:	04400004 	strbeq	r0, [r0], #-4
2000934c:	00038000 	andeq	r8, r3, r0
20009350:	10000660 	andne	r0, r0, r0, ror #12
20009354:	1c08000e 	stcne	0, cr0, [r8], {14}
20009358:	00380800 	eorseq	r0, r8, r0, lsl #16
2000935c:	fe003804 	vcmla.f16	d3, d0, d4[0], #0
20009360:	0000007f 	andeq	r0, r0, pc, ror r0

20009364 <witch3_gray_bits>:
20009364:	00000000 	andeq	r0, r0, r0
20009368:	00c00000 	sbceq	r0, r0, r0
2000936c:	00008000 	andeq	r8, r0, r0
20009370:	c0000080 	andgt	r0, r0, r0, lsl #1
20009374:	01c00000 	biceq	r0, r0, r0
	...
20009388:	e0000180 	and	r0, r0, r0, lsl #3
2000938c:	03f00001 	mvnseq	r0, #1
20009390:	0007f000 	andeq	pc, r7, r0
20009394:	000007f8 	strdeq	r0, [r0], -r8
20009398:	00000000 	andeq	r0, r0, r0

2000939c <witch3_light_bits>:
	...
200093b4:	80000380 	andhi	r0, r0, r0, lsl #7
200093b8:	03800003 	orreq	r0, r0, #3
	...

200093d4 <firstTime.4142>:
200093d4:	00000001 	andeq	r0, r0, r1

200093d8 <direction.4153>:
200093d8:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff

200093dc <flame1_black_bits>:
200093dc:	80000000 	andhi	r0, r0, r0
200093e0:	00000008 	andeq	r0, r0, r8
200093e4:	00004800 	andeq	r4, r0, r0, lsl #16
200093e8:	48004a08 	stmdami	r0, {r3, r9, fp, lr}
200093ec:	02400002 	subeq	r0, r0, #2
200093f0:	00541400 	subseq	r1, r4, r0, lsl #8
200093f4:	22005040 	andcs	r5, r0, #64	; 0x40
200093f8:	a01200b0 	ldrhge	r0, [r2], -r0	; <UNPREDICTABLE>
200093fc:	00011200 	andeq	r1, r1, r0, lsl #4
20009400:	01001000 	mrseq	r1, (UNDEF: 0)
20009404:	01000000 	mrseq	r0, (UNDEF: 0)
20009408:	00210001 	eoreq	r0, r1, r1
2000940c:	40000042 	andmi	r0, r0, r2, asr #32
20009410:	20410000 	subcs	r0, r1, r0
20009414:	01200101 			; <UNDEFINED> instruction: 0x01200101
20009418:	12012001 	andne	r2, r1, #1
2000941c:	90400000 	subls	r0, r0, r0
20009420:	00800200 	addeq	r0, r0, r0, lsl #4
20009424:	04008000 	streq	r8, [r0], #-0
20009428:	20080001 	andcs	r0, r8, r1
2000942c:	00080800 	andeq	r0, r8, r0, lsl #16
	...
20009438:	00001000 	andeq	r1, r0, r0
2000943c:	3200001c 	andcc	r0, r0, #28
20009440:	002f0000 	eoreq	r0, pc, r0
20009444:	00003f00 	andeq	r3, r0, r0, lsl #30
20009448:	01000007 	tsteq	r0, r7
2000944c:	00010000 	andeq	r0, r1, r0
20009450:	00000000 	andeq	r0, r0, r0

20009454 <flame1_gray_bits>:
	...
20009474:	00080000 	andeq	r0, r8, r0
20009478:	00000000 	andeq	r0, r0, r0
2000947c:	00900008 	addseq	r0, r0, r8
20009480:	0002a000 	andeq	sl, r2, r0
20009484:	b0001bb0 			; <UNDEFINED> instruction: 0xb0001bb0
20009488:	0fb0001f 	svceq	0x00b0001f
2000948c:	000fe000 	andeq	lr, pc, r0
20009490:	e0000fe0 	and	r0, r0, r0, ror #31
20009494:	0fa0000f 	svceq	0x00a0000f
20009498:	0007e000 	andeq	lr, r7, r0
2000949c:	800003c0 	andhi	r0, r0, r0, asr #7
200094a0:	07c00002 	strbeq	r0, [r0, r2]
200094a4:	00078000 	andeq	r8, r7, r0
200094a8:	80000380 	andhi	r0, r0, r0, lsl #7
200094ac:	09800003 	stmibeq	r0, {r0, r1}
200094b0:	00018000 	andeq	r8, r1, r0
200094b4:	0c000000 	stceq	0, cr0, [r0], {-0}
200094b8:	00100000 	andseq	r0, r0, r0
	...

200094cc <flame1_light_bits>:
	...
200094d4:	00080000 	andeq	r0, r8, r0
200094d8:	80000080 	andhi	r0, r0, r0, lsl #1
200094dc:	0c88000c 	stceq	0, cr0, [r8], {12}
200094e0:	00098800 	andeq	r8, r9, r0, lsl #16
200094e4:	c8000db8 	stmdagt	r0, {r3, r4, r5, r7, r8, sl, fp}
200094e8:	5fe8004d 	svcpl	0x00e8004d
200094ec:	00f6e800 	rscseq	lr, r6, r0, lsl #16
200094f0:	fc00eff8 	stc2	15, cr14, [r0], {248}	; 0xf8
200094f4:	fe6c00f7 	mcr2	0, 3, r0, cr12, cr7, {7}
200094f8:	00dc5c00 	sbcseq	r5, ip, r0, lsl #24
200094fc:	0c00e40c 	cfstrseq	mvf14, [r0], {12}
20009500:	d00e01e0 	andle	r0, lr, r0, ror #3
20009504:	00d01e00 	sbcseq	r1, r0, r0, lsl #28
20009508:	0c00d01a 	stceq	0, cr13, [r0], {26}
2000950c:	600e00f0 	strdvs	r0, [lr], -r0	; <UNPREDICTABLE>
20009510:	00681c00 	rsbeq	r1, r8, r0, lsl #24
20009514:	70003c3c 	andvc	r3, r0, ip, lsr ip
20009518:	1830003c 	ldmdane	r0!, {r2, r3, r4, r5}
2000951c:	00307000 	eorseq	r7, r0, r0
20009520:	78003c78 	stmdavc	r0, {r3, r4, r5, r6, sl, fp, ip, sp}
20009524:	16700038 			; <UNDEFINED> instruction: 0x16700038
20009528:	001e6000 	andseq	r6, lr, r0
2000952c:	c0000fe0 	andgt	r0, r0, r0, ror #31
20009530:	0fc0000f 	svceq	0x00c0000f
	...

20009544 <flame2_black_bits>:
20009544:	00000000 	andeq	r0, r0, r0
20009548:	40040042 	andmi	r0, r4, r2, asr #32
2000954c:	00044400 	andeq	r4, r4, r0, lsl #8
20009550:	04000440 	streq	r0, [r0], #-1088	; 0xfffffbc0
20009554:	22a00022 	adccs	r0, r0, #34	; 0x22
20009558:	00aaa800 	adceq	sl, sl, r0, lsl #16
2000955c:	00009108 	andeq	r9, r0, r8, lsl #2
20009560:	84800090 	strhi	r0, [r0], #144	; 0x90
20009564:	00040400 	andeq	r0, r4, r0, lsl #8
20009568:	20008004 	andcs	r8, r0, r4
2000956c:	00850090 	umulleq	r0, r5, r0, r0
20009570:	01000000 	mrseq	r0, (UNDEF: 0)
20009574:	20000002 	andcs	r0, r0, r2
20009578:	84200084 	strthi	r0, [r0], #-132	; 0xffffff7c
2000957c:	00000200 	andeq	r0, r0, r0, lsl #4
20009580:	02004004 	andeq	r4, r0, #4
20009584:	a00a0080 	andge	r0, sl, r0, lsl #1
20009588:	00240800 	eoreq	r0, r4, r0, lsl #16
2000958c:	08002048 	stmdaeq	r0, {r3, r6, sp}
20009590:	00000000 	andeq	r0, r0, r0
20009594:	00101000 	andseq	r1, r0, r0
20009598:	00004050 	andeq	r4, r0, r0, asr r0
2000959c:	10000040 	andne	r0, r0, r0, asr #32
200095a0:	00001000 	andeq	r1, r0, r0
200095a4:	3200001c 	andcc	r0, r0, #28
200095a8:	002f0000 	eoreq	r0, pc, r0
200095ac:	00003f00 	andeq	r3, r0, r0, lsl #30
200095b0:	01000007 	tsteq	r0, r7
200095b4:	00010000 	andeq	r0, r1, r0
200095b8:	00000000 	andeq	r0, r0, r0

200095bc <flame2_gray_bits>:
	...
200095dc:	00002000 	andeq	r2, r0, r0
200095e0:	40000010 	andmi	r0, r0, r0, lsl r0
200095e4:	27600002 	strbcs	r0, [r0, -r2]!
200095e8:	001fe000 	andseq	lr, pc, r0
200095ec:	c0000fe0 	andgt	r0, r0, r0, ror #31
200095f0:	0bc00003 	bleq	1f009604 <startup-0xff69fc>
200095f4:	000fe000 	andeq	lr, pc, r0
200095f8:	c0000fd0 	ldrdgt	r0, [r0], -r0	; <UNPREDICTABLE>
200095fc:	0fc0000f 	svceq	0x00c0000f
20009600:	0003e000 	andeq	lr, r3, r0
20009604:	c00007a0 	andgt	r0, r0, r0, lsr #15
20009608:	0b800007 	bleq	1e00962c <startup-0x1ff69d4>
2000960c:	0003c000 	andeq	ip, r3, r0
20009610:	80000380 	andhi	r0, r0, r0, lsl #7
20009614:	03800003 	orreq	r0, r0, #3
20009618:	00000000 	andeq	r0, r0, r0
2000961c:	0c000000 	stceq	0, cr0, [r0], {-0}
20009620:	00100000 	andseq	r0, r0, r0
	...

20009634 <flame2_light_bits>:
	...
2000963c:	00020000 	andeq	r0, r2, r0
20009640:	20000220 	andcs	r0, r0, r0, lsr #4
20009644:	05400005 	strbeq	r0, [r0, #-5]
20009648:	00054000 	andeq	r4, r5, r0
2000964c:	fc0026f4 	stc2	6, cr2, [r0], {244}	; 0xf4
20009650:	137c0027 	cmnne	ip, #39	; 0x27
20009654:	00fbda00 	rscseq	sp, fp, r0, lsl #20
20009658:	9e007fea 	cdpls	15, 0, cr7, cr0, cr10, {7}
2000965c:	d818006d 	ldmdale	r8, {r0, r2, r3, r5, r6}
20009660:	00e01c00 	rsceq	r1, r0, r0, lsl #24
20009664:	1e00f01c 	mcrne	0, 0, pc, cr0, cr12, {0}	; <UNPREDICTABLE>
20009668:	701e0078 	andsvc	r0, lr, r8, ror r0
2000966c:	00f01c00 	rscseq	r1, r0, r0, lsl #24
20009670:	3c003028 	stccc	0, cr3, [r0], {40}	; 0x28
20009674:	50240070 	eorpl	r0, r4, r0, ror r0
20009678:	01d81001 	bicseq	r1, r8, r1
2000967c:	30004810 	andcc	r4, r0, r0, lsl r8
20009680:	34780038 	ldrbtcc	r0, [r8], #-56	; 0xffffffc8
20009684:	002c2000 	eoreq	r2, ip, r0
20009688:	50003c20 	andpl	r3, r0, r0, lsr #24
2000968c:	0c700038 	ldcleq	0, cr0, [r0], #-224	; 0xffffff20
20009690:	001fe000 	andseq	lr, pc, r0
20009694:	c0000fe0 	andgt	r0, r0, r0, ror #31
20009698:	0fc0000f 	svceq	0x00c0000f
	...

200096ac <flame3_black_bits>:
200096ac:	02000400 	andeq	r0, r0, #0, 8
200096b0:	04000000 	streq	r0, [r0], #-0
200096b4:	00044000 	andeq	r4, r4, r0
200096b8:	a4000404 	strge	r0, [r0], #-1028	; 0xfffffbfc
200096bc:	52a00098 	adcpl	r0, r0, #152	; 0x98
200096c0:	01028a00 	tsteq	r2, r0, lsl #20
200096c4:	00012028 	andeq	r2, r1, r8, lsr #32
200096c8:	00020100 	andeq	r0, r2, r0, lsl #2
200096cc:	01028200 	mrseq	r8, R10_usr
200096d0:	80000092 	mulhi	r0, r2, r0
200096d4:	00810000 	addeq	r0, r1, r0
200096d8:	01400901 	cmpeq	r0, r1, lsl #18
200096dc:	01004008 	tsteq	r0, r8
200096e0:	02000002 	andeq	r0, r0, #2
200096e4:	01004001 	tsteq	r0, r1
200096e8:	02000002 	andeq	r0, r0, #2
200096ec:	a1000000 	mrsge	r0, (UNDEF: 0)
200096f0:	00002400 	andeq	r2, r0, r0, lsl #8
200096f4:	10004000 	andne	r4, r0, r0
200096f8:	40000044 	andmi	r0, r0, r4, asr #32
200096fc:	00400800 	subeq	r0, r0, r0, lsl #16
20009700:	00000808 	andeq	r0, r0, r8, lsl #16
20009704:	00000000 	andeq	r0, r0, r0
20009708:	00001000 	andeq	r1, r0, r0
2000970c:	3200001c 	andcc	r0, r0, #28
20009710:	002f0000 	eoreq	r0, pc, r0
20009714:	00003f00 	andeq	r3, r0, r0, lsl #30
20009718:	01000007 	tsteq	r0, r7
2000971c:	00010000 	andeq	r0, r1, r0
20009720:	00000000 	andeq	r0, r0, r0

20009724 <flame3_gray_bits>:
	...
20009744:	00002000 	andeq	r2, r0, r0
20009748:	00000040 	andeq	r0, r0, r0, asr #32
2000974c:	17600023 	strbne	r0, [r0, -r3, lsr #32]!
20009750:	0017e000 	andseq	lr, r7, r0
20009754:	e0000fe0 	and	r0, r0, r0, ror #31
20009758:	3de0003d 	stclcc	0, cr0, [r0, #244]!	; 0xf4
2000975c:	001fa000 	andseq	sl, pc, r0
20009760:	f0001fe8 			; <UNDEFINED> instruction: 0xf0001fe8
20009764:	0ee0000f 	cdpeq	0, 14, cr0, cr0, cr15, {0}
20009768:	000fc000 	andeq	ip, pc, r0
2000976c:	c0000fe0 	andgt	r0, r0, r0, ror #31
20009770:	17c0000b 	strbne	r0, [r0, fp]
20009774:	00078000 	andeq	r8, r7, r0
20009778:	80000780 	andhi	r0, r0, r0, lsl #15
2000977c:	03400003 	movteq	r0, #3
20009780:	00030000 	andeq	r0, r3, r0
20009784:	0c000000 	stceq	0, cr0, [r0], {-0}
20009788:	00100000 	andseq	r0, r0, r0
	...

2000979c <flame3_light_bits>:
2000979c:	00000000 	andeq	r0, r0, r0
200097a0:	00400000 	subeq	r0, r0, r0
200097a4:	00020000 	andeq	r0, r2, r0
200097a8:	40000240 	andmi	r0, r0, r0, asr #4
200097ac:	014c0002 	cmpeq	ip, r2
200097b0:	00317400 	eorseq	r7, r1, r0, lsl #8
200097b4:	fc0017d4 	stc2	7, cr1, [r0], {212}	; 0xd4
200097b8:	bff8003f 	svclt	0x00f8003f
200097bc:	00fd5800 	rscseq	r5, sp, r0, lsl #16
200097c0:	7800ff28 	stmdavc	r0, {r3, r5, r8, r9, sl, fp, ip, sp, lr, pc}
200097c4:	e81c00dc 	ldmda	ip, {r2, r3, r4, r6, r7}
200097c8:	00a81600 	adceq	r1, r8, r0, lsl #12
200097cc:	1e00b016 	mcrne	0, 0, fp, cr0, cr6, {0}
200097d0:	c01e00c0 	andsgt	r0, lr, r0, asr #1
200097d4:	00e01c00 	rsceq	r1, r0, r0, lsl #24
200097d8:	0c00c014 	stceq	0, cr12, [r0], {20}
200097dc:	401c00f0 	ldrshmi	r0, [ip], -r0	; <UNPREDICTABLE>
200097e0:	00f01800 	rscseq	r1, r0, r0, lsl #16
200097e4:	2800b01c 	stmdacs	r0, {r2, r3, r4, ip, sp, pc}
200097e8:	283c0030 	ldmdacs	ip!, {r4, r5}
200097ec:	00385400 	eorseq	r5, r8, r0, lsl #8
200097f0:	70003070 	andvc	r3, r0, r0, ror r0
200097f4:	3cb0001c 	ldccc	0, cr0, [r0], #112	; 0x70
200097f8:	003ce000 	eorseq	lr, ip, r0
200097fc:	c0001fe0 	andgt	r1, r0, r0, ror #31
20009800:	0fc0000f 	svceq	0x00c0000f
	...

20009814 <flame4_black_bits>:
20009814:	00000100 	andeq	r0, r0, r0, lsl #2
20009818:	10820000 	addne	r0, r2, r0
2000981c:	00008000 	andeq	r8, r0, r0
20009820:	000028c8 	andeq	r2, r0, r8, asr #17
20009824:	05540004 	ldrbeq	r0, [r4, #-4]
20009828:	00a55400 	adceq	r5, r5, r0, lsl #8
2000982c:	08002420 	stmdaeq	r0, {r5, sl, sp}
20009830:	50000082 	andpl	r0, r0, r2, lsl #1
20009834:	01000400 	tsteq	r0, r0, lsl #8
20009838:	00010444 	andeq	r0, r1, r4, asr #8
2000983c:	84120124 	ldrhi	r0, [r2], #-292	; 0xfffffedc
20009840:	00841000 	addeq	r1, r4, r0
20009844:	01008001 	tsteq	r0, r1
20009848:	200100a0 	andcs	r0, r1, r0, lsr #1
2000984c:	01000000 	mrseq	r0, (UNDEF: 0)
20009850:	00000022 	andeq	r0, r0, r2, lsr #32
20009854:	80020000 	andhi	r0, r2, r0
20009858:	00808a00 	addeq	r8, r0, r0, lsl #20
2000985c:	04004000 	streq	r4, [r0], #-0
20009860:	20440000 	subcs	r0, r4, r0
20009864:	00200000 	eoreq	r0, r0, r0
20009868:	00000008 	andeq	r0, r0, r8
2000986c:	00000010 	andeq	r0, r0, r0, lsl r0
20009870:	00001000 	andeq	r1, r0, r0
20009874:	3200001c 	andcc	r0, r0, #28
20009878:	002f0000 	eoreq	r0, pc, r0
2000987c:	00003f00 	andeq	r3, r0, r0, lsl #30
20009880:	01000007 	tsteq	r0, r7
20009884:	00010000 	andeq	r0, r1, r0
20009888:	00000000 	andeq	r0, r0, r0

2000988c <flame4_gray_bits>:
	...
200098b0:	40000000 	andmi	r0, r0, r0
200098b4:	08200010 	stmdaeq	r0!, {r4}
200098b8:	0008c000 	andeq	ip, r8, r0
200098bc:	f0000fc4 			; <UNDEFINED> instruction: 0xf0000fc4
200098c0:	1ff80007 	svcne	0x00f80007
200098c4:	001ff000 	andseq	pc, pc, r0
200098c8:	f0001fd0 			; <UNDEFINED> instruction: 0xf0001fd0
200098cc:	1fc0001f 	svcne	0x00c0001f
200098d0:	001f5000 	andseq	r5, pc, r0
200098d4:	e0000fe0 	and	r0, r0, r0, ror #31
200098d8:	07800007 	streq	r0, [r0, r7]
200098dc:	00078000 	andeq	r8, r7, r0
200098e0:	00000780 	andeq	r0, r0, r0, lsl #15
200098e4:	0300000b 	movweq	r0, #11
200098e8:	00010000 	andeq	r0, r1, r0
200098ec:	0c000000 	stceq	0, cr0, [r0], {-0}
200098f0:	00100000 	andseq	r0, r0, r0
	...

20009904 <flame4_light_bits>:
	...
2000990c:	00040000 	andeq	r0, r4, r0
20009910:	40000400 	andmi	r0, r0, r0, lsl #8
20009914:	c8800048 	stmgt	r0, {r3, r6}
20009918:	00488000 	subeq	r8, r8, r0
2000991c:	e4004ac4 	str	r4, [r0], #-2756	; 0xfffff53c
20009920:	2fec007d 	svccs	0x00ec007d
20009924:	00fff800 	rscseq	pc, pc, r0, lsl #16
20009928:	be00fbb8 	vmovlt.16	d16[0], pc
2000992c:	73cc00cb 	bicvc	r0, ip, #203	; 0xcb
20009930:	00732e00 	rsbseq	r2, r3, r0, lsl #28
20009934:	0e00703a 	mcreq	0, 0, r7, cr0, cr10, {1}
20009938:	c0060050 	andgt	r0, r6, r0, asr r0
2000993c:	00e00e00 	rsceq	r0, r0, r0, lsl #28
20009940:	0e00a00c 	cdpeq	0, 0, cr10, cr0, cr12, {0}
20009944:	601c00e0 	andsvs	r0, ip, r0, ror #1
20009948:	00602400 	rsbeq	r2, r0, r0, lsl #8
2000994c:	1800301c 	stmdane	r0, {r2, r3, r4, ip, sp}
20009950:	50380078 	eorspl	r0, r8, r8, ror r0
20009954:	00587000 	subseq	r7, r8, r0
20009958:	f0003830 			; <UNDEFINED> instruction: 0xf0003830
2000995c:	1cf00024 	ldclne	0, cr0, [r0], #144	; 0x90
20009960:	001ee000 	andseq	lr, lr, r0
20009964:	c0001fe0 	andgt	r1, r0, r0, ror #31
20009968:	0fc0000f 	svceq	0x00c0000f
	...

2000997c <firstTime.4079>:
2000997c:	00000001 	andeq	r0, r0, r1

20009980 <boom1_black_bits>:
	...
20009ae4:	0000003e 	andeq	r0, r0, lr, lsr r0
	...
20009af0:	00630000 	rsbeq	r0, r3, r0
	...
20009afc:	80000000 	andhi	r0, r0, r0
20009b00:	00000043 	andeq	r0, r0, r3, asr #32
	...
20009b0c:	00638000 	rsbeq	r8, r3, r0
	...
20009b18:	80000000 	andhi	r0, r0, r0
20009b1c:	0000003f 	andeq	r0, r0, pc, lsr r0
	...
20009b28:	001f0000 	andseq	r0, pc, r0
	...

20009c84 <boom1_gray_bits>:
	...
20009df4:	00040000 	andeq	r0, r4, r0
	...
20009e04:	00000024 	andeq	r0, r0, r4, lsr #32
	...
20009e10:	001c0000 	andseq	r0, ip, r0
	...

20009f88 <boom1_light_bits>:
	...
2000a0f8:	00180000 	andseq	r0, r8, r0
	...
2000a108:	00000018 	andeq	r0, r0, r8, lsl r0
	...

2000a28c <boom2_black_bits>:
	...
2000a3a8:	00007c00 	andeq	r7, r0, r0, lsl #24
	...
2000a3b4:	fe000000 	cdp2	0, 0, cr0, cr0, cr0, {0}
2000a3b8:	00000038 	andeq	r0, r0, r8, lsr r0
	...
2000a3c4:	0fffff00 	svceq	0x00ffff00
	...
2000a3d0:	ff800000 			; <UNDEFINED> instruction: 0xff800000
2000a3d4:	00001fff 	strdeq	r1, [r0], -pc	; <UNPREDICTABLE>
	...
2000a3e0:	3ffeff80 	svccc	0x00feff80
	...
2000a3ec:	ffc00000 			; <UNDEFINED> instruction: 0xffc00000
2000a3f0:	00007f00 	andeq	r7, r0, r0, lsl #30
	...
2000a3fc:	7c01ffc0 	stcvc	15, cr15, [r1], {192}	; 0xc0
	...
2000a408:	ff800000 			; <UNDEFINED> instruction: 0xff800000
2000a40c:	0000ff01 	andeq	pc, r0, r1, lsl #30
	...
2000a418:	fff1f800 	vcmla.f32	d31, d1, d0[0], #270
	...
2000a424:	f8000000 			; <UNDEFINED> instruction: 0xf8000000
2000a428:	0000ffff 	strdeq	pc, [r0], -pc	; <UNPREDICTABLE>
	...
2000a434:	fffff000 			; <UNDEFINED> instruction: 0xfffff000
	...
2000a440:	f8000000 			; <UNDEFINED> instruction: 0xf8000000
2000a444:	0000603f 	andeq	r6, r0, pc, lsr r0
	...
2000a450:	001ffc00 	andseq	pc, pc, r0, lsl #24
	...
2000a45c:	fc000000 	stc2	0, cr0, [r0], {-0}
2000a460:	0000000f 	andeq	r0, r0, pc
	...
2000a46c:	0003fc00 	andeq	pc, r3, r0, lsl #24
	...
2000a478:	f8000000 			; <UNDEFINED> instruction: 0xf8000000
2000a47c:	00000001 	andeq	r0, r0, r1
	...

2000a590 <boom2_gray_bits>:
	...
2000a6e4:	00010000 	andeq	r0, r1, r0
	...
2000a6f4:	0000000f 	andeq	r0, r0, pc
	...
2000a700:	03020000 	movweq	r0, #8192	; 0x2000
	...
2000a710:	000000fe 	strdeq	r0, [r0], -lr
	...
2000a71c:	000e0000 	andeq	r0, lr, r0
	...

2000a894 <boom2_light_bits>:
	...
2000a9f8:	000000f0 	strdeq	r0, [r0], -r0	; <UNPREDICTABLE>
	...
2000aa04:	00fc0000 	rscseq	r0, ip, r0
	...

2000ab98 <boom3_black_bits>:
	...
2000ac6c:	000e0000 	andeq	r0, lr, r0
	...
2000ac78:	80000000 	andhi	r0, r0, r0
2000ac7c:	000001ff 	strdeq	r0, [r0], -pc	; <UNPREDICTABLE>
	...
2000ac88:	03ffc000 	mvnseq	ip, #0
	...
2000ac94:	e0000000 	and	r0, r0, r0
2000ac98:	000007ff 	strdeq	r0, [r0], -pc	; <UNPREDICTABLE>
2000ac9c:	000001fc 	strdeq	r0, [r0], -ip
2000aca0:	00000000 	andeq	r0, r0, r0
2000aca4:	1f8ff000 	svcne	0x008ff000
2000aca8:	03ff0000 	mvnseq	r0, #0
2000acac:	00000000 	andeq	r0, r0, r0
2000acb0:	f0000000 			; <UNDEFINED> instruction: 0xf0000000
2000acb4:	e0003e1f 	and	r3, r0, pc, lsl lr
2000acb8:	000007ff 	strdeq	r0, [r0], -pc	; <UNPREDICTABLE>
2000acbc:	00000000 	andeq	r0, r0, r0
2000acc0:	783ff000 	ldmdavc	pc!, {ip, sp, lr, pc}	; <UNPREDICTABLE>
2000acc4:	07fff800 	ldrbeq	pc, [pc, r0, lsl #16]!	; <UNPREDICTABLE>
2000acc8:	00000000 	andeq	r0, r0, r0
2000accc:	f0000000 			; <UNDEFINED> instruction: 0xf0000000
2000acd0:	fc00f8ff 	stc2	8, cr15, [r0], {255}	; 0xff
2000acd4:	000007ff 	strdeq	r0, [r0], -pc	; <UNPREDICTABLE>
2000acd8:	00000000 	andeq	r0, r0, r0
2000acdc:	ffffe000 			; <UNDEFINED> instruction: 0xffffe000
2000ace0:	0fe03e00 	svceq	0x00e03e00
2000ace4:	00000000 	andeq	r0, r0, r0
2000ace8:	c0000000 	andgt	r0, r0, r0
2000acec:	0700ffff 			; <UNDEFINED> instruction: 0x0700ffff
2000acf0:	00001fe0 	andeq	r1, r0, r0, ror #31
2000acf4:	00000000 	andeq	r0, r0, r0
2000acf8:	3fffc000 	svccc	0x00ffc000
2000acfc:	3fe00300 	svccc	0x00e00300
2000ad00:	00000000 	andeq	r0, r0, r0
2000ad04:	e0000000 	and	r0, r0, r0
2000ad08:	ff1c07ff 			; <UNDEFINED> instruction: 0xff1c07ff
2000ad0c:	00003fff 	strdeq	r3, [r0], -pc	; <UNPREDICTABLE>
2000ad10:	00000000 	andeq	r0, r0, r0
2000ad14:	81ffc000 	mvnshi	ip, r0
2000ad18:	3fffff3f 	svccc	0x00ffff3f
	...
2000ad24:	fe7fc07f 	mrc2	0, 3, ip, cr15, cr15, {3}
2000ad28:	00003fff 	strdeq	r3, [r0], -pc	; <UNPREDICTABLE>
2000ad2c:	00000000 	andeq	r0, r0, r0
2000ad30:	e0000000 	and	r0, r0, r0
2000ad34:	0ffff87f 	svceq	0x00fff87f
	...
2000ad40:	007df800 	rsbseq	pc, sp, r0, lsl #16
2000ad44:	000007fe 	strdeq	r0, [r0], -lr
2000ad48:	00000000 	andeq	r0, r0, r0
2000ad4c:	fc000000 	stc2	0, cr0, [r0], {-0}
2000ad50:	03fc00f8 	mvnseq	r0, #248	; 0xf8
	...
2000ad5c:	01f87e00 	mvnseq	r7, r0, lsl #28
2000ad60:	00000030 	andeq	r0, r0, r0, lsr r0
2000ad64:	00000000 	andeq	r0, r0, r0
2000ad68:	7f800000 	svcvc	0x00800000
2000ad6c:	000003f8 	strdeq	r0, [r0], -r8
	...
2000ad78:	07fc7fc0 	ldrbeq	r7, [ip, r0, asr #31]!
	...
2000ad84:	fff00000 			; <UNDEFINED> instruction: 0xfff00000	; IMB
2000ad88:	000007ff 	strdeq	r0, [r0], -pc	; <UNPREDICTABLE>
	...
2000ad94:	07fffff0 			; <UNDEFINED> instruction: 0x07fffff0
	...
2000ada0:	ffc00000 			; <UNDEFINED> instruction: 0xffc00000
2000ada4:	000007ff 	strdeq	r0, [r0], -pc	; <UNPREDICTABLE>
	...
2000adb0:	03ffbe00 	mvnseq	fp, #0, 28
	...
2000adc0:	000003fe 	strdeq	r0, [r0], -lr
	...
2000adcc:	01f00000 	mvnseq	r0, r0
	...

2000ae9c <boom3_gray_bits>:
	...
2000afa8:	00700000 	rsbseq	r0, r0, r0
	...
2000afb8:	00000020 	andeq	r0, r0, r0, lsr #32
	...
2000afc4:	04c00000 	strbeq	r0, [r0], #0
	...
2000afd4:	00000700 	andeq	r0, r0, r0, lsl #14
	...
2000afe4:	0010c000 	andseq	ip, r0, r0
	...
2000aff0:	78000000 	stmdavc	r0, {}	; <UNPREDICTABLE>
2000aff4:	00000010 	andeq	r0, r0, r0, lsl r0
	...
2000b000:	001ffc00 	andseq	pc, pc, r0, lsl #24
	...
2000b044:	00020000 	andeq	r0, r2, r0
	...
2000b054:	00000001 	andeq	r0, r0, r1
	...
2000b060:	00018000 	andeq	r8, r1, r0
	...
2000b06c:	80000000 	andhi	r0, r0, r0
2000b070:	00000007 	andeq	r0, r0, r7
	...
2000b07c:	00038000 	andeq	r8, r3, r0
	...

2000b1a0 <boom3_light_bits>:
	...
2000b2bc:	000001c0 	andeq	r0, r0, r0, asr #3
	...
2000b2c8:	03000000 	movweq	r0, #0
	...
2000b2e8:	000f0000 	andeq	r0, pc, r0
	...
2000b2f4:	80000000 	andhi	r0, r0, r0
2000b2f8:	0000000f 	andeq	r0, r0, pc
	...
2000b358:	00000006 	andeq	r0, r0, r6
	...
2000b364:	00060000 	andeq	r0, r6, r0
	...

2000b4a4 <boom4_black_bits>:
	...
2000b500:	00000060 	andeq	r0, r0, r0, rrx
2000b504:	00000000 	andeq	r0, r0, r0
2000b508:	7c000000 	stcvc	0, cr0, [r0], {-0}
2000b50c:	00200000 	eoreq	r0, r0, r0
	...
2000b518:	0001fc00 	andeq	pc, r1, r0, lsl #24
	...
2000b524:	f8000000 			; <UNDEFINED> instruction: 0xf8000000
2000b528:	00000003 	andeq	r0, r0, r3
	...
2000b534:	0003f000 	andeq	pc, r3, r0
	...
2000b540:	607ff000 	rsbsvs	pc, pc, r0
2000b544:	f8000007 			; <UNDEFINED> instruction: 0xf8000007
2000b548:	00000001 	andeq	r0, r0, r1
2000b54c:	ff81c000 			; <UNDEFINED> instruction: 0xff81c000
2000b550:	0007e1ff 	strdeq	lr, [r7], -pc	; <UNPREDICTABLE>
2000b554:	0783ff80 	streq	pc, [r3, r0, lsl #31]
2000b558:	c0000000 	andgt	r0, r0, r0
2000b55c:	f3ffff81 			; <UNDEFINED> instruction: 0xf3ffff81
2000b560:	ffffe003 			; <UNDEFINED> instruction: 0xffffe003
2000b564:	00000783 	andeq	r0, r0, r3, lsl #15
2000b568:	ff80c000 			; <UNDEFINED> instruction: 0xff80c000
2000b56c:	f003f7ff 			; <UNDEFINED> instruction: 0xf003f7ff
2000b570:	0787ffff 			; <UNDEFINED> instruction: 0x0787ffff
2000b574:	00000000 	andeq	r0, r0, r0
2000b578:	f7c3ff80 			; <UNDEFINED> instruction: 0xf7c3ff80
2000b57c:	cffff003 	svcgt	0x00fff003
2000b580:	00000787 	andeq	r0, r0, r7, lsl #15
2000b584:	ff800000 			; <UNDEFINED> instruction: 0xff800000
2000b588:	f001efe3 			; <UNDEFINED> instruction: 0xf001efe3
2000b58c:	030787ff 	movweq	r8, #30719	; 0x77ff
2000b590:	00000000 	andeq	r0, r0, r0
2000b594:	8ff0ff80 	svchi	0x00f0ff80
2000b598:	87fff001 	ldrbhi	pc, [pc, r1]!	; <UNPREDICTABLE>
2000b59c:	00000003 	andeq	r0, r0, r3
2000b5a0:	7f800000 	svcvc	0x00800000
2000b5a4:	e0000ff8 	strd	r0, [r0], -r8
2000b5a8:	00c387ff 	strdeq	r8, [r3], #127	; 0x7f
2000b5ac:	00000000 	andeq	r0, r0, r0
2000b5b0:	07ffff80 	ldrbeq	pc, [pc, r0, lsl #31]!	; <UNPREDICTABLE>
2000b5b4:	c7fff800 	ldrbgt	pc, [pc, r0, lsl #16]!	; <UNPREDICTABLE>
2000b5b8:	000000c3 	andeq	r0, r0, r3, asr #1
2000b5bc:	ffc00000 			; <UNDEFINED> instruction: 0xffc00000
2000b5c0:	fc0003ff 	stc2	3, cr0, [r0], {255}	; 0xff
2000b5c4:	0001e3ff 	strdeq	lr, [r1], -pc	; <UNPREDICTABLE>
2000b5c8:	c0000000 	andgt	r0, r0, r0
2000b5cc:	039fffc0 	orrseq	pc, pc, #192, 30	; 0x300
2000b5d0:	f9fffc00 			; <UNDEFINED> instruction: 0xf9fffc00
2000b5d4:	00000000 	andeq	r0, r0, r0
2000b5d8:	ffe0c000 			; <UNDEFINED> instruction: 0xffe0c000
2000b5dc:	fc007807 	stc2	8, cr7, [r0], {7}
2000b5e0:	00007fff 	strdeq	r7, [r0], -pc	; <UNPREDICTABLE>
2000b5e4:	00000000 	andeq	r0, r0, r0
2000b5e8:	7e03ffe0 	cdpvc	15, 0, cr15, cr3, cr0, {7}
2000b5ec:	3ffffc00 	svccc	0x00fffc00
2000b5f0:	0000001c 	andeq	r0, r0, ip, lsl r0
2000b5f4:	ffc00000 			; <UNDEFINED> instruction: 0xffc00000
2000b5f8:	fc00ff00 	stc2	15, cr15, [r0], {-0}
2000b5fc:	007e1fff 	ldrshteq	r1, [lr], #-255	; 0xffffff01
2000b600:	00000000 	andeq	r0, r0, r0
2000b604:	7f803f00 	svcvc	0x00803f00
2000b608:	3ffe3800 	svccc	0x00fe3800
2000b60c:	000000fe 	strdeq	r0, [r0], -lr
2000b610:	00000000 	andeq	r0, r0, r0
2000b614:	02007f80 	andeq	r7, r0, #128, 30	; 0x200
2000b618:	00fe1ff8 	ldrshteq	r1, [lr], #248	; 0xf8
2000b61c:	00000000 	andeq	r0, r0, r0
2000b620:	7f800000 	svcvc	0x00800000
2000b624:	1ff00700 	svcne	0x00f00700
2000b628:	000000ee 	andeq	r0, r0, lr, ror #1
2000b62c:	00000000 	andeq	r0, r0, r0
2000b630:	0787ff80 	streq	pc, [r7, r0, lsl #31]
2000b634:	006607e0 	rsbeq	r0, r6, r0, ror #15
2000b638:	00000000 	andeq	r0, r0, r0
2000b63c:	ff83c000 			; <UNDEFINED> instruction: 0xff83c000
2000b640:	00000fc3 	andeq	r0, r0, r3, asr #31
2000b644:	00000076 	andeq	r0, r0, r6, ror r0
2000b648:	e0000000 	and	r0, r0, r0
2000b64c:	0fffffc3 	svceq	0x00ffffc3
2000b650:	003f0000 	eorseq	r0, pc, r0
2000b654:	00000000 	andeq	r0, r0, r0
2000b658:	ffe3f000 			; <UNDEFINED> instruction: 0xffe3f000
2000b65c:	80000fff 	strdhi	r0, [r0], -pc	; <UNPREDICTABLE>
2000b660:	0000003f 	andeq	r0, r0, pc, lsr r0
2000b664:	f0000000 			; <UNDEFINED> instruction: 0xf0000000
2000b668:	0ffffff3 	svceq	0x00fffff3
2000b66c:	003f81fe 	ldrshteq	r8, [pc], -lr
2000b670:	00000000 	andeq	r0, r0, r0
2000b674:	9ffbe000 	svcls	0x00fbe000
2000b678:	81ff03ff 	ldrshhi	r0, [pc, #63]	; 2000b6bf <boom4_black_bits+0x21b>
2000b67c:	0000001f 	andeq	r0, r0, pc, lsl r0
2000b680:	00000000 	andeq	r0, r0, r0
2000b684:	00ff1ff8 	ldrshteq	r1, [pc], #248
2000b688:	000001ff 	strdeq	r0, [r0], -pc	; <UNPREDICTABLE>
2000b68c:	00000000 	andeq	r0, r0, r0
2000b690:	3ff80000 	svccc	0x00f80000
2000b694:	00fe001f 	rscseq	r0, lr, pc, lsl r0
	...
2000b6a0:	001e7ff8 			; <UNDEFINED> instruction: 0x001e7ff8
2000b6a4:	000000fc 	strdeq	r0, [r0], -ip
2000b6a8:	00000000 	andeq	r0, r0, r0
2000b6ac:	fffc0000 			; <UNDEFINED> instruction: 0xfffc0000
2000b6b0:	0078003f 	rsbseq	r0, r8, pc, lsr r0
	...
2000b6bc:	007ffffc 	ldrshteq	pc, [pc], #-252	; <UNPREDICTABLE>
	...
2000b6c8:	fffe0000 			; <UNDEFINED> instruction: 0xfffe0000
2000b6cc:	0000007f 	andeq	r0, r0, pc, ror r0
2000b6d0:	00000000 	andeq	r0, r0, r0
2000b6d4:	04000000 	streq	r0, [r0], #-0
2000b6d8:	007fc07e 	rsbseq	ip, pc, lr, ror r0	; <UNPREDICTABLE>
	...
2000b6e4:	001e0000 	andseq	r0, lr, r0
2000b6e8:	0000007f 	andeq	r0, r0, pc, ror r0
	...
2000b6f4:	1c3c1e0c 	ldcne	14, cr1, [ip], #-48	; 0xffffffd0
	...
2000b700:	ff000000 			; <UNDEFINED> instruction: 0xff000000
2000b704:	00007c00 	andeq	r7, r0, r0, lsl #24
	...
2000b710:	fc01ff00 	stc2	15, cr15, [r1], {-0}
	...
2000b71c:	ff000000 			; <UNDEFINED> instruction: 0xff000000
2000b720:	0000fc01 	andeq	pc, r0, r1, lsl #24
	...
2000b72c:	fc01fc00 	stc2	12, cr15, [r1], {-0}
2000b730:	00000001 	andeq	r0, r0, r1
2000b734:	00000000 	andeq	r0, r0, r0
2000b738:	e0000000 	and	r0, r0, r0
2000b73c:	0000f801 	andeq	pc, r0, r1, lsl #16
	...

2000b7a8 <boom4_gray_bits>:
	...
2000b844:	80000000 	andhi	r0, r0, r0
	...
2000b87c:	002c0000 	eoreq	r0, ip, r0
2000b880:	30000000 	andcc	r0, r0, r0
	...
2000b88c:	00000004 	andeq	r0, r0, r4
2000b890:	00001800 	andeq	r1, r0, r0, lsl #16
2000b894:	00000000 	andeq	r0, r0, r0
2000b898:	000f0000 	andeq	r0, pc, r0
2000b89c:	58000000 	stmdapl	r0, {}	; <UNPREDICTABLE>
2000b8a0:	00000000 	andeq	r0, r0, r0
2000b8a4:	80000000 	andhi	r0, r0, r0
2000b8a8:	00000007 	andeq	r0, r0, r7
2000b8ac:	00005800 	andeq	r5, r0, r0, lsl #16
	...
2000b8b8:	38000000 	stmdacc	r0, {}	; <UNPREDICTABLE>
	...
2000b8c8:	00001c00 	andeq	r1, r0, r0, lsl #24
	...
2000b8d4:	06000000 	streq	r0, [r0], -r0
	...
2000b918:	01c00000 	biceq	r0, r0, r0
	...
2000b928:	00000020 	andeq	r0, r0, r0, lsr #32
2000b92c:	00000010 	andeq	r0, r0, r0, lsl r0
2000b930:	00000000 	andeq	r0, r0, r0
2000b934:	00380000 	eorseq	r0, r8, r0
2000b938:	00180000 	andseq	r0, r8, r0
	...
2000b944:	0000003c 	andeq	r0, r0, ip, lsr r0
2000b948:	00000008 	andeq	r0, r0, r8
	...
2000b978:	60000000 	andvs	r0, r0, r0
	...
2000b988:	00006000 	andeq	r6, r0, r0
	...
2000b994:	c0000000 	andgt	r0, r0, r0
	...
2000b9a4:	00018000 	andeq	r8, r1, r0
	...

2000baac <boom4_light_bits>:
	...
2000bb80:	00100000 	andseq	r0, r0, r0
	...
2000bb90:	00000018 	andeq	r0, r0, r8, lsl r0
2000bb94:	00006000 	andeq	r6, r0, r0
	...
2000bba0:	20000000 	andcs	r0, r0, r0
	...
2000bbb0:	00002000 	andeq	r2, r0, r0
	...
2000bc2c:	000000c0 	andeq	r0, r0, r0, asr #1
	...
2000bc38:	00400000 	subeq	r0, r0, r0
	...
2000bc8c:	00008000 	andeq	r8, r0, r0
	...

2000bdb0 <boom5_black_bits>:
	...
2000be0c:	00000060 	andeq	r0, r0, r0, rrx
2000be10:	00000000 	andeq	r0, r0, r0
2000be14:	7c000000 	stcvc	0, cr0, [r0], {-0}
2000be18:	00200000 	eoreq	r0, r0, r0
	...
2000be24:	0001fc00 	andeq	pc, r1, r0, lsl #24
2000be28:	00000020 	andeq	r0, r0, r0, lsr #32
2000be2c:	00000000 	andeq	r0, r0, r0
2000be30:	f8000000 			; <UNDEFINED> instruction: 0xf8000000
2000be34:	00000003 	andeq	r0, r0, r3
	...
2000be40:	0003f000 	andeq	pc, r3, r0
	...
2000be4c:	607ff000 	rsbsvs	pc, pc, r0
2000be50:	f8000006 			; <UNDEFINED> instruction: 0xf8000006
2000be54:	00000001 	andeq	r0, r0, r1
2000be58:	ff81c000 			; <UNDEFINED> instruction: 0xff81c000
2000be5c:	0006e1ff 	strdeq	lr, [r6], -pc	; <UNPREDICTABLE>
2000be60:	0783ff80 	streq	pc, [r3, r0, lsl #31]
2000be64:	c0000000 	andgt	r0, r0, r0
2000be68:	f3ffff81 			; <UNDEFINED> instruction: 0xf3ffff81
2000be6c:	ffffe00e 			; <UNDEFINED> instruction: 0xffffe00e
2000be70:	00000783 	andeq	r0, r0, r3, lsl #15
2000be74:	ff80c000 			; <UNDEFINED> instruction: 0xff80c000
2000be78:	f007f7ff 			; <UNDEFINED> instruction: 0xf007f7ff
2000be7c:	0787ffff 			; <UNDEFINED> instruction: 0x0787ffff
2000be80:	00000000 	andeq	r0, r0, r0
2000be84:	f7f1ff80 			; <UNDEFINED> instruction: 0xf7f1ff80
2000be88:	cffff007 	svcgt	0x00fff007
2000be8c:	00000787 	andeq	r0, r0, r7, lsl #15
2000be90:	ff800000 			; <UNDEFINED> instruction: 0xff800000
2000be94:	f003eff0 			; <UNDEFINED> instruction: 0xf003eff0
2000be98:	0707c3ff 			; <UNDEFINED> instruction: 0x0707c3ff
2000be9c:	00000000 	andeq	r0, r0, r0
2000bea0:	cff0ff80 	svcgt	0x00f0ff80
2000bea4:	c3fff003 	mvnsgt	pc, #3
2000bea8:	00000603 	andeq	r0, r0, r3, lsl #12
2000beac:	7f800000 	svcvc	0x00800000
2000beb0:	e0038ff8 	strd	r8, [r3], -r8	; <UNPREDICTABLE>
2000beb4:	04c3e3ff 	strbeq	lr, [r3], #1023	; 0x3ff
2000beb8:	00000000 	andeq	r0, r0, r0
2000bebc:	07f87f80 	ldrbeq	r7, [r8, r0, lsl #31]!
2000bec0:	e3fff803 	mvns	pc, #196608	; 0x30000
2000bec4:	000004c3 	andeq	r0, r0, r3, asr #9
2000bec8:	3fc00000 	svccc	0x00c00000
2000becc:	fc0003ff 	stc2	3, cr0, [r0], {255}	; 0xff
2000bed0:	0481f3ff 	streq	pc, [r1], #1023	; 0x3ff
2000bed4:	c0000000 	andgt	r0, r0, r0
2000bed8:	03bfffc0 			; <UNDEFINED> instruction: 0x03bfffc0
2000bedc:	f9fffc00 			; <UNDEFINED> instruction: 0xf9fffc00
2000bee0:	00000081 	andeq	r0, r0, r1, lsl #1
2000bee4:	ffe0c000 			; <UNDEFINED> instruction: 0xffe0c000
2000bee8:	fc00781f 	stc2	8, cr7, [r0], {31}
2000beec:	0001fcff 	strdeq	pc, [r1], -pc	; <UNPREDICTABLE>
2000bef0:	40000000 	andmi	r0, r0, r0
2000bef4:	7e07ffe0 	cdpvc	15, 0, cr15, cr7, cr0, {7}
2000bef8:	3ffffc00 	svccc	0x00fffc00
2000befc:	0000001c 	andeq	r0, r0, ip, lsl r0
2000bf00:	ffc04000 			; <UNDEFINED> instruction: 0xffc04000
2000bf04:	fc00ff07 	stc2	15, cr15, [r0], {7}
2000bf08:	007e1fff 	ldrshteq	r1, [lr], #-255	; 0xffffff01
2000bf0c:	00000000 	andeq	r0, r0, r0
2000bf10:	7f83ffc0 	svcvc	0x0083ffc0
2000bf14:	3ffe7800 	svccc	0x00fe7800
2000bf18:	000000fe 	strdeq	r0, [r0], -lr
2000bf1c:	ff800000 			; <UNDEFINED> instruction: 0xff800000
2000bf20:	63007f81 	movwvs	r7, #3969	; 0xf81
2000bf24:	00fe1ff8 	ldrshteq	r1, [lr], #248	; 0xf8
2000bf28:	00000000 	andeq	r0, r0, r0
2000bf2c:	7f803f00 	svcvc	0x00803f00
2000bf30:	1ff06700 	svcne	0x00f06700
2000bf34:	000000f6 	strdeq	r0, [r0], -r6
2000bf38:	02000000 	andeq	r0, r0, #0
2000bf3c:	4781ff80 	strmi	pc, [r1, r0, lsl #31]
2000bf40:	00660fe0 	rsbeq	r0, r6, r0, ror #31
2000bf44:	00000000 	andeq	r0, r0, r0
2000bf48:	ff83c000 			; <UNDEFINED> instruction: 0xff83c000
2000bf4c:	0e004fc0 	cdpeq	15, 0, cr4, cr0, cr0, {6}
2000bf50:	00000066 	andeq	r0, r0, r6, rrx
2000bf54:	e0000000 	and	r0, r0, r0
2000bf58:	0ff07fc3 	svceq	0x00f07fc3
2000bf5c:	00770c00 	rsbseq	r0, r7, r0, lsl #24
2000bf60:	00000000 	andeq	r0, r0, r0
2000bf64:	7fe3f000 	svcvc	0x00e3f000
2000bf68:	8c000fff 	stchi	15, cr0, [r0], {255}	; 0xff
2000bf6c:	0000007f 	andeq	r0, r0, pc, ror r0
2000bf70:	f0000000 			; <UNDEFINED> instruction: 0xf0000000
2000bf74:	0ffffff3 	svceq	0x00fffff3
2000bf78:	007f81fe 	ldrshteq	r8, [pc], #-30
2000bf7c:	00000000 	andeq	r0, r0, r0
2000bf80:	fffbe000 			; <UNDEFINED> instruction: 0xfffbe000
2000bf84:	81ff03ff 	ldrshhi	r0, [pc, #63]	; 2000bfcb <boom5_black_bits+0x21b>
2000bf88:	0000007f 	andeq	r0, r0, pc, ror r0
2000bf8c:	00000000 	andeq	r0, r0, r0
2000bf90:	00ff1ff8 	ldrshteq	r1, [pc], #248
2000bf94:	006f01ff 	strdeq	r0, [pc], #-31	; <UNPREDICTABLE>
2000bf98:	00000000 	andeq	r0, r0, r0
2000bf9c:	0ff80000 	svceq	0x00f80000
2000bfa0:	00fe001e 	rscseq	r0, lr, lr, lsl r0
2000bfa4:	00000042 	andeq	r0, r0, r2, asr #32
2000bfa8:	00000000 	andeq	r0, r0, r0
2000bfac:	001e7ff8 			; <UNDEFINED> instruction: 0x001e7ff8
2000bfb0:	004200fe 	strdeq	r0, [r2], #-14
2000bfb4:	00000000 	andeq	r0, r0, r0
2000bfb8:	fffc0000 			; <UNDEFINED> instruction: 0xfffc0000
2000bfbc:	007c003c 	rsbseq	r0, ip, ip, lsr r0
	...
2000bfc8:	007ffffc 	ldrshteq	pc, [pc], #-252	; <UNPREDICTABLE>
2000bfcc:	0000001c 	andeq	r0, r0, ip, lsl r0
2000bfd0:	00000000 	andeq	r0, r0, r0
2000bfd4:	fffe0000 			; <UNDEFINED> instruction: 0xfffe0000
2000bfd8:	000c007f 	andeq	r0, ip, pc, ror r0
2000bfdc:	00000000 	andeq	r0, r0, r0
2000bfe0:	04000000 	streq	r0, [r0], #-0
2000bfe4:	007fc07e 	rsbseq	ip, pc, lr, ror r0	; <UNPREDICTABLE>
2000bfe8:	0000000c 	andeq	r0, r0, ip
2000bfec:	00000000 	andeq	r0, r0, r0
2000bff0:	001e0000 	andseq	r0, lr, r0
2000bff4:	0000007f 	andeq	r0, r0, pc, ror r0
	...
2000c000:	1c3c1e0e 	ldcne	14, cr1, [ip], #-56	; 0xffffffc8
	...
2000c00c:	ff0c0000 			; <UNDEFINED> instruction: 0xff0c0000
2000c010:	00007c00 	andeq	r7, r0, r0, lsl #24
	...
2000c01c:	fc01ff0c 	stc2	15, cr15, [r1], {12}
	...
2000c028:	ff040000 			; <UNDEFINED> instruction: 0xff040000
2000c02c:	0000fc01 	andeq	pc, r0, r1, lsl #24
	...
2000c038:	fc01fc00 	stc2	12, cr15, [r1], {-0}
2000c03c:	00000001 	andeq	r0, r0, r1
2000c040:	00000000 	andeq	r0, r0, r0
2000c044:	f0000000 			; <UNDEFINED> instruction: 0xf0000000
2000c048:	0000f801 	andeq	pc, r0, r1, lsl #16
	...
2000c054:	9801f000 	stmdals	r1, {ip, sp, lr, pc}
	...
2000c060:	c0000000 	andgt	r0, r0, r0
2000c064:	00001000 	andeq	r1, r0, r0
	...
2000c070:	10000000 	andne	r0, r0, r0
	...

2000c0b4 <boom5_gray_bits>:
	...
2000c150:	80000000 	andhi	r0, r0, r0
	...
2000c160:	00010000 	andeq	r0, r1, r0
	...
2000c170:	00000001 	andeq	r0, r0, r1
	...
2000c188:	000e0000 	andeq	r0, lr, r0
2000c18c:	20000000 	andcs	r0, r0, r0
	...
2000c198:	00000007 	andeq	r0, r0, r7
2000c19c:	00000c00 	andeq	r0, r0, r0, lsl #24
2000c1a0:	00000000 	andeq	r0, r0, r0
2000c1a4:	00030000 	andeq	r0, r3, r0
2000c1a8:	0c000000 	stceq	0, cr0, [r0], {-0}
2000c1ac:	00000000 	andeq	r0, r0, r0
2000c1b0:	80000000 	andhi	r0, r0, r0
2000c1b4:	00000001 	andeq	r0, r0, r1
2000c1b8:	00000400 	andeq	r0, r0, r0, lsl #8
2000c1bc:	00000000 	andeq	r0, r0, r0
2000c1c0:	00058000 	andeq	r8, r5, r0
2000c1c4:	14000000 	strne	r0, [r0], #-0
2000c1c8:	00000000 	andeq	r0, r0, r0
2000c1cc:	c0000000 	andgt	r0, r0, r0
2000c1d0:	00000000 	andeq	r0, r0, r0
2000c1d4:	00000c00 	andeq	r0, r0, r0, lsl #24
	...
2000c1e0:	06000000 	streq	r0, [r0], -r0
	...
2000c1f0:	00000300 	andeq	r0, r0, r0, lsl #6
	...
2000c224:	00e80000 	rsceq	r0, r8, r0
	...
2000c234:	0000008c 	andeq	r0, r0, ip, lsl #1
2000c238:	00000008 	andeq	r0, r0, r8
2000c23c:	00000000 	andeq	r0, r0, r0
2000c240:	00060000 	andeq	r0, r6, r0
2000c244:	00080000 	andeq	r0, r8, r0
	...
2000c250:	0000003f 	andeq	r0, r0, pc, lsr r0
2000c254:	00000018 	andeq	r0, r0, r8, lsl r0
2000c258:	00000000 	andeq	r0, r0, r0
2000c25c:	000f8000 	andeq	r8, pc, r0
2000c260:	00080000 	andeq	r0, r8, r0
2000c264:	00000000 	andeq	r0, r0, r0
2000c268:	80000000 	andhi	r0, r0, r0
	...
2000c294:	00002000 	andeq	r2, r0, r0
	...
2000c2a0:	f0000000 			; <UNDEFINED> instruction: 0xf0000000
2000c2a4:	00000001 	andeq	r0, r0, r1
	...
2000c2b0:	00018000 	andeq	r8, r1, r0
	...
2000c2c0:	00000003 	andeq	r0, r0, r3
	...

2000c3b8 <boom5_light_bits>:
	...
2000c458:	00000001 	andeq	r0, r0, r1
	...
2000c490:	10000000 	andne	r0, r0, r0
	...
2000c49c:	00000008 	andeq	r0, r0, r8
2000c4a0:	00003000 	andeq	r3, r0, r0
2000c4a4:	00000000 	andeq	r0, r0, r0
2000c4a8:	000c0000 	andeq	r0, ip, r0
2000c4ac:	30000000 	andcc	r0, r0, r0
	...
2000c4b8:	00000006 	andeq	r0, r0, r6
2000c4bc:	00001800 	andeq	r1, r0, r0, lsl #16
2000c4c0:	00000000 	andeq	r0, r0, r0
2000c4c4:	00020000 	andeq	r0, r2, r0
2000c4c8:	08000000 	stmdaeq	r0, {}	; <UNPREDICTABLE>
	...
2000c538:	00000070 	andeq	r0, r0, r0, ror r0
	...
2000c544:	00780000 	rsbseq	r0, r8, r0
2000c548:	00100000 	andseq	r0, r0, r0
	...
2000c598:	0000c000 	andeq	ip, r0, r0
	...

2000c6bc <boom6_black_bits>:
	...
2000c718:	00000060 	andeq	r0, r0, r0, rrx
2000c71c:	00000000 	andeq	r0, r0, r0
2000c720:	7c000000 	stcvc	0, cr0, [r0], {-0}
2000c724:	00200000 	eoreq	r0, r0, r0
	...
2000c730:	0001fc00 	andeq	pc, r1, r0, lsl #24
2000c734:	00000020 	andeq	r0, r0, r0, lsr #32
2000c738:	00000000 	andeq	r0, r0, r0
2000c73c:	f8000000 			; <UNDEFINED> instruction: 0xf8000000
2000c740:	00200003 	eoreq	r0, r0, r3
	...
2000c74c:	0003f000 	andeq	pc, r3, r0
	...
2000c758:	607ff000 	rsbsvs	pc, pc, r0
2000c75c:	f8000006 			; <UNDEFINED> instruction: 0xf8000006
2000c760:	00000001 	andeq	r0, r0, r1
2000c764:	ff81c000 			; <UNDEFINED> instruction: 0xff81c000
2000c768:	000661ff 	strdeq	r6, [r6], -pc	; <UNPREDICTABLE>
2000c76c:	0783ff80 	streq	pc, [r3, r0, lsl #31]
2000c770:	c0000000 	andgt	r0, r0, r0
2000c774:	73ffff81 	mvnsvc	pc, #516	; 0x204
2000c778:	ffffe00e 			; <UNDEFINED> instruction: 0xffffe00e
2000c77c:	00000783 	andeq	r0, r0, r3, lsl #15
2000c780:	ff80c000 			; <UNDEFINED> instruction: 0xff80c000
2000c784:	f00ef7f8 			; <UNDEFINED> instruction: 0xf00ef7f8
2000c788:	0787ffff 			; <UNDEFINED> instruction: 0x0787ffff
2000c78c:	40000000 	andmi	r0, r0, r0
2000c790:	f7f03f80 			; <UNDEFINED> instruction: 0xf7f03f80
2000c794:	e3fff007 	mvns	pc, #7
2000c798:	00000787 	andeq	r0, r0, r7, lsl #15
2000c79c:	1f800000 	svcne	0x00800000
2000c7a0:	f007efe0 			; <UNDEFINED> instruction: 0xf007efe0
2000c7a4:	0707c1ff 			; <UNDEFINED> instruction: 0x0707c1ff
2000c7a8:	00000000 	andeq	r0, r0, r0
2000c7ac:	cfe01f80 	svcgt	0x00e01f80
2000c7b0:	c1fff003 	mvnsgt	pc, r3
2000c7b4:	00000603 	andeq	r0, r0, r3, lsl #12
2000c7b8:	1f800000 	svcne	0x00800000
2000c7bc:	f0038ff0 			; <UNDEFINED> instruction: 0xf0038ff0
2000c7c0:	04c3c1ff 	strbeq	ip, [r3], #511	; 0x1ff
2000c7c4:	00000000 	andeq	r0, r0, r0
2000c7c8:	07fc1f80 	ldrbeq	r1, [ip, r0, lsl #31]!
2000c7cc:	c1fff803 	mvnsgt	pc, r3, lsl #16
2000c7d0:	000004c3 	andeq	r0, r0, r3, asr #9
2000c7d4:	1fc00000 	svcne	0x00c00000
2000c7d8:	fc0203ff 	stc2	3, cr0, [r2], {255}	; 0xff
2000c7dc:	04c1c0ff 	strbeq	ip, [r1], #255	; 0xff
2000c7e0:	c0000000 	andgt	r0, r0, r0
2000c7e4:	03bfffc0 			; <UNDEFINED> instruction: 0x03bfffc0
2000c7e8:	f07ffc00 			; <UNDEFINED> instruction: 0xf07ffc00
2000c7ec:	00000481 	andeq	r0, r0, r1, lsl #9
2000c7f0:	ffe0c000 			; <UNDEFINED> instruction: 0xffe0c000
2000c7f4:	fc00799f 	stc2	9, cr7, [r0], {159}	; 0x9f	; <UNPREDICTABLE>
2000c7f8:	0081f87f 	addeq	pc, r1, pc, ror r8	; <UNPREDICTABLE>
2000c7fc:	40000000 	andmi	r0, r0, r0
2000c800:	7e87ffe0 	cdpvc	15, 8, cr15, cr7, cr0, {7}
2000c804:	387ffc00 	ldmdacc	pc!, {sl, fp, ip, sp, lr, pc}^	; <UNPREDICTABLE>
2000c808:	0000001c 	andeq	r0, r0, ip, lsl r0
2000c80c:	ffc04000 			; <UNDEFINED> instruction: 0xffc04000
2000c810:	fc00ff07 	stc2	15, cr15, [r0], {7}
2000c814:	007e1fff 	ldrshteq	r1, [lr], #-255	; 0xffffff01
2000c818:	40000000 	andmi	r0, r0, r0
2000c81c:	7f83ffc0 	svcvc	0x0083ffc0
2000c820:	3ffe7800 	svccc	0x00fe7800
2000c824:	000000fe 	strdeq	r0, [r0], -lr
2000c828:	ff800000 			; <UNDEFINED> instruction: 0xff800000
2000c82c:	63007f81 	movwvs	r7, #3969	; 0xf81
2000c830:	00ee1ff8 	strdeq	r1, [lr], #248	; 0xf8	; <UNPREDICTABLE>
2000c834:	00000000 	andeq	r0, r0, r0
2000c838:	7f803f00 	svcvc	0x00803f00
2000c83c:	1ff06600 	svcne	0x00f06600
2000c840:	000000e6 	andeq	r0, r0, r6, ror #1
2000c844:	07000000 	streq	r0, [r0, -r0]
2000c848:	4600ff80 	strmi	pc, [r0], -r0, lsl #31
2000c84c:	00660fe0 	rsbeq	r0, r6, r0, ror #31
2000c850:	00000000 	andeq	r0, r0, r0
2000c854:	3f83c300 	svccc	0x0083c300
2000c858:	0e004f80 	cdpeq	15, 0, cr4, cr0, cr0, {4}
2000c85c:	00000066 	andeq	r0, r0, r6, rrx
2000c860:	e3000000 	movw	r0, #0
2000c864:	0ff03fc3 	svceq	0x00f03fc3
2000c868:	007f0c00 	rsbseq	r0, pc, r0, lsl #24
2000c86c:	00000000 	andeq	r0, r0, r0
2000c870:	ffe3f300 			; <UNDEFINED> instruction: 0xffe3f300
2000c874:	8c000fff 	stchi	15, cr0, [r0], {255}	; 0xff
2000c878:	0000007f 	andeq	r0, r0, pc, ror r0
2000c87c:	f1000000 	cps	#0
2000c880:	0ffffff3 	svceq	0x00fffff3
2000c884:	007f89fe 	ldrshteq	r8, [pc], #-158
2000c888:	00000000 	andeq	r0, r0, r0
2000c88c:	3ffbe000 	svccc	0x00fbe000
2000c890:	89ff03ff 	ldmibhi	pc!, {r0, r1, r2, r3, r4, r5, r6, r7, r8, r9}^	; <UNPREDICTABLE>
2000c894:	0000007f 	andeq	r0, r0, pc, ror r0
2000c898:	80000000 	andhi	r0, r0, r0
2000c89c:	00ff1ffb 	ldrshteq	r1, [pc], #251
2000c8a0:	006f01ff 	strdeq	r0, [pc], #-31	; <UNPREDICTABLE>
2000c8a4:	00000000 	andeq	r0, r0, r0
2000c8a8:	0ff98000 	svceq	0x00f98000
2000c8ac:	00fe001e 	rscseq	r0, lr, lr, lsl r0
2000c8b0:	00000066 	andeq	r0, r0, r6, rrx
2000c8b4:	80000000 	andhi	r0, r0, r0
2000c8b8:	001e3ff8 			; <UNDEFINED> instruction: 0x001e3ff8
2000c8bc:	004200fe 	strdeq	r0, [r2], #-14
2000c8c0:	00000000 	andeq	r0, r0, r0
2000c8c4:	fffc0000 			; <UNDEFINED> instruction: 0xfffc0000
2000c8c8:	007c003c 	rsbseq	r0, ip, ip, lsr r0
2000c8cc:	00000042 	andeq	r0, r0, r2, asr #32
2000c8d0:	00000000 	andeq	r0, r0, r0
2000c8d4:	0079fffc 	ldrshteq	pc, [r9], #-252	; 0xffffff04	; <UNPREDICTABLE>
2000c8d8:	0002001c 	andeq	r0, r2, ip, lsl r0
2000c8dc:	00000000 	andeq	r0, r0, r0
2000c8e0:	fffe0000 			; <UNDEFINED> instruction: 0xfffe0000
2000c8e4:	000c007f 	andeq	r0, ip, pc, ror r0
2000c8e8:	00000002 	andeq	r0, r0, r2
2000c8ec:	04000000 	streq	r0, [r0], #-0
2000c8f0:	007fc07e 	rsbseq	ip, pc, lr, ror r0	; <UNPREDICTABLE>
2000c8f4:	0000000c 	andeq	r0, r0, ip
2000c8f8:	00000000 	andeq	r0, r0, r0
2000c8fc:	003e0400 	eorseq	r0, lr, r0, lsl #8
2000c900:	0004007f 	andeq	r0, r4, pc, ror r0
	...
2000c90c:	1c3c1e1e 	ldcne	14, cr1, [ip], #-120	; 0xffffff88
2000c910:	00000004 	andeq	r0, r0, r4
2000c914:	00000000 	andeq	r0, r0, r0
2000c918:	ff1c0000 			; <UNDEFINED> instruction: 0xff1c0000
2000c91c:	00007c00 	andeq	r7, r0, r0, lsl #24
	...
2000c928:	fc01ff1c 	stc2	15, cr15, [r1], {28}
	...
2000c934:	ff0c0000 			; <UNDEFINED> instruction: 0xff0c0000
2000c938:	0000fc01 	andeq	pc, r0, r1, lsl #24
	...
2000c944:	fc01fc08 	stc2	12, cr15, [r1], {8}
2000c948:	00000001 	andeq	r0, r0, r1
2000c94c:	00000000 	andeq	r0, r0, r0
2000c950:	f0080000 			; <UNDEFINED> instruction: 0xf0080000
2000c954:	0000f801 	andeq	pc, r0, r1, lsl #16
	...
2000c960:	d801f008 	stmdale	r1, {r3, ip, sp, lr, pc}
	...
2000c96c:	e0000000 	and	r0, r0, r0
2000c970:	00009000 	andeq	r9, r0, r0
	...
2000c97c:	90006000 	andls	r6, r0, r0
	...
2000c988:	40000000 	andmi	r0, r0, r0
2000c98c:	00001000 	andeq	r1, r0, r0
	...
2000c998:	00004000 	andeq	r4, r0, r0
	...

2000c9c0 <boom6_gray_bits>:
	...
2000ca5c:	80000000 	andhi	r0, r0, r0
	...
2000ca6c:	00008000 	andeq	r8, r0, r0
	...
2000ca78:	80000000 	andhi	r0, r0, r0
2000ca7c:	00000001 	andeq	r0, r0, r1
	...
2000ca88:	00010007 	andeq	r0, r1, r7
	...
2000ca94:	0008c000 	andeq	ip, r8, r0
2000ca98:	1c000000 	stcne	0, cr0, [r0], {-0}
2000ca9c:	00000000 	andeq	r0, r0, r0
2000caa0:	e0000000 	and	r0, r0, r0
2000caa4:	00000018 	andeq	r0, r0, r8, lsl r0
2000caa8:	00002600 	andeq	r2, r0, r0, lsl #12
2000caac:	00000000 	andeq	r0, r0, r0
2000cab0:	00136000 	andseq	r6, r3, r0
2000cab4:	2e000000 	cdpcs	0, 0, cr0, cr0, cr0, {0}
2000cab8:	00000000 	andeq	r0, r0, r0
2000cabc:	e0000000 	and	r0, r0, r0
2000cac0:	0000000f 	andeq	r0, r0, pc
2000cac4:	00002600 	andeq	r2, r0, r0, lsl #12
2000cac8:	00000000 	andeq	r0, r0, r0
2000cacc:	0003e000 	andeq	lr, r3, r0
2000cad0:	26000000 	strcs	r0, [r0], -r0
2000cad4:	00000000 	andeq	r0, r0, r0
2000cad8:	e0000000 	and	r0, r0, r0
2000cadc:	00000000 	andeq	r0, r0, r0
2000cae0:	00003300 	andeq	r3, r0, r0, lsl #6
	...
2000caec:	09800000 	stmibeq	r0, {}	; <UNPREDICTABLE>
	...
2000cafc:	00000780 	andeq	r0, r0, r0, lsl #15
	...
2000cb08:	07800000 	streq	r0, [r0, r0]
	...
2000cb24:	000000f0 	strdeq	r0, [r0], -r0	; <UNPREDICTABLE>
	...
2000cb30:	008c0000 	addeq	r0, ip, r0
2000cb34:	00100000 	andseq	r0, r0, r0
	...
2000cb40:	00000106 	andeq	r0, r0, r6, lsl #2
2000cb44:	00000008 	andeq	r0, r0, r8
2000cb48:	00000000 	andeq	r0, r0, r0
2000cb4c:	01630000 	cmneq	r3, r0
2000cb50:	00080000 	andeq	r0, r8, r0
2000cb54:	00000000 	andeq	r0, r0, r0
2000cb58:	c0000000 	andgt	r0, r0, r0
2000cb5c:	0000007f 	andeq	r0, r0, pc, ror r0
2000cb60:	00000018 	andeq	r0, r0, r8, lsl r0
2000cb64:	00000000 	andeq	r0, r0, r0
2000cb68:	000fc000 	andeq	ip, pc, r0
	...
2000cb90:	c0000000 	andgt	r0, r0, r0
	...
2000cba0:	00002000 	andeq	r2, r0, r0
	...
2000cbac:	70000000 	andvc	r0, r0, r0
	...
2000cbbc:	0001c000 	andeq	ip, r1, r0
	...
2000cbcc:	00000003 	andeq	r0, r0, r3
	...
2000cbd8:	00060000 	andeq	r0, r6, r0
	...

2000ccc4 <boom6_light_bits>:
	...
2000cd64:	00000001 	andeq	r0, r0, r1
	...
2000cd70:	00010000 	andeq	r0, r1, r0
	...
2000cd98:	00070000 	andeq	r0, r7, r0
	...
2000cda8:	00000007 	andeq	r0, r0, r7
2000cdac:	00001800 	andeq	r1, r0, r0, lsl #16
2000cdb0:	00000000 	andeq	r0, r0, r0
2000cdb4:	000c8000 	andeq	r8, ip, r0
2000cdb8:	10000000 	andne	r0, r0, r0
	...
2000cdc8:	00001800 	andeq	r1, r0, r0, lsl #16
	...
2000cdd4:	18000000 	stmdane	r0, {}	; <UNPREDICTABLE>
	...
2000cde4:	00000c00 	andeq	r0, r0, r0, lsl #24
	...
2000cdf0:	06000000 	streq	r0, [r0], -r0
	...
2000ce34:	00700000 	rsbseq	r0, r0, r0
	...
2000ce44:	000000f8 	strdeq	r0, [r0], -r8
2000ce48:	00000010 	andeq	r0, r0, r0, lsl r0
2000ce4c:	00000000 	andeq	r0, r0, r0
2000ce50:	009c0000 	addseq	r0, ip, r0
2000ce54:	00100000 	andseq	r0, r0, r0
	...
2000cea4:	0000c000 	andeq	ip, r0, r0
	...
2000ceb0:	80000000 	andhi	r0, r0, r0
2000ceb4:	00000001 	andeq	r0, r0, r1
	...

2000cfc8 <firstTime.4114>:
2000cfc8:	00000001 	andeq	r0, r0, r1

2000cfcc <indoors_black_bits>:
2000cfcc:	00000100 	andeq	r0, r0, r0, lsl #2
	...
2000cfdc:	00000100 	andeq	r0, r0, r0, lsl #2
	...
2000cfec:	00000100 	andeq	r0, r0, r0, lsl #2
	...
2000cffc:	00000100 	andeq	r0, r0, r0, lsl #2
	...
2000d00c:	00000100 	andeq	r0, r0, r0, lsl #2
	...
2000d01c:	00000100 	andeq	r0, r0, r0, lsl #2
	...
2000d02c:	00000280 	andeq	r0, r0, r0, lsl #5
	...
2000d03c:	00000440 	andeq	r0, r0, r0, asr #8
	...
2000d04c:	00002aa8 	andeq	r2, r0, r8, lsr #21
	...
2000d05c:	00001290 	muleq	r0, r0, r2
	...
2000d06c:	00002c68 	andeq	r2, r0, r8, ror #24
	...
2000d07c:	00002008 	andeq	r2, r0, r8
	...
2000d08c:	000027c8 	andeq	r2, r0, r8, asr #15
	...
2000d09c:	00001ff0 	strdeq	r1, [r0], -r0
	...
2000d0ac:	00000d60 	andeq	r0, r0, r0, ror #26
	...
2000d11c:	f7fbfe00 			; <UNDEFINED> instruction: 0xf7fbfe00
2000d120:	7fbfdfef 	svcvc	0x00bfdfef
2000d124:	fbfdfeff 	blx	1ff8cd2a <startup-0x732d6>
2000d128:	00ff703f 	rscseq	r7, pc, pc, lsr r0	; <UNPREDICTABLE>
2000d12c:	0c060200 	sfmeq	f0, 4, [r6], {-0}
2000d130:	c0603018 	rsbgt	r3, r0, r8, lsl r0
2000d134:	06030180 	streq	r0, [r3], -r0, lsl #3
2000d138:	0080d02c 	addeq	sp, r0, ip, lsr #32
2000d13c:	0c060200 	sfmeq	f0, 4, [r6], {-0}
2000d140:	c0603018 	rsbgt	r3, r0, r8, lsl r0
2000d144:	06030180 	streq	r0, [r3], -r0, lsl #3
2000d148:	0080d02c 	addeq	sp, r0, ip, lsr #32
2000d14c:	fffffe00 			; <UNDEFINED> instruction: 0xfffffe00
2000d150:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
2000d154:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
2000d158:	00ffdfef 	rscseq	sp, pc, pc, ror #31
	...
2000d168:	000050e8 	andeq	r5, r0, r8, ror #1
	...
2000d178:	00005fe8 	andeq	r5, r0, r8, ror #31
	...
2000d188:	00005028 	andeq	r5, r0, r8, lsr #32
	...
2000d198:	00005028 	andeq	r5, r0, r8, lsr #32
	...
2000d1a8:	00005fe8 	andeq	r5, r0, r8, ror #31
	...
2000d1b8:	03f050e8 	mvnseq	r5, #232	; 0xe8
	...
2000d1c8:	0c0c5fe8 	stceq	15, cr5, [ip], {232}	; 0xe8
	...
2000d1d8:	10025028 	andne	r5, r2, r8, lsr #32
	...
2000d1e8:	13fa5028 	mvnsne	r5, #40	; 0x28
	...
2000d1f8:	100a5fe8 	andne	r5, sl, r8, ror #31
	...
2000d208:	100a50e8 	andne	r5, sl, r8, ror #1
	...
2000d218:	100a5fe8 	andne	r5, sl, r8, ror #31
	...
2000d228:	100a5028 	andne	r5, sl, r8, lsr #32
	...
2000d238:	100a5028 	andne	r5, sl, r8, lsr #32
	...
2000d248:	100a5fe8 	andne	r5, sl, r8, ror #31
	...
2000d258:	100a50e8 	andne	r5, sl, r8, ror #1
	...
2000d268:	100a5ee8 	andne	r5, sl, r8, ror #29
	...
2000d278:	100a5028 	andne	r5, sl, r8, lsr #32
	...
2000d288:	100a5028 	andne	r5, sl, r8, lsr #32
	...
2000d298:	10025fe8 	andne	r5, r2, r8, ror #31
	...
2000d2a8:	0ffc50e8 	svceq	0x00fc50e8
	...
2000d2b8:	00005fe8 	andeq	r5, r0, r8, ror #31
	...
2000d2c8:	00005028 	andeq	r5, r0, r8, lsr #32
	...
2000d2d8:	00005028 	andeq	r5, r0, r8, lsr #32
	...
2000d2e8:	00005fe8 	andeq	r5, r0, r8, ror #31
	...
2000d2f8:	000050e8 	andeq	r5, r0, r8, ror #1
	...
2000d308:	00005fe8 	andeq	r5, r0, r8, ror #31
	...
2000d318:	00007028 	andeq	r7, r0, r8, lsr #32
	...
2000d328:	00007028 	andeq	r7, r0, r8, lsr #32
	...
2000d338:	00007038 	andeq	r7, r0, r8, lsr r0
2000d33c:	f7fbfdfe 			; <UNDEFINED> instruction: 0xf7fbfdfe
2000d340:	7fbfdfef 	svcvc	0x00bfdfef
2000d344:	fbfdfeff 	blx	1ff8cf4a <startup-0x730b6>
2000d348:	bfbfeff7 	svclt	0x00bfeff7
2000d34c:	0c060301 	stceq	3, cr0, [r6], {1}
2000d350:	c0603018 	rsbgt	r3, r0, r8, lsl r0
2000d354:	06030180 	streq	r0, [r3], -r0, lsl #3
2000d358:	6030180c 	eorsvs	r1, r0, ip, lsl #16
2000d35c:	0c060301 	stceq	3, cr0, [r6], {1}
2000d360:	c0603018 	rsbgt	r3, r0, r8, lsl r0
2000d364:	06030180 	streq	r0, [r3], -r0, lsl #3
2000d368:	6030180c 	eorsvs	r1, r0, ip, lsl #16
2000d36c:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
2000d370:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
2000d374:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
2000d378:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
2000d37c:	c0603018 	rsbgt	r3, r0, r8, lsl r0
2000d380:	06030180 	streq	r0, [r3], -r0, lsl #3
2000d384:	6030180c 	eorsvs	r1, r0, ip, lsl #16
2000d388:	030180c0 	movweq	r8, #4288	; 0x10c0
2000d38c:	c0603018 	rsbgt	r3, r0, r8, lsl r0
2000d390:	06030180 	streq	r0, [r3], -r0, lsl #3
2000d394:	6030180c 	eorsvs	r1, r0, ip, lsl #16
2000d398:	030180c0 	movweq	r8, #4288	; 0x10c0
2000d39c:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
2000d3a0:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
2000d3a4:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
2000d3a8:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
2000d3ac:	030180c0 	movweq	r8, #4288	; 0x10c0
2000d3b0:	30180c06 	andscc	r0, r8, r6, lsl #24
2000d3b4:	0180c060 	orreq	ip, r0, r0, rrx
2000d3b8:	180c0603 	stmdane	ip, {r0, r1, r9, sl}
2000d3bc:	030180c0 	movweq	r8, #4288	; 0x10c0
2000d3c0:	30180c06 	andscc	r0, r8, r6, lsl #24
2000d3c4:	0180c060 	orreq	ip, r0, r0, rrx
2000d3c8:	180c0603 	stmdane	ip, {r0, r1, r9, sl}

2000d3cc <indoors_gray_bits>:
	...
2000d42c:	00001110 	andeq	r1, r0, r0, lsl r1
	...
2000d43c:	00001090 	muleq	r0, r0, r0
	...
2000d46c:	00000390 	muleq	r0, r0, r3
	...
2000d47c:	00001340 	andeq	r1, r0, r0, asr #6
	...
2000d48c:	00000830 	andeq	r0, r0, r0, lsr r8
	...
2000d51c:	08040000 	stmdaeq	r4, {}	; <UNPREDICTABLE>
2000d520:	80402010 	subhi	r2, r0, r0, lsl r0
2000d524:	04020100 	streq	r0, [r2], #-256	; 0xffffff00
2000d528:	00008000 	andeq	r8, r0, r0
2000d52c:	b0582c00 	subslt	r2, r8, r0, lsl #24
2000d530:	0582c160 	streq	ip, [r2, #352]	; 0x160
2000d534:	582c160b 	stmdapl	ip!, {r0, r1, r3, r9, sl, ip}
2000d538:	010b0000 	mrseq	r0, (UNDEF: 11)
2000d53c:	71b8dc00 			; <UNDEFINED> instruction: 0x71b8dc00
2000d540:	1b8dc6e3 	blne	1e37f0d4 <startup-0x1c80f2c>
2000d544:	b8dc6e37 	ldmlt	ip, {r0, r1, r2, r4, r5, r9, sl, fp, sp, lr}^
2000d548:	01370001 	teqeq	r7, r1
	...
2000d558:	01000000 	mrseq	r0, (UNDEF: 0)
2000d55c:	fffff000 			; <UNDEFINED> instruction: 0xfffff000
2000d560:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
2000d564:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
2000d568:	01ff8007 	mvnseq	r8, r7
	...
2000d578:	00008000 	andeq	r8, r0, r0
	...
2000d588:	00008180 	andeq	r8, r0, r0, lsl #3
	...
2000d598:	00008180 	andeq	r8, r0, r0, lsl #3
	...
2000d5a8:	00008000 	andeq	r8, r0, r0
	...
2000d5b8:	00008000 	andeq	r8, r0, r0
	...
2000d5c8:	00008000 	andeq	r8, r0, r0
	...
2000d5d8:	00008180 	andeq	r8, r0, r0, lsl #3
	...
2000d5e8:	20008180 	andcs	r8, r0, r0, lsl #3
	...
2000d5f8:	20808000 	addcs	r8, r0, r0
	...
2000d608:	20c08100 	sbccs	r8, r0, r0, lsl #2
	...
2000d618:	21e08000 	mvncs	r8, r0
	...
2000d628:	2bf08180 	blcs	1fc2dc30 <startup-0x3d23d0>
	...
2000d638:	25c08180 	strbcs	r8, [r0, #384]	; 0x180
	...
2000d648:	29e08000 	stmibcs	r0!, {pc}^
	...
2000d658:	2bc08100 	blcs	1f02da60 <startup-0xfd25a0>
	...
2000d668:	20c08110 	sbccs	r8, r0, r0, lsl r1
	...
2000d678:	28e0a190 	stmiacs	r0!, {r4, r7, r8, sp, pc}^
	...
2000d688:	2bf08180 	blcs	1fc2dc90 <startup-0x3d2370>
	...
2000d698:	28008000 	stmdacs	r0, {pc}
	...
2000d6a8:	3000a010 	andcc	sl, r0, r0, lsl r0
	...
2000d6b8:	1fc0a000 	svcne	0x00c0a000
	...
2000d6c8:	0000a180 	andeq	sl, r0, r0, lsl #3
	...
2000d6d8:	00008190 	muleq	r0, r0, r1
	...
2000d6e8:	00008010 	andeq	r8, r0, r0, lsl r0
	...
2000d6f8:	00008110 	andeq	r8, r0, r0, lsl r1
	...
2000d708:	0000a010 	andeq	sl, r0, r0, lsl r0
	...
2000d718:	00008190 	muleq	r0, r0, r1
	...
2000d728:	00008190 	muleq	r0, r0, r1
	...
2000d738:	00008180 	andeq	r8, r0, r0, lsl #3
2000d73c:	08040201 	stmdaeq	r4, {r0, r9}
2000d740:	80402010 	subhi	r2, r0, r0, lsl r0
2000d744:	04020100 	streq	r0, [r2], #-256	; 0xffffff00
2000d748:	40401008 	submi	r1, r0, r8
2000d74c:	b0582c16 	subslt	r2, r8, r6, lsl ip
2000d750:	0582c160 	streq	ip, [r2, #352]	; 0x160
2000d754:	582c160b 	stmdapl	ip!, {r0, r1, r3, r9, sl, ip}
2000d758:	82c160b0 	sbchi	r6, r1, #176	; 0xb0
2000d75c:	71b8dc6e 			; <UNDEFINED> instruction: 0x71b8dc6e
2000d760:	1b8dc6e3 	blne	1e37f2f4 <startup-0x1c80d0c>
2000d764:	b8dc6e37 	ldmlt	ip, {r0, r1, r2, r4, r5, r9, sl, fp, sp, lr}^
2000d768:	8dc6e371 	stclhi	3, cr14, [r6, #452]	; 0x1c4
	...
2000d77c:	0582c160 	streq	ip, [r2, #352]	; 0x160
2000d780:	582c160b 	stmdapl	ip!, {r0, r1, r3, r9, sl, ip}
2000d784:	82c160b0 	sbchi	r6, r1, #176	; 0xb0
2000d788:	2c160b05 			; <UNDEFINED> instruction: 0x2c160b05
2000d78c:	1b8dc6e3 	blne	1e37f320 <startup-0x1c80ce0>
2000d790:	b8dc6e37 	ldmlt	ip, {r0, r1, r2, r4, r5, r9, sl, fp, sp, lr}^
2000d794:	8dc6e371 	stclhi	3, cr14, [r6, #452]	; 0x1c4
2000d798:	dc6e371b 	stclle	7, cr3, [lr], #-108	; 0xffffff94
	...
2000d7ac:	2c160b05 			; <UNDEFINED> instruction: 0x2c160b05
2000d7b0:	c160b058 	qdsubgt	fp, r8, r0
2000d7b4:	160b0582 	strne	r0, [fp], -r2, lsl #11
2000d7b8:	60b0582c 	adcsvs	r5, r0, ip, lsr #16
2000d7bc:	dc6e371b 	stclle	7, cr3, [lr], #-108	; 0xffffff94
2000d7c0:	c6e371b8 			; <UNDEFINED> instruction: 0xc6e371b8
2000d7c4:	6e371b8d 	vaddvs.f64	d1, d23, d13
2000d7c8:	e371b8dc 	cmn	r1, #220, 16	; 0xdc0000

2000d7cc <indoors_light_bits>:
	...
2000d80c:	00001010 	andeq	r1, r0, r0, lsl r0
	...
2000d83c:	00000300 	andeq	r0, r0, r0, lsl #6
	...
2000d84c:	00001110 	andeq	r1, r0, r0, lsl r1
	...
2000d85c:	00000100 	andeq	r0, r0, r0, lsl #2
	...
2000d86c:	00001000 	andeq	r1, r0, r0
	...
2000d87c:	00000cb0 			; <UNDEFINED> instruction: 0x00000cb0
	...
2000d88c:	00001000 	andeq	r1, r0, r0
	...
2000d92c:	43a1d000 			; <UNDEFINED> instruction: 0x43a1d000
2000d930:	3a1d0e87 	bcc	20751354 <firstTime.4040+0x741f10>
2000d934:	a1d0e874 	bicsge	lr, r0, r4, ror r8
2000d938:	00742013 	rsbseq	r2, r4, r3, lsl r0
2000d93c:	82412000 	subhi	r2, r1, #0
2000d940:	24120904 	ldrcs	r0, [r2], #-2308	; 0xfffff6fc
2000d944:	41209048 			; <UNDEFINED> instruction: 0x41209048
2000d948:	00482012 	subeq	r2, r8, r2, lsl r0
	...
2000d958:	00002010 	andeq	r2, r0, r0, lsl r0
	...
2000d968:	00002f10 	andeq	r2, r0, r0, lsl pc
	...
2000d978:	00002010 	andeq	r2, r0, r0, lsl r0
	...
2000d988:	00002010 	andeq	r2, r0, r0, lsl r0
	...
2000d998:	00002010 	andeq	r2, r0, r0, lsl r0
	...
2000d9a8:	00002010 	andeq	r2, r0, r0, lsl r0
	...
2000d9b8:	00002f10 	andeq	r2, r0, r0, lsl pc
	...
2000d9c8:	00002010 	andeq	r2, r0, r0, lsl r0
	...
2000d9d8:	00002010 	andeq	r2, r0, r0, lsl r0
	...
2000d9e8:	00002010 	andeq	r2, r0, r0, lsl r0
	...
2000d9f8:	03702010 	cmneq	r0, #16
	...
2000da08:	03302e10 	teqeq	r0, #16, 28	; 0x100
	...
2000da18:	02102010 	andseq	r2, r0, #16
	...
2000da28:	00002010 	andeq	r2, r0, r0, lsl r0
	...
2000da38:	02302010 	eorseq	r2, r0, #16
	...
2000da48:	02102010 	andseq	r2, r0, #16
	...
2000da58:	00302e10 	eorseq	r2, r0, r0, lsl lr
	...
2000da68:	03302000 	teqeq	r0, #0
	...
2000da78:	03100000 	tsteq	r0, #0
	...
2000da88:	00002010 	andeq	r2, r0, r0, lsl r0
	...
2000da98:	00002010 	andeq	r2, r0, r0, lsl r0
	...
2000daa8:	00000f00 	andeq	r0, r0, r0, lsl #30
	...
2000dab8:	00000010 	andeq	r0, r0, r0, lsl r0
	...
2000dac8:	00000010 	andeq	r0, r0, r0, lsl r0
	...
2000dad8:	00002000 	andeq	r2, r0, r0
	...
2000dae8:	00002000 	andeq	r2, r0, r0
	...
2000daf8:	00002e00 	andeq	r2, r0, r0, lsl #28
	...
2000db4c:	43a1d0e8 			; <UNDEFINED> instruction: 0x43a1d0e8
2000db50:	3a1d0e87 	bcc	20751574 <firstTime.4040+0x742130>
2000db54:	a1d0e874 	bicsge	lr, r0, r4, ror r8
2000db58:	1d0e8743 	stcne	7, cr8, [lr, #-268]	; 0xfffffef4
2000db5c:	82412090 	subhi	r2, r1, #144	; 0x90
2000db60:	24120904 	ldrcs	r0, [r2], #-2308	; 0xfffff6fc
2000db64:	41209048 			; <UNDEFINED> instruction: 0x41209048
2000db68:	12090482 	andne	r0, r9, #-2113929216	; 0x82000000
	...
2000db7c:	3a1d0e87 	bcc	207515a0 <firstTime.4040+0x74215c>
2000db80:	a1d0e874 	bicsge	lr, r0, r4, ror r8
2000db84:	1d0e8743 	stcne	7, cr8, [lr, #-268]	; 0xfffffef4
2000db88:	d0e8743a 	rscle	r7, r8, sl, lsr r4
2000db8c:	24120904 	ldrcs	r0, [r2], #-2308	; 0xfffff6fc
2000db90:	41209048 			; <UNDEFINED> instruction: 0x41209048
2000db94:	12090482 	andne	r0, r9, #-2113929216	; 0x82000000
2000db98:	20904824 	addscs	r4, r0, r4, lsr #16
	...
2000dbac:	d0e8743a 	rscle	r7, r8, sl, lsr r4
2000dbb0:	0e8743a1 	cdpeq	3, 8, cr4, cr7, cr1, {5}
2000dbb4:	e8743a1d 	ldmda	r4!, {r0, r2, r3, r4, r9, fp, ip, sp}^
2000dbb8:	8743a1d0 			; <UNDEFINED> instruction: 0x8743a1d0
2000dbbc:	20904824 	addscs	r4, r0, r4, lsr #16
2000dbc0:	09048241 	stmdbeq	r4, {r0, r6, r9, pc}
2000dbc4:	90482412 	subls	r2, r8, r2, lsl r4
2000dbc8:	04824120 	streq	r4, [r2], #288	; 0x120

2000dbcc <firstTime.4040>:
2000dbcc:	00000001 	andeq	r0, r0, r1

2000dbd0 <indoors2_black_bits>:
2000dbd0:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
2000dbd4:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
2000dbd8:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
2000dbdc:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
2000dbe0:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
2000dbe4:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
2000dbe8:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
2000dbec:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
2000dbf0:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
2000dbf4:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
2000dbf8:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
2000dbfc:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
2000dc00:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
2000dc04:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
2000dc08:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
2000dc0c:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
2000dc10:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
2000dc14:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
2000dc18:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
2000dc1c:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
2000dc20:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
2000dc24:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
2000dc28:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
2000dc2c:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
2000dc30:	ffffeeef 			; <UNDEFINED> instruction: 0xffffeeef
2000dc34:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
2000dc38:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
2000dc3c:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
2000dc40:	ffffec6f 			; <UNDEFINED> instruction: 0xffffec6f
2000dc44:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
2000dc48:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
2000dc4c:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
2000dc50:	ffffeaaf 			; <UNDEFINED> instruction: 0xffffeaaf
2000dc54:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
2000dc58:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
2000dc5c:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
2000dc60:	fffff29f 			; <UNDEFINED> instruction: 0xfffff29f
2000dc64:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
2000dc68:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
2000dc6c:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
2000dc70:	ffffec6f 			; <UNDEFINED> instruction: 0xffffec6f
2000dc74:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
2000dc78:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
2000dc7c:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
2000dc80:	ffffe00f 			; <UNDEFINED> instruction: 0xffffe00f
2000dc84:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
2000dc88:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
2000dc8c:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
2000dc90:	ffffe7cf 			; <UNDEFINED> instruction: 0xffffe7cf
2000dc94:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
2000dc98:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
2000dc9c:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
2000dca0:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
2000dca4:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
2000dca8:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
2000dcac:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
2000dcb0:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
2000dcb4:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
2000dcb8:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
2000dcbc:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
2000dcc0:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
2000dcc4:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
2000dcc8:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
2000dccc:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
2000dcd0:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
2000dcd4:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
2000dcd8:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
2000dcdc:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
2000dce0:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
2000dce4:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
2000dce8:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
2000dcec:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
2000dcf0:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
2000dcf4:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
2000dcf8:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
2000dcfc:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
2000dd00:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
2000dd04:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
2000dd08:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
2000dd0c:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
2000dd10:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
2000dd14:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
2000dd18:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
2000dd1c:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
2000dd20:	f7fbffff 			; <UNDEFINED> instruction: 0xf7fbffff
2000dd24:	7fbfdfef 	svcvc	0x00bfdfef
2000dd28:	fbfdfeff 	blx	1ff8d92e <startup-0x726d2>
2000dd2c:	ffff7fff 			; <UNDEFINED> instruction: 0xffff7fff
2000dd30:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
2000dd34:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
2000dd38:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
2000dd3c:	feffdfef 	cdp2	15, 15, cr13, cr15, cr15, {7}
2000dd40:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
2000dd44:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
2000dd48:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
2000dd4c:	feffdfef 	cdp2	15, 15, cr13, cr15, cr15, {7}
2000dd50:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
2000dd54:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
2000dd58:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
2000dd5c:	feffdfef 	cdp2	15, 15, cr13, cr15, cr15, {7}
2000dd60:	00000fff 	strdeq	r0, [r0], -pc	; <UNPREDICTABLE>
	...
2000dd6c:	fe0050e8 	cdp2	0, 0, cr5, cr0, cr8, {7}
2000dd70:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
2000dd74:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
2000dd78:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
2000dd7c:	ffff5fef 			; <UNDEFINED> instruction: 0xffff5fef
2000dd80:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
2000dd84:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
2000dd88:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
2000dd8c:	ffff502f 			; <UNDEFINED> instruction: 0xffff502f
2000dd90:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
2000dd94:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
2000dd98:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
2000dd9c:	ffff502f 			; <UNDEFINED> instruction: 0xffff502f
2000dda0:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
2000dda4:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
2000dda8:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
2000ddac:	ffff5fef 			; <UNDEFINED> instruction: 0xffff5fef
2000ddb0:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
2000ddb4:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
2000ddb8:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
2000ddbc:	ffff50ef 			; <UNDEFINED> instruction: 0xffff50ef
2000ddc0:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
2000ddc4:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
2000ddc8:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
2000ddcc:	ec0d5fef 	stc	15, cr5, [sp], {239}	; 0xef
2000ddd0:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
2000ddd4:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
2000ddd8:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
2000dddc:	f003502f 			; <UNDEFINED> instruction: 0xf003502f
2000dde0:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
2000dde4:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
2000dde8:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
2000ddec:	d3fb502f 	mvnsle	r5, #47	; 0x2f
2000ddf0:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
2000ddf4:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
2000ddf8:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
2000ddfc:	d00b5fef 	andle	r5, fp, pc, ror #31
2000de00:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
2000de04:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
2000de08:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
2000de0c:	d00b50ef 	andle	r5, fp, pc, ror #1
2000de10:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
2000de14:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
2000de18:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
2000de1c:	d00b5fef 	andle	r5, fp, pc, ror #31
2000de20:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
2000de24:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
2000de28:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
2000de2c:	d00b502f 	andle	r5, fp, pc, lsr #32
2000de30:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
2000de34:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
2000de38:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
2000de3c:	d00b502f 	andle	r5, fp, pc, lsr #32
2000de40:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
2000de44:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
2000de48:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
2000de4c:	d00b5fef 	andle	r5, fp, pc, ror #31
2000de50:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
2000de54:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
2000de58:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
2000de5c:	d00b50ef 	andle	r5, fp, pc, ror #1
2000de60:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
2000de64:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
2000de68:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
2000de6c:	d00b5eef 	andle	r5, fp, pc, ror #29
2000de70:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
2000de74:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
2000de78:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
2000de7c:	d00b502f 	andle	r5, fp, pc, lsr #32
2000de80:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
2000de84:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
2000de88:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
2000de8c:	d00b502f 	andle	r5, fp, pc, lsr #32
2000de90:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
2000de94:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
2000de98:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
2000de9c:	d0035fef 	andle	r5, r3, pc, ror #31
2000dea0:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
2000dea4:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
2000dea8:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
2000deac:	cffd50ef 	svcgt	0x00fd50ef
2000deb0:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
2000deb4:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
2000deb8:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
2000debc:	e03f5fef 	eors	r5, pc, pc, ror #31
2000dec0:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
2000dec4:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
2000dec8:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
2000decc:	ffff502f 			; <UNDEFINED> instruction: 0xffff502f
2000ded0:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
2000ded4:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
2000ded8:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
2000dedc:	ffff502f 			; <UNDEFINED> instruction: 0xffff502f
2000dee0:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
2000dee4:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
2000dee8:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
2000deec:	ffff5fef 			; <UNDEFINED> instruction: 0xffff5fef
2000def0:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
2000def4:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
2000def8:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
2000defc:	ffff50ef 			; <UNDEFINED> instruction: 0xffff50ef
2000df00:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
2000df04:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
2000df08:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
2000df0c:	ffff5fef 			; <UNDEFINED> instruction: 0xffff5fef
2000df10:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
2000df14:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
2000df18:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
2000df1c:	ffff7e6f 			; <UNDEFINED> instruction: 0xffff7e6f
2000df20:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
2000df24:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
2000df28:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
2000df2c:	ffff7e6f 			; <UNDEFINED> instruction: 0xffff7e6f
2000df30:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
2000df34:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
2000df38:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
2000df3c:	ffff7e7f 			; <UNDEFINED> instruction: 0xffff7e7f
2000df40:	f7fbfdfe 			; <UNDEFINED> instruction: 0xf7fbfdfe
2000df44:	7fbfdfef 	svcvc	0x00bfdfef
2000df48:	fbfdfeff 	blx	1ff8db4e <startup-0x724b2>
2000df4c:	bfbfeff7 	svclt	0x00bfeff7
2000df50:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
2000df54:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
2000df58:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
2000df5c:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
2000df60:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
2000df64:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
2000df68:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
2000df6c:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
2000df70:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
2000df74:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
2000df78:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
2000df7c:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
2000df80:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
2000df84:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
2000df88:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
2000df8c:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
2000df90:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
2000df94:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
2000df98:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
2000df9c:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
2000dfa0:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
2000dfa4:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
2000dfa8:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
2000dfac:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
2000dfb0:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
2000dfb4:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
2000dfb8:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
2000dfbc:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
2000dfc0:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
2000dfc4:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
2000dfc8:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
2000dfcc:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff

2000dfd0 <indoors2_gray_bits>:
	...
2000e030:	00001110 	andeq	r1, r0, r0, lsl r1
	...
2000e040:	00001090 	muleq	r0, r0, r0
	...
2000e070:	00000390 	muleq	r0, r0, r3
	...
2000e080:	00001340 	andeq	r1, r0, r0, asr #6
	...
2000e090:	00000830 	andeq	r0, r0, r0, lsr r8
	...
2000e120:	08040000 	stmdaeq	r4, {}	; <UNPREDICTABLE>
2000e124:	80402010 	subhi	r2, r0, r0, lsl r0
2000e128:	04020100 	streq	r0, [r2], #-256	; 0xffffff00
2000e12c:	00008000 	andeq	r8, r0, r0
	...
2000e13c:	01000000 	mrseq	r0, (UNDEF: 0)
	...
2000e14c:	01000000 	mrseq	r0, (UNDEF: 0)
	...
2000e15c:	01000000 	mrseq	r0, (UNDEF: 0)
2000e160:	fffff000 			; <UNDEFINED> instruction: 0xfffff000
2000e164:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
2000e168:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
2000e16c:	01ff8007 	mvnseq	r8, r7
	...
2000e17c:	00008000 	andeq	r8, r0, r0
	...
2000e18c:	00008180 	andeq	r8, r0, r0, lsl #3
	...
2000e19c:	00008180 	andeq	r8, r0, r0, lsl #3
	...
2000e1ac:	00008000 	andeq	r8, r0, r0
	...
2000e1bc:	00008000 	andeq	r8, r0, r0
	...
2000e1cc:	00008000 	andeq	r8, r0, r0
	...
2000e1dc:	00008180 	andeq	r8, r0, r0, lsl #3
	...
2000e1ec:	20008180 	andcs	r8, r0, r0, lsl #3
	...
2000e1fc:	20808000 	addcs	r8, r0, r0
	...
2000e20c:	20c08100 	sbccs	r8, r0, r0, lsl #2
	...
2000e21c:	21e08000 	mvncs	r8, r0
	...
2000e22c:	2bf08180 	blcs	1fc2e834 <startup-0x3d17cc>
	...
2000e23c:	25c08180 	strbcs	r8, [r0, #384]	; 0x180
	...
2000e24c:	29e08000 	stmibcs	r0!, {pc}^
	...
2000e25c:	2bc08100 	blcs	1f02e664 <startup-0xfd199c>
	...
2000e26c:	20c08110 	sbccs	r8, r0, r0, lsl r1
	...
2000e27c:	28e0a190 	stmiacs	r0!, {r4, r7, r8, sp, pc}^
	...
2000e28c:	2bf08180 	blcs	1fc2e894 <startup-0x3d176c>
	...
2000e29c:	28008000 	stmdacs	r0, {pc}
	...
2000e2ac:	3000a010 	andcc	sl, r0, r0, lsl r0
	...
2000e2bc:	1fc0a000 	svcne	0x00c0a000
	...
2000e2cc:	0000a180 	andeq	sl, r0, r0, lsl #3
	...
2000e2dc:	00008190 	muleq	r0, r0, r1
	...
2000e2ec:	00008010 	andeq	r8, r0, r0, lsl r0
	...
2000e2fc:	00008110 	andeq	r8, r0, r0, lsl r1
	...
2000e30c:	0000a010 	andeq	sl, r0, r0, lsl r0
	...
2000e31c:	00008190 	muleq	r0, r0, r1
	...
2000e32c:	00008190 	muleq	r0, r0, r1
	...
2000e33c:	00008180 	andeq	r8, r0, r0, lsl #3
2000e340:	08040201 	stmdaeq	r4, {r0, r9}
2000e344:	80402010 	subhi	r2, r0, r0, lsl r0
2000e348:	04020100 	streq	r0, [r2], #-256	; 0xffffff00
2000e34c:	40401008 	submi	r1, r0, r8
	...

2000e3d0 <indoors2_light_bits>:
	...
2000e440:	00000300 	andeq	r0, r0, r0, lsl #6
	...
2000e450:	00001110 	andeq	r1, r0, r0, lsl r1
	...
2000e460:	00000100 	andeq	r0, r0, r0, lsl #2
	...
2000e470:	00001000 	andeq	r1, r0, r0
	...
2000e480:	00000cb0 			; <UNDEFINED> instruction: 0x00000cb0
	...
2000e490:	00001000 	andeq	r1, r0, r0
	...
2000e53c:	00002010 	andeq	r2, r0, r0, lsl r0
	...
2000e54c:	00002010 	andeq	r2, r0, r0, lsl r0
	...
2000e55c:	00002010 	andeq	r2, r0, r0, lsl r0
	...
2000e56c:	00002f10 	andeq	r2, r0, r0, lsl pc
	...
2000e57c:	00002010 	andeq	r2, r0, r0, lsl r0
	...
2000e58c:	00002010 	andeq	r2, r0, r0, lsl r0
	...
2000e59c:	00002010 	andeq	r2, r0, r0, lsl r0
	...
2000e5ac:	00002010 	andeq	r2, r0, r0, lsl r0
	...
2000e5bc:	00002f10 	andeq	r2, r0, r0, lsl pc
	...
2000e5cc:	00002010 	andeq	r2, r0, r0, lsl r0
	...
2000e5dc:	00002010 	andeq	r2, r0, r0, lsl r0
	...
2000e5ec:	00002010 	andeq	r2, r0, r0, lsl r0
	...
2000e5fc:	03702010 	cmneq	r0, #16
	...
2000e60c:	03302e10 	teqeq	r0, #16, 28	; 0x100
	...
2000e61c:	02102010 	andseq	r2, r0, #16
	...
2000e62c:	00002010 	andeq	r2, r0, r0, lsl r0
	...
2000e63c:	02302010 	eorseq	r2, r0, #16
	...
2000e64c:	02102010 	andseq	r2, r0, #16
	...
2000e65c:	00302e10 	eorseq	r2, r0, r0, lsl lr
	...
2000e66c:	03302000 	teqeq	r0, #0
	...
2000e67c:	03100000 	tsteq	r0, #0
	...
2000e68c:	00002010 	andeq	r2, r0, r0, lsl r0
	...
2000e69c:	00002010 	andeq	r2, r0, r0, lsl r0
	...
2000e6ac:	00000f00 	andeq	r0, r0, r0, lsl #30
	...
2000e6bc:	00000010 	andeq	r0, r0, r0, lsl r0
	...
2000e6cc:	00000010 	andeq	r0, r0, r0, lsl r0
	...
2000e6dc:	00002000 	andeq	r2, r0, r0
	...
2000e6ec:	00002000 	andeq	r2, r0, r0
	...
2000e6fc:	00002e00 	andeq	r2, r0, r0, lsl #28
	...

2000e7d0 <firstTime.4040>:
2000e7d0:	00000001 	andeq	r0, r0, r1

2000e7d4 <trophy_black_bits>:
2000e7d4:	00d40028 	sbcseq	r0, r4, r8, lsr #32
2000e7d8:	03fe01aa 	mvnseq	r0, #-2147483606	; 0x8000002a
2000e7dc:	02220401 	eoreq	r0, r2, #16777216	; 0x1000000
2000e7e0:	02220232 	eoreq	r0, r2, #536870915	; 0x20000003
2000e7e4:	00880124 	addeq	r0, r8, r4, lsr #2
2000e7e8:	00500088 	subseq	r0, r0, r8, lsl #1
2000e7ec:	00880088 	addeq	r0, r8, r8, lsl #1
2000e7f0:	020201fc 	andeq	r0, r2, #252, 2	; 0x3f
2000e7f4:	00000202 	andeq	r0, r0, r2, lsl #4

2000e7f8 <trophy_gray_bits>:
	...
2000e800:	01000300 	mrseq	r0, LR_irq
2000e804:	01000100 	mrseq	r0, (UNDEF: 16)
2000e808:	00000080 	andeq	r0, r0, r0, lsl #1
2000e80c:	00000000 	andeq	r0, r0, r0
2000e810:	00400040 	subeq	r0, r0, r0, asr #32
2000e814:	01f00000 	mvnseq	r0, r0
2000e818:	000001e8 	andeq	r0, r0, r8, ror #3

2000e81c <trophy_light_bits>:
2000e81c:	00000000 	andeq	r0, r0, r0
2000e820:	00000050 	andeq	r0, r0, r0, asr r0
2000e824:	008800ec 	addeq	r0, r8, ip, ror #1
2000e828:	008800c0 	addeq	r0, r8, r0, asr #1
2000e82c:	00600048 	rsbeq	r0, r0, r8, asr #32
2000e830:	00200060 	eoreq	r0, r0, r0, rrx
2000e834:	00200020 	eoreq	r0, r0, r0, lsr #32
2000e838:	000c0000 	andeq	r0, ip, r0
2000e83c:	00000014 	andeq	r0, r0, r4, lsl r0

2000e840 <firstTime.4040>:
2000e840:	00000001 	andeq	r0, r0, r1

2000e844 <roger_black_bits>:
2000e844:	00000007 	andeq	r0, r0, r7
2000e848:	0e000000 	cdpeq	0, 0, cr0, cr0, cr0, {0}
2000e84c:	00000000 	andeq	r0, r0, r0
2000e850:	e0000000 	and	r0, r0, r0
2000e854:	00000007 	andeq	r0, r0, r7
2000e858:	8fc00000 	svchi	0x00c00000
2000e85c:	000000ff 	strdeq	r0, [r0], -pc	; <UNPREDICTABLE>
2000e860:	e0000000 	and	r0, r0, r0
2000e864:	00000007 	andeq	r0, r0, r7
2000e868:	fff00000 			; <UNDEFINED> instruction: 0xfff00000	; IMB
2000e86c:	000003ff 	strdeq	r0, [r0], -pc	; <UNPREDICTABLE>
2000e870:	e0000000 	and	r0, r0, r0
2000e874:	00000007 	andeq	r0, r0, r7
2000e878:	ffbe0000 			; <UNDEFINED> instruction: 0xffbe0000
2000e87c:	00000fff 	strdeq	r0, [r0], -pc	; <UNPREDICTABLE>
2000e880:	e0000000 	and	r0, r0, r0
2000e884:	00000007 	andeq	r0, r0, r7
2000e888:	c3fe0000 	mvnsgt	r0, #0
2000e88c:	00001fff 	strdeq	r1, [r0], -pc	; <UNPREDICTABLE>
2000e890:	e0000000 	and	r0, r0, r0
2000e894:	00000007 	andeq	r0, r0, r7
2000e898:	00cf0000 	sbceq	r0, pc, r0
2000e89c:	00002fff 	strdeq	r2, [r0], -pc	; <UNPREDICTABLE>
2000e8a0:	e0000000 	and	r0, r0, r0
2000e8a4:	00000007 	andeq	r0, r0, r7
2000e8a8:	800f0000 	andhi	r0, pc, r0
2000e8ac:	00007fff 	strdeq	r7, [r0], -pc	; <UNPREDICTABLE>
2000e8b0:	e0000000 	and	r0, r0, r0
2000e8b4:	00000007 	andeq	r0, r0, r7
2000e8b8:	80000000 	andhi	r0, r0, r0
2000e8bc:	00007fff 	strdeq	r7, [r0], -pc	; <UNPREDICTABLE>
2000e8c0:	e0000000 	and	r0, r0, r0
2000e8c4:	00000007 	andeq	r0, r0, r7
2000e8c8:	c0000000 	andgt	r0, r0, r0
2000e8cc:	00006fff 	strdeq	r6, [r0], -pc	; <UNPREDICTABLE>
2000e8d0:	e0000000 	and	r0, r0, r0
2000e8d4:	00000007 	andeq	r0, r0, r7
2000e8d8:	00000000 	andeq	r0, r0, r0
2000e8dc:	00007fdc 	ldrdeq	r7, [r0], -ip
2000e8e0:	e0000000 	and	r0, r0, r0
2000e8e4:	00000007 	andeq	r0, r0, r7
2000e8e8:	00000000 	andeq	r0, r0, r0
2000e8ec:	0000fff0 	strdeq	pc, [r0], -r0
2000e8f0:	e0000000 	and	r0, r0, r0
2000e8f4:	00000007 	andeq	r0, r0, r7
2000e8f8:	00000000 	andeq	r0, r0, r0
2000e8fc:	0001ffd0 	ldrdeq	pc, [r1], -r0
2000e900:	e0000000 	and	r0, r0, r0
2000e904:	00000007 	andeq	r0, r0, r7
2000e908:	00000000 	andeq	r0, r0, r0
2000e90c:	0001ffd0 	ldrdeq	pc, [r1], -r0
2000e910:	e0000000 	and	r0, r0, r0
2000e914:	00000007 	andeq	r0, r0, r7
2000e918:	00000000 	andeq	r0, r0, r0
2000e91c:	0003fff2 	strdeq	pc, [r3], -r2
2000e920:	e7000000 	str	r0, [r0, -r0]
2000e924:	00000007 	andeq	r0, r0, r7
2000e928:	00000000 	andeq	r0, r0, r0
2000e92c:	00037fa4 	andeq	r7, r3, r4, lsr #31
2000e930:	e7800000 	str	r0, [r0, r0]
2000e934:	00078f07 	andeq	r8, r7, r7, lsl #30
2000e938:	00000000 	andeq	r0, r0, r0
2000e93c:	00073d08 	andeq	r3, r7, r8, lsl #26
2000e940:	e7800000 	str	r0, [r0, r0]
2000e944:	00078f07 	andeq	r8, r7, r7, lsl #30
2000e948:	00000000 	andeq	r0, r0, r0
2000e94c:	000e0f00 	andeq	r0, lr, r0, lsl #30
2000e950:	e38000c0 	orr	r0, r0, #192	; 0xc0
2000e954:	00038e07 	andeq	r8, r3, r7, lsl #28
2000e958:	00000000 	andeq	r0, r0, r0
2000e95c:	000c0700 	andeq	r0, ip, r0, lsl #14
2000e960:	e38001e0 	orr	r0, r0, #224, 2	; 0x38
2000e964:	0003de07 	andeq	sp, r3, r7, lsl #28
2000e968:	00000000 	andeq	r0, r0, r0
2000e96c:	000c0000 	andeq	r0, ip, r0
2000e970:	e38000c0 	orr	r0, r0, #192	; 0xc0
2000e974:	38e1fc07 	stmiacc	r1!, {r0, r1, r2, sl, fp, ip, sp, lr, pc}^
2000e978:	00000006 	andeq	r0, r0, r6
2000e97c:	0e0c0000 	cdpeq	0, 0, cr0, cr12, cr0, {0}
2000e980:	e381d80e 	orr	sp, r1, #917504	; 0xe0000
2000e984:	79f0f807 	ldmibvc	r0!, {r0, r1, r2, fp, ip, sp, lr, pc}^
2000e988:	00000007 	andeq	r0, r0, r7
2000e98c:	1e040000 	cdpne	0, 0, cr0, cr4, cr0, {0}
2000e990:	e383f9cf 	orr	pc, r3, #3391488	; 0x33c000
2000e994:	73f87007 	mvnsvc	r7, #7
2000e998:	00000007 	andeq	r0, r0, r7
2000e99c:	5c000000 	stcpl	0, cr0, [r0], {-0}
2000e9a0:	e387f9e7 	orr	pc, r7, #3784704	; 0x39c000
2000e9a4:	73b87007 			; <UNDEFINED> instruction: 0x73b87007
2000e9a8:	00000007 	andeq	r0, r0, r7
2000e9ac:	fc000000 	stc2	0, cr0, [r0], {-0}
2000e9b0:	e18771e7 	orr	r7, r7, r7, ror #3
2000e9b4:	73b87007 			; <UNDEFINED> instruction: 0x73b87007
2000e9b8:	00000007 	andeq	r0, r0, r7
2000e9bc:	fc000000 	stc2	0, cr0, [r0], {-0}
2000e9c0:	e00771c7 	and	r7, r7, r7, asr #3
2000e9c4:	73b87007 			; <UNDEFINED> instruction: 0x73b87007
2000e9c8:	00000007 	andeq	r0, r0, r7
2000e9cc:	fc000000 	stc2	0, cr0, [r0], {-0}
2000e9d0:	e00771c7 	and	r7, r7, r7, asr #3
2000e9d4:	f3f87007 	vrev64.32	d23, d7
2000e9d8:	0000000f 	andeq	r0, r0, pc
2000e9dc:	b8000000 	stmdalt	r0, {}	; <UNPREDICTABLE>
2000e9e0:	e18771c3 	orr	r7, r7, r3, asr #3
2000e9e4:	e1f0f807 	mvns	pc, r7, lsl #16
2000e9e8:	0000000f 	andeq	r0, r0, pc
2000e9ec:	b8000000 	stmdalt	r0, {}	; <UNPREDICTABLE>
2000e9f0:	e3cf73c3 	bic	r7, pc, #201326595	; 0xc000003
2000e9f4:	c0e0f807 	rscgt	pc, r0, r7, lsl #16
2000e9f8:	0000000d 	andeq	r0, r0, sp
2000e9fc:	10000000 	andne	r0, r0, r0
2000ea00:	e18e3381 	orr	r3, lr, r1, lsl #7
2000ea04:	00000007 	andeq	r0, r0, r7
	...
2000ea10:	e0000000 	and	r0, r0, r0
2000ea14:	00000007 	andeq	r0, r0, r7
	...
2000ea20:	e0000000 	and	r0, r0, r0
2000ea24:	00000007 	andeq	r0, r0, r7
	...
2000ea30:	e0000000 	and	r0, r0, r0
2000ea34:	00000007 	andeq	r0, r0, r7
	...
2000ea40:	e0000000 	and	r0, r0, r0
2000ea44:	00000007 	andeq	r0, r0, r7
	...
2000ea50:	e0000000 	and	r0, r0, r0
2000ea54:	00000007 	andeq	r0, r0, r7
	...
2000ea60:	e0000000 	and	r0, r0, r0
2000ea64:	00000007 	andeq	r0, r0, r7
	...
2000ea70:	e0000000 	and	r0, r0, r0
2000ea74:	00000007 	andeq	r0, r0, r7
2000ea78:	00000000 	andeq	r0, r0, r0
2000ea7c:	00000780 	andeq	r0, r0, r0, lsl #15
2000ea80:	e0000000 	and	r0, r0, r0
2000ea84:	00000007 	andeq	r0, r0, r7
2000ea88:	00000000 	andeq	r0, r0, r0
2000ea8c:	00000020 	andeq	r0, r0, r0, lsr #32
2000ea90:	e0000000 	and	r0, r0, r0
2000ea94:	00000007 	andeq	r0, r0, r7
2000ea98:	00000000 	andeq	r0, r0, r0
2000ea9c:	00000020 	andeq	r0, r0, r0, lsr #32
2000eaa0:	e0000000 	and	r0, r0, r0
2000eaa4:	00000007 	andeq	r0, r0, r7
	...
2000eab0:	e0000000 	and	r0, r0, r0
2000eab4:	00000007 	andeq	r0, r0, r7
2000eab8:	00000c00 	andeq	r0, r0, r0, lsl #24
2000eabc:	00000000 	andeq	r0, r0, r0
2000eac0:	e0000000 	and	r0, r0, r0
2000eac4:	00000007 	andeq	r0, r0, r7
2000eac8:	00003f80 	andeq	r3, r0, r0, lsl #31
2000eacc:	00000000 	andeq	r0, r0, r0
2000ead0:	e0000000 	and	r0, r0, r0
2000ead4:	00000007 	andeq	r0, r0, r7
2000ead8:	00003f80 	andeq	r3, r0, r0, lsl #31
2000eadc:	00000000 	andeq	r0, r0, r0
2000eae0:	e0000000 	and	r0, r0, r0
2000eae4:	c0000007 	andgt	r0, r0, r7
2000eae8:	00003fff 	strdeq	r3, [r0], -pc	; <UNPREDICTABLE>
2000eaec:	00000000 	andeq	r0, r0, r0
2000eaf0:	e0000000 	and	r0, r0, r0
2000eaf4:	c0000007 	andgt	r0, r0, r7
2000eaf8:	00003fff 	strdeq	r3, [r0], -pc	; <UNPREDICTABLE>
2000eafc:	00000000 	andeq	r0, r0, r0
2000eb00:	e0000000 	and	r0, r0, r0
2000eb04:	f0000007 			; <UNDEFINED> instruction: 0xf0000007
2000eb08:	00003fff 	strdeq	r3, [r0], -pc	; <UNPREDICTABLE>
2000eb0c:	00000000 	andeq	r0, r0, r0
2000eb10:	e0000000 	and	r0, r0, r0
2000eb14:	f0000007 			; <UNDEFINED> instruction: 0xf0000007
2000eb18:	00003fff 	strdeq	r3, [r0], -pc	; <UNPREDICTABLE>
2000eb1c:	00000000 	andeq	r0, r0, r0
2000eb20:	e0000000 	and	r0, r0, r0
2000eb24:	fc000007 	stc2	0, cr0, [r0], {7}
2000eb28:	00003fff 	strdeq	r3, [r0], -pc	; <UNPREDICTABLE>
2000eb2c:	00000000 	andeq	r0, r0, r0
2000eb30:	e0000000 	and	r0, r0, r0
2000eb34:	ff000007 			; <UNDEFINED> instruction: 0xff000007
2000eb38:	00003fff 	strdeq	r3, [r0], -pc	; <UNPREDICTABLE>
2000eb3c:	00000000 	andeq	r0, r0, r0
2000eb40:	e0000000 	and	r0, r0, r0
2000eb44:	ffc00007 			; <UNDEFINED> instruction: 0xffc00007
2000eb48:	00003fbb 			; <UNDEFINED> instruction: 0x00003fbb
2000eb4c:	003fe000 	eorseq	lr, pc, r0
2000eb50:	e0000000 	and	r0, r0, r0
2000eb54:	ffe00007 			; <UNDEFINED> instruction: 0xffe00007
2000eb58:	00003fff 	strdeq	r3, [r0], -pc	; <UNPREDICTABLE>
2000eb5c:	00ffe000 	rscseq	lr, pc, r0
2000eb60:	e0000000 	and	r0, r0, r0
2000eb64:	eff00007 	svc	0x00f00007
2000eb68:	00003fff 	strdeq	r3, [r0], -pc	; <UNPREDICTABLE>
2000eb6c:	03ffe000 	mvnseq	lr, #0
2000eb70:	e0000000 	and	r0, r0, r0
2000eb74:	fffc0007 			; <UNDEFINED> instruction: 0xfffc0007
2000eb78:	00003f7f 	andeq	r3, r0, pc, ror pc
2000eb7c:	0ffff000 	svceq	0x00fff000
2000eb80:	e0000000 	and	r0, r0, r0
2000eb84:	fffe0007 			; <UNDEFINED> instruction: 0xfffe0007
2000eb88:	00007fff 	strdeq	r7, [r0], -pc	; <UNPREDICTABLE>
2000eb8c:	3ffff000 	svccc	0x00fff000
2000eb90:	e0000000 	and	r0, r0, r0
2000eb94:	ffff0007 			; <UNDEFINED> instruction: 0xffff0007
2000eb98:	00007fff 	strdeq	r7, [r0], -pc	; <UNPREDICTABLE>
2000eb9c:	fffff038 			; <UNDEFINED> instruction: 0xfffff038
2000eba0:	e0000000 	and	r0, r0, r0
2000eba4:	dfbfc007 	svcle	0x00bfc007
2000eba8:	00007fff 	strdeq	r7, [r0], -pc	; <UNPREDICTABLE>
2000ebac:	fffff800 	vcmla.f32	d31, d15, d0[0], #270
2000ebb0:	e0000001 	and	r0, r0, r1
2000ebb4:	ffffc007 			; <UNDEFINED> instruction: 0xffffc007
2000ebb8:	00007ffd 	strdeq	r7, [r0], -sp
2000ebbc:	fffefc00 			; <UNDEFINED> instruction: 0xfffefc00
2000ebc0:	e0000001 	and	r0, r0, r1
2000ebc4:	fffff007 			; <UNDEFINED> instruction: 0xfffff007
2000ebc8:	00007fbf 			; <UNDEFINED> instruction: 0x00007fbf
2000ebcc:	fffffe00 			; <UNDEFINED> instruction: 0xfffffe00
2000ebd0:	e000007f 	and	r0, r0, pc, ror r0
2000ebd4:	fefff007 	cdp2	0, 15, cr15, cr15, cr7, {0}
2000ebd8:	00003eff 	strdeq	r3, [r0], -pc	; <UNPREDICTABLE>
2000ebdc:	ffdfff00 			; <UNDEFINED> instruction: 0xffdfff00
2000ebe0:	e000007f 	and	r0, r0, pc, ror r0
2000ebe4:	fffef007 			; <UNDEFINED> instruction: 0xfffef007
2000ebe8:	00003fff 	strdeq	r3, [r0], -pc	; <UNPREDICTABLE>
2000ebec:	ffffff00 			; <UNDEFINED> instruction: 0xffffff00
2000ebf0:	e000007f 	and	r0, r0, pc, ror r0
2000ebf4:	fffff007 			; <UNDEFINED> instruction: 0xfffff007
2000ebf8:	00003fff 	strdeq	r3, [r0], -pc	; <UNPREDICTABLE>
2000ebfc:	fdfefb00 	ldc2l	11, cr15, [lr]	; <UNPREDICTABLE>
2000ec00:	e00000ff 	strd	r0, [r0], -pc	; <UNPREDICTABLE>
2000ec04:	f7fff007 			; <UNDEFINED> instruction: 0xf7fff007
2000ec08:	00003ffe 	strdeq	r3, [r0], -lr
2000ec0c:	ffffff20 			; <UNDEFINED> instruction: 0xffffff20
2000ec10:	e00000ff 	strd	r0, [r0], -pc	; <UNPREDICTABLE>
2000ec14:	fff7f807 	vcmla.f32	d31, d7, d7[0], #270
2000ec18:	00007fff 	strdeq	r7, [r0], -pc	; <UNPREDICTABLE>
2000ec1c:	efffff00 	svc	0x00ffff00
2000ec20:	e00001ff 	strd	r0, [r0], -pc	; <UNPREDICTABLE>
2000ec24:	fffff807 	vcmla.f32	d31, d15, d7[0], #270
2000ec28:	00407dff 	strdeq	r7, [r0], #-223	; 0xffffff21
2000ec2c:	ffffff00 			; <UNDEFINED> instruction: 0xffffff00
2000ec30:	e00001ff 	strd	r0, [r0], -pc	; <UNPREDICTABLE>
2000ec34:	fffff807 	vcmla.f32	d31, d15, d7[0], #270
2000ec38:	00007fff 	strdeq	r7, [r0], -pc	; <UNPREDICTABLE>
2000ec3c:	ffefff00 			; <UNDEFINED> instruction: 0xffefff00
2000ec40:	e00001fe 	strd	r0, [r0], -lr

2000ec44 <roger_gray_bits>:
2000ec44:	00000000 	andeq	r0, r0, r0
2000ec48:	f0000000 			; <UNDEFINED> instruction: 0xf0000000
2000ec4c:	0000003f 	andeq	r0, r0, pc, lsr r0
	...
2000ec58:	70000000 	andvc	r0, r0, r0
	...
2000ec78:	00400000 	subeq	r0, r0, r0
	...
2000ec88:	3c000000 	stccc	0, cr0, [r0], {-0}
	...
2000ec98:	ff300000 			; <UNDEFINED> instruction: 0xff300000
2000ec9c:	00001000 	andeq	r1, r0, r0
	...
2000eca8:	7ff00000 	svcvc	0x00f00000	; IMB
	...
2000ecb8:	7fff8000 	svcvc	0x00ff8000
2000ecbc:	00008000 	andeq	r8, r0, r0
	...
2000ecc8:	3effc000 	cdpcc	0, 15, cr12, cr15, cr0, {0}
2000eccc:	00009000 	andeq	r9, r0, r0
	...
2000ecd8:	ffff8000 			; <UNDEFINED> instruction: 0xffff8000
2000ecdc:	00038003 	andeq	r8, r3, r3
	...
2000ece8:	fff7c000 			; <UNDEFINED> instruction: 0xfff7c000
2000ecec:	0003000f 	andeq	r0, r3, pc
	...
2000ecf8:	fcf3c000 	ldc2l	0, cr12, [r3]
2000ecfc:	0002002f 	andeq	r0, r2, pc, lsr #32
	...
2000ed08:	fc71c000 	ldc2l	0, cr12, [r1], #-0
2000ed0c:	0006002f 	andeq	r0, r6, pc, lsr #32
	...
2000ed18:	f031c000 			; <UNDEFINED> instruction: 0xf031c000
2000ed1c:	0004000d 	andeq	r0, r4, sp
	...
2000ed28:	e003c000 	and	ip, r3, r0
2000ed2c:	000c805b 	andeq	r8, ip, fp, asr r0
	...
2000ed38:	0003e000 	andeq	lr, r3, r0
2000ed3c:	0008c0f7 	strdeq	ip, [r8], -r7
	...
2000ed48:	0001e000 	andeq	lr, r1, r0
2000ed4c:	0001f0fc 	strdeq	pc, [r1], -ip
	...
2000ed58:	0001e000 	andeq	lr, r1, r0
2000ed5c:	0003f8f0 	strdeq	pc, [r3], -r0
	...
2000ed68:	0001e000 	andeq	lr, r1, r0
2000ed6c:	0003ffe0 	andeq	pc, r3, r0, ror #31
	...
2000ed78:	0000e000 	andeq	lr, r0, r0
2000ed7c:	0003ff80 	andeq	pc, r3, r0, lsl #31
	...
2000ed88:	00006000 	andeq	r6, r0, r0
2000ed8c:	000bff00 	andeq	pc, fp, r0, lsl #30
	...
2000ed98:	00006000 	andeq	r6, r0, r0
2000ed9c:	000ffe00 	andeq	pc, pc, r0, lsl #28
	...
2000eda8:	00002000 	andeq	r2, r0, r0
2000edac:	000ff000 	andeq	pc, pc, r0
	...
2000edb8:	00002000 	andeq	r2, r0, r0
2000edbc:	000ff800 	andeq	pc, pc, r0, lsl #16
	...
2000edcc:	0007f800 	andeq	pc, r7, r0, lsl #16
	...
2000eddc:	0007f800 	andeq	pc, r7, r0, lsl #16
	...
2000edec:	0007f800 	andeq	pc, r7, r0, lsl #16
	...
2000edfc:	0007f800 	andeq	pc, r7, r0, lsl #16
	...
2000ee0c:	0007f800 	andeq	pc, r7, r0, lsl #16
	...
2000ee1c:	0007f000 	andeq	pc, r7, r0
	...
2000ee2c:	0007f800 	andeq	pc, r7, r0, lsl #16
	...
2000ee3c:	0003fc00 	andeq	pc, r3, r0, lsl #24
	...
2000ee4c:	0003fc00 	andeq	pc, r3, r0, lsl #24
	...
2000ee58:	3e000000 	cdpcc	0, 0, cr0, cr0, cr0, {0}
2000ee5c:	0003fc00 	andeq	pc, r3, r0, lsl #24
	...
2000ee68:	7c000800 	stcvc	8, cr0, [r0], {-0}
2000ee6c:	0003ff80 	andeq	pc, r3, r0, lsl #31
	...
2000ee78:	60000800 	andvs	r0, r0, r0, lsl #16
2000ee7c:	0003f870 	andeq	pc, r3, r0, ror r8	; <UNPREDICTABLE>
	...
2000ee88:	70000800 	andvc	r0, r0, r0, lsl #16
2000ee8c:	0003ffd0 	ldrdeq	pc, [r3], -r0
	...
2000ee98:	00000800 	andeq	r0, r0, r0, lsl #16
2000ee9c:	0003ffd0 	ldrdeq	pc, [r3], -r0
	...
2000eeac:	0003fff0 	strdeq	pc, [r3], -r0
	...
2000eeb8:	00003000 	andeq	r3, r0, r0
2000eebc:	0003fff0 	strdeq	pc, [r3], -r0
	...
2000eecc:	0003fff0 	strdeq	pc, [r3], -r0
	...
2000eedc:	0003f3f0 	strdeq	pc, [r3], -r0
	...
2000eeec:	0003fff0 	strdeq	pc, [r3], -r0
	...
2000eefc:	0003fee0 	andeq	pc, r3, r0, ror #29
	...
2000ef0c:	0001ffe0 	andeq	pc, r1, r0, ror #31
	...
2000ef1c:	0001ffe0 	andeq	pc, r1, r0, ror #31
	...
2000ef2c:	0002fff0 	strdeq	pc, [r2], -r0
	...
2000ef3c:	0003fff8 	strdeq	pc, [r3], -r8
	...
2000ef4c:	00001ffc 	strdeq	r1, [r0], -ip
	...
2000ef5c:	00001ff8 	strdeq	r1, [r0], -r8
	...
2000ef6c:	00001ff0 	strdeq	r1, [r0], -r0
	...
2000ef7c:	00000ff8 	strdeq	r0, [r0], -r8
	...
2000ef88:	40000000 	andmi	r0, r0, r0
2000ef8c:	00000ff8 	strdeq	r0, [r0], -r8
	...
2000ef98:	c0000000 	andgt	r0, r0, r0
2000ef9c:	00000fc7 	andeq	r0, r0, r7, asr #31
	...
2000efac:	000007fe 	strdeq	r0, [r0], -lr
	...
2000efbc:	000003ff 	strdeq	r0, [r0], -pc	; <UNPREDICTABLE>
	...
2000efcc:	000001ff 	strdeq	r0, [r0], -pc	; <UNPREDICTABLE>
	...
2000efd8:	80000000 	andhi	r0, r0, r0
2000efdc:	000000ff 	strdeq	r0, [r0], -pc	; <UNPREDICTABLE>
	...
2000efec:	000000ff 	strdeq	r0, [r0], -pc	; <UNPREDICTABLE>
	...
2000eff8:	00004000 	andeq	r4, r0, r0
2000effc:	000000bf 	strheq	r0, [r0], -pc	; <UNPREDICTABLE>
	...
2000f008:	00304000 	eorseq	r4, r0, r0
2000f00c:	000000df 	ldrdeq	r0, [r0], -pc	; <UNPREDICTABLE>
	...
2000f018:	80e00000 	rschi	r0, r0, r0
2000f01c:	000000bf 	strheq	r0, [r0], -pc	; <UNPREDICTABLE>
	...
2000f028:	f0a08000 			; <UNDEFINED> instruction: 0xf0a08000
2000f02c:	000000bf 	strheq	r0, [r0], -pc	; <UNPREDICTABLE>
	...
2000f038:	f3c08000 	vaddl.u8	q12, d0, d0
2000f03c:	000000bf 	strheq	r0, [r0], -pc	; <UNPREDICTABLE>
2000f040:	00000000 	andeq	r0, r0, r0

2000f044 <roger_light_bits>:
	...
2000f0c8:	01000000 	mrseq	r0, (UNDEF: 0)
	...
2000f0d8:	00004000 	andeq	r4, r0, r0
	...
2000f0e8:	00080000 	andeq	r0, r8, r0
	...
2000f0f8:	030c0000 	movweq	r0, #49152	; 0xc000
	...
2000f108:	038e0000 	orreq	r0, lr, #0
	...
2000f118:	0fce0000 	svceq	0x00ce0000
	...
2000f128:	1ffc0000 	svcne	0x00fc0000
	...
2000f138:	ff9c0000 			; <UNDEFINED> instruction: 0xff9c0000
2000f13c:	00000000 	andeq	r0, r0, r0
2000f140:	00400000 	subeq	r0, r0, r0
2000f144:	00081000 	andeq	r1, r8, r0
2000f148:	008e0000 	addeq	r0, lr, r0
2000f14c:	00000003 	andeq	r0, r0, r3
2000f150:	00400000 	subeq	r0, r0, r0
2000f154:	000c1000 	andeq	r1, ip, r0
2000f158:	008e0000 	addeq	r0, lr, r0
2000f15c:	0000000e 	andeq	r0, r0, lr
2000f160:	00400000 	subeq	r0, r0, r0
2000f164:	00042000 	andeq	r2, r4, r0
2000f168:	00c60000 	sbceq	r0, r6, r0
2000f16c:	00000011 	andeq	r0, r0, r1, lsl r0
2000f170:	00400030 	subeq	r0, r0, r0, lsr r0
2000f174:	00060000 	andeq	r0, r6, r0
2000f178:	00e70000 	rsceq	r0, r7, r0
2000f17c:	00000070 	andeq	r0, r0, r0, ror r0
2000f180:	004000e0 	subeq	r0, r0, r0, ror #1
2000f184:	82030000 	andhi	r0, r3, #0
2000f188:	00838008 	addeq	r8, r3, r8
2000f18c:	810000f8 	strdhi	r0, [r0, -r8]
2000f190:	00400000 	subeq	r0, r0, r0
2000f194:	84018000 	strhi	r8, [r1], #-0
2000f198:	00038008 	andeq	r8, r3, r8
2000f19c:	830001f8 	movwhi	r0, #504	; 0x1f8
2000f1a0:	00400410 	subeq	r0, r0, r0, lsl r4
2000f1a4:	84408000 	strbhi	r8, [r0], #-0
2000f1a8:	0007c008 	andeq	ip, r7, r8
2000f1ac:	02000ff0 	andeq	r0, r0, #240, 30	; 0x3c0
2000f1b0:	00408c10 	subeq	r8, r0, r0, lsl ip
2000f1b4:	84408000 	strbhi	r8, [r0], #-0
2000f1b8:	0003c008 	andeq	ip, r3, r8
2000f1bc:	020007e0 	andeq	r0, r0, #224, 14	; 0x3800000
2000f1c0:	01c08830 	biceq	r8, r0, r0, lsr r8
2000f1c4:	84408000 	strbhi	r8, [r0], #-0
2000f1c8:	0081e018 	addeq	lr, r1, r8, lsl r0
2000f1cc:	020007f8 	andeq	r0, r0, #248, 14	; 0x3e00000
2000f1d0:	00008820 	andeq	r8, r0, r0, lsr #16
2000f1d4:	04018000 	streq	r8, [r1], #-0
2000f1d8:	0021e010 	eoreq	lr, r1, r0, lsl r0
2000f1dc:	460007fc 			; <UNDEFINED> instruction: 0x460007fc
2000f1e0:	00008820 	andeq	r8, r0, r0, lsr #16
2000f1e4:	06010000 	streq	r0, [r1], -r0
2000f1e8:	0001e010 	andeq	lr, r1, r0, lsl r0
2000f1ec:	440007f8 	strmi	r0, [r0], #-2040	; 0xfffff808
2000f1f0:	00008820 	andeq	r8, r0, r0, lsr #16
2000f1f4:	03010000 	movweq	r0, #4096	; 0x1000
2000f1f8:	0000e012 	andeq	lr, r0, r2, lsl r0
2000f1fc:	ec0007dd 	stc	7, cr0, [r0], {221}	; 0xdd
2000f200:	00418860 	subeq	r8, r1, r0, ror #16
2000f204:	c1e1e000 	mvngt	lr, r0
2000f208:	0300e01f 	movweq	lr, #31
2000f20c:	880007ff 	stmdahi	r0, {r0, r1, r2, r3, r4, r5, r6, r7, r8, r9, sl}
2000f210:	01c719c0 	biceq	r1, r7, r0, asr #19
2000f214:	00000000 	andeq	r0, r0, r0
2000f218:	0f80d000 	svceq	0x0080d000
2000f21c:	00000fd9 	ldrdeq	r0, [r0], -r9
	...
2000f228:	3d808000 	stccc	0, cr8, [r0]
2000f22c:	000007d8 	ldrdeq	r0, [r0], -r8
	...
2000f238:	ffc08000 			; <UNDEFINED> instruction: 0xffc08000
2000f23c:	000003f8 	strdeq	r0, [r0], -r8
	...
2000f248:	f3c18000 	vaddl.u8	q12, d1, d0
2000f24c:	000003fb 	strdeq	r0, [r0], -fp
	...
2000f258:	c1e10800 	mvngt	r0, r0, lsl #16
2000f25c:	000003f9 	strdeq	r0, [r0], -r9
	...
2000f268:	83c00000 	bichi	r0, r0, #0
2000f26c:	00000059 	andeq	r0, r0, r9, asr r0
	...
2000f278:	9d008000 	stcls	0, cr8, [r0, #-0]
2000f27c:	00000008 	andeq	r0, r0, r8
	...
2000f288:	8c014000 	stchi	0, cr4, [r1], {-0}
	...
2000f298:	7f005000 	svcvc	0x00005000
2000f29c:	00000008 	andeq	r0, r0, r8
	...
2000f2a8:	3e001000 	cdpcc	0, 0, cr1, cr0, cr0, {0}
2000f2ac:	00000008 	andeq	r0, r0, r8
	...
2000f2bc:	00000008 	andeq	r0, r0, r8
	...
2000f2cc:	00000008 	andeq	r0, r0, r8
	...
2000f2d8:	18000000 	stmdane	r0, {}	; <UNPREDICTABLE>
2000f2dc:	00000c08 	andeq	r0, r0, r8, lsl #24
	...
2000f2e8:	3c00c000 	stccc	0, cr12, [r0], {-0}
2000f2ec:	00000008 	andeq	r0, r0, r8
	...
2000f2f8:	1c000000 	stcne	0, cr0, [r0], {-0}
2000f2fc:	00000118 	andeq	r0, r0, r8, lsl r1
	...
2000f308:	06008000 	streq	r8, [r0], -r0
2000f30c:	00000018 	andeq	r0, r0, r8, lsl r0
	...
2000f318:	0300c000 	movweq	ip, #0
2000f31c:	00000018 	andeq	r0, r0, r8, lsl r0
	...
2000f328:	e380c000 	orr	ip, r0, #0
2000f32c:	00010008 	andeq	r0, r1, r8
	...
2000f338:	e180c000 	orr	ip, r0, r0
2000f33c:	00000007 	andeq	r0, r0, r7
	...
2000f348:	00418000 	subeq	r8, r1, r0
2000f34c:	00000003 	andeq	r0, r0, r3
	...
2000f358:	00218000 	eoreq	r8, r1, r0
2000f35c:	00000007 	andeq	r0, r0, r7
	...
2000f368:	00130000 	andseq	r0, r3, r0
2000f36c:	0000000f 	andeq	r0, r0, pc
	...
2000f378:	87810000 	strhi	r0, [r1, r0]
2000f37c:	00000007 	andeq	r0, r0, r7
	...
2000f388:	bfc70000 	svclt	0x00c70000
2000f38c:	00000007 	andeq	r0, r0, r7
	...
2000f398:	38e70000 	stmiacc	r7!, {}^	; <UNPREDICTABLE>
	...
2000f3a8:	800e0000 	andhi	r0, lr, r0
2000f3ac:	00000001 	andeq	r0, r0, r1
	...
2000f3b8:	f49c0000 			; <UNDEFINED> instruction: 0xf49c0000
	...
2000f3c8:	fff00000 			; <UNDEFINED> instruction: 0xfff00000	; IMB
	...
2000f3d8:	63b80000 			; <UNDEFINED> instruction: 0x63b80000
	...
2000f3e8:	e3704000 	cmn	r0, #0
	...
2000f3f8:	f0700000 			; <UNDEFINED> instruction: 0xf0700000
2000f3fc:	00000040 	andeq	r0, r0, r0, asr #32
	...
2000f408:	f3c00000 	vaddl.u8	q8, d0, d0
	...
2000f418:	7f108000 	svcvc	0x00108000
2000f41c:	00000040 	andeq	r0, r0, r0, asr #32
	...
2000f428:	0f100000 	svceq	0x00100000
2000f42c:	00000040 	andeq	r0, r0, r0, asr #32
	...
2000f438:	0c280000 	stceq	0, cr0, [r8], #-0
2000f43c:	00000040 	andeq	r0, r0, r0, asr #32
2000f440:	00000000 	andeq	r0, r0, r0

2000f444 <firstTime.4040>:
2000f444:	00000001 	andeq	r0, r0, r1
2000f448:	00202020 	eoreq	r2, r0, r0, lsr #32
2000f44c:	41524b2a 	cmpmi	r2, sl, lsr #22
2000f450:	2a202a21 	bcs	20819cdc <firstTime.4040+0x80a898>
2000f454:	2141524b 	cmpcs	r1, fp, asr #4
2000f458:	0000002a 	andeq	r0, r0, sl, lsr #32
2000f45c:	734c4944 	movtvc	r4, #51524	; 0xc944
2000f460:	7469772d 	strbtvc	r7, [r9], #-1837	; 0xfffff8d3
2000f464:	73656863 	cmnvc	r5, #6488064	; 0x630000
2000f468:	76616820 	strbtvc	r6, [r1], -r0, lsr #16
2000f46c:	00000065 	andeq	r0, r0, r5, rrx
2000f470:	20726f46 	rsbscs	r6, r2, r6, asr #30
2000f474:	746e6563 	strbtvc	r6, [lr], #-1379	; 0xfffffa9d
2000f478:	65697275 	strbvs	r7, [r9, #-629]!	; 0xfffffd8b
2000f47c:	68742073 	ldmdavs	r4!, {r0, r1, r4, r5, r6, sp}^
2000f480:	00000065 	andeq	r0, r0, r5, rrx
2000f484:	20202020 	eorcs	r2, r0, r0, lsr #32
2000f488:	00000000 	andeq	r0, r0, r0
2000f48c:	6c696f63 	stclvs	15, cr6, [r9], #-396	; 0xfffffe74
2000f490:	69206465 	stmdbvs	r0!, {r0, r2, r5, r6, sl, sp, lr}
2000f494:	6566206e 	strbvs	r2, [r6, #-110]!	; 0xffffff92
2000f498:	002c7261 	eoreq	r7, ip, r1, ror #4
2000f49c:	74616874 	strbtvc	r6, [r1], #-2164	; 0xfffff78c
2000f4a0:	44206120 	strtmi	r6, [r0], #-288	; 0xfffffee0
2000f4a4:	2d735049 	ldclcs	0, cr5, [r3, #-292]!	; 0xfffffedc
2000f4a8:	63746977 	cmnvs	r4, #1949696	; 0x1dc000
2000f4ac:	00000068 	andeq	r0, r0, r8, rrx
2000f4b0:	6e656877 	mcrvs	8, 3, r6, cr5, cr7, {3}
2000f4b4:	72657665 	rsbvc	r7, r5, #105906176	; 0x6500000
2000f4b8:	65687420 	strbvs	r7, [r8, #-1056]!	; 0xfffffbe0
2000f4bc:	65682079 	strbvs	r2, [r8, #-121]!	; 0xffffff87
2000f4c0:	00007261 	andeq	r7, r0, r1, ror #4
2000f4c4:	6e207369 	cdpvs	3, 2, cr7, cr0, cr9, {3}
2000f4c8:	2e726165 	rpwcssz	f6, f2, f5
2000f4cc:	00000000 	andeq	r0, r0, r0
2000f4d0:	70727573 	rsbsvc	r7, r2, r3, ror r5
2000f4d4:	69736972 	ldmdbvs	r3!, {r1, r4, r5, r6, r8, fp, sp, lr}^
2000f4d8:	202c676e 	eorcs	r6, ip, lr, ror #14
2000f4dc:	646e6966 	strbtvs	r6, [lr], #-2406	; 0xfffff69a
2000f4e0:	00676e69 	rsbeq	r6, r7, r9, ror #28
2000f4e4:	69206f53 	stmdbvs	r0!, {r0, r1, r4, r6, r8, r9, sl, fp, sp, lr}
2000f4e8:	73692074 	cmnvc	r9, #116	; 0x74
2000f4ec:	69757120 	ldmdbvs	r5!, {r5, r8, ip, sp, lr}^
2000f4f0:	00006574 	andeq	r6, r0, r4, ror r5
2000f4f4:	20756f79 	rsbscs	r6, r5, r9, ror pc
2000f4f8:	65726568 	ldrbvs	r6, [r2, #-1384]!	; 0xfffffa98
2000f4fc:	0000002c 	andeq	r0, r0, ip, lsr #32
2000f500:	72696568 	rsbvc	r6, r9, #104, 10	; 0x1a000000
2000f504:	206f7420 	rsbcs	r7, pc, r0, lsr #8
2000f508:	676e696b 	strbvs	r6, [lr, -fp, ror #18]!
2000f50c:	61654c20 	cmnvs	r5, r0, lsr #24
2000f510:	00002e72 	andeq	r2, r0, r2, ror lr
2000f514:	65657571 	strbvs	r7, [r5, #-1393]!	; 0xfffffa8f
2000f518:	6144206e 	cmpvs	r4, lr, rrx
2000f51c:	206f6666 	rsbcs	r6, pc, r6, ror #12
2000f520:	4420666f 	strtmi	r6, [r0], #-1647	; 0xfffff991
2000f524:	2c734c49 	ldclcs	12, cr4, [r3], #-292	; 0xfffffedc
2000f528:	00000000 	andeq	r0, r0, r0
2000f52c:	706d6574 	rsbvc	r6, sp, r4, ror r5
2000f530:	2c646574 	cfstr64cs	mvdx6, [r4], #-464	; 0xfffffe30
2000f534:	206f7420 	rsbcs	r7, pc, r0, lsr #8
2000f538:	746f6f6c 	strbtvc	r6, [pc], #-3948	; 2000f540 <firstTime.4040+0xfc>
2000f53c:	00000000 	andeq	r0, r0, r0
2000f540:	20747542 	rsbscs	r7, r4, r2, asr #10
2000f544:	6279616d 	rsbsvs	r6, r9, #1073741851	; 0x4000001b
2000f548:	6f792065 	svcvs	0x00792065
2000f54c:	65722775 	ldrbvs	r2, [r2, #-1909]!	; 0xfffff88b
2000f550:	00000000 	andeq	r0, r0, r0
2000f554:	6d6f7266 	sfmvs	f7, 2, [pc, #-408]!	; 2000f3c4 <roger_light_bits+0x380>
2000f558:	65687420 	strbvs	r7, [r8, #-1056]!	; 0xfffffbe0
2000f55c:	63697220 	cmnvs	r9, #32, 4
2000f560:	2c736568 	cfldr64cs	mvdx6, [r3], #-416	; 0xfffffe60
2000f564:	00000000 	andeq	r0, r0, r0
2000f568:	6b636977 	blvs	218e9b4c <firstTime.4040+0x18da708>
2000f56c:	44206465 	strtmi	r6, [r0], #-1125	; 0xfffffb9b
2000f570:	2d735049 	ldclcs	0, cr5, [r3, #-292]!	; 0xfffffedc
2000f574:	63746977 	cmnvs	r4, #1949696	; 0x1dc000
2000f578:	2e736568 	cdpcs	5, 7, cr6, cr3, cr8, {3}
2000f57c:	00000000 	andeq	r0, r0, r0
2000f580:	65727573 	ldrbvs	r7, [r2, #-1395]!	; 0xfffffa8d
2000f584:	79622064 	stmdbvc	r2!, {r2, r5, r6, sp}^
2000f588:	00000000 	andeq	r0, r0, r0
2000f58c:	67206f73 			; <UNDEFINED> instruction: 0x67206f73
2000f590:	70706972 	rsbsvc	r6, r0, r2, ror r9
2000f594:	20796c69 	rsbscs	r6, r9, r9, ror #24
2000f598:	61657274 	smcvs	22308	; 0x5724
2000f59c:	0000002d 	andeq	r0, r0, sp, lsr #32
2000f5a0:	6572202d 	ldrbvs	r2, [r2, #-45]!	; 0xffffffd3
2000f5a4:	20746573 	rsbscs	r6, r4, r3, ror r5
2000f5a8:	20656874 	rsbcs	r6, r5, r4, ror r8
2000f5ac:	74697773 	strbtvc	r7, [r9], #-1907	; 0xfffff88d
2000f5b0:	00216863 	eoreq	r6, r1, r3, ror #16
2000f5b4:	65746e45 	ldrbvs	r6, [r4, #-3653]!	; 0xfffff1bb
2000f5b8:	62202c72 	eorvs	r2, r0, #29184	; 0x7200
2000f5bc:	65766172 	ldrbvs	r6, [r6, #-370]!	; 0xfffffe8e
2000f5c0:	74697720 	strbtvc	r7, [r9], #-1824	; 0xfffff8e0
2000f5c4:	002c6863 	eoreq	r6, ip, r3, ror #16
2000f5c8:	69622061 	stmdbvs	r2!, {r0, r5, r6, sp}^
2000f5cc:	70732074 	rsbsvc	r2, r3, r4, ror r0
2000f5d0:	656b6f6f 	strbvs	r6, [fp, #-3951]!	; 0xfffff091
2000f5d4:	756f2064 	strbvc	r2, [pc, #-100]!	; 2000f578 <firstTime.4040+0x134>
2000f5d8:	2e2e2e74 	mcrcs	14, 1, r2, cr14, cr4, {3}
2000f5dc:	00000000 	andeq	r0, r0, r0
2000f5e0:	66666144 	strbtvs	r6, [r6], -r4, asr #2
2000f5e4:	49203a6f 	stmdbmi	r0!, {r0, r1, r2, r3, r5, r6, r9, fp, ip, sp}
2000f5e8:	66206d27 	strtvs	r6, [r0], -r7, lsr #26
2000f5ec:	696c6565 	stmdbvs	ip!, {r0, r2, r5, r6, r8, sl, sp, lr}^
2000f5f0:	0020676e 	eoreq	r6, r0, lr, ror #14
2000f5f4:	00000000 	andeq	r0, r0, r0
2000f5f8:	696c632a 	stmdbvs	ip!, {r1, r3, r5, r8, r9, sp, lr}^
2000f5fc:	002a6b63 	eoreq	r6, sl, r3, ror #22
2000f600:	7069742a 	rsbvc	r7, r9, sl, lsr #8
2000f604:	00002a70 	andeq	r2, r0, r0, ror sl
2000f608:	7061742a 	rsbvc	r7, r1, sl, lsr #8
2000f60c:	00002a70 	andeq	r2, r0, r0, ror sl
2000f610:	67206f74 			; <UNDEFINED> instruction: 0x67206f74
2000f614:	20626172 	rsbcs	r6, r2, r2, ror r1
2000f618:	20656874 	rsbcs	r6, r5, r4, ror r8
2000f61c:	706f7274 	rsbvc	r7, pc, r4, ror r2	; <UNPREDICTABLE>
2000f620:	00217968 	eoreq	r7, r1, r8, ror #18
2000f624:	66666144 	strbtvs	r6, [r6], -r4, asr #2
2000f628:	49203a6f 	stmdbmi	r0!, {r0, r1, r2, r3, r5, r6, r9, fp, ip, sp}
2000f62c:	65656e20 	strbvs	r6, [r5, #-3616]!	; 0xfffff1e0
2000f630:	616d2064 	cmnvs	sp, r4, rrx
2000f634:	20636967 	rsbcs	r6, r3, r7, ror #18
2000f638:	00000000 	andeq	r0, r0, r0
2000f63c:	43414c50 	movtmi	r4, #7248	; 0x1c50
2000f640:	4c4f4845 	mcrrmi	8, 4, r4, pc, cr5
2000f644:	20524544 	subscs	r4, r2, r4, asr #10
2000f648:	56205544 	strtpl	r5, [r0], -r4, asr #10
2000f64c:	004e4e41 	subeq	r4, lr, r1, asr #28
2000f650:	42414b2a 	submi	r4, r1, #43008	; 0xa800
2000f654:	4f4f4f4f 	svcmi	0x004f4f4f
2000f658:	00002a4d 	andeq	r2, r0, sp, asr #20
2000f65c:	4f77462a 	svcmi	0x0077462a
2000f660:	2a6f4f4f 	bcs	21be33a4 <firstTime.4040+0x1bd3f60>
2000f664:	00000000 	andeq	r0, r0, r0
2000f668:	20202020 	eorcs	r2, r0, r0, lsr #32
2000f66c:	794e2020 	stmdbvc	lr, {r5, sp}^
2000f670:	48414841 	stmdami	r1, {r0, r6, fp, lr}^
2000f674:	48414841 	stmdami	r1, {r0, r6, fp, lr}^
2000f678:	00000021 	andeq	r0, r0, r1, lsr #32
2000f67c:	73504944 	cmpvc	r0, #68, 18	; 0x110000
2000f680:	5449572d 	strbpl	r5, [r9], #-1837	; 0xfffff8d3
2000f684:	003a4843 	eorseq	r4, sl, r3, asr #16
2000f688:	4f57462a 	svcmi	0x0057462a
2000f68c:	2a48534f 	bcs	212243d0 <firstTime.4040+0x1214f8c>
2000f690:	00000000 	andeq	r0, r0, r0
2000f694:	20202020 	eorcs	r2, r0, r0, lsr #32
2000f698:	20202020 	eorcs	r2, r0, r0, lsr #32
2000f69c:	73706f4f 	cmnvc	r0, #316	; 0x13c
2000f6a0:	212e2e2e 			; <UNDEFINED> instruction: 0x212e2e2e
2000f6a4:	00000000 	andeq	r0, r0, r0
2000f6a8:	46464144 	strbmi	r4, [r6], -r4, asr #2
2000f6ac:	20203a4f 	eorcs	r3, r0, pc, asr #20
2000f6b0:	00000000 	andeq	r0, r0, r0
2000f6b4:	20202020 	eorcs	r2, r0, r0, lsr #32
2000f6b8:	41202020 			; <UNDEFINED> instruction: 0x41202020
2000f6bc:	47484752 	smlsldmi	r4, r8, r2, r7
2000f6c0:	48524848 	ldmdami	r2, {r3, r6, fp, lr}^
2000f6c4:	00000021 	andeq	r0, r0, r1, lsr #32
2000f6c8:	73504944 	cmpvc	r0, #68, 18	; 0x110000
2000f6cc:	5449572d 	strbpl	r5, [r9], #-1837	; 0xfffff8d3
2000f6d0:	203a4843 	eorscs	r4, sl, r3, asr #16
2000f6d4:	00000000 	andeq	r0, r0, r0
2000f6d8:	200008a4 	andcs	r0, r0, r4, lsr #17
2000f6dc:	200008bc 			; <UNDEFINED> instruction: 0x200008bc
2000f6e0:	20000e16 	andcs	r0, r0, r6, lsl lr
2000f6e4:	20000882 	andcs	r0, r0, r2, lsl #17
2000f6e8:	20001842 	andcs	r1, r0, r2, asr #16
2000f6ec:	20000882 	andcs	r0, r0, r2, lsl #17
2000f6f0:	20000882 	andcs	r0, r0, r2, lsl #17
2000f6f4:	20000882 	andcs	r0, r0, r2, lsl #17
2000f6f8:	20000882 	andcs	r0, r0, r2, lsl #17
2000f6fc:	20000882 	andcs	r0, r0, r2, lsl #17
2000f700:	200016dc 	ldrdcs	r1, [r0], -ip
2000f704:	00000000 	andeq	r0, r0, r0
2000f708:	5548542a 	strbpl	r5, [r8, #-1066]	; 0xfffffbd6
2000f70c:	002a504d 	eoreq	r5, sl, sp, asr #32
2000f710:	200035ec 	andcs	r3, r0, ip, ror #11
2000f714:	200035f6 	strdcs	r3, [r0], -r6
2000f718:	20003600 	andcs	r3, r0, r0, lsl #12
2000f71c:	2000360a 	andcs	r3, r0, sl, lsl #12
2000f720:	20003614 	andcs	r3, r0, r4, lsl r6
2000f724:	2000361e 	andcs	r3, r0, lr, lsl r6
2000f728:	20003628 	andcs	r3, r0, r8, lsr #12
2000f72c:	20003632 	andcs	r3, r0, r2, lsr r6
2000f730:	20202020 	eorcs	r2, r0, r0, lsr #32
2000f734:	20202020 	eorcs	r2, r0, r0, lsr #32
2000f738:	20202020 	eorcs	r2, r0, r0, lsr #32
2000f73c:	20202020 	eorcs	r2, r0, r0, lsr #32
2000f740:	20202020 	eorcs	r2, r0, r0, lsr #32
2000f744:	00000000 	andeq	r0, r0, r0
2000f748:	61666c41 	cmnvs	r6, r1, asr #24
2000f74c:	656d756e 	strbvs	r7, [sp, #-1390]!	; 0xfffffa92
2000f750:	6b736972 	blvs	21ce9d20 <firstTime.4040+0x1cda8dc>
2000f754:	00000000 	andeq	r0, r0, r0
2000f758:	64726168 	ldrbtvs	r6, [r2], #-360	; 0xfffffe98
2000f75c:	a4c3a5c3 	strbge	sl, [r3], #1475	; 0x5c3
2000f760:	7261b6c3 	rsbvc	fp, r1, #204472320	; 0xc300000
2000f764:	75732065 	ldrbvc	r2, [r3, #-101]!	; 0xffffff9b
2000f768:	00726567 	rsbseq	r6, r2, r7, ror #10

Disassembly of section .debug_info:

00000000 <.debug_info>:
       0:	00000abb 			; <UNDEFINED> instruction: 0x00000abb
       4:	00000004 	andeq	r0, r0, r4
       8:	01040000 	mrseq	r0, (UNDEF: 4)
       c:	0000009f 	muleq	r0, pc, r0	; <UNPREDICTABLE>
      10:	0005260c 	andeq	r2, r5, ip, lsl #12
	...
      20:	020c0200 	andeq	r0, ip, #0, 4
      24:	00004e05 	andeq	r4, r0, r5, lsl #28
      28:	035b0300 	cmpeq	fp, #0, 6
      2c:	07020000 	streq	r0, [r2, -r0]
      30:	0000004e 	andeq	r0, r0, lr, asr #32
      34:	07190300 	ldreq	r0, [r9, -r0, lsl #6]
      38:	08020000 	stmdaeq	r2, {}	; <UNPREDICTABLE>
      3c:	0000004e 	andeq	r0, r0, lr, asr #32
      40:	19180304 	ldmdbne	r8, {r2, r8, r9}
      44:	09020000 	stmdbeq	r2, {}	; <UNPREDICTABLE>
      48:	00000055 	andeq	r0, r0, r5, asr r0
      4c:	04040008 	streq	r0, [r4], #-8
      50:	00038907 	andeq	r8, r3, r7, lsl #18
      54:	5b040500 	blpl	10145c <startup-0x1fefeba4>
      58:	04000000 	streq	r0, [r0], #-0
      5c:	04d30801 	ldrbeq	r0, [r3], #2049	; 0x801
      60:	6a060000 	bvs	180068 <startup-0x1fe7ff98>
      64:	0200001a 	andeq	r0, r0, #26
      68:	0000210a 	andeq	r2, r0, sl, lsl #2
      6c:	00340700 	eorseq	r0, r4, r0, lsl #14
      70:	030c0000 	movweq	r0, #49152	; 0xc000
      74:	00009e06 	andeq	r9, r0, r6, lsl #28
      78:	05c90300 	strbeq	r0, [r9, #768]	; 0x300
      7c:	07030000 	streq	r0, [r3, -r0]
      80:	0000009e 	muleq	r0, lr, r0
      84:	003b0300 	eorseq	r0, fp, r0, lsl #6
      88:	08030000 	stmdaeq	r3, {}	; <UNPREDICTABLE>
      8c:	0000009e 	muleq	r0, lr, r0
      90:	00300304 	eorseq	r0, r0, r4, lsl #6
      94:	09030000 	stmdbeq	r3, {}	; <UNPREDICTABLE>
      98:	0000009e 	muleq	r0, lr, r0
      9c:	04050008 	streq	r0, [r5], #-8
      a0:	00000062 	andeq	r0, r0, r2, rrx
      a4:	00162806 	andseq	r2, r6, r6, lsl #16
      a8:	6d0a0300 	stcvs	3, cr0, [sl, #-0]
      ac:	07000000 	streq	r0, [r0, -r0]
      b0:	000006de 	ldrdeq	r0, [r0], -lr
      b4:	28060424 	stmdacs	r6, {r2, r5, sl}
      b8:	03000001 	movweq	r0, #1
      bc:	00000461 	andeq	r0, r0, r1, ror #8
      c0:	01280704 			; <UNDEFINED> instruction: 0x01280704
      c4:	03000000 	movweq	r0, #0
      c8:	000006ea 	andeq	r0, r0, sl, ror #13
      cc:	012e0804 			; <UNDEFINED> instruction: 0x012e0804
      d0:	03040000 	movweq	r0, #16384	; 0x4000
      d4:	0000063a 	andeq	r0, r0, sl, lsr r6
      d8:	012e0904 			; <UNDEFINED> instruction: 0x012e0904
      dc:	03080000 	movweq	r0, #32768	; 0x8000
      e0:	00000666 	andeq	r0, r0, r6, ror #12
      e4:	01460c04 	cmpeq	r6, r4, lsl #24
      e8:	030c0000 	movweq	r0, #49152	; 0xc000
      ec:	00000342 	andeq	r0, r0, r2, asr #6
      f0:	01460d04 	cmpeq	r6, r4, lsl #26
      f4:	03100000 	tsteq	r0, #0
      f8:	00000473 	andeq	r0, r0, r3, ror r4
      fc:	012e1004 			; <UNDEFINED> instruction: 0x012e1004
     100:	03140000 	tsteq	r4, #0
     104:	00000070 	andeq	r0, r0, r0, ror r0
     108:	012e1104 			; <UNDEFINED> instruction: 0x012e1104
     10c:	03180000 	tsteq	r8, #0
     110:	000003d9 	ldrdeq	r0, [r0], -r9
     114:	012e1204 			; <UNDEFINED> instruction: 0x012e1204
     118:	031c0000 	tsteq	ip, #0
     11c:	000003e9 	andeq	r0, r0, r9, ror #7
     120:	012e1304 			; <UNDEFINED> instruction: 0x012e1304
     124:	00200000 	eoreq	r0, r0, r0
     128:	00a40405 	adceq	r0, r4, r5, lsl #8
     12c:	04080000 	streq	r0, [r8], #-0
     130:	746e6905 	strbtvc	r6, [lr], #-2309	; 0xfffff6fb
     134:	01400900 	cmpeq	r0, r0, lsl #18
     138:	400a0000 	andmi	r0, sl, r0
     13c:	00000001 	andeq	r0, r0, r1
     140:	00af0405 	adceq	r0, pc, r5, lsl #8
     144:	04050000 	streq	r0, [r5], #-0
     148:	00000135 	andeq	r0, r0, r5, lsr r1
     14c:	0006df06 	andeq	sp, r6, r6, lsl #30
     150:	af150400 	svcge	0x00150400
     154:	0b000000 	bleq	15c <startup-0x1ffffea4>
     158:	00000162 	andeq	r0, r0, r2, ror #2
     15c:	00000162 	andeq	r0, r0, r2, ror #2
     160:	0405000c 	streq	r0, [r5], #-12
     164:	0000014c 	andeq	r0, r0, ip, asr #2
     168:	0005560d 	andeq	r5, r5, sp, lsl #12
     16c:	571c0400 	ldrpl	r0, [ip, -r0, lsl #8]
     170:	0d000001 	stceq	0, cr0, [r0, #-4]
     174:	00000424 	andeq	r0, r0, r4, lsr #8
     178:	012e1d04 			; <UNDEFINED> instruction: 0x012e1d04
     17c:	a2060000 	andge	r0, r6, #0
     180:	05000006 	streq	r0, [r0, #-6]
     184:	00005b24 	andeq	r5, r0, r4, lsr #22
     188:	017e0b00 	cmneq	lr, r0, lsl #22
     18c:	019a0000 	orrseq	r0, sl, r0
     190:	9a0e0000 	bls	380198 <startup-0x1fc7fe68>
     194:	ff000001 			; <UNDEFINED> instruction: 0xff000001
     198:	04040003 	streq	r0, [r4], #-3
     19c:	00040607 	andeq	r0, r4, r7, lsl #12
     1a0:	184e0d00 	stmdane	lr, {r8, sl, fp}^
     1a4:	2b050000 	blcs	1401ac <startup-0x1febfe54>
     1a8:	00000189 	andeq	r0, r0, r9, lsl #3
     1ac:	0002480d 	andeq	r4, r2, sp, lsl #16
     1b0:	892c0500 	stmdbhi	ip!, {r8, sl}
     1b4:	0d000001 	stceq	0, cr0, [r0, #-4]
     1b8:	000004e1 	andeq	r0, r0, r1, ror #9
     1bc:	01892d05 	orreq	r2, r9, r5, lsl #26
     1c0:	6b0d0000 	blvs	3401c8 <startup-0x1fcbfe38>
     1c4:	05000003 	streq	r0, [r0, #-3]
     1c8:	0001892e 	andeq	r8, r1, lr, lsr #18
     1cc:	02d00d00 	sbcseq	r0, r0, #0, 26
     1d0:	2f050000 	svccs	0x00050000
     1d4:	00000189 	andeq	r0, r0, r9, lsl #3
     1d8:	0006c00d 	andeq	ip, r6, sp
     1dc:	89300500 	ldmdbhi	r0!, {r8, sl}
     1e0:	0d000001 	stceq	0, cr0, [r0, #-4]
     1e4:	000006b0 			; <UNDEFINED> instruction: 0x000006b0
     1e8:	01893105 	orreq	r3, r9, r5, lsl #2
     1ec:	5b0b0000 	blpl	2c01f4 <startup-0x1fd3fe0c>
     1f0:	fe000000 	cdp2	0, 0, cr0, cr0, cr0, {0}
     1f4:	0f000001 	svceq	0x00000001
     1f8:	0000019a 	muleq	r0, sl, r1
     1fc:	93100077 	tstls	r0, #119	; 0x77
     200:	06000002 	streq	r0, [r0], -r2
     204:	0001ee03 	andeq	lr, r1, r3, lsl #28
     208:	38030500 	stmdacc	r3, {r8, sl}
     20c:	11200072 			; <UNDEFINED> instruction: 0x11200072
     210:	000004f8 	strdeq	r0, [r0], -r8
     214:	01ee0307 	mvneq	r0, r7, lsl #6
     218:	03050000 	movweq	r0, #20480	; 0x5000
     21c:	200072b0 			; <UNDEFINED> instruction: 0x200072b0
     220:	0005d411 	andeq	sp, r5, r1, lsl r4
     224:	ee030800 	cdp	8, 0, cr0, cr3, cr0, {0}
     228:	05000001 	streq	r0, [r0, #-1]
     22c:	00732803 	rsbseq	r2, r3, r3, lsl #16
     230:	005b0b20 	subseq	r0, fp, r0, lsr #22
     234:	02420000 	subeq	r0, r2, #0
     238:	9a0e0000 	bls	380240 <startup-0x1fc7fdc0>
     23c:	17000001 	strne	r0, [r0, -r1]
     240:	6c110001 	ldcvs	0, cr0, [r1], {1}
     244:	09000001 	stmdbeq	r0, {r0}
     248:	00023103 	andeq	r3, r2, r3, lsl #2
     24c:	a0030500 	andge	r0, r3, r0, lsl #10
     250:	11200073 			; <UNDEFINED> instruction: 0x11200073
     254:	00000431 	andeq	r0, r0, r1, lsr r4
     258:	0231030a 	eorseq	r0, r1, #671088640	; 0x28000000
     25c:	03050000 	movweq	r0, #20480	; 0x5000
     260:	200074b8 			; <UNDEFINED> instruction: 0x200074b8
     264:	0003be11 	andeq	fp, r3, r1, lsl lr
     268:	31030b00 	tstcc	r3, r0, lsl #22
     26c:	05000002 	streq	r0, [r0, #-2]
     270:	0075d003 	rsbseq	sp, r5, r3
     274:	005b0b20 	subseq	r0, fp, r0, lsr #22
     278:	02860000 	addeq	r0, r6, #0
     27c:	9a0e0000 	bls	380284 <startup-0x1fc7fd7c>
     280:	ff000001 			; <UNDEFINED> instruction: 0xff000001
     284:	0b110003 	bleq	440298 <startup-0x1fbbfd68>
     288:	0c000005 	stceq	0, cr0, [r0], {5}
     28c:	00027503 	andeq	r7, r2, r3, lsl #10
     290:	e8030500 	stmda	r3, {r8, sl}
     294:	11200076 			; <UNDEFINED> instruction: 0x11200076
     298:	00000045 	andeq	r0, r0, r5, asr #32
     29c:	0275030d 	rsbseq	r0, r5, #872415232	; 0x34000000
     2a0:	03050000 	movweq	r0, #20480	; 0x5000
     2a4:	20007ae8 	andcs	r7, r0, r8, ror #21
     2a8:	00001011 	andeq	r1, r0, r1, lsl r0
     2ac:	75030e00 	strvc	r0, [r3, #-3584]	; 0xfffff200
     2b0:	05000002 	streq	r0, [r0, #-2]
     2b4:	007ee803 	rsbseq	lr, lr, r3, lsl #16
     2b8:	005b0b20 	subseq	r0, fp, r0, lsr #22
     2bc:	02c90000 	sbceq	r0, r9, #0
     2c0:	9a0f0000 	bls	3c02c8 <startup-0x1fc3fd38>
     2c4:	d1000001 	tstle	r0, r1
     2c8:	01be1100 			; <UNDEFINED> instruction: 0x01be1100
     2cc:	030f0000 	movweq	r0, #61440	; 0xf000
     2d0:	000002b9 			; <UNDEFINED> instruction: 0x000002b9
     2d4:	82e80305 	rschi	r0, r8, #335544320	; 0x14000000
     2d8:	0f112000 	svceq	0x00112000
     2dc:	10000004 	andne	r0, r0, r4
     2e0:	0002b903 	andeq	fp, r2, r3, lsl #18
     2e4:	bc030500 	cfstr32lt	mvfx0, [r3], {-0}
     2e8:	11200083 	smlawbne	r0, r3, r0, r0
     2ec:	00000220 	andeq	r0, r0, r0, lsr #4
     2f0:	02b90311 	adcseq	r0, r9, #1140850688	; 0x44000000
     2f4:	03050000 	movweq	r0, #20480	; 0x5000
     2f8:	20008490 	mulcs	r0, r0, r4
     2fc:	00069807 	andeq	r9, r6, r7, lsl #16
     300:	04121400 	ldreq	r1, [r2], #-1024	; 0xfffffc00
     304:	00000345 	andeq	r0, r0, r5, asr #6
     308:	001cdd03 	andseq	sp, ip, r3, lsl #26
     30c:	45051200 	strmi	r1, [r5, #-512]	; 0xfffffe00
     310:	00000003 	andeq	r0, r0, r3
     314:	00028603 	andeq	r8, r2, r3, lsl #12
     318:	45061200 	strmi	r1, [r6, #-512]	; 0xfffffe00
     31c:	04000003 	streq	r0, [r0], #-3
     320:	0003f303 	andeq	pc, r3, r3, lsl #6
     324:	2e081200 	cdpcs	2, 0, cr1, cr8, cr0, {0}
     328:	08000001 	stmdaeq	r0, {r0}
     32c:	0003e303 	andeq	lr, r3, r3, lsl #6
     330:	2e091200 	cdpcs	2, 0, cr1, cr9, cr0, {0}
     334:	0c000001 	stceq	0, cr0, [r0], {1}
     338:	00028b03 	andeq	r8, r2, r3, lsl #22
     33c:	680c1200 	stmdavs	ip, {r9, ip}
     340:	10000003 	andne	r0, r0, r3
     344:	4b040500 	blmi	10174c <startup-0x1fefe8b4>
     348:	04000003 	streq	r0, [r0], #-3
     34c:	04dc0801 	ldrbeq	r0, [ip], #2049	; 0x801
     350:	62090000 	andvs	r0, r9, #0
     354:	0a000003 	beq	368 <startup-0x1ffffc98>
     358:	00000362 	andeq	r0, r0, r2, ror #6
     35c:	00012e0a 	andeq	r2, r1, sl, lsl #28
     360:	04050000 	streq	r0, [r5], #-0
     364:	000002fc 	strdeq	r0, [r0], -ip
     368:	03520405 	cmpeq	r2, #83886080	; 0x5000000
     36c:	99060000 	stmdbls	r6, {}	; <UNPREDICTABLE>
     370:	12000006 	andne	r0, r0, #6
     374:	0002fc0d 	andeq	pc, r2, sp, lsl #24
     378:	05c11100 	strbeq	r1, [r1, #256]	; 0x100
     37c:	03130000 	tsteq	r3, #0
     380:	00000275 	andeq	r0, r0, r5, ror r2
     384:	85640305 	strbhi	r0, [r4, #-773]!	; 0xfffffcfb
     388:	02042000 	andeq	r2, r4, #0
     38c:	00038307 	andeq	r8, r3, r7, lsl #6
     390:	06041000 	streq	r1, [r4], -r0
     394:	22010000 	andcs	r0, r1, #0
     398:	0000012e 	andeq	r0, r0, lr, lsr #2
     39c:	49d40305 	ldmibmi	r4, {r0, r2, r8, r9}^
     3a0:	37102000 	ldrcc	r2, [r0, -r0]
     3a4:	01000001 	tsteq	r0, r1
     3a8:	00009e3a 	andeq	r9, r0, sl, lsr lr
     3ac:	1c030500 	cfstr32ne	mvfx0, [r3], {-0}
     3b0:	10200049 	eorne	r0, r0, r9, asr #32
     3b4:	000001b1 			; <UNDEFINED> instruction: 0x000001b1
     3b8:	009e3b01 	addseq	r3, lr, r1, lsl #22
     3bc:	03050000 	movweq	r0, #20480	; 0x5000
     3c0:	200049c8 	andcs	r4, r0, r8, asr #19
     3c4:	00056d10 	andeq	r6, r5, r0, lsl sp
     3c8:	9e3c0100 	rsflse	f0, f4, f0
     3cc:	05000000 	streq	r0, [r0, #-0]
     3d0:	0049dc03 	subeq	sp, r9, r3, lsl #24
     3d4:	67621220 	strbvs	r1, [r2, -r0, lsr #4]!
     3d8:	9e3d0100 	rsflse	f0, f5, f0
     3dc:	05000000 	streq	r0, [r0, #-0]
     3e0:	00496403 	subeq	r6, r9, r3, lsl #8
     3e4:	06ef1020 	strbteq	r1, [pc], r0, lsr #32
     3e8:	40010000 	andmi	r0, r1, r0
     3ec:	0000009e 	muleq	r0, lr, r0
     3f0:	49440305 	stmdbmi	r4, {r0, r2, r8, r9}^
     3f4:	62102000 	andsvs	r2, r0, #0
     3f8:	01000005 	tsteq	r0, r5
     3fc:	00009e41 	andeq	r9, r0, r1, asr #28
     400:	d0030500 	andle	r0, r3, r0, lsl #10
     404:	10200049 	eorne	r0, r0, r9, asr #32
     408:	00000079 	andeq	r0, r0, r9, ror r0
     40c:	009e4201 	addseq	r4, lr, r1, lsl #4
     410:	03050000 	movweq	r0, #20480	; 0x5000
     414:	20004980 	andcs	r4, r0, r0, lsl #19
     418:	0003b310 	andeq	fp, r3, r0, lsl r3
     41c:	9e430100 	dvflss	f0, f3, f0
     420:	05000000 	streq	r0, [r0, #-0]
     424:	0049ec03 	subeq	lr, r9, r3, lsl #24
     428:	05791020 	ldrbeq	r1, [r9, #-32]!	; 0xffffffe0
     42c:	44010000 	strmi	r0, [r1], #-0
     430:	0000009e 	muleq	r0, lr, r0
     434:	49b80305 	ldmibmi	r8!, {r0, r2, r8, r9}
     438:	81102000 	tsthi	r0, r0
     43c:	01000004 	tsteq	r0, r4
     440:	00009e45 	andeq	r9, r0, r5, asr #28
     444:	cc030500 	cfstr32gt	mvfx0, [r3], {-0}
     448:	10200049 	eorne	r0, r0, r9, asr #32
     44c:	00000622 	andeq	r0, r0, r2, lsr #12
     450:	009e4601 	addseq	r4, lr, r1, lsl #12
     454:	03050000 	movweq	r0, #20480	; 0x5000
     458:	200049d8 	ldrdcs	r4, [r0], -r8
     45c:	0001e510 	andeq	lr, r1, r0, lsl r5
     460:	9e470100 	dvflss	f0, f7, f0
     464:	05000000 	streq	r0, [r0, #-0]
     468:	00499c03 	subeq	r9, r9, r3, lsl #24
     46c:	07251020 	streq	r1, [r5, -r0, lsr #32]!
     470:	48010000 	stmdami	r1, {}	; <UNPREDICTABLE>
     474:	0000009e 	muleq	r0, lr, r0
     478:	49540305 	ldmdbmi	r4, {r0, r2, r8, r9}^
     47c:	a7102000 	ldrge	r2, [r0, -r0]
     480:	01000003 	tsteq	r0, r3
     484:	0000624a 	andeq	r6, r0, sl, asr #4
     488:	48030500 	stmdami	r3, {r8, sl}
     48c:	10200049 	eorne	r0, r0, r9, asr #32
     490:	00000231 	andeq	r0, r0, r1, lsr r2
     494:	00624b01 	rsbeq	r4, r2, r1, lsl #22
     498:	03050000 	movweq	r0, #20480	; 0x5000
     49c:	200049a0 	andcs	r4, r0, r0, lsr #19
     4a0:	0001cf10 	andeq	ip, r1, r0, lsl pc
     4a4:	624c0100 	subvs	r0, ip, #0, 2
     4a8:	05000000 	streq	r0, [r0, #-0]
     4ac:	00496803 	subeq	r6, r9, r3, lsl #16
     4b0:	020d1020 	andeq	r1, sp, #32
     4b4:	4e010000 	cdpmi	0, 0, cr0, cr1, cr0, {0}
     4b8:	00000062 	andeq	r0, r0, r2, rrx
     4bc:	49e00305 	stmibmi	r0!, {r0, r2, r8, r9}^
     4c0:	8f102000 	svchi	0x00102000
     4c4:	01000000 	mrseq	r0, (UNDEF: 0)
     4c8:	00006250 	andeq	r6, r0, r0, asr r2
     4cc:	20030500 	andcs	r0, r3, r0, lsl #10
     4d0:	10200049 	eorne	r0, r0, r9, asr #32
     4d4:	000004b5 			; <UNDEFINED> instruction: 0x000004b5
     4d8:	00625101 	rsbeq	r5, r2, r1, lsl #2
     4dc:	03050000 	movweq	r0, #20480	; 0x5000
     4e0:	200049bc 			; <UNDEFINED> instruction: 0x200049bc
     4e4:	00033210 	andeq	r3, r3, r0, lsl r2
     4e8:	62520100 	subsvs	r0, r2, #0, 2
     4ec:	05000000 	streq	r0, [r0, #-0]
     4f0:	00499003 	subeq	r9, r9, r3
     4f4:	04c41020 	strbeq	r1, [r4], #32
     4f8:	53010000 	movwpl	r0, #4096	; 0x1000
     4fc:	00000062 	andeq	r0, r0, r2, rrx
     500:	49580305 	ldmdbmi	r8, {r0, r2, r8, r9}^
     504:	8a102000 	bhi	40850c <startup-0x1fbf7af4>
     508:	01000006 	tsteq	r0, r6
     50c:	00006254 	andeq	r6, r0, r4, asr r2
     510:	38030500 	stmdacc	r3, {r8, sl}
     514:	10200049 	eorne	r0, r0, r9, asr #32
     518:	00000657 	andeq	r0, r0, r7, asr r6
     51c:	00625501 	rsbeq	r5, r2, r1, lsl #10
     520:	03050000 	movweq	r0, #20480	; 0x5000
     524:	20004974 	andcs	r4, r0, r4, ror r9
     528:	0005b210 	andeq	fp, r5, r0, lsl r2
     52c:	62560100 	subsvs	r0, r6, #0, 2
     530:	05000000 	streq	r0, [r0, #-0]
     534:	0049ac03 	subeq	sl, r9, r3, lsl #24
     538:	048c1020 	streq	r1, [ip], #32
     53c:	57010000 	strpl	r0, [r1, -r0]
     540:	00000062 	andeq	r0, r0, r2, rrx
     544:	492c0305 	stmdbmi	ip!, {r0, r2, r8, r9}
     548:	cf102000 	svcgt	0x00102000
     54c:	01000006 	tsteq	r0, r6
     550:	00006258 	andeq	r6, r0, r8, asr r2
     554:	84030500 	strhi	r0, [r3], #-1280	; 0xfffffb00
     558:	10200049 	eorne	r0, r0, r9, asr #32
     55c:	000003f3 	strdeq	r0, [r0], -r3
     560:	012e8e01 			; <UNDEFINED> instruction: 0x012e8e01
     564:	03050000 	movweq	r0, #20480	; 0x5000
     568:	200048d0 	ldrdcs	r4, [r0], -r0
     56c:	00058e10 	andeq	r8, r5, r0, lsl lr
     570:	2e8f0100 	rmfcse	f0, f7, f0
     574:	05000001 	streq	r0, [r0, #-1]
     578:	00896403 	addeq	r6, r9, r3, lsl #8
     57c:	62611320 	rsbvs	r1, r1, #32, 6	; 0x80000000
     580:	68010073 	stmdavs	r1, {r0, r1, r4, r5, r6}
     584:	00012e02 	andeq	r2, r1, r2, lsl #28
     588:	00189c00 	andseq	r9, r8, r0, lsl #24
     58c:	00001e20 	andeq	r1, r0, r0, lsr #28
     590:	a79c0100 	ldrge	r0, [ip, r0, lsl #2]
     594:	14000005 	strne	r0, [r0], #-5
     598:	0000064a 	andeq	r0, r0, sl, asr #12
     59c:	2e026801 	cdpcs	8, 0, cr6, cr2, cr1, {0}
     5a0:	02000001 	andeq	r0, r0, #1
     5a4:	15007491 	strne	r7, [r0, #-1169]	; 0xfffffb6f
     5a8:	00000720 	andeq	r0, r0, r0, lsr #14
     5ac:	01fc9001 	mvnseq	r9, r1
     5b0:	16a02000 	strtne	r2, [r0], r0
     5b4:	9c010000 	stcls	0, cr0, [r1], {-0}
     5b8:	000009da 	ldrdeq	r0, [r0], -sl
     5bc:	0003fb11 	andeq	pc, r3, r1, lsl fp	; <UNPREDICTABLE>
     5c0:	4c960100 	ldfmis	f0, [r6], {0}
     5c4:	03000001 	movweq	r0, #1
     5c8:	117fac91 			; <UNDEFINED> instruction: 0x117fac91
     5cc:	0000062d 	andeq	r0, r0, sp, lsr #12
     5d0:	00a49701 	adceq	r9, r4, r1, lsl #14
     5d4:	91030000 	mrsls	r0, (UNDEF: 3)
     5d8:	30117fa0 	andscc	r7, r1, r0, lsr #31
     5dc:	01000007 	tsteq	r0, r7
     5e0:	0009da98 	muleq	r9, r8, sl
     5e4:	94910300 	ldrls	r0, [r1], #768	; 0x300
     5e8:	051d117f 	ldreq	r1, [sp, #-383]	; 0xfffffe81
     5ec:	a0010000 	andge	r0, r1, r0
     5f0:	0000014c 	andeq	r0, r0, ip, asr #2
     5f4:	7ef09103 	nrmvcs	f1, f3
     5f8:	00019811 	andeq	r9, r1, r1, lsl r8
     5fc:	a4a10100 	strtge	r0, [r1], #256	; 0x100
     600:	03000000 	movweq	r0, #0
     604:	117ee491 			; <UNDEFINED> instruction: 0x117ee491
     608:	000005f8 	strdeq	r0, [r0], -r8
     60c:	09daa201 	ldmibeq	sl, {r0, r9, sp, pc}^
     610:	91030000 	mrsls	r0, (UNDEF: 3)
     614:	b9117ed8 	ldmdblt	r1, {r3, r4, r6, r7, r9, sl, fp, ip, sp, lr}
     618:	01000002 	tsteq	r0, r2
     61c:	00014ca9 	andeq	r4, r1, r9, lsr #25
     620:	b4910300 	ldrlt	r0, [r1], #768	; 0x300
     624:	0456117e 	ldrbeq	r1, [r6], #-382	; 0xfffffe82
     628:	aa010000 	bge	40630 <startup-0x1ffbf9d0>
     62c:	000000a4 	andeq	r0, r0, r4, lsr #1
     630:	7ea89103 	tanvce	f1, f3
     634:	00067411 	andeq	r7, r6, r1, lsl r4
     638:	daab0100 	ble	feac0a40 <firstTime.4040+0xdeab15fc>
     63c:	03000009 	movweq	r0, #9
     640:	117e9c91 			; <UNDEFINED> instruction: 0x117e9c91
     644:	00000154 	andeq	r0, r0, r4, asr r1
     648:	014cb201 	cmpeq	ip, r1, lsl #4
     64c:	91030000 	mrsls	r0, (UNDEF: 3)
     650:	e6117df8 			; <UNDEFINED> instruction: 0xe6117df8
     654:	01000005 	tsteq	r0, r5
     658:	0000a4b3 			; <UNDEFINED> instruction: 0x0000a4b3
     65c:	ec910300 	ldc	3, cr0, [r1], {0}
     660:	018b117d 	orreq	r1, fp, sp, ror r1
     664:	b4010000 	strlt	r0, [r1], #-0
     668:	000009da 	ldrdeq	r0, [r0], -sl
     66c:	7de09103 	stfvcp	f1, [r0, #12]!
     670:	00044711 	andeq	r4, r4, r1, lsl r7
     674:	4cbb0100 	ldfmis	f0, [fp]
     678:	03000001 	movweq	r0, #1
     67c:	167dbc91 			; <UNDEFINED> instruction: 0x167dbc91
     680:	00000442 	andeq	r0, r0, r2, asr #8
     684:	012ebc01 			; <UNDEFINED> instruction: 0x012ebc01
     688:	06900000 	ldreq	r0, [r0], r0
     68c:	00170000 	andseq	r0, r7, r0
     690:	00018311 	andeq	r8, r1, r1, lsl r3
     694:	4cc00100 	stfmie	f0, [r0], {0}
     698:	03000001 	movweq	r0, #1
     69c:	117d9891 			; <UNDEFINED> instruction: 0x117d9891
     6a0:	00001eac 	andeq	r1, r0, ip, lsr #29
     6a4:	014cc501 	cmpeq	ip, r1, lsl #10
     6a8:	91030000 	mrsls	r0, (UNDEF: 3)
     6ac:	19117cf4 	ldmdbne	r1, {r2, r4, r5, r6, r7, sl, fp, ip, sp, lr}
     6b0:	01000003 	tsteq	r0, r3
     6b4:	00014cca 	andeq	r4, r1, sl, asr #25
     6b8:	d0910300 	addsle	r0, r1, r0, lsl #6
     6bc:	02ed167c 	rsceq	r1, sp, #124, 12	; 0x7c00000
     6c0:	cb010000 	blgt	406c8 <startup-0x1ffbf938>
     6c4:	0000012e 	andeq	r0, r0, lr, lsr #2
     6c8:	000006ce 	andeq	r0, r0, lr, asr #13
     6cc:	1f110017 	svcne	0x00110017
     6d0:	01000004 	tsteq	r0, r4
     6d4:	00014cce 	andeq	r4, r1, lr, asr #25
     6d8:	ac910300 	ldcge	3, cr0, [r1], {0}
     6dc:	03ce167c 	biceq	r1, lr, #124, 12	; 0x7c00000
     6e0:	cf010000 	svcgt	0x00010000
     6e4:	0000012e 	andeq	r0, r0, lr, lsr #2
     6e8:	000006ee 	andeq	r0, r0, lr, ror #13
     6ec:	1a110017 	bne	440750 <startup-0x1fbbf8b0>
     6f0:	0100000d 	tsteq	r0, sp
     6f4:	00014cd4 	ldrdeq	r4, [r1], -r4	; <UNPREDICTABLE>
     6f8:	88910300 	ldmhi	r1, {r8, r9}
     6fc:	0366117c 	cmneq	r6, #124, 2
     700:	da010000 	ble	40708 <startup-0x1ffbf8f8>
     704:	0000014c 	andeq	r0, r0, ip, asr #2
     708:	7be49103 	blvc	ff924b1c <firstTime.4040+0xdf9156d8>
     70c:	00036116 	andeq	r6, r3, r6, lsl r1
     710:	2edb0100 	cdpcs	1, 13, cr0, cr11, cr0, {0}
     714:	1d000001 	stcne	0, cr0, [r0, #-4]
     718:	17000007 	strne	r0, [r0, -r7]
     71c:	49441800 	stmdbmi	r4, {fp, ip}^
     720:	de010050 	mcrle	0, 0, r0, cr1, cr0, {2}
     724:	0000014c 	andeq	r0, r0, ip, asr #2
     728:	7bc09103 	blvc	ff024b3c <firstTime.4040+0xdf0156f8>
     72c:	00005611 	andeq	r5, r0, r1, lsl r6
     730:	4ce20100 	stfmie	f0, [r2]
     734:	03000001 	movweq	r0, #1
     738:	117b9c91 			; <UNDEFINED> instruction: 0x117b9c91
     73c:	00000610 	andeq	r0, r0, r0, lsl r6
     740:	014ce801 	cmpeq	ip, r1, lsl #16
     744:	91030000 	mrsls	r0, (UNDEF: 3)
     748:	16117af8 			; <UNDEFINED> instruction: 0x16117af8
     74c:	01000006 	tsteq	r0, r6
     750:	00014cea 	andeq	r4, r1, sl, ror #25
     754:	d4910300 	ldrle	r0, [r1], #768	; 0x300
     758:	061c117a 			; <UNDEFINED> instruction: 0x061c117a
     75c:	ec010000 	stc	0, cr0, [r1], {-0}
     760:	0000014c 	andeq	r0, r0, ip, asr #2
     764:	7ab09103 	bvc	fec24b78 <firstTime.4040+0xdec15734>
     768:	0001fb11 	andeq	pc, r1, r1, lsl fp	; <UNPREDICTABLE>
     76c:	4cee0100 	stfmie	f0, [lr]
     770:	03000001 	movweq	r0, #1
     774:	117a8c91 			; <UNDEFINED> instruction: 0x117a8c91
     778:	0000017d 	andeq	r0, r0, sp, ror r1
     77c:	014cf101 	cmpeq	ip, r1, lsl #2	; <UNPREDICTABLE>
     780:	91030000 	mrsls	r0, (UNDEF: 3)
     784:	c21179e8 	andsgt	r7, r1, #232, 18	; 0x3a0000
     788:	01000002 	tsteq	r0, r2
     78c:	00014cf6 	strdeq	r4, [r1], -r6
     790:	c4910300 	ldrgt	r0, [r1], #768	; 0x300
     794:	00221179 	eoreq	r1, r2, r9, ror r1
     798:	f9010000 			; <UNDEFINED> instruction: 0xf9010000
     79c:	0000014c 	andeq	r0, r0, ip, asr #2
     7a0:	79a09103 	stmibvc	r0!, {r0, r1, r8, ip, pc}
     7a4:	0006aa11 	andeq	sl, r6, r1, lsl sl
     7a8:	eafc0100 	b	fff00bb0 <firstTime.4040+0xdfef176c>
     7ac:	03000009 	movweq	r0, #9
     7b0:	1978b491 	ldmdbne	r8!, {r0, r4, r7, sl, ip, sp, pc}^
     7b4:	0000005d 	andeq	r0, r0, sp, asr r0
     7b8:	6e011401 	cdpvs	4, 0, cr1, cr1, cr1, {0}
     7bc:	03000003 	movweq	r0, #3
     7c0:	1978a091 	ldmdbne	r8!, {r0, r4, r7, sp, pc}^
     7c4:	000001ab 	andeq	r0, r0, fp, lsr #3
     7c8:	6e011501 	cfsh32vs	mvfx1, mvfx1, #1
     7cc:	03000003 	movweq	r0, #3
     7d0:	19788c91 	ldmdbne	r8!, {r0, r4, r7, sl, fp, pc}^
     7d4:	000001df 	ldrdeq	r0, [r0], -pc	; <UNPREDICTABLE>
     7d8:	6e011601 	cfmadd32vs	mvax0, mvfx1, mvfx1, mvfx1
     7dc:	03000003 	movweq	r0, #3
     7e0:	1977f891 	ldmdbne	r7!, {r0, r4, r7, fp, ip, sp, lr, pc}^
     7e4:	00000214 	andeq	r0, r0, r4, lsl r2
     7e8:	6e011701 	cdpvs	7, 0, cr1, cr1, cr1, {0}
     7ec:	03000003 	movweq	r0, #3
     7f0:	1977e491 	ldmdbne	r7!, {r0, r4, r7, sl, sp, lr, pc}^
     7f4:	000001ef 	andeq	r0, r0, pc, ror #3
     7f8:	6e011801 	cdpvs	8, 0, cr1, cr1, cr1, {0}
     7fc:	03000003 	movweq	r0, #3
     800:	1977d091 	ldmdbne	r7!, {r0, r4, r7, ip, lr, pc}^
     804:	000001f5 	strdeq	r0, [r0], -r5
     808:	6e011901 	vmlavs.f16	s2, s2, s2	; <UNPREDICTABLE>
     80c:	03000003 	movweq	r0, #3
     810:	1977bc91 	ldmdbne	r7!, {r0, r4, r7, sl, fp, ip, sp, pc}^
     814:	0000025a 	andeq	r0, r0, sl, asr r2
     818:	6e011a01 	vmlavs.f32	s2, s2, s2
     81c:	03000003 	movweq	r0, #3
     820:	1977a891 	ldmdbne	r7!, {r0, r4, r7, fp, sp, pc}^
     824:	00000242 	andeq	r0, r0, r2, asr #4
     828:	6e011b01 	vmlavs.f64	d1, d1, d1
     82c:	03000003 	movweq	r0, #3
     830:	19779491 	ldmdbne	r7!, {r0, r4, r7, sl, ip, pc}^
     834:	0000021a 	andeq	r0, r0, sl, lsl r2
     838:	6e011c01 	cdpvs	12, 0, cr1, cr1, cr1, {0}
     83c:	03000003 	movweq	r0, #3
     840:	19778091 	ldmdbne	r7!, {r0, r4, r7, pc}^
     844:	00000260 	andeq	r0, r0, r0, ror #4
     848:	6e011d01 	cdpvs	13, 0, cr1, cr1, cr1, {0}
     84c:	03000003 	movweq	r0, #3
     850:	1976ec91 	ldmdbne	r6!, {r0, r4, r7, sl, fp, sp, lr, pc}^
     854:	0000070b 	andeq	r0, r0, fp, lsl #14
     858:	6e011e01 	cdpvs	14, 0, cr1, cr1, cr1, {0}
     85c:	03000003 	movweq	r0, #3
     860:	1976d891 	ldmdbne	r6!, {r0, r4, r7, fp, ip, lr, pc}^
     864:	00000712 	andeq	r0, r0, r2, lsl r7
     868:	6e011f01 	cdpvs	15, 0, cr1, cr1, cr1, {0}
     86c:	03000003 	movweq	r0, #3
     870:	1976c491 	ldmdbne	r6!, {r0, r4, r7, sl, lr, pc}^
     874:	00000650 	andeq	r0, r0, r0, asr r6
     878:	6e012001 	cdpvs	0, 0, cr2, cr1, cr1, {0}
     87c:	03000003 	movweq	r0, #3
     880:	1976b091 	ldmdbne	r6!, {r0, r4, r7, ip, sp, pc}^
     884:	0000013f 	andeq	r0, r0, pc, lsr r1
     888:	2e013301 	cdpcs	3, 0, cr3, cr1, cr1, {0}
     88c:	02000001 	andeq	r0, r0, #1
     890:	01196c91 			; <UNDEFINED> instruction: 0x01196c91
     894:	01000002 	tsteq	r0, r2
     898:	012e0134 			; <UNDEFINED> instruction: 0x012e0134
     89c:	91020000 	mrsls	r0, (UNDEF: 2)
     8a0:	00661968 	rsbeq	r1, r6, r8, ror #18
     8a4:	35010000 	strcc	r0, [r1, #-0]
     8a8:	00012e01 	andeq	r2, r1, r1, lsl #28
     8ac:	64910200 	ldrvs	r0, [r1], #512	; 0x200
     8b0:	0006fb19 	andeq	pc, r6, r9, lsl fp	; <UNPREDICTABLE>
     8b4:	01360100 	teqeq	r6, r0, lsl #2
     8b8:	0000012e 	andeq	r0, r0, lr, lsr #2
     8bc:	19609102 	stmdbne	r0!, {r1, r8, ip, pc}^
     8c0:	0000066d 	andeq	r0, r0, sp, ror #12
     8c4:	2e013701 	cdpcs	7, 0, cr3, cr1, cr1, {0}
     8c8:	02000001 	andeq	r0, r0, #1
     8cc:	80195c91 	mulshi	r9, r1, ip
     8d0:	01000006 	tsteq	r0, r6
     8d4:	012e0138 			; <UNDEFINED> instruction: 0x012e0138
     8d8:	91020000 	mrsls	r0, (UNDEF: 2)
     8dc:	05f21958 	ldrbeq	r1, [r2, #2392]!	; 0x958
     8e0:	39010000 	stmdbcc	r1, {}	; <UNPREDICTABLE>
     8e4:	00012e01 	andeq	r2, r1, r1, lsl #28
     8e8:	54910200 	ldrpl	r0, [r1], #512	; 0x200
     8ec:	00000019 	andeq	r0, r0, r9, lsl r0
     8f0:	013a0100 	teqeq	sl, r0, lsl #2
     8f4:	0000012e 	andeq	r0, r0, lr, lsr #2
     8f8:	1a509102 	bne	1424d08 <startup-0x1ebdb2f8>
     8fc:	20000894 	mulcs	r0, r4, r8
     900:	00000fca 	andeq	r0, r0, sl, asr #31
     904:	0002af19 	andeq	sl, r2, r9, lsl pc
     908:	01600100 	cmneq	r0, r0, lsl #2
     90c:	0000012e 	andeq	r0, r0, lr, lsr #2
     910:	896c0305 	stmdbhi	ip!, {r0, r2, r8, r9}^
     914:	68192000 	ldmdavs	r9, {sp}
     918:	01000004 	tsteq	r0, r4
     91c:	012e0161 			; <UNDEFINED> instruction: 0x012e0161
     920:	03050000 	movweq	r0, #20480	; 0x5000
     924:	20008970 	andcs	r8, r0, r0, ror r9
     928:	00039619 	andeq	r9, r3, r9, lsl r6
     92c:	01620100 	cmneq	r2, r0, lsl #2
     930:	0000012e 	andeq	r0, r0, lr, lsr #2
     934:	89680305 	stmdbhi	r8!, {r0, r2, r8, r9}^
     938:	691b2000 	ldmdbvs	fp, {sp}
     93c:	01ad0100 			; <UNDEFINED> instruction: 0x01ad0100
     940:	0000012e 	andeq	r0, r0, lr, lsr #2
     944:	48d40305 	ldmmi	r4, {r0, r2, r8, r9}^
     948:	3f192000 	svccc	0x00192000
     94c:	01000006 	tsteq	r0, r6
     950:	012e01c2 	smlawteq	lr, r2, r1, r0
     954:	03050000 	movweq	r0, #20480	; 0x5000
     958:	20008974 	andcs	r8, r0, r4, ror r9
     95c:	00059d19 	andeq	r9, r5, r9, lsl sp
     960:	02060100 	andeq	r0, r6, #0, 2
     964:	0000012e 	andeq	r0, r0, lr, lsr #2
     968:	48dc0305 	ldmmi	ip, {r0, r2, r8, r9}^
     96c:	6a1b2000 	bvs	6c8974 <startup-0x1f93768c>
     970:	02070100 	andeq	r0, r7, #0, 2
     974:	0000012e 	andeq	r0, r0, lr, lsr #2
     978:	48d80305 	ldmmi	r8, {r0, r2, r8, r9}^
     97c:	5e192000 	cdppl	0, 1, cr2, cr9, cr0, {0}
     980:	01000001 	tsteq	r0, r1
     984:	012e0211 			; <UNDEFINED> instruction: 0x012e0211
     988:	03050000 	movweq	r0, #20480	; 0x5000
     98c:	200048e4 	andcs	r4, r0, r4, ror #17
     990:	00030b19 	andeq	r0, r3, r9, lsl fp
     994:	02120100 	andseq	r0, r2, #0, 2
     998:	0000012e 	andeq	r0, r0, lr, lsr #2
     99c:	48e00305 	stmiami	r0!, {r0, r2, r8, r9}^
     9a0:	83192000 	tsthi	r9, #0
     9a4:	01000005 	tsteq	r0, r5
     9a8:	012e021c 			; <UNDEFINED> instruction: 0x012e021c
     9ac:	03050000 	movweq	r0, #20480	; 0x5000
     9b0:	200048ec 	andcs	r4, r0, ip, ror #17
     9b4:	00034919 	andeq	r4, r3, r9, lsl r9
     9b8:	021d0100 	andseq	r0, sp, #0, 2
     9bc:	0000012e 	andeq	r0, r0, lr, lsr #2
     9c0:	48e80305 	stmiami	r8!, {r0, r2, r8, r9}^
     9c4:	1a192000 	bne	6489cc <startup-0x1f9b7634>
     9c8:	0100001c 	tsteq	r0, ip, lsl r0
     9cc:	012e0239 			; <UNDEFINED> instruction: 0x012e0239
     9d0:	03050000 	movweq	r0, #20480	; 0x5000
     9d4:	200048f0 	strdcs	r4, [r0], -r0
     9d8:	a40b0000 	strge	r0, [fp], #-0
     9dc:	ea000000 	b	9e4 <startup-0x1ffff61c>
     9e0:	0f000009 	svceq	0x00000009
     9e4:	0000019a 	muleq	r0, sl, r1
     9e8:	4c0b0000 	stcmi	0, cr0, [fp], {-0}
     9ec:	fa000001 	blx	9f8 <startup-0x1ffff608>
     9f0:	0f000009 	svceq	0x00000009
     9f4:	0000019a 	muleq	r0, sl, r1
     9f8:	a9150002 	ldmdbge	r5, {r1}
     9fc:	01000004 	tsteq	r0, r4
     a00:	0000345a 	andeq	r3, r0, sl, asr r4
     a04:	0001c820 	andeq	ip, r1, r0, lsr #16
     a08:	9c9c0100 	ldflss	f0, [ip], {0}
     a0c:	1100000a 	tstne	r0, sl
     a10:	0000049a 	muleq	r0, sl, r4
     a14:	009e5b01 	addseq	r5, lr, r1, lsl #22
     a18:	91020000 	mrsls	r0, (UNDEF: 2)
     a1c:	02661174 	rsbeq	r1, r6, #116, 2
     a20:	5f010000 	svcpl	0x00010000
     a24:	0000009e 	muleq	r0, lr, r0
     a28:	11709102 	cmnne	r0, r2, lsl #2
     a2c:	00000276 	andeq	r0, r0, r6, ror r2
     a30:	009e6301 	addseq	r6, lr, r1, lsl #6
     a34:	91020000 	mrsls	r0, (UNDEF: 2)
     a38:	044d116c 	strbeq	r1, [sp], #-364	; 0xfffffe94
     a3c:	67010000 	strvs	r0, [r1, -r0]
     a40:	0000009e 	muleq	r0, lr, r0
     a44:	11689102 	cmnne	r8, r2, lsl #2
     a48:	000002f9 	strdeq	r0, [r0], -r9
     a4c:	009e6b01 	addseq	r6, lr, r1, lsl #22
     a50:	91020000 	mrsls	r0, (UNDEF: 2)
     a54:	03021164 	movweq	r1, #8548	; 0x2164
     a58:	6f010000 	svcvs	0x00010000
     a5c:	0000009e 	muleq	r0, lr, r0
     a60:	11609102 	cmnne	r0, r2, lsl #2
     a64:	0000014b 	andeq	r0, r0, fp, asr #2
     a68:	009e7301 	addseq	r7, lr, r1, lsl #6
     a6c:	91020000 	mrsls	r0, (UNDEF: 2)
     a70:	0320115c 			; <UNDEFINED> instruction: 0x0320115c
     a74:	77010000 	strvc	r0, [r1, -r0]
     a78:	0000009e 	muleq	r0, lr, r0
     a7c:	11589102 	cmpne	r8, r2, lsl #2
     a80:	00000329 	andeq	r0, r0, r9, lsr #6
     a84:	009e7a01 	addseq	r7, lr, r1, lsl #20
     a88:	91020000 	mrsls	r0, (UNDEF: 2)
     a8c:	00851154 	addeq	r1, r5, r4, asr r1
     a90:	7d010000 	stcvc	0, cr0, [r1, #-0]
     a94:	0000009e 	muleq	r0, lr, r0
     a98:	00509102 	subseq	r9, r0, r2, lsl #2
     a9c:	0002a61c 	andeq	sl, r2, ip, lsl r6
     aa0:	10260100 	eorne	r0, r6, r0, lsl #2
     aa4:	24200000 	strtcs	r0, [r0], #-0
     aa8:	01000000 	mrseq	r0, (UNDEF: 0)
     aac:	01a31d9c 			; <UNDEFINED> instruction: 0x01a31d9c
     ab0:	30010000 	andcc	r0, r1, r0
     ab4:	20000000 	andcs	r0, r0, r0
     ab8:	0000000c 	andeq	r0, r0, ip
     abc:	e0009c01 	and	r9, r0, r1, lsl #24
     ac0:	04000001 	streq	r0, [r0], #-1
     ac4:	00019e00 	andeq	r9, r1, r0, lsl #28
     ac8:	9f010400 	svcls	0x00010400
     acc:	0c000000 	stceq	0, cr0, [r0], {-0}
     ad0:	0000074f 	andeq	r0, r0, pc, asr #14
     ad4:	200018bc 			; <UNDEFINED> instruction: 0x200018bc
     ad8:	00000056 	andeq	r0, r0, r6, asr r0
     adc:	000003d4 	ldrdeq	r0, [r0], -r4
     ae0:	05020c02 	streq	r0, [r2, #-3074]	; 0xfffff3fe
     ae4:	0000004e 	andeq	r0, r0, lr, asr #32
     ae8:	00035b03 	andeq	r5, r3, r3, lsl #22
     aec:	4e070200 	cdpmi	2, 0, cr0, cr7, cr0, {0}
     af0:	00000000 	andeq	r0, r0, r0
     af4:	00071903 	andeq	r1, r7, r3, lsl #18
     af8:	4e080200 	cdpmi	2, 0, cr0, cr8, cr0, {0}
     afc:	04000000 	streq	r0, [r0], #-0
     b00:	00191803 	andseq	r1, r9, r3, lsl #16
     b04:	55090200 	strpl	r0, [r9, #-512]	; 0xfffffe00
     b08:	08000000 	stmdaeq	r0, {}	; <UNPREDICTABLE>
     b0c:	07040400 	streq	r0, [r4, -r0, lsl #8]
     b10:	00000389 	andeq	r0, r0, r9, lsl #7
     b14:	005b0405 	subseq	r0, fp, r5, lsl #8
     b18:	01040000 	mrseq	r0, (UNDEF: 4)
     b1c:	0004d308 	andeq	sp, r4, r8, lsl #6
     b20:	1a6a0600 	bne	1a82328 <startup-0x1e57dcd8>
     b24:	0a020000 	beq	80b2c <startup-0x1ff7f4d4>
     b28:	00000021 	andeq	r0, r0, r1, lsr #32
     b2c:	00003407 	andeq	r3, r0, r7, lsl #8
     b30:	06030c00 	streq	r0, [r3], -r0, lsl #24
     b34:	0000009e 	muleq	r0, lr, r0
     b38:	0005c903 	andeq	ip, r5, r3, lsl #18
     b3c:	9e070300 	cdpls	3, 0, cr0, cr7, cr0, {0}
     b40:	00000000 	andeq	r0, r0, r0
     b44:	00003b03 	andeq	r3, r0, r3, lsl #22
     b48:	9e080300 	cdpls	3, 0, cr0, cr8, cr0, {0}
     b4c:	04000000 	streq	r0, [r0], #-0
     b50:	00003003 	andeq	r3, r0, r3
     b54:	9e090300 	cdpls	3, 0, cr0, cr9, cr0, {0}
     b58:	08000000 	stmdaeq	r0, {}	; <UNPREDICTABLE>
     b5c:	62040500 	andvs	r0, r4, #0, 10
     b60:	06000000 	streq	r0, [r0], -r0
     b64:	00001628 	andeq	r1, r0, r8, lsr #12
     b68:	006d0a03 	rsbeq	r0, sp, r3, lsl #20
     b6c:	de070000 	cdple	0, 0, cr0, cr7, cr0, {0}
     b70:	24000006 	strcs	r0, [r0], #-6
     b74:	01280604 			; <UNDEFINED> instruction: 0x01280604
     b78:	61030000 	mrsvs	r0, (UNDEF: 3)
     b7c:	04000004 	streq	r0, [r0], #-4
     b80:	00012807 	andeq	r2, r1, r7, lsl #16
     b84:	ea030000 	b	c0b8c <startup-0x1ff3f474>
     b88:	04000006 	streq	r0, [r0], #-6
     b8c:	00012e08 	andeq	r2, r1, r8, lsl #28
     b90:	3a030400 	bcc	c1b98 <startup-0x1ff3e468>
     b94:	04000006 	streq	r0, [r0], #-6
     b98:	00012e09 	andeq	r2, r1, r9, lsl #28
     b9c:	66030800 	strvs	r0, [r3], -r0, lsl #16
     ba0:	04000006 	streq	r0, [r0], #-6
     ba4:	0001460c 	andeq	r4, r1, ip, lsl #12
     ba8:	42030c00 	andmi	r0, r3, #0, 24
     bac:	04000003 	streq	r0, [r0], #-3
     bb0:	0001460d 	andeq	r4, r1, sp, lsl #12
     bb4:	73031000 	movwvc	r1, #12288	; 0x3000
     bb8:	04000004 	streq	r0, [r0], #-4
     bbc:	00012e10 	andeq	r2, r1, r0, lsl lr
     bc0:	70031400 	andvc	r1, r3, r0, lsl #8
     bc4:	04000000 	streq	r0, [r0], #-0
     bc8:	00012e11 	andeq	r2, r1, r1, lsl lr
     bcc:	d9031800 	stmdble	r3, {fp, ip}
     bd0:	04000003 	streq	r0, [r0], #-3
     bd4:	00012e12 	andeq	r2, r1, r2, lsl lr
     bd8:	e9031c00 	stmdb	r3, {sl, fp, ip}
     bdc:	04000003 	streq	r0, [r0], #-3
     be0:	00012e13 	andeq	r2, r1, r3, lsl lr
     be4:	05002000 	streq	r2, [r0, #-0]
     be8:	0000a404 	andeq	sl, r0, r4, lsl #8
     bec:	05040800 	streq	r0, [r4, #-2048]	; 0xfffff800
     bf0:	00746e69 	rsbseq	r6, r4, r9, ror #28
     bf4:	00014009 	andeq	r4, r1, r9
     bf8:	01400a00 	cmpeq	r0, r0, lsl #20
     bfc:	05000000 	streq	r0, [r0, #-0]
     c00:	0000af04 	andeq	sl, r0, r4, lsl #30
     c04:	35040500 	strcc	r0, [r4, #-1280]	; 0xfffffb00
     c08:	06000001 	streq	r0, [r0], -r1
     c0c:	000006df 	ldrdeq	r0, [r0], -pc	; <UNPREDICTABLE>
     c10:	00af1504 	adceq	r1, pc, r4, lsl #10
     c14:	620b0000 	andvs	r0, fp, #0
     c18:	62000001 	andvs	r0, r0, #1
     c1c:	0c000001 	stceq	0, cr0, [r0], {1}
     c20:	4c040500 	cfstr32mi	mvfx0, [r4], {-0}
     c24:	0d000001 	stceq	0, cr0, [r0, #-4]
     c28:	00000556 	andeq	r0, r0, r6, asr r5
     c2c:	01571c04 	cmpeq	r7, r4, lsl #24
     c30:	240d0000 	strcs	r0, [sp], #-0
     c34:	04000004 	streq	r0, [r0], #-4
     c38:	00012e1d 	andeq	r2, r1, sp, lsl lr
     c3c:	07040400 	streq	r0, [r4, -r0, lsl #8]
     c40:	00000406 	andeq	r0, r0, r6, lsl #8
     c44:	0001680e 	andeq	r6, r1, lr, lsl #16
     c48:	05030100 	streq	r0, [r3, #-256]	; 0xffffff00
     c4c:	0049f003 	subeq	pc, r9, r3
     c50:	01730e20 	cmneq	r3, r0, lsr #28
     c54:	04010000 	streq	r0, [r1], #-0
     c58:	48f40305 	ldmmi	r4!, {r0, r2, r8, r9}^
     c5c:	3e0f2000 	cdpcc	0, 0, cr2, cr15, cr0, {0}
     c60:	01000007 	tsteq	r0, r7
     c64:	0018cc0c 	andseq	ip, r8, ip, lsl #24
     c68:	00004620 	andeq	r4, r0, r0, lsr #12
     c6c:	c39c0100 	orrsgt	r0, ip, #0, 2
     c70:	10000001 	andne	r0, r0, r1
     c74:	00000782 	andeq	r0, r0, r2, lsl #15
     c78:	01620c01 	cmneq	r2, r1, lsl #24
     c7c:	91020000 	mrsls	r0, (UNDEF: 2)
     c80:	42110074 	andsmi	r0, r1, #116	; 0x74
     c84:	01000003 	tsteq	r0, r3
     c88:	0018bc07 	andseq	fp, r8, r7, lsl #24
     c8c:	00001020 	andeq	r1, r0, r0, lsr #32
     c90:	109c0100 	addsne	r0, ip, r0, lsl #2
     c94:	00000782 	andeq	r0, r0, r2, lsl #15
     c98:	01620701 	cmneq	r2, r1, lsl #14
     c9c:	91020000 	mrsls	r0, (UNDEF: 2)
     ca0:	2b000074 	blcs	e78 <startup-0x1ffff188>
     ca4:	04000005 	streq	r0, [r0], #-5
     ca8:	00028400 	andeq	r8, r2, r0, lsl #8
     cac:	9f010400 	svcls	0x00010400
     cb0:	0c000000 	stceq	0, cr0, [r0], {-0}
     cb4:	000009c2 	andeq	r0, r0, r2, asr #19
     cb8:	20001914 	andcs	r1, r0, r4, lsl r9
     cbc:	000002a8 	andeq	r0, r0, r8, lsr #5
     cc0:	00000462 	andeq	r0, r0, r2, ror #8
     cc4:	05020c02 	streq	r0, [r2, #-3074]	; 0xfffff3fe
     cc8:	0000004e 	andeq	r0, r0, lr, asr #32
     ccc:	00035b03 	andeq	r5, r3, r3, lsl #22
     cd0:	4e070200 	cdpmi	2, 0, cr0, cr7, cr0, {0}
     cd4:	00000000 	andeq	r0, r0, r0
     cd8:	00071903 	andeq	r1, r7, r3, lsl #18
     cdc:	4e080200 	cdpmi	2, 0, cr0, cr8, cr0, {0}
     ce0:	04000000 	streq	r0, [r0], #-0
     ce4:	00191803 	andseq	r1, r9, r3, lsl #16
     ce8:	55090200 	strpl	r0, [r9, #-512]	; 0xfffffe00
     cec:	08000000 	stmdaeq	r0, {}	; <UNPREDICTABLE>
     cf0:	07040400 	streq	r0, [r4, -r0, lsl #8]
     cf4:	00000389 	andeq	r0, r0, r9, lsl #7
     cf8:	005b0405 	subseq	r0, fp, r5, lsl #8
     cfc:	01040000 	mrseq	r0, (UNDEF: 4)
     d00:	0004d308 	andeq	sp, r4, r8, lsl #6
     d04:	1a6a0600 	bne	1a8250c <startup-0x1e57daf4>
     d08:	0a020000 	beq	80d10 <startup-0x1ff7f2f0>
     d0c:	00000021 	andeq	r0, r0, r1, lsr #32
     d10:	00003407 	andeq	r3, r0, r7, lsl #8
     d14:	06030c00 	streq	r0, [r3], -r0, lsl #24
     d18:	0000009e 	muleq	r0, lr, r0
     d1c:	0005c903 	andeq	ip, r5, r3, lsl #18
     d20:	9e070300 	cdpls	3, 0, cr0, cr7, cr0, {0}
     d24:	00000000 	andeq	r0, r0, r0
     d28:	00003b03 	andeq	r3, r0, r3, lsl #22
     d2c:	9e080300 	cdpls	3, 0, cr0, cr8, cr0, {0}
     d30:	04000000 	streq	r0, [r0], #-0
     d34:	00003003 	andeq	r3, r0, r3
     d38:	9e090300 	cdpls	3, 0, cr0, cr9, cr0, {0}
     d3c:	08000000 	stmdaeq	r0, {}	; <UNPREDICTABLE>
     d40:	62040500 	andvs	r0, r4, #0, 10
     d44:	06000000 	streq	r0, [r0], -r0
     d48:	00001628 	andeq	r1, r0, r8, lsr #12
     d4c:	006d0a03 	rsbeq	r0, sp, r3, lsl #20
     d50:	de070000 	cdple	0, 0, cr0, cr7, cr0, {0}
     d54:	24000006 	strcs	r0, [r0], #-6
     d58:	01280604 			; <UNDEFINED> instruction: 0x01280604
     d5c:	61030000 	mrsvs	r0, (UNDEF: 3)
     d60:	04000004 	streq	r0, [r0], #-4
     d64:	00012807 	andeq	r2, r1, r7, lsl #16
     d68:	ea030000 	b	c0d70 <startup-0x1ff3f290>
     d6c:	04000006 	streq	r0, [r0], #-6
     d70:	00012e08 	andeq	r2, r1, r8, lsl #28
     d74:	3a030400 	bcc	c1d7c <startup-0x1ff3e284>
     d78:	04000006 	streq	r0, [r0], #-6
     d7c:	00012e09 	andeq	r2, r1, r9, lsl #28
     d80:	66030800 	strvs	r0, [r3], -r0, lsl #16
     d84:	04000006 	streq	r0, [r0], #-6
     d88:	0001460c 	andeq	r4, r1, ip, lsl #12
     d8c:	42030c00 	andmi	r0, r3, #0, 24
     d90:	04000003 	streq	r0, [r0], #-3
     d94:	0001460d 	andeq	r4, r1, sp, lsl #12
     d98:	73031000 	movwvc	r1, #12288	; 0x3000
     d9c:	04000004 	streq	r0, [r0], #-4
     da0:	00012e10 	andeq	r2, r1, r0, lsl lr
     da4:	70031400 	andvc	r1, r3, r0, lsl #8
     da8:	04000000 	streq	r0, [r0], #-0
     dac:	00012e11 	andeq	r2, r1, r1, lsl lr
     db0:	d9031800 	stmdble	r3, {fp, ip}
     db4:	04000003 	streq	r0, [r0], #-3
     db8:	00012e12 	andeq	r2, r1, r2, lsl lr
     dbc:	e9031c00 	stmdb	r3, {sl, fp, ip}
     dc0:	04000003 	streq	r0, [r0], #-3
     dc4:	00012e13 	andeq	r2, r1, r3, lsl lr
     dc8:	05002000 	streq	r2, [r0, #-0]
     dcc:	0000a404 	andeq	sl, r0, r4, lsl #8
     dd0:	05040800 	streq	r0, [r4, #-2048]	; 0xfffff800
     dd4:	00746e69 	rsbseq	r6, r4, r9, ror #28
     dd8:	00014009 	andeq	r4, r1, r9
     ddc:	01400a00 	cmpeq	r0, r0, lsl #20
     de0:	05000000 	streq	r0, [r0, #-0]
     de4:	0000af04 	andeq	sl, r0, r4, lsl #30
     de8:	35040500 	strcc	r0, [r4, #-1280]	; 0xfffffb00
     dec:	06000001 	streq	r0, [r0], -r1
     df0:	000006df 	ldrdeq	r0, [r0], -pc	; <UNPREDICTABLE>
     df4:	00af1504 	adceq	r1, pc, r4, lsl #10
     df8:	620b0000 	andvs	r0, fp, #0
     dfc:	62000001 	andvs	r0, r0, #1
     e00:	0c000001 	stceq	0, cr0, [r0], {1}
     e04:	4c040500 	cfstr32mi	mvfx0, [r4], {-0}
     e08:	0d000001 	stceq	0, cr0, [r0, #-4]
     e0c:	00000556 	andeq	r0, r0, r6, asr r5
     e10:	01571c04 	cmpeq	r7, r4, lsl #24
     e14:	240d0000 	strcs	r0, [sp], #-0
     e18:	04000004 	streq	r0, [r0], #-4
     e1c:	00012e1d 	andeq	r2, r1, sp, lsl lr
     e20:	005b0b00 	subseq	r0, fp, r0, lsl #22
     e24:	018e0000 	orreq	r0, lr, r0
     e28:	8e0e0000 	cdphi	0, 0, cr0, cr14, cr0, {0}
     e2c:	0b000001 	bleq	e38 <startup-0x1ffff1c8>
     e30:	07040400 	streq	r0, [r4, -r0, lsl #8]
     e34:	00000406 	andeq	r0, r0, r6, lsl #8
     e38:	0009870f 	andeq	r8, r9, pc, lsl #14
     e3c:	7e030500 	cfsh32vc	mvfx0, mvfx3, #0
     e40:	05000001 	streq	r0, [r0, #-1]
     e44:	00897803 	addeq	r7, r9, r3, lsl #16
     e48:	08810f20 	stmeq	r1, {r5, r8, r9, sl, fp}
     e4c:	03060000 	movweq	r0, #24576	; 0x6000
     e50:	0000017e 	andeq	r0, r0, lr, ror r1
     e54:	89840305 	stmibhi	r4, {r0, r2, r8, r9}
     e58:	9c0f2000 	stcls	0, cr2, [pc], {-0}
     e5c:	07000008 	streq	r0, [r0, -r8]
     e60:	00017e03 	andeq	r7, r1, r3, lsl #28
     e64:	90030500 	andls	r0, r3, r0, lsl #10
     e68:	0f200089 	svceq	0x00200089
     e6c:	000007fd 	strdeq	r0, [r0], -sp
     e70:	017e0308 	cmneq	lr, r8, lsl #6
     e74:	03050000 	movweq	r0, #20480	; 0x5000
     e78:	2000899c 	mulcs	r0, ip, r9
     e7c:	0008ad0f 	andeq	sl, r8, pc, lsl #26
     e80:	7e030900 	vmlavc.f16	s0, s6, s0	; <UNPREDICTABLE>
     e84:	05000001 	streq	r0, [r0, #-1]
     e88:	0089a803 	addeq	sl, r9, r3, lsl #16
     e8c:	09ef0f20 	stmibeq	pc!, {r5, r8, r9, sl, fp}^	; <UNPREDICTABLE>
     e90:	030a0000 	movweq	r0, #40960	; 0xa000
     e94:	0000017e 	andeq	r0, r0, lr, ror r1
     e98:	89b40305 	ldmibhi	r4!, {r0, r2, r8, r9}
     e9c:	6b0f2000 	blvs	3c8ea4 <startup-0x1fc3715c>
     ea0:	0b000009 	bleq	ecc <startup-0x1ffff134>
     ea4:	00017e03 	andeq	r7, r1, r3, lsl #28
     ea8:	c0030500 	andgt	r0, r3, r0, lsl #10
     eac:	0f200089 	svceq	0x00200089
     eb0:	000008d0 	ldrdeq	r0, [r0], -r0	; <UNPREDICTABLE>
     eb4:	017e030c 	cmneq	lr, ip, lsl #6
     eb8:	03050000 	movweq	r0, #20480	; 0x5000
     ebc:	200089cc 	andcs	r8, r0, ip, asr #19
     ec0:	00080d0f 	andeq	r0, r8, pc, lsl #26
     ec4:	7e030d00 	cdpvc	13, 0, cr0, cr3, cr0, {0}
     ec8:	05000001 	streq	r0, [r0, #-1]
     ecc:	0089d803 	addeq	sp, r9, r3, lsl #16
     ed0:	083b0f20 	ldmdaeq	fp!, {r5, r8, r9, sl, fp}
     ed4:	030e0000 	movweq	r0, #57344	; 0xe000
     ed8:	0000017e 	andeq	r0, r0, lr, ror r1
     edc:	89e40305 	stmibhi	r4!, {r0, r2, r8, r9}^
     ee0:	1d0f2000 	stcne	0, cr2, [pc, #-0]	; ee8 <startup-0x1ffff118>
     ee4:	0f000009 	svceq	0x00000009
     ee8:	00017e03 	andeq	r7, r1, r3, lsl #28
     eec:	f0030500 			; <UNDEFINED> instruction: 0xf0030500
     ef0:	10200089 	eorne	r0, r0, r9, lsl #1
     ef4:	000007c1 	andeq	r0, r0, r1, asr #15
     ef8:	009e1101 	addseq	r1, lr, r1, lsl #2
     efc:	03050000 	movweq	r0, #20480	; 0x5000
     f00:	20004cb0 			; <UNDEFINED> instruction: 0x20004cb0
     f04:	00079110 	andeq	r9, r7, r0, lsl r1
     f08:	9e120100 	muflss	f0, f2, f0
     f0c:	05000000 	streq	r0, [r0, #-0]
     f10:	004cc803 	subeq	ip, ip, r3, lsl #16
     f14:	07e71020 	strbeq	r1, [r7, r0, lsr #32]!
     f18:	13010000 	movwne	r0, #4096	; 0x1000
     f1c:	0000009e 	muleq	r0, lr, r0
     f20:	4b800305 	blmi	fe001b3c <firstTime.4040+0xddff26f8>
     f24:	c6102000 	ldrgt	r2, [r0], -r0
     f28:	01000008 	tsteq	r0, r8
     f2c:	00009e14 	andeq	r9, r0, r4, lsl lr
     f30:	c4030500 	strgt	r0, [r3], #-1280	; 0xfffffb00
     f34:	1020004c 	eorne	r0, r0, ip, asr #32
     f38:	00000891 	muleq	r0, r1, r8
     f3c:	009e1501 	addseq	r1, lr, r1, lsl #10
     f40:	03050000 	movweq	r0, #20480	; 0x5000
     f44:	20004c9c 	mulcs	r0, ip, ip
     f48:	0007a910 	andeq	sl, r7, r0, lsl r9
     f4c:	9e160100 	muflss	f0, f6, f0
     f50:	05000000 	streq	r0, [r0, #-0]
     f54:	004b9003 	subeq	r9, fp, r3
     f58:	081e1020 	ldmdaeq	lr, {r5, ip}
     f5c:	17010000 	strne	r0, [r1, -r0]
     f60:	0000009e 	muleq	r0, lr, r0
     f64:	4cc00305 	stclmi	3, cr0, [r0], {5}
     f68:	44102000 	ldrmi	r2, [r0], #-0
     f6c:	01000009 	tsteq	r0, r9
     f70:	00009e18 	andeq	r9, r0, r8, lsl lr
     f74:	7c030500 	cfstr32vc	mvfx0, [r3], {-0}
     f78:	1020004c 	eorne	r0, r0, ip, asr #32
     f7c:	000007f2 	strdeq	r0, [r0], -r2
     f80:	009e1901 	addseq	r1, lr, r1, lsl #18
     f84:	03050000 	movweq	r0, #20480	; 0x5000
     f88:	20004be8 	andcs	r4, r0, r8, ror #23
     f8c:	00078710 	andeq	r8, r7, r0, lsl r7
     f90:	9e1a0100 	muflse	f0, f2, f0
     f94:	05000000 	streq	r0, [r0, #-0]
     f98:	004c9803 	subeq	r9, ip, r3, lsl #16
     f9c:	085f1020 	ldmdaeq	pc, {r5, ip}^	; <UNPREDICTABLE>
     fa0:	1b010000 	blne	40fa8 <startup-0x1ffbf058>
     fa4:	0000009e 	muleq	r0, lr, r0
     fa8:	4ca00305 	stcmi	3, cr0, [r0], #20
     fac:	d9102000 	ldmdble	r0, {sp}
     fb0:	01000007 	tsteq	r0, r7
     fb4:	0000621d 	andeq	r6, r0, sp, lsl r2
     fb8:	b8030500 	stmdalt	r3, {r8, sl}
     fbc:	1020004b 	eorne	r0, r0, fp, asr #32
     fc0:	0000094e 	andeq	r0, r0, lr, asr #18
     fc4:	00621e01 	rsbeq	r1, r2, r1, lsl #28
     fc8:	03050000 	movweq	r0, #20480	; 0x5000
     fcc:	20004ca4 	andcs	r4, r0, r4, lsr #25
     fd0:	0008fa10 	andeq	pc, r8, r0, lsl sl	; <UNPREDICTABLE>
     fd4:	621f0100 	andsvs	r0, pc, #0, 2
     fd8:	05000000 	streq	r0, [r0, #-0]
     fdc:	004c8003 	subeq	r8, ip, r3
     fe0:	079b1020 	ldreq	r1, [fp, r0, lsr #32]
     fe4:	20010000 	andcs	r0, r1, r0
     fe8:	00000062 	andeq	r0, r0, r2, rrx
     fec:	4bac0305 	blmi	feb01c08 <firstTime.4040+0xdeaf27c4>
     ff0:	99102000 	ldmdbls	r0, {sp}
     ff4:	01000009 	tsteq	r0, r9
     ff8:	00006221 	andeq	r6, r0, r1, lsr #4
     ffc:	b4030500 	strlt	r0, [r3], #-1280	; 0xfffffb00
    1000:	1020004c 	eorne	r0, r0, ip, asr #32
    1004:	000007cb 	andeq	r0, r0, fp, asr #15
    1008:	00622201 	rsbeq	r2, r2, r1, lsl #4
    100c:	03050000 	movweq	r0, #20480	; 0x5000
    1010:	20004c64 	andcs	r4, r0, r4, ror #24
    1014:	0008e010 	andeq	lr, r8, r0, lsl r0
    1018:	62230100 	eorvs	r0, r3, #0, 2
    101c:	05000000 	streq	r0, [r0, #-0]
    1020:	004b8403 	subeq	r8, fp, r3, lsl #8
    1024:	07b31020 	ldreq	r1, [r3, r0, lsr #32]!
    1028:	24010000 	strcs	r0, [r1], #-0
    102c:	00000062 	andeq	r0, r0, r2, rrx
    1030:	4b940305 	blmi	fe501c4c <firstTime.4040+0xde4f2808>
    1034:	5c102000 	ldcpl	0, cr2, [r0], {-0}
    1038:	01000009 	tsteq	r0, r9
    103c:	00006225 	andeq	r6, r0, r5, lsr #4
    1040:	d0030500 	andle	r0, r3, r0, lsl #10
    1044:	1020004b 	eorne	r0, r0, fp, asr #32
    1048:	00000873 	andeq	r0, r0, r3, ror r8
    104c:	00622601 	rsbeq	r2, r2, r1, lsl #12
    1050:	03050000 	movweq	r0, #20480	; 0x5000
    1054:	20004c58 	andcs	r4, r0, r8, asr ip
    1058:	0009b310 	andeq	fp, r9, r0, lsl r3
    105c:	62270100 	eorvs	r0, r7, #0, 2
    1060:	05000000 	streq	r0, [r0, #-0]
    1064:	004c8c03 	subeq	r8, ip, r3, lsl #24
    1068:	08be1020 	ldmeq	lr!, {r5, ip}
    106c:	2a010000 	bcs	41074 <startup-0x1ffbef8c>
    1070:	0000014c 	andeq	r0, r0, ip, asr #2
    1074:	4bec0305 	blmi	ffb01c90 <firstTime.4040+0xdfaf284c>
    1078:	39102000 	ldmdbcc	r0, {sp}
    107c:	01000009 	tsteq	r0, r9
    1080:	0000a42b 	andeq	sl, r0, fp, lsr #8
    1084:	dc030500 	cfstr32le	mvfx0, [r3], {-0}
    1088:	1020004b 	eorne	r0, r0, fp, asr #32
    108c:	000009a8 	andeq	r0, r0, r8, lsr #19
    1090:	00a42c01 	adceq	r2, r4, r1, lsl #24
    1094:	03050000 	movweq	r0, #20480	; 0x5000
    1098:	20004ba0 	andcs	r4, r0, r0, lsr #23
    109c:	00084b10 	andeq	r4, r8, r0, lsl fp
    10a0:	a42d0100 	strtge	r0, [sp], #-256	; 0xffffff00
    10a4:	05000000 	streq	r0, [r0, #-0]
    10a8:	004bc403 	subeq	ip, fp, r3, lsl #8
    10ac:	08ef1020 	stmiaeq	pc!, {r5, ip}^	; <UNPREDICTABLE>
    10b0:	2e010000 	cdpcs	0, 0, cr0, cr1, cr0, {0}
    10b4:	000000a4 	andeq	r0, r0, r4, lsr #1
    10b8:	4c700305 	ldclmi	3, cr0, [r0], #-20	; 0xffffffec
    10bc:	7c102000 	ldcvc	0, cr2, [r0], {-0}
    10c0:	01000009 	tsteq	r0, r9
    10c4:	0000a42f 	andeq	sl, r0, pc, lsr #8
    10c8:	10030500 	andne	r0, r3, r0, lsl #10
    10cc:	0b20004c 	bleq	801204 <startup-0x1f7fedfc>
    10d0:	000000a4 	andeq	r0, r0, r4, lsr #1
    10d4:	0000043c 	andeq	r0, r0, ip, lsr r4
    10d8:	00018e0e 	andeq	r8, r1, lr, lsl #28
    10dc:	10000400 	andne	r0, r0, r0, lsl #8
    10e0:	0000092e 	andeq	r0, r0, lr, lsr #18
    10e4:	042c3001 	strteq	r3, [ip], #-1
    10e8:	03050000 	movweq	r0, #20480	; 0x5000
    10ec:	20004c1c 	andcs	r4, r0, ip, lsl ip
    10f0:	00091311 	andeq	r1, r9, r1, lsl r3
    10f4:	985f0100 	ldmdals	pc, {r8}^	; <UNPREDICTABLE>
    10f8:	2420001a 	strtcs	r0, [r0], #-26	; 0xffffffe6
    10fc:	01000001 	tsteq	r0, r1
    1100:	0004829c 	muleq	r4, ip, r2
    1104:	08be1200 	ldmeq	lr!, {r9, ip}
    1108:	5f010000 	svcpl	0x00010000
    110c:	00000162 	andeq	r0, r0, r2, ror #2
    1110:	0f6c9102 	svceq	0x006c9102
    1114:	00000909 	andeq	r0, r0, r9, lsl #18
    1118:	012e6001 			; <UNDEFINED> instruction: 0x012e6001
    111c:	03050000 	movweq	r0, #20480	; 0x5000
    1120:	200089fc 	strdcs	r8, [r0], -ip
    1124:	04a91300 	strteq	r1, [r9], #768	; 0x300
    1128:	31010000 	mrscc	r0, (UNDEF: 1)
    112c:	20001914 	andcs	r1, r0, r4, lsl r9
    1130:	00000184 	andeq	r0, r0, r4, lsl #3
    1134:	560f9c01 	strpl	r9, [pc], -r1, lsl #24
    1138:	01000008 	tsteq	r0, r8
    113c:	00009e32 	andeq	r9, r0, r2, lsr lr
    1140:	74910200 	ldrvc	r0, [r1], #512	; 0x200
    1144:	0008290f 	andeq	r2, r8, pc, lsl #18
    1148:	9e360100 	rsflss	f0, f6, f0
    114c:	02000000 	andeq	r0, r0, #0
    1150:	6a0f7091 	bvs	3dd39c <startup-0x1fc22c64>
    1154:	01000008 	tsteq	r0, r8
    1158:	00009e3a 	andeq	r9, r0, sl, lsr lr
    115c:	6c910200 	lfmvs	f0, 4, [r1], {0}
    1160:	0008320f 	andeq	r3, r8, pc, lsl #4
    1164:	9e3e0100 	rsflse	f0, f6, f0
    1168:	02000000 	andeq	r0, r0, #0
    116c:	4d0f6891 	stcmi	8, cr6, [pc, #-580]	; f30 <startup-0x1ffff0d0>
    1170:	01000004 	tsteq	r0, r4
    1174:	00009e42 	andeq	r9, r0, r2, asr #28
    1178:	64910200 	ldrvs	r0, [r1], #512	; 0x200
    117c:	0002f90f 	andeq	pc, r2, pc, lsl #18
    1180:	9e460100 	dvflss	f0, f6, f0
    1184:	02000000 	andeq	r0, r0, #0
    1188:	020f6091 	andeq	r6, pc, #145	; 0x91
    118c:	01000003 	tsteq	r0, r3
    1190:	00009e4a 	andeq	r9, r0, sl, asr #28
    1194:	5c910200 	lfmpl	f0, 4, [r1], {0}
    1198:	00014b0f 	andeq	r4, r1, pc, lsl #22
    119c:	9e4e0100 	dvflse	f0, f6, f0
    11a0:	02000000 	andeq	r0, r0, #0
    11a4:	200f5891 	mulcs	pc, r1, r8	; <UNPREDICTABLE>
    11a8:	01000003 	tsteq	r0, r3
    11ac:	00009e52 	andeq	r9, r0, r2, asr lr
    11b0:	54910200 	ldrpl	r0, [r1], #512	; 0x200
    11b4:	0003290f 	andeq	r2, r3, pc, lsl #18
    11b8:	9e560100 	rdflss	f0, f6, f0
    11bc:	02000000 	andeq	r0, r0, #0
    11c0:	850f5091 	strhi	r5, [pc, #-145]	; 1137 <startup-0x1fffeec9>
    11c4:	01000000 	mrseq	r0, (UNDEF: 0)
    11c8:	00009e5a 	andeq	r9, r0, sl, asr lr
    11cc:	4c910200 	lfmmi	f0, 4, [r1], {0}
    11d0:	01f70000 	mvnseq	r0, r0
    11d4:	00040000 	andeq	r0, r4, r0
    11d8:	00000384 	andeq	r0, r0, r4, lsl #7
    11dc:	009f0104 	addseq	r0, pc, r4, lsl #2
    11e0:	380c0000 	stmdacc	ip, {}	; <UNPREDICTABLE>
    11e4:	bc00000a 	stclt	0, cr0, [r0], {10}
    11e8:	0420001b 	strteq	r0, [r0], #-27	; 0xffffffe5
    11ec:	ea000002 	b	11fc <startup-0x1fffee04>
    11f0:	02000005 	andeq	r0, r0, #5
    11f4:	03890704 	orreq	r0, r9, #4, 14	; 0x100000
    11f8:	02020000 	andeq	r0, r2, #0
    11fc:	00038307 	andeq	r8, r3, r7, lsl #6
    1200:	08010200 	stmdaeq	r1, {r9}
    1204:	000004d3 	ldrdeq	r0, [r0], -r3
    1208:	05020c03 	streq	r0, [r2, #-3075]	; 0xfffff3fd
    120c:	00000063 	andeq	r0, r0, r3, rrx
    1210:	00035b04 	andeq	r5, r3, r4, lsl #22
    1214:	21070200 	mrscs	r0, (UNDEF: 39)
    1218:	00000000 	andeq	r0, r0, r0
    121c:	00071904 	andeq	r1, r7, r4, lsl #18
    1220:	21080200 	mrscs	r0, R8_fiq
    1224:	04000000 	streq	r0, [r0], #-0
    1228:	00191804 	andseq	r1, r9, r4, lsl #16
    122c:	63090200 	movwvs	r0, #37376	; 0x9200
    1230:	08000000 	stmdaeq	r0, {}	; <UNPREDICTABLE>
    1234:	2f040500 	svccs	0x00040500
    1238:	06000000 	streq	r0, [r0], -r0
    123c:	00001a6a 	andeq	r1, r0, sl, ror #20
    1240:	00360a02 	eorseq	r0, r6, r2, lsl #20
    1244:	34070000 	strcc	r0, [r7], #-0
    1248:	0c000000 	stceq	0, cr0, [r0], {-0}
    124c:	00a50603 	adceq	r0, r5, r3, lsl #12
    1250:	c9040000 	stmdbgt	r4, {}	; <UNPREDICTABLE>
    1254:	03000005 	movweq	r0, #5
    1258:	0000a507 	andeq	sl, r0, r7, lsl #10
    125c:	3b040000 	blcc	101264 <startup-0x1fefed9c>
    1260:	03000000 	movweq	r0, #0
    1264:	0000a508 	andeq	sl, r0, r8, lsl #10
    1268:	30040400 	andcc	r0, r4, r0, lsl #8
    126c:	03000000 	movweq	r0, #0
    1270:	0000a509 	andeq	sl, r0, r9, lsl #10
    1274:	05000800 	streq	r0, [r0, #-2048]	; 0xfffff800
    1278:	00006904 	andeq	r6, r0, r4, lsl #18
    127c:	16280600 	strtne	r0, [r8], -r0, lsl #12
    1280:	0a030000 	beq	c1288 <startup-0x1ff3ed78>
    1284:	00000074 	andeq	r0, r0, r4, ror r0
    1288:	0006de07 	andeq	sp, r6, r7, lsl #28
    128c:	06042400 	streq	r2, [r4], -r0, lsl #8
    1290:	0000012f 	andeq	r0, r0, pc, lsr #2
    1294:	00046104 	andeq	r6, r4, r4, lsl #2
    1298:	2f070400 	svccs	0x00070400
    129c:	00000001 	andeq	r0, r0, r1
    12a0:	0006ea04 	andeq	lr, r6, r4, lsl #20
    12a4:	35080400 	strcc	r0, [r8, #-1024]	; 0xfffffc00
    12a8:	04000001 	streq	r0, [r0], #-1
    12ac:	00063a04 	andeq	r3, r6, r4, lsl #20
    12b0:	35090400 	strcc	r0, [r9, #-1024]	; 0xfffffc00
    12b4:	08000001 	stmdaeq	r0, {r0}
    12b8:	00066604 	andeq	r6, r6, r4, lsl #12
    12bc:	4d0c0400 	cfstrsmi	mvf0, [ip, #-0]
    12c0:	0c000001 	stceq	0, cr0, [r0], {1}
    12c4:	00034204 	andeq	r4, r3, r4, lsl #4
    12c8:	4d0d0400 	cfstrsmi	mvf0, [sp, #-0]
    12cc:	10000001 	andne	r0, r0, r1
    12d0:	00047304 	andeq	r7, r4, r4, lsl #6
    12d4:	35100400 	ldrcc	r0, [r0, #-1024]	; 0xfffffc00
    12d8:	14000001 	strne	r0, [r0], #-1
    12dc:	00007004 	andeq	r7, r0, r4
    12e0:	35110400 	ldrcc	r0, [r1, #-1024]	; 0xfffffc00
    12e4:	18000001 	stmdane	r0, {r0}
    12e8:	0003d904 	andeq	sp, r3, r4, lsl #18
    12ec:	35120400 	ldrcc	r0, [r2, #-1024]	; 0xfffffc00
    12f0:	1c000001 	stcne	0, cr0, [r0], {1}
    12f4:	0003e904 	andeq	lr, r3, r4, lsl #18
    12f8:	35130400 	ldrcc	r0, [r3, #-1024]	; 0xfffffc00
    12fc:	20000001 	andcs	r0, r0, r1
    1300:	ab040500 	blge	102708 <startup-0x1fefd8f8>
    1304:	08000000 	stmdaeq	r0, {}	; <UNPREDICTABLE>
    1308:	6e690504 	cdpvs	5, 6, cr0, cr9, cr4, {0}
    130c:	47090074 	smlsdxmi	r9, r4, r0, r0
    1310:	0a000001 	beq	131c <startup-0x1fffece4>
    1314:	00000147 	andeq	r0, r0, r7, asr #2
    1318:	b6040500 	strlt	r0, [r4], -r0, lsl #10
    131c:	05000000 	streq	r0, [r0, #-0]
    1320:	00013c04 	andeq	r3, r1, r4, lsl #24
    1324:	06df0600 	ldrbeq	r0, [pc], r0, lsl #12
    1328:	15040000 	strne	r0, [r4, #-0]
    132c:	000000b6 	strheq	r0, [r0], -r6
    1330:	0001690b 	andeq	r6, r1, fp, lsl #18
    1334:	00016900 	andeq	r6, r1, r0, lsl #18
    1338:	05000c00 	streq	r0, [r0, #-3072]	; 0xfffff400
    133c:	00015304 	andeq	r5, r1, r4, lsl #6
    1340:	05560d00 	ldrbeq	r0, [r6, #-3328]	; 0xfffff300
    1344:	1c040000 	stcne	0, cr0, [r4], {-0}
    1348:	0000015e 	andeq	r0, r0, lr, asr r1
    134c:	0004240d 	andeq	r2, r4, sp, lsl #8
    1350:	351d0400 	ldrcc	r0, [sp, #-1024]	; 0xfffffc00
    1354:	0e000001 	cdpeq	0, 0, cr0, cr0, cr1, {0}
    1358:	00000a67 	andeq	r0, r0, r7, ror #20
    135c:	1bbc0701 	blne	fef02f68 <firstTime.4040+0xdeef3b24>
    1360:	02042000 	andeq	r2, r4, #0
    1364:	9c010000 	stcls	0, cr0, [r1], {-0}
    1368:	0007820f 	andeq	r8, r7, pc, lsl #4
    136c:	69070100 	stmdbvs	r7, {r8}
    1370:	02000001 	andeq	r0, r0, #1
    1374:	0e107491 	cfcmpseq	r7, mvf0, mvf1
    1378:	0100000a 	tsteq	r0, sl
    137c:	00013511 	andeq	r3, r1, r1, lsl r5
    1380:	f8030500 			; <UNDEFINED> instruction: 0xf8030500
    1384:	10200048 	eorne	r0, r0, r8, asr #32
    1388:	000009ff 	strdeq	r0, [r0], -pc	; <UNPREDICTABLE>
    138c:	01351201 	teqeq	r5, r1, lsl #4
    1390:	03050000 	movweq	r0, #20480	; 0x5000
    1394:	20004900 	andcs	r4, r0, r0, lsl #18
    1398:	000a2a10 	andeq	r2, sl, r0, lsl sl
    139c:	35130100 	ldrcc	r0, [r3, #-256]	; 0xffffff00
    13a0:	05000001 	streq	r0, [r0, #-1]
    13a4:	00490803 	subeq	r0, r9, r3, lsl #16
    13a8:	0a231020 	beq	8c5430 <startup-0x1f73abd0>
    13ac:	14010000 	strne	r0, [r1], #-0
    13b0:	00000135 	andeq	r0, r0, r5, lsr r1
    13b4:	49040305 	stmdbmi	r4, {r0, r2, r8, r9}
    13b8:	1c102000 	ldcne	0, cr2, [r0], {-0}
    13bc:	0100000a 	tsteq	r0, sl
    13c0:	00013515 	andeq	r3, r1, r5, lsl r5
    13c4:	fc030500 	stc2	5, cr0, [r3], {-0}
    13c8:	00200048 	eoreq	r0, r0, r8, asr #32
    13cc:	00064100 	andeq	r4, r6, r0, lsl #2
    13d0:	52000400 	andpl	r0, r0, #0, 8
    13d4:	04000004 	streq	r0, [r0], #-4
    13d8:	00009f01 	andeq	r9, r0, r1, lsl #30
    13dc:	0ce80c00 	stcleq	12, cr0, [r8]
    13e0:	1dc00000 	stclne	0, cr0, [r0]
    13e4:	03642000 	cmneq	r4, #0
    13e8:	06d50000 	ldrbeq	r0, [r5], r0
    13ec:	0c020000 	stceq	0, cr0, [r2], {-0}
    13f0:	004e0502 	subeq	r0, lr, r2, lsl #10
    13f4:	5b030000 	blpl	c13fc <startup-0x1ff3ec04>
    13f8:	02000003 	andeq	r0, r0, #3
    13fc:	00004e07 	andeq	r4, r0, r7, lsl #28
    1400:	19030000 	stmdbne	r3, {}	; <UNPREDICTABLE>
    1404:	02000007 	andeq	r0, r0, #7
    1408:	00004e08 	andeq	r4, r0, r8, lsl #28
    140c:	18030400 	stmdane	r3, {sl}
    1410:	02000019 	andeq	r0, r0, #25
    1414:	00005509 	andeq	r5, r0, r9, lsl #10
    1418:	04000800 	streq	r0, [r0], #-2048	; 0xfffff800
    141c:	03890704 	orreq	r0, r9, #4, 14	; 0x100000
    1420:	04050000 	streq	r0, [r5], #-0
    1424:	0000005b 	andeq	r0, r0, fp, asr r0
    1428:	d3080104 	movwle	r0, #33028	; 0x8104
    142c:	06000004 	streq	r0, [r0], -r4
    1430:	00001a6a 	andeq	r1, r0, sl, ror #20
    1434:	00210a02 	eoreq	r0, r1, r2, lsl #20
    1438:	34070000 	strcc	r0, [r7], #-0
    143c:	0c000000 	stceq	0, cr0, [r0], {-0}
    1440:	009e0603 	addseq	r0, lr, r3, lsl #12
    1444:	c9030000 	stmdbgt	r3, {}	; <UNPREDICTABLE>
    1448:	03000005 	movweq	r0, #5
    144c:	00009e07 	andeq	r9, r0, r7, lsl #28
    1450:	3b030000 	blcc	c1458 <startup-0x1ff3eba8>
    1454:	03000000 	movweq	r0, #0
    1458:	00009e08 	andeq	r9, r0, r8, lsl #28
    145c:	30030400 	andcc	r0, r3, r0, lsl #8
    1460:	03000000 	movweq	r0, #0
    1464:	00009e09 	andeq	r9, r0, r9, lsl #28
    1468:	05000800 	streq	r0, [r0, #-2048]	; 0xfffff800
    146c:	00006204 	andeq	r6, r0, r4, lsl #4
    1470:	16280600 	strtne	r0, [r8], -r0, lsl #12
    1474:	0a030000 	beq	c147c <startup-0x1ff3eb84>
    1478:	0000006d 	andeq	r0, r0, sp, rrx
    147c:	0006de07 	andeq	sp, r6, r7, lsl #28
    1480:	06042400 	streq	r2, [r4], -r0, lsl #8
    1484:	00000128 	andeq	r0, r0, r8, lsr #2
    1488:	00046103 	andeq	r6, r4, r3, lsl #2
    148c:	28070400 	stmdacs	r7, {sl}
    1490:	00000001 	andeq	r0, r0, r1
    1494:	0006ea03 	andeq	lr, r6, r3, lsl #20
    1498:	2e080400 	cfcpyscs	mvf0, mvf8
    149c:	04000001 	streq	r0, [r0], #-1
    14a0:	00063a03 	andeq	r3, r6, r3, lsl #20
    14a4:	2e090400 	cfcpyscs	mvf0, mvf9
    14a8:	08000001 	stmdaeq	r0, {r0}
    14ac:	00066603 	andeq	r6, r6, r3, lsl #12
    14b0:	460c0400 	strmi	r0, [ip], -r0, lsl #8
    14b4:	0c000001 	stceq	0, cr0, [r0], {1}
    14b8:	00034203 	andeq	r4, r3, r3, lsl #4
    14bc:	460d0400 	strmi	r0, [sp], -r0, lsl #8
    14c0:	10000001 	andne	r0, r0, r1
    14c4:	00047303 	andeq	r7, r4, r3, lsl #6
    14c8:	2e100400 	cfmulscs	mvf0, mvf0, mvf0
    14cc:	14000001 	strne	r0, [r0], #-1
    14d0:	00007003 	andeq	r7, r0, r3
    14d4:	2e110400 	cfmulscs	mvf0, mvf1, mvf0
    14d8:	18000001 	stmdane	r0, {r0}
    14dc:	0003d903 	andeq	sp, r3, r3, lsl #18
    14e0:	2e120400 	cfmulscs	mvf0, mvf2, mvf0
    14e4:	1c000001 	stcne	0, cr0, [r0], {1}
    14e8:	0003e903 	andeq	lr, r3, r3, lsl #18
    14ec:	2e130400 	cfmulscs	mvf0, mvf3, mvf0
    14f0:	20000001 	andcs	r0, r0, r1
    14f4:	a4040500 	strge	r0, [r4], #-1280	; 0xfffffb00
    14f8:	08000000 	stmdaeq	r0, {}	; <UNPREDICTABLE>
    14fc:	6e690504 	cdpvs	5, 6, cr0, cr9, cr4, {0}
    1500:	40090074 	andmi	r0, r9, r4, ror r0
    1504:	0a000001 	beq	1510 <startup-0x1fffeaf0>
    1508:	00000140 	andeq	r0, r0, r0, asr #2
    150c:	af040500 	svcge	0x00040500
    1510:	05000000 	streq	r0, [r0, #-0]
    1514:	00013504 	andeq	r3, r1, r4, lsl #10
    1518:	06df0600 	ldrbeq	r0, [pc], r0, lsl #12
    151c:	15040000 	strne	r0, [r4, #-0]
    1520:	000000af 	andeq	r0, r0, pc, lsr #1
    1524:	0001620b 	andeq	r6, r1, fp, lsl #4
    1528:	00016200 	andeq	r6, r1, r0, lsl #4
    152c:	05000c00 	streq	r0, [r0, #-3072]	; 0xfffff400
    1530:	00014c04 	andeq	r4, r1, r4, lsl #24
    1534:	05560d00 	ldrbeq	r0, [r6, #-3328]	; 0xfffff300
    1538:	1c040000 	stcne	0, cr0, [r4], {-0}
    153c:	00000157 	andeq	r0, r0, r7, asr r1
    1540:	0004240d 	andeq	r2, r4, sp, lsl #8
    1544:	2e1d0400 	cfmulscs	mvf0, mvf13, mvf0
    1548:	0b000001 	bleq	1554 <startup-0x1fffeaac>
    154c:	0000005b 	andeq	r0, r0, fp, asr r0
    1550:	0000018e 	andeq	r0, r0, lr, lsl #3
    1554:	00018e0e 	andeq	r8, r1, lr, lsl #28
    1558:	04006300 	streq	r6, [r0], #-768	; 0xfffffd00
    155c:	04060704 	streq	r0, [r6], #-1796	; 0xfffff8fc
    1560:	4e0f0000 	cdpmi	0, 0, cr0, cr15, cr0, {0}
    1564:	0500000d 	streq	r0, [r0, #-13]
    1568:	00017e03 	andeq	r7, r1, r3, lsl #28
    156c:	00030500 	andeq	r0, r3, r0, lsl #10
    1570:	0f20008a 	svceq	0x0020008a
    1574:	00000bb9 			; <UNDEFINED> instruction: 0x00000bb9
    1578:	017e0306 	cmneq	lr, r6, lsl #6
    157c:	03050000 	movweq	r0, #20480	; 0x5000
    1580:	20008a64 	andcs	r8, r0, r4, ror #20
    1584:	000c010f 	andeq	r0, ip, pc, lsl #2
    1588:	7e030700 	cdpvc	7, 0, cr0, cr3, cr0, {0}
    158c:	05000001 	streq	r0, [r0, #-1]
    1590:	008ac803 	addeq	ip, sl, r3, lsl #16
    1594:	0ba80f20 	bleq	fea0521c <firstTime.4040+0xde9f5dd8>
    1598:	03080000 	movweq	r0, #32768	; 0x8000
    159c:	0000017e 	andeq	r0, r0, lr, ror r1
    15a0:	8b2c0305 	blhi	b021bc <startup-0x1f4fde44>
    15a4:	270f2000 	strcs	r2, [pc, -r0]
    15a8:	0900000d 	stmdbeq	r0, {r0, r2, r3}
    15ac:	00017e03 	andeq	r7, r1, r3, lsl #28
    15b0:	90030500 	andls	r0, r3, r0, lsl #10
    15b4:	0f20008b 	svceq	0x0020008b
    15b8:	00000dfb 	strdeq	r0, [r0], -fp
    15bc:	017e030a 	cmneq	lr, sl, lsl #6
    15c0:	03050000 	movweq	r0, #20480	; 0x5000
    15c4:	20008bf4 	strdcs	r8, [r0], -r4
    15c8:	000bd40f 	andeq	sp, fp, pc, lsl #8
    15cc:	7e030b00 	vmlavc.f64	d0, d3, d0
    15d0:	05000001 	streq	r0, [r0, #-1]
    15d4:	008c5803 	addeq	r5, ip, r3, lsl #16
    15d8:	0cc20f20 	stcleq	15, cr0, [r2], {32}
    15dc:	030c0000 	movweq	r0, #49152	; 0xc000
    15e0:	0000017e 	andeq	r0, r0, lr, ror r1
    15e4:	8cbc0305 	ldchi	3, cr0, [ip], #20
    15e8:	830f2000 	movwhi	r2, #61440	; 0xf000
    15ec:	0d00000a 	stceq	0, cr0, [r0, #-40]	; 0xffffffd8
    15f0:	00017e03 	andeq	r7, r1, r3, lsl #28
    15f4:	20030500 	andcs	r0, r3, r0, lsl #10
    15f8:	0f20008d 	svceq	0x0020008d
    15fc:	00000be5 	andeq	r0, r0, r5, ror #23
    1600:	017e030e 	cmneq	lr, lr, lsl #6
    1604:	03050000 	movweq	r0, #20480	; 0x5000
    1608:	20008d84 	andcs	r8, r0, r4, lsl #27
    160c:	000c690f 	andeq	r6, ip, pc, lsl #18
    1610:	7e030f00 	cdpvc	15, 0, cr0, cr3, cr0, {0}
    1614:	05000001 	streq	r0, [r0, #-1]
    1618:	008de803 	addeq	lr, sp, r3, lsl #16
    161c:	0a9f0f20 	beq	fe7c52a4 <firstTime.4040+0xde7b5e60>
    1620:	03100000 	tsteq	r0, #0
    1624:	0000017e 	andeq	r0, r0, lr, ror r1
    1628:	8e4c0305 	cdphi	3, 4, cr0, cr12, cr5, {0}
    162c:	120f2000 	andne	r2, pc, #0
    1630:	1100000c 	tstne	r0, ip
    1634:	00017e03 	andeq	r7, r1, r3, lsl #28
    1638:	b0030500 	andlt	r0, r3, r0, lsl #10
    163c:	0f20008e 	svceq	0x0020008e
    1640:	00000c32 	andeq	r0, r0, r2, lsr ip
    1644:	017e0312 	cmneq	lr, r2, lsl r3
    1648:	03050000 	movweq	r0, #20480	; 0x5000
    164c:	20008f14 	andcs	r8, r0, r4, lsl pc
    1650:	000ac90f 	andeq	ip, sl, pc, lsl #18
    1654:	7e031300 	cdpvc	3, 0, cr1, cr3, cr0, {0}
    1658:	05000001 	streq	r0, [r0, #-1]
    165c:	008f7803 	addeq	r7, pc, r3, lsl #16
    1660:	0cd21020 	ldcleq	0, cr1, [r2], {32}
    1664:	15010000 	strne	r0, [r1, #-0]
    1668:	0000009e 	muleq	r0, lr, r0
    166c:	4d380305 	ldcmi	3, cr0, [r8, #-20]!	; 0xffffffec
    1670:	05102000 	ldreq	r2, [r0, #-0]
    1674:	0100000b 	tsteq	r0, fp
    1678:	00009e16 	andeq	r9, r0, r6, lsl lr
    167c:	d0030500 	andle	r0, r3, r0, lsl #10
    1680:	1020004c 	eorne	r0, r0, ip, asr #32
    1684:	00000aef 	andeq	r0, r0, pc, ror #21
    1688:	009e1701 	addseq	r1, lr, r1, lsl #14
    168c:	03050000 	movweq	r0, #20480	; 0x5000
    1690:	20004dc8 	andcs	r4, r0, r8, asr #27
    1694:	000b4710 	andeq	r4, fp, r0, lsl r7
    1698:	9e180100 	muflse	f0, f0, f0
    169c:	05000000 	streq	r0, [r0, #-0]
    16a0:	004d3403 	subeq	r3, sp, r3, lsl #8
    16a4:	0c421020 	mcrreq	0, 2, r1, r2, cr0
    16a8:	19010000 	stmdbne	r1, {}	; <UNPREDICTABLE>
    16ac:	0000009e 	muleq	r0, lr, r0
    16b0:	4db80305 	ldcmi	3, cr0, [r8, #20]!
    16b4:	dd102000 	ldcle	0, cr2, [r0, #-0]
    16b8:	0100000c 	tsteq	r0, ip
    16bc:	00009e1a 	andeq	r9, r0, sl, lsl lr
    16c0:	6c030500 	cfstr32vs	mvfx0, [r3], {-0}
    16c4:	1020004e 	eorne	r0, r0, lr, asr #32
    16c8:	00000afa 	strdeq	r0, [r0], -sl
    16cc:	009e1b01 	addseq	r1, lr, r1, lsl #22
    16d0:	03050000 	movweq	r0, #20480	; 0x5000
    16d4:	20004d2c 	andcs	r4, r0, ip, lsr #26
    16d8:	000d6a10 	andeq	r6, sp, r0, lsl sl
    16dc:	9e1c0100 	muflse	f0, f4, f0
    16e0:	05000000 	streq	r0, [r0, #-0]
    16e4:	004d5403 	subeq	r5, sp, r3, lsl #8
    16e8:	0ada1020 	beq	ff685770 <firstTime.4040+0xdf67632c>
    16ec:	1d010000 	stcne	0, cr0, [r1, #-0]
    16f0:	0000009e 	muleq	r0, lr, r0
    16f4:	4d800305 	stcmi	3, cr0, [r0, #20]
    16f8:	a8102000 	ldmdage	r0, {sp}
    16fc:	0100000c 	tsteq	r0, ip
    1700:	00009e1e 	andeq	r9, r0, lr, lsl lr
    1704:	50030500 	andpl	r0, r3, r0, lsl #10
    1708:	1020004e 	eorne	r0, r0, lr, asr #32
    170c:	00000b3d 	andeq	r0, r0, sp, lsr fp
    1710:	009e1f01 	addseq	r1, lr, r1, lsl #30
    1714:	03050000 	movweq	r0, #20480	; 0x5000
    1718:	20004d30 	andcs	r4, r0, r0, lsr sp
    171c:	000db210 	andeq	fp, sp, r0, lsl r2
    1720:	9e200100 	suflss	f0, f0, f0
    1724:	05000000 	streq	r0, [r0, #-0]
    1728:	004ccc03 	subeq	ip, ip, r3, lsl #24
    172c:	0b1e1020 	bleq	7857b4 <startup-0x1f87a84c>
    1730:	21010000 	mrscs	r0, (UNDEF: 1)
    1734:	0000009e 	muleq	r0, lr, r0
    1738:	4ce00305 	stclmi	3, cr0, [r0], #20
    173c:	44102000 	ldrmi	r2, [r0], #-0
    1740:	0100000d 	tsteq	r0, sp
    1744:	00009e22 	andeq	r9, r0, r2, lsr #28
    1748:	64030500 	strvs	r0, [r3], #-1280	; 0xfffffb00
    174c:	1020004d 	eorne	r0, r0, sp, asr #32
    1750:	00000c83 	andeq	r0, r0, r3, lsl #25
    1754:	009e2301 	addseq	r2, lr, r1, lsl #6
    1758:	03050000 	movweq	r0, #20480	; 0x5000
    175c:	20004da8 	andcs	r4, r0, r8, lsr #27
    1760:	000d8110 	andeq	r8, sp, r0, lsl r1
    1764:	62250100 	eorvs	r0, r5, #0, 2
    1768:	05000000 	streq	r0, [r0, #-0]
    176c:	004d4803 	subeq	r4, sp, r3, lsl #16
    1770:	0b821020 	bleq	fe0857f8 <firstTime.4040+0xde0763b4>
    1774:	26010000 	strcs	r0, [r1], -r0
    1778:	00000062 	andeq	r0, r0, r2, rrx
    177c:	4dbc0305 	ldcmi	3, cr0, [ip, #20]!
    1780:	37102000 	ldrcc	r2, [r0, -r0]
    1784:	0100000d 	tsteq	r0, sp
    1788:	00006227 	andeq	r6, r0, r7, lsr #4
    178c:	58030500 	stmdapl	r3, {r8, sl}
    1790:	1020004d 	eorne	r0, r0, sp, asr #32
    1794:	00000cb3 			; <UNDEFINED> instruction: 0x00000cb3
    1798:	00622801 	rsbeq	r2, r2, r1, lsl #16
    179c:	03050000 	movweq	r0, #20480	; 0x5000
    17a0:	20004e54 	andcs	r4, r0, r4, asr lr
    17a4:	000a7410 	andeq	r7, sl, r0, lsl r4
    17a8:	62290100 	eorvs	r0, r9, #0, 2
    17ac:	05000000 	streq	r0, [r0, #-0]
    17b0:	004dcc03 	subeq	ip, sp, r3, lsl #24
    17b4:	0b661020 	bleq	198583c <startup-0x1e67a7c4>
    17b8:	2a010000 	bcs	417c0 <startup-0x1ffbe840>
    17bc:	00000062 	andeq	r0, r0, r2, rrx
    17c0:	4d740305 	ldclmi	3, cr0, [r4, #-20]!	; 0xffffffec
    17c4:	8f102000 	svchi	0x00102000
    17c8:	0100000d 	tsteq	r0, sp
    17cc:	0000622b 	andeq	r6, r0, fp, lsr #4
    17d0:	ac030500 	cfstr32ge	mvfx0, [r3], {-0}
    17d4:	1020004d 	eorne	r0, r0, sp, asr #32
    17d8:	00000c23 	andeq	r0, r0, r3, lsr #24
    17dc:	00622c01 	rsbeq	r2, r2, r1, lsl #24
    17e0:	03050000 	movweq	r0, #20480	; 0x5000
    17e4:	20004df0 	strdcs	r4, [r0], -r0
    17e8:	000c5b10 	andeq	r5, ip, r0, lsl fp
    17ec:	622d0100 	eorvs	r0, sp, #0, 2
    17f0:	05000000 	streq	r0, [r0, #-0]
    17f4:	004dfc03 	subeq	pc, sp, r3, lsl #24
    17f8:	0b0f1020 	bleq	3c5880 <startup-0x1fc3a780>
    17fc:	2e010000 	cdpcs	0, 0, cr0, cr1, cr0, {0}
    1800:	00000062 	andeq	r0, r0, r2, rrx
    1804:	4ce40305 	stclmi	3, cr0, [r4], #20
    1808:	4c102000 	ldcmi	0, cr2, [r0], {-0}
    180c:	0100000c 	tsteq	r0, ip
    1810:	0000622f 	andeq	r6, r0, pc, lsr #4
    1814:	e4030500 	str	r0, [r3], #-1280	; 0xfffffb00
    1818:	1020004d 	eorne	r0, r0, sp, asr #32
    181c:	00000b74 	andeq	r0, r0, r4, ror fp
    1820:	00623001 	rsbeq	r3, r2, r1
    1824:	03050000 	movweq	r0, #20480	; 0x5000
    1828:	20004e60 	andcs	r4, r0, r0, ror #28
    182c:	000c9910 	andeq	r9, ip, r0, lsl r9
    1830:	62310100 	eorsvs	r0, r1, #0, 2
    1834:	05000000 	streq	r0, [r0, #-0]
    1838:	004d9003 	subeq	r9, sp, r3
    183c:	0ab01020 	beq	fec058c4 <firstTime.4040+0xdebf6480>
    1840:	32010000 	andcc	r0, r1, #0
    1844:	00000062 	andeq	r0, r0, r2, rrx
    1848:	4d680305 	stclmi	3, cr0, [r8, #-20]!	; 0xffffffec
    184c:	90102000 	andsls	r2, r0, r0
    1850:	0100000b 	tsteq	r0, fp
    1854:	00006233 	andeq	r6, r0, r3, lsr r2
    1858:	84030500 	strhi	r0, [r3], #-1280	; 0xfffffb00
    185c:	1020004d 	eorne	r0, r0, sp, asr #32
    1860:	00000d1f 	andeq	r0, r0, pc, lsl sp
    1864:	014c3601 	cmpeq	ip, r1, lsl #12
    1868:	03050000 	movweq	r0, #20480	; 0x5000
    186c:	20004cfc 	strdcs	r4, [r0], -ip
    1870:	000d5f10 	andeq	r5, sp, r0, lsl pc
    1874:	a4370100 	ldrtge	r0, [r7], #-256	; 0xffffff00
    1878:	05000000 	streq	r0, [r0, #-0]
    187c:	004d2003 	subeq	r2, sp, r3
    1880:	0de61020 	stcleq	0, cr1, [r6, #128]!	; 0x80
    1884:	38010000 	stmdacc	r1, {}	; <UNPREDICTABLE>
    1888:	000000a4 	andeq	r0, r0, r4, lsr #1
    188c:	4cf00305 	ldclmi	3, cr0, [r0], #20
    1890:	f6102000 			; <UNDEFINED> instruction: 0xf6102000
    1894:	0100000b 	tsteq	r0, fp
    1898:	0000a439 	andeq	sl, r0, r9, lsr r4
    189c:	d8030500 	stmdale	r3, {r8, sl}
    18a0:	1020004d 	eorne	r0, r0, sp, asr #32
    18a4:	00000a94 	muleq	r0, r4, sl
    18a8:	00a43a01 	adceq	r3, r4, r1, lsl #20
    18ac:	03050000 	movweq	r0, #20480	; 0x5000
    18b0:	20004d3c 	andcs	r4, r0, ip, lsr sp
    18b4:	000dbd10 	andeq	fp, sp, r0, lsl sp
    18b8:	a43b0100 	ldrtge	r0, [fp], #-256	; 0xffffff00
    18bc:	05000000 	streq	r0, [r0, #-0]
    18c0:	004d9c03 	subeq	r9, sp, r3, lsl #24
    18c4:	0bc91020 	bleq	ff24594c <firstTime.4040+0xdf236508>
    18c8:	3c010000 	stccc	0, cr0, [r1], {-0}
    18cc:	000000a4 	andeq	r0, r0, r4, lsr #1
    18d0:	4cd40305 	ldclmi	3, cr0, [r4], {5}
    18d4:	a40b2000 	strge	r2, [fp], #-0
    18d8:	19000000 	stmdbne	r0, {}	; <UNPREDICTABLE>
    18dc:	0e000005 	cdpeq	0, 0, cr0, cr0, cr5, {0}
    18e0:	0000018e 	andeq	r0, r0, lr, lsl #3
    18e4:	8e100005 	cdphi	0, 1, cr0, cr0, cr5, {0}
    18e8:	0100000c 	tsteq	r0, ip
    18ec:	0005093f 	andeq	r0, r5, pc, lsr r9
    18f0:	08030500 	stmdaeq	r3, {r8, sl}
    18f4:	1120004e 			; <UNDEFINED> instruction: 0x1120004e
    18f8:	00000d15 	andeq	r0, r0, r5, lsl sp
    18fc:	1fcc7601 	svcne	0x00cc7601
    1900:	01582000 	cmpeq	r8, r0
    1904:	9c010000 	stcls	0, cr0, [r1], {-0}
    1908:	0000055f 	andeq	r0, r0, pc, asr r5
    190c:	000d1f12 	andeq	r1, sp, r2, lsl pc
    1910:	62760100 	rsbsvs	r0, r6, #0, 2
    1914:	02000001 	andeq	r0, r0, #1
    1918:	090f6c91 	stmdbeq	pc, {r0, r4, r7, sl, fp, sp, lr}	; <UNPREDICTABLE>
    191c:	01000009 	tsteq	r0, r9
    1920:	00012e77 	andeq	r2, r1, r7, ror lr
    1924:	dc030500 	cfstr32le	mvfx0, [r3], {-0}
    1928:	0020008f 	eoreq	r0, r0, pc, lsl #1
    192c:	0004a913 	andeq	sl, r4, r3, lsl r9
    1930:	c0400100 	subgt	r0, r0, r0, lsl #2
    1934:	0c20001d 	stceq	0, cr0, [r0], #-116	; 0xffffff8c
    1938:	01000002 	tsteq	r0, r2
    193c:	0d9e0f9c 	ldceq	15, cr0, [lr, #624]	; 0x270
    1940:	42010000 	andmi	r0, r1, #0
    1944:	0000009e 	muleq	r0, lr, r0
    1948:	0f749102 	svceq	0x00749102
    194c:	00000da8 	andeq	r0, r0, r8, lsr #27
    1950:	009e4501 	addseq	r4, lr, r1, lsl #10
    1954:	91020000 	mrsls	r0, (UNDEF: 2)
    1958:	0b9e0f70 	bleq	fe785720 <firstTime.4040+0xde7762dc>
    195c:	48010000 	stmdami	r1, {}	; <UNPREDICTABLE>
    1960:	0000009e 	muleq	r0, lr, r0
    1964:	0f6c9102 	svceq	0x006c9102
    1968:	00000abf 			; <UNDEFINED> instruction: 0x00000abf
    196c:	009e4c01 	addseq	r4, lr, r1, lsl #24
    1970:	91020000 	mrsls	r0, (UNDEF: 2)
    1974:	0dc80f68 	stcleq	15, cr0, [r8, #416]	; 0x1a0
    1978:	4f010000 	svcmi	0x00010000
    197c:	0000009e 	muleq	r0, lr, r0
    1980:	0f649102 	svceq	0x00649102
    1984:	00000b5c 	andeq	r0, r0, ip, asr fp
    1988:	009e5201 	addseq	r5, lr, r1, lsl #4
    198c:	91020000 	mrsls	r0, (UNDEF: 2)
    1990:	0d740f60 	ldcleq	15, cr0, [r4, #-384]!	; 0xfffffe80
    1994:	57010000 	strpl	r0, [r1, -r0]
    1998:	0000009e 	muleq	r0, lr, r0
    199c:	0f5c9102 	svceq	0x005c9102
    19a0:	00000dd2 	ldrdeq	r0, [r0], -r2
    19a4:	009e5a01 	addseq	r5, lr, r1, lsl #20
    19a8:	91020000 	mrsls	r0, (UNDEF: 2)
    19ac:	0ddc0f58 	ldcleq	15, cr0, [ip, #352]	; 0x160
    19b0:	5d010000 	stcpl	0, cr0, [r1, #-0]
    19b4:	0000009e 	muleq	r0, lr, r0
    19b8:	0f549102 	svceq	0x00549102
    19bc:	00000ae5 	andeq	r0, r0, r5, ror #21
    19c0:	009e6101 	addseq	r6, lr, r1, lsl #2
    19c4:	91020000 	mrsls	r0, (UNDEF: 2)
    19c8:	0b290f50 	bleq	a45710 <startup-0x1f5ba8f0>
    19cc:	64010000 	strvs	r0, [r1], #-0
    19d0:	0000009e 	muleq	r0, lr, r0
    19d4:	0f4c9102 	svceq	0x004c9102
    19d8:	00000b33 	andeq	r0, r0, r3, lsr fp
    19dc:	009e6701 	addseq	r6, lr, r1, lsl #14
    19e0:	91020000 	mrsls	r0, (UNDEF: 2)
    19e4:	0df10f48 	ldcleq	15, cr0, [r1, #288]!	; 0x120
    19e8:	6b010000 	blvs	419f0 <startup-0x1ffbe610>
    19ec:	0000009e 	muleq	r0, lr, r0
    19f0:	0f449102 	svceq	0x00449102
    19f4:	00000c79 	andeq	r0, r0, r9, ror ip
    19f8:	009e6e01 	addseq	r6, lr, r1, lsl #28
    19fc:	91020000 	mrsls	r0, (UNDEF: 2)
    1a00:	0b520f40 	bleq	1485708 <startup-0x1eb7a8f8>
    1a04:	71010000 	mrsvc	r0, (UNDEF: 1)
    1a08:	0000009e 	muleq	r0, lr, r0
    1a0c:	7fbc9103 	svcvc	0x00bc9103
    1a10:	04980000 	ldreq	r0, [r8], #0
    1a14:	00040000 	andeq	r0, r4, r0
    1a18:	00000552 	andeq	r0, r0, r2, asr r5
    1a1c:	009f0104 	addseq	r0, pc, r4, lsl #2
    1a20:	bf0c0000 	svclt	0x000c0000
    1a24:	2400000f 	strcs	r0, [r0], #-15
    1a28:	38200021 	stmdacc	r0!, {r0, r5}
    1a2c:	b6000002 	strlt	r0, [r0], -r2
    1a30:	02000008 	andeq	r0, r0, #8
    1a34:	4e05020c 	cdpmi	2, 0, cr0, cr5, cr12, {0}
    1a38:	03000000 	movweq	r0, #0
    1a3c:	0000035b 	andeq	r0, r0, fp, asr r3
    1a40:	004e0702 	subeq	r0, lr, r2, lsl #14
    1a44:	03000000 	movweq	r0, #0
    1a48:	00000719 	andeq	r0, r0, r9, lsl r7
    1a4c:	004e0802 	subeq	r0, lr, r2, lsl #16
    1a50:	03040000 	movweq	r0, #16384	; 0x4000
    1a54:	00001918 	andeq	r1, r0, r8, lsl r9
    1a58:	00550902 	subseq	r0, r5, r2, lsl #18
    1a5c:	00080000 	andeq	r0, r8, r0
    1a60:	89070404 	stmdbhi	r7, {r2, sl}
    1a64:	05000003 	streq	r0, [r0, #-3]
    1a68:	00005b04 	andeq	r5, r0, r4, lsl #22
    1a6c:	08010400 	stmdaeq	r1, {sl}
    1a70:	000004d3 	ldrdeq	r0, [r0], -r3
    1a74:	001a6a06 	andseq	r6, sl, r6, lsl #20
    1a78:	210a0200 	mrscs	r0, R10_fiq
    1a7c:	07000000 	streq	r0, [r0, -r0]
    1a80:	00000034 	andeq	r0, r0, r4, lsr r0
    1a84:	9e06030c 	cdpls	3, 0, cr0, cr6, cr12, {0}
    1a88:	03000000 	movweq	r0, #0
    1a8c:	000005c9 	andeq	r0, r0, r9, asr #11
    1a90:	009e0703 	addseq	r0, lr, r3, lsl #14
    1a94:	03000000 	movweq	r0, #0
    1a98:	0000003b 	andeq	r0, r0, fp, lsr r0
    1a9c:	009e0803 	addseq	r0, lr, r3, lsl #16
    1aa0:	03040000 	movweq	r0, #16384	; 0x4000
    1aa4:	00000030 	andeq	r0, r0, r0, lsr r0
    1aa8:	009e0903 	addseq	r0, lr, r3, lsl #18
    1aac:	00080000 	andeq	r0, r8, r0
    1ab0:	00620405 	rsbeq	r0, r2, r5, lsl #8
    1ab4:	28060000 	stmdacs	r6, {}	; <UNPREDICTABLE>
    1ab8:	03000016 	movweq	r0, #22
    1abc:	00006d0a 	andeq	r6, r0, sl, lsl #26
    1ac0:	06de0700 	ldrbeq	r0, [lr], r0, lsl #14
    1ac4:	04240000 	strteq	r0, [r4], #-0
    1ac8:	00012806 	andeq	r2, r1, r6, lsl #16
    1acc:	04610300 	strbteq	r0, [r1], #-768	; 0xfffffd00
    1ad0:	07040000 	streq	r0, [r4, -r0]
    1ad4:	00000128 	andeq	r0, r0, r8, lsr #2
    1ad8:	06ea0300 	strbteq	r0, [sl], r0, lsl #6
    1adc:	08040000 	stmdaeq	r4, {}	; <UNPREDICTABLE>
    1ae0:	0000012e 	andeq	r0, r0, lr, lsr #2
    1ae4:	063a0304 	ldrteq	r0, [sl], -r4, lsl #6
    1ae8:	09040000 	stmdbeq	r4, {}	; <UNPREDICTABLE>
    1aec:	0000012e 	andeq	r0, r0, lr, lsr #2
    1af0:	06660308 	strbteq	r0, [r6], -r8, lsl #6
    1af4:	0c040000 	stceq	0, cr0, [r4], {-0}
    1af8:	00000146 	andeq	r0, r0, r6, asr #2
    1afc:	0342030c 	movteq	r0, #8972	; 0x230c
    1b00:	0d040000 	stceq	0, cr0, [r4, #-0]
    1b04:	00000146 	andeq	r0, r0, r6, asr #2
    1b08:	04730310 	ldrbteq	r0, [r3], #-784	; 0xfffffcf0
    1b0c:	10040000 	andne	r0, r4, r0
    1b10:	0000012e 	andeq	r0, r0, lr, lsr #2
    1b14:	00700314 	rsbseq	r0, r0, r4, lsl r3
    1b18:	11040000 	mrsne	r0, (UNDEF: 4)
    1b1c:	0000012e 	andeq	r0, r0, lr, lsr #2
    1b20:	03d90318 	bicseq	r0, r9, #24, 6	; 0x60000000
    1b24:	12040000 	andne	r0, r4, #0
    1b28:	0000012e 	andeq	r0, r0, lr, lsr #2
    1b2c:	03e9031c 	mvneq	r0, #28, 6	; 0x70000000
    1b30:	13040000 	movwne	r0, #16384	; 0x4000
    1b34:	0000012e 	andeq	r0, r0, lr, lsr #2
    1b38:	04050020 	streq	r0, [r5], #-32	; 0xffffffe0
    1b3c:	000000a4 	andeq	r0, r0, r4, lsr #1
    1b40:	69050408 	stmdbvs	r5, {r3, sl}
    1b44:	0900746e 	stmdbeq	r0, {r1, r2, r3, r5, r6, sl, ip, sp, lr}
    1b48:	00000140 	andeq	r0, r0, r0, asr #2
    1b4c:	0001400a 	andeq	r4, r1, sl
    1b50:	04050000 	streq	r0, [r5], #-0
    1b54:	000000af 	andeq	r0, r0, pc, lsr #1
    1b58:	01350405 	teqeq	r5, r5, lsl #8
    1b5c:	df060000 	svcle	0x00060000
    1b60:	04000006 	streq	r0, [r0], #-6
    1b64:	0000af15 	andeq	sl, r0, r5, lsl pc
    1b68:	01620b00 	cmneq	r2, r0, lsl #22
    1b6c:	01620000 	cmneq	r2, r0
    1b70:	000c0000 	andeq	r0, ip, r0
    1b74:	014c0405 	cmpeq	ip, r5, lsl #8
    1b78:	560d0000 	strpl	r0, [sp], -r0
    1b7c:	04000005 	streq	r0, [r0], #-5
    1b80:	0001571c 	andeq	r5, r1, ip, lsl r7
    1b84:	04240d00 	strteq	r0, [r4], #-3328	; 0xfffff300
    1b88:	1d040000 	stcne	0, cr0, [r4, #-0]
    1b8c:	0000012e 	andeq	r0, r0, lr, lsr #2
    1b90:	00005b0b 	andeq	r5, r0, fp, lsl #22
    1b94:	00018e00 	andeq	r8, r1, r0, lsl #28
    1b98:	018e0e00 	orreq	r0, lr, r0, lsl #28
    1b9c:	00350000 	eorseq	r0, r5, r0
    1ba0:	06070404 	streq	r0, [r7], -r4, lsl #8
    1ba4:	0f000004 	svceq	0x00000004
    1ba8:	00000e3b 	andeq	r0, r0, fp, lsr lr
    1bac:	017e0305 	cmneq	lr, r5, lsl #6
    1bb0:	03050000 	movweq	r0, #20480	; 0x5000
    1bb4:	20008fe0 	andcs	r8, r0, r0, ror #31
    1bb8:	000fed0f 	andeq	lr, pc, pc, lsl #26
    1bbc:	7e030600 	cfmadd32vc	mvax0, mvfx0, mvfx3, mvfx0
    1bc0:	05000001 	streq	r0, [r0, #-1]
    1bc4:	00901803 	addseq	r1, r0, r3, lsl #16
    1bc8:	0f450f20 	svceq	0x00450f20
    1bcc:	03070000 	movweq	r0, #28672	; 0x7000
    1bd0:	0000017e 	andeq	r0, r0, lr, ror r1
    1bd4:	90500305 	subsls	r0, r0, r5, lsl #6
    1bd8:	de0f2000 	cdple	0, 0, cr2, cr15, cr0, {0}
    1bdc:	0800000e 	stmdaeq	r0, {r1, r2, r3}
    1be0:	00017e03 	andeq	r7, r1, r3, lsl #28
    1be4:	88030500 	stmdahi	r3, {r8, sl}
    1be8:	0f200090 	svceq	0x00200090
    1bec:	00000f57 	andeq	r0, r0, r7, asr pc
    1bf0:	017e0309 	cmneq	lr, r9, lsl #6
    1bf4:	03050000 	movweq	r0, #20480	; 0x5000
    1bf8:	200090c0 	andcs	r9, r0, r0, asr #1
    1bfc:	000e890f 	andeq	r8, lr, pc, lsl #18
    1c00:	7e030a00 	vmlavc.f32	s0, s6, s0
    1c04:	05000001 	streq	r0, [r0, #-1]
    1c08:	0090f803 	addseq	pc, r0, r3, lsl #16
    1c0c:	0ffe0f20 	svceq	0x00fe0f20
    1c10:	030b0000 	movweq	r0, #45056	; 0xb000
    1c14:	0000017e 	andeq	r0, r0, lr, ror r1
    1c18:	91300305 	teqls	r0, r5, lsl #6
    1c1c:	b30f2000 	movwlt	r2, #61440	; 0xf000
    1c20:	0c00000e 	stceq	0, cr0, [r0], {14}
    1c24:	00017e03 	andeq	r7, r1, r3, lsl #28
    1c28:	68030500 	stmdavs	r3, {r8, sl}
    1c2c:	0f200091 	svceq	0x00200091
    1c30:	00000ef0 	strdeq	r0, [r0], -r0	; <UNPREDICTABLE>
    1c34:	017e030d 	cmneq	lr, sp, lsl #6
    1c38:	03050000 	movweq	r0, #20480	; 0x5000
    1c3c:	200091a0 	andcs	r9, r0, r0, lsr #3
    1c40:	000f8c10 	andeq	r8, pc, r0, lsl ip	; <UNPREDICTABLE>
    1c44:	9e0e0100 	adflse	f0, f6, f0
    1c48:	05000000 	streq	r0, [r0, #-0]
    1c4c:	004f4403 	subeq	r4, pc, r3, lsl #8
    1c50:	0e181020 	cdpeq	0, 1, cr1, cr8, cr0, {1}
    1c54:	0f010000 	svceq	0x00010000
    1c58:	0000009e 	muleq	r0, lr, r0
    1c5c:	4e700305 	cdpmi	3, 7, cr0, cr0, cr5, {0}
    1c60:	6d102000 	ldcvs	0, cr2, [r0, #-0]
    1c64:	0100000e 	tsteq	r0, lr
    1c68:	00009e10 	andeq	r9, r0, r0, lsl lr
    1c6c:	70030500 	andvc	r0, r3, r0, lsl #10
    1c70:	1020004f 	eorne	r0, r0, pc, asr #32
    1c74:	00000e0c 	andeq	r0, r0, ip, lsl #28
    1c78:	009e1101 	addseq	r1, lr, r1, lsl #2
    1c7c:	03050000 	movweq	r0, #20480	; 0x5000
    1c80:	20004f80 	andcs	r4, r0, r0, lsl #31
    1c84:	000f0d10 	andeq	r0, pc, r0, lsl sp	; <UNPREDICTABLE>
    1c88:	9e120100 	muflss	f0, f2, f0
    1c8c:	05000000 	streq	r0, [r0, #-0]
    1c90:	004ee403 	subeq	lr, lr, r3, lsl #8
    1c94:	0f741020 	svceq	0x00741020
    1c98:	13010000 	movwne	r0, #4096	; 0x1000
    1c9c:	0000009e 	muleq	r0, lr, r0
    1ca0:	4e740305 	cdpmi	3, 7, cr0, cr4, cr5, {0}
    1ca4:	a7102000 	ldrge	r2, [r0, -r0]
    1ca8:	0100000e 	tsteq	r0, lr
    1cac:	00009e14 	andeq	r9, r0, r4, lsl lr
    1cb0:	0c030500 	cfstr32eq	mvfx0, [r3], {-0}
    1cb4:	1020004f 	eorne	r0, r0, pc, asr #32
    1cb8:	00000f02 	andeq	r0, r0, r2, lsl #30
    1cbc:	009e1501 	addseq	r1, lr, r1, lsl #10
    1cc0:	03050000 	movweq	r0, #20480	; 0x5000
    1cc4:	20004f48 	andcs	r4, r0, r8, asr #30
    1cc8:	000f9810 	andeq	r9, pc, r0, lsl r8	; <UNPREDICTABLE>
    1ccc:	9e160100 	muflss	f0, f6, f0
    1cd0:	05000000 	streq	r0, [r0, #-0]
    1cd4:	004f3403 	subeq	r3, pc, r3, lsl #8
    1cd8:	0ecf1020 	cdpeq	0, 12, cr1, cr15, cr0, {1}
    1cdc:	18010000 	stmdane	r1, {}	; <UNPREDICTABLE>
    1ce0:	00000062 	andeq	r0, r0, r2, rrx
    1ce4:	4ec00305 	cdpmi	3, 12, cr0, cr0, cr5, {0}
    1ce8:	23102000 	tstcs	r0, #0
    1cec:	0100000e 	tsteq	r0, lr
    1cf0:	00006219 	andeq	r6, r0, r9, lsl r2
    1cf4:	58030500 	stmdapl	r3, {r8, sl}
    1cf8:	1020004f 	eorne	r0, r0, pc, asr #32
    1cfc:	00000f18 	andeq	r0, r0, r8, lsl pc
    1d00:	00621a01 	rsbeq	r1, r2, r1, lsl #20
    1d04:	03050000 	movweq	r0, #20480	; 0x5000
    1d08:	20004ee8 	andcs	r4, r0, r8, ror #29
    1d0c:	000e7910 	andeq	r7, lr, r0, lsl r9
    1d10:	621b0100 	andsvs	r0, fp, #0, 2
    1d14:	05000000 	streq	r0, [r0, #-0]
    1d18:	004eb403 	subeq	fp, lr, r3, lsl #8
    1d1c:	0e5d1020 	cdpeq	0, 5, cr1, cr13, cr0, {1}
    1d20:	1c010000 	stcne	0, cr0, [r1], {-0}
    1d24:	00000062 	andeq	r0, r0, r2, rrx
    1d28:	4f640305 	svcmi	0x00640305
    1d2c:	26102000 	ldrcs	r2, [r0], -r0
    1d30:	0100000f 	tsteq	r0, pc
    1d34:	0000621d 	andeq	r6, r0, sp, lsl r2
    1d38:	00030500 	andeq	r0, r3, r0, lsl #10
    1d3c:	1020004f 	eorne	r0, r0, pc, asr #32
    1d40:	00000f35 	andeq	r0, r0, r5, lsr pc
    1d44:	00621e01 	rsbeq	r1, r2, r1, lsl #28
    1d48:	03050000 	movweq	r0, #20480	; 0x5000
    1d4c:	20004ef4 	strdcs	r4, [r0], -r4	; <UNPREDICTABLE>
    1d50:	000e4d10 	andeq	r4, lr, r0, lsl sp
    1d54:	621f0100 	andsvs	r0, pc, #0, 2
    1d58:	05000000 	streq	r0, [r0, #-0]
    1d5c:	004ecc03 	subeq	ip, lr, r3, lsl #24
    1d60:	0fb01020 	svceq	0x00b01020
    1d64:	20010000 	andcs	r0, r1, r0
    1d68:	00000062 	andeq	r0, r0, r2, rrx
    1d6c:	4f380305 	svcmi	0x00380305
    1d70:	32102000 	andscc	r2, r0, #0
    1d74:	0100000e 	tsteq	r0, lr
    1d78:	00014c23 	andeq	r4, r1, r3, lsr #24
    1d7c:	10030500 	andne	r0, r3, r0, lsl #10
    1d80:	1020004f 	eorne	r0, r0, pc, asr #32
    1d84:	00000f80 	andeq	r0, r0, r0, lsl #31
    1d88:	00a42401 	adceq	r2, r4, r1, lsl #8
    1d8c:	03050000 	movweq	r0, #20480	; 0x5000
    1d90:	20004f4c 	andcs	r4, r0, ip, asr #30
    1d94:	00101010 	andseq	r1, r0, r0, lsl r0
    1d98:	a4250100 	strtge	r0, [r5], #-256	; 0xffffff00
    1d9c:	05000000 	streq	r0, [r0, #-0]
    1da0:	004ea803 	subeq	sl, lr, r3, lsl #16
    1da4:	0e9b1020 	cdpeq	0, 9, cr1, cr11, cr0, {1}
    1da8:	26010000 	strcs	r0, [r1], -r0
    1dac:	000000a4 	andeq	r0, r0, r4, lsr #1
    1db0:	4f740305 	svcmi	0x00740305
    1db4:	68102000 	ldmdavs	r0, {sp}
    1db8:	0100000f 	tsteq	r0, pc
    1dbc:	0000a427 	andeq	sl, r0, r7, lsr #8
    1dc0:	d8030500 	stmdale	r3, {r8, sl}
    1dc4:	0b20004e 	bleq	801f04 <startup-0x1f7fe0fc>
    1dc8:	000000a4 	andeq	r0, r0, r4, lsr #1
    1dcc:	000003c5 	andeq	r0, r0, r5, asr #7
    1dd0:	00018e0e 	andeq	r8, r1, lr, lsl #28
    1dd4:	10000300 	andne	r0, r0, r0, lsl #6
    1dd8:	00000fa4 	andeq	r0, r0, r4, lsr #31
    1ddc:	03b52801 			; <UNDEFINED> instruction: 0x03b52801
    1de0:	03050000 	movweq	r0, #20480	; 0x5000
    1de4:	20004e78 	andcs	r4, r0, r8, ror lr
    1de8:	000ec411 	andeq	ip, lr, r1, lsl r4
    1dec:	644c0100 	strbvs	r0, [ip], #-256	; 0xffffff00
    1df0:	f8200022 			; <UNDEFINED> instruction: 0xf8200022
    1df4:	01000000 	mrseq	r0, (UNDEF: 0)
    1df8:	00040b9c 	muleq	r4, ip, fp
    1dfc:	0e321200 	cdpeq	2, 3, cr1, cr2, cr0, {0}
    1e00:	4c010000 	stcmi	0, cr0, [r1], {-0}
    1e04:	00000162 	andeq	r0, r0, r2, ror #2
    1e08:	0f6c9102 	svceq	0x006c9102
    1e0c:	00000909 	andeq	r0, r0, r9, lsl #18
    1e10:	012e4d01 			; <UNDEFINED> instruction: 0x012e4d01
    1e14:	03050000 	movweq	r0, #20480	; 0x5000
    1e18:	200091d8 	ldrdcs	r9, [r0], -r8
    1e1c:	04a91300 	strteq	r1, [r9], #768	; 0x300
    1e20:	29010000 	stmdbcs	r1, {}	; <UNPREDICTABLE>
    1e24:	20002124 	andcs	r2, r0, r4, lsr #2
    1e28:	00000140 	andeq	r0, r0, r0, asr #2
    1e2c:	9e0f9c01 	cdpls	12, 0, cr9, cr15, cr1, {0}
    1e30:	0100000d 	tsteq	r0, sp
    1e34:	00009e2b 	andeq	r9, r0, fp, lsr #28
    1e38:	74910200 	ldrvc	r0, [r1], #512	; 0x200
    1e3c:	000da80f 	andeq	sl, sp, pc, lsl #16
    1e40:	9e2e0100 	suflse	f0, f6, f0
    1e44:	02000000 	andeq	r0, r0, #0
    1e48:	9e0f7091 	mcrls	0, 0, r7, cr15, cr1, {4}
    1e4c:	0100000b 	tsteq	r0, fp
    1e50:	00009e31 	andeq	r9, r0, r1, lsr lr
    1e54:	6c910200 	lfmvs	f0, 4, [r1], {0}
    1e58:	000abf0f 	andeq	fp, sl, pc, lsl #30
    1e5c:	9e350100 	rsflss	f0, f5, f0
    1e60:	02000000 	andeq	r0, r0, #0
    1e64:	c80f6891 	stmdagt	pc, {r0, r4, r7, fp, sp, lr}	; <UNPREDICTABLE>
    1e68:	0100000d 	tsteq	r0, sp
    1e6c:	00009e38 	andeq	r9, r0, r8, lsr lr
    1e70:	64910200 	ldrvs	r0, [r1], #512	; 0x200
    1e74:	000b5c0f 	andeq	r5, fp, pc, lsl #24
    1e78:	9e3b0100 	rsflse	f0, f3, f0
    1e7c:	02000000 	andeq	r0, r0, #0
    1e80:	740f6091 	strvc	r6, [pc], #-145	; 1e88 <startup-0x1fffe178>
    1e84:	0100000d 	tsteq	r0, sp
    1e88:	00009e40 	andeq	r9, r0, r0, asr #28
    1e8c:	5c910200 	lfmpl	f0, 4, [r1], {0}
    1e90:	000dd20f 	andeq	sp, sp, pc, lsl #4
    1e94:	9e430100 	dvflss	f0, f3, f0
    1e98:	02000000 	andeq	r0, r0, #0
    1e9c:	dc0f5891 	stcle	8, cr5, [pc], {145}	; 0x91
    1ea0:	0100000d 	tsteq	r0, sp
    1ea4:	00009e46 	andeq	r9, r0, r6, asr #28
    1ea8:	54910200 	ldrpl	r0, [r1], #512	; 0x200
    1eac:	05460000 	strbeq	r0, [r6, #-0]
    1eb0:	00040000 	andeq	r0, r4, r0
    1eb4:	00000652 	andeq	r0, r0, r2, asr r6
    1eb8:	009f0104 	addseq	r0, pc, r4, lsl #2
    1ebc:	030c0000 	movweq	r0, #49152	; 0xc000
    1ec0:	5c000011 	stcpl	0, cr0, [r0], {17}
    1ec4:	70200023 	eorvc	r0, r0, r3, lsr #32
    1ec8:	1b000003 	blne	1edc <startup-0x1fffe124>
    1ecc:	0200000a 	andeq	r0, r0, #10
    1ed0:	4e05020c 	cdpmi	2, 0, cr0, cr5, cr12, {0}
    1ed4:	03000000 	movweq	r0, #0
    1ed8:	0000035b 	andeq	r0, r0, fp, asr r3
    1edc:	004e0702 	subeq	r0, lr, r2, lsl #14
    1ee0:	03000000 	movweq	r0, #0
    1ee4:	00000719 	andeq	r0, r0, r9, lsl r7
    1ee8:	004e0802 	subeq	r0, lr, r2, lsl #16
    1eec:	03040000 	movweq	r0, #16384	; 0x4000
    1ef0:	00001918 	andeq	r1, r0, r8, lsl r9
    1ef4:	00550902 	subseq	r0, r5, r2, lsl #18
    1ef8:	00080000 	andeq	r0, r8, r0
    1efc:	89070404 	stmdbhi	r7, {r2, sl}
    1f00:	05000003 	streq	r0, [r0, #-3]
    1f04:	00005b04 	andeq	r5, r0, r4, lsl #22
    1f08:	08010400 	stmdaeq	r1, {sl}
    1f0c:	000004d3 	ldrdeq	r0, [r0], -r3
    1f10:	001a6a06 	andseq	r6, sl, r6, lsl #20
    1f14:	210a0200 	mrscs	r0, R10_fiq
    1f18:	07000000 	streq	r0, [r0, -r0]
    1f1c:	00000034 	andeq	r0, r0, r4, lsr r0
    1f20:	9e06030c 	cdpls	3, 0, cr0, cr6, cr12, {0}
    1f24:	03000000 	movweq	r0, #0
    1f28:	000005c9 	andeq	r0, r0, r9, asr #11
    1f2c:	009e0703 	addseq	r0, lr, r3, lsl #14
    1f30:	03000000 	movweq	r0, #0
    1f34:	0000003b 	andeq	r0, r0, fp, lsr r0
    1f38:	009e0803 	addseq	r0, lr, r3, lsl #16
    1f3c:	03040000 	movweq	r0, #16384	; 0x4000
    1f40:	00000030 	andeq	r0, r0, r0, lsr r0
    1f44:	009e0903 	addseq	r0, lr, r3, lsl #18
    1f48:	00080000 	andeq	r0, r8, r0
    1f4c:	00620405 	rsbeq	r0, r2, r5, lsl #8
    1f50:	28060000 	stmdacs	r6, {}	; <UNPREDICTABLE>
    1f54:	03000016 	movweq	r0, #22
    1f58:	00006d0a 	andeq	r6, r0, sl, lsl #26
    1f5c:	06de0700 	ldrbeq	r0, [lr], r0, lsl #14
    1f60:	04240000 	strteq	r0, [r4], #-0
    1f64:	00012806 	andeq	r2, r1, r6, lsl #16
    1f68:	04610300 	strbteq	r0, [r1], #-768	; 0xfffffd00
    1f6c:	07040000 	streq	r0, [r4, -r0]
    1f70:	00000128 	andeq	r0, r0, r8, lsr #2
    1f74:	06ea0300 	strbteq	r0, [sl], r0, lsl #6
    1f78:	08040000 	stmdaeq	r4, {}	; <UNPREDICTABLE>
    1f7c:	0000012e 	andeq	r0, r0, lr, lsr #2
    1f80:	063a0304 	ldrteq	r0, [sl], -r4, lsl #6
    1f84:	09040000 	stmdbeq	r4, {}	; <UNPREDICTABLE>
    1f88:	0000012e 	andeq	r0, r0, lr, lsr #2
    1f8c:	06660308 	strbteq	r0, [r6], -r8, lsl #6
    1f90:	0c040000 	stceq	0, cr0, [r4], {-0}
    1f94:	00000146 	andeq	r0, r0, r6, asr #2
    1f98:	0342030c 	movteq	r0, #8972	; 0x230c
    1f9c:	0d040000 	stceq	0, cr0, [r4, #-0]
    1fa0:	00000146 	andeq	r0, r0, r6, asr #2
    1fa4:	04730310 	ldrbteq	r0, [r3], #-784	; 0xfffffcf0
    1fa8:	10040000 	andne	r0, r4, r0
    1fac:	0000012e 	andeq	r0, r0, lr, lsr #2
    1fb0:	00700314 	rsbseq	r0, r0, r4, lsl r3
    1fb4:	11040000 	mrsne	r0, (UNDEF: 4)
    1fb8:	0000012e 	andeq	r0, r0, lr, lsr #2
    1fbc:	03d90318 	bicseq	r0, r9, #24, 6	; 0x60000000
    1fc0:	12040000 	andne	r0, r4, #0
    1fc4:	0000012e 	andeq	r0, r0, lr, lsr #2
    1fc8:	03e9031c 	mvneq	r0, #28, 6	; 0x70000000
    1fcc:	13040000 	movwne	r0, #16384	; 0x4000
    1fd0:	0000012e 	andeq	r0, r0, lr, lsr #2
    1fd4:	04050020 	streq	r0, [r5], #-32	; 0xffffffe0
    1fd8:	000000a4 	andeq	r0, r0, r4, lsr #1
    1fdc:	69050408 	stmdbvs	r5, {r3, sl}
    1fe0:	0900746e 	stmdbeq	r0, {r1, r2, r3, r5, r6, sl, ip, sp, lr}
    1fe4:	00000140 	andeq	r0, r0, r0, asr #2
    1fe8:	0001400a 	andeq	r4, r1, sl
    1fec:	04050000 	streq	r0, [r5], #-0
    1ff0:	000000af 	andeq	r0, r0, pc, lsr #1
    1ff4:	01350405 	teqeq	r5, r5, lsl #8
    1ff8:	df060000 	svcle	0x00060000
    1ffc:	04000006 	streq	r0, [r0], #-6
    2000:	0000af15 	andeq	sl, r0, r5, lsl pc
    2004:	01620b00 	cmneq	r2, r0, lsl #22
    2008:	01620000 	cmneq	r2, r0
    200c:	000c0000 	andeq	r0, ip, r0
    2010:	014c0405 	cmpeq	ip, r5, lsl #8
    2014:	560d0000 	strpl	r0, [sp], -r0
    2018:	04000005 	streq	r0, [r0], #-5
    201c:	0001571c 	andeq	r5, r1, ip, lsl r7
    2020:	04240d00 	strteq	r0, [r4], #-3328	; 0xfffff300
    2024:	1d040000 	stcne	0, cr0, [r4, #-0]
    2028:	0000012e 	andeq	r0, r0, lr, lsr #2
    202c:	83070204 	movwhi	r0, #29188	; 0x7204
    2030:	0b000003 	bleq	2044 <startup-0x1fffdfbc>
    2034:	0000005b 	andeq	r0, r0, fp, asr r0
    2038:	00000195 	muleq	r0, r5, r1
    203c:	0001950e 	andeq	r9, r1, lr, lsl #10
    2040:	04003500 	streq	r3, [r0], #-1280	; 0xfffffb00
    2044:	04060704 	streq	r0, [r6], #-1796	; 0xfffff8fc
    2048:	3b0f0000 	blcc	3c2050 <startup-0x1fc3dfb0>
    204c:	0500000e 	streq	r0, [r0, #-14]
    2050:	00018503 	andeq	r8, r1, r3, lsl #10
    2054:	dc030500 	cfstr32le	mvfx0, [r3], {-0}
    2058:	0f200091 	svceq	0x00200091
    205c:	00000fed 	andeq	r0, r0, sp, ror #31
    2060:	01850306 	orreq	r0, r5, r6, lsl #6
    2064:	03050000 	movweq	r0, #20480	; 0x5000
    2068:	20009214 	andcs	r9, r0, r4, lsl r2
    206c:	000f450f 	andeq	r4, pc, pc, lsl #10
    2070:	85030700 	strhi	r0, [r3, #-1792]	; 0xfffff900
    2074:	05000001 	streq	r0, [r0, #-1]
    2078:	00924c03 	addseq	r4, r2, r3, lsl #24
    207c:	0ede0f20 	cdpeq	15, 13, cr0, cr14, cr0, {1}
    2080:	03080000 	movweq	r0, #32768	; 0x8000
    2084:	00000185 	andeq	r0, r0, r5, lsl #3
    2088:	92840305 	addls	r0, r4, #335544320	; 0x14000000
    208c:	570f2000 	strpl	r2, [pc, -r0]
    2090:	0900000f 	stmdbeq	r0, {r0, r1, r2, r3}
    2094:	00018503 	andeq	r8, r1, r3, lsl #10
    2098:	bc030500 	cfstr32lt	mvfx0, [r3], {-0}
    209c:	0f200092 	svceq	0x00200092
    20a0:	00000e89 	andeq	r0, r0, r9, lsl #29
    20a4:	0185030a 	orreq	r0, r5, sl, lsl #6
    20a8:	03050000 	movweq	r0, #20480	; 0x5000
    20ac:	200092f4 	strdcs	r9, [r0], -r4
    20b0:	000ffe0f 	andeq	pc, pc, pc, lsl #28
    20b4:	85030b00 	strhi	r0, [r3, #-2816]	; 0xfffff500
    20b8:	05000001 	streq	r0, [r0, #-1]
    20bc:	00932c03 	addseq	r2, r3, r3, lsl #24
    20c0:	0eb30f20 	cdpeq	15, 11, cr0, cr3, cr0, {1}
    20c4:	030c0000 	movweq	r0, #49152	; 0xc000
    20c8:	00000185 	andeq	r0, r0, r5, lsl #3
    20cc:	93640305 	cmnls	r4, #335544320	; 0x14000000
    20d0:	f00f2000 			; <UNDEFINED> instruction: 0xf00f2000
    20d4:	0d00000e 	stceq	0, cr0, [r0, #-56]	; 0xffffffc8
    20d8:	00018503 	andeq	r8, r1, r3, lsl #10
    20dc:	9c030500 	cfstr32ls	mvfx0, [r3], {-0}
    20e0:	10200093 	mlane	r0, r3, r0, r0
    20e4:	000010a2 	andeq	r1, r0, r2, lsr #1
    20e8:	009e1201 	addseq	r1, lr, r1, lsl #4
    20ec:	03050000 	movweq	r0, #20480	; 0x5000
    20f0:	20004fc8 	andcs	r4, r0, r8, asr #31
    20f4:	00106d10 	andseq	r6, r0, r0, lsl sp
    20f8:	9e130100 	muflss	f0, f3, f0
    20fc:	05000000 	streq	r0, [r0, #-0]
    2100:	00506003 	subseq	r6, r0, r3
    2104:	112f1020 			; <UNDEFINED> instruction: 0x112f1020
    2108:	14010000 	strne	r0, [r1], #-0
    210c:	0000009e 	muleq	r0, lr, r0
    2110:	50380305 	eorspl	r0, r8, r5, lsl #6
    2114:	ef102000 	svc	0x00102000
    2118:	01000010 	tsteq	r0, r0, lsl r0
    211c:	00009e15 	andeq	r9, r0, r5, lsl lr
    2120:	44030500 	strmi	r0, [r3], #-1280	; 0xfffffb00
    2124:	10200050 	eorne	r0, r0, r0, asr r0
    2128:	00001064 	andeq	r1, r0, r4, rrx
    212c:	009e1601 	addseq	r1, lr, r1, lsl #12
    2130:	03050000 	movweq	r0, #20480	; 0x5000
    2134:	20004fb4 			; <UNDEFINED> instruction: 0x20004fb4
    2138:	00103e10 	andseq	r3, r0, r0, lsl lr
    213c:	9e170100 	muflss	f0, f7, f0
    2140:	05000000 	streq	r0, [r0, #-0]
    2144:	00503c03 	subseq	r3, r0, r3, lsl #24
    2148:	10561020 	subsne	r1, r6, r0, lsr #32
    214c:	18010000 	stmdane	r1, {}	; <UNPREDICTABLE>
    2150:	0000009e 	muleq	r0, lr, r0
    2154:	4fc40305 	svcmi	0x00c40305
    2158:	c0102000 	andsgt	r2, r0, r0
    215c:	01000010 	tsteq	r0, r0, lsl r0
    2160:	00009e19 	andeq	r9, r0, r9, lsl lr
    2164:	70030500 	andvc	r0, r3, r0, lsl #10
    2168:	10200050 	eorne	r0, r0, r0, asr r0
    216c:	000010d7 	ldrdeq	r1, [r0], -r7
    2170:	009e1a01 	addseq	r1, lr, r1, lsl #20
    2174:	03050000 	movweq	r0, #20480	; 0x5000
    2178:	20005040 	andcs	r5, r0, r0, asr #32
    217c:	00114010 	andseq	r4, r1, r0, lsl r0
    2180:	621c0100 	andsvs	r0, ip, #0, 2
    2184:	05000000 	streq	r0, [r0, #-0]
    2188:	00505403 	subseq	r5, r0, r3, lsl #8
    218c:	10761020 	rsbsne	r1, r6, r0, lsr #32
    2190:	1d010000 	stcne	0, cr0, [r1, #-0]
    2194:	00000062 	andeq	r0, r0, r2, rrx
    2198:	4fcc0305 	svcmi	0x00cc0305
    219c:	96102000 	ldrls	r2, [r0], -r0
    21a0:	01000010 	tsteq	r0, r0, lsl r0
    21a4:	0000621e 	andeq	r6, r0, lr, lsl r2
    21a8:	8c030500 	cfstr32hi	mvfx0, [r3], {-0}
    21ac:	10200050 	eorne	r0, r0, r0, asr r0
    21b0:	000010eb 	andeq	r1, r0, fp, ror #1
    21b4:	00621f01 	rsbeq	r1, r2, r1, lsl #30
    21b8:	03050000 	movweq	r0, #20480	; 0x5000
    21bc:	20005014 	andcs	r5, r0, r4, lsl r0
    21c0:	00103a10 	andseq	r3, r0, r0, lsl sl
    21c4:	62200100 	eorvs	r0, r0, #0, 2
    21c8:	05000000 	streq	r0, [r0, #-0]
    21cc:	00508003 	subseq	r8, r0, r3
    21d0:	10601020 	rsbne	r1, r0, r0, lsr #32
    21d4:	21010000 	mrscs	r0, (UNDEF: 1)
    21d8:	00000062 	andeq	r0, r0, r2, rrx
    21dc:	4fb80305 	svcmi	0x00b80305
    21e0:	52102000 	andspl	r2, r0, #0
    21e4:	01000010 	tsteq	r0, r0, lsl r0
    21e8:	00006222 	andeq	r6, r0, r2, lsr #4
    21ec:	64030500 	strvs	r0, [r3], #-1280	; 0xfffffb00
    21f0:	10200050 	eorne	r0, r0, r0, asr r0
    21f4:	000010d3 	ldrdeq	r1, [r0], -r3
    21f8:	00622301 	rsbeq	r2, r2, r1, lsl #6
    21fc:	03050000 	movweq	r0, #20480	; 0x5000
    2200:	20004fd8 	ldrdcs	r4, [r0], -r8
    2204:	0010bc10 	andseq	fp, r0, r0, lsl ip
    2208:	62240100 	eorvs	r0, r4, #0, 2
    220c:	05000000 	streq	r0, [r0, #-0]
    2210:	00504803 	subseq	r4, r0, r3, lsl #16
    2214:	11391020 	teqne	r9, r0, lsr #32
    2218:	27010000 	strcs	r0, [r1, -r0]
    221c:	0000014c 	andeq	r0, r0, ip, asr #2
    2220:	4f840305 	svcmi	0x00840305
    2224:	30102000 	andscc	r2, r0, r0
    2228:	01000010 	tsteq	r0, r0, lsl r0
    222c:	0000a428 	andeq	sl, r0, r8, lsr #8
    2230:	2c030500 	cfstr32cs	mvfx0, [r3], {-0}
    2234:	10200050 	eorne	r0, r0, r0, asr r0
    2238:	000010f9 	strdeq	r1, [r0], -r9
    223c:	00a42901 	adceq	r2, r4, r1, lsl #18
    2240:	03050000 	movweq	r0, #20480	; 0x5000
    2244:	20004fa8 	andcs	r4, r0, r8, lsr #31
    2248:	0010c910 	andseq	ip, r0, r0, lsl r9
    224c:	a42a0100 	strtge	r0, [sl], #-256	; 0xffffff00
    2250:	05000000 	streq	r0, [r0, #-0]
    2254:	00502003 	subseq	r2, r0, r3
    2258:	10261020 	eorne	r1, r6, r0, lsr #32
    225c:	2b010000 	blcs	42264 <startup-0x1ffbdd9c>
    2260:	000000a4 	andeq	r0, r0, r4, lsr #1
    2264:	50740305 	rsbspl	r0, r4, r5, lsl #6
    2268:	a40b2000 	strge	r2, [fp], #-0
    226c:	cc000000 	stcgt	0, cr0, [r0], {-0}
    2270:	0e000003 	cdpeq	0, 0, cr0, cr0, cr3, {0}
    2274:	00000195 	muleq	r0, r5, r1
    2278:	83100003 	tsthi	r0, #3
    227c:	01000010 	tsteq	r0, r0, lsl r0
    2280:	0003bc2c 	andeq	fp, r3, ip, lsr #24
    2284:	e4030500 	str	r0, [r3], #-1280	; 0xfffffb00
    2288:	0f20004f 	svceq	0x0020004f
    228c:	0000114d 	andeq	r1, r0, sp, asr #2
    2290:	012e6b01 			; <UNDEFINED> instruction: 0x012e6b01
    2294:	03050000 	movweq	r0, #20480	; 0x5000
    2298:	2000490c 	andcs	r4, r0, ip, lsl #18
    229c:	0010ac0f 	andseq	sl, r0, pc, lsl #24
    22a0:	2e6c0100 	powcse	f0, f4, f0
    22a4:	05000001 	streq	r0, [r0, #-1]
    22a8:	00491003 	subeq	r1, r9, r3
    22ac:	10e11120 	rscne	r1, r1, r0, lsr #2
    22b0:	74010000 	strvc	r0, [r1], #-0
    22b4:	200025bc 			; <UNDEFINED> instruction: 0x200025bc
    22b8:	00000110 	andeq	r0, r0, r0, lsl r1
    22bc:	04569c01 	ldrbeq	r9, [r6], #-3073	; 0xfffff3ff
    22c0:	82120000 	andshi	r0, r2, #0
    22c4:	01000007 	tsteq	r0, r7
    22c8:	00016274 	andeq	r6, r1, r4, ror r2
    22cc:	74910200 	ldrvc	r0, [r1], #512	; 0x200
    22d0:	0003f30f 	andeq	pc, r3, pc, lsl #6
    22d4:	2e760100 	rpwcss	f0, f6, f0
    22d8:	05000001 	streq	r0, [r0, #-1]
    22dc:	00491403 	subeq	r1, r9, r3, lsl #8
    22e0:	101c0f20 	andsne	r0, ip, r0, lsr #30
    22e4:	77010000 	strvc	r0, [r1, -r0]
    22e8:	0000012e 	andeq	r0, r0, lr, lsr #2
    22ec:	93d80305 	bicsls	r0, r8, #335544320	; 0x14000000
    22f0:	480f2000 	stmdami	pc, {sp}	; <UNPREDICTABLE>
    22f4:	01000010 	tsteq	r0, r0, lsl r0
    22f8:	00012e78 	andeq	r2, r1, r8, ror lr
    22fc:	18030500 	stmdane	r3, {r8, sl}
    2300:	00200049 	eoreq	r0, r0, r9, asr #32
    2304:	00115d13 	andseq	r5, r1, r3, lsl sp
    2308:	946e0100 	strbtls	r0, [lr], #-256	; 0xffffff00
    230c:	28200025 	stmdacs	r0!, {r0, r2, r5}
    2310:	01000000 	mrseq	r0, (UNDEF: 0)
    2314:	0004849c 	muleq	r4, ip, r4
    2318:	00781400 	rsbseq	r1, r8, r0, lsl #8
    231c:	012e6e01 			; <UNDEFINED> instruction: 0x012e6e01
    2320:	91020000 	mrsls	r0, (UNDEF: 2)
    2324:	00791474 	rsbseq	r1, r9, r4, ror r4
    2328:	012e6e01 			; <UNDEFINED> instruction: 0x012e6e01
    232c:	91020000 	mrsls	r0, (UNDEF: 2)
    2330:	8d110070 	ldchi	0, cr0, [r1, #-448]	; 0xfffffe40
    2334:	01000010 	tsteq	r0, r0, lsl r0
    2338:	00249c50 	eoreq	r9, r4, r0, asr ip
    233c:	0000f820 	andeq	pc, r0, r0, lsr #16
    2340:	b99c0100 	ldmiblt	ip, {r8}
    2344:	12000004 	andne	r0, r0, #4
    2348:	00001139 	andeq	r1, r0, r9, lsr r1
    234c:	01625001 	cmneq	r2, r1
    2350:	91020000 	mrsls	r0, (UNDEF: 2)
    2354:	09090f6c 	stmdbeq	r9, {r2, r3, r5, r6, r8, r9, sl, fp}
    2358:	51010000 	mrspl	r0, (UNDEF: 1)
    235c:	0000012e 	andeq	r0, r0, lr, lsr #2
    2360:	93d40305 	bicsls	r0, r4, #335544320	; 0x14000000
    2364:	15002000 	strne	r2, [r0, #-0]
    2368:	000004a9 	andeq	r0, r0, r9, lsr #9
    236c:	235c2d01 	cmpcs	ip, #1, 26	; 0x40
    2370:	01402000 	mrseq	r2, (UNDEF: 64)
    2374:	9c010000 	stcls	0, cr0, [r1], {-0}
    2378:	000d9e0f 	andeq	r9, sp, pc, lsl #28
    237c:	9e2f0100 	suflse	f0, f7, f0
    2380:	02000000 	andeq	r0, r0, #0
    2384:	a80f7491 	stmdage	pc, {r0, r4, r7, sl, ip, sp, lr}	; <UNPREDICTABLE>
    2388:	0100000d 	tsteq	r0, sp
    238c:	00009e32 	andeq	r9, r0, r2, lsr lr
    2390:	70910200 	addsvc	r0, r1, r0, lsl #4
    2394:	000b9e0f 	andeq	r9, fp, pc, lsl #28
    2398:	9e350100 	rsflss	f0, f5, f0
    239c:	02000000 	andeq	r0, r0, #0
    23a0:	bf0f6c91 	svclt	0x000f6c91
    23a4:	0100000a 	tsteq	r0, sl
    23a8:	00009e39 	andeq	r9, r0, r9, lsr lr
    23ac:	68910200 	ldmvs	r1, {r9}
    23b0:	000dc80f 	andeq	ip, sp, pc, lsl #16
    23b4:	9e3c0100 	rsflse	f0, f4, f0
    23b8:	02000000 	andeq	r0, r0, #0
    23bc:	5c0f6491 	cfstrspl	mvf6, [pc], {145}	; 0x91
    23c0:	0100000b 	tsteq	r0, fp
    23c4:	00009e3f 	andeq	r9, r0, pc, lsr lr
    23c8:	60910200 	addsvs	r0, r1, r0, lsl #4
    23cc:	000d740f 	andeq	r7, sp, pc, lsl #8
    23d0:	9e440100 	dvflss	f0, f4, f0
    23d4:	02000000 	andeq	r0, r0, #0
    23d8:	d20f5c91 	andle	r5, pc, #37120	; 0x9100
    23dc:	0100000d 	tsteq	r0, sp
    23e0:	00009e47 	andeq	r9, r0, r7, asr #28
    23e4:	58910200 	ldmpl	r1, {r9}
    23e8:	000ddc0f 	andeq	sp, sp, pc, lsl #24
    23ec:	9e4a0100 	dvflse	f0, f2, f0
    23f0:	02000000 	andeq	r0, r0, #0
    23f4:	00005491 	muleq	r0, r1, r4
    23f8:	0000055b 	andeq	r0, r0, fp, asr r5
    23fc:	077b0004 	ldrbeq	r0, [fp, -r4]!
    2400:	01040000 	mrseq	r0, (UNDEF: 4)
    2404:	0000009f 	muleq	r0, pc, r0	; <UNPREDICTABLE>
    2408:	0013a70c 	andseq	sl, r3, ip, lsl #14
    240c:	0026cc00 	eoreq	ip, r6, r0, lsl #24
    2410:	0002ac20 	andeq	sl, r2, r0, lsr #24
    2414:	000ba200 	andeq	sl, fp, r0, lsl #4
    2418:	020c0200 	andeq	r0, ip, #0, 4
    241c:	00004e05 	andeq	r4, r0, r5, lsl #28
    2420:	035b0300 	cmpeq	fp, #0, 6
    2424:	07020000 	streq	r0, [r2, -r0]
    2428:	0000004e 	andeq	r0, r0, lr, asr #32
    242c:	07190300 	ldreq	r0, [r9, -r0, lsl #6]
    2430:	08020000 	stmdaeq	r2, {}	; <UNPREDICTABLE>
    2434:	0000004e 	andeq	r0, r0, lr, asr #32
    2438:	19180304 	ldmdbne	r8, {r2, r8, r9}
    243c:	09020000 	stmdbeq	r2, {}	; <UNPREDICTABLE>
    2440:	00000055 	andeq	r0, r0, r5, asr r0
    2444:	04040008 	streq	r0, [r4], #-8
    2448:	00038907 	andeq	r8, r3, r7, lsl #18
    244c:	5b040500 	blpl	103854 <startup-0x1fefc7ac>
    2450:	04000000 	streq	r0, [r0], #-0
    2454:	04d30801 	ldrbeq	r0, [r3], #2049	; 0x801
    2458:	6a060000 	bvs	182460 <startup-0x1fe7dba0>
    245c:	0200001a 	andeq	r0, r0, #26
    2460:	0000210a 	andeq	r2, r0, sl, lsl #2
    2464:	00340700 	eorseq	r0, r4, r0, lsl #14
    2468:	030c0000 	movweq	r0, #49152	; 0xc000
    246c:	00009e06 	andeq	r9, r0, r6, lsl #28
    2470:	05c90300 	strbeq	r0, [r9, #768]	; 0x300
    2474:	07030000 	streq	r0, [r3, -r0]
    2478:	0000009e 	muleq	r0, lr, r0
    247c:	003b0300 	eorseq	r0, fp, r0, lsl #6
    2480:	08030000 	stmdaeq	r3, {}	; <UNPREDICTABLE>
    2484:	0000009e 	muleq	r0, lr, r0
    2488:	00300304 	eorseq	r0, r0, r4, lsl #6
    248c:	09030000 	stmdbeq	r3, {}	; <UNPREDICTABLE>
    2490:	0000009e 	muleq	r0, lr, r0
    2494:	04050008 	streq	r0, [r5], #-8
    2498:	00000062 	andeq	r0, r0, r2, rrx
    249c:	00162806 	andseq	r2, r6, r6, lsl #16
    24a0:	6d0a0300 	stcvs	3, cr0, [sl, #-0]
    24a4:	07000000 	streq	r0, [r0, -r0]
    24a8:	000006de 	ldrdeq	r0, [r0], -lr
    24ac:	28060424 	stmdacs	r6, {r2, r5, sl}
    24b0:	03000001 	movweq	r0, #1
    24b4:	00000461 	andeq	r0, r0, r1, ror #8
    24b8:	01280704 			; <UNDEFINED> instruction: 0x01280704
    24bc:	03000000 	movweq	r0, #0
    24c0:	000006ea 	andeq	r0, r0, sl, ror #13
    24c4:	012e0804 			; <UNDEFINED> instruction: 0x012e0804
    24c8:	03040000 	movweq	r0, #16384	; 0x4000
    24cc:	0000063a 	andeq	r0, r0, sl, lsr r6
    24d0:	012e0904 			; <UNDEFINED> instruction: 0x012e0904
    24d4:	03080000 	movweq	r0, #32768	; 0x8000
    24d8:	00000666 	andeq	r0, r0, r6, ror #12
    24dc:	01460c04 	cmpeq	r6, r4, lsl #24
    24e0:	030c0000 	movweq	r0, #49152	; 0xc000
    24e4:	00000342 	andeq	r0, r0, r2, asr #6
    24e8:	01460d04 	cmpeq	r6, r4, lsl #26
    24ec:	03100000 	tsteq	r0, #0
    24f0:	00000473 	andeq	r0, r0, r3, ror r4
    24f4:	012e1004 			; <UNDEFINED> instruction: 0x012e1004
    24f8:	03140000 	tsteq	r4, #0
    24fc:	00000070 	andeq	r0, r0, r0, ror r0
    2500:	012e1104 			; <UNDEFINED> instruction: 0x012e1104
    2504:	03180000 	tsteq	r8, #0
    2508:	000003d9 	ldrdeq	r0, [r0], -r9
    250c:	012e1204 			; <UNDEFINED> instruction: 0x012e1204
    2510:	031c0000 	tsteq	ip, #0
    2514:	000003e9 	andeq	r0, r0, r9, ror #7
    2518:	012e1304 			; <UNDEFINED> instruction: 0x012e1304
    251c:	00200000 	eoreq	r0, r0, r0
    2520:	00a40405 	adceq	r0, r4, r5, lsl #8
    2524:	04080000 	streq	r0, [r8], #-0
    2528:	746e6905 	strbtvc	r6, [lr], #-2309	; 0xfffff6fb
    252c:	01400900 	cmpeq	r0, r0, lsl #18
    2530:	400a0000 	andmi	r0, sl, r0
    2534:	00000001 	andeq	r0, r0, r1
    2538:	00af0405 	adceq	r0, pc, r5, lsl #8
    253c:	04050000 	streq	r0, [r5], #-0
    2540:	00000135 	andeq	r0, r0, r5, lsr r1
    2544:	0006df06 	andeq	sp, r6, r6, lsl #30
    2548:	af150400 	svcge	0x00150400
    254c:	0b000000 	bleq	2554 <startup-0x1fffdaac>
    2550:	00000162 	andeq	r0, r0, r2, ror #2
    2554:	00000162 	andeq	r0, r0, r2, ror #2
    2558:	0405000c 	streq	r0, [r5], #-12
    255c:	0000014c 	andeq	r0, r0, ip, asr #2
    2560:	0005560d 	andeq	r5, r5, sp, lsl #12
    2564:	571c0400 	ldrpl	r0, [ip, -r0, lsl #8]
    2568:	0d000001 	stceq	0, cr0, [r0, #-4]
    256c:	00000424 	andeq	r0, r0, r4, lsr #8
    2570:	012e1d04 			; <UNDEFINED> instruction: 0x012e1d04
    2574:	5b0b0000 	blpl	2c257c <startup-0x1fd3da84>
    2578:	8e000000 	cdphi	0, 0, cr0, cr0, cr0, {0}
    257c:	0e000001 	cdpeq	0, 0, cr0, cr0, cr1, {0}
    2580:	0000018e 	andeq	r0, r0, lr, lsl #3
    2584:	04040074 	streq	r0, [r4], #-116	; 0xffffff8c
    2588:	00040607 	andeq	r0, r4, r7, lsl #12
    258c:	13360f00 	teqne	r6, #0, 30
    2590:	03050000 	movweq	r0, #20480	; 0x5000
    2594:	0000017e 	andeq	r0, r0, lr, ror r1
    2598:	93dc0305 	bicsls	r0, ip, #335544320	; 0x14000000
    259c:	6f0f2000 	svcvs	0x000f2000
    25a0:	06000011 			; <UNDEFINED> instruction: 0x06000011
    25a4:	00017e03 	andeq	r7, r1, r3, lsl #28
    25a8:	54030500 	strpl	r0, [r3], #-1280	; 0xfffffb00
    25ac:	0f200094 	svceq	0x00200094
    25b0:	0000122c 	andeq	r1, r0, ip, lsr #4
    25b4:	017e0307 	cmneq	lr, r7, lsl #6
    25b8:	03050000 	movweq	r0, #20480	; 0x5000
    25bc:	200094cc 	andcs	r9, r0, ip, asr #9
    25c0:	0012f80f 	andseq	pc, r2, pc, lsl #16
    25c4:	7e030800 	cdpvc	8, 0, cr0, cr3, cr0, {0}
    25c8:	05000001 	streq	r0, [r0, #-1]
    25cc:	00954403 	addseq	r4, r5, r3, lsl #8
    25d0:	118c0f20 	orrne	r0, ip, r0, lsr #30
    25d4:	03090000 	movweq	r0, #36864	; 0x9000
    25d8:	0000017e 	andeq	r0, r0, lr, ror r1
    25dc:	95bc0305 	ldrls	r0, [ip, #773]!	; 0x305
    25e0:	ac0f2000 	stcge	0, cr2, [pc], {-0}
    25e4:	0a000011 	beq	2630 <startup-0x1fffd9d0>
    25e8:	00017e03 	andeq	r7, r1, r3, lsl #28
    25ec:	34030500 	strcc	r0, [r3], #-1280	; 0xfffffb00
    25f0:	0f200096 	svceq	0x00200096
    25f4:	0000129d 	muleq	r0, sp, r2
    25f8:	017e030b 	cmneq	lr, fp, lsl #6
    25fc:	03050000 	movweq	r0, #20480	; 0x5000
    2600:	200096ac 	andcs	r9, r0, ip, lsr #13
    2604:	0012c10f 	andseq	ip, r2, pc, lsl #2
    2608:	7e030c00 	cdpvc	12, 0, cr0, cr3, cr0, {0}
    260c:	05000001 	streq	r0, [r0, #-1]
    2610:	00972403 	addseq	r2, r7, r3, lsl #8
    2614:	11f60f20 	mvnsne	r0, r0, lsr #30
    2618:	030d0000 	movweq	r0, #53248	; 0xd000
    261c:	0000017e 	andeq	r0, r0, lr, ror r1
    2620:	979c0305 	ldrls	r0, [ip, r5, lsl #6]
    2624:	190f2000 	stmdbne	pc, {sp}	; <UNPREDICTABLE>
    2628:	0e000013 	mcreq	0, 0, r0, cr0, cr3, {0}
    262c:	00017e03 	andeq	r7, r1, r3, lsl #28
    2630:	14030500 	strne	r0, [r3], #-1280	; 0xfffffb00
    2634:	0f200098 	svceq	0x00200098
    2638:	00001354 	andeq	r1, r0, r4, asr r3
    263c:	017e030f 	cmneq	lr, pc, lsl #6
    2640:	03050000 	movweq	r0, #20480	; 0x5000
    2644:	2000988c 	andcs	r9, r0, ip, lsl #17
    2648:	0012af0f 	andseq	sl, r2, pc, lsl #30
    264c:	7e031000 	cdpvc	0, 0, cr1, cr3, cr0, {0}
    2650:	05000001 	streq	r0, [r0, #-1]
    2654:	00990403 	addseq	r0, r9, r3, lsl #8
    2658:	11801020 	orrne	r1, r0, r0, lsr #32
    265c:	11010000 	mrsne	r0, (UNDEF: 1)
    2660:	0000009e 	muleq	r0, lr, r0
    2664:	51b00305 	lslspl	r0, r5, #6
    2668:	ed102000 	ldc	0, cr2, [r0, #-0]
    266c:	01000012 	tsteq	r0, r2, lsl r0
    2670:	00009e12 	andeq	r9, r0, r2, lsl lr
    2674:	28030500 	stmdacs	r3, {r8, sl}
    2678:	10200051 	eorne	r0, r0, r1, asr r0
    267c:	00001348 	andeq	r1, r0, r8, asr #6
    2680:	009e1301 	addseq	r1, lr, r1, lsl #6
    2684:	03050000 	movweq	r0, #20480	; 0x5000
    2688:	2000512c 	andcs	r5, r0, ip, lsr #2
    268c:	0011ca10 	andseq	ip, r1, r0, lsl sl
    2690:	9e140100 	muflss	f0, f4, f0
    2694:	05000000 	streq	r0, [r0, #-0]
    2698:	0051d803 	subseq	sp, r1, r3, lsl #16
    269c:	139c1020 	orrsne	r1, ip, #32
    26a0:	15010000 	strne	r0, [r1, #-0]
    26a4:	0000009e 	muleq	r0, lr, r0
    26a8:	51240305 			; <UNDEFINED> instruction: 0x51240305
    26ac:	ef102000 	svc	0x00102000
    26b0:	01000013 	tsteq	r0, r3, lsl r0
    26b4:	00009e16 	andeq	r9, r0, r6, lsl lr
    26b8:	c0030500 	andgt	r0, r3, r0, lsl #10
    26bc:	10200051 	eorne	r0, r0, r1, asr r0
    26c0:	0000124a 	andeq	r1, r0, sl, asr #4
    26c4:	009e1701 	addseq	r1, lr, r1, lsl #14
    26c8:	03050000 	movweq	r0, #20480	; 0x5000
    26cc:	200051c4 	andcs	r5, r0, r4, asr #3
    26d0:	00126610 	andseq	r6, r2, r0, lsl r6
    26d4:	9e180100 	muflse	f0, f0, f0
    26d8:	05000000 	streq	r0, [r0, #-0]
    26dc:	0050d803 	subseq	sp, r0, r3, lsl #16
    26e0:	11be1020 			; <UNDEFINED> instruction: 0x11be1020
    26e4:	19010000 	stmdbne	r1, {}	; <UNPREDICTABLE>
    26e8:	0000009e 	muleq	r0, lr, r0
    26ec:	50bc0305 	adcspl	r0, ip, r5, lsl #6
    26f0:	e3102000 	tst	r0, #0
    26f4:	01000013 	tsteq	r0, r3, lsl r0
    26f8:	00009e1a 	andeq	r9, r0, sl, lsl lr
    26fc:	ac030500 	cfstr32ge	mvfx0, [r3], {-0}
    2700:	10200051 	eorne	r0, r0, r1, asr r0
    2704:	0000132b 	andeq	r1, r0, fp, lsr #6
    2708:	009e1b01 	addseq	r1, lr, r1, lsl #22
    270c:	03050000 	movweq	r0, #20480	; 0x5000
    2710:	20005148 	andcs	r5, r0, r8, asr #2
    2714:	00136510 	andseq	r6, r3, r0, lsl r5
    2718:	9e1c0100 	muflse	f0, f4, f0
    271c:	05000000 	streq	r0, [r0, #-0]
    2720:	0051d403 	subseq	sp, r1, r3, lsl #8
    2724:	130a1020 	movwne	r1, #40992	; 0xa020
    2728:	1e010000 	cdpne	0, 0, cr0, cr1, cr0, {0}
    272c:	00000062 	andeq	r0, r0, r2, rrx
    2730:	51c80305 	bicpl	r0, r8, r5, lsl #6
    2734:	9d102000 	ldcls	0, cr2, [r0, #-0]
    2738:	01000011 	tsteq	r0, r1, lsl r0
    273c:	0000621f 	andeq	r6, r0, pc, lsl r2
    2740:	b4030500 	strlt	r0, [r3], #-1280	; 0xfffffb00
    2744:	10200051 	eorne	r0, r0, r1, asr r0
    2748:	000013d5 	ldrdeq	r1, [r0], -r5
    274c:	00622001 	rsbeq	r2, r2, r1
    2750:	03050000 	movweq	r0, #20480	; 0x5000
    2754:	20005098 	mulcs	r0, r8, r0
    2758:	0011d610 	andseq	sp, r1, r0, lsl r6
    275c:	62210100 	eorvs	r0, r1, #0, 2
    2760:	05000000 	streq	r0, [r0, #-0]
    2764:	00511803 	subseq	r1, r1, r3, lsl #16
    2768:	11e61020 	mvnne	r1, r0, lsr #32
    276c:	22010000 	andcs	r0, r1, #0
    2770:	00000062 	andeq	r0, r0, r2, rrx
    2774:	51000305 	tstpl	r0, r5, lsl #6
    2778:	11102000 	tstne	r0, r0
    277c:	01000012 	tsteq	r0, r2, lsl r0
    2780:	00006223 	andeq	r6, r0, r3, lsr #4
    2784:	64030500 	strvs	r0, [r3], #-1280	; 0xfffffb00
    2788:	10200051 	eorne	r0, r0, r1, asr r0
    278c:	0000138c 	andeq	r1, r0, ip, lsl #7
    2790:	00622401 	rsbeq	r2, r2, r1, lsl #8
    2794:	03050000 	movweq	r0, #20480	; 0x5000
    2798:	200051a0 	andcs	r5, r0, r0, lsr #3
    279c:	00125610 	andseq	r5, r2, r0, lsl r6
    27a0:	62250100 	eorvs	r0, r5, #0, 2
    27a4:	05000000 	streq	r0, [r0, #-0]
    27a8:	0050c003 	subseq	ip, r0, r3
    27ac:	13711020 	cmnne	r1, #32
    27b0:	26010000 	strcs	r0, [r1], -r0
    27b4:	00000062 	andeq	r0, r0, r2, rrx
    27b8:	510c0305 	tstpl	ip, r5, lsl #6
    27bc:	71102000 	tstvc	r0, r0
    27c0:	01000012 	tsteq	r0, r2, lsl r0
    27c4:	00006227 	andeq	r6, r0, r7, lsr #4
    27c8:	30030500 	andcc	r0, r3, r0, lsl #10
    27cc:	10200051 	eorne	r0, r0, r1, asr r0
    27d0:	00001281 	andeq	r1, r0, r1, lsl #5
    27d4:	00622801 	rsbeq	r2, r2, r1, lsl #16
    27d8:	03050000 	movweq	r0, #20480	; 0x5000
    27dc:	200050a4 	andcs	r5, r0, r4, lsr #1
    27e0:	0012d210 	andseq	sp, r2, r0, lsl r2
    27e4:	62290100 	eorvs	r0, r9, #0, 2
    27e8:	05000000 	streq	r0, [r0, #-0]
    27ec:	00513c03 	subseq	r3, r1, r3, lsl #24
    27f0:	12081020 	andne	r1, r8, #32
    27f4:	2c010000 	stccs	0, cr0, [r1], {-0}
    27f8:	0000014c 	andeq	r0, r0, ip, asr #2
    27fc:	50dc0305 	sbcspl	r0, ip, r5, lsl #6
    2800:	3e102000 	cdpcc	0, 1, cr2, cr0, cr0, {0}
    2804:	01000012 	tsteq	r0, r2, lsl r0
    2808:	0000a42d 	andeq	sl, r0, sp, lsr #8
    280c:	58030500 	stmdapl	r3, {r8, sl}
    2810:	10200051 	eorne	r0, r0, r1, asr r0
    2814:	000012e1 	andeq	r1, r0, r1, ror #5
    2818:	00a42e01 	adceq	r2, r4, r1, lsl #28
    281c:	03050000 	movweq	r0, #20480	; 0x5000
    2820:	200050b0 	strhcs	r5, [r0], -r0
    2824:	00129110 	andseq	r9, r2, r0, lsl r1
    2828:	a42f0100 	strtge	r0, [pc], #-256	; 2830 <startup-0x1fffd7d0>
    282c:	05000000 	streq	r0, [r0, #-0]
    2830:	0050cc03 	subseq	ip, r0, r3, lsl #24
    2834:	12201020 	eorne	r1, r0, #32
    2838:	30010000 	andcc	r0, r1, r0
    283c:	000000a4 	andeq	r0, r0, r4, lsr #1
    2840:	514c0305 	cmppl	ip, r5, lsl #6
    2844:	a40b2000 	strge	r2, [fp], #-0
    2848:	5e000000 	cdppl	0, 0, cr0, cr0, cr0, {0}
    284c:	0e000004 	cdpeq	0, 0, cr0, cr0, cr4, {0}
    2850:	0000018e 	andeq	r0, r0, lr, lsl #3
    2854:	80100003 	andshi	r0, r0, r3
    2858:	01000013 	tsteq	r0, r3, lsl r0
    285c:	00044e31 	andeq	r4, r4, r1, lsr lr
    2860:	70030500 	andvc	r0, r3, r0, lsl #10
    2864:	11200051 	qsubne	r0, r1, r0
    2868:	000003ce 	andeq	r0, r0, lr, asr #7
    286c:	28745f01 	ldmdacs	r4!, {r0, r8, r9, sl, fp, ip, lr}^
    2870:	01042000 	mrseq	r2, (UNDEF: 4)
    2874:	9c010000 	stcls	0, cr0, [r1], {-0}
    2878:	000004a4 	andeq	r0, r0, r4, lsr #9
    287c:	00120812 	andseq	r0, r2, r2, lsl r8
    2880:	625f0100 	subsvs	r0, pc, #0, 2
    2884:	02000001 	andeq	r0, r0, #1
    2888:	090f6c91 	stmdbeq	pc, {r0, r4, r7, sl, fp, sp, lr}	; <UNPREDICTABLE>
    288c:	01000009 	tsteq	r0, r9
    2890:	00012e60 	andeq	r2, r1, r0, ror #28
    2894:	7c030500 	cfstr32vc	mvfx0, [r3], {-0}
    2898:	00200099 	mlaeq	r0, r9, r0, r0
    289c:	0004a913 	andeq	sl, r4, r3, lsl r9
    28a0:	cc320100 	ldfgts	f0, [r2], #-0
    28a4:	a8200026 	stmdage	r0!, {r1, r2, r5}
    28a8:	01000001 	tsteq	r0, r1
    28ac:	0d9e0f9c 	ldceq	15, cr0, [lr, #624]	; 0x270
    28b0:	34010000 	strcc	r0, [r1], #-0
    28b4:	0000009e 	muleq	r0, lr, r0
    28b8:	0f749102 	svceq	0x00749102
    28bc:	00000da8 	andeq	r0, r0, r8, lsr #27
    28c0:	009e3701 	addseq	r3, lr, r1, lsl #14
    28c4:	91020000 	mrsls	r0, (UNDEF: 2)
    28c8:	0b9e0f70 	bleq	fe786690 <firstTime.4040+0xde77724c>
    28cc:	3a010000 	bcc	428d4 <startup-0x1ffbd72c>
    28d0:	0000009e 	muleq	r0, lr, r0
    28d4:	0f6c9102 	svceq	0x006c9102
    28d8:	00000abf 			; <UNDEFINED> instruction: 0x00000abf
    28dc:	009e3e01 	addseq	r3, lr, r1, lsl #28
    28e0:	91020000 	mrsls	r0, (UNDEF: 2)
    28e4:	0dc80f68 	stcleq	15, cr0, [r8, #416]	; 0x1a0
    28e8:	41010000 	mrsmi	r0, (UNDEF: 1)
    28ec:	0000009e 	muleq	r0, lr, r0
    28f0:	0f649102 	svceq	0x00649102
    28f4:	00000b5c 	andeq	r0, r0, ip, asr fp
    28f8:	009e4401 	addseq	r4, lr, r1, lsl #8
    28fc:	91020000 	mrsls	r0, (UNDEF: 2)
    2900:	0d740f60 	ldcleq	15, cr0, [r4, #-384]!	; 0xfffffe80
    2904:	49010000 	stmdbmi	r1, {}	; <UNPREDICTABLE>
    2908:	0000009e 	muleq	r0, lr, r0
    290c:	0f5c9102 	svceq	0x005c9102
    2910:	00000dd2 	ldrdeq	r0, [r0], -r2
    2914:	009e4c01 	addseq	r4, lr, r1, lsl #24
    2918:	91020000 	mrsls	r0, (UNDEF: 2)
    291c:	0ddc0f58 	ldcleq	15, cr0, [ip, #352]	; 0x160
    2920:	4f010000 	svcmi	0x00010000
    2924:	0000009e 	muleq	r0, lr, r0
    2928:	0f549102 	svceq	0x00549102
    292c:	00000ae5 	andeq	r0, r0, r5, ror #21
    2930:	009e5301 	addseq	r5, lr, r1, lsl #6
    2934:	91020000 	mrsls	r0, (UNDEF: 2)
    2938:	0b290f50 	bleq	a46680 <startup-0x1f5b9980>
    293c:	56010000 	strpl	r0, [r1], -r0
    2940:	0000009e 	muleq	r0, lr, r0
    2944:	0f4c9102 	svceq	0x004c9102
    2948:	00000b33 	andeq	r0, r0, r3, lsr fp
    294c:	009e5901 	addseq	r5, lr, r1, lsl #18
    2950:	91020000 	mrsls	r0, (UNDEF: 2)
    2954:	a1000048 	tstge	r0, r8, asr #32
    2958:	04000007 	streq	r0, [r0], #-7
    295c:	00087b00 	andeq	r7, r8, r0, lsl #22
    2960:	9f010400 	svcls	0x00010400
    2964:	0c000000 	stceq	0, cr0, [r0], {-0}
    2968:	0000144d 	andeq	r1, r0, sp, asr #8
    296c:	20002978 	andcs	r2, r0, r8, ror r9
    2970:	0000052c 	andeq	r0, r0, ip, lsr #10
    2974:	00000d4b 	andeq	r0, r0, fp, asr #26
    2978:	05020c02 	streq	r0, [r2, #-3074]	; 0xfffff3fe
    297c:	0000004e 	andeq	r0, r0, lr, asr #32
    2980:	00035b03 	andeq	r5, r3, r3, lsl #22
    2984:	4e070200 	cdpmi	2, 0, cr0, cr7, cr0, {0}
    2988:	00000000 	andeq	r0, r0, r0
    298c:	00071903 	andeq	r1, r7, r3, lsl #18
    2990:	4e080200 	cdpmi	2, 0, cr0, cr8, cr0, {0}
    2994:	04000000 	streq	r0, [r0], #-0
    2998:	00191803 	andseq	r1, r9, r3, lsl #16
    299c:	55090200 	strpl	r0, [r9, #-512]	; 0xfffffe00
    29a0:	08000000 	stmdaeq	r0, {}	; <UNPREDICTABLE>
    29a4:	07040400 	streq	r0, [r4, -r0, lsl #8]
    29a8:	00000389 	andeq	r0, r0, r9, lsl #7
    29ac:	005b0405 	subseq	r0, fp, r5, lsl #8
    29b0:	01040000 	mrseq	r0, (UNDEF: 4)
    29b4:	0004d308 	andeq	sp, r4, r8, lsl #6
    29b8:	1a6a0600 	bne	1a841c0 <startup-0x1e57be40>
    29bc:	0a020000 	beq	829c4 <startup-0x1ff7d63c>
    29c0:	00000021 	andeq	r0, r0, r1, lsr #32
    29c4:	00003407 	andeq	r3, r0, r7, lsl #8
    29c8:	06030c00 	streq	r0, [r3], -r0, lsl #24
    29cc:	0000009e 	muleq	r0, lr, r0
    29d0:	0005c903 	andeq	ip, r5, r3, lsl #18
    29d4:	9e070300 	cdpls	3, 0, cr0, cr7, cr0, {0}
    29d8:	00000000 	andeq	r0, r0, r0
    29dc:	00003b03 	andeq	r3, r0, r3, lsl #22
    29e0:	9e080300 	cdpls	3, 0, cr0, cr8, cr0, {0}
    29e4:	04000000 	streq	r0, [r0], #-0
    29e8:	00003003 	andeq	r3, r0, r3
    29ec:	9e090300 	cdpls	3, 0, cr0, cr9, cr0, {0}
    29f0:	08000000 	stmdaeq	r0, {}	; <UNPREDICTABLE>
    29f4:	62040500 	andvs	r0, r4, #0, 10
    29f8:	06000000 	streq	r0, [r0], -r0
    29fc:	00001628 	andeq	r1, r0, r8, lsr #12
    2a00:	006d0a03 	rsbeq	r0, sp, r3, lsl #20
    2a04:	de070000 	cdple	0, 0, cr0, cr7, cr0, {0}
    2a08:	24000006 	strcs	r0, [r0], #-6
    2a0c:	01280604 			; <UNDEFINED> instruction: 0x01280604
    2a10:	61030000 	mrsvs	r0, (UNDEF: 3)
    2a14:	04000004 	streq	r0, [r0], #-4
    2a18:	00012807 	andeq	r2, r1, r7, lsl #16
    2a1c:	ea030000 	b	c2a24 <startup-0x1ff3d5dc>
    2a20:	04000006 	streq	r0, [r0], #-6
    2a24:	00012e08 	andeq	r2, r1, r8, lsl #28
    2a28:	3a030400 	bcc	c3a30 <startup-0x1ff3c5d0>
    2a2c:	04000006 	streq	r0, [r0], #-6
    2a30:	00012e09 	andeq	r2, r1, r9, lsl #28
    2a34:	66030800 	strvs	r0, [r3], -r0, lsl #16
    2a38:	04000006 	streq	r0, [r0], #-6
    2a3c:	0001460c 	andeq	r4, r1, ip, lsl #12
    2a40:	42030c00 	andmi	r0, r3, #0, 24
    2a44:	04000003 	streq	r0, [r0], #-3
    2a48:	0001460d 	andeq	r4, r1, sp, lsl #12
    2a4c:	73031000 	movwvc	r1, #12288	; 0x3000
    2a50:	04000004 	streq	r0, [r0], #-4
    2a54:	00012e10 	andeq	r2, r1, r0, lsl lr
    2a58:	70031400 	andvc	r1, r3, r0, lsl #8
    2a5c:	04000000 	streq	r0, [r0], #-0
    2a60:	00012e11 	andeq	r2, r1, r1, lsl lr
    2a64:	d9031800 	stmdble	r3, {fp, ip}
    2a68:	04000003 	streq	r0, [r0], #-3
    2a6c:	00012e12 	andeq	r2, r1, r2, lsl lr
    2a70:	e9031c00 	stmdb	r3, {sl, fp, ip}
    2a74:	04000003 	streq	r0, [r0], #-3
    2a78:	00012e13 	andeq	r2, r1, r3, lsl lr
    2a7c:	05002000 	streq	r2, [r0, #-0]
    2a80:	0000a404 	andeq	sl, r0, r4, lsl #8
    2a84:	05040800 	streq	r0, [r4, #-2048]	; 0xfffff800
    2a88:	00746e69 	rsbseq	r6, r4, r9, ror #28
    2a8c:	00014009 	andeq	r4, r1, r9
    2a90:	01400a00 	cmpeq	r0, r0, lsl #20
    2a94:	05000000 	streq	r0, [r0, #-0]
    2a98:	0000af04 	andeq	sl, r0, r4, lsl #30
    2a9c:	35040500 	strcc	r0, [r4, #-1280]	; 0xfffffb00
    2aa0:	06000001 	streq	r0, [r0], -r1
    2aa4:	000006df 	ldrdeq	r0, [r0], -pc	; <UNPREDICTABLE>
    2aa8:	00af1504 	adceq	r1, pc, r4, lsl #10
    2aac:	620b0000 	andvs	r0, fp, #0
    2ab0:	62000001 	andvs	r0, r0, #1
    2ab4:	0c000001 	stceq	0, cr0, [r0], {1}
    2ab8:	4c040500 	cfstr32mi	mvfx0, [r4], {-0}
    2abc:	0d000001 	stceq	0, cr0, [r0, #-4]
    2ac0:	00000556 	andeq	r0, r0, r6, asr r5
    2ac4:	01571c04 	cmpeq	r7, r4, lsl #24
    2ac8:	240d0000 	strcs	r0, [sp], #-0
    2acc:	04000004 	streq	r0, [r0], #-4
    2ad0:	00012e1d 	andeq	r2, r1, sp, lsl lr
    2ad4:	005b0b00 	subseq	r0, fp, r0, lsl #22
    2ad8:	018f0000 	orreq	r0, pc, r0
    2adc:	8f0e0000 	svchi	0x000e0000
    2ae0:	01000001 	tsteq	r0, r1
    2ae4:	04040003 	streq	r0, [r4], #-3
    2ae8:	00040607 	andeq	r0, r4, r7, lsl #12
    2aec:	151f0f00 	ldrne	r0, [pc, #-3840]	; 1bf4 <startup-0x1fffe40c>
    2af0:	03050000 	movweq	r0, #20480	; 0x5000
    2af4:	0000017e 	andeq	r0, r0, lr, ror r1
    2af8:	99800305 	stmibls	r0, {r0, r2, r8, r9}
    2afc:	350f2000 	strcc	r2, [pc, #-0]	; 2b04 <startup-0x1fffd4fc>
    2b00:	06000014 			; <UNDEFINED> instruction: 0x06000014
    2b04:	00017e03 	andeq	r7, r1, r3, lsl #28
    2b08:	84030500 	strhi	r0, [r3], #-1280	; 0xfffffb00
    2b0c:	0f20009c 	svceq	0x0020009c
    2b10:	00001752 	andeq	r1, r0, r2, asr r7
    2b14:	017e0307 	cmneq	lr, r7, lsl #6
    2b18:	03050000 	movweq	r0, #20480	; 0x5000
    2b1c:	20009f88 	andcs	r9, r0, r8, lsl #31
    2b20:	0015580f 	andseq	r5, r5, pc, lsl #16
    2b24:	7e030800 	cdpvc	8, 0, cr0, cr3, cr0, {0}
    2b28:	05000001 	streq	r0, [r0, #-1]
    2b2c:	00a28c03 	adceq	r8, r2, r3, lsl #24
    2b30:	17a10f20 	strne	r0, [r1, r0, lsr #30]!
    2b34:	03090000 	movweq	r0, #36864	; 0x9000
    2b38:	0000017e 	andeq	r0, r0, lr, ror r1
    2b3c:	a5900305 	ldrge	r0, [r0, #773]	; 0x305
    2b40:	740f2000 	strvc	r2, [pc], #-0	; 2b48 <startup-0x1fffd4b8>
    2b44:	0a000017 	beq	2ba8 <startup-0x1fffd458>
    2b48:	00017e03 	andeq	r7, r1, r3, lsl #28
    2b4c:	94030500 	strls	r0, [r3], #-1280	; 0xfffffb00
    2b50:	0f2000a8 	svceq	0x002000a8
    2b54:	00001710 	andeq	r1, r0, r0, lsl r7
    2b58:	017e030b 	cmneq	lr, fp, lsl #6
    2b5c:	03050000 	movweq	r0, #20480	; 0x5000
    2b60:	2000ab98 	mulcs	r0, r8, fp
    2b64:	0015b50f 	andseq	fp, r5, pc, lsl #10
    2b68:	7e030c00 	cdpvc	12, 0, cr0, cr3, cr0, {0}
    2b6c:	05000001 	streq	r0, [r0, #-1]
    2b70:	00ae9c03 	adceq	r9, lr, r3, lsl #24
    2b74:	15c50f20 	strbne	r0, [r5, #3872]	; 0xf20
    2b78:	030d0000 	movweq	r0, #53248	; 0xd000
    2b7c:	0000017e 	andeq	r0, r0, lr, ror r1
    2b80:	b1a00305 	lsllt	r0, r5, #6
    2b84:	a70f2000 	strge	r2, [pc, -r0]
    2b88:	0e000014 	mcreq	0, 0, r0, cr0, cr4, {0}
    2b8c:	00017e03 	andeq	r7, r1, r3, lsl #28
    2b90:	a4030500 	strge	r0, [r3], #-1280	; 0xfffffb00
    2b94:	0f2000b4 	svceq	0x002000b4
    2b98:	00001548 	andeq	r1, r0, r8, asr #10
    2b9c:	017e030f 	cmneq	lr, pc, lsl #6
    2ba0:	03050000 	movweq	r0, #20480	; 0x5000
    2ba4:	2000b7a8 	andcs	fp, r0, r8, lsr #15
    2ba8:	0017410f 	andseq	r4, r7, pc, lsl #2
    2bac:	7e031000 	cdpvc	0, 0, cr1, cr3, cr0, {0}
    2bb0:	05000001 	streq	r0, [r0, #-1]
    2bb4:	00baac03 	adcseq	sl, sl, r3, lsl #24
    2bb8:	17630f20 	strbne	r0, [r3, -r0, lsr #30]!
    2bbc:	03110000 	tsteq	r1, #0
    2bc0:	0000017e 	andeq	r0, r0, lr, ror r1
    2bc4:	bdb00305 	ldclt	3, cr0, [r0, #20]!
    2bc8:	b80f2000 	stmdalt	pc, {sp}	; <UNPREDICTABLE>
    2bcc:	12000014 	andne	r0, r0, #20
    2bd0:	00017e03 	andeq	r7, r1, r3, lsl #28
    2bd4:	b4030500 	strlt	r0, [r3], #-1280	; 0xfffffb00
    2bd8:	0f2000c0 	svceq	0x002000c0
    2bdc:	00001605 	andeq	r1, r0, r5, lsl #12
    2be0:	017e0313 	cmneq	lr, r3, lsl r3
    2be4:	03050000 	movweq	r0, #20480	; 0x5000
    2be8:	2000c3b8 			; <UNDEFINED> instruction: 0x2000c3b8
    2bec:	0017850f 	andseq	r8, r7, pc, lsl #10
    2bf0:	7e031400 	cfcpysvc	mvf1, mvf3
    2bf4:	05000001 	streq	r0, [r0, #-1]
    2bf8:	00c6bc03 	sbceq	fp, r6, r3, lsl #24
    2bfc:	15eb0f20 	strbne	r0, [fp, #3872]!	; 0xf20
    2c00:	03150000 	tsteq	r5, #0
    2c04:	0000017e 	andeq	r0, r0, lr, ror r1
    2c08:	c9c00305 	stmibgt	r0, {r0, r2, r8, r9}^
    2c0c:	2e0f2000 	cdpcs	0, 0, cr2, cr15, cr0, {0}
    2c10:	16000016 			; <UNDEFINED> instruction: 0x16000016
    2c14:	00017e03 	andeq	r7, r1, r3, lsl #28
    2c18:	c4030500 	strgt	r0, [r3], #-1280	; 0xfffffb00
    2c1c:	102000cc 	eorne	r0, r0, ip, asr #1
    2c20:	00001721 	andeq	r1, r0, r1, lsr #14
    2c24:	009e1801 	addseq	r1, lr, r1, lsl #16
    2c28:	03050000 	movweq	r0, #20480	; 0x5000
    2c2c:	200053c4 	andcs	r5, r0, r4, asr #7
    2c30:	00148810 	andseq	r8, r4, r0, lsl r8
    2c34:	9e190100 	muflse	f0, f1, f0
    2c38:	05000000 	streq	r0, [r0, #-0]
    2c3c:	00540003 	subseq	r0, r4, r3
    2c40:	15141020 	ldrne	r1, [r4, #-32]	; 0xffffffe0
    2c44:	1a010000 	bne	42c4c <startup-0x1ffbd3b4>
    2c48:	0000009e 	muleq	r0, lr, r0
    2c4c:	54640305 	strbtpl	r0, [r4], #-773	; 0xfffffcfb
    2c50:	91102000 	tstls	r0, r0
    2c54:	01000015 	tsteq	r0, r5, lsl r0
    2c58:	00009e1b 	andeq	r9, r0, fp, lsl lr
    2c5c:	74030500 	strvc	r0, [r3], #-1280	; 0xfffffb00
    2c60:	10200054 	eorne	r0, r0, r4, asr r0
    2c64:	0000166d 	andeq	r1, r0, sp, ror #12
    2c68:	009e1c01 	addseq	r1, lr, r1, lsl #24
    2c6c:	03050000 	movweq	r0, #20480	; 0x5000
    2c70:	200053c0 	andcs	r5, r0, r0, asr #7
    2c74:	0016d310 	andseq	sp, r6, r0, lsl r3
    2c78:	9e1d0100 	muflse	f0, f5, f0
    2c7c:	05000000 	streq	r0, [r0, #-0]
    2c80:	00547803 	subseq	r7, r4, r3, lsl #16
    2c84:	14d71020 	ldrbne	r1, [r7], #32
    2c88:	1e010000 	cdpne	0, 0, cr0, cr1, cr0, {0}
    2c8c:	0000009e 	muleq	r0, lr, r0
    2c90:	52280305 	eorpl	r0, r8, #335544320	; 0x14000000
    2c94:	f7102000 			; <UNDEFINED> instruction: 0xf7102000
    2c98:	01000016 	tsteq	r0, r6, lsl r0
    2c9c:	00009e1f 	andeq	r9, r0, pc, lsl lr
    2ca0:	7c030500 	cfstr32vc	mvfx0, [r3], {-0}
    2ca4:	10200052 	eorne	r0, r0, r2, asr r0
    2ca8:	000015e0 	andeq	r1, r0, r0, ror #11
    2cac:	009e2001 	addseq	r2, lr, r1
    2cb0:	03050000 	movweq	r0, #20480	; 0x5000
    2cb4:	20005224 	andcs	r5, r0, r4, lsr #4
    2cb8:	00179610 	andseq	r9, r7, r0, lsl r6
    2cbc:	9e210100 	suflss	f0, f1, f0
    2cc0:	05000000 	streq	r0, [r0, #-0]
    2cc4:	0053a403 	subseq	sl, r3, r3, lsl #8
    2cc8:	16de1020 	ldrbne	r1, [lr], r0, lsr #32
    2ccc:	22010000 	andcs	r0, r1, #0
    2cd0:	0000009e 	muleq	r0, lr, r0
    2cd4:	53f80305 	mvnspl	r0, #335544320	; 0x14000000
    2cd8:	f1102000 			; <UNDEFINED> instruction: 0xf1102000
    2cdc:	01000014 	tsteq	r0, r4, lsl r0
    2ce0:	00009e23 	andeq	r9, r0, r3, lsr #28
    2ce4:	48030500 	stmdami	r3, {r8, sl}
    2ce8:	10200052 	eorne	r0, r0, r2, asr r0
    2cec:	00001577 	andeq	r1, r0, r7, ror r5
    2cf0:	009e2401 	addseq	r2, lr, r1, lsl #8
    2cf4:	03050000 	movweq	r0, #20480	; 0x5000
    2cf8:	20005244 	andcs	r5, r0, r4, asr #4
    2cfc:	0015fb10 	andseq	pc, r5, r0, lsl fp	; <UNPREDICTABLE>
    2d00:	9e250100 	suflss	f0, f5, f0
    2d04:	05000000 	streq	r0, [r0, #-0]
    2d08:	00528c03 	subseq	r8, r2, r3, lsl #24
    2d0c:	16ae1020 	strtne	r1, [lr], r0, lsr #32
    2d10:	26010000 	strcs	r0, [r1], -r0
    2d14:	0000009e 	muleq	r0, lr, r0
    2d18:	53fc0305 	mvnspl	r0, #335544320	; 0x14000000
    2d1c:	36102000 	ldrcc	r2, [r0], -r0
    2d20:	01000017 	tsteq	r0, r7, lsl r0
    2d24:	00009e27 	andeq	r9, r0, r7, lsr #28
    2d28:	94030500 	strls	r0, [r3], #-1280	; 0xfffffb00
    2d2c:	10200053 	eorne	r0, r0, r3, asr r0
    2d30:	0000172c 	andeq	r1, r0, ip, lsr #14
    2d34:	009e2801 	addseq	r2, lr, r1, lsl #16
    2d38:	03050000 	movweq	r0, #20480	; 0x5000
    2d3c:	200052cc 	andcs	r5, r0, ip, asr #5
    2d40:	00159c10 	andseq	r9, r5, r0, lsl ip
    2d44:	9e290100 	suflse	f0, f1, f0
    2d48:	05000000 	streq	r0, [r0, #-0]
    2d4c:	0052dc03 	subseq	sp, r2, r3, lsl #24
    2d50:	15691020 	strbne	r1, [r9, #-32]!	; 0xffffffe0
    2d54:	2b010000 	blcs	42d5c <startup-0x1ffbd2a4>
    2d58:	00000062 	andeq	r0, r0, r2, rrx
    2d5c:	547c0305 	ldrbtpl	r0, [ip], #-773	; 0xfffffcfb
    2d60:	a0102000 	andsge	r2, r0, r0
    2d64:	01000016 	tsteq	r0, r6, lsl r0
    2d68:	0000622c 	andeq	r6, r0, ip, lsr #4
    2d6c:	f4030500 	vst3.8	{d0,d2,d4}, [r3], r0
    2d70:	10200051 	eorne	r0, r0, r1, asr r0
    2d74:	0000153b 	andeq	r1, r0, fp, lsr r5
    2d78:	00622d01 	rsbeq	r2, r2, r1, lsl #26
    2d7c:	03050000 	movweq	r0, #20480	; 0x5000
    2d80:	200053b4 			; <UNDEFINED> instruction: 0x200053b4
    2d84:	00158210 	andseq	r8, r5, r0, lsl r2
    2d88:	622e0100 	eorvs	r0, lr, #0, 2
    2d8c:	05000000 	streq	r0, [r0, #-0]
    2d90:	0051e803 	subseq	lr, r1, r3, lsl #16
    2d94:	16b91020 	ldrtne	r1, [r9], r0, lsr #32
    2d98:	2f010000 	svccs	0x00010000
    2d9c:	00000062 	andeq	r0, r0, r2, rrx
    2da0:	544c0305 	strbpl	r0, [ip], #-773	; 0xfffffcfb
    2da4:	55102000 	ldrpl	r2, [r0, #-0]
    2da8:	01000016 	tsteq	r0, r6, lsl r0
    2dac:	00006230 	andeq	r6, r0, r0, lsr r2
    2db0:	d4030500 	strle	r0, [r3], #-1280	; 0xfffffb00
    2db4:	10200053 	eorne	r0, r0, r3, asr r0
    2db8:	00001701 	andeq	r1, r0, r1, lsl #14
    2dbc:	00623101 	rsbeq	r3, r2, r1, lsl #2
    2dc0:	03050000 	movweq	r0, #20480	; 0x5000
    2dc4:	20005398 	mulcs	r0, r8, r3
    2dc8:	0014e210 	andseq	lr, r4, r0, lsl r2
    2dcc:	62320100 	eorsvs	r0, r2, #0, 2
    2dd0:	05000000 	streq	r0, [r0, #-0]
    2dd4:	0052c003 	subseq	ip, r2, r3
    2dd8:	17cc1020 	strbne	r1, [ip, r0, lsr #32]
    2ddc:	33010000 	movwcc	r0, #4096	; 0x1000
    2de0:	00000062 	andeq	r0, r0, r2, rrx
    2de4:	53ec0305 	mvnpl	r0, #335544320	; 0x14000000
    2de8:	da102000 	ble	40adf0 <startup-0x1fbf5210>
    2dec:	01000017 	tsteq	r0, r7, lsl r0
    2df0:	00006234 	andeq	r6, r0, r4, lsr r2
    2df4:	40030500 	andmi	r0, r3, r0, lsl #10
    2df8:	10200054 	eorne	r0, r0, r4, asr r0
    2dfc:	00001682 	andeq	r1, r0, r2, lsl #13
    2e00:	00623501 	rsbeq	r3, r2, r1, lsl #10
    2e04:	03050000 	movweq	r0, #20480	; 0x5000
    2e08:	20005280 	andcs	r5, r0, r0, lsl #5
    2e0c:	0015a710 	andseq	sl, r5, r0, lsl r7
    2e10:	62360100 	eorsvs	r0, r6, #0, 2
    2e14:	05000000 	streq	r0, [r0, #-0]
    2e18:	0053e003 	subseq	lr, r3, r3
    2e1c:	16911020 	ldrne	r1, [r1], r0, lsr #32
    2e20:	37010000 	strcc	r0, [r1, -r0]
    2e24:	00000062 	andeq	r0, r0, r2, rrx
    2e28:	54580305 	ldrbpl	r0, [r8], #-773	; 0xfffffcfb
    2e2c:	b1102000 	tstlt	r0, r0
    2e30:	01000017 	tsteq	r0, r7, lsl r0
    2e34:	00006238 	andeq	r6, r0, r8, lsr r2
    2e38:	34030500 	strcc	r0, [r3], #-1280	; 0xfffffb00
    2e3c:	10200054 	eorne	r0, r0, r4, asr r0
    2e40:	0000147a 	andeq	r1, r0, sl, ror r4
    2e44:	00623901 	rsbeq	r3, r2, r1, lsl #18
    2e48:	03050000 	movweq	r0, #20480	; 0x5000
    2e4c:	200051dc 	ldrdcs	r5, [r0], -ip
    2e50:	0016e810 	andseq	lr, r6, r0, lsl r8
    2e54:	623a0100 	eorsvs	r0, sl, #0, 2
    2e58:	05000000 	streq	r0, [r0, #-0]
    2e5c:	0053a803 	subseq	sl, r3, r3, lsl #16
    2e60:	14c81020 	strbne	r1, [r8], #32
    2e64:	3b010000 	blcc	42e6c <startup-0x1ffbd194>
    2e68:	00000062 	andeq	r0, r0, r2, rrx
    2e6c:	52000305 	andpl	r0, r0, #335544320	; 0x14000000
    2e70:	27102000 	ldrcs	r2, [r0, -r0]
    2e74:	01000014 	tsteq	r0, r4, lsl r0
    2e78:	0000623c 	andeq	r6, r0, ip, lsr r2
    2e7c:	c8030500 	stmdagt	r3, {r8, sl}
    2e80:	10200053 	eorne	r0, r0, r3, asr r0
    2e84:	00001445 	andeq	r1, r0, r5, asr #8
    2e88:	014c3f01 	cmpeq	ip, r1, lsl #30
    2e8c:	03050000 	movweq	r0, #20480	; 0x5000
    2e90:	20005290 	mulcs	r0, r0, r2
    2e94:	00140610 	andseq	r0, r4, r0, lsl r6
    2e98:	a4400100 	strbge	r0, [r0], #-256	; 0xffffff00
    2e9c:	05000000 	streq	r0, [r0, #-0]
    2ea0:	00541003 	subseq	r1, r4, r3
    2ea4:	16c81020 	strbne	r1, [r8], r0, lsr #32
    2ea8:	41010000 	mrsmi	r0, (UNDEF: 1)
    2eac:	000000a4 	andeq	r0, r0, r4, lsr #1
    2eb0:	52380305 	eorspl	r0, r8, #335544320	; 0x14000000
    2eb4:	30102000 	andscc	r2, r0, r0
    2eb8:	01000015 	tsteq	r0, r5, lsl r0
    2ebc:	0000a442 	andeq	sl, r0, r2, asr #8
    2ec0:	28030500 	stmdacs	r3, {r8, sl}
    2ec4:	10200054 	eorne	r0, r0, r4, asr r0
    2ec8:	0000164a 	andeq	r1, r0, sl, asr #12
    2ecc:	00a44301 	adceq	r4, r4, r1, lsl #6
    2ed0:	03050000 	movweq	r0, #20480	; 0x5000
    2ed4:	2000522c 	andcs	r5, r0, ip, lsr #4
    2ed8:	00141c10 	andseq	r1, r4, r0, lsl ip
    2edc:	a4440100 	strbge	r0, [r4], #-256	; 0xffffff00
    2ee0:	05000000 	streq	r0, [r0, #-0]
    2ee4:	00527003 	subseq	r7, r2, r3
    2ee8:	149c1020 	ldrne	r1, [ip], #32
    2eec:	45010000 	strmi	r0, [r1, #-0]
    2ef0:	000000a4 	andeq	r0, r0, r4, lsr #1
    2ef4:	52b40305 	adcspl	r0, r4, #335544320	; 0x14000000
    2ef8:	3f102000 	svccc	0x00102000
    2efc:	01000016 	tsteq	r0, r6, lsl r0
    2f00:	0000a446 	andeq	sl, r0, r6, asr #8
    2f04:	1c030500 	cfstr32ne	mvfx0, [r3], {-0}
    2f08:	10200054 	eorne	r0, r0, r4, asr r0
    2f0c:	000013fb 	strdeq	r1, [r0], -fp
    2f10:	00a44701 	adceq	r4, r4, r1, lsl #14
    2f14:	03050000 	movweq	r0, #20480	; 0x5000
    2f18:	20005264 	andcs	r5, r0, r4, ror #4
    2f1c:	00141110 	andseq	r1, r4, r0, lsl r1
    2f20:	a4480100 	strbge	r0, [r8], #-256	; 0xffffff00
    2f24:	05000000 	streq	r0, [r0, #-0]
    2f28:	00520c03 	subseq	r0, r2, r3, lsl #24
    2f2c:	16221020 	strtne	r1, [r2], -r0, lsr #32
    2f30:	49010000 	stmdbmi	r1, {}	; <UNPREDICTABLE>
    2f34:	000000a4 	andeq	r0, r0, r4, lsr #1
    2f38:	524c0305 	subpl	r0, ip, #335544320	; 0x14000000
    2f3c:	e9102000 	ldmdb	r0, {sp}
    2f40:	01000017 	tsteq	r0, r7, lsl r0
    2f44:	0000a44a 	andeq	sl, r0, sl, asr #8
    2f48:	04030500 	streq	r0, [r3], #-1280	; 0xfffffb00
    2f4c:	10200054 	eorne	r0, r0, r4, asr r0
    2f50:	000014fc 	strdeq	r1, [r0], -ip
    2f54:	00a44b01 	adceq	r4, r4, r1, lsl #22
    2f58:	03050000 	movweq	r0, #20480	; 0x5000
    2f5c:	20005218 	andcs	r5, r0, r8, lsl r2
    2f60:	00161610 	andseq	r1, r6, r0, lsl r6
    2f64:	a44c0100 	strbge	r0, [ip], #-256	; 0xffffff00
    2f68:	05000000 	streq	r0, [r0, #-0]
    2f6c:	0052d003 	subseq	sp, r2, r3
    2f70:	17c01020 	strbne	r1, [r0, r0, lsr #32]
    2f74:	4d010000 	stcmi	0, cr0, [r1, #-0]
    2f78:	000000a4 	andeq	r0, r0, r4, lsr #1
    2f7c:	52580305 	subspl	r0, r8, #335544320	; 0x14000000
    2f80:	08102000 	ldmdaeq	r0, {sp}
    2f84:	01000015 	tsteq	r0, r5, lsl r0
    2f88:	0000a44e 	andeq	sl, r0, lr, asr #8
    2f8c:	68030500 	stmdavs	r3, {r8, sl}
    2f90:	0b200054 	bleq	8030e8 <startup-0x1f7fcf18>
    2f94:	000000a4 	andeq	r0, r0, r4, lsr #1
    2f98:	0000064c 	andeq	r0, r0, ip, asr #12
    2f9c:	00018f11 	andeq	r8, r1, r1, lsl pc
    2fa0:	10000e00 	andne	r0, r0, r0, lsl #28
    2fa4:	00001677 	andeq	r1, r0, r7, ror r6
    2fa8:	063c4f01 	ldrteq	r4, [ip], -r1, lsl #30
    2fac:	03050000 	movweq	r0, #20480	; 0x5000
    2fb0:	200052e0 	andcs	r5, r0, r0, ror #5
    2fb4:	00036112 	andeq	r6, r3, r2, lsl r1
    2fb8:	ec900100 	ldfs	f0, [r0], {0}
    2fbc:	b820002b 	stmdalt	r0!, {r0, r1, r3, r5}
    2fc0:	01000002 	tsteq	r0, r2
    2fc4:	0006929c 	muleq	r6, ip, r2
    2fc8:	14451300 	strbne	r1, [r5], #-768	; 0xfffffd00
    2fcc:	90010000 	andls	r0, r1, r0
    2fd0:	00000162 	andeq	r0, r0, r2, ror #2
    2fd4:	0f6c9102 	svceq	0x006c9102
    2fd8:	00000909 	andeq	r0, r0, r9, lsl #18
    2fdc:	012e9101 			; <UNDEFINED> instruction: 0x012e9101
    2fe0:	03050000 	movweq	r0, #20480	; 0x5000
    2fe4:	2000cfc8 	andcs	ip, r0, r8, asr #31
    2fe8:	04a91400 	strteq	r1, [r9], #1024	; 0x400
    2fec:	50010000 	andpl	r0, r1, r0
    2ff0:	20002978 	andcs	r2, r0, r8, ror r9
    2ff4:	00000274 	andeq	r0, r0, r4, ror r2
    2ff8:	9e0f9c01 	cdpls	12, 0, cr9, cr15, cr1, {0}
    2ffc:	0100000d 	tsteq	r0, sp
    3000:	00009e52 	andeq	r9, r0, r2, asr lr
    3004:	74910200 	ldrvc	r0, [r1], #512	; 0x200
    3008:	000da80f 	andeq	sl, sp, pc, lsl #16
    300c:	9e550100 	rdflss	f0, f5, f0
    3010:	02000000 	andeq	r0, r0, #0
    3014:	9e0f7091 	mcrls	0, 0, r7, cr15, cr1, {4}
    3018:	0100000b 	tsteq	r0, fp
    301c:	00009e58 	andeq	r9, r0, r8, asr lr
    3020:	6c910200 	lfmvs	f0, 4, [r1], {0}
    3024:	000abf0f 	andeq	fp, sl, pc, lsl #30
    3028:	9e5c0100 	rdflse	f0, f4, f0
    302c:	02000000 	andeq	r0, r0, #0
    3030:	c80f6891 	stmdagt	pc, {r0, r4, r7, fp, sp, lr}	; <UNPREDICTABLE>
    3034:	0100000d 	tsteq	r0, sp
    3038:	00009e5f 	andeq	r9, r0, pc, asr lr
    303c:	64910200 	ldrvs	r0, [r1], #512	; 0x200
    3040:	000b5c0f 	andeq	r5, fp, pc, lsl #24
    3044:	9e620100 	powlss	f0, f2, f0
    3048:	02000000 	andeq	r0, r0, #0
    304c:	740f6091 	strvc	r6, [pc], #-145	; 3054 <startup-0x1fffcfac>
    3050:	0100000d 	tsteq	r0, sp
    3054:	00009e67 	andeq	r9, r0, r7, ror #28
    3058:	5c910200 	lfmpl	f0, 4, [r1], {0}
    305c:	000dd20f 	andeq	sp, sp, pc, lsl #4
    3060:	9e6a0100 	powlse	f0, f2, f0
    3064:	02000000 	andeq	r0, r0, #0
    3068:	dc0f5891 	stcle	8, cr5, [pc], {145}	; 0x91
    306c:	0100000d 	tsteq	r0, sp
    3070:	00009e6d 	andeq	r9, r0, sp, ror #28
    3074:	54910200 	ldrpl	r0, [r1], #512	; 0x200
    3078:	000ae50f 	andeq	lr, sl, pc, lsl #10
    307c:	9e710100 	rpwlss	f0, f1, f0
    3080:	02000000 	andeq	r0, r0, #0
    3084:	290f5091 	stmdbcs	pc, {r0, r4, r7, ip, lr}	; <UNPREDICTABLE>
    3088:	0100000b 	tsteq	r0, fp
    308c:	00009e74 	andeq	r9, r0, r4, ror lr
    3090:	4c910200 	lfmmi	f0, 4, [r1], {0}
    3094:	000b330f 	andeq	r3, fp, pc, lsl #6
    3098:	9e770100 	rpwlss	f0, f7, f0
    309c:	02000000 	andeq	r0, r0, #0
    30a0:	f10f4891 			; <UNDEFINED> instruction: 0xf10f4891
    30a4:	0100000d 	tsteq	r0, sp
    30a8:	00009e7b 	andeq	r9, r0, fp, ror lr
    30ac:	44910200 	ldrmi	r0, [r1], #512	; 0x200
    30b0:	000c790f 	andeq	r7, ip, pc, lsl #18
    30b4:	9e7e0100 	rpwlse	f0, f6, f0
    30b8:	02000000 	andeq	r0, r0, #0
    30bc:	520f4091 	andpl	r4, pc, #145	; 0x91
    30c0:	0100000b 	tsteq	r0, fp
    30c4:	00009e81 	andeq	r9, r0, r1, lsl #29
    30c8:	bc910300 	ldclt	3, cr0, [r1], {0}
    30cc:	15d60f7f 	ldrbne	r0, [r6, #3967]	; 0xf7f
    30d0:	85010000 	strhi	r0, [r1, #-0]
    30d4:	0000009e 	muleq	r0, lr, r0
    30d8:	7fb89103 	svcvc	0x00b89103
    30dc:	0016630f 	andseq	r6, r6, pc, lsl #6
    30e0:	9e880100 	rmflse	f0, f0, f0
    30e4:	03000000 	movweq	r0, #0
    30e8:	0f7fb491 	svceq	0x007fb491
    30ec:	00001492 	muleq	r0, r2, r4
    30f0:	009e8b01 	addseq	r8, lr, r1, lsl #22
    30f4:	91030000 	mrsls	r0, (UNDEF: 3)
    30f8:	00007fb0 			; <UNDEFINED> instruction: 0x00007fb0
    30fc:	0000089f 	muleq	r0, pc, r8	; <UNPREDICTABLE>
    3100:	09840004 	stmibeq	r4, {r2}
    3104:	01040000 	mrseq	r0, (UNDEF: 4)
    3108:	0000009f 	muleq	r0, pc, r0	; <UNPREDICTABLE>
    310c:	0018da0c 	andseq	sp, r8, ip, lsl #20
    3110:	002ea400 	eoreq	sl, lr, r0, lsl #8
    3114:	000e4420 	andeq	r4, lr, r0, lsr #8
    3118:	000f8000 	andeq	r8, pc, r0
    311c:	020c0200 	andeq	r0, ip, #0, 4
    3120:	00004e05 	andeq	r4, r0, r5, lsl #28
    3124:	035b0300 	cmpeq	fp, #0, 6
    3128:	07020000 	streq	r0, [r2, -r0]
    312c:	0000004e 	andeq	r0, r0, lr, asr #32
    3130:	07190300 	ldreq	r0, [r9, -r0, lsl #6]
    3134:	08020000 	stmdaeq	r2, {}	; <UNPREDICTABLE>
    3138:	0000004e 	andeq	r0, r0, lr, asr #32
    313c:	19180304 	ldmdbne	r8, {r2, r8, r9}
    3140:	09020000 	stmdbeq	r2, {}	; <UNPREDICTABLE>
    3144:	00000055 	andeq	r0, r0, r5, asr r0
    3148:	04040008 	streq	r0, [r4], #-8
    314c:	00038907 	andeq	r8, r3, r7, lsl #18
    3150:	5b040500 	blpl	104558 <startup-0x1fefbaa8>
    3154:	04000000 	streq	r0, [r0], #-0
    3158:	04d30801 	ldrbeq	r0, [r3], #2049	; 0x801
    315c:	6a060000 	bvs	183164 <startup-0x1fe7ce9c>
    3160:	0200001a 	andeq	r0, r0, #26
    3164:	0000210a 	andeq	r2, r0, sl, lsl #2
    3168:	00340700 	eorseq	r0, r4, r0, lsl #14
    316c:	030c0000 	movweq	r0, #49152	; 0xc000
    3170:	00009e06 	andeq	r9, r0, r6, lsl #28
    3174:	05c90300 	strbeq	r0, [r9, #768]	; 0x300
    3178:	07030000 	streq	r0, [r3, -r0]
    317c:	0000009e 	muleq	r0, lr, r0
    3180:	003b0300 	eorseq	r0, fp, r0, lsl #6
    3184:	08030000 	stmdaeq	r3, {}	; <UNPREDICTABLE>
    3188:	0000009e 	muleq	r0, lr, r0
    318c:	00300304 	eorseq	r0, r0, r4, lsl #6
    3190:	09030000 	stmdbeq	r3, {}	; <UNPREDICTABLE>
    3194:	0000009e 	muleq	r0, lr, r0
    3198:	04050008 	streq	r0, [r5], #-8
    319c:	00000062 	andeq	r0, r0, r2, rrx
    31a0:	00162806 	andseq	r2, r6, r6, lsl #16
    31a4:	6d0a0300 	stcvs	3, cr0, [sl, #-0]
    31a8:	07000000 	streq	r0, [r0, -r0]
    31ac:	000006de 	ldrdeq	r0, [r0], -lr
    31b0:	28060424 	stmdacs	r6, {r2, r5, sl}
    31b4:	03000001 	movweq	r0, #1
    31b8:	00000461 	andeq	r0, r0, r1, ror #8
    31bc:	01280704 			; <UNDEFINED> instruction: 0x01280704
    31c0:	03000000 	movweq	r0, #0
    31c4:	000006ea 	andeq	r0, r0, sl, ror #13
    31c8:	012e0804 			; <UNDEFINED> instruction: 0x012e0804
    31cc:	03040000 	movweq	r0, #16384	; 0x4000
    31d0:	0000063a 	andeq	r0, r0, sl, lsr r6
    31d4:	012e0904 			; <UNDEFINED> instruction: 0x012e0904
    31d8:	03080000 	movweq	r0, #32768	; 0x8000
    31dc:	00000666 	andeq	r0, r0, r6, ror #12
    31e0:	01460c04 	cmpeq	r6, r4, lsl #24
    31e4:	030c0000 	movweq	r0, #49152	; 0xc000
    31e8:	00000342 	andeq	r0, r0, r2, asr #6
    31ec:	01460d04 	cmpeq	r6, r4, lsl #26
    31f0:	03100000 	tsteq	r0, #0
    31f4:	00000473 	andeq	r0, r0, r3, ror r4
    31f8:	012e1004 			; <UNDEFINED> instruction: 0x012e1004
    31fc:	03140000 	tsteq	r4, #0
    3200:	00000070 	andeq	r0, r0, r0, ror r0
    3204:	012e1104 			; <UNDEFINED> instruction: 0x012e1104
    3208:	03180000 	tsteq	r8, #0
    320c:	000003d9 	ldrdeq	r0, [r0], -r9
    3210:	012e1204 			; <UNDEFINED> instruction: 0x012e1204
    3214:	031c0000 	tsteq	ip, #0
    3218:	000003e9 	andeq	r0, r0, r9, ror #7
    321c:	012e1304 			; <UNDEFINED> instruction: 0x012e1304
    3220:	00200000 	eoreq	r0, r0, r0
    3224:	00a40405 	adceq	r0, r4, r5, lsl #8
    3228:	04080000 	streq	r0, [r8], #-0
    322c:	746e6905 	strbtvc	r6, [lr], #-2309	; 0xfffff6fb
    3230:	01400900 	cmpeq	r0, r0, lsl #18
    3234:	400a0000 	andmi	r0, sl, r0
    3238:	00000001 	andeq	r0, r0, r1
    323c:	00af0405 	adceq	r0, pc, r5, lsl #8
    3240:	04050000 	streq	r0, [r5], #-0
    3244:	00000135 	andeq	r0, r0, r5, lsr r1
    3248:	0006df06 	andeq	sp, r6, r6, lsl #30
    324c:	af150400 	svcge	0x00150400
    3250:	0b000000 	bleq	3258 <startup-0x1fffcda8>
    3254:	00000162 	andeq	r0, r0, r2, ror #2
    3258:	00000162 	andeq	r0, r0, r2, ror #2
    325c:	0405000c 	streq	r0, [r5], #-12
    3260:	0000014c 	andeq	r0, r0, ip, asr #2
    3264:	0005560d 	andeq	r5, r5, sp, lsl #12
    3268:	571c0400 	ldrpl	r0, [ip, -r0, lsl #8]
    326c:	0d000001 	stceq	0, cr0, [r0, #-4]
    3270:	00000424 	andeq	r0, r0, r4, lsr #8
    3274:	012e1d04 			; <UNDEFINED> instruction: 0x012e1d04
    3278:	a2060000 	andge	r0, r6, #0
    327c:	05000006 	streq	r0, [r0, #-6]
    3280:	00005b24 	andeq	r5, r0, r4, lsr #22
    3284:	017e0b00 	cmneq	lr, r0, lsl #22
    3288:	019a0000 	orrseq	r0, sl, r0
    328c:	9a0e0000 	bls	383294 <startup-0x1fc7cd6c>
    3290:	ff000001 			; <UNDEFINED> instruction: 0xff000001
    3294:	04040003 	streq	r0, [r4], #-3
    3298:	00040607 	andeq	r0, r4, r7, lsl #12
    329c:	184e0d00 	stmdane	lr, {r8, sl, fp}^
    32a0:	2b050000 	blcs	1432a8 <startup-0x1febcd58>
    32a4:	00000189 	andeq	r0, r0, r9, lsl #3
    32a8:	0002480d 	andeq	r4, r2, sp, lsl #16
    32ac:	892c0500 	stmdbhi	ip!, {r8, sl}
    32b0:	0d000001 	stceq	0, cr0, [r0, #-4]
    32b4:	000004e1 	andeq	r0, r0, r1, ror #9
    32b8:	01892d05 	orreq	r2, r9, r5, lsl #26
    32bc:	6b0d0000 	blvs	3432c4 <startup-0x1fcbcd3c>
    32c0:	05000003 	streq	r0, [r0, #-3]
    32c4:	0001892e 	andeq	r8, r1, lr, lsr #18
    32c8:	02d00d00 	sbcseq	r0, r0, #0, 26
    32cc:	2f050000 	svccs	0x00050000
    32d0:	00000189 	andeq	r0, r0, r9, lsl #3
    32d4:	0006c00d 	andeq	ip, r6, sp
    32d8:	89300500 	ldmdbhi	r0!, {r8, sl}
    32dc:	0d000001 	stceq	0, cr0, [r0, #-4]
    32e0:	000006b0 			; <UNDEFINED> instruction: 0x000006b0
    32e4:	01893105 	orreq	r3, r9, r5, lsl #2
    32e8:	ac0f0000 	stcge	0, cr0, [pc], {-0}
    32ec:	01000001 	tsteq	r0, r1
    32f0:	8803052b 	stmdahi	r3, {r0, r1, r3, r5, r8, sl}
    32f4:	0f200064 	svceq	0x00200064
    32f8:	000001b7 			; <UNDEFINED> instruction: 0x000001b7
    32fc:	03052c01 	movweq	r2, #23553	; 0x5c01
    3300:	20005888 	andcs	r5, r0, r8, lsl #17
    3304:	0001c20f 	andeq	ip, r1, pc, lsl #4
    3308:	052d0100 	streq	r0, [sp, #-256]!	; 0xffffff00
    330c:	00608803 	rsbeq	r8, r0, r3, lsl #16
    3310:	01cd0f20 	biceq	r0, sp, r0, lsr #30
    3314:	2e010000 	cdpcs	0, 0, cr0, cr1, cr0, {0}
    3318:	68880305 	stmvs	r8, {r0, r2, r8, r9}
    331c:	a10f2000 	mrsge	r2, CPSR
    3320:	01000001 	tsteq	r0, r1
    3324:	8803052f 	stmdahi	r3, {r0, r1, r2, r3, r5, r8, sl}
    3328:	1020005c 	eorne	r0, r0, ip, asr r0
    332c:	000001d8 	ldrdeq	r0, [r0], -r8
    3330:	88030501 	stmdahi	r3, {r0, r8, sl}
    3334:	10200054 	eorne	r0, r0, r4, asr r0
    3338:	000001e3 	andeq	r0, r0, r3, ror #3
    333c:	88030501 	stmdahi	r3, {r0, r8, sl}
    3340:	1120006c 			; <UNDEFINED> instruction: 0x1120006c
    3344:	00001884 	andeq	r1, r0, r4, lsl #17
    3348:	7e01a801 	cdpvc	8, 0, cr10, cr1, cr1, {0}
    334c:	6a20003c 	bvs	803444 <startup-0x1f7fcbbc>
    3350:	01000000 	mrseq	r0, (UNDEF: 0)
    3354:	00026d9c 	muleq	r2, ip, sp
    3358:	196b1200 	stmdbne	fp!, {r9, ip}^
    335c:	a8010000 	stmdage	r1, {}	; <UNPREDICTABLE>
    3360:	00012e01 	andeq	r2, r1, r1, lsl #28
    3364:	74910200 	ldrvc	r0, [r1], #512	; 0x200
    3368:	18151100 	ldmdane	r5, {r8, ip}
    336c:	a0010000 	andge	r0, r1, r0
    3370:	003bfc01 	eorseq	pc, fp, r1, lsl #24
    3374:	00008220 	andeq	r8, r0, r0, lsr #4
    3378:	a29c0100 	addsge	r0, ip, #0, 2
    337c:	12000002 	andne	r0, r0, #2
    3380:	0000185f 	andeq	r1, r0, pc, asr r8
    3384:	6201a001 	andvs	sl, r1, #1
    3388:	02000001 	andeq	r0, r0, #1
    338c:	7b136c91 	blvc	4de5d8 <startup-0x1fb21a28>
    3390:	01000004 	tsteq	r0, r4
    3394:	012e01a1 	smulwbeq	lr, r1, r1
    3398:	91020000 	mrsls	r0, (UNDEF: 2)
    339c:	23140074 	tstcs	r4, #116	; 0x74
    33a0:	01000019 	tsteq	r0, r9, lsl r0
    33a4:	3af40196 	bcc	ffd03a04 <firstTime.4040+0xdfcf45c0>
    33a8:	01082000 	mrseq	r2, (UNDEF: 8)
    33ac:	9c010000 	stcls	0, cr0, [r1], {-0}
    33b0:	000002c6 	andeq	r0, r0, r6, asr #5
    33b4:	01006915 	tsteq	r0, r5, lsl r9
    33b8:	012e0197 			; <UNDEFINED> instruction: 0x012e0197
    33bc:	91020000 	mrsls	r0, (UNDEF: 2)
    33c0:	b5110074 	ldrlt	r0, [r1, #-116]	; 0xffffff8c
    33c4:	01000018 	tsteq	r0, r8, lsl r0
    33c8:	39c40170 	stmibcc	r4, {r4, r5, r6, r8}^
    33cc:	01302000 	teqeq	r0, r0
    33d0:	9c010000 	stcls	0, cr0, [r1], {-0}
    33d4:	0000033a 	andeq	r0, r0, sl, lsr r3
    33d8:	01007815 	tsteq	r0, r5, lsl r8
    33dc:	012e0171 			; <UNDEFINED> instruction: 0x012e0171
    33e0:	91020000 	mrsls	r0, (UNDEF: 2)
    33e4:	0079156c 	rsbseq	r1, r9, ip, ror #10
    33e8:	2e017201 	cdpcs	2, 0, cr7, cr1, cr1, {0}
    33ec:	02000001 	andeq	r0, r0, #1
    33f0:	5b136891 	blpl	4dd63c <startup-0x1fb229c4>
    33f4:	01000003 	tsteq	r0, r3
    33f8:	012e0173 			; <UNDEFINED> instruction: 0x012e0173
    33fc:	91020000 	mrsls	r0, (UNDEF: 2)
    3400:	07191364 	ldreq	r1, [r9, -r4, ror #6]
    3404:	74010000 	strvc	r0, [r1], #-0
    3408:	00012e01 	andeq	r2, r1, r1, lsl #28
    340c:	60910200 	addsvs	r0, r1, r0, lsl #4
    3410:	00327815 	eorseq	r7, r2, r5, lsl r8
    3414:	2e017601 	cfmadd32cs	mvax0, mvfx7, mvfx1, mvfx1
    3418:	02000001 	andeq	r0, r0, #1
    341c:	69165c91 	ldmdbvs	r6, {r0, r4, r7, sl, fp, ip, lr}
    3420:	017a0100 	cmneq	sl, r0, lsl #2
    3424:	0000012e 	andeq	r0, r0, lr, lsr #2
    3428:	01006b15 	tsteq	r0, r5, lsl fp
    342c:	012e017b 			; <UNDEFINED> instruction: 0x012e017b
    3430:	91020000 	mrsls	r0, (UNDEF: 2)
    3434:	b5110058 	ldrlt	r0, [r1, #-88]	; 0xffffffa8
    3438:	01000019 	tsteq	r0, r9, lsl r0
    343c:	39720165 	ldmdbcc	r2!, {r0, r2, r5, r6, r8}^
    3440:	00522000 	subseq	r2, r2, r0
    3444:	9c010000 	stcls	0, cr0, [r1], {-0}
    3448:	000003a3 	andeq	r0, r0, r3, lsr #7
    344c:	01007817 	tsteq	r0, r7, lsl r8
    3450:	012e0165 			; <UNDEFINED> instruction: 0x012e0165
    3454:	91020000 	mrsls	r0, (UNDEF: 2)
    3458:	0079176c 	rsbseq	r1, r9, ip, ror #14
    345c:	2e016501 	cfsh32cs	mvfx6, mvfx1, #1
    3460:	02000001 	andeq	r0, r0, #1
    3464:	5b126891 	blpl	49d6b0 <startup-0x1fb62950>
    3468:	01000003 	tsteq	r0, r3
    346c:	012e0165 			; <UNDEFINED> instruction: 0x012e0165
    3470:	91020000 	mrsls	r0, (UNDEF: 2)
    3474:	07191264 	ldreq	r1, [r9, -r4, ror #4]
    3478:	65010000 	strvs	r0, [r1, #-0]
    347c:	00012e01 	andeq	r2, r1, r1, lsl #28
    3480:	60910200 	addsvs	r0, r1, r0, lsl #4
    3484:	01006915 	tsteq	r0, r5, lsl r9
    3488:	012e0166 			; <UNDEFINED> instruction: 0x012e0166
    348c:	91020000 	mrsls	r0, (UNDEF: 2)
    3490:	006a1574 	rsbeq	r1, sl, r4, ror r5
    3494:	2e016701 	cdpcs	7, 0, cr6, cr1, cr1, {0}
    3498:	02000001 	andeq	r0, r0, #1
    349c:	11007091 	swpne	r7, r1, [r0]
    34a0:	00001958 	andeq	r1, r0, r8, asr r9
    34a4:	20015b01 	andcs	r5, r1, r1, lsl #22
    34a8:	52200039 	eorpl	r0, r0, #57	; 0x39
    34ac:	01000000 	mrseq	r0, (UNDEF: 0)
    34b0:	00040c9c 	muleq	r4, ip, ip
    34b4:	00781700 	rsbseq	r1, r8, r0, lsl #14
    34b8:	2e015b01 	vmlacs.f64	d5, d1, d1
    34bc:	02000001 	andeq	r0, r0, #1
    34c0:	79176c91 	ldmdbvc	r7, {r0, r4, r7, sl, fp, sp, lr}
    34c4:	015b0100 	cmpeq	fp, r0, lsl #2
    34c8:	0000012e 	andeq	r0, r0, lr, lsr #2
    34cc:	12689102 	rsbne	r9, r8, #-2147483648	; 0x80000000
    34d0:	0000035b 	andeq	r0, r0, fp, asr r3
    34d4:	2e015b01 	vmlacs.f64	d5, d1, d1
    34d8:	02000001 	andeq	r0, r0, #1
    34dc:	19126491 	ldmdbne	r2, {r0, r4, r7, sl, sp, lr}
    34e0:	01000007 	tsteq	r0, r7
    34e4:	012e015b 			; <UNDEFINED> instruction: 0x012e015b
    34e8:	91020000 	mrsls	r0, (UNDEF: 2)
    34ec:	00691560 	rsbeq	r1, r9, r0, ror #10
    34f0:	2e015c01 	cdpcs	12, 0, cr5, cr1, cr1, {0}
    34f4:	02000001 	andeq	r0, r0, #1
    34f8:	6a157491 	bvs	560744 <startup-0x1fa9f8bc>
    34fc:	015d0100 	cmpeq	sp, r0, lsl #2
    3500:	0000012e 	andeq	r0, r0, lr, lsr #2
    3504:	00709102 	rsbseq	r9, r0, r2, lsl #2
    3508:	00188f11 	andseq	r8, r8, r1, lsl pc
    350c:	01450100 	mrseq	r0, (UNDEF: 85)
    3510:	20003806 	andcs	r3, r0, r6, lsl #16
    3514:	0000011a 	andeq	r0, r0, sl, lsl r1
    3518:	04b79c01 	ldrteq	r9, [r7], #3073	; 0xc01
    351c:	73170000 	tstvc	r7, #0
    3520:	01450100 	mrseq	r0, (UNDEF: 85)
    3524:	0000009e 	muleq	r0, lr, r0
    3528:	17549102 	ldrbne	r9, [r4, -r2, lsl #2]
    352c:	45010078 	strmi	r0, [r1, #-120]	; 0xffffff88
    3530:	00012e01 	andeq	r2, r1, r1, lsl #28
    3534:	50910200 	addspl	r0, r1, r0, lsl #4
    3538:	01007917 	tsteq	r0, r7, lsl r9
    353c:	012e0145 			; <UNDEFINED> instruction: 0x012e0145
    3540:	91020000 	mrsls	r0, (UNDEF: 2)
    3544:	6573174c 	ldrbvs	r1, [r3, #-1868]!	; 0xfffff8b4
    3548:	45010074 	strmi	r0, [r1, #-116]	; 0xffffff8c
    354c:	00012e01 	andeq	r2, r1, r1, lsl #28
    3550:	48910200 	ldmmi	r1, {r9}
    3554:	00191d12 	andseq	r1, r9, r2, lsl sp
    3558:	01450100 	mrseq	r0, (UNDEF: 85)
    355c:	0000012e 	andeq	r0, r0, lr, lsr #2
    3560:	15009102 	strne	r9, [r0, #-258]	; 0xfffffefe
    3564:	46010069 	strmi	r0, [r1], -r9, rrx
    3568:	00012e01 	andeq	r2, r1, r1, lsl #28
    356c:	6c910200 	lfmvs	f0, 4, [r1], {0}
    3570:	01006a15 	tsteq	r0, r5, lsl sl
    3574:	012e0146 			; <UNDEFINED> instruction: 0x012e0146
    3578:	91020000 	mrsls	r0, (UNDEF: 2)
    357c:	006b1568 	rsbeq	r1, fp, r8, ror #10
    3580:	2e014601 	cfmadd32cs	mvax0, mvfx4, mvfx1, mvfx1
    3584:	02000001 	andeq	r0, r0, #1
    3588:	90136491 	mulsls	r3, r1, r4
    358c:	01000019 	tsteq	r0, r9, lsl r0
    3590:	012e0146 			; <UNDEFINED> instruction: 0x012e0146
    3594:	91020000 	mrsls	r0, (UNDEF: 2)
    3598:	383e1860 	ldmdacc	lr!, {r5, r6, fp, ip}
    359c:	00bc2000 	adcseq	r2, ip, r0
    35a0:	8b130000 	blhi	4c35a8 <startup-0x1fb3ca58>
    35a4:	01000019 	tsteq	r0, r9, lsl r0
    35a8:	005b014d 	subseq	r0, fp, sp, asr #2
    35ac:	91020000 	mrsls	r0, (UNDEF: 2)
    35b0:	1100005f 	qaddne	r0, pc, r0	; <UNPREDICTABLE>
    35b4:	00001864 	andeq	r1, r0, r4, ror #16
    35b8:	30013001 	andcc	r3, r1, r1
    35bc:	d6200037 			; <UNDEFINED> instruction: 0xd6200037
    35c0:	01000000 	mrseq	r0, (UNDEF: 0)
    35c4:	0005209c 	muleq	r5, ip, r0
    35c8:	18071200 	stmdane	r7, {r9, ip}
    35cc:	30010000 	andcc	r0, r1, r0
    35d0:	00052001 	andeq	r2, r5, r1
    35d4:	64910200 	ldrvs	r0, [r1], #512	; 0x200
    35d8:	01006915 	tsteq	r0, r5, lsl r9
    35dc:	017e0131 	cmneq	lr, r1, lsr r1
    35e0:	91020000 	mrsls	r0, (UNDEF: 2)
    35e4:	006a1577 	rsbeq	r1, sl, r7, ror r5
    35e8:	7e013101 	adfvcs	f3, f1, f1
    35ec:	02000001 	andeq	r0, r0, #1
    35f0:	c1137691 			; <UNDEFINED> instruction: 0xc1137691
    35f4:	0100001b 	tsteq	r0, fp, lsl r0
    35f8:	017e0131 	cmneq	lr, r1, lsr r1
    35fc:	91020000 	mrsls	r0, (UNDEF: 2)
    3600:	0063156f 	rsbeq	r1, r3, pc, ror #10
    3604:	7e013101 	adfvcs	f3, f1, f1
    3608:	02000001 	andeq	r0, r0, #1
    360c:	6b157591 	blvs	560c58 <startup-0x1fa9f3a8>
    3610:	01320100 	teqeq	r2, r0, lsl #2
    3614:	0000004e 	andeq	r0, r0, lr, asr #32
    3618:	00709102 	rsbseq	r9, r0, r2, lsl #2
    361c:	017e0405 	cmneq	lr, r5, lsl #8
    3620:	0e110000 	cdpeq	0, 1, cr0, cr1, cr0, {0}
    3624:	01000018 	tsteq	r0, r8, lsl r0
    3628:	35900108 	ldrcc	r0, [r0, #264]	; 0x108
    362c:	01a02000 	moveq	r2, r0
    3630:	9c010000 	stcls	0, cr0, [r1], {-0}
    3634:	000005a0 	andeq	r0, r0, r0, lsr #11
    3638:	01007817 	tsteq	r0, r7, lsl r8
    363c:	012e0108 			; <UNDEFINED> instruction: 0x012e0108
    3640:	91020000 	mrsls	r0, (UNDEF: 2)
    3644:	00791764 	rsbseq	r1, r9, r4, ror #14
    3648:	2e010801 	cdpcs	8, 0, cr0, cr1, cr1, {0}
    364c:	02000001 	andeq	r0, r0, #1
    3650:	73176091 	tstvc	r7, #145	; 0x91
    3654:	01007465 	tsteq	r0, r5, ror #8
    3658:	012e0108 			; <UNDEFINED> instruction: 0x012e0108
    365c:	91020000 	mrsls	r0, (UNDEF: 2)
    3660:	1966135c 	stmdbne	r6!, {r2, r3, r4, r6, r8, r9, ip}^
    3664:	09010000 	stmdbeq	r1, {}	; <UNPREDICTABLE>
    3668:	00017e01 	andeq	r7, r1, r1, lsl #28
    366c:	77910200 	ldrvc	r0, [r1, r0, lsl #4]
    3670:	01006315 	tsteq	r0, r5, lsl r3
    3674:	017e0109 	cmneq	lr, r9, lsl #2
    3678:	91020000 	mrsls	r0, (UNDEF: 2)
    367c:	1bc1136f 	blne	ff048440 <firstTime.4040+0xdf038ffc>
    3680:	09010000 	stmdbeq	r1, {}	; <UNPREDICTABLE>
    3684:	00017e01 	andeq	r7, r1, r1, lsl #28
    3688:	76910200 	ldrvc	r0, [r1], r0, lsl #4
    368c:	0019c413 	andseq	ip, r9, r3, lsl r4
    3690:	010a0100 	mrseq	r0, (UNDEF: 26)
    3694:	0000012e 	andeq	r0, r0, lr, lsr #2
    3698:	00709102 	rsbseq	r9, r0, r2, lsl #2
    369c:	00185919 	andseq	r5, r8, r9, lsl r9
    36a0:	10de0100 	sbcsne	r0, lr, r0, lsl #2
    36a4:	80200034 	eorhi	r0, r0, r4, lsr r0
    36a8:	01000001 	tsteq	r0, r1
    36ac:	0006069c 	muleq	r6, ip, r6
    36b0:	00781a00 	rsbseq	r1, r8, r0, lsl #20
    36b4:	012ede01 			; <UNDEFINED> instruction: 0x012ede01
    36b8:	91020000 	mrsls	r0, (UNDEF: 2)
    36bc:	00791a6c 	rsbseq	r1, r9, ip, ror #20
    36c0:	012ede01 			; <UNDEFINED> instruction: 0x012ede01
    36c4:	91020000 	mrsls	r0, (UNDEF: 2)
    36c8:	65731a68 	ldrbvs	r1, [r3, #-2664]!	; 0xfffff598
    36cc:	de010074 	mcrle	0, 0, r0, cr1, cr4, {3}
    36d0:	0000012e 	andeq	r0, r0, lr, lsr #2
    36d4:	1b649102 	blne	1927ae4 <startup-0x1e6d851c>
    36d8:	0000191d 	andeq	r1, r0, sp, lsl r9
    36dc:	012ede01 			; <UNDEFINED> instruction: 0x012ede01
    36e0:	91020000 	mrsls	r0, (UNDEF: 2)
    36e4:	19661c60 	stmdbne	r6!, {r5, r6, sl, fp, ip}^
    36e8:	df010000 	svcle	0x00010000
    36ec:	0000017e 	andeq	r0, r0, lr, ror r1
    36f0:	1c779102 	ldfnep	f1, [r7], #-8
    36f4:	000019c4 	andeq	r1, r0, r4, asr #19
    36f8:	012ee001 			; <UNDEFINED> instruction: 0x012ee001
    36fc:	91020000 	mrsls	r0, (UNDEF: 2)
    3700:	171d0070 			; <UNDEFINED> instruction: 0x171d0070
    3704:	0100001a 	tsteq	r0, sl, lsl r0
    3708:	0033aad1 	ldrsbteq	sl, [r3], -r1
    370c:	00006620 	andeq	r6, r0, r0, lsr #12
    3710:	429c0100 	addsmi	r0, ip, #0, 2
    3714:	1c000006 	stcne	0, cr0, [r0], {6}
    3718:	000017f5 	strdeq	r1, [r0], -r5
    371c:	017ed201 	cmneq	lr, r1, lsl #4
    3720:	91020000 	mrsls	r0, (UNDEF: 2)
    3724:	33b81877 			; <UNDEFINED> instruction: 0x33b81877
    3728:	003e2000 	eorseq	r2, lr, r0
    372c:	611e0000 	tstvs	lr, r0
    3730:	01006464 	tsteq	r0, r4, ror #8
    3734:	00017ed6 	ldrdeq	r7, [r1], -r6
    3738:	76910200 	ldrvc	r0, [r1], r0, lsl #4
    373c:	041f0000 	ldreq	r0, [pc], #-0	; 3744 <startup-0x1fffc8bc>
    3740:	0100001a 	tsteq	r0, sl, lsl r0
    3744:	00333cbd 	ldrhteq	r3, [r3], -sp
    3748:	00006e20 	andeq	r6, r0, r0, lsr #28
    374c:	1d9c0100 	ldfnes	f0, [ip]
    3750:	00001978 	andeq	r1, r0, r8, ror r9
    3754:	32f6b501 	rscscc	fp, r6, #4194304	; 0x400000
    3758:	00462000 	subeq	r2, r6, r0
    375c:	9c010000 	stcls	0, cr0, [r1], {-0}
    3760:	00000685 	andeq	r0, r0, r5, lsl #13
    3764:	0018401b 	andseq	r4, r8, fp, lsl r0
    3768:	7eb50100 	frdvcs	f0, f5, f0
    376c:	02000001 	andeq	r0, r0, #1
    3770:	c11b7791 			; <UNDEFINED> instruction: 0xc11b7791
    3774:	0100001b 	tsteq	r0, fp, lsl r0
    3778:	00017eb5 			; <UNDEFINED> instruction: 0x00017eb5
    377c:	76910200 	ldrvc	r0, [r1], r0, lsl #4
    3780:	18321d00 	ldmdane	r2!, {r8, sl, fp, ip}
    3784:	ae010000 	cdpge	0, 0, cr0, cr1, cr0, {0}
    3788:	200032b0 			; <UNDEFINED> instruction: 0x200032b0
    378c:	00000046 	andeq	r0, r0, r6, asr #32
    3790:	06b79c01 	ldrteq	r9, [r7], r1, lsl #24
    3794:	401b0000 	andsmi	r0, fp, r0
    3798:	01000018 	tsteq	r0, r8, lsl r0
    379c:	00017eae 	andeq	r7, r1, lr, lsr #29
    37a0:	77910200 	ldrvc	r0, [r1, r0, lsl #4]
    37a4:	001bc11b 	andseq	ip, fp, fp, lsl r1
    37a8:	7eae0100 	fdvvce	f0, f6, f0
    37ac:	02000001 	andeq	r0, r0, #1
    37b0:	1d007691 	stcne	6, cr7, [r0, #-580]	; 0xfffffdbc
    37b4:	000018a7 	andeq	r1, r0, r7, lsr #17
    37b8:	32329901 	eorscc	r9, r2, #16384	; 0x4000
    37bc:	007e2000 	rsbseq	r2, lr, r0
    37c0:	9c010000 	stcls	0, cr0, [r1], {-0}
    37c4:	000006e9 	andeq	r0, r0, r9, ror #13
    37c8:	00064a1b 	andeq	r4, r6, fp, lsl sl
    37cc:	7e990100 	fmlvce	f0, f1, f0
    37d0:	02000001 	andeq	r0, r0, #1
    37d4:	c11b7791 			; <UNDEFINED> instruction: 0xc11b7791
    37d8:	0100001b 	tsteq	r0, fp, lsl r0
    37dc:	00017e99 	muleq	r1, r9, lr
    37e0:	76910200 	ldrvc	r0, [r1], r0, lsl #4
    37e4:	190b2000 	stmdbne	fp, {sp}
    37e8:	94010000 	strls	r0, [r1], #-0
    37ec:	0000012e 	andeq	r0, r0, lr, lsr #2
    37f0:	20003208 	andcs	r3, r0, r8, lsl #4
    37f4:	0000002a 	andeq	r0, r0, sl, lsr #32
    37f8:	07119c01 	ldreq	r9, [r1, -r1, lsl #24]
    37fc:	c11b0000 	tstgt	fp, r0
    3800:	0100001b 	tsteq	r0, fp, lsl r0
    3804:	00017e94 	muleq	r1, r4, lr
    3808:	77910200 	ldrvc	r0, [r1, r0, lsl #4]
    380c:	17fa2100 	ldrbne	r2, [sl, r0, lsl #2]!
    3810:	7b010000 	blvc	43818 <startup-0x1ffbc7e8>
    3814:	0000017e 	andeq	r0, r0, lr, ror r1
    3818:	20003174 	andcs	r3, r0, r4, ror r1
    381c:	00000094 	muleq	r0, r4, r0
    3820:	07469c01 	strbeq	r9, [r6, -r1, lsl #24]
    3824:	c11b0000 	tstgt	fp, r0
    3828:	0100001b 	tsteq	r0, fp, lsl r0
    382c:	00017e7b 	andeq	r7, r1, fp, ror lr
    3830:	6f910200 	svcvs	0x00910200
    3834:	0076721e 	rsbseq	r7, r6, lr, lsl r2
    3838:	005b8401 	subseq	r8, fp, r1, lsl #8
    383c:	91020000 	mrsls	r0, (UNDEF: 2)
    3840:	dc1d0077 	ldcle	0, cr0, [sp], {119}	; 0x77
    3844:	01000019 	tsteq	r0, r9, lsl r0
    3848:	00310665 	eorseq	r0, r1, r5, ror #12
    384c:	00006e20 	andeq	r6, r0, r0, lsr #28
    3850:	689c0100 	ldmvs	ip, {r8}
    3854:	1e000007 	cdpne	0, 0, cr0, cr0, cr7, {0}
    3858:	66010063 	strvs	r0, [r1], -r3, rrx
    385c:	0000017e 	andeq	r0, r0, lr, ror r1
    3860:	00779102 	rsbseq	r9, r7, r2, lsl #2
    3864:	0019ca1d 	andseq	ip, r9, sp, lsl sl
    3868:	a0500100 	subsge	r0, r0, r0, lsl #2
    386c:	66200030 			; <UNDEFINED> instruction: 0x66200030
    3870:	01000000 	mrseq	r0, (UNDEF: 0)
    3874:	00078c9c 	muleq	r7, ip, ip
    3878:	1bc11b00 	blne	ff04a480 <firstTime.4040+0xdf03b03c>
    387c:	50010000 	andpl	r0, r1, r0
    3880:	0000017e 	andeq	r0, r0, lr, ror r1
    3884:	00779102 	rsbseq	r9, r7, r2, lsl #2
    3888:	0018c322 	andseq	ip, r8, r2, lsr #6
    388c:	48490100 	stmdami	r9, {r8}^
    3890:	58200030 	stmdapl	r0!, {r4, r5}
    3894:	01000000 	mrseq	r0, (UNDEF: 0)
    3898:	0007ba9c 	muleq	r7, ip, sl
    389c:	00781a00 	rsbseq	r1, r8, r0, lsl #20
    38a0:	017e4901 	cmneq	lr, r1, lsl #18
    38a4:	91020000 	mrsls	r0, (UNDEF: 2)
    38a8:	00631e6f 	rsbeq	r1, r3, pc, ror #28
    38ac:	017e4a01 	cmneq	lr, r1, lsl #20
    38b0:	91020000 	mrsls	r0, (UNDEF: 2)
    38b4:	37220077 			; <UNDEFINED> instruction: 0x37220077
    38b8:	01000019 	tsteq	r0, r9, lsl r0
    38bc:	002ff841 	eoreq	pc, pc, r1, asr #16
    38c0:	00005020 	andeq	r5, r0, r0, lsr #32
    38c4:	e89c0100 	ldm	ip, {r8}
    38c8:	1a000007 	bne	38ec <startup-0x1fffc714>
    38cc:	41010078 	tstmi	r1, r8, ror r0
    38d0:	0000017e 	andeq	r0, r0, lr, ror r1
    38d4:	1e6f9102 	lgnnee	f1, f2
    38d8:	42010063 	andmi	r0, r1, #99	; 0x63
    38dc:	0000017e 	andeq	r0, r0, lr, ror r1
    38e0:	00779102 	rsbseq	r9, r7, r2, lsl #2
    38e4:	00199f1f 	andseq	r9, r9, pc, lsl pc
    38e8:	c83a0100 	ldmdagt	sl!, {r8}
    38ec:	3020002f 	eorcc	r0, r0, pc, lsr #32
    38f0:	01000000 	mrseq	r0, (UNDEF: 0)
    38f4:	18481f9c 	stmdane	r8, {r2, r3, r4, r7, r8, r9, sl, fp, ip}^
    38f8:	37010000 	strcc	r0, [r1, -r0]
    38fc:	20002fb0 			; <UNDEFINED> instruction: 0x20002fb0
    3900:	00000018 	andeq	r0, r0, r8, lsl r0
    3904:	ef199c01 	svc	0x00199c01
    3908:	01000019 	tsteq	r0, r9, lsl r0
    390c:	002f7e32 	eoreq	r7, pc, r2, lsr lr	; <UNPREDICTABLE>
    3910:	00003220 	andeq	r3, r0, r0, lsr #4
    3914:	3a9c0100 	bcc	fe703d1c <firstTime.4040+0xde6f48d8>
    3918:	1b000008 	blne	3940 <startup-0x1fffc6c0>
    391c:	00001807 	andeq	r1, r0, r7, lsl #16
    3920:	05203201 	streq	r3, [r0, #-513]!	; 0xfffffdff
    3924:	91020000 	mrsls	r0, (UNDEF: 2)
    3928:	00691e6c 	rsbeq	r1, r9, ip, ror #28
    392c:	012e3301 			; <UNDEFINED> instruction: 0x012e3301
    3930:	91020000 	mrsls	r0, (UNDEF: 2)
    3934:	781d0074 	ldmdavc	sp, {r2, r4, r5, r6}
    3938:	01000018 	tsteq	r0, r8, lsl r0
    393c:	002f5821 	eoreq	r5, pc, r1, lsr #16
    3940:	00002620 	andeq	r2, r0, r0, lsr #12
    3944:	5d9c0100 	ldfpls	f0, [ip]
    3948:	1a000008 	bne	3970 <startup-0x1fffc690>
    394c:	0100736d 	tsteq	r0, sp, ror #6
    3950:	00004e21 	andeq	r4, r0, r1, lsr #28
    3954:	74910200 	ldrvc	r0, [r1], #512	; 0x200
    3958:	18261d00 	stmdane	r6!, {r8, sl, fp, ip}
    395c:	18010000 	stmdane	r1, {}	; <UNPREDICTABLE>
    3960:	20002f2c 	andcs	r2, r0, ip, lsr #30
    3964:	0000002c 	andeq	r0, r0, ip, lsr #32
    3968:	08809c01 	stmeq	r0, {r0, sl, fp, ip, pc}
    396c:	751a0000 	ldrvc	r0, [sl, #-0]
    3970:	18010073 	stmdane	r1, {r0, r1, r4, r5, r6}
    3974:	0000004e 	andeq	r0, r0, lr, asr #32
    3978:	00749102 	rsbseq	r9, r4, r2, lsl #2
    397c:	00189b23 	andseq	r9, r8, r3, lsr #22
    3980:	e80e0100 	stmda	lr, {r8}
    3984:	4420002e 	strtmi	r0, [r0], #-46	; 0xffffffd2
    3988:	01000000 	mrseq	r0, (UNDEF: 0)
    398c:	194c239c 	stmdbne	ip, {r2, r3, r4, r7, r8, r9, sp}^
    3990:	04010000 	streq	r0, [r1], #-0
    3994:	20002ea4 	andcs	r2, r0, r4, lsr #29
    3998:	00000044 	andeq	r0, r0, r4, asr #32
    399c:	00009c01 	andeq	r9, r0, r1, lsl #24
    39a0:	04000001 	streq	r0, [r0], #-1
    39a4:	000bb100 	andeq	fp, fp, r0, lsl #2
    39a8:	9f010400 	svcls	0x00010400
    39ac:	0c000000 	stceq	0, cr0, [r0], {-0}
    39b0:	00001a37 	andeq	r1, r0, r7, lsr sl
    39b4:	20003ce8 	andcs	r3, r0, r8, ror #25
    39b8:	00000028 	andeq	r0, r0, r8, lsr #32
    39bc:	000012d2 	ldrdeq	r1, [r0], -r2
    39c0:	05020c02 	streq	r0, [r2, #-3074]	; 0xfffff3fe
    39c4:	0000004e 	andeq	r0, r0, lr, asr #32
    39c8:	00035b03 	andeq	r5, r3, r3, lsl #22
    39cc:	4e070200 	cdpmi	2, 0, cr0, cr7, cr0, {0}
    39d0:	00000000 	andeq	r0, r0, r0
    39d4:	00071903 	andeq	r1, r7, r3, lsl #18
    39d8:	4e080200 	cdpmi	2, 0, cr0, cr8, cr0, {0}
    39dc:	04000000 	streq	r0, [r0], #-0
    39e0:	00191803 	andseq	r1, r9, r3, lsl #16
    39e4:	55090200 	strpl	r0, [r9, #-512]	; 0xfffffe00
    39e8:	08000000 	stmdaeq	r0, {}	; <UNPREDICTABLE>
    39ec:	07040400 	streq	r0, [r4, -r0, lsl #8]
    39f0:	00000389 	andeq	r0, r0, r9, lsl #7
    39f4:	005b0405 	subseq	r0, fp, r5, lsl #8
    39f8:	01040000 	mrseq	r0, (UNDEF: 4)
    39fc:	0004d308 	andeq	sp, r4, r8, lsl #6
    3a00:	1a6a0600 	bne	1a85208 <startup-0x1e57adf8>
    3a04:	0a020000 	beq	83a0c <startup-0x1ff7c5f4>
    3a08:	00000021 	andeq	r0, r0, r1, lsr #32
    3a0c:	00003407 	andeq	r3, r0, r7, lsl #8
    3a10:	06030c00 	streq	r0, [r3], -r0, lsl #24
    3a14:	0000009e 	muleq	r0, lr, r0
    3a18:	0005c903 	andeq	ip, r5, r3, lsl #18
    3a1c:	9e070300 	cdpls	3, 0, cr0, cr7, cr0, {0}
    3a20:	00000000 	andeq	r0, r0, r0
    3a24:	00003b03 	andeq	r3, r0, r3, lsl #22
    3a28:	9e080300 	cdpls	3, 0, cr0, cr8, cr0, {0}
    3a2c:	04000000 	streq	r0, [r0], #-0
    3a30:	00003003 	andeq	r3, r0, r3
    3a34:	9e090300 	cdpls	3, 0, cr0, cr9, cr0, {0}
    3a38:	08000000 	stmdaeq	r0, {}	; <UNPREDICTABLE>
    3a3c:	62040500 	andvs	r0, r4, #0, 10
    3a40:	06000000 	streq	r0, [r0], -r0
    3a44:	00001628 	andeq	r1, r0, r8, lsr #12
    3a48:	006d0a03 	rsbeq	r0, sp, r3, lsl #20
    3a4c:	2c080000 	stccs	0, cr0, [r8], {-0}
    3a50:	0100001a 	tsteq	r0, sl, lsl r0
    3a54:	003ce803 	eorseq	lr, ip, r3, lsl #16
    3a58:	00002820 	andeq	r2, r0, r0, lsr #16
    3a5c:	fd9c0100 	ldc2	1, cr0, [ip]
    3a60:	09000000 	stmdbeq	r0, {}	; <UNPREDICTABLE>
    3a64:	00001a31 	andeq	r1, r0, r1, lsr sl
    3a68:	00fd0301 	rscseq	r0, sp, r1, lsl #6
    3a6c:	91020000 	mrsls	r0, (UNDEF: 2)
    3a70:	05c90974 	strbeq	r0, [r9, #2420]	; 0x974
    3a74:	03010000 	movweq	r0, #4096	; 0x1000
    3a78:	0000009e 	muleq	r0, lr, r0
    3a7c:	09709102 	ldmdbeq	r0!, {r1, r8, ip, pc}^
    3a80:	0000003b 	andeq	r0, r0, fp, lsr r0
    3a84:	009e0301 	addseq	r0, lr, r1, lsl #6
    3a88:	91020000 	mrsls	r0, (UNDEF: 2)
    3a8c:	0030096c 	eorseq	r0, r0, ip, ror #18
    3a90:	03010000 	movweq	r0, #4096	; 0x1000
    3a94:	0000009e 	muleq	r0, lr, r0
    3a98:	00689102 	rsbeq	r9, r8, r2, lsl #2
    3a9c:	00a40405 	adceq	r0, r4, r5, lsl #8
    3aa0:	c3000000 	movwgt	r0, #0
    3aa4:	04000000 	streq	r0, [r0], #-0
    3aa8:	000c3800 	andeq	r3, ip, r0, lsl #16
    3aac:	9f010400 	svcls	0x00010400
    3ab0:	0c000000 	stceq	0, cr0, [r0], {-0}
    3ab4:	00001a71 	andeq	r1, r0, r1, ror sl
    3ab8:	20003d10 	andcs	r3, r0, r0, lsl sp
    3abc:	00000028 	andeq	r0, r0, r8, lsr #32
    3ac0:	00001348 	andeq	r1, r0, r8, asr #6
    3ac4:	05020c02 	streq	r0, [r2, #-3074]	; 0xfffff3fe
    3ac8:	0000004e 	andeq	r0, r0, lr, asr #32
    3acc:	00035b03 	andeq	r5, r3, r3, lsl #22
    3ad0:	4e070200 	cdpmi	2, 0, cr0, cr7, cr0, {0}
    3ad4:	00000000 	andeq	r0, r0, r0
    3ad8:	00071903 	andeq	r1, r7, r3, lsl #18
    3adc:	4e080200 	cdpmi	2, 0, cr0, cr8, cr0, {0}
    3ae0:	04000000 	streq	r0, [r0], #-0
    3ae4:	00191803 	andseq	r1, r9, r3, lsl #16
    3ae8:	55090200 	strpl	r0, [r9, #-512]	; 0xfffffe00
    3aec:	08000000 	stmdaeq	r0, {}	; <UNPREDICTABLE>
    3af0:	07040400 	streq	r0, [r4, -r0, lsl #8]
    3af4:	00000389 	andeq	r0, r0, r9, lsl #7
    3af8:	005b0405 	subseq	r0, fp, r5, lsl #8
    3afc:	01040000 	mrseq	r0, (UNDEF: 4)
    3b00:	0004d308 	andeq	sp, r4, r8, lsl #6
    3b04:	1a6a0600 	bne	1a8530c <startup-0x1e57acf4>
    3b08:	0a020000 	beq	83b10 <startup-0x1ff7c4f0>
    3b0c:	00000021 	andeq	r0, r0, r1, lsr #32
    3b10:	001a6507 	andseq	r6, sl, r7, lsl #10
    3b14:	10030100 	andne	r0, r3, r0, lsl #2
    3b18:	2820003d 	stmdacs	r0!, {r0, r2, r3, r4, r5}
    3b1c:	01000000 	mrseq	r0, (UNDEF: 0)
    3b20:	0000b99c 	muleq	r0, ip, r9
    3b24:	00730800 	rsbseq	r0, r3, r0, lsl #16
    3b28:	00b90301 	adcseq	r0, r9, r1, lsl #6
    3b2c:	91020000 	mrsls	r0, (UNDEF: 2)
    3b30:	19180974 	ldmdbne	r8, {r2, r4, r5, r6, r8, fp}
    3b34:	03010000 	movweq	r0, #4096	; 0x1000
    3b38:	00000055 	andeq	r0, r0, r5, asr r0
    3b3c:	09709102 	ldmdbeq	r0!, {r1, r8, ip, pc}^
    3b40:	0000035b 	andeq	r0, r0, fp, asr r3
    3b44:	00bf0301 	adcseq	r0, pc, r1, lsl #6
    3b48:	91020000 	mrsls	r0, (UNDEF: 2)
    3b4c:	0719096c 	ldreq	r0, [r9, -ip, ror #18]
    3b50:	03010000 	movweq	r0, #4096	; 0x1000
    3b54:	000000bf 	strheq	r0, [r0], -pc	; <UNPREDICTABLE>
    3b58:	00689102 	rsbeq	r9, r8, r2, lsl #2
    3b5c:	00620405 	rsbeq	r0, r2, r5, lsl #8
    3b60:	040a0000 	streq	r0, [sl], #-0
    3b64:	746e6905 	strbtvc	r6, [lr], #-2309	; 0xfffff6fb
    3b68:	01350000 	teqeq	r5, r0
    3b6c:	00040000 	andeq	r0, r4, r0
    3b70:	00000cca 	andeq	r0, r0, sl, asr #25
    3b74:	009f0104 	addseq	r0, pc, r4, lsl #2
    3b78:	d70c0000 	strle	r0, [ip, -r0]
    3b7c:	3800001a 	stmdacc	r0, {r1, r3, r4}
    3b80:	6c20003d 	stcvs	0, cr0, [r0], #-244	; 0xffffff0c
    3b84:	b4000000 	strlt	r0, [r0], #-0
    3b88:	02000013 	andeq	r0, r0, #19
    3b8c:	ae130218 	mrcge	2, 0, r0, cr3, cr8, {0}
    3b90:	03000000 	movweq	r0, #0
    3b94:	00001aa0 	andeq	r1, r0, r0, lsr #21
    3b98:	00ae1402 	adceq	r1, lr, r2, lsl #8
    3b9c:	03000000 	movweq	r0, #0
    3ba0:	00001ab9 			; <UNDEFINED> instruction: 0x00001ab9
    3ba4:	00b51502 	adcseq	r1, r5, r2, lsl #10
    3ba8:	03040000 	movweq	r0, #16384	; 0x4000
    3bac:	00001b04 	andeq	r1, r0, r4, lsl #22
    3bb0:	00b51602 	adcseq	r1, r5, r2, lsl #12
    3bb4:	03060000 	movweq	r0, #24576	; 0x6000
    3bb8:	00001b26 	andeq	r1, r0, r6, lsr #22
    3bbc:	00ae1702 	adceq	r1, lr, r2, lsl #14
    3bc0:	03080000 	movweq	r0, #32768	; 0x8000
    3bc4:	00001ac5 	andeq	r1, r0, r5, asr #21
    3bc8:	00ae1802 	adceq	r1, lr, r2, lsl #16
    3bcc:	030c0000 	movweq	r0, #49152	; 0xc000
    3bd0:	00001b36 	andeq	r1, r0, r6, lsr fp
    3bd4:	00bc1902 	adcseq	r1, ip, r2, lsl #18
    3bd8:	03100000 	tsteq	r0, #0
    3bdc:	00001b2e 	andeq	r1, r0, lr, lsr #22
    3be0:	00bc1a02 	adcseq	r1, ip, r2, lsl #20
    3be4:	03110000 	tsteq	r1, #0
    3be8:	00001acb 	andeq	r1, r0, fp, asr #21
    3bec:	00b51b02 	adcseq	r1, r5, r2, lsl #22
    3bf0:	03120000 	tsteq	r2, #0
    3bf4:	00001b1f 	andeq	r1, r0, pc, lsl fp
    3bf8:	00bc1c02 	adcseq	r1, ip, r2, lsl #24
    3bfc:	03140000 	tsteq	r4, #0
    3c00:	00001ab1 			; <UNDEFINED> instruction: 0x00001ab1
    3c04:	00bc1d02 	adcseq	r1, ip, r2, lsl #26
    3c08:	03150000 	tsteq	r5, #0
    3c0c:	00001b3d 	andeq	r1, r0, sp, lsr fp
    3c10:	00b51e02 	adcseq	r1, r5, r2, lsl #28
    3c14:	00160000 	andseq	r0, r6, r0
    3c18:	89070404 	stmdbhi	r7, {r2, sl}
    3c1c:	04000003 	streq	r0, [r0], #-3
    3c20:	03830702 	orreq	r0, r3, #524288	; 0x80000
    3c24:	01040000 	mrseq	r0, (UNDEF: 4)
    3c28:	0004d308 	andeq	sp, r4, r8, lsl #6
    3c2c:	1ac00500 	bne	ff005034 <firstTime.4040+0xdeff5bf0>
    3c30:	1f020000 	svcne	0x00020000
    3c34:	00000021 	andeq	r0, r0, r1, lsr #32
    3c38:	001b0f06 	andseq	r0, fp, r6, lsl #30
    3c3c:	040e0100 	streq	r0, [lr], #-256	; 0xffffff00
    3c40:	70000001 	andvc	r0, r0, r1
    3c44:	3420003d 	strtcc	r0, [r0], #-61	; 0xffffffc3
    3c48:	01000000 	mrseq	r0, (UNDEF: 0)
    3c4c:	0001049c 	muleq	r1, ip, r4
    3c50:	69620700 	stmdbvs	r2!, {r8, r9, sl}^
    3c54:	0e010074 	mcreq	0, 0, r0, cr1, cr4, {3}
    3c58:	00000104 	andeq	r0, r0, r4, lsl #2
    3c5c:	08649102 	stmdaeq	r4!, {r1, r8, ip, pc}^
    3c60:	004c4944 	subeq	r4, ip, r4, asr #18
    3c64:	010b0f01 	tsteq	fp, r1, lsl #30
    3c68:	91020000 	mrsls	r0, (UNDEF: 2)
    3c6c:	0409006f 	streq	r0, [r9], #-111	; 0xffffff91
    3c70:	746e6905 	strbtvc	r6, [lr], #-2309	; 0xfffff6fb
    3c74:	08010400 	stmdaeq	r1, {sl}
    3c78:	000004dc 	ldrdeq	r0, [r0], -ip
    3c7c:	001b490a 	andseq	r4, fp, sl, lsl #18
    3c80:	0b080100 	bleq	204088 <startup-0x1fdfbf78>
    3c84:	50000001 	andpl	r0, r0, r1
    3c88:	2020003d 	eorcs	r0, r0, sp, lsr r0
    3c8c:	01000000 	mrseq	r0, (UNDEF: 0)
    3c90:	1aa60b9c 	bne	fe986b08 <firstTime.4040+0xde9776c4>
    3c94:	04010000 	streq	r0, [r1], #-0
    3c98:	20003d38 	andcs	r3, r0, r8, lsr sp
    3c9c:	00000018 	andeq	r0, r0, r8, lsl r0
    3ca0:	ed009c01 	stc	12, cr9, [r0, #-4]
    3ca4:	04000004 	streq	r0, [r0], #-4
    3ca8:	000d8700 	andeq	r8, sp, r0, lsl #14
    3cac:	9f010400 	svcls	0x00010400
    3cb0:	0c000000 	stceq	0, cr0, [r0], {-0}
    3cb4:	00001c8e 	andeq	r1, r0, lr, lsl #25
    3cb8:	20003da4 	andcs	r3, r0, r4, lsr #27
    3cbc:	00000520 	andeq	r0, r0, r0, lsr #10
    3cc0:	00001424 	andeq	r1, r0, r4, lsr #8
    3cc4:	05020c02 	streq	r0, [r2, #-3074]	; 0xfffff3fe
    3cc8:	0000004e 	andeq	r0, r0, lr, asr #32
    3ccc:	00035b03 	andeq	r5, r3, r3, lsl #22
    3cd0:	4e070200 	cdpmi	2, 0, cr0, cr7, cr0, {0}
    3cd4:	00000000 	andeq	r0, r0, r0
    3cd8:	00071903 	andeq	r1, r7, r3, lsl #18
    3cdc:	4e080200 	cdpmi	2, 0, cr0, cr8, cr0, {0}
    3ce0:	04000000 	streq	r0, [r0], #-0
    3ce4:	00191803 	andseq	r1, r9, r3, lsl #16
    3ce8:	55090200 	strpl	r0, [r9, #-512]	; 0xfffffe00
    3cec:	08000000 	stmdaeq	r0, {}	; <UNPREDICTABLE>
    3cf0:	07040400 	streq	r0, [r4, -r0, lsl #8]
    3cf4:	00000389 	andeq	r0, r0, r9, lsl #7
    3cf8:	005b0405 	subseq	r0, fp, r5, lsl #8
    3cfc:	01040000 	mrseq	r0, (UNDEF: 4)
    3d00:	0004d308 	andeq	sp, r4, r8, lsl #6
    3d04:	1a6a0600 	bne	1a8550c <startup-0x1e57aaf4>
    3d08:	0a020000 	beq	83d10 <startup-0x1ff7c2f0>
    3d0c:	00000021 	andeq	r0, r0, r1, lsr #32
    3d10:	00003407 	andeq	r3, r0, r7, lsl #8
    3d14:	06030c00 	streq	r0, [r3], -r0, lsl #24
    3d18:	0000009e 	muleq	r0, lr, r0
    3d1c:	0005c903 	andeq	ip, r5, r3, lsl #18
    3d20:	9e070300 	cdpls	3, 0, cr0, cr7, cr0, {0}
    3d24:	00000000 	andeq	r0, r0, r0
    3d28:	00003b03 	andeq	r3, r0, r3, lsl #22
    3d2c:	9e080300 	cdpls	3, 0, cr0, cr8, cr0, {0}
    3d30:	04000000 	streq	r0, [r0], #-0
    3d34:	00003003 	andeq	r3, r0, r3
    3d38:	9e090300 	cdpls	3, 0, cr0, cr9, cr0, {0}
    3d3c:	08000000 	stmdaeq	r0, {}	; <UNPREDICTABLE>
    3d40:	62040500 	andvs	r0, r4, #0, 10
    3d44:	06000000 	streq	r0, [r0], -r0
    3d48:	00001628 	andeq	r1, r0, r8, lsr #12
    3d4c:	006d0a03 	rsbeq	r0, sp, r3, lsl #20
    3d50:	de070000 	cdple	0, 0, cr0, cr7, cr0, {0}
    3d54:	24000006 	strcs	r0, [r0], #-6
    3d58:	01280604 			; <UNDEFINED> instruction: 0x01280604
    3d5c:	61030000 	mrsvs	r0, (UNDEF: 3)
    3d60:	04000004 	streq	r0, [r0], #-4
    3d64:	00012807 	andeq	r2, r1, r7, lsl #16
    3d68:	ea030000 	b	c3d70 <startup-0x1ff3c290>
    3d6c:	04000006 	streq	r0, [r0], #-6
    3d70:	00012e08 	andeq	r2, r1, r8, lsl #28
    3d74:	3a030400 	bcc	c4d7c <startup-0x1ff3b284>
    3d78:	04000006 	streq	r0, [r0], #-6
    3d7c:	00012e09 	andeq	r2, r1, r9, lsl #28
    3d80:	66030800 	strvs	r0, [r3], -r0, lsl #16
    3d84:	04000006 	streq	r0, [r0], #-6
    3d88:	0001460c 	andeq	r4, r1, ip, lsl #12
    3d8c:	42030c00 	andmi	r0, r3, #0, 24
    3d90:	04000003 	streq	r0, [r0], #-3
    3d94:	0001460d 	andeq	r4, r1, sp, lsl #12
    3d98:	73031000 	movwvc	r1, #12288	; 0x3000
    3d9c:	04000004 	streq	r0, [r0], #-4
    3da0:	00012e10 	andeq	r2, r1, r0, lsl lr
    3da4:	70031400 	andvc	r1, r3, r0, lsl #8
    3da8:	04000000 	streq	r0, [r0], #-0
    3dac:	00012e11 	andeq	r2, r1, r1, lsl lr
    3db0:	d9031800 	stmdble	r3, {fp, ip}
    3db4:	04000003 	streq	r0, [r0], #-3
    3db8:	00012e12 	andeq	r2, r1, r2, lsl lr
    3dbc:	e9031c00 	stmdb	r3, {sl, fp, ip}
    3dc0:	04000003 	streq	r0, [r0], #-3
    3dc4:	00012e13 	andeq	r2, r1, r3, lsl lr
    3dc8:	05002000 	streq	r2, [r0, #-0]
    3dcc:	0000a404 	andeq	sl, r0, r4, lsl #8
    3dd0:	05040800 	streq	r0, [r4, #-2048]	; 0xfffff800
    3dd4:	00746e69 	rsbseq	r6, r4, r9, ror #28
    3dd8:	00014009 	andeq	r4, r1, r9
    3ddc:	01400a00 	cmpeq	r0, r0, lsl #20
    3de0:	05000000 	streq	r0, [r0, #-0]
    3de4:	0000af04 	andeq	sl, r0, r4, lsl #30
    3de8:	35040500 	strcc	r0, [r4, #-1280]	; 0xfffffb00
    3dec:	06000001 	streq	r0, [r0], -r1
    3df0:	000006df 	ldrdeq	r0, [r0], -pc	; <UNPREDICTABLE>
    3df4:	00af1504 	adceq	r1, pc, r4, lsl #10
    3df8:	620b0000 	andvs	r0, fp, #0
    3dfc:	62000001 	andvs	r0, r0, #1
    3e00:	0c000001 	stceq	0, cr0, [r0], {1}
    3e04:	4c040500 	cfstr32mi	mvfx0, [r4], {-0}
    3e08:	0d000001 	stceq	0, cr0, [r0, #-4]
    3e0c:	00000556 	andeq	r0, r0, r6, asr r5
    3e10:	01571c04 	cmpeq	r7, r4, lsl #24
    3e14:	240d0000 	strcs	r0, [sp], #-0
    3e18:	04000004 	streq	r0, [r0], #-4
    3e1c:	00012e1d 	andeq	r2, r1, sp, lsl lr
    3e20:	06a20600 	strteq	r0, [r2], r0, lsl #12
    3e24:	24050000 	strcs	r0, [r5], #-0
    3e28:	0000005b 	andeq	r0, r0, fp, asr r0
    3e2c:	00017e0b 	andeq	r7, r1, fp, lsl #28
    3e30:	00019a00 	andeq	r9, r1, r0, lsl #20
    3e34:	019a0e00 	orrseq	r0, sl, r0, lsl #28
    3e38:	03ff0000 	mvnseq	r0, #0
    3e3c:	07040400 	streq	r0, [r4, -r0, lsl #8]
    3e40:	00000406 	andeq	r0, r0, r6, lsl #8
    3e44:	00184e0d 	andseq	r4, r8, sp, lsl #28
    3e48:	892b0500 	stmdbhi	fp!, {r8, sl}
    3e4c:	0d000001 	stceq	0, cr0, [r0, #-4]
    3e50:	00000248 	andeq	r0, r0, r8, asr #4
    3e54:	01892c05 	orreq	r2, r9, r5, lsl #24
    3e58:	e10d0000 	mrs	r0, (UNDEF: 13)
    3e5c:	05000004 	streq	r0, [r0, #-4]
    3e60:	0001892d 	andeq	r8, r1, sp, lsr #18
    3e64:	036b0d00 	cmneq	fp, #0, 26
    3e68:	2e050000 	cdpcs	0, 0, cr0, cr5, cr0, {0}
    3e6c:	00000189 	andeq	r0, r0, r9, lsl #3
    3e70:	0002d00d 	andeq	sp, r2, sp
    3e74:	892f0500 	stmdbhi	pc!, {r8, sl}	; <UNPREDICTABLE>
    3e78:	0d000001 	stceq	0, cr0, [r0, #-4]
    3e7c:	000006c0 	andeq	r0, r0, r0, asr #13
    3e80:	01893005 	orreq	r3, r9, r5
    3e84:	b00d0000 	andlt	r0, sp, r0
    3e88:	05000006 	streq	r0, [r0, #-6]
    3e8c:	00018931 	andeq	r8, r1, r1, lsr r9
    3e90:	1c140f00 	ldcne	15, cr0, [r4], {-0}
    3e94:	e4010000 	str	r0, [r1], #-0
    3e98:	20004240 	andcs	r4, r0, r0, asr #4
    3e9c:	00000084 	andeq	r0, r0, r4, lsl #1
    3ea0:	022c9c01 	eoreq	r9, ip, #256	; 0x100
    3ea4:	73100000 	tstvc	r0, #0
    3ea8:	2ce50100 	stfcse	f0, [r5]
    3eac:	02000002 	andeq	r0, r0, #2
    3eb0:	ef116c91 	svc	0x00116c91
    3eb4:	0100001b 	tsteq	r0, fp, lsl r0
    3eb8:	000239e6 	andeq	r3, r2, r6, ror #19
    3ebc:	5c910200 	lfmpl	f0, 4, [r1], {0}
    3ec0:	001bf511 	andseq	pc, fp, r1, lsl r5	; <UNPREDICTABLE>
    3ec4:	49e70100 	stmibmi	r7!, {r8}^
    3ec8:	02000002 	andeq	r0, r0, #2
    3ecc:	05004891 	streq	r4, [r0, #-2193]	; 0xfffff76f
    3ed0:	00023204 	andeq	r3, r2, r4, lsl #4
    3ed4:	08010400 	stmdaeq	r1, {sl}
    3ed8:	000004dc 	ldrdeq	r0, [r0], -ip
    3edc:	0002320b 	andeq	r3, r2, fp, lsl #4
    3ee0:	00024900 	andeq	r4, r2, r0, lsl #18
    3ee4:	019a1200 	orrseq	r1, sl, r0, lsl #4
    3ee8:	000c0000 	andeq	r0, ip, r0
    3eec:	0002320b 	andeq	r3, r2, fp, lsl #4
    3ef0:	00025900 	andeq	r5, r2, r0, lsl #18
    3ef4:	019a1200 	orrseq	r1, sl, r0, lsl #4
    3ef8:	00130000 	andseq	r0, r3, r0
    3efc:	001ba50f 	andseq	sl, fp, pc, lsl #10
    3f00:	b2cc0100 	sbclt	r0, ip, #0, 2
    3f04:	8e200041 	cdphi	0, 2, cr0, cr0, cr1, {2}
    3f08:	01000000 	mrseq	r0, (UNDEF: 0)
    3f0c:	0002b39c 	muleq	r2, ip, r3
    3f10:	1cdd1300 	ldclne	3, cr1, [sp], {0}
    3f14:	cc010000 	stcgt	0, cr0, [r1], {-0}
    3f18:	0000022c 	andeq	r0, r0, ip, lsr #4
    3f1c:	136c9102 	cmnne	ip, #-2147483648	; 0x80000000
    3f20:	00000286 	andeq	r0, r0, r6, lsl #5
    3f24:	022ccc01 	eoreq	ip, ip, #256	; 0x100
    3f28:	91020000 	mrsls	r0, (UNDEF: 2)
    3f2c:	1c871368 	stcne	3, cr1, [r7], {104}	; 0x68
    3f30:	cc010000 	stcgt	0, cr0, [r1], {-0}
    3f34:	0000012e 	andeq	r0, r0, lr, lsr #2
    3f38:	13649102 	cmnne	r4, #-2147483648	; 0x80000000
    3f3c:	00001b63 	andeq	r1, r0, r3, ror #22
    3f40:	012ecc01 			; <UNDEFINED> instruction: 0x012ecc01
    3f44:	91020000 	mrsls	r0, (UNDEF: 2)
    3f48:	00691060 	rsbeq	r1, r9, r0, rrx
    3f4c:	012ed001 			; <UNDEFINED> instruction: 0x012ed001
    3f50:	91020000 	mrsls	r0, (UNDEF: 2)
    3f54:	460f0074 			; <UNDEFINED> instruction: 0x460f0074
    3f58:	0100001c 	tsteq	r0, ip, lsl r0
    3f5c:	004154bd 	strheq	r5, [r1], #-77	; 0xffffffb3
    3f60:	00005e20 	andeq	r5, r0, r0, lsr #28
    3f64:	e59c0100 	ldr	r0, [ip, #256]	; 0x100
    3f68:	13000002 	movwne	r0, #2
    3f6c:	00001cdd 	ldrdeq	r1, [r0], -sp
    3f70:	022cbd01 	eoreq	fp, ip, #1, 26	; 0x40
    3f74:	91020000 	mrsls	r0, (UNDEF: 2)
    3f78:	02861374 	addeq	r1, r6, #116, 6	; 0xd0000001
    3f7c:	bd010000 	stclt	0, cr0, [r1, #-0]
    3f80:	0000022c 	andeq	r0, r0, ip, lsr #4
    3f84:	00709102 	rsbseq	r9, r0, r2, lsl #2
    3f88:	001b990f 	andseq	r9, fp, pc, lsl #18
    3f8c:	eaad0100 	b	feb44394 <firstTime.4040+0xdeb34f50>
    3f90:	6a200040 	bvs	804098 <startup-0x1f7fbf68>
    3f94:	01000000 	mrseq	r0, (UNDEF: 0)
    3f98:	0003159c 	muleq	r3, ip, r5
    3f9c:	00731000 	rsbseq	r1, r3, r0
    3fa0:	022cae01 	eoreq	sl, ip, #1, 28
    3fa4:	91020000 	mrsls	r0, (UNDEF: 2)
    3fa8:	18d4116c 	ldmne	r4, {r2, r3, r5, r6, r8, ip}^
    3fac:	af010000 	svcge	0x00010000
    3fb0:	00000315 	andeq	r0, r0, r5, lsl r3
    3fb4:	00549102 	subseq	r9, r4, r2, lsl #2
    3fb8:	0002320b 	andeq	r3, r2, fp, lsl #4
    3fbc:	00032500 	andeq	r2, r3, r0, lsl #10
    3fc0:	019a1200 	orrseq	r1, sl, r0, lsl #4
    3fc4:	00140000 	andseq	r0, r4, r0
    3fc8:	001b7a14 	andseq	r7, fp, r4, lsl sl
    3fcc:	d8a80100 	stmiale	r8!, {r8}
    3fd0:	12200040 	eorne	r0, r0, #64	; 0x40
    3fd4:	01000000 	mrseq	r0, (UNDEF: 0)
    3fd8:	1b52159c 	blne	1489650 <startup-0x1eb769b0>
    3fdc:	9f010000 	svcls	0x00010000
    3fe0:	200040be 	strhcs	r4, [r0], -lr
    3fe4:	0000001a 	andeq	r0, r0, sl, lsl r0
    3fe8:	87149c01 	ldrhi	r9, [r4, -r1, lsl #24]
    3fec:	0100001b 	tsteq	r0, fp, lsl r0
    3ff0:	00402483 	subeq	r2, r0, r3, lsl #9
    3ff4:	00009a20 	andeq	r9, r0, r0, lsr #20
    3ff8:	0f9c0100 	svceq	0x009c0100
    3ffc:	00001c52 	andeq	r1, r0, r2, asr ip
    4000:	3fd47b01 	svccc	0x00d47b01
    4004:	00502000 	subseq	r2, r0, r0
    4008:	9c010000 	stcls	0, cr0, [r1], {-0}
    400c:	00000398 	muleq	r0, r8, r3
    4010:	776f7216 			; <UNDEFINED> instruction: 0x776f7216
    4014:	5b7b0100 	blpl	1ec441c <startup-0x1e13bbe4>
    4018:	02000000 	andeq	r0, r0, #0
    401c:	92136f91 	andsls	r6, r3, #580	; 0x244
    4020:	0100001b 	tsteq	r0, fp, lsl r0
    4024:	00005b7b 	andeq	r5, r0, fp, ror fp
    4028:	6e910200 	cdpvs	2, 9, cr0, cr1, cr0, {0}
    402c:	001bfb11 	andseq	pc, fp, r1, lsl fp	; <UNPREDICTABLE>
    4030:	5b7c0100 	blpl	1f04438 <startup-0x1e0fbbc8>
    4034:	02000000 	andeq	r0, r0, #0
    4038:	0f007791 	svceq	0x00007791
    403c:	00001c76 	andeq	r1, r0, r6, ror ip
    4040:	3f987401 	svccc	0x00987401
    4044:	003c2000 	eorseq	r2, ip, r0
    4048:	9c010000 	stcls	0, cr0, [r1], {-0}
    404c:	000003ba 			; <UNDEFINED> instruction: 0x000003ba
    4050:	01006316 	tsteq	r0, r6, lsl r3
    4054:	00005b74 	andeq	r5, r0, r4, ror fp
    4058:	77910200 	ldrvc	r0, [r1, r0, lsl #4]
    405c:	1bb61700 	blne	fed89c64 <firstTime.4040+0xded7a820>
    4060:	6a010000 	bvs	44068 <startup-0x1ffbbf98>
    4064:	0000005b 	andeq	r0, r0, fp, asr r0
    4068:	20003f64 	andcs	r3, r0, r4, ror #30
    406c:	00000034 	andeq	r0, r0, r4, lsr r0
    4070:	03e09c01 	mvneq	r9, #256	; 0x100
    4074:	63100000 	tstvs	r0, #0
    4078:	5b6b0100 	blpl	1ac4480 <startup-0x1e53bb80>
    407c:	02000000 	andeq	r0, r0, #0
    4080:	0f007791 	svceq	0x00007791
    4084:	00001c5f 	andeq	r1, r0, pc, asr ip
    4088:	3f346301 	svccc	0x00346301
    408c:	00302000 	eorseq	r2, r0, r0
    4090:	9c010000 	stcls	0, cr0, [r1], {-0}
    4094:	00000402 	andeq	r0, r0, r2, lsl #8
    4098:	01006316 	tsteq	r0, r6, lsl r3
    409c:	00005b63 	andeq	r5, r0, r3, ror #22
    40a0:	77910200 	ldrvc	r0, [r1, r0, lsl #4]
    40a4:	1b6a1700 	blne	1a89cac <startup-0x1e576354>
    40a8:	57010000 	strpl	r0, [r1, -r0]
    40ac:	0000005b 	andeq	r0, r0, fp, asr r0
    40b0:	20003ee0 	andcs	r3, r0, r0, ror #29
    40b4:	00000054 	andeq	r0, r0, r4, asr r0
    40b8:	04299c01 	strteq	r9, [r9], #-3073	; 0xfffff3ff
    40bc:	72100000 	andsvc	r0, r0, #0
    40c0:	5c010076 	stcpl	0, cr0, [r1], {118}	; 0x76
    40c4:	0000005b 	andeq	r0, r0, fp, asr r0
    40c8:	006f9102 	rsbeq	r9, pc, r2, lsl #2
    40cc:	001c1f17 	andseq	r1, ip, r7, lsl pc
    40d0:	5b4b0100 	blpl	12c44d8 <startup-0x1ed3bb28>
    40d4:	8c000000 	stchi	0, cr0, [r0], {-0}
    40d8:	5420003e 	strtpl	r0, [r0], #-62	; 0xffffffc2
    40dc:	01000000 	mrseq	r0, (UNDEF: 0)
    40e0:	0004509c 	muleq	r4, ip, r0
    40e4:	76721000 	ldrbtvc	r1, [r2], -r0
    40e8:	5b500100 	blpl	14044f0 <startup-0x1ebfbb10>
    40ec:	02000000 	andeq	r0, r0, #0
    40f0:	0f006f91 	svceq	0x00006f91
    40f4:	00001c03 	andeq	r1, r0, r3, lsl #24
    40f8:	3e624501 	cdpcc	5, 6, cr4, cr2, cr1, {0}
    40fc:	002a2000 	eoreq	r2, sl, r0
    4100:	9c010000 	stcls	0, cr0, [r1], {-0}
    4104:	00000474 	andeq	r0, r0, r4, ror r4
    4108:	00191813 	andseq	r1, r9, r3, lsl r8
    410c:	5b450100 	blpl	1144514 <startup-0x1eebbaec>
    4110:	02000000 	andeq	r0, r0, #0
    4114:	0f007791 	svceq	0x00007791
    4118:	00001bdf 	ldrdeq	r1, [r0], -pc	; <UNPREDICTABLE>
    411c:	3e383f01 	cdpcc	15, 3, cr3, cr8, cr1, {0}
    4120:	002a2000 	eoreq	r2, sl, r0
    4124:	9c010000 	stcls	0, cr0, [r1], {-0}
    4128:	00000498 	muleq	r0, r8, r4
    412c:	00184013 	andseq	r4, r8, r3, lsl r0
    4130:	5b3f0100 	blpl	fc4538 <startup-0x1f03bac8>
    4134:	02000000 	andeq	r0, r0, #0
    4138:	18007791 	stmdane	r0, {r0, r4, r7, r8, r9, sl, ip, sp, lr}
    413c:	00001c31 	andeq	r1, r0, r1, lsr ip
    4140:	3de83701 	stclcc	7, cr3, [r8, #4]!
    4144:	00502000 	subseq	r2, r0, r0
    4148:	9c010000 	stcls	0, cr0, [r1], {-0}
    414c:	000004c6 	andeq	r0, r0, r6, asr #9
    4150:	01007816 	tsteq	r0, r6, lsl r8
    4154:	00005b37 	andeq	r5, r0, r7, lsr fp
    4158:	6f910200 	svcvs	0x00910200
    415c:	01006310 	tsteq	r0, r0, lsl r3
    4160:	00005b39 	andeq	r5, r0, r9, lsr fp
    4164:	77910200 	ldrvc	r0, [r1, r0, lsl #4]
    4168:	1bcc1900 	blne	ff30a570 <firstTime.4040+0xdf2fb12c>
    416c:	2f010000 	svccs	0x00010000
    4170:	20003da4 	andcs	r3, r0, r4, lsr #27
    4174:	00000044 	andeq	r0, r0, r4, asr #32
    4178:	78169c01 	ldmdavc	r6, {r0, sl, fp, ip, pc}
    417c:	5b2f0100 	blpl	bc4584 <startup-0x1f43ba7c>
    4180:	02000000 	andeq	r0, r0, #0
    4184:	63106f91 	tstvs	r0, #580	; 0x244
    4188:	5b310100 	blpl	c44590 <startup-0x1f3bba70>
    418c:	02000000 	andeq	r0, r0, #0
    4190:	00007791 	muleq	r0, r1, r7
    4194:	00000140 	andeq	r0, r0, r0, asr #2
    4198:	0f050004 	svceq	0x00050004
    419c:	01040000 	mrseq	r0, (UNDEF: 4)
    41a0:	0000009f 	muleq	r0, pc, r0	; <UNPREDICTABLE>
    41a4:	001ce20c 	andseq	lr, ip, ip, lsl #4
    41a8:	0042c400 	subeq	ip, r2, r0, lsl #8
    41ac:	00009420 	andeq	r9, r0, r0, lsr #8
    41b0:	00158200 	andseq	r8, r5, r0, lsl #4
    41b4:	06980200 	ldreq	r0, [r8], r0, lsl #4
    41b8:	02140000 	andseq	r0, r4, #0
    41bc:	00006a04 	andeq	r6, r0, r4, lsl #20
    41c0:	1cdd0300 	ldclne	3, cr0, [sp], {0}
    41c4:	05020000 	streq	r0, [r2, #-0]
    41c8:	0000006a 	andeq	r0, r0, sl, rrx
    41cc:	02860300 	addeq	r0, r6, #0, 6
    41d0:	06020000 	streq	r0, [r2], -r0
    41d4:	0000006a 	andeq	r0, r0, sl, rrx
    41d8:	03f30304 	mvnseq	r0, #4, 6	; 0x10000000
    41dc:	08020000 	stmdaeq	r2, {}	; <UNPREDICTABLE>
    41e0:	00000077 	andeq	r0, r0, r7, ror r0
    41e4:	03e30308 	mvneq	r0, #8, 6	; 0x20000000
    41e8:	09020000 	stmdbeq	r2, {}	; <UNPREDICTABLE>
    41ec:	00000077 	andeq	r0, r0, r7, ror r0
    41f0:	028b030c 	addeq	r0, fp, #12, 6	; 0x30000000
    41f4:	0c020000 	stceq	0, cr0, [r2], {-0}
    41f8:	00000094 	muleq	r0, r4, r0
    41fc:	04040010 	streq	r0, [r4], #-16
    4200:	00000070 	andeq	r0, r0, r0, ror r0
    4204:	dc080105 	stfles	f0, [r8], {5}
    4208:	06000004 	streq	r0, [r0], -r4
    420c:	6e690504 	cdpvs	5, 6, cr0, cr9, cr4, {0}
    4210:	8e070074 	mcrhi	0, 0, r0, cr7, cr4, {3}
    4214:	08000000 	stmdaeq	r0, {}	; <UNPREDICTABLE>
    4218:	0000008e 	andeq	r0, r0, lr, lsl #1
    421c:	00007708 	andeq	r7, r0, r8, lsl #14
    4220:	04040000 	streq	r0, [r4], #-0
    4224:	00000021 	andeq	r0, r0, r1, lsr #32
    4228:	007e0404 	rsbseq	r0, lr, r4, lsl #8
    422c:	99090000 	stmdbls	r9, {}	; <UNPREDICTABLE>
    4230:	02000006 	andeq	r0, r0, #6
    4234:	0000210d 	andeq	r2, r0, sp, lsl #2
    4238:	1cc40a00 	vstmiane	r4, {s1-s0}
    423c:	0c010000 	stceq	0, cr0, [r1], {-0}
    4240:	2000431e 	andcs	r4, r0, lr, lsl r3
    4244:	0000003a 	andeq	r0, r0, sl, lsr r0
    4248:	00f39c01 	rscseq	r9, r3, r1, lsl #24
    424c:	6f0b0000 	svcvs	0x000b0000
    4250:	01006a62 	tsteq	r0, r2, ror #20
    4254:	0000f30c 	andeq	pc, r0, ip, lsl #6
    4258:	74910200 	ldrvc	r0, [r1], #512	; 0x200
    425c:	001cdd0c 	andseq	sp, ip, ip, lsl #26
    4260:	6a0c0100 	bvs	304668 <startup-0x1fcfb998>
    4264:	02000000 	andeq	r0, r0, #0
    4268:	860c7091 			; <UNDEFINED> instruction: 0x860c7091
    426c:	01000002 	tsteq	r0, r2
    4270:	00006a0c 	andeq	r6, r0, ip, lsl #20
    4274:	6c910200 	lfmvs	f0, 4, [r1], {0}
    4278:	0003e30c 	andeq	lr, r3, ip, lsl #6
    427c:	770c0100 	strvc	r0, [ip, -r0, lsl #2]
    4280:	02000000 	andeq	r0, r0, #0
    4284:	04006891 	streq	r6, [r0], #-2193	; 0xfffff76f
    4288:	00009a04 	andeq	r9, r0, r4, lsl #20
    428c:	028b0d00 	addeq	r0, fp, #0, 26
    4290:	04010000 	streq	r0, [r1], #-0
    4294:	200042c4 	andcs	r4, r0, r4, asr #5
    4298:	0000005a 	andeq	r0, r0, sl, asr r0
    429c:	820c9c01 	andhi	r9, ip, #256	; 0x100
    42a0:	01000007 	tsteq	r0, r7
    42a4:	0000f304 	andeq	pc, r0, r4, lsl #6
    42a8:	6c910200 	lfmvs	f0, 4, [r1], {0}
    42ac:	001cd30c 	andseq	sp, ip, ip, lsl #6
    42b0:	77040100 	strvc	r0, [r4, -r0, lsl #2]
    42b4:	02000000 	andeq	r0, r0, #0
    42b8:	870e6891 			; <UNDEFINED> instruction: 0x870e6891
    42bc:	0100001c 	tsteq	r0, ip, lsl r0
    42c0:	00007705 	andeq	r7, r0, r5, lsl #14
    42c4:	74910200 	ldrvc	r0, [r1], #512	; 0x200
    42c8:	001b630e 	andseq	r6, fp, lr, lsl #6
    42cc:	77060100 	strvc	r0, [r6, -r0, lsl #2]
    42d0:	02000000 	andeq	r0, r0, #0
    42d4:	00007091 	muleq	r0, r1, r0
    42d8:	000002e0 	andeq	r0, r0, r0, ror #5
    42dc:	0fd00004 	svceq	0x00d00004
    42e0:	01040000 	mrseq	r0, (UNDEF: 4)
    42e4:	0000009f 	muleq	r0, pc, r0	; <UNPREDICTABLE>
    42e8:	001d8f0c 	andseq	r8, sp, ip, lsl #30
    42ec:	00435800 	subeq	r5, r3, r0, lsl #16
    42f0:	0000e820 	andeq	lr, r0, r0, lsr #16
    42f4:	0015fc00 	andseq	pc, r5, r0, lsl #24
    42f8:	020c0200 	andeq	r0, ip, #0, 4
    42fc:	00004e05 	andeq	r4, r0, r5, lsl #28
    4300:	035b0300 	cmpeq	fp, #0, 6
    4304:	07020000 	streq	r0, [r2, -r0]
    4308:	0000004e 	andeq	r0, r0, lr, asr #32
    430c:	07190300 	ldreq	r0, [r9, -r0, lsl #6]
    4310:	08020000 	stmdaeq	r2, {}	; <UNPREDICTABLE>
    4314:	0000004e 	andeq	r0, r0, lr, asr #32
    4318:	19180304 	ldmdbne	r8, {r2, r8, r9}
    431c:	09020000 	stmdbeq	r2, {}	; <UNPREDICTABLE>
    4320:	00000055 	andeq	r0, r0, r5, asr r0
    4324:	04040008 	streq	r0, [r4], #-8
    4328:	00038907 	andeq	r8, r3, r7, lsl #18
    432c:	5b040500 	blpl	105734 <startup-0x1fefa8cc>
    4330:	04000000 	streq	r0, [r0], #-0
    4334:	04d30801 	ldrbeq	r0, [r3], #2049	; 0x801
    4338:	6a060000 	bvs	184340 <startup-0x1fe7bcc0>
    433c:	0200001a 	andeq	r0, r0, #26
    4340:	0000210a 	andeq	r2, r0, sl, lsl #2
    4344:	00340700 	eorseq	r0, r4, r0, lsl #14
    4348:	030c0000 	movweq	r0, #49152	; 0xc000
    434c:	00009e06 	andeq	r9, r0, r6, lsl #28
    4350:	05c90300 	strbeq	r0, [r9, #768]	; 0x300
    4354:	07030000 	streq	r0, [r3, -r0]
    4358:	0000009e 	muleq	r0, lr, r0
    435c:	003b0300 	eorseq	r0, fp, r0, lsl #6
    4360:	08030000 	stmdaeq	r3, {}	; <UNPREDICTABLE>
    4364:	0000009e 	muleq	r0, lr, r0
    4368:	00300304 	eorseq	r0, r0, r4, lsl #6
    436c:	09030000 	stmdbeq	r3, {}	; <UNPREDICTABLE>
    4370:	0000009e 	muleq	r0, lr, r0
    4374:	04050008 	streq	r0, [r5], #-8
    4378:	00000062 	andeq	r0, r0, r2, rrx
    437c:	00162806 	andseq	r2, r6, r6, lsl #16
    4380:	6d0a0300 	stcvs	3, cr0, [sl, #-0]
    4384:	07000000 	streq	r0, [r0, -r0]
    4388:	000006de 	ldrdeq	r0, [r0], -lr
    438c:	28060424 	stmdacs	r6, {r2, r5, sl}
    4390:	03000001 	movweq	r0, #1
    4394:	00000461 	andeq	r0, r0, r1, ror #8
    4398:	01280704 			; <UNDEFINED> instruction: 0x01280704
    439c:	03000000 	movweq	r0, #0
    43a0:	000006ea 	andeq	r0, r0, sl, ror #13
    43a4:	012e0804 			; <UNDEFINED> instruction: 0x012e0804
    43a8:	03040000 	movweq	r0, #16384	; 0x4000
    43ac:	0000063a 	andeq	r0, r0, sl, lsr r6
    43b0:	012e0904 			; <UNDEFINED> instruction: 0x012e0904
    43b4:	03080000 	movweq	r0, #32768	; 0x8000
    43b8:	00000666 	andeq	r0, r0, r6, ror #12
    43bc:	01460c04 	cmpeq	r6, r4, lsl #24
    43c0:	030c0000 	movweq	r0, #49152	; 0xc000
    43c4:	00000342 	andeq	r0, r0, r2, asr #6
    43c8:	01460d04 	cmpeq	r6, r4, lsl #26
    43cc:	03100000 	tsteq	r0, #0
    43d0:	00000473 	andeq	r0, r0, r3, ror r4
    43d4:	012e1004 			; <UNDEFINED> instruction: 0x012e1004
    43d8:	03140000 	tsteq	r4, #0
    43dc:	00000070 	andeq	r0, r0, r0, ror r0
    43e0:	012e1104 			; <UNDEFINED> instruction: 0x012e1104
    43e4:	03180000 	tsteq	r8, #0
    43e8:	000003d9 	ldrdeq	r0, [r0], -r9
    43ec:	012e1204 			; <UNDEFINED> instruction: 0x012e1204
    43f0:	031c0000 	tsteq	ip, #0
    43f4:	000003e9 	andeq	r0, r0, r9, ror #7
    43f8:	012e1304 			; <UNDEFINED> instruction: 0x012e1304
    43fc:	00200000 	eoreq	r0, r0, r0
    4400:	00a40405 	adceq	r0, r4, r5, lsl #8
    4404:	04080000 	streq	r0, [r8], #-0
    4408:	746e6905 	strbtvc	r6, [lr], #-2309	; 0xfffff6fb
    440c:	01400900 	cmpeq	r0, r0, lsl #18
    4410:	400a0000 	andmi	r0, sl, r0
    4414:	00000001 	andeq	r0, r0, r1
    4418:	00af0405 	adceq	r0, pc, r5, lsl #8
    441c:	04050000 	streq	r0, [r5], #-0
    4420:	00000135 	andeq	r0, r0, r5, lsr r1
    4424:	0006df06 	andeq	sp, r6, r6, lsl #30
    4428:	af150400 	svcge	0x00150400
    442c:	0b000000 	bleq	4434 <startup-0x1fffbbcc>
    4430:	00000162 	andeq	r0, r0, r2, ror #2
    4434:	00000162 	andeq	r0, r0, r2, ror #2
    4438:	0405000c 	streq	r0, [r5], #-12
    443c:	0000014c 	andeq	r0, r0, ip, asr #2
    4440:	0005560d 	andeq	r5, r5, sp, lsl #12
    4444:	571c0400 	ldrpl	r0, [ip, -r0, lsl #8]
    4448:	0d000001 	stceq	0, cr0, [r0, #-4]
    444c:	00000424 	andeq	r0, r0, r4, lsr #8
    4450:	012e1d04 			; <UNDEFINED> instruction: 0x012e1d04
    4454:	5b0b0000 	blpl	2c445c <startup-0x1fd3bba4>
    4458:	8f000000 	svchi	0x00000000
    445c:	0e000001 	cdpeq	0, 0, cr0, cr0, cr1, {0}
    4460:	0000018f 	andeq	r0, r0, pc, lsl #3
    4464:	040003ff 	streq	r0, [r0], #-1023	; 0xfffffc01
    4468:	04060704 	streq	r0, [r6], #-1796	; 0xfffff8fc
    446c:	bf0f0000 	svclt	0x000f0000
    4470:	0500001d 	streq	r0, [r0, #-29]	; 0xffffffe3
    4474:	00017e03 	andeq	r7, r1, r3, lsl #28
    4478:	cc030500 	cfstr32gt	mvfx0, [r3], {-0}
    447c:	0f2000cf 	svceq	0x002000cf
    4480:	00001d5f 	andeq	r1, r0, pc, asr sp
    4484:	017e0306 	cmneq	lr, r6, lsl #6
    4488:	03050000 	movweq	r0, #20480	; 0x5000
    448c:	2000d3cc 	andcs	sp, r0, ip, asr #7
    4490:	001d3c0f 	andseq	r3, sp, pc, lsl #24
    4494:	7e030700 	cdpvc	7, 0, cr0, cr3, cr0, {0}
    4498:	05000001 	streq	r0, [r0, #-1]
    449c:	00d7cc03 	sbcseq	ip, r7, r3, lsl #24
    44a0:	1d211020 	stcne	0, cr1, [r1, #-128]!	; 0xffffff80
    44a4:	08010000 	stmdaeq	r1, {}	; <UNPREDICTABLE>
    44a8:	0000009e 	muleq	r0, lr, r0
    44ac:	70e00305 	rscvc	r0, r0, r5, lsl #6
    44b0:	fb102000 	blx	40c4ba <startup-0x1fbf3b46>
    44b4:	0100001d 	tsteq	r0, sp, lsl r0
    44b8:	00009e09 	andeq	r9, r0, r9, lsl #28
    44bc:	ac030500 	cfstr32ge	mvfx0, [r3], {-0}
    44c0:	10200070 	eorne	r0, r0, r0, ror r0
    44c4:	00001d82 	andeq	r1, r0, r2, lsl #27
    44c8:	009e0a01 	addseq	r0, lr, r1, lsl #20
    44cc:	03050000 	movweq	r0, #20480	; 0x5000
    44d0:	200070f0 	strdcs	r7, [r0], -r0
    44d4:	001dd210 	andseq	sp, sp, r0, lsl r2
    44d8:	620c0100 	andvs	r0, ip, #0, 2
    44dc:	05000000 	streq	r0, [r0, #-0]
    44e0:	0070a003 	rsbseq	sl, r0, r3
    44e4:	1d711020 	ldclne	0, cr1, [r1, #-128]!	; 0xffffff80
    44e8:	0d010000 	stceq	0, cr0, [r1, #-0]
    44ec:	00000062 	andeq	r0, r0, r2, rrx
    44f0:	70940305 	addsvc	r0, r4, r5, lsl #6
    44f4:	4f102000 	svcmi	0x00102000
    44f8:	0100001d 	tsteq	r0, sp, lsl r0
    44fc:	0000620e 	andeq	r6, r0, lr, lsl #4
    4500:	88030500 	stmdahi	r3, {r8, sl}
    4504:	10200070 	eorne	r0, r0, r0, ror r0
    4508:	00001df0 	strdeq	r1, [r0], -r0
    450c:	014c1101 	cmpeq	ip, r1, lsl #2
    4510:	03050000 	movweq	r0, #20480	; 0x5000
    4514:	200070b0 	strhcs	r7, [r0], -r0
    4518:	001d1410 	andseq	r1, sp, r0, lsl r4
    451c:	a4120100 	ldrge	r0, [r2], #-256	; 0xffffff00
    4520:	05000000 	streq	r0, [r0, #-0]
    4524:	0070e403 	rsbseq	lr, r0, r3, lsl #8
    4528:	00a40b20 	adceq	r0, r4, r0, lsr #22
    452c:	02610000 	rsbeq	r0, r1, #0
    4530:	8f110000 	svchi	0x00110000
    4534:	00000001 	andeq	r0, r0, r1
    4538:	1d2e1000 	stcne	0, cr1, [lr, #-0]
    453c:	13010000 	movwne	r0, #4096	; 0x1000
    4540:	00000251 	andeq	r0, r0, r1, asr r2
    4544:	70d40305 	sbcsvc	r0, r4, r5, lsl #6
    4548:	e3122000 	tst	r2, #0
    454c:	0100001d 	tsteq	r0, sp, lsl r0
    4550:	0043cc22 	subeq	ip, r3, r2, lsr #24
    4554:	00007420 	andeq	r7, r0, r0, lsr #8
    4558:	a79c0100 	ldrge	r0, [ip, r0, lsl #2]
    455c:	13000002 	movwne	r0, #2
    4560:	00001df0 	strdeq	r1, [r0], -r0
    4564:	01622201 	cmneq	r2, r1, lsl #4
    4568:	91020000 	mrsls	r0, (UNDEF: 2)
    456c:	09090f6c 	stmdbeq	r9, {r2, r3, r5, r6, r8, r9, sl, fp}
    4570:	23010000 	movwcs	r0, #4096	; 0x1000
    4574:	0000012e 	andeq	r0, r0, lr, lsr #2
    4578:	dbcc0305 	blle	ff305194 <firstTime.4040+0xdf2f5d50>
    457c:	14002000 	strne	r2, [r0], #-0
    4580:	000004a9 	andeq	r0, r0, r9, lsr #9
    4584:	43581401 	cmpmi	r8, #16777216	; 0x1000000
    4588:	00742000 	rsbseq	r2, r4, r0
    458c:	9c010000 	stcls	0, cr0, [r1], {-0}
    4590:	000d9e0f 	andeq	r9, sp, pc, lsl #28
    4594:	9e160100 	muflss	f0, f6, f0
    4598:	02000000 	andeq	r0, r0, #0
    459c:	a80f7491 	stmdage	pc, {r0, r4, r7, sl, ip, sp, lr}	; <UNPREDICTABLE>
    45a0:	0100000d 	tsteq	r0, sp
    45a4:	00009e19 	andeq	r9, r0, r9, lsl lr
    45a8:	70910200 	addsvc	r0, r1, r0, lsl #4
    45ac:	000b9e0f 	andeq	r9, fp, pc, lsl #28
    45b0:	9e1c0100 	muflse	f0, f4, f0
    45b4:	02000000 	andeq	r0, r0, #0
    45b8:	00006c91 	muleq	r0, r1, ip
    45bc:	000002e0 	andeq	r0, r0, r0, ror #5
    45c0:	10d90004 	sbcsne	r0, r9, r4
    45c4:	01040000 	mrseq	r0, (UNDEF: 4)
    45c8:	0000009f 	muleq	r0, pc, r0	; <UNPREDICTABLE>
    45cc:	001e480c 	andseq	r4, lr, ip, lsl #16
    45d0:	00444000 	subeq	r4, r4, r0
    45d4:	0000e820 	andeq	lr, r0, r0, lsr #16
    45d8:	0016d600 	andseq	sp, r6, r0, lsl #12
    45dc:	020c0200 	andeq	r0, ip, #0, 4
    45e0:	00004e05 	andeq	r4, r0, r5, lsl #28
    45e4:	035b0300 	cmpeq	fp, #0, 6
    45e8:	07020000 	streq	r0, [r2, -r0]
    45ec:	0000004e 	andeq	r0, r0, lr, asr #32
    45f0:	07190300 	ldreq	r0, [r9, -r0, lsl #6]
    45f4:	08020000 	stmdaeq	r2, {}	; <UNPREDICTABLE>
    45f8:	0000004e 	andeq	r0, r0, lr, asr #32
    45fc:	19180304 	ldmdbne	r8, {r2, r8, r9}
    4600:	09020000 	stmdbeq	r2, {}	; <UNPREDICTABLE>
    4604:	00000055 	andeq	r0, r0, r5, asr r0
    4608:	04040008 	streq	r0, [r4], #-8
    460c:	00038907 	andeq	r8, r3, r7, lsl #18
    4610:	5b040500 	blpl	105a18 <startup-0x1fefa5e8>
    4614:	04000000 	streq	r0, [r0], #-0
    4618:	04d30801 	ldrbeq	r0, [r3], #2049	; 0x801
    461c:	6a060000 	bvs	184624 <startup-0x1fe7b9dc>
    4620:	0200001a 	andeq	r0, r0, #26
    4624:	0000210a 	andeq	r2, r0, sl, lsl #2
    4628:	00340700 	eorseq	r0, r4, r0, lsl #14
    462c:	030c0000 	movweq	r0, #49152	; 0xc000
    4630:	00009e06 	andeq	r9, r0, r6, lsl #28
    4634:	05c90300 	strbeq	r0, [r9, #768]	; 0x300
    4638:	07030000 	streq	r0, [r3, -r0]
    463c:	0000009e 	muleq	r0, lr, r0
    4640:	003b0300 	eorseq	r0, fp, r0, lsl #6
    4644:	08030000 	stmdaeq	r3, {}	; <UNPREDICTABLE>
    4648:	0000009e 	muleq	r0, lr, r0
    464c:	00300304 	eorseq	r0, r0, r4, lsl #6
    4650:	09030000 	stmdbeq	r3, {}	; <UNPREDICTABLE>
    4654:	0000009e 	muleq	r0, lr, r0
    4658:	04050008 	streq	r0, [r5], #-8
    465c:	00000062 	andeq	r0, r0, r2, rrx
    4660:	00162806 	andseq	r2, r6, r6, lsl #16
    4664:	6d0a0300 	stcvs	3, cr0, [sl, #-0]
    4668:	07000000 	streq	r0, [r0, -r0]
    466c:	000006de 	ldrdeq	r0, [r0], -lr
    4670:	28060424 	stmdacs	r6, {r2, r5, sl}
    4674:	03000001 	movweq	r0, #1
    4678:	00000461 	andeq	r0, r0, r1, ror #8
    467c:	01280704 			; <UNDEFINED> instruction: 0x01280704
    4680:	03000000 	movweq	r0, #0
    4684:	000006ea 	andeq	r0, r0, sl, ror #13
    4688:	012e0804 			; <UNDEFINED> instruction: 0x012e0804
    468c:	03040000 	movweq	r0, #16384	; 0x4000
    4690:	0000063a 	andeq	r0, r0, sl, lsr r6
    4694:	012e0904 			; <UNDEFINED> instruction: 0x012e0904
    4698:	03080000 	movweq	r0, #32768	; 0x8000
    469c:	00000666 	andeq	r0, r0, r6, ror #12
    46a0:	01460c04 	cmpeq	r6, r4, lsl #24
    46a4:	030c0000 	movweq	r0, #49152	; 0xc000
    46a8:	00000342 	andeq	r0, r0, r2, asr #6
    46ac:	01460d04 	cmpeq	r6, r4, lsl #26
    46b0:	03100000 	tsteq	r0, #0
    46b4:	00000473 	andeq	r0, r0, r3, ror r4
    46b8:	012e1004 			; <UNDEFINED> instruction: 0x012e1004
    46bc:	03140000 	tsteq	r4, #0
    46c0:	00000070 	andeq	r0, r0, r0, ror r0
    46c4:	012e1104 			; <UNDEFINED> instruction: 0x012e1104
    46c8:	03180000 	tsteq	r8, #0
    46cc:	000003d9 	ldrdeq	r0, [r0], -r9
    46d0:	012e1204 			; <UNDEFINED> instruction: 0x012e1204
    46d4:	031c0000 	tsteq	ip, #0
    46d8:	000003e9 	andeq	r0, r0, r9, ror #7
    46dc:	012e1304 			; <UNDEFINED> instruction: 0x012e1304
    46e0:	00200000 	eoreq	r0, r0, r0
    46e4:	00a40405 	adceq	r0, r4, r5, lsl #8
    46e8:	04080000 	streq	r0, [r8], #-0
    46ec:	746e6905 	strbtvc	r6, [lr], #-2309	; 0xfffff6fb
    46f0:	01400900 	cmpeq	r0, r0, lsl #18
    46f4:	400a0000 	andmi	r0, sl, r0
    46f8:	00000001 	andeq	r0, r0, r1
    46fc:	00af0405 	adceq	r0, pc, r5, lsl #8
    4700:	04050000 	streq	r0, [r5], #-0
    4704:	00000135 	andeq	r0, r0, r5, lsr r1
    4708:	0006df06 	andeq	sp, r6, r6, lsl #30
    470c:	af150400 	svcge	0x00150400
    4710:	0b000000 	bleq	4718 <startup-0x1fffb8e8>
    4714:	00000162 	andeq	r0, r0, r2, ror #2
    4718:	00000162 	andeq	r0, r0, r2, ror #2
    471c:	0405000c 	streq	r0, [r5], #-12
    4720:	0000014c 	andeq	r0, r0, ip, asr #2
    4724:	0005560d 	andeq	r5, r5, sp, lsl #12
    4728:	571c0400 	ldrpl	r0, [ip, -r0, lsl #8]
    472c:	0d000001 	stceq	0, cr0, [r0, #-4]
    4730:	00000424 	andeq	r0, r0, r4, lsr #8
    4734:	012e1d04 			; <UNDEFINED> instruction: 0x012e1d04
    4738:	5b0b0000 	blpl	2c4740 <startup-0x1fd3b8c0>
    473c:	8f000000 	svchi	0x00000000
    4740:	0e000001 	cdpeq	0, 0, cr0, cr0, cr1, {0}
    4744:	0000018f 	andeq	r0, r0, pc, lsl #3
    4748:	040003ff 	streq	r0, [r0], #-1023	; 0xfffffc01
    474c:	04060704 	streq	r0, [r6], #-1796	; 0xfffff8fc
    4750:	150f0000 	strne	r0, [pc, #-0]	; 4758 <startup-0x1fffb8a8>
    4754:	0500001e 	streq	r0, [r0, #-30]	; 0xffffffe2
    4758:	00017e03 	andeq	r7, r1, r3, lsl #28
    475c:	d0030500 	andle	r0, r3, r0, lsl #10
    4760:	0f2000db 	svceq	0x002000db
    4764:	00001ed8 	ldrdeq	r1, [r0], -r8
    4768:	017e0306 	cmneq	lr, r6, lsl #6
    476c:	03050000 	movweq	r0, #20480	; 0x5000
    4770:	2000dfd0 	ldrdcs	sp, [r0], -r0
    4774:	001eb50f 	andseq	fp, lr, pc, lsl #10
    4778:	7e030700 	cdpvc	7, 0, cr0, cr3, cr0, {0}
    477c:	05000001 	streq	r0, [r0, #-1]
    4780:	00e3d003 	rsceq	sp, r3, r3
    4784:	1e8b1020 	cdpne	0, 8, cr1, cr11, cr0, {1}
    4788:	08010000 	stmdaeq	r1, {}	; <UNPREDICTABLE>
    478c:	0000009e 	muleq	r0, lr, r0
    4790:	715c0305 	cmpvc	ip, r5, lsl #6
    4794:	3b102000 	blcc	40c79c <startup-0x1fbf3864>
    4798:	0100001e 	tsteq	r0, lr, lsl r0
    479c:	00009e09 	andeq	r9, r0, r9, lsl #28
    47a0:	18030500 	stmdane	r3, {r8, sl}
    47a4:	10200071 	eorne	r0, r0, r1, ror r0
    47a8:	00001e07 	andeq	r1, r0, r7, lsl #28
    47ac:	009e0a01 	addseq	r0, lr, r1, lsl #20
    47b0:	03050000 	movweq	r0, #20480	; 0x5000
    47b4:	20007140 	andcs	r7, r0, r0, asr #2
    47b8:	001e7910 	andseq	r7, lr, r0, lsl r9
    47bc:	620c0100 	andvs	r0, ip, #0, 2
    47c0:	05000000 	streq	r0, [r0, #-0]
    47c4:	00714403 	rsbseq	r4, r1, r3, lsl #8
    47c8:	1e291020 	cdpne	0, 2, cr1, cr9, cr0, {1}
    47cc:	0d010000 	stceq	0, cr0, [r1, #-0]
    47d0:	00000062 	andeq	r0, r0, r2, rrx
    47d4:	71500305 	cmpvc	r0, r5, lsl #6
    47d8:	f7102000 			; <UNDEFINED> instruction: 0xf7102000
    47dc:	0100001e 	tsteq	r0, lr, lsl r0
    47e0:	0000620e 	andeq	r6, r0, lr, lsl #4
    47e4:	34030500 	strcc	r0, [r3], #-1280	; 0xfffffb00
    47e8:	10200071 	eorne	r0, r0, r1, ror r0
    47ec:	00001eeb 	andeq	r1, r0, fp, ror #29
    47f0:	014c1101 	cmpeq	ip, r1, lsl #2
    47f4:	03050000 	movweq	r0, #20480	; 0x5000
    47f8:	200070f4 	strdcs	r7, [r0], -r4
    47fc:	001e9910 	andseq	r9, lr, r0, lsl r9
    4800:	a4120100 	ldrge	r0, [r2], #-256	; 0xffffff00
    4804:	05000000 	streq	r0, [r0, #-0]
    4808:	00712803 	rsbseq	r2, r1, r3, lsl #16
    480c:	00a40b20 	adceq	r0, r4, r0, lsr #22
    4810:	02610000 	rsbeq	r0, r1, #0
    4814:	8f110000 	svchi	0x00110000
    4818:	00000001 	andeq	r0, r0, r1
    481c:	1ec91000 	cdpne	0, 12, cr1, cr9, cr0, {0}
    4820:	13010000 	movwne	r0, #4096	; 0x1000
    4824:	00000251 	andeq	r0, r0, r1, asr r2
    4828:	711c0305 	tstvc	ip, r5, lsl #6
    482c:	a7122000 	ldrge	r2, [r2, -r0]
    4830:	0100001e 	tsteq	r0, lr, lsl r0
    4834:	0044b422 	subeq	fp, r4, r2, lsr #8
    4838:	00007420 	andeq	r7, r0, r0, lsr #8
    483c:	a79c0100 	ldrge	r0, [ip, r0, lsl #2]
    4840:	13000002 	movwne	r0, #2
    4844:	00001eeb 	andeq	r1, r0, fp, ror #29
    4848:	01622201 	cmneq	r2, r1, lsl #4
    484c:	91020000 	mrsls	r0, (UNDEF: 2)
    4850:	09090f6c 	stmdbeq	r9, {r2, r3, r5, r6, r8, r9, sl, fp}
    4854:	23010000 	movwcs	r0, #4096	; 0x1000
    4858:	0000012e 	andeq	r0, r0, lr, lsr #2
    485c:	e7d00305 	ldrb	r0, [r0, r5, lsl #6]
    4860:	14002000 	strne	r2, [r0], #-0
    4864:	000004a9 	andeq	r0, r0, r9, lsr #9
    4868:	44401401 	strbmi	r1, [r0], #-1025	; 0xfffffbff
    486c:	00742000 	rsbseq	r2, r4, r0
    4870:	9c010000 	stcls	0, cr0, [r1], {-0}
    4874:	000d9e0f 	andeq	r9, sp, pc, lsl #28
    4878:	9e160100 	muflss	f0, f6, f0
    487c:	02000000 	andeq	r0, r0, #0
    4880:	a80f7491 	stmdage	pc, {r0, r4, r7, sl, ip, sp, lr}	; <UNPREDICTABLE>
    4884:	0100000d 	tsteq	r0, sp
    4888:	00009e19 	andeq	r9, r0, r9, lsl lr
    488c:	70910200 	addsvc	r0, r1, r0, lsl #4
    4890:	000b9e0f 	andeq	r9, fp, pc, lsl #28
    4894:	9e1c0100 	muflse	f0, f4, f0
    4898:	02000000 	andeq	r0, r0, #0
    489c:	00006c91 	muleq	r0, r1, ip
    48a0:	000002df 	ldrdeq	r0, [r0], -pc	; <UNPREDICTABLE>
    48a4:	11e20004 	mvnne	r0, r4
    48a8:	01040000 	mrseq	r0, (UNDEF: 4)
    48ac:	0000009f 	muleq	r0, pc, r0	; <UNPREDICTABLE>
    48b0:	001f080c 	andseq	r0, pc, ip, lsl #16
    48b4:	00452800 	subeq	r2, r5, r0, lsl #16
    48b8:	0000e820 	andeq	lr, r0, r0, lsr #16
    48bc:	0017b400 	andseq	fp, r7, r0, lsl #8
    48c0:	020c0200 	andeq	r0, ip, #0, 4
    48c4:	00004e05 	andeq	r4, r0, r5, lsl #28
    48c8:	035b0300 	cmpeq	fp, #0, 6
    48cc:	07020000 	streq	r0, [r2, -r0]
    48d0:	0000004e 	andeq	r0, r0, lr, asr #32
    48d4:	07190300 	ldreq	r0, [r9, -r0, lsl #6]
    48d8:	08020000 	stmdaeq	r2, {}	; <UNPREDICTABLE>
    48dc:	0000004e 	andeq	r0, r0, lr, asr #32
    48e0:	19180304 	ldmdbne	r8, {r2, r8, r9}
    48e4:	09020000 	stmdbeq	r2, {}	; <UNPREDICTABLE>
    48e8:	00000055 	andeq	r0, r0, r5, asr r0
    48ec:	04040008 	streq	r0, [r4], #-8
    48f0:	00038907 	andeq	r8, r3, r7, lsl #18
    48f4:	5b040500 	blpl	105cfc <startup-0x1fefa304>
    48f8:	04000000 	streq	r0, [r0], #-0
    48fc:	04d30801 	ldrbeq	r0, [r3], #2049	; 0x801
    4900:	6a060000 	bvs	184908 <startup-0x1fe7b6f8>
    4904:	0200001a 	andeq	r0, r0, #26
    4908:	0000210a 	andeq	r2, r0, sl, lsl #2
    490c:	00340700 	eorseq	r0, r4, r0, lsl #14
    4910:	030c0000 	movweq	r0, #49152	; 0xc000
    4914:	00009e06 	andeq	r9, r0, r6, lsl #28
    4918:	05c90300 	strbeq	r0, [r9, #768]	; 0x300
    491c:	07030000 	streq	r0, [r3, -r0]
    4920:	0000009e 	muleq	r0, lr, r0
    4924:	003b0300 	eorseq	r0, fp, r0, lsl #6
    4928:	08030000 	stmdaeq	r3, {}	; <UNPREDICTABLE>
    492c:	0000009e 	muleq	r0, lr, r0
    4930:	00300304 	eorseq	r0, r0, r4, lsl #6
    4934:	09030000 	stmdbeq	r3, {}	; <UNPREDICTABLE>
    4938:	0000009e 	muleq	r0, lr, r0
    493c:	04050008 	streq	r0, [r5], #-8
    4940:	00000062 	andeq	r0, r0, r2, rrx
    4944:	00162806 	andseq	r2, r6, r6, lsl #16
    4948:	6d0a0300 	stcvs	3, cr0, [sl, #-0]
    494c:	07000000 	streq	r0, [r0, -r0]
    4950:	000006de 	ldrdeq	r0, [r0], -lr
    4954:	28060424 	stmdacs	r6, {r2, r5, sl}
    4958:	03000001 	movweq	r0, #1
    495c:	00000461 	andeq	r0, r0, r1, ror #8
    4960:	01280704 			; <UNDEFINED> instruction: 0x01280704
    4964:	03000000 	movweq	r0, #0
    4968:	000006ea 	andeq	r0, r0, sl, ror #13
    496c:	012e0804 			; <UNDEFINED> instruction: 0x012e0804
    4970:	03040000 	movweq	r0, #16384	; 0x4000
    4974:	0000063a 	andeq	r0, r0, sl, lsr r6
    4978:	012e0904 			; <UNDEFINED> instruction: 0x012e0904
    497c:	03080000 	movweq	r0, #32768	; 0x8000
    4980:	00000666 	andeq	r0, r0, r6, ror #12
    4984:	01460c04 	cmpeq	r6, r4, lsl #24
    4988:	030c0000 	movweq	r0, #49152	; 0xc000
    498c:	00000342 	andeq	r0, r0, r2, asr #6
    4990:	01460d04 	cmpeq	r6, r4, lsl #26
    4994:	03100000 	tsteq	r0, #0
    4998:	00000473 	andeq	r0, r0, r3, ror r4
    499c:	012e1004 			; <UNDEFINED> instruction: 0x012e1004
    49a0:	03140000 	tsteq	r4, #0
    49a4:	00000070 	andeq	r0, r0, r0, ror r0
    49a8:	012e1104 			; <UNDEFINED> instruction: 0x012e1104
    49ac:	03180000 	tsteq	r8, #0
    49b0:	000003d9 	ldrdeq	r0, [r0], -r9
    49b4:	012e1204 			; <UNDEFINED> instruction: 0x012e1204
    49b8:	031c0000 	tsteq	ip, #0
    49bc:	000003e9 	andeq	r0, r0, r9, ror #7
    49c0:	012e1304 			; <UNDEFINED> instruction: 0x012e1304
    49c4:	00200000 	eoreq	r0, r0, r0
    49c8:	00a40405 	adceq	r0, r4, r5, lsl #8
    49cc:	04080000 	streq	r0, [r8], #-0
    49d0:	746e6905 	strbtvc	r6, [lr], #-2309	; 0xfffff6fb
    49d4:	01400900 	cmpeq	r0, r0, lsl #18
    49d8:	400a0000 	andmi	r0, sl, r0
    49dc:	00000001 	andeq	r0, r0, r1
    49e0:	00af0405 	adceq	r0, pc, r5, lsl #8
    49e4:	04050000 	streq	r0, [r5], #-0
    49e8:	00000135 	andeq	r0, r0, r5, lsr r1
    49ec:	0006df06 	andeq	sp, r6, r6, lsl #30
    49f0:	af150400 	svcge	0x00150400
    49f4:	0b000000 	bleq	49fc <startup-0x1fffb604>
    49f8:	00000162 	andeq	r0, r0, r2, ror #2
    49fc:	00000162 	andeq	r0, r0, r2, ror #2
    4a00:	0405000c 	streq	r0, [r5], #-12
    4a04:	0000014c 	andeq	r0, r0, ip, asr #2
    4a08:	0005560d 	andeq	r5, r5, sp, lsl #12
    4a0c:	571c0400 	ldrpl	r0, [ip, -r0, lsl #8]
    4a10:	0d000001 	stceq	0, cr0, [r0, #-4]
    4a14:	00000424 	andeq	r0, r0, r4, lsr #8
    4a18:	012e1d04 			; <UNDEFINED> instruction: 0x012e1d04
    4a1c:	5b0b0000 	blpl	2c4a24 <startup-0x1fd3b5dc>
    4a20:	8e000000 	cdphi	0, 0, cr0, cr0, cr0, {0}
    4a24:	0e000001 	cdpeq	0, 0, cr0, cr0, cr1, {0}
    4a28:	0000018e 	andeq	r0, r0, lr, lsl #3
    4a2c:	04040021 	streq	r0, [r4], #-33	; 0xffffffdf
    4a30:	00040607 	andeq	r0, r4, r7, lsl #12
    4a34:	1f370f00 	svcne	0x00370f00
    4a38:	03050000 	movweq	r0, #20480	; 0x5000
    4a3c:	0000017e 	andeq	r0, r0, lr, ror r1
    4a40:	e7d40305 	ldrb	r0, [r4, r5, lsl #6]
    4a44:	810f2000 	mrshi	r2, CPSR
    4a48:	0600001f 			; <UNDEFINED> instruction: 0x0600001f
    4a4c:	00017e03 	andeq	r7, r1, r3, lsl #28
    4a50:	f8030500 			; <UNDEFINED> instruction: 0xf8030500
    4a54:	0f2000e7 	svceq	0x002000e7
    4a58:	00001f5f 	andeq	r1, r0, pc, asr pc
    4a5c:	017e0307 	cmneq	lr, r7, lsl #6
    4a60:	03050000 	movweq	r0, #20480	; 0x5000
    4a64:	2000e81c 	andcs	lr, r0, ip, lsl r8
    4a68:	001fc610 	andseq	ip, pc, r0, lsl r6	; <UNPREDICTABLE>
    4a6c:	9e080100 	adflse	f0, f0, f0
    4a70:	05000000 	streq	r0, [r0, #-0]
    4a74:	00716c03 	rsbseq	r6, r1, r3, lsl #24
    4a78:	1fa21020 	svcne	0x00a21020
    4a7c:	09010000 	stmdbeq	r1, {}	; <UNPREDICTABLE>
    4a80:	0000009e 	muleq	r0, lr, r0
    4a84:	71ac0305 			; <UNDEFINED> instruction: 0x71ac0305
    4a88:	49102000 	ldmdbmi	r0, {sp}
    4a8c:	0100001f 	tsteq	r0, pc, lsl r0
    4a90:	00009e0a 	andeq	r9, r0, sl, lsl #28
    4a94:	c8030500 	stmdagt	r3, {r8, sl}
    4a98:	10200071 	eorne	r0, r0, r1, ror r0
    4a9c:	00001f71 	andeq	r1, r0, r1, ror pc
    4aa0:	00620c01 	rsbeq	r0, r2, r1, lsl #24
    4aa4:	03050000 	movweq	r0, #20480	; 0x5000
    4aa8:	200071b0 			; <UNDEFINED> instruction: 0x200071b0
    4aac:	001f9210 	andseq	r9, pc, r0, lsl r2	; <UNPREDICTABLE>
    4ab0:	620d0100 	andvs	r0, sp, #0, 2
    4ab4:	05000000 	streq	r0, [r0, #-0]
    4ab8:	00717c03 	rsbseq	r7, r1, r3, lsl #24
    4abc:	1fd21020 	svcne	0x00d21020
    4ac0:	0e010000 	cdpeq	0, 0, cr0, cr1, cr0, {0}
    4ac4:	00000062 	andeq	r0, r0, r2, rrx
    4ac8:	71bc0305 			; <UNDEFINED> instruction: 0x71bc0305
    4acc:	55102000 	ldrpl	r2, [r0, #-0]
    4ad0:	0100001f 	tsteq	r0, pc, lsl r0
    4ad4:	00014c11 	andeq	r4, r1, r1, lsl ip
    4ad8:	88030500 	stmdahi	r3, {r8, sl}
    4adc:	10200071 	eorne	r0, r0, r1, ror r0
    4ae0:	00001fba 			; <UNDEFINED> instruction: 0x00001fba
    4ae4:	00a41201 	adceq	r1, r4, r1, lsl #4
    4ae8:	03050000 	movweq	r0, #20480	; 0x5000
    4aec:	20007170 	andcs	r7, r0, r0, ror r1
    4af0:	0000a40b 	andeq	sl, r0, fp, lsl #8
    4af4:	00026000 	andeq	r6, r2, r0
    4af8:	018e0e00 	orreq	r0, lr, r0, lsl #28
    4afc:	00000000 	andeq	r0, r0, r0
    4b00:	001fad10 	andseq	sl, pc, r0, lsl sp	; <UNPREDICTABLE>
    4b04:	50130100 	andspl	r0, r3, r0, lsl #2
    4b08:	05000002 	streq	r0, [r0, #-2]
    4b0c:	00716003 	rsbseq	r6, r1, r3
    4b10:	02ed1120 	rsceq	r1, sp, #32, 2
    4b14:	22010000 	andcs	r0, r1, #0
    4b18:	2000459c 	mulcs	r0, ip, r5
    4b1c:	00000074 	andeq	r0, r0, r4, ror r0
    4b20:	02a69c01 	adceq	r9, r6, #256	; 0x100
    4b24:	55120000 	ldrpl	r0, [r2, #-0]
    4b28:	0100001f 	tsteq	r0, pc, lsl r0
    4b2c:	00016222 	andeq	r6, r1, r2, lsr #4
    4b30:	6c910200 	lfmvs	f0, 4, [r1], {0}
    4b34:	0009090f 	andeq	r0, r9, pc, lsl #18
    4b38:	2e230100 	sufcss	f0, f3, f0
    4b3c:	05000001 	streq	r0, [r0, #-1]
    4b40:	00e84003 	rsceq	r4, r8, r3
    4b44:	a9130020 	ldmdbge	r3, {r5}
    4b48:	01000004 	tsteq	r0, r4
    4b4c:	00452814 	subeq	r2, r5, r4, lsl r8
    4b50:	00007420 	andeq	r7, r0, r0, lsr #8
    4b54:	0f9c0100 	svceq	0x009c0100
    4b58:	00000d9e 	muleq	r0, lr, sp
    4b5c:	009e1601 	addseq	r1, lr, r1, lsl #12
    4b60:	91020000 	mrsls	r0, (UNDEF: 2)
    4b64:	0da80f74 	stceq	15, cr0, [r8, #464]!	; 0x1d0
    4b68:	19010000 	stmdbne	r1, {}	; <UNPREDICTABLE>
    4b6c:	0000009e 	muleq	r0, lr, r0
    4b70:	0f709102 	svceq	0x00709102
    4b74:	00000b9e 	muleq	r0, lr, fp
    4b78:	009e1c01 	addseq	r1, lr, r1, lsl #24
    4b7c:	91020000 	mrsls	r0, (UNDEF: 2)
    4b80:	e000006c 	and	r0, r0, ip, rrx
    4b84:	04000002 	streq	r0, [r0], #-2
    4b88:	0012e200 	andseq	lr, r2, r0, lsl #4
    4b8c:	9f010400 	svcls	0x00010400
    4b90:	0c000000 	stceq	0, cr0, [r0], {-0}
    4b94:	00001ffb 	strdeq	r1, [r0], -fp
    4b98:	20004610 	andcs	r4, r0, r0, lsl r6
    4b9c:	000000e8 	andeq	r0, r0, r8, ror #1
    4ba0:	0000188a 	andeq	r1, r0, sl, lsl #17
    4ba4:	05020c02 	streq	r0, [r2, #-3074]	; 0xfffff3fe
    4ba8:	0000004e 	andeq	r0, r0, lr, asr #32
    4bac:	00035b03 	andeq	r5, r3, r3, lsl #22
    4bb0:	4e070200 	cdpmi	2, 0, cr0, cr7, cr0, {0}
    4bb4:	00000000 	andeq	r0, r0, r0
    4bb8:	00071903 	andeq	r1, r7, r3, lsl #18
    4bbc:	4e080200 	cdpmi	2, 0, cr0, cr8, cr0, {0}
    4bc0:	04000000 	streq	r0, [r0], #-0
    4bc4:	00191803 	andseq	r1, r9, r3, lsl #16
    4bc8:	55090200 	strpl	r0, [r9, #-512]	; 0xfffffe00
    4bcc:	08000000 	stmdaeq	r0, {}	; <UNPREDICTABLE>
    4bd0:	07040400 	streq	r0, [r4, -r0, lsl #8]
    4bd4:	00000389 	andeq	r0, r0, r9, lsl #7
    4bd8:	005b0405 	subseq	r0, fp, r5, lsl #8
    4bdc:	01040000 	mrseq	r0, (UNDEF: 4)
    4be0:	0004d308 	andeq	sp, r4, r8, lsl #6
    4be4:	1a6a0600 	bne	1a863ec <startup-0x1e579c14>
    4be8:	0a020000 	beq	84bf0 <startup-0x1ff7b410>
    4bec:	00000021 	andeq	r0, r0, r1, lsr #32
    4bf0:	00003407 	andeq	r3, r0, r7, lsl #8
    4bf4:	06030c00 	streq	r0, [r3], -r0, lsl #24
    4bf8:	0000009e 	muleq	r0, lr, r0
    4bfc:	0005c903 	andeq	ip, r5, r3, lsl #18
    4c00:	9e070300 	cdpls	3, 0, cr0, cr7, cr0, {0}
    4c04:	00000000 	andeq	r0, r0, r0
    4c08:	00003b03 	andeq	r3, r0, r3, lsl #22
    4c0c:	9e080300 	cdpls	3, 0, cr0, cr8, cr0, {0}
    4c10:	04000000 	streq	r0, [r0], #-0
    4c14:	00003003 	andeq	r3, r0, r3
    4c18:	9e090300 	cdpls	3, 0, cr0, cr9, cr0, {0}
    4c1c:	08000000 	stmdaeq	r0, {}	; <UNPREDICTABLE>
    4c20:	62040500 	andvs	r0, r4, #0, 10
    4c24:	06000000 	streq	r0, [r0], -r0
    4c28:	00001628 	andeq	r1, r0, r8, lsr #12
    4c2c:	006d0a03 	rsbeq	r0, sp, r3, lsl #20
    4c30:	de070000 	cdple	0, 0, cr0, cr7, cr0, {0}
    4c34:	24000006 	strcs	r0, [r0], #-6
    4c38:	01280604 			; <UNDEFINED> instruction: 0x01280604
    4c3c:	61030000 	mrsvs	r0, (UNDEF: 3)
    4c40:	04000004 	streq	r0, [r0], #-4
    4c44:	00012807 	andeq	r2, r1, r7, lsl #16
    4c48:	ea030000 	b	c4c50 <startup-0x1ff3b3b0>
    4c4c:	04000006 	streq	r0, [r0], #-6
    4c50:	00012e08 	andeq	r2, r1, r8, lsl #28
    4c54:	3a030400 	bcc	c5c5c <startup-0x1ff3a3a4>
    4c58:	04000006 	streq	r0, [r0], #-6
    4c5c:	00012e09 	andeq	r2, r1, r9, lsl #28
    4c60:	66030800 	strvs	r0, [r3], -r0, lsl #16
    4c64:	04000006 	streq	r0, [r0], #-6
    4c68:	0001460c 	andeq	r4, r1, ip, lsl #12
    4c6c:	42030c00 	andmi	r0, r3, #0, 24
    4c70:	04000003 	streq	r0, [r0], #-3
    4c74:	0001460d 	andeq	r4, r1, sp, lsl #12
    4c78:	73031000 	movwvc	r1, #12288	; 0x3000
    4c7c:	04000004 	streq	r0, [r0], #-4
    4c80:	00012e10 	andeq	r2, r1, r0, lsl lr
    4c84:	70031400 	andvc	r1, r3, r0, lsl #8
    4c88:	04000000 	streq	r0, [r0], #-0
    4c8c:	00012e11 	andeq	r2, r1, r1, lsl lr
    4c90:	d9031800 	stmdble	r3, {fp, ip}
    4c94:	04000003 	streq	r0, [r0], #-3
    4c98:	00012e12 	andeq	r2, r1, r2, lsl lr
    4c9c:	e9031c00 	stmdb	r3, {sl, fp, ip}
    4ca0:	04000003 	streq	r0, [r0], #-3
    4ca4:	00012e13 	andeq	r2, r1, r3, lsl lr
    4ca8:	05002000 	streq	r2, [r0, #-0]
    4cac:	0000a404 	andeq	sl, r0, r4, lsl #8
    4cb0:	05040800 	streq	r0, [r4, #-2048]	; 0xfffff800
    4cb4:	00746e69 	rsbseq	r6, r4, r9, ror #28
    4cb8:	00014009 	andeq	r4, r1, r9
    4cbc:	01400a00 	cmpeq	r0, r0, lsl #20
    4cc0:	05000000 	streq	r0, [r0, #-0]
    4cc4:	0000af04 	andeq	sl, r0, r4, lsl #30
    4cc8:	35040500 	strcc	r0, [r4, #-1280]	; 0xfffffb00
    4ccc:	06000001 	streq	r0, [r0], -r1
    4cd0:	000006df 	ldrdeq	r0, [r0], -pc	; <UNPREDICTABLE>
    4cd4:	00af1504 	adceq	r1, pc, r4, lsl #10
    4cd8:	620b0000 	andvs	r0, fp, #0
    4cdc:	62000001 	andvs	r0, r0, #1
    4ce0:	0c000001 	stceq	0, cr0, [r0], {1}
    4ce4:	4c040500 	cfstr32mi	mvfx0, [r4], {-0}
    4ce8:	0d000001 	stceq	0, cr0, [r0, #-4]
    4cec:	00000556 	andeq	r0, r0, r6, asr r5
    4cf0:	01571c04 	cmpeq	r7, r4, lsl #24
    4cf4:	240d0000 	strcs	r0, [sp], #-0
    4cf8:	04000004 	streq	r0, [r0], #-4
    4cfc:	00012e1d 	andeq	r2, r1, sp, lsl lr
    4d00:	005b0b00 	subseq	r0, fp, r0, lsl #22
    4d04:	018f0000 	orreq	r0, pc, r0
    4d08:	8f0e0000 	svchi	0x000e0000
    4d0c:	ff000001 			; <UNDEFINED> instruction: 0xff000001
    4d10:	04040003 	streq	r0, [r4], #-3
    4d14:	00040607 	andeq	r0, r4, r7, lsl #12
    4d18:	1fe10f00 	svcne	0x00e10f00
    4d1c:	03050000 	movweq	r0, #20480	; 0x5000
    4d20:	0000017e 	andeq	r0, r0, lr, ror r1
    4d24:	e8440305 	stmda	r4, {r0, r2, r8, r9}^
    4d28:	460f2000 	strmi	r2, [pc], -r0
    4d2c:	06000020 	streq	r0, [r0], -r0, lsr #32
    4d30:	00017e03 	andeq	r7, r1, r3, lsl #28
    4d34:	44030500 	strmi	r0, [r3], #-1280	; 0xfffffb00
    4d38:	0f2000ec 	svceq	0x002000ec
    4d3c:	00002077 	andeq	r2, r0, r7, ror r0
    4d40:	017e0307 	cmneq	lr, r7, lsl #6
    4d44:	03050000 	movweq	r0, #20480	; 0x5000
    4d48:	2000f044 	andcs	pc, r0, r4, asr #32
    4d4c:	00209310 	eoreq	r9, r0, r0, lsl r3
    4d50:	9e080100 	adflse	f0, f0, f0
    4d54:	05000000 	streq	r0, [r0, #-0]
    4d58:	00722803 	rsbseq	r2, r2, r3, lsl #16
    4d5c:	20621020 	rsbcs	r1, r2, r0, lsr #32
    4d60:	09010000 	stmdbeq	r1, {}	; <UNPREDICTABLE>
    4d64:	0000009e 	muleq	r0, lr, r0
    4d68:	71d80305 	bicsvc	r0, r8, r5, lsl #6
    4d6c:	6c102000 	ldcvs	0, cr2, [r0], {-0}
    4d70:	01000020 	tsteq	r0, r0, lsr #32
    4d74:	00009e0a 	andeq	r9, r0, sl, lsl #28
    4d78:	f4030500 	vst3.8	{d0,d2,d4}, [r3], r0
    4d7c:	10200071 	eorne	r0, r0, r1, ror r0
    4d80:	00002037 	andeq	r2, r0, r7, lsr r0
    4d84:	00620c01 	rsbeq	r0, r2, r1, lsl #24
    4d88:	03050000 	movweq	r0, #20480	; 0x5000
    4d8c:	2000721c 	andcs	r7, r0, ip, lsl r2
    4d90:	00209e10 	eoreq	r9, r0, r0, lsl lr
    4d94:	620d0100 	andvs	r0, sp, #0, 2
    4d98:	05000000 	streq	r0, [r0, #-0]
    4d9c:	0071e803 	rsbseq	lr, r1, r3, lsl #16
    4da0:	20291020 	eorcs	r1, r9, r0, lsr #32
    4da4:	0e010000 	cdpeq	0, 0, cr0, cr1, cr0, {0}
    4da8:	00000062 	andeq	r0, r0, r2, rrx
    4dac:	71dc0305 	bicsvc	r0, ip, r5, lsl #6
    4db0:	f2102000 	vhadd.s16	d2, d0, d0
    4db4:	0100001f 	tsteq	r0, pc, lsl r0
    4db8:	00014c11 	andeq	r4, r1, r1, lsl ip
    4dbc:	f8030500 			; <UNDEFINED> instruction: 0xf8030500
    4dc0:	10200071 	eorne	r0, r0, r1, ror r0
    4dc4:	00002088 	andeq	r2, r0, r8, lsl #1
    4dc8:	00a41201 	adceq	r1, r4, r1, lsl #4
    4dcc:	03050000 	movweq	r0, #20480	; 0x5000
    4dd0:	200071cc 	andcs	r7, r0, ip, asr #3
    4dd4:	0000a40b 	andeq	sl, r0, fp, lsl #8
    4dd8:	00026100 	andeq	r6, r2, r0, lsl #2
    4ddc:	018f1100 	orreq	r1, pc, r0, lsl #2
    4de0:	00000000 	andeq	r0, r0, r0
    4de4:	00205610 	eoreq	r5, r0, r0, lsl r6
    4de8:	51130100 	tstpl	r3, r0, lsl #2
    4dec:	05000002 	streq	r0, [r0, #-2]
    4df0:	00722c03 	rsbseq	r2, r2, r3, lsl #24
    4df4:	04421220 	strbeq	r1, [r2], #-544	; 0xfffffde0
    4df8:	22010000 	andcs	r0, r1, #0
    4dfc:	20004684 	andcs	r4, r0, r4, lsl #13
    4e00:	00000074 	andeq	r0, r0, r4, ror r0
    4e04:	02a79c01 	adceq	r9, r7, #256	; 0x100
    4e08:	f2130000 	vhadd.s16	d0, d3, d0
    4e0c:	0100001f 	tsteq	r0, pc, lsl r0
    4e10:	00016222 	andeq	r6, r1, r2, lsr #4
    4e14:	6c910200 	lfmvs	f0, 4, [r1], {0}
    4e18:	0009090f 	andeq	r0, r9, pc, lsl #18
    4e1c:	2e230100 	sufcss	f0, f3, f0
    4e20:	05000001 	streq	r0, [r0, #-1]
    4e24:	00f44403 	rscseq	r4, r4, r3, lsl #8
    4e28:	a9140020 	ldmdbge	r4, {r5}
    4e2c:	01000004 	tsteq	r0, r4
    4e30:	00461014 	subeq	r1, r6, r4, lsl r0
    4e34:	00007420 	andeq	r7, r0, r0, lsr #8
    4e38:	0f9c0100 	svceq	0x009c0100
    4e3c:	00000d9e 	muleq	r0, lr, sp
    4e40:	009e1601 	addseq	r1, lr, r1, lsl #12
    4e44:	91020000 	mrsls	r0, (UNDEF: 2)
    4e48:	0da80f74 	stceq	15, cr0, [r8, #464]!	; 0x1d0
    4e4c:	19010000 	stmdbne	r1, {}	; <UNPREDICTABLE>
    4e50:	0000009e 	muleq	r0, lr, r0
    4e54:	0f709102 	svceq	0x00709102
    4e58:	00000b9e 	muleq	r0, lr, fp
    4e5c:	009e1c01 	addseq	r1, lr, r1, lsl #24
    4e60:	91020000 	mrsls	r0, (UNDEF: 2)
    4e64:	Address 0x00004e64 is out of bounds.


Disassembly of section .debug_abbrev:

00000000 <.debug_abbrev>:
       0:	25011101 	strcs	r1, [r1, #-257]	; 0xfffffeff
       4:	030b130e 	movweq	r1, #45838	; 0xb30e
       8:	1117550e 	tstne	r7, lr, lsl #10
       c:	00171001 	andseq	r1, r7, r1
      10:	01130200 	tsteq	r3, r0, lsl #4
      14:	0b3a0b0b 	bleq	e82c48 <startup-0x1f17d3b8>
      18:	13010b3b 	movwne	r0, #6971	; 0x1b3b
      1c:	0d030000 	stceq	0, cr0, [r3, #-0]
      20:	3a0e0300 	bcc	380c28 <startup-0x1fc7f3d8>
      24:	490b3b0b 	stmdbmi	fp, {r0, r1, r3, r8, r9, fp, ip, sp}
      28:	000b3813 	andeq	r3, fp, r3, lsl r8
      2c:	00240400 	eoreq	r0, r4, r0, lsl #8
      30:	0b3e0b0b 	bleq	f82c64 <startup-0x1f07d39c>
      34:	00000e03 	andeq	r0, r0, r3, lsl #28
      38:	0b000f05 	bleq	3c54 <startup-0x1fffc3ac>
      3c:	0013490b 	andseq	r4, r3, fp, lsl #18
      40:	00160600 	andseq	r0, r6, r0, lsl #12
      44:	0b3a0e03 	bleq	e83858 <startup-0x1f17c7a8>
      48:	13490b3b 	movtne	r0, #39739	; 0x9b3b
      4c:	13070000 	movwne	r0, #28672	; 0x7000
      50:	0b0e0301 	bleq	380c5c <startup-0x1fc7f3a4>
      54:	3b0b3a0b 	blcc	2ce888 <startup-0x1fd31778>
      58:	0013010b 	andseq	r0, r3, fp, lsl #2
      5c:	00240800 	eoreq	r0, r4, r0, lsl #16
      60:	0b3e0b0b 	bleq	f82c94 <startup-0x1f07d36c>
      64:	00000803 	andeq	r0, r0, r3, lsl #16
      68:	27011509 	strcs	r1, [r1, -r9, lsl #10]
      6c:	00130119 	andseq	r0, r3, r9, lsl r1
      70:	00050a00 	andeq	r0, r5, r0, lsl #20
      74:	00001349 	andeq	r1, r0, r9, asr #6
      78:	4901010b 	stmdbmi	r1, {r0, r1, r3, r8}
      7c:	00130113 	andseq	r0, r3, r3, lsl r1
      80:	00210c00 	eoreq	r0, r1, r0, lsl #24
      84:	340d0000 	strcc	r0, [sp], #-0
      88:	3a0e0300 	bcc	380c90 <startup-0x1fc7f370>
      8c:	490b3b0b 	stmdbmi	fp, {r0, r1, r3, r8, r9, fp, ip, sp}
      90:	3c193f13 	ldccc	15, cr3, [r9], {19}
      94:	0e000019 	mcreq	0, 0, r0, cr0, cr9, {0}
      98:	13490021 	movtne	r0, #36897	; 0x9021
      9c:	0000052f 	andeq	r0, r0, pc, lsr #10
      a0:	4900210f 	stmdbmi	r0, {r0, r1, r2, r3, r8, sp}
      a4:	000b2f13 	andeq	r2, fp, r3, lsl pc
      a8:	00341000 	eorseq	r1, r4, r0
      ac:	0b3a0e03 	bleq	e838c0 <startup-0x1f17c740>
      b0:	13490b3b 	movtne	r0, #39739	; 0x9b3b
      b4:	1802193f 	stmdane	r2, {r0, r1, r2, r3, r4, r5, r8, fp, ip}
      b8:	34110000 	ldrcc	r0, [r1], #-0
      bc:	3a0e0300 	bcc	380cc4 <startup-0x1fc7f33c>
      c0:	490b3b0b 	stmdbmi	fp, {r0, r1, r3, r8, r9, fp, ip, sp}
      c4:	00180213 	andseq	r0, r8, r3, lsl r2
      c8:	00341200 	eorseq	r1, r4, r0, lsl #4
      cc:	0b3a0803 	bleq	e820e0 <startup-0x1f17df20>
      d0:	13490b3b 	movtne	r0, #39739	; 0x9b3b
      d4:	1802193f 	stmdane	r2, {r0, r1, r2, r3, r4, r5, r8, fp, ip}
      d8:	2e130000 	cdpcs	0, 1, cr0, cr3, cr0, {0}
      dc:	03193f01 	tsteq	r9, #1, 30
      e0:	3b0b3a08 	blcc	2ce908 <startup-0x1fd316f8>
      e4:	49192705 	ldmdbmi	r9, {r0, r2, r8, r9, sl, sp}
      e8:	12011113 	andne	r1, r1, #-1073741820	; 0xc0000004
      ec:	97184006 	ldrls	r4, [r8, -r6]
      f0:	13011942 	movwne	r1, #6466	; 0x1942
      f4:	05140000 	ldreq	r0, [r4, #-0]
      f8:	3a0e0300 	bcc	380d00 <startup-0x1fc7f300>
      fc:	49053b0b 	stmdbmi	r5, {r0, r1, r3, r8, r9, fp, ip, sp}
     100:	00180213 	andseq	r0, r8, r3, lsl r2
     104:	012e1500 			; <UNDEFINED> instruction: 0x012e1500
     108:	0e03193f 			; <UNDEFINED> instruction: 0x0e03193f
     10c:	0b3b0b3a 	bleq	ec2dfc <startup-0x1f13d204>
     110:	01111927 	tsteq	r1, r7, lsr #18
     114:	18400612 	stmdane	r0, {r1, r4, r9, sl}^
     118:	01194296 			; <UNDEFINED> instruction: 0x01194296
     11c:	16000013 			; <UNDEFINED> instruction: 0x16000013
     120:	193f012e 	ldmdbne	pc!, {r1, r2, r3, r5, r8}	; <UNPREDICTABLE>
     124:	0b3a0e03 	bleq	e83938 <startup-0x1f17c6c8>
     128:	13490b3b 	movtne	r0, #39739	; 0x9b3b
     12c:	1301193c 	movwne	r1, #6460	; 0x193c
     130:	18170000 	ldmdane	r7, {}	; <UNPREDICTABLE>
     134:	18000000 	stmdane	r0, {}	; <UNPREDICTABLE>
     138:	08030034 	stmdaeq	r3, {r2, r4, r5}
     13c:	0b3b0b3a 	bleq	ec2e2c <startup-0x1f13d1d4>
     140:	18021349 	stmdane	r2, {r0, r3, r6, r8, r9, ip}
     144:	34190000 	ldrcc	r0, [r9], #-0
     148:	3a0e0300 	bcc	380d50 <startup-0x1fc7f2b0>
     14c:	49053b0b 	stmdbmi	r5, {r0, r1, r3, r8, r9, fp, ip, sp}
     150:	00180213 	andseq	r0, r8, r3, lsl r2
     154:	010b1a00 	tsteq	fp, r0, lsl #20
     158:	06120111 			; <UNDEFINED> instruction: 0x06120111
     15c:	341b0000 	ldrcc	r0, [fp], #-0
     160:	3a080300 	bcc	200d68 <startup-0x1fdff298>
     164:	49053b0b 	stmdbmi	r5, {r0, r1, r3, r8, r9, fp, ip, sp}
     168:	00180213 	andseq	r0, r8, r3, lsl r2
     16c:	002e1c00 	eoreq	r1, lr, r0, lsl #24
     170:	0e03193f 			; <UNDEFINED> instruction: 0x0e03193f
     174:	0b3b0b3a 	bleq	ec2e64 <startup-0x1f13d19c>
     178:	01111927 	tsteq	r1, r7, lsr #18
     17c:	18400612 	stmdane	r0, {r1, r4, r9, sl}^
     180:	00194296 	mulseq	r9, r6, r2
     184:	002e1d00 	eoreq	r1, lr, r0, lsl #26
     188:	0e03193f 			; <UNDEFINED> instruction: 0x0e03193f
     18c:	0b3b0b3a 	bleq	ec2e7c <startup-0x1f13d184>
     190:	01111927 	tsteq	r1, r7, lsr #18
     194:	18400612 	stmdane	r0, {r1, r4, r9, sl}^
     198:	00194297 	mulseq	r9, r7, r2
     19c:	11010000 	mrsne	r0, (UNDEF: 1)
     1a0:	130e2501 	movwne	r2, #58625	; 0xe501
     1a4:	110e030b 	tstne	lr, fp, lsl #6
     1a8:	10061201 	andne	r1, r6, r1, lsl #4
     1ac:	02000017 	andeq	r0, r0, #23
     1b0:	0b0b0113 	bleq	2c0604 <startup-0x1fd3f9fc>
     1b4:	0b3b0b3a 	bleq	ec2ea4 <startup-0x1f13d15c>
     1b8:	00001301 	andeq	r1, r0, r1, lsl #6
     1bc:	03000d03 	movweq	r0, #3331	; 0xd03
     1c0:	3b0b3a0e 	blcc	2cea00 <startup-0x1fd31600>
     1c4:	3813490b 	ldmdacc	r3, {r0, r1, r3, r8, fp, lr}
     1c8:	0400000b 	streq	r0, [r0], #-11
     1cc:	0b0b0024 	bleq	2c0264 <startup-0x1fd3fd9c>
     1d0:	0e030b3e 	vmoveq.16	d3[0], r0
     1d4:	0f050000 	svceq	0x00050000
     1d8:	490b0b00 	stmdbmi	fp, {r8, r9, fp}
     1dc:	06000013 			; <UNDEFINED> instruction: 0x06000013
     1e0:	0e030016 	mcreq	0, 0, r0, cr3, cr6, {0}
     1e4:	0b3b0b3a 	bleq	ec2ed4 <startup-0x1f13d12c>
     1e8:	00001349 	andeq	r1, r0, r9, asr #6
     1ec:	03011307 	movweq	r1, #4871	; 0x1307
     1f0:	3a0b0b0e 	bcc	2c2e30 <startup-0x1fd3d1d0>
     1f4:	010b3b0b 	tsteq	fp, fp, lsl #22
     1f8:	08000013 	stmdaeq	r0, {r0, r1, r4}
     1fc:	0b0b0024 	bleq	2c0294 <startup-0x1fd3fd6c>
     200:	08030b3e 	stmdaeq	r3, {r1, r2, r3, r4, r5, r8, r9, fp}
     204:	15090000 	strne	r0, [r9, #-0]
     208:	01192701 	tsteq	r9, r1, lsl #14
     20c:	0a000013 	beq	260 <startup-0x1ffffda0>
     210:	13490005 	movtne	r0, #36869	; 0x9005
     214:	010b0000 	mrseq	r0, (UNDEF: 11)
     218:	01134901 	tsteq	r3, r1, lsl #18
     21c:	0c000013 	stceq	0, cr0, [r0], {19}
     220:	00000021 	andeq	r0, r0, r1, lsr #32
     224:	0300340d 	movweq	r3, #1037	; 0x40d
     228:	3b0b3a0e 	blcc	2cea68 <startup-0x1fd31598>
     22c:	3f13490b 	svccc	0x0013490b
     230:	00193c19 	andseq	r3, r9, r9, lsl ip
     234:	00340e00 	eorseq	r0, r4, r0, lsl #28
     238:	0b3a1347 	bleq	e84f5c <startup-0x1f17b0a4>
     23c:	18020b3b 	stmdane	r2, {r0, r1, r3, r4, r5, r8, r9, fp}
     240:	2e0f0000 	cdpcs	0, 0, cr0, cr15, cr0, {0}
     244:	03193f01 	tsteq	r9, #1, 30
     248:	3b0b3a0e 	blcc	2cea88 <startup-0x1fd31578>
     24c:	1119270b 	tstne	r9, fp, lsl #14
     250:	40061201 	andmi	r1, r6, r1, lsl #4
     254:	19429618 	stmdbne	r2, {r3, r4, r9, sl, ip, pc}^
     258:	00001301 	andeq	r1, r0, r1, lsl #6
     25c:	03000510 	movweq	r0, #1296	; 0x510
     260:	3b0b3a0e 	blcc	2ceaa0 <startup-0x1fd31560>
     264:	0213490b 	andseq	r4, r3, #180224	; 0x2c000
     268:	11000018 	tstne	r0, r8, lsl r0
     26c:	193f012e 	ldmdbne	pc!, {r1, r2, r3, r5, r8}	; <UNPREDICTABLE>
     270:	0b3a0e03 	bleq	e83a84 <startup-0x1f17c57c>
     274:	19270b3b 	stmdbne	r7!, {r0, r1, r3, r4, r5, r8, r9, fp}
     278:	06120111 			; <UNDEFINED> instruction: 0x06120111
     27c:	42971840 	addsmi	r1, r7, #64, 16	; 0x400000
     280:	00000019 	andeq	r0, r0, r9, lsl r0
     284:	25011101 	strcs	r1, [r1, #-257]	; 0xfffffeff
     288:	030b130e 	movweq	r1, #45838	; 0xb30e
     28c:	1201110e 	andne	r1, r1, #-2147483645	; 0x80000003
     290:	00171006 	andseq	r1, r7, r6
     294:	01130200 	tsteq	r3, r0, lsl #4
     298:	0b3a0b0b 	bleq	e82ecc <startup-0x1f17d134>
     29c:	13010b3b 	movwne	r0, #6971	; 0x1b3b
     2a0:	0d030000 	stceq	0, cr0, [r3, #-0]
     2a4:	3a0e0300 	bcc	380eac <startup-0x1fc7f154>
     2a8:	490b3b0b 	stmdbmi	fp, {r0, r1, r3, r8, r9, fp, ip, sp}
     2ac:	000b3813 	andeq	r3, fp, r3, lsl r8
     2b0:	00240400 	eoreq	r0, r4, r0, lsl #8
     2b4:	0b3e0b0b 	bleq	f82ee8 <startup-0x1f07d118>
     2b8:	00000e03 	andeq	r0, r0, r3, lsl #28
     2bc:	0b000f05 	bleq	3ed8 <startup-0x1fffc128>
     2c0:	0013490b 	andseq	r4, r3, fp, lsl #18
     2c4:	00160600 	andseq	r0, r6, r0, lsl #12
     2c8:	0b3a0e03 	bleq	e83adc <startup-0x1f17c524>
     2cc:	13490b3b 	movtne	r0, #39739	; 0x9b3b
     2d0:	13070000 	movwne	r0, #28672	; 0x7000
     2d4:	0b0e0301 	bleq	380ee0 <startup-0x1fc7f120>
     2d8:	3b0b3a0b 	blcc	2ceb0c <startup-0x1fd314f4>
     2dc:	0013010b 	andseq	r0, r3, fp, lsl #2
     2e0:	00240800 	eoreq	r0, r4, r0, lsl #16
     2e4:	0b3e0b0b 	bleq	f82f18 <startup-0x1f07d0e8>
     2e8:	00000803 	andeq	r0, r0, r3, lsl #16
     2ec:	27011509 	strcs	r1, [r1, -r9, lsl #10]
     2f0:	00130119 	andseq	r0, r3, r9, lsl r1
     2f4:	00050a00 	andeq	r0, r5, r0, lsl #20
     2f8:	00001349 	andeq	r1, r0, r9, asr #6
     2fc:	4901010b 	stmdbmi	r1, {r0, r1, r3, r8}
     300:	00130113 	andseq	r0, r3, r3, lsl r1
     304:	00210c00 	eoreq	r0, r1, r0, lsl #24
     308:	340d0000 	strcc	r0, [sp], #-0
     30c:	3a0e0300 	bcc	380f14 <startup-0x1fc7f0ec>
     310:	490b3b0b 	stmdbmi	fp, {r0, r1, r3, r8, r9, fp, ip, sp}
     314:	3c193f13 	ldccc	15, cr3, [r9], {19}
     318:	0e000019 	mcreq	0, 0, r0, cr0, cr9, {0}
     31c:	13490021 	movtne	r0, #36897	; 0x9021
     320:	00000b2f 	andeq	r0, r0, pc, lsr #22
     324:	0300340f 	movweq	r3, #1039	; 0x40f
     328:	3b0b3a0e 	blcc	2ceb68 <startup-0x1fd31498>
     32c:	0213490b 	andseq	r4, r3, #180224	; 0x2c000
     330:	10000018 	andne	r0, r0, r8, lsl r0
     334:	0e030034 	mcreq	0, 0, r0, cr3, cr4, {1}
     338:	0b3b0b3a 	bleq	ec3028 <startup-0x1f13cfd8>
     33c:	193f1349 	ldmdbne	pc!, {r0, r3, r6, r8, r9, ip}	; <UNPREDICTABLE>
     340:	00001802 	andeq	r1, r0, r2, lsl #16
     344:	3f012e11 	svccc	0x00012e11
     348:	3a0e0319 	bcc	380fb4 <startup-0x1fc7f04c>
     34c:	270b3b0b 	strcs	r3, [fp, -fp, lsl #22]
     350:	12011119 	andne	r1, r1, #1073741830	; 0x40000006
     354:	96184006 	ldrls	r4, [r8], -r6
     358:	13011942 	movwne	r1, #6466	; 0x1942
     35c:	05120000 	ldreq	r0, [r2, #-0]
     360:	3a0e0300 	bcc	380f68 <startup-0x1fc7f098>
     364:	490b3b0b 	stmdbmi	fp, {r0, r1, r3, r8, r9, fp, ip, sp}
     368:	00180213 	andseq	r0, r8, r3, lsl r2
     36c:	012e1300 			; <UNDEFINED> instruction: 0x012e1300
     370:	0b3a0e03 	bleq	e83b84 <startup-0x1f17c47c>
     374:	19270b3b 	stmdbne	r7!, {r0, r1, r3, r4, r5, r8, r9, fp}
     378:	06120111 			; <UNDEFINED> instruction: 0x06120111
     37c:	42961840 	addsmi	r1, r6, #64, 16	; 0x400000
     380:	00000019 	andeq	r0, r0, r9, lsl r0
     384:	25011101 	strcs	r1, [r1, #-257]	; 0xfffffeff
     388:	030b130e 	movweq	r1, #45838	; 0xb30e
     38c:	1201110e 	andne	r1, r1, #-2147483645	; 0x80000003
     390:	00171006 	andseq	r1, r7, r6
     394:	00240200 	eoreq	r0, r4, r0, lsl #4
     398:	0b3e0b0b 	bleq	f82fcc <startup-0x1f07d034>
     39c:	00000e03 	andeq	r0, r0, r3, lsl #28
     3a0:	0b011303 	bleq	44fb4 <startup-0x1ffbb04c>
     3a4:	3b0b3a0b 	blcc	2cebd8 <startup-0x1fd31428>
     3a8:	0013010b 	andseq	r0, r3, fp, lsl #2
     3ac:	000d0400 	andeq	r0, sp, r0, lsl #8
     3b0:	0b3a0e03 	bleq	e83bc4 <startup-0x1f17c43c>
     3b4:	13490b3b 	movtne	r0, #39739	; 0x9b3b
     3b8:	00000b38 	andeq	r0, r0, r8, lsr fp
     3bc:	0b000f05 	bleq	3fd8 <startup-0x1fffc028>
     3c0:	0013490b 	andseq	r4, r3, fp, lsl #18
     3c4:	00160600 	andseq	r0, r6, r0, lsl #12
     3c8:	0b3a0e03 	bleq	e83bdc <startup-0x1f17c424>
     3cc:	13490b3b 	movtne	r0, #39739	; 0x9b3b
     3d0:	13070000 	movwne	r0, #28672	; 0x7000
     3d4:	0b0e0301 	bleq	380fe0 <startup-0x1fc7f020>
     3d8:	3b0b3a0b 	blcc	2cec0c <startup-0x1fd313f4>
     3dc:	0013010b 	andseq	r0, r3, fp, lsl #2
     3e0:	00240800 	eoreq	r0, r4, r0, lsl #16
     3e4:	0b3e0b0b 	bleq	f83018 <startup-0x1f07cfe8>
     3e8:	00000803 	andeq	r0, r0, r3, lsl #16
     3ec:	27011509 	strcs	r1, [r1, -r9, lsl #10]
     3f0:	00130119 	andseq	r0, r3, r9, lsl r1
     3f4:	00050a00 	andeq	r0, r5, r0, lsl #20
     3f8:	00001349 	andeq	r1, r0, r9, asr #6
     3fc:	4901010b 	stmdbmi	r1, {r0, r1, r3, r8}
     400:	00130113 	andseq	r0, r3, r3, lsl r1
     404:	00210c00 	eoreq	r0, r1, r0, lsl #24
     408:	340d0000 	strcc	r0, [sp], #-0
     40c:	3a0e0300 	bcc	381014 <startup-0x1fc7efec>
     410:	490b3b0b 	stmdbmi	fp, {r0, r1, r3, r8, r9, fp, ip, sp}
     414:	3c193f13 	ldccc	15, cr3, [r9], {19}
     418:	0e000019 	mcreq	0, 0, r0, cr0, cr9, {0}
     41c:	193f012e 	ldmdbne	pc!, {r1, r2, r3, r5, r8}	; <UNPREDICTABLE>
     420:	0b3a0e03 	bleq	e83c34 <startup-0x1f17c3cc>
     424:	19270b3b 	stmdbne	r7!, {r0, r1, r3, r4, r5, r8, r9, fp}
     428:	06120111 			; <UNDEFINED> instruction: 0x06120111
     42c:	42961840 	addsmi	r1, r6, #64, 16	; 0x400000
     430:	0f000019 	svceq	0x00000019
     434:	0e030005 	cdpeq	0, 0, cr0, cr3, cr5, {0}
     438:	0b3b0b3a 	bleq	ec3128 <startup-0x1f13ced8>
     43c:	18021349 	stmdane	r2, {r0, r3, r6, r8, r9, ip}
     440:	34100000 	ldrcc	r0, [r0], #-0
     444:	3a0e0300 	bcc	38104c <startup-0x1fc7efb4>
     448:	490b3b0b 	stmdbmi	fp, {r0, r1, r3, r8, r9, fp, ip, sp}
     44c:	00180213 	andseq	r0, r8, r3, lsl r2
     450:	11010000 	mrsne	r0, (UNDEF: 1)
     454:	130e2501 	movwne	r2, #58625	; 0xe501
     458:	110e030b 	tstne	lr, fp, lsl #6
     45c:	10061201 	andne	r1, r6, r1, lsl #4
     460:	02000017 	andeq	r0, r0, #23
     464:	0b0b0113 	bleq	2c08b8 <startup-0x1fd3f748>
     468:	0b3b0b3a 	bleq	ec3158 <startup-0x1f13cea8>
     46c:	00001301 	andeq	r1, r0, r1, lsl #6
     470:	03000d03 	movweq	r0, #3331	; 0xd03
     474:	3b0b3a0e 	blcc	2cecb4 <startup-0x1fd3134c>
     478:	3813490b 	ldmdacc	r3, {r0, r1, r3, r8, fp, lr}
     47c:	0400000b 	streq	r0, [r0], #-11
     480:	0b0b0024 	bleq	2c0518 <startup-0x1fd3fae8>
     484:	0e030b3e 	vmoveq.16	d3[0], r0
     488:	0f050000 	svceq	0x00050000
     48c:	490b0b00 	stmdbmi	fp, {r8, r9, fp}
     490:	06000013 			; <UNDEFINED> instruction: 0x06000013
     494:	0e030016 	mcreq	0, 0, r0, cr3, cr6, {0}
     498:	0b3b0b3a 	bleq	ec3188 <startup-0x1f13ce78>
     49c:	00001349 	andeq	r1, r0, r9, asr #6
     4a0:	03011307 	movweq	r1, #4871	; 0x1307
     4a4:	3a0b0b0e 	bcc	2c30e4 <startup-0x1fd3cf1c>
     4a8:	010b3b0b 	tsteq	fp, fp, lsl #22
     4ac:	08000013 	stmdaeq	r0, {r0, r1, r4}
     4b0:	0b0b0024 	bleq	2c0548 <startup-0x1fd3fab8>
     4b4:	08030b3e 	stmdaeq	r3, {r1, r2, r3, r4, r5, r8, r9, fp}
     4b8:	15090000 	strne	r0, [r9, #-0]
     4bc:	01192701 	tsteq	r9, r1, lsl #14
     4c0:	0a000013 	beq	514 <startup-0x1ffffaec>
     4c4:	13490005 	movtne	r0, #36869	; 0x9005
     4c8:	010b0000 	mrseq	r0, (UNDEF: 11)
     4cc:	01134901 	tsteq	r3, r1, lsl #18
     4d0:	0c000013 	stceq	0, cr0, [r0], {19}
     4d4:	00000021 	andeq	r0, r0, r1, lsr #32
     4d8:	0300340d 	movweq	r3, #1037	; 0x40d
     4dc:	3b0b3a0e 	blcc	2ced1c <startup-0x1fd312e4>
     4e0:	3f13490b 	svccc	0x0013490b
     4e4:	00193c19 	andseq	r3, r9, r9, lsl ip
     4e8:	00210e00 	eoreq	r0, r1, r0, lsl #28
     4ec:	0b2f1349 	bleq	bc5218 <startup-0x1f43ade8>
     4f0:	340f0000 	strcc	r0, [pc], #-0	; 4f8 <startup-0x1ffffb08>
     4f4:	3a0e0300 	bcc	3810fc <startup-0x1fc7ef04>
     4f8:	490b3b0b 	stmdbmi	fp, {r0, r1, r3, r8, r9, fp, ip, sp}
     4fc:	00180213 	andseq	r0, r8, r3, lsl r2
     500:	00341000 	eorseq	r1, r4, r0
     504:	0b3a0e03 	bleq	e83d18 <startup-0x1f17c2e8>
     508:	13490b3b 	movtne	r0, #39739	; 0x9b3b
     50c:	1802193f 	stmdane	r2, {r0, r1, r2, r3, r4, r5, r8, fp, ip}
     510:	2e110000 	cdpcs	0, 1, cr0, cr1, cr0, {0}
     514:	03193f01 	tsteq	r9, #1, 30
     518:	3b0b3a0e 	blcc	2ced58 <startup-0x1fd312a8>
     51c:	1119270b 	tstne	r9, fp, lsl #14
     520:	40061201 	andmi	r1, r6, r1, lsl #4
     524:	19429618 	stmdbne	r2, {r3, r4, r9, sl, ip, pc}^
     528:	00001301 	andeq	r1, r0, r1, lsl #6
     52c:	03000512 	movweq	r0, #1298	; 0x512
     530:	3b0b3a0e 	blcc	2ced70 <startup-0x1fd31290>
     534:	0213490b 	andseq	r4, r3, #180224	; 0x2c000
     538:	13000018 	movwne	r0, #24
     53c:	0e03012e 	adfeqsp	f0, f3, #0.5
     540:	0b3b0b3a 	bleq	ec3230 <startup-0x1f13cdd0>
     544:	01111927 	tsteq	r1, r7, lsr #18
     548:	18400612 	stmdane	r0, {r1, r4, r9, sl}^
     54c:	00194296 	mulseq	r9, r6, r2
     550:	11010000 	mrsne	r0, (UNDEF: 1)
     554:	130e2501 	movwne	r2, #58625	; 0xe501
     558:	110e030b 	tstne	lr, fp, lsl #6
     55c:	10061201 	andne	r1, r6, r1, lsl #4
     560:	02000017 	andeq	r0, r0, #23
     564:	0b0b0113 	bleq	2c09b8 <startup-0x1fd3f648>
     568:	0b3b0b3a 	bleq	ec3258 <startup-0x1f13cda8>
     56c:	00001301 	andeq	r1, r0, r1, lsl #6
     570:	03000d03 	movweq	r0, #3331	; 0xd03
     574:	3b0b3a0e 	blcc	2cedb4 <startup-0x1fd3124c>
     578:	3813490b 	ldmdacc	r3, {r0, r1, r3, r8, fp, lr}
     57c:	0400000b 	streq	r0, [r0], #-11
     580:	0b0b0024 	bleq	2c0618 <startup-0x1fd3f9e8>
     584:	0e030b3e 	vmoveq.16	d3[0], r0
     588:	0f050000 	svceq	0x00050000
     58c:	490b0b00 	stmdbmi	fp, {r8, r9, fp}
     590:	06000013 			; <UNDEFINED> instruction: 0x06000013
     594:	0e030016 	mcreq	0, 0, r0, cr3, cr6, {0}
     598:	0b3b0b3a 	bleq	ec3288 <startup-0x1f13cd78>
     59c:	00001349 	andeq	r1, r0, r9, asr #6
     5a0:	03011307 	movweq	r1, #4871	; 0x1307
     5a4:	3a0b0b0e 	bcc	2c31e4 <startup-0x1fd3ce1c>
     5a8:	010b3b0b 	tsteq	fp, fp, lsl #22
     5ac:	08000013 	stmdaeq	r0, {r0, r1, r4}
     5b0:	0b0b0024 	bleq	2c0648 <startup-0x1fd3f9b8>
     5b4:	08030b3e 	stmdaeq	r3, {r1, r2, r3, r4, r5, r8, r9, fp}
     5b8:	15090000 	strne	r0, [r9, #-0]
     5bc:	01192701 	tsteq	r9, r1, lsl #14
     5c0:	0a000013 	beq	614 <startup-0x1ffff9ec>
     5c4:	13490005 	movtne	r0, #36869	; 0x9005
     5c8:	010b0000 	mrseq	r0, (UNDEF: 11)
     5cc:	01134901 	tsteq	r3, r1, lsl #18
     5d0:	0c000013 	stceq	0, cr0, [r0], {19}
     5d4:	00000021 	andeq	r0, r0, r1, lsr #32
     5d8:	0300340d 	movweq	r3, #1037	; 0x40d
     5dc:	3b0b3a0e 	blcc	2cee1c <startup-0x1fd311e4>
     5e0:	3f13490b 	svccc	0x0013490b
     5e4:	00193c19 	andseq	r3, r9, r9, lsl ip
     5e8:	00210e00 	eoreq	r0, r1, r0, lsl #28
     5ec:	0b2f1349 	bleq	bc5318 <startup-0x1f43ace8>
     5f0:	340f0000 	strcc	r0, [pc], #-0	; 5f8 <startup-0x1ffffa08>
     5f4:	3a0e0300 	bcc	3811fc <startup-0x1fc7ee04>
     5f8:	490b3b0b 	stmdbmi	fp, {r0, r1, r3, r8, r9, fp, ip, sp}
     5fc:	00180213 	andseq	r0, r8, r3, lsl r2
     600:	00341000 	eorseq	r1, r4, r0
     604:	0b3a0e03 	bleq	e83e18 <startup-0x1f17c1e8>
     608:	13490b3b 	movtne	r0, #39739	; 0x9b3b
     60c:	1802193f 	stmdane	r2, {r0, r1, r2, r3, r4, r5, r8, fp, ip}
     610:	2e110000 	cdpcs	0, 1, cr0, cr1, cr0, {0}
     614:	03193f01 	tsteq	r9, #1, 30
     618:	3b0b3a0e 	blcc	2cee58 <startup-0x1fd311a8>
     61c:	1119270b 	tstne	r9, fp, lsl #14
     620:	40061201 	andmi	r1, r6, r1, lsl #4
     624:	19429618 	stmdbne	r2, {r3, r4, r9, sl, ip, pc}^
     628:	00001301 	andeq	r1, r0, r1, lsl #6
     62c:	03000512 	movweq	r0, #1298	; 0x512
     630:	3b0b3a0e 	blcc	2cee70 <startup-0x1fd31190>
     634:	0213490b 	andseq	r4, r3, #180224	; 0x2c000
     638:	13000018 	movwne	r0, #24
     63c:	0e03012e 	adfeqsp	f0, f3, #0.5
     640:	0b3b0b3a 	bleq	ec3330 <startup-0x1f13ccd0>
     644:	01111927 	tsteq	r1, r7, lsr #18
     648:	18400612 	stmdane	r0, {r1, r4, r9, sl}^
     64c:	00194296 	mulseq	r9, r6, r2
     650:	11010000 	mrsne	r0, (UNDEF: 1)
     654:	130e2501 	movwne	r2, #58625	; 0xe501
     658:	110e030b 	tstne	lr, fp, lsl #6
     65c:	10061201 	andne	r1, r6, r1, lsl #4
     660:	02000017 	andeq	r0, r0, #23
     664:	0b0b0113 	bleq	2c0ab8 <startup-0x1fd3f548>
     668:	0b3b0b3a 	bleq	ec3358 <startup-0x1f13cca8>
     66c:	00001301 	andeq	r1, r0, r1, lsl #6
     670:	03000d03 	movweq	r0, #3331	; 0xd03
     674:	3b0b3a0e 	blcc	2ceeb4 <startup-0x1fd3114c>
     678:	3813490b 	ldmdacc	r3, {r0, r1, r3, r8, fp, lr}
     67c:	0400000b 	streq	r0, [r0], #-11
     680:	0b0b0024 	bleq	2c0718 <startup-0x1fd3f8e8>
     684:	0e030b3e 	vmoveq.16	d3[0], r0
     688:	0f050000 	svceq	0x00050000
     68c:	490b0b00 	stmdbmi	fp, {r8, r9, fp}
     690:	06000013 			; <UNDEFINED> instruction: 0x06000013
     694:	0e030016 	mcreq	0, 0, r0, cr3, cr6, {0}
     698:	0b3b0b3a 	bleq	ec3388 <startup-0x1f13cc78>
     69c:	00001349 	andeq	r1, r0, r9, asr #6
     6a0:	03011307 	movweq	r1, #4871	; 0x1307
     6a4:	3a0b0b0e 	bcc	2c32e4 <startup-0x1fd3cd1c>
     6a8:	010b3b0b 	tsteq	fp, fp, lsl #22
     6ac:	08000013 	stmdaeq	r0, {r0, r1, r4}
     6b0:	0b0b0024 	bleq	2c0748 <startup-0x1fd3f8b8>
     6b4:	08030b3e 	stmdaeq	r3, {r1, r2, r3, r4, r5, r8, r9, fp}
     6b8:	15090000 	strne	r0, [r9, #-0]
     6bc:	01192701 	tsteq	r9, r1, lsl #14
     6c0:	0a000013 	beq	714 <startup-0x1ffff8ec>
     6c4:	13490005 	movtne	r0, #36869	; 0x9005
     6c8:	010b0000 	mrseq	r0, (UNDEF: 11)
     6cc:	01134901 	tsteq	r3, r1, lsl #18
     6d0:	0c000013 	stceq	0, cr0, [r0], {19}
     6d4:	00000021 	andeq	r0, r0, r1, lsr #32
     6d8:	0300340d 	movweq	r3, #1037	; 0x40d
     6dc:	3b0b3a0e 	blcc	2cef1c <startup-0x1fd310e4>
     6e0:	3f13490b 	svccc	0x0013490b
     6e4:	00193c19 	andseq	r3, r9, r9, lsl ip
     6e8:	00210e00 	eoreq	r0, r1, r0, lsl #28
     6ec:	0b2f1349 	bleq	bc5418 <startup-0x1f43abe8>
     6f0:	340f0000 	strcc	r0, [pc], #-0	; 6f8 <startup-0x1ffff908>
     6f4:	3a0e0300 	bcc	3812fc <startup-0x1fc7ed04>
     6f8:	490b3b0b 	stmdbmi	fp, {r0, r1, r3, r8, r9, fp, ip, sp}
     6fc:	00180213 	andseq	r0, r8, r3, lsl r2
     700:	00341000 	eorseq	r1, r4, r0
     704:	0b3a0e03 	bleq	e83f18 <startup-0x1f17c0e8>
     708:	13490b3b 	movtne	r0, #39739	; 0x9b3b
     70c:	1802193f 	stmdane	r2, {r0, r1, r2, r3, r4, r5, r8, fp, ip}
     710:	2e110000 	cdpcs	0, 1, cr0, cr1, cr0, {0}
     714:	03193f01 	tsteq	r9, #1, 30
     718:	3b0b3a0e 	blcc	2cef58 <startup-0x1fd310a8>
     71c:	1119270b 	tstne	r9, fp, lsl #14
     720:	40061201 	andmi	r1, r6, r1, lsl #4
     724:	19429618 	stmdbne	r2, {r3, r4, r9, sl, ip, pc}^
     728:	00001301 	andeq	r1, r0, r1, lsl #6
     72c:	03000512 	movweq	r0, #1298	; 0x512
     730:	3b0b3a0e 	blcc	2cef70 <startup-0x1fd31090>
     734:	0213490b 	andseq	r4, r3, #180224	; 0x2c000
     738:	13000018 	movwne	r0, #24
     73c:	193f012e 	ldmdbne	pc!, {r1, r2, r3, r5, r8}	; <UNPREDICTABLE>
     740:	0b3a0e03 	bleq	e83f54 <startup-0x1f17c0ac>
     744:	19270b3b 	stmdbne	r7!, {r0, r1, r3, r4, r5, r8, r9, fp}
     748:	06120111 			; <UNDEFINED> instruction: 0x06120111
     74c:	42971840 	addsmi	r1, r7, #64, 16	; 0x400000
     750:	00130119 	andseq	r0, r3, r9, lsl r1
     754:	00051400 	andeq	r1, r5, r0, lsl #8
     758:	0b3a0803 	bleq	e8276c <startup-0x1f17d894>
     75c:	13490b3b 	movtne	r0, #39739	; 0x9b3b
     760:	00001802 	andeq	r1, r0, r2, lsl #16
     764:	03012e15 	movweq	r2, #7701	; 0x1e15
     768:	3b0b3a0e 	blcc	2cefa8 <startup-0x1fd31058>
     76c:	1119270b 	tstne	r9, fp, lsl #14
     770:	40061201 	andmi	r1, r6, r1, lsl #4
     774:	19429618 	stmdbne	r2, {r3, r4, r9, sl, ip, pc}^
     778:	01000000 	mrseq	r0, (UNDEF: 0)
     77c:	0e250111 	mcreq	1, 1, r0, cr5, cr1, {0}
     780:	0e030b13 	vmoveq.32	d3[0], r0
     784:	06120111 			; <UNDEFINED> instruction: 0x06120111
     788:	00001710 	andeq	r1, r0, r0, lsl r7
     78c:	0b011302 	bleq	4539c <startup-0x1ffbac64>
     790:	3b0b3a0b 	blcc	2cefc4 <startup-0x1fd3103c>
     794:	0013010b 	andseq	r0, r3, fp, lsl #2
     798:	000d0300 	andeq	r0, sp, r0, lsl #6
     79c:	0b3a0e03 	bleq	e83fb0 <startup-0x1f17c050>
     7a0:	13490b3b 	movtne	r0, #39739	; 0x9b3b
     7a4:	00000b38 	andeq	r0, r0, r8, lsr fp
     7a8:	0b002404 	bleq	97c0 <startup-0x1fff6840>
     7ac:	030b3e0b 	movweq	r3, #48651	; 0xbe0b
     7b0:	0500000e 	streq	r0, [r0, #-14]
     7b4:	0b0b000f 	bleq	2c07f8 <startup-0x1fd3f808>
     7b8:	00001349 	andeq	r1, r0, r9, asr #6
     7bc:	03001606 	movweq	r1, #1542	; 0x606
     7c0:	3b0b3a0e 	blcc	2cf000 <startup-0x1fd31000>
     7c4:	0013490b 	andseq	r4, r3, fp, lsl #18
     7c8:	01130700 	tsteq	r3, r0, lsl #14
     7cc:	0b0b0e03 	bleq	2c3fe0 <startup-0x1fd3c020>
     7d0:	0b3b0b3a 	bleq	ec34c0 <startup-0x1f13cb40>
     7d4:	00001301 	andeq	r1, r0, r1, lsl #6
     7d8:	0b002408 	bleq	9800 <startup-0x1fff6800>
     7dc:	030b3e0b 	movweq	r3, #48651	; 0xbe0b
     7e0:	09000008 	stmdbeq	r0, {r3}
     7e4:	19270115 	stmdbne	r7!, {r0, r2, r4, r8}
     7e8:	00001301 	andeq	r1, r0, r1, lsl #6
     7ec:	4900050a 	stmdbmi	r0, {r1, r3, r8, sl}
     7f0:	0b000013 	bleq	844 <startup-0x1ffff7bc>
     7f4:	13490101 	movtne	r0, #37121	; 0x9101
     7f8:	00001301 	andeq	r1, r0, r1, lsl #6
     7fc:	0000210c 	andeq	r2, r0, ip, lsl #2
     800:	00340d00 	eorseq	r0, r4, r0, lsl #26
     804:	0b3a0e03 	bleq	e84018 <startup-0x1f17bfe8>
     808:	13490b3b 	movtne	r0, #39739	; 0x9b3b
     80c:	193c193f 	ldmdbne	ip!, {r0, r1, r2, r3, r4, r5, r8, fp, ip}
     810:	210e0000 	mrscs	r0, (UNDEF: 14)
     814:	2f134900 	svccs	0x00134900
     818:	0f00000b 	svceq	0x0000000b
     81c:	0e030034 	mcreq	0, 0, r0, cr3, cr4, {1}
     820:	0b3b0b3a 	bleq	ec3510 <startup-0x1f13caf0>
     824:	18021349 	stmdane	r2, {r0, r3, r6, r8, r9, ip}
     828:	34100000 	ldrcc	r0, [r0], #-0
     82c:	3a0e0300 	bcc	381434 <startup-0x1fc7ebcc>
     830:	490b3b0b 	stmdbmi	fp, {r0, r1, r3, r8, r9, fp, ip, sp}
     834:	02193f13 	andseq	r3, r9, #19, 30	; 0x4c
     838:	11000018 	tstne	r0, r8, lsl r0
     83c:	193f012e 	ldmdbne	pc!, {r1, r2, r3, r5, r8}	; <UNPREDICTABLE>
     840:	0b3a0e03 	bleq	e84054 <startup-0x1f17bfac>
     844:	19270b3b 	stmdbne	r7!, {r0, r1, r3, r4, r5, r8, r9, fp}
     848:	06120111 			; <UNDEFINED> instruction: 0x06120111
     84c:	42961840 	addsmi	r1, r6, #64, 16	; 0x400000
     850:	00130119 	andseq	r0, r3, r9, lsl r1
     854:	00051200 	andeq	r1, r5, r0, lsl #4
     858:	0b3a0e03 	bleq	e8406c <startup-0x1f17bf94>
     85c:	13490b3b 	movtne	r0, #39739	; 0x9b3b
     860:	00001802 	andeq	r1, r0, r2, lsl #16
     864:	03012e13 	movweq	r2, #7699	; 0x1e13
     868:	3b0b3a0e 	blcc	2cf0a8 <startup-0x1fd30f58>
     86c:	1119270b 	tstne	r9, fp, lsl #14
     870:	40061201 	andmi	r1, r6, r1, lsl #4
     874:	19429618 	stmdbne	r2, {r3, r4, r9, sl, ip, pc}^
     878:	01000000 	mrseq	r0, (UNDEF: 0)
     87c:	0e250111 	mcreq	1, 1, r0, cr5, cr1, {0}
     880:	0e030b13 	vmoveq.32	d3[0], r0
     884:	06120111 			; <UNDEFINED> instruction: 0x06120111
     888:	00001710 	andeq	r1, r0, r0, lsl r7
     88c:	0b011302 	bleq	4549c <startup-0x1ffbab64>
     890:	3b0b3a0b 	blcc	2cf0c4 <startup-0x1fd30f3c>
     894:	0013010b 	andseq	r0, r3, fp, lsl #2
     898:	000d0300 	andeq	r0, sp, r0, lsl #6
     89c:	0b3a0e03 	bleq	e840b0 <startup-0x1f17bf50>
     8a0:	13490b3b 	movtne	r0, #39739	; 0x9b3b
     8a4:	00000b38 	andeq	r0, r0, r8, lsr fp
     8a8:	0b002404 	bleq	98c0 <startup-0x1fff6740>
     8ac:	030b3e0b 	movweq	r3, #48651	; 0xbe0b
     8b0:	0500000e 	streq	r0, [r0, #-14]
     8b4:	0b0b000f 	bleq	2c08f8 <startup-0x1fd3f708>
     8b8:	00001349 	andeq	r1, r0, r9, asr #6
     8bc:	03001606 	movweq	r1, #1542	; 0x606
     8c0:	3b0b3a0e 	blcc	2cf100 <startup-0x1fd30f00>
     8c4:	0013490b 	andseq	r4, r3, fp, lsl #18
     8c8:	01130700 	tsteq	r3, r0, lsl #14
     8cc:	0b0b0e03 	bleq	2c40e0 <startup-0x1fd3bf20>
     8d0:	0b3b0b3a 	bleq	ec35c0 <startup-0x1f13ca40>
     8d4:	00001301 	andeq	r1, r0, r1, lsl #6
     8d8:	0b002408 	bleq	9900 <startup-0x1fff6700>
     8dc:	030b3e0b 	movweq	r3, #48651	; 0xbe0b
     8e0:	09000008 	stmdbeq	r0, {r3}
     8e4:	19270115 	stmdbne	r7!, {r0, r2, r4, r8}
     8e8:	00001301 	andeq	r1, r0, r1, lsl #6
     8ec:	4900050a 	stmdbmi	r0, {r1, r3, r8, sl}
     8f0:	0b000013 	bleq	944 <startup-0x1ffff6bc>
     8f4:	13490101 	movtne	r0, #37121	; 0x9101
     8f8:	00001301 	andeq	r1, r0, r1, lsl #6
     8fc:	0000210c 	andeq	r2, r0, ip, lsl #2
     900:	00340d00 	eorseq	r0, r4, r0, lsl #26
     904:	0b3a0e03 	bleq	e84118 <startup-0x1f17bee8>
     908:	13490b3b 	movtne	r0, #39739	; 0x9b3b
     90c:	193c193f 	ldmdbne	ip!, {r0, r1, r2, r3, r4, r5, r8, fp, ip}
     910:	210e0000 	mrscs	r0, (UNDEF: 14)
     914:	2f134900 	svccs	0x00134900
     918:	0f000005 	svceq	0x00000005
     91c:	0e030034 	mcreq	0, 0, r0, cr3, cr4, {1}
     920:	0b3b0b3a 	bleq	ec3610 <startup-0x1f13c9f0>
     924:	18021349 	stmdane	r2, {r0, r3, r6, r8, r9, ip}
     928:	34100000 	ldrcc	r0, [r0], #-0
     92c:	3a0e0300 	bcc	381534 <startup-0x1fc7eacc>
     930:	490b3b0b 	stmdbmi	fp, {r0, r1, r3, r8, r9, fp, ip, sp}
     934:	02193f13 	andseq	r3, r9, #19, 30	; 0x4c
     938:	11000018 	tstne	r0, r8, lsl r0
     93c:	13490021 	movtne	r0, #36897	; 0x9021
     940:	00000b2f 	andeq	r0, r0, pc, lsr #22
     944:	3f012e12 	svccc	0x00012e12
     948:	3a0e0319 	bcc	3815b4 <startup-0x1fc7ea4c>
     94c:	270b3b0b 	strcs	r3, [fp, -fp, lsl #22]
     950:	12011119 	andne	r1, r1, #1073741830	; 0x40000006
     954:	96184006 	ldrls	r4, [r8], -r6
     958:	13011942 	movwne	r1, #6466	; 0x1942
     95c:	05130000 	ldreq	r0, [r3, #-0]
     960:	3a0e0300 	bcc	381568 <startup-0x1fc7ea98>
     964:	490b3b0b 	stmdbmi	fp, {r0, r1, r3, r8, r9, fp, ip, sp}
     968:	00180213 	andseq	r0, r8, r3, lsl r2
     96c:	012e1400 			; <UNDEFINED> instruction: 0x012e1400
     970:	0b3a0e03 	bleq	e84184 <startup-0x1f17be7c>
     974:	19270b3b 	stmdbne	r7!, {r0, r1, r3, r4, r5, r8, r9, fp}
     978:	06120111 			; <UNDEFINED> instruction: 0x06120111
     97c:	42961840 	addsmi	r1, r6, #64, 16	; 0x400000
     980:	00000019 	andeq	r0, r0, r9, lsl r0
     984:	25011101 	strcs	r1, [r1, #-257]	; 0xfffffeff
     988:	030b130e 	movweq	r1, #45838	; 0xb30e
     98c:	1201110e 	andne	r1, r1, #-2147483645	; 0x80000003
     990:	00171006 	andseq	r1, r7, r6
     994:	01130200 	tsteq	r3, r0, lsl #4
     998:	0b3a0b0b 	bleq	e835cc <startup-0x1f17ca34>
     99c:	13010b3b 	movwne	r0, #6971	; 0x1b3b
     9a0:	0d030000 	stceq	0, cr0, [r3, #-0]
     9a4:	3a0e0300 	bcc	3815ac <startup-0x1fc7ea54>
     9a8:	490b3b0b 	stmdbmi	fp, {r0, r1, r3, r8, r9, fp, ip, sp}
     9ac:	000b3813 	andeq	r3, fp, r3, lsl r8
     9b0:	00240400 	eoreq	r0, r4, r0, lsl #8
     9b4:	0b3e0b0b 	bleq	f835e8 <startup-0x1f07ca18>
     9b8:	00000e03 	andeq	r0, r0, r3, lsl #28
     9bc:	0b000f05 	bleq	45d8 <startup-0x1fffba28>
     9c0:	0013490b 	andseq	r4, r3, fp, lsl #18
     9c4:	00160600 	andseq	r0, r6, r0, lsl #12
     9c8:	0b3a0e03 	bleq	e841dc <startup-0x1f17be24>
     9cc:	13490b3b 	movtne	r0, #39739	; 0x9b3b
     9d0:	13070000 	movwne	r0, #28672	; 0x7000
     9d4:	0b0e0301 	bleq	3815e0 <startup-0x1fc7ea20>
     9d8:	3b0b3a0b 	blcc	2cf20c <startup-0x1fd30df4>
     9dc:	0013010b 	andseq	r0, r3, fp, lsl #2
     9e0:	00240800 	eoreq	r0, r4, r0, lsl #16
     9e4:	0b3e0b0b 	bleq	f83618 <startup-0x1f07c9e8>
     9e8:	00000803 	andeq	r0, r0, r3, lsl #16
     9ec:	27011509 	strcs	r1, [r1, -r9, lsl #10]
     9f0:	00130119 	andseq	r0, r3, r9, lsl r1
     9f4:	00050a00 	andeq	r0, r5, r0, lsl #20
     9f8:	00001349 	andeq	r1, r0, r9, asr #6
     9fc:	4901010b 	stmdbmi	r1, {r0, r1, r3, r8}
     a00:	00130113 	andseq	r0, r3, r3, lsl r1
     a04:	00210c00 	eoreq	r0, r1, r0, lsl #24
     a08:	340d0000 	strcc	r0, [sp], #-0
     a0c:	3a0e0300 	bcc	381614 <startup-0x1fc7e9ec>
     a10:	490b3b0b 	stmdbmi	fp, {r0, r1, r3, r8, r9, fp, ip, sp}
     a14:	3c193f13 	ldccc	15, cr3, [r9], {19}
     a18:	0e000019 	mcreq	0, 0, r0, cr0, cr9, {0}
     a1c:	13490021 	movtne	r0, #36897	; 0x9021
     a20:	0000052f 	andeq	r0, r0, pc, lsr #10
     a24:	4700340f 	strmi	r3, [r0, -pc, lsl #8]
     a28:	3b0b3a13 	blcc	2cf27c <startup-0x1fd30d84>
     a2c:	0018020b 	andseq	r0, r8, fp, lsl #4
     a30:	00341000 	eorseq	r1, r4, r0
     a34:	0b3a1347 	bleq	e85758 <startup-0x1f17a8a8>
     a38:	00001802 	andeq	r1, r0, r2, lsl #16
     a3c:	3f012e11 	svccc	0x00012e11
     a40:	3a0e0319 	bcc	3816ac <startup-0x1fc7e954>
     a44:	27053b0b 	strcs	r3, [r5, -fp, lsl #22]
     a48:	12011119 	andne	r1, r1, #1073741830	; 0x40000006
     a4c:	96184006 	ldrls	r4, [r8], -r6
     a50:	13011942 	movwne	r1, #6466	; 0x1942
     a54:	05120000 	ldreq	r0, [r2, #-0]
     a58:	3a0e0300 	bcc	381660 <startup-0x1fc7e9a0>
     a5c:	49053b0b 	stmdbmi	r5, {r0, r1, r3, r8, r9, fp, ip, sp}
     a60:	00180213 	andseq	r0, r8, r3, lsl r2
     a64:	00341300 	eorseq	r1, r4, r0, lsl #6
     a68:	0b3a0e03 	bleq	e8427c <startup-0x1f17bd84>
     a6c:	1349053b 	movtne	r0, #38203	; 0x953b
     a70:	00001802 	andeq	r1, r0, r2, lsl #16
     a74:	3f012e14 	svccc	0x00012e14
     a78:	3a0e0319 	bcc	3816e4 <startup-0x1fc7e91c>
     a7c:	27053b0b 	strcs	r3, [r5, -fp, lsl #22]
     a80:	12011119 	andne	r1, r1, #1073741830	; 0x40000006
     a84:	97184006 	ldrls	r4, [r8, -r6]
     a88:	13011942 	movwne	r1, #6466	; 0x1942
     a8c:	34150000 	ldrcc	r0, [r5], #-0
     a90:	3a080300 	bcc	201698 <startup-0x1fdfe968>
     a94:	49053b0b 	stmdbmi	r5, {r0, r1, r3, r8, r9, fp, ip, sp}
     a98:	00180213 	andseq	r0, r8, r3, lsl r2
     a9c:	00341600 	eorseq	r1, r4, r0, lsl #12
     aa0:	0b3a0803 	bleq	e82ab4 <startup-0x1f17d54c>
     aa4:	1349053b 	movtne	r0, #38203	; 0x953b
     aa8:	05170000 	ldreq	r0, [r7, #-0]
     aac:	3a080300 	bcc	2016b4 <startup-0x1fdfe94c>
     ab0:	49053b0b 	stmdbmi	r5, {r0, r1, r3, r8, r9, fp, ip, sp}
     ab4:	00180213 	andseq	r0, r8, r3, lsl r2
     ab8:	010b1800 	tsteq	fp, r0, lsl #16
     abc:	06120111 			; <UNDEFINED> instruction: 0x06120111
     ac0:	2e190000 	cdpcs	0, 1, cr0, cr9, cr0, {0}
     ac4:	03193f01 	tsteq	r9, #1, 30
     ac8:	3b0b3a0e 	blcc	2cf308 <startup-0x1fd30cf8>
     acc:	1119270b 	tstne	r9, fp, lsl #14
     ad0:	40061201 	andmi	r1, r6, r1, lsl #4
     ad4:	19429718 	stmdbne	r2, {r3, r4, r8, r9, sl, ip, pc}^
     ad8:	00001301 	andeq	r1, r0, r1, lsl #6
     adc:	0300051a 	movweq	r0, #1306	; 0x51a
     ae0:	3b0b3a08 	blcc	2cf308 <startup-0x1fd30cf8>
     ae4:	0213490b 	andseq	r4, r3, #180224	; 0x2c000
     ae8:	1b000018 	blne	b50 <startup-0x1ffff4b0>
     aec:	0e030005 	cdpeq	0, 0, cr0, cr3, cr5, {0}
     af0:	0b3b0b3a 	bleq	ec37e0 <startup-0x1f13c820>
     af4:	18021349 	stmdane	r2, {r0, r3, r6, r8, r9, ip}
     af8:	341c0000 	ldrcc	r0, [ip], #-0
     afc:	3a0e0300 	bcc	381704 <startup-0x1fc7e8fc>
     b00:	490b3b0b 	stmdbmi	fp, {r0, r1, r3, r8, r9, fp, ip, sp}
     b04:	00180213 	andseq	r0, r8, r3, lsl r2
     b08:	012e1d00 			; <UNDEFINED> instruction: 0x012e1d00
     b0c:	0e03193f 			; <UNDEFINED> instruction: 0x0e03193f
     b10:	0b3b0b3a 	bleq	ec3800 <startup-0x1f13c800>
     b14:	01111927 	tsteq	r1, r7, lsr #18
     b18:	18400612 	stmdane	r0, {r1, r4, r9, sl}^
     b1c:	01194296 			; <UNDEFINED> instruction: 0x01194296
     b20:	1e000013 	mcrne	0, 0, r0, cr0, cr3, {0}
     b24:	08030034 	stmdaeq	r3, {r2, r4, r5}
     b28:	0b3b0b3a 	bleq	ec3818 <startup-0x1f13c7e8>
     b2c:	18021349 	stmdane	r2, {r0, r3, r6, r8, r9, ip}
     b30:	2e1f0000 	cdpcs	0, 1, cr0, cr15, cr0, {0}
     b34:	03193f00 	tsteq	r9, #0, 30
     b38:	3b0b3a0e 	blcc	2cf378 <startup-0x1fd30c88>
     b3c:	1119270b 	tstne	r9, fp, lsl #14
     b40:	40061201 	andmi	r1, r6, r1, lsl #4
     b44:	19429618 	stmdbne	r2, {r3, r4, r9, sl, ip, pc}^
     b48:	2e200000 	cdpcs	0, 2, cr0, cr0, cr0, {0}
     b4c:	03193f01 	tsteq	r9, #1, 30
     b50:	3b0b3a0e 	blcc	2cf390 <startup-0x1fd30c70>
     b54:	4919270b 	ldmdbmi	r9, {r0, r1, r3, r8, r9, sl, sp}
     b58:	12011113 	andne	r1, r1, #-1073741820	; 0xc0000004
     b5c:	96184006 	ldrls	r4, [r8], -r6
     b60:	13011942 	movwne	r1, #6466	; 0x1942
     b64:	2e210000 	cdpcs	0, 2, cr0, cr1, cr0, {0}
     b68:	3a0e0301 	bcc	381774 <startup-0x1fc7e88c>
     b6c:	270b3b0b 	strcs	r3, [fp, -fp, lsl #22]
     b70:	11134919 	tstne	r3, r9, lsl r9
     b74:	40061201 	andmi	r1, r6, r1, lsl #4
     b78:	19429618 	stmdbne	r2, {r3, r4, r9, sl, ip, pc}^
     b7c:	00001301 	andeq	r1, r0, r1, lsl #6
     b80:	03012e22 	movweq	r2, #7714	; 0x1e22
     b84:	3b0b3a0e 	blcc	2cf3c4 <startup-0x1fd30c3c>
     b88:	1119270b 	tstne	r9, fp, lsl #14
     b8c:	40061201 	andmi	r1, r6, r1, lsl #4
     b90:	19429718 	stmdbne	r2, {r3, r4, r8, r9, sl, ip, pc}^
     b94:	00001301 	andeq	r1, r0, r1, lsl #6
     b98:	3f002e23 	svccc	0x00002e23
     b9c:	3a0e0319 	bcc	381808 <startup-0x1fc7e7f8>
     ba0:	270b3b0b 	strcs	r3, [fp, -fp, lsl #22]
     ba4:	12011119 	andne	r1, r1, #1073741830	; 0x40000006
     ba8:	97184006 	ldrls	r4, [r8, -r6]
     bac:	00001942 	andeq	r1, r0, r2, asr #18
     bb0:	01110100 	tsteq	r1, r0, lsl #2
     bb4:	0b130e25 	bleq	4c4450 <startup-0x1fb3bbb0>
     bb8:	01110e03 	tsteq	r1, r3, lsl #28
     bbc:	17100612 			; <UNDEFINED> instruction: 0x17100612
     bc0:	13020000 	movwne	r0, #8192	; 0x2000
     bc4:	3a0b0b01 	bcc	2c37d0 <startup-0x1fd3c830>
     bc8:	010b3b0b 	tsteq	fp, fp, lsl #22
     bcc:	03000013 	movweq	r0, #19
     bd0:	0e03000d 	cdpeq	0, 0, cr0, cr3, cr13, {0}
     bd4:	0b3b0b3a 	bleq	ec38c4 <startup-0x1f13c73c>
     bd8:	0b381349 	bleq	e05904 <startup-0x1f1fa6fc>
     bdc:	24040000 	strcs	r0, [r4], #-0
     be0:	3e0b0b00 	vmlacc.f64	d0, d11, d0
     be4:	000e030b 	andeq	r0, lr, fp, lsl #6
     be8:	000f0500 	andeq	r0, pc, r0, lsl #10
     bec:	13490b0b 	movtne	r0, #39691	; 0x9b0b
     bf0:	16060000 	strne	r0, [r6], -r0
     bf4:	3a0e0300 	bcc	3817fc <startup-0x1fc7e804>
     bf8:	490b3b0b 	stmdbmi	fp, {r0, r1, r3, r8, r9, fp, ip, sp}
     bfc:	07000013 	smladeq	r0, r3, r0, r0
     c00:	0e030113 	mcreq	1, 0, r0, cr3, cr3, {0}
     c04:	0b3a0b0b 	bleq	e83838 <startup-0x1f17c7c8>
     c08:	13010b3b 	movwne	r0, #6971	; 0x1b3b
     c0c:	2e080000 	cdpcs	0, 0, cr0, cr8, cr0, {0}
     c10:	03193f01 	tsteq	r9, #1, 30
     c14:	3b0b3a0e 	blcc	2cf454 <startup-0x1fd30bac>
     c18:	1119270b 	tstne	r9, fp, lsl #14
     c1c:	40061201 	andmi	r1, r6, r1, lsl #4
     c20:	19429718 	stmdbne	r2, {r3, r4, r8, r9, sl, ip, pc}^
     c24:	00001301 	andeq	r1, r0, r1, lsl #6
     c28:	03000509 	movweq	r0, #1289	; 0x509
     c2c:	3b0b3a0e 	blcc	2cf46c <startup-0x1fd30b94>
     c30:	0213490b 	andseq	r4, r3, #180224	; 0x2c000
     c34:	00000018 	andeq	r0, r0, r8, lsl r0
     c38:	25011101 	strcs	r1, [r1, #-257]	; 0xfffffeff
     c3c:	030b130e 	movweq	r1, #45838	; 0xb30e
     c40:	1201110e 	andne	r1, r1, #-2147483645	; 0x80000003
     c44:	00171006 	andseq	r1, r7, r6
     c48:	01130200 	tsteq	r3, r0, lsl #4
     c4c:	0b3a0b0b 	bleq	e83880 <startup-0x1f17c780>
     c50:	13010b3b 	movwne	r0, #6971	; 0x1b3b
     c54:	0d030000 	stceq	0, cr0, [r3, #-0]
     c58:	3a0e0300 	bcc	381860 <startup-0x1fc7e7a0>
     c5c:	490b3b0b 	stmdbmi	fp, {r0, r1, r3, r8, r9, fp, ip, sp}
     c60:	000b3813 	andeq	r3, fp, r3, lsl r8
     c64:	00240400 	eoreq	r0, r4, r0, lsl #8
     c68:	0b3e0b0b 	bleq	f8389c <startup-0x1f07c764>
     c6c:	00000e03 	andeq	r0, r0, r3, lsl #28
     c70:	0b000f05 	bleq	488c <startup-0x1fffb774>
     c74:	0013490b 	andseq	r4, r3, fp, lsl #18
     c78:	00160600 	andseq	r0, r6, r0, lsl #12
     c7c:	0b3a0e03 	bleq	e84490 <startup-0x1f17bb70>
     c80:	13490b3b 	movtne	r0, #39739	; 0x9b3b
     c84:	2e070000 	cdpcs	0, 0, cr0, cr7, cr0, {0}
     c88:	03193f01 	tsteq	r9, #1, 30
     c8c:	3b0b3a0e 	blcc	2cf4cc <startup-0x1fd30b34>
     c90:	1119270b 	tstne	r9, fp, lsl #14
     c94:	40061201 	andmi	r1, r6, r1, lsl #4
     c98:	19429718 	stmdbne	r2, {r3, r4, r8, r9, sl, ip, pc}^
     c9c:	00001301 	andeq	r1, r0, r1, lsl #6
     ca0:	03000508 	movweq	r0, #1288	; 0x508
     ca4:	3b0b3a08 	blcc	2cf4cc <startup-0x1fd30b34>
     ca8:	0213490b 	andseq	r4, r3, #180224	; 0x2c000
     cac:	09000018 	stmdbeq	r0, {r3, r4}
     cb0:	0e030005 	cdpeq	0, 0, cr0, cr3, cr5, {0}
     cb4:	0b3b0b3a 	bleq	ec39a4 <startup-0x1f13c65c>
     cb8:	18021349 	stmdane	r2, {r0, r3, r6, r8, r9, ip}
     cbc:	240a0000 	strcs	r0, [sl], #-0
     cc0:	3e0b0b00 	vmlacc.f64	d0, d11, d0
     cc4:	0008030b 	andeq	r0, r8, fp, lsl #6
     cc8:	11010000 	mrsne	r0, (UNDEF: 1)
     ccc:	130e2501 	movwne	r2, #58625	; 0xe501
     cd0:	110e030b 	tstne	lr, fp, lsl #6
     cd4:	10061201 	andne	r1, r6, r1, lsl #4
     cd8:	02000017 	andeq	r0, r0, #23
     cdc:	0b0b0113 	bleq	2c1130 <startup-0x1fd3eed0>
     ce0:	0b3b0b3a 	bleq	ec39d0 <startup-0x1f13c630>
     ce4:	00001301 	andeq	r1, r0, r1, lsl #6
     ce8:	03000d03 	movweq	r0, #3331	; 0xd03
     cec:	3b0b3a0e 	blcc	2cf52c <startup-0x1fd30ad4>
     cf0:	3813490b 	ldmdacc	r3, {r0, r1, r3, r8, fp, lr}
     cf4:	0400000b 	streq	r0, [r0], #-11
     cf8:	0b0b0024 	bleq	2c0d90 <startup-0x1fd3f270>
     cfc:	0e030b3e 	vmoveq.16	d3[0], r0
     d00:	16050000 	strne	r0, [r5], -r0
     d04:	3a0e0300 	bcc	38190c <startup-0x1fc7e6f4>
     d08:	490b3b0b 	stmdbmi	fp, {r0, r1, r3, r8, r9, fp, ip, sp}
     d0c:	06000013 			; <UNDEFINED> instruction: 0x06000013
     d10:	193f012e 	ldmdbne	pc!, {r1, r2, r3, r5, r8}	; <UNPREDICTABLE>
     d14:	0b3a0e03 	bleq	e84528 <startup-0x1f17bad8>
     d18:	19270b3b 	stmdbne	r7!, {r0, r1, r3, r4, r5, r8, r9, fp}
     d1c:	01111349 	tsteq	r1, r9, asr #6
     d20:	18400612 	stmdane	r0, {r1, r4, r9, sl}^
     d24:	01194296 			; <UNDEFINED> instruction: 0x01194296
     d28:	07000013 	smladeq	r0, r3, r0, r0
     d2c:	08030005 	stmdaeq	r3, {r0, r2}
     d30:	0b3b0b3a 	bleq	ec3a20 <startup-0x1f13c5e0>
     d34:	18021349 	stmdane	r2, {r0, r3, r6, r8, r9, ip}
     d38:	34080000 	strcc	r0, [r8], #-0
     d3c:	3a080300 	bcc	201944 <startup-0x1fdfe6bc>
     d40:	490b3b0b 	stmdbmi	fp, {r0, r1, r3, r8, r9, fp, ip, sp}
     d44:	00180213 	andseq	r0, r8, r3, lsl r2
     d48:	00240900 	eoreq	r0, r4, r0, lsl #18
     d4c:	0b3e0b0b 	bleq	f83980 <startup-0x1f07c680>
     d50:	00000803 	andeq	r0, r0, r3, lsl #16
     d54:	3f002e0a 	svccc	0x00002e0a
     d58:	3a0e0319 	bcc	3819c4 <startup-0x1fc7e63c>
     d5c:	270b3b0b 	strcs	r3, [fp, -fp, lsl #22]
     d60:	11134919 	tstne	r3, r9, lsl r9
     d64:	40061201 	andmi	r1, r6, r1, lsl #4
     d68:	19429718 	stmdbne	r2, {r3, r4, r8, r9, sl, ip, pc}^
     d6c:	2e0b0000 	cdpcs	0, 0, cr0, cr11, cr0, {0}
     d70:	03193f00 	tsteq	r9, #0, 30
     d74:	3b0b3a0e 	blcc	2cf5b4 <startup-0x1fd30a4c>
     d78:	1119270b 	tstne	r9, fp, lsl #14
     d7c:	40061201 	andmi	r1, r6, r1, lsl #4
     d80:	19429718 	stmdbne	r2, {r3, r4, r8, r9, sl, ip, pc}^
     d84:	01000000 	mrseq	r0, (UNDEF: 0)
     d88:	0e250111 	mcreq	1, 1, r0, cr5, cr1, {0}
     d8c:	0e030b13 	vmoveq.32	d3[0], r0
     d90:	06120111 			; <UNDEFINED> instruction: 0x06120111
     d94:	00001710 	andeq	r1, r0, r0, lsl r7
     d98:	0b011302 	bleq	459a8 <startup-0x1ffba658>
     d9c:	3b0b3a0b 	blcc	2cf5d0 <startup-0x1fd30a30>
     da0:	0013010b 	andseq	r0, r3, fp, lsl #2
     da4:	000d0300 	andeq	r0, sp, r0, lsl #6
     da8:	0b3a0e03 	bleq	e845bc <startup-0x1f17ba44>
     dac:	13490b3b 	movtne	r0, #39739	; 0x9b3b
     db0:	00000b38 	andeq	r0, r0, r8, lsr fp
     db4:	0b002404 	bleq	9dcc <startup-0x1fff6234>
     db8:	030b3e0b 	movweq	r3, #48651	; 0xbe0b
     dbc:	0500000e 	streq	r0, [r0, #-14]
     dc0:	0b0b000f 	bleq	2c0e04 <startup-0x1fd3f1fc>
     dc4:	00001349 	andeq	r1, r0, r9, asr #6
     dc8:	03001606 	movweq	r1, #1542	; 0x606
     dcc:	3b0b3a0e 	blcc	2cf60c <startup-0x1fd309f4>
     dd0:	0013490b 	andseq	r4, r3, fp, lsl #18
     dd4:	01130700 	tsteq	r3, r0, lsl #14
     dd8:	0b0b0e03 	bleq	2c45ec <startup-0x1fd3ba14>
     ddc:	0b3b0b3a 	bleq	ec3acc <startup-0x1f13c534>
     de0:	00001301 	andeq	r1, r0, r1, lsl #6
     de4:	0b002408 	bleq	9e0c <startup-0x1fff61f4>
     de8:	030b3e0b 	movweq	r3, #48651	; 0xbe0b
     dec:	09000008 	stmdbeq	r0, {r3}
     df0:	19270115 	stmdbne	r7!, {r0, r2, r4, r8}
     df4:	00001301 	andeq	r1, r0, r1, lsl #6
     df8:	4900050a 	stmdbmi	r0, {r1, r3, r8, sl}
     dfc:	0b000013 	bleq	e50 <startup-0x1ffff1b0>
     e00:	13490101 	movtne	r0, #37121	; 0x9101
     e04:	00001301 	andeq	r1, r0, r1, lsl #6
     e08:	0000210c 	andeq	r2, r0, ip, lsl #2
     e0c:	00340d00 	eorseq	r0, r4, r0, lsl #26
     e10:	0b3a0e03 	bleq	e84624 <startup-0x1f17b9dc>
     e14:	13490b3b 	movtne	r0, #39739	; 0x9b3b
     e18:	193c193f 	ldmdbne	ip!, {r0, r1, r2, r3, r4, r5, r8, fp, ip}
     e1c:	210e0000 	mrscs	r0, (UNDEF: 14)
     e20:	2f134900 	svccs	0x00134900
     e24:	0f000005 	svceq	0x00000005
     e28:	193f012e 	ldmdbne	pc!, {r1, r2, r3, r5, r8}	; <UNPREDICTABLE>
     e2c:	0b3a0e03 	bleq	e84640 <startup-0x1f17b9c0>
     e30:	19270b3b 	stmdbne	r7!, {r0, r1, r3, r4, r5, r8, r9, fp}
     e34:	06120111 			; <UNDEFINED> instruction: 0x06120111
     e38:	42961840 	addsmi	r1, r6, #64, 16	; 0x400000
     e3c:	00130119 	andseq	r0, r3, r9, lsl r1
     e40:	00341000 	eorseq	r1, r4, r0
     e44:	0b3a0803 	bleq	e82e58 <startup-0x1f17d1a8>
     e48:	13490b3b 	movtne	r0, #39739	; 0x9b3b
     e4c:	00001802 	andeq	r1, r0, r2, lsl #16
     e50:	03003411 	movweq	r3, #1041	; 0x411
     e54:	3b0b3a0e 	blcc	2cf694 <startup-0x1fd3096c>
     e58:	0213490b 	andseq	r4, r3, #180224	; 0x2c000
     e5c:	12000018 	andne	r0, r0, #24
     e60:	13490021 	movtne	r0, #36897	; 0x9021
     e64:	00000b2f 	andeq	r0, r0, pc, lsr #22
     e68:	03000513 	movweq	r0, #1299	; 0x513
     e6c:	3b0b3a0e 	blcc	2cf6ac <startup-0x1fd30954>
     e70:	0213490b 	andseq	r4, r3, #180224	; 0x2c000
     e74:	14000018 	strne	r0, [r0], #-24	; 0xffffffe8
     e78:	193f002e 	ldmdbne	pc!, {r1, r2, r3, r5}	; <UNPREDICTABLE>
     e7c:	0b3a0e03 	bleq	e84690 <startup-0x1f17b970>
     e80:	19270b3b 	stmdbne	r7!, {r0, r1, r3, r4, r5, r8, r9, fp}
     e84:	06120111 			; <UNDEFINED> instruction: 0x06120111
     e88:	42961840 	addsmi	r1, r6, #64, 16	; 0x400000
     e8c:	15000019 	strne	r0, [r0, #-25]	; 0xffffffe7
     e90:	193f002e 	ldmdbne	pc!, {r1, r2, r3, r5}	; <UNPREDICTABLE>
     e94:	0b3a0e03 	bleq	e846a8 <startup-0x1f17b958>
     e98:	19270b3b 	stmdbne	r7!, {r0, r1, r3, r4, r5, r8, r9, fp}
     e9c:	06120111 			; <UNDEFINED> instruction: 0x06120111
     ea0:	42971840 	addsmi	r1, r7, #64, 16	; 0x400000
     ea4:	16000019 			; <UNDEFINED> instruction: 0x16000019
     ea8:	08030005 	stmdaeq	r3, {r0, r2}
     eac:	0b3b0b3a 	bleq	ec3b9c <startup-0x1f13c464>
     eb0:	18021349 	stmdane	r2, {r0, r3, r6, r8, r9, ip}
     eb4:	2e170000 	cdpcs	0, 1, cr0, cr7, cr0, {0}
     eb8:	03193f01 	tsteq	r9, #1, 30
     ebc:	3b0b3a0e 	blcc	2cf6fc <startup-0x1fd30904>
     ec0:	4919270b 	ldmdbmi	r9, {r0, r1, r3, r8, r9, sl, sp}
     ec4:	12011113 	andne	r1, r1, #-1073741820	; 0xc0000004
     ec8:	96184006 	ldrls	r4, [r8], -r6
     ecc:	13011942 	movwne	r1, #6466	; 0x1942
     ed0:	2e180000 	cdpcs	0, 1, cr0, cr8, cr0, {0}
     ed4:	03193f01 	tsteq	r9, #1, 30
     ed8:	3b0b3a0e 	blcc	2cf718 <startup-0x1fd308e8>
     edc:	1119270b 	tstne	r9, fp, lsl #14
     ee0:	40061201 	andmi	r1, r6, r1, lsl #4
     ee4:	19429718 	stmdbne	r2, {r3, r4, r8, r9, sl, ip, pc}^
     ee8:	00001301 	andeq	r1, r0, r1, lsl #6
     eec:	3f012e19 	svccc	0x00012e19
     ef0:	3a0e0319 	bcc	381b5c <startup-0x1fc7e4a4>
     ef4:	270b3b0b 	strcs	r3, [fp, -fp, lsl #22]
     ef8:	12011119 	andne	r1, r1, #1073741830	; 0x40000006
     efc:	97184006 	ldrls	r4, [r8, -r6]
     f00:	00001942 	andeq	r1, r0, r2, asr #18
     f04:	01110100 	tsteq	r1, r0, lsl #2
     f08:	0b130e25 	bleq	4c47a4 <startup-0x1fb3b85c>
     f0c:	01110e03 	tsteq	r1, r3, lsl #28
     f10:	17100612 			; <UNDEFINED> instruction: 0x17100612
     f14:	13020000 	movwne	r0, #8192	; 0x2000
     f18:	0b0e0301 	bleq	381b24 <startup-0x1fc7e4dc>
     f1c:	3b0b3a0b 	blcc	2cf750 <startup-0x1fd308b0>
     f20:	0013010b 	andseq	r0, r3, fp, lsl #2
     f24:	000d0300 	andeq	r0, sp, r0, lsl #6
     f28:	0b3a0e03 	bleq	e8473c <startup-0x1f17b8c4>
     f2c:	13490b3b 	movtne	r0, #39739	; 0x9b3b
     f30:	00000b38 	andeq	r0, r0, r8, lsr fp
     f34:	0b000f04 	bleq	4b4c <startup-0x1fffb4b4>
     f38:	0013490b 	andseq	r4, r3, fp, lsl #18
     f3c:	00240500 	eoreq	r0, r4, r0, lsl #10
     f40:	0b3e0b0b 	bleq	f83b74 <startup-0x1f07c48c>
     f44:	00000e03 	andeq	r0, r0, r3, lsl #28
     f48:	0b002406 	bleq	9f68 <startup-0x1fff6098>
     f4c:	030b3e0b 	movweq	r3, #48651	; 0xbe0b
     f50:	07000008 	streq	r0, [r0, -r8]
     f54:	19270115 	stmdbne	r7!, {r0, r2, r4, r8}
     f58:	00001301 	andeq	r1, r0, r1, lsl #6
     f5c:	49000508 	stmdbmi	r0, {r3, r8, sl}
     f60:	09000013 	stmdbeq	r0, {r0, r1, r4}
     f64:	0e030016 	mcreq	0, 0, r0, cr3, cr6, {0}
     f68:	0b3b0b3a 	bleq	ec3c58 <startup-0x1f13c3a8>
     f6c:	00001349 	andeq	r1, r0, r9, asr #6
     f70:	3f012e0a 	svccc	0x00012e0a
     f74:	3a0e0319 	bcc	381be0 <startup-0x1fc7e420>
     f78:	270b3b0b 	strcs	r3, [fp, -fp, lsl #22]
     f7c:	12011119 	andne	r1, r1, #1073741830	; 0x40000006
     f80:	97184006 	ldrls	r4, [r8, -r6]
     f84:	13011942 	movwne	r1, #6466	; 0x1942
     f88:	050b0000 	streq	r0, [fp, #-0]
     f8c:	3a080300 	bcc	201b94 <startup-0x1fdfe46c>
     f90:	490b3b0b 	stmdbmi	fp, {r0, r1, r3, r8, r9, fp, ip, sp}
     f94:	00180213 	andseq	r0, r8, r3, lsl r2
     f98:	00050c00 	andeq	r0, r5, r0, lsl #24
     f9c:	0b3a0e03 	bleq	e847b0 <startup-0x1f17b850>
     fa0:	13490b3b 	movtne	r0, #39739	; 0x9b3b
     fa4:	00001802 	andeq	r1, r0, r2, lsl #16
     fa8:	3f012e0d 	svccc	0x00012e0d
     fac:	3a0e0319 	bcc	381c18 <startup-0x1fc7e3e8>
     fb0:	270b3b0b 	strcs	r3, [fp, -fp, lsl #22]
     fb4:	12011119 	andne	r1, r1, #1073741830	; 0x40000006
     fb8:	96184006 	ldrls	r4, [r8], -r6
     fbc:	00001942 	andeq	r1, r0, r2, asr #18
     fc0:	0300340e 	movweq	r3, #1038	; 0x40e
     fc4:	3b0b3a0e 	blcc	2cf804 <startup-0x1fd307fc>
     fc8:	0213490b 	andseq	r4, r3, #180224	; 0x2c000
     fcc:	00000018 	andeq	r0, r0, r8, lsl r0
     fd0:	25011101 	strcs	r1, [r1, #-257]	; 0xfffffeff
     fd4:	030b130e 	movweq	r1, #45838	; 0xb30e
     fd8:	1201110e 	andne	r1, r1, #-2147483645	; 0x80000003
     fdc:	00171006 	andseq	r1, r7, r6
     fe0:	01130200 	tsteq	r3, r0, lsl #4
     fe4:	0b3a0b0b 	bleq	e83c18 <startup-0x1f17c3e8>
     fe8:	13010b3b 	movwne	r0, #6971	; 0x1b3b
     fec:	0d030000 	stceq	0, cr0, [r3, #-0]
     ff0:	3a0e0300 	bcc	381bf8 <startup-0x1fc7e408>
     ff4:	490b3b0b 	stmdbmi	fp, {r0, r1, r3, r8, r9, fp, ip, sp}
     ff8:	000b3813 	andeq	r3, fp, r3, lsl r8
     ffc:	00240400 	eoreq	r0, r4, r0, lsl #8
    1000:	0b3e0b0b 	bleq	f83c34 <startup-0x1f07c3cc>
    1004:	00000e03 	andeq	r0, r0, r3, lsl #28
    1008:	0b000f05 	bleq	4c24 <startup-0x1fffb3dc>
    100c:	0013490b 	andseq	r4, r3, fp, lsl #18
    1010:	00160600 	andseq	r0, r6, r0, lsl #12
    1014:	0b3a0e03 	bleq	e84828 <startup-0x1f17b7d8>
    1018:	13490b3b 	movtne	r0, #39739	; 0x9b3b
    101c:	13070000 	movwne	r0, #28672	; 0x7000
    1020:	0b0e0301 	bleq	381c2c <startup-0x1fc7e3d4>
    1024:	3b0b3a0b 	blcc	2cf858 <startup-0x1fd307a8>
    1028:	0013010b 	andseq	r0, r3, fp, lsl #2
    102c:	00240800 	eoreq	r0, r4, r0, lsl #16
    1030:	0b3e0b0b 	bleq	f83c64 <startup-0x1f07c39c>
    1034:	00000803 	andeq	r0, r0, r3, lsl #16
    1038:	27011509 	strcs	r1, [r1, -r9, lsl #10]
    103c:	00130119 	andseq	r0, r3, r9, lsl r1
    1040:	00050a00 	andeq	r0, r5, r0, lsl #20
    1044:	00001349 	andeq	r1, r0, r9, asr #6
    1048:	4901010b 	stmdbmi	r1, {r0, r1, r3, r8}
    104c:	00130113 	andseq	r0, r3, r3, lsl r1
    1050:	00210c00 	eoreq	r0, r1, r0, lsl #24
    1054:	340d0000 	strcc	r0, [sp], #-0
    1058:	3a0e0300 	bcc	381c60 <startup-0x1fc7e3a0>
    105c:	490b3b0b 	stmdbmi	fp, {r0, r1, r3, r8, r9, fp, ip, sp}
    1060:	3c193f13 	ldccc	15, cr3, [r9], {19}
    1064:	0e000019 	mcreq	0, 0, r0, cr0, cr9, {0}
    1068:	13490021 	movtne	r0, #36897	; 0x9021
    106c:	0000052f 	andeq	r0, r0, pc, lsr #10
    1070:	0300340f 	movweq	r3, #1039	; 0x40f
    1074:	3b0b3a0e 	blcc	2cf8b4 <startup-0x1fd3074c>
    1078:	0213490b 	andseq	r4, r3, #180224	; 0x2c000
    107c:	10000018 	andne	r0, r0, r8, lsl r0
    1080:	0e030034 	mcreq	0, 0, r0, cr3, cr4, {1}
    1084:	0b3b0b3a 	bleq	ec3d74 <startup-0x1f13c28c>
    1088:	193f1349 	ldmdbne	pc!, {r0, r3, r6, r8, r9, ip}	; <UNPREDICTABLE>
    108c:	00001802 	andeq	r1, r0, r2, lsl #16
    1090:	49002111 	stmdbmi	r0, {r0, r4, r8, sp}
    1094:	000b2f13 	andeq	r2, fp, r3, lsl pc
    1098:	012e1200 			; <UNDEFINED> instruction: 0x012e1200
    109c:	0e03193f 			; <UNDEFINED> instruction: 0x0e03193f
    10a0:	0b3b0b3a 	bleq	ec3d90 <startup-0x1f13c270>
    10a4:	01111927 	tsteq	r1, r7, lsr #18
    10a8:	18400612 	stmdane	r0, {r1, r4, r9, sl}^
    10ac:	01194296 			; <UNDEFINED> instruction: 0x01194296
    10b0:	13000013 	movwne	r0, #19
    10b4:	0e030005 	cdpeq	0, 0, cr0, cr3, cr5, {0}
    10b8:	0b3b0b3a 	bleq	ec3da8 <startup-0x1f13c258>
    10bc:	18021349 	stmdane	r2, {r0, r3, r6, r8, r9, ip}
    10c0:	2e140000 	cdpcs	0, 1, cr0, cr4, cr0, {0}
    10c4:	3a0e0301 	bcc	381cd0 <startup-0x1fc7e330>
    10c8:	270b3b0b 	strcs	r3, [fp, -fp, lsl #22]
    10cc:	12011119 	andne	r1, r1, #1073741830	; 0x40000006
    10d0:	96184006 	ldrls	r4, [r8], -r6
    10d4:	00001942 	andeq	r1, r0, r2, asr #18
    10d8:	01110100 	tsteq	r1, r0, lsl #2
    10dc:	0b130e25 	bleq	4c4978 <startup-0x1fb3b688>
    10e0:	01110e03 	tsteq	r1, r3, lsl #28
    10e4:	17100612 			; <UNDEFINED> instruction: 0x17100612
    10e8:	13020000 	movwne	r0, #8192	; 0x2000
    10ec:	3a0b0b01 	bcc	2c3cf8 <startup-0x1fd3c308>
    10f0:	010b3b0b 	tsteq	fp, fp, lsl #22
    10f4:	03000013 	movweq	r0, #19
    10f8:	0e03000d 	cdpeq	0, 0, cr0, cr3, cr13, {0}
    10fc:	0b3b0b3a 	bleq	ec3dec <startup-0x1f13c214>
    1100:	0b381349 	bleq	e05e2c <startup-0x1f1fa1d4>
    1104:	24040000 	strcs	r0, [r4], #-0
    1108:	3e0b0b00 	vmlacc.f64	d0, d11, d0
    110c:	000e030b 	andeq	r0, lr, fp, lsl #6
    1110:	000f0500 	andeq	r0, pc, r0, lsl #10
    1114:	13490b0b 	movtne	r0, #39691	; 0x9b0b
    1118:	16060000 	strne	r0, [r6], -r0
    111c:	3a0e0300 	bcc	381d24 <startup-0x1fc7e2dc>
    1120:	490b3b0b 	stmdbmi	fp, {r0, r1, r3, r8, r9, fp, ip, sp}
    1124:	07000013 	smladeq	r0, r3, r0, r0
    1128:	0e030113 	mcreq	1, 0, r0, cr3, cr3, {0}
    112c:	0b3a0b0b 	bleq	e83d60 <startup-0x1f17c2a0>
    1130:	13010b3b 	movwne	r0, #6971	; 0x1b3b
    1134:	24080000 	strcs	r0, [r8], #-0
    1138:	3e0b0b00 	vmlacc.f64	d0, d11, d0
    113c:	0008030b 	andeq	r0, r8, fp, lsl #6
    1140:	01150900 	tsteq	r5, r0, lsl #18
    1144:	13011927 	movwne	r1, #6439	; 0x1927
    1148:	050a0000 	streq	r0, [sl, #-0]
    114c:	00134900 	andseq	r4, r3, r0, lsl #18
    1150:	01010b00 	tsteq	r1, r0, lsl #22
    1154:	13011349 	movwne	r1, #4937	; 0x1349
    1158:	210c0000 	mrscs	r0, (UNDEF: 12)
    115c:	0d000000 	stceq	0, cr0, [r0, #-0]
    1160:	0e030034 	mcreq	0, 0, r0, cr3, cr4, {1}
    1164:	0b3b0b3a 	bleq	ec3e54 <startup-0x1f13c1ac>
    1168:	193f1349 	ldmdbne	pc!, {r0, r3, r6, r8, r9, ip}	; <UNPREDICTABLE>
    116c:	0000193c 	andeq	r1, r0, ip, lsr r9
    1170:	4900210e 	stmdbmi	r0, {r1, r2, r3, r8, sp}
    1174:	00052f13 	andeq	r2, r5, r3, lsl pc
    1178:	00340f00 	eorseq	r0, r4, r0, lsl #30
    117c:	0b3a0e03 	bleq	e84990 <startup-0x1f17b670>
    1180:	13490b3b 	movtne	r0, #39739	; 0x9b3b
    1184:	00001802 	andeq	r1, r0, r2, lsl #16
    1188:	03003410 	movweq	r3, #1040	; 0x410
    118c:	3b0b3a0e 	blcc	2cf9cc <startup-0x1fd30634>
    1190:	3f13490b 	svccc	0x0013490b
    1194:	00180219 	andseq	r0, r8, r9, lsl r2
    1198:	00211100 	eoreq	r1, r1, r0, lsl #2
    119c:	0b2f1349 	bleq	bc5ec8 <startup-0x1f43a138>
    11a0:	2e120000 	cdpcs	0, 1, cr0, cr2, cr0, {0}
    11a4:	03193f01 	tsteq	r9, #1, 30
    11a8:	3b0b3a0e 	blcc	2cf9e8 <startup-0x1fd30618>
    11ac:	1119270b 	tstne	r9, fp, lsl #14
    11b0:	40061201 	andmi	r1, r6, r1, lsl #4
    11b4:	19429618 	stmdbne	r2, {r3, r4, r9, sl, ip, pc}^
    11b8:	00001301 	andeq	r1, r0, r1, lsl #6
    11bc:	03000513 	movweq	r0, #1299	; 0x513
    11c0:	3b0b3a0e 	blcc	2cfa00 <startup-0x1fd30600>
    11c4:	0213490b 	andseq	r4, r3, #180224	; 0x2c000
    11c8:	14000018 	strne	r0, [r0], #-24	; 0xffffffe8
    11cc:	0e03012e 	adfeqsp	f0, f3, #0.5
    11d0:	0b3b0b3a 	bleq	ec3ec0 <startup-0x1f13c140>
    11d4:	01111927 	tsteq	r1, r7, lsr #18
    11d8:	18400612 	stmdane	r0, {r1, r4, r9, sl}^
    11dc:	00194296 	mulseq	r9, r6, r2
    11e0:	11010000 	mrsne	r0, (UNDEF: 1)
    11e4:	130e2501 	movwne	r2, #58625	; 0xe501
    11e8:	110e030b 	tstne	lr, fp, lsl #6
    11ec:	10061201 	andne	r1, r6, r1, lsl #4
    11f0:	02000017 	andeq	r0, r0, #23
    11f4:	0b0b0113 	bleq	2c1648 <startup-0x1fd3e9b8>
    11f8:	0b3b0b3a 	bleq	ec3ee8 <startup-0x1f13c118>
    11fc:	00001301 	andeq	r1, r0, r1, lsl #6
    1200:	03000d03 	movweq	r0, #3331	; 0xd03
    1204:	3b0b3a0e 	blcc	2cfa44 <startup-0x1fd305bc>
    1208:	3813490b 	ldmdacc	r3, {r0, r1, r3, r8, fp, lr}
    120c:	0400000b 	streq	r0, [r0], #-11
    1210:	0b0b0024 	bleq	2c12a8 <startup-0x1fd3ed58>
    1214:	0e030b3e 	vmoveq.16	d3[0], r0
    1218:	0f050000 	svceq	0x00050000
    121c:	490b0b00 	stmdbmi	fp, {r8, r9, fp}
    1220:	06000013 			; <UNDEFINED> instruction: 0x06000013
    1224:	0e030016 	mcreq	0, 0, r0, cr3, cr6, {0}
    1228:	0b3b0b3a 	bleq	ec3f18 <startup-0x1f13c0e8>
    122c:	00001349 	andeq	r1, r0, r9, asr #6
    1230:	03011307 	movweq	r1, #4871	; 0x1307
    1234:	3a0b0b0e 	bcc	2c3e74 <startup-0x1fd3c18c>
    1238:	010b3b0b 	tsteq	fp, fp, lsl #22
    123c:	08000013 	stmdaeq	r0, {r0, r1, r4}
    1240:	0b0b0024 	bleq	2c12d8 <startup-0x1fd3ed28>
    1244:	08030b3e 	stmdaeq	r3, {r1, r2, r3, r4, r5, r8, r9, fp}
    1248:	15090000 	strne	r0, [r9, #-0]
    124c:	01192701 	tsteq	r9, r1, lsl #14
    1250:	0a000013 	beq	12a4 <startup-0x1fffed5c>
    1254:	13490005 	movtne	r0, #36869	; 0x9005
    1258:	010b0000 	mrseq	r0, (UNDEF: 11)
    125c:	01134901 	tsteq	r3, r1, lsl #18
    1260:	0c000013 	stceq	0, cr0, [r0], {19}
    1264:	00000021 	andeq	r0, r0, r1, lsr #32
    1268:	0300340d 	movweq	r3, #1037	; 0x40d
    126c:	3b0b3a0e 	blcc	2cfaac <startup-0x1fd30554>
    1270:	3f13490b 	svccc	0x0013490b
    1274:	00193c19 	andseq	r3, r9, r9, lsl ip
    1278:	00210e00 	eoreq	r0, r1, r0, lsl #28
    127c:	0b2f1349 	bleq	bc5fa8 <startup-0x1f43a058>
    1280:	340f0000 	strcc	r0, [pc], #-0	; 1288 <startup-0x1fffed78>
    1284:	3a0e0300 	bcc	381e8c <startup-0x1fc7e174>
    1288:	490b3b0b 	stmdbmi	fp, {r0, r1, r3, r8, r9, fp, ip, sp}
    128c:	00180213 	andseq	r0, r8, r3, lsl r2
    1290:	00341000 	eorseq	r1, r4, r0
    1294:	0b3a0e03 	bleq	e84aa8 <startup-0x1f17b558>
    1298:	13490b3b 	movtne	r0, #39739	; 0x9b3b
    129c:	1802193f 	stmdane	r2, {r0, r1, r2, r3, r4, r5, r8, fp, ip}
    12a0:	2e110000 	cdpcs	0, 1, cr0, cr1, cr0, {0}
    12a4:	03193f01 	tsteq	r9, #1, 30
    12a8:	3b0b3a0e 	blcc	2cfae8 <startup-0x1fd30518>
    12ac:	1119270b 	tstne	r9, fp, lsl #14
    12b0:	40061201 	andmi	r1, r6, r1, lsl #4
    12b4:	19429618 	stmdbne	r2, {r3, r4, r9, sl, ip, pc}^
    12b8:	00001301 	andeq	r1, r0, r1, lsl #6
    12bc:	03000512 	movweq	r0, #1298	; 0x512
    12c0:	3b0b3a0e 	blcc	2cfb00 <startup-0x1fd30500>
    12c4:	0213490b 	andseq	r4, r3, #180224	; 0x2c000
    12c8:	13000018 	movwne	r0, #24
    12cc:	0e03012e 	adfeqsp	f0, f3, #0.5
    12d0:	0b3b0b3a 	bleq	ec3fc0 <startup-0x1f13c040>
    12d4:	01111927 	tsteq	r1, r7, lsr #18
    12d8:	18400612 	stmdane	r0, {r1, r4, r9, sl}^
    12dc:	00194296 	mulseq	r9, r6, r2
    12e0:	11010000 	mrsne	r0, (UNDEF: 1)
    12e4:	130e2501 	movwne	r2, #58625	; 0xe501
    12e8:	110e030b 	tstne	lr, fp, lsl #6
    12ec:	10061201 	andne	r1, r6, r1, lsl #4
    12f0:	02000017 	andeq	r0, r0, #23
    12f4:	0b0b0113 	bleq	2c1748 <startup-0x1fd3e8b8>
    12f8:	0b3b0b3a 	bleq	ec3fe8 <startup-0x1f13c018>
    12fc:	00001301 	andeq	r1, r0, r1, lsl #6
    1300:	03000d03 	movweq	r0, #3331	; 0xd03
    1304:	3b0b3a0e 	blcc	2cfb44 <startup-0x1fd304bc>
    1308:	3813490b 	ldmdacc	r3, {r0, r1, r3, r8, fp, lr}
    130c:	0400000b 	streq	r0, [r0], #-11
    1310:	0b0b0024 	bleq	2c13a8 <startup-0x1fd3ec58>
    1314:	0e030b3e 	vmoveq.16	d3[0], r0
    1318:	0f050000 	svceq	0x00050000
    131c:	490b0b00 	stmdbmi	fp, {r8, r9, fp}
    1320:	06000013 			; <UNDEFINED> instruction: 0x06000013
    1324:	0e030016 	mcreq	0, 0, r0, cr3, cr6, {0}
    1328:	0b3b0b3a 	bleq	ec4018 <startup-0x1f13bfe8>
    132c:	00001349 	andeq	r1, r0, r9, asr #6
    1330:	03011307 	movweq	r1, #4871	; 0x1307
    1334:	3a0b0b0e 	bcc	2c3f74 <startup-0x1fd3c08c>
    1338:	010b3b0b 	tsteq	fp, fp, lsl #22
    133c:	08000013 	stmdaeq	r0, {r0, r1, r4}
    1340:	0b0b0024 	bleq	2c13d8 <startup-0x1fd3ec28>
    1344:	08030b3e 	stmdaeq	r3, {r1, r2, r3, r4, r5, r8, r9, fp}
    1348:	15090000 	strne	r0, [r9, #-0]
    134c:	01192701 	tsteq	r9, r1, lsl #14
    1350:	0a000013 	beq	13a4 <startup-0x1fffec5c>
    1354:	13490005 	movtne	r0, #36869	; 0x9005
    1358:	010b0000 	mrseq	r0, (UNDEF: 11)
    135c:	01134901 	tsteq	r3, r1, lsl #18
    1360:	0c000013 	stceq	0, cr0, [r0], {19}
    1364:	00000021 	andeq	r0, r0, r1, lsr #32
    1368:	0300340d 	movweq	r3, #1037	; 0x40d
    136c:	3b0b3a0e 	blcc	2cfbac <startup-0x1fd30454>
    1370:	3f13490b 	svccc	0x0013490b
    1374:	00193c19 	andseq	r3, r9, r9, lsl ip
    1378:	00210e00 	eoreq	r0, r1, r0, lsl #28
    137c:	052f1349 	streq	r1, [pc, #-841]!	; 103b <startup-0x1fffefc5>
    1380:	340f0000 	strcc	r0, [pc], #-0	; 1388 <startup-0x1fffec78>
    1384:	3a0e0300 	bcc	381f8c <startup-0x1fc7e074>
    1388:	490b3b0b 	stmdbmi	fp, {r0, r1, r3, r8, r9, fp, ip, sp}
    138c:	00180213 	andseq	r0, r8, r3, lsl r2
    1390:	00341000 	eorseq	r1, r4, r0
    1394:	0b3a0e03 	bleq	e84ba8 <startup-0x1f17b458>
    1398:	13490b3b 	movtne	r0, #39739	; 0x9b3b
    139c:	1802193f 	stmdane	r2, {r0, r1, r2, r3, r4, r5, r8, fp, ip}
    13a0:	21110000 	tstcs	r1, r0
    13a4:	2f134900 	svccs	0x00134900
    13a8:	1200000b 	andne	r0, r0, #11
    13ac:	193f012e 	ldmdbne	pc!, {r1, r2, r3, r5, r8}	; <UNPREDICTABLE>
    13b0:	0b3a0e03 	bleq	e84bc4 <startup-0x1f17b43c>
    13b4:	19270b3b 	stmdbne	r7!, {r0, r1, r3, r4, r5, r8, r9, fp}
    13b8:	06120111 			; <UNDEFINED> instruction: 0x06120111
    13bc:	42961840 	addsmi	r1, r6, #64, 16	; 0x400000
    13c0:	00130119 	andseq	r0, r3, r9, lsl r1
    13c4:	00051300 	andeq	r1, r5, r0, lsl #6
    13c8:	0b3a0e03 	bleq	e84bdc <startup-0x1f17b424>
    13cc:	13490b3b 	movtne	r0, #39739	; 0x9b3b
    13d0:	00001802 	andeq	r1, r0, r2, lsl #16
    13d4:	03012e14 	movweq	r2, #7700	; 0x1e14
    13d8:	3b0b3a0e 	blcc	2cfc18 <startup-0x1fd303e8>
    13dc:	1119270b 	tstne	r9, fp, lsl #14
    13e0:	40061201 	andmi	r1, r6, r1, lsl #4
    13e4:	19429618 	stmdbne	r2, {r3, r4, r9, sl, ip, pc}^
    13e8:	Address 0x000013e8 is out of bounds.


Disassembly of section .debug_aranges:

00000000 <.debug_aranges>:
   0:	00000024 	andeq	r0, r0, r4, lsr #32
   4:	00000002 	andeq	r0, r0, r2
   8:	00040000 	andeq	r0, r4, r0
   c:	00000000 	andeq	r0, r0, r0
  10:	20000010 	andcs	r0, r0, r0, lsl r0
  14:	000018aa 	andeq	r1, r0, sl, lsr #17
  18:	20000000 	andcs	r0, r0, r0
  1c:	0000000c 	andeq	r0, r0, ip
	...
  28:	0000001c 	andeq	r0, r0, ip, lsl r0
  2c:	0abf0002 	beq	fefc003c <firstTime.4040+0xdefb0bf8>
  30:	00040000 	andeq	r0, r4, r0
  34:	00000000 	andeq	r0, r0, r0
  38:	200018bc 			; <UNDEFINED> instruction: 0x200018bc
  3c:	00000056 	andeq	r0, r0, r6, asr r0
	...
  48:	0000001c 	andeq	r0, r0, ip, lsl r0
  4c:	0ca30002 	stceq	0, cr0, [r3], #8
  50:	00040000 	andeq	r0, r4, r0
  54:	00000000 	andeq	r0, r0, r0
  58:	20001914 	andcs	r1, r0, r4, lsl r9
  5c:	000002a8 	andeq	r0, r0, r8, lsr #5
	...
  68:	0000001c 	andeq	r0, r0, ip, lsl r0
  6c:	11d20002 	bicsne	r0, r2, r2
  70:	00040000 	andeq	r0, r4, r0
  74:	00000000 	andeq	r0, r0, r0
  78:	20001bbc 			; <UNDEFINED> instruction: 0x20001bbc
  7c:	00000204 	andeq	r0, r0, r4, lsl #4
	...
  88:	0000001c 	andeq	r0, r0, ip, lsl r0
  8c:	13cd0002 	bicne	r0, sp, #2
  90:	00040000 	andeq	r0, r4, r0
  94:	00000000 	andeq	r0, r0, r0
  98:	20001dc0 	andcs	r1, r0, r0, asr #27
  9c:	00000364 	andeq	r0, r0, r4, ror #6
	...
  a8:	0000001c 	andeq	r0, r0, ip, lsl r0
  ac:	1a120002 	bne	4800bc <startup-0x1fb7ff44>
  b0:	00040000 	andeq	r0, r4, r0
  b4:	00000000 	andeq	r0, r0, r0
  b8:	20002124 	andcs	r2, r0, r4, lsr #2
  bc:	00000238 	andeq	r0, r0, r8, lsr r2
	...
  c8:	0000001c 	andeq	r0, r0, ip, lsl r0
  cc:	1eae0002 	cdpne	0, 10, cr0, cr14, cr2, {0}
  d0:	00040000 	andeq	r0, r4, r0
  d4:	00000000 	andeq	r0, r0, r0
  d8:	2000235c 	andcs	r2, r0, ip, asr r3
  dc:	00000370 	andeq	r0, r0, r0, ror r3
	...
  e8:	0000001c 	andeq	r0, r0, ip, lsl r0
  ec:	23f80002 	mvnscs	r0, #2
  f0:	00040000 	andeq	r0, r4, r0
  f4:	00000000 	andeq	r0, r0, r0
  f8:	200026cc 	andcs	r2, r0, ip, asr #13
  fc:	000002ac 	andeq	r0, r0, ip, lsr #5
	...
 108:	0000001c 	andeq	r0, r0, ip, lsl r0
 10c:	29570002 	ldmdbcs	r7, {r1}^
 110:	00040000 	andeq	r0, r4, r0
 114:	00000000 	andeq	r0, r0, r0
 118:	20002978 	andcs	r2, r0, r8, ror r9
 11c:	0000052c 	andeq	r0, r0, ip, lsr #10
	...
 128:	0000001c 	andeq	r0, r0, ip, lsl r0
 12c:	30fc0002 	rscscc	r0, ip, r2
 130:	00040000 	andeq	r0, r4, r0
 134:	00000000 	andeq	r0, r0, r0
 138:	20002ea4 	andcs	r2, r0, r4, lsr #29
 13c:	00000e44 	andeq	r0, r0, r4, asr #28
	...
 148:	0000001c 	andeq	r0, r0, ip, lsl r0
 14c:	399f0002 	ldmibcc	pc, {r1}	; <UNPREDICTABLE>
 150:	00040000 	andeq	r0, r4, r0
 154:	00000000 	andeq	r0, r0, r0
 158:	20003ce8 	andcs	r3, r0, r8, ror #25
 15c:	00000028 	andeq	r0, r0, r8, lsr #32
	...
 168:	0000001c 	andeq	r0, r0, ip, lsl r0
 16c:	3aa30002 	bcc	fe8c017c <firstTime.4040+0xde8b0d38>
 170:	00040000 	andeq	r0, r4, r0
 174:	00000000 	andeq	r0, r0, r0
 178:	20003d10 	andcs	r3, r0, r0, lsl sp
 17c:	00000028 	andeq	r0, r0, r8, lsr #32
	...
 188:	0000001c 	andeq	r0, r0, ip, lsl r0
 18c:	3b6a0002 	blcc	1a8019c <startup-0x1e57fe64>
 190:	00040000 	andeq	r0, r4, r0
 194:	00000000 	andeq	r0, r0, r0
 198:	20003d38 	andcs	r3, r0, r8, lsr sp
 19c:	0000006c 	andeq	r0, r0, ip, rrx
	...
 1a8:	0000001c 	andeq	r0, r0, ip, lsl r0
 1ac:	3ca30002 	stccc	0, cr0, [r3], #8
 1b0:	00040000 	andeq	r0, r4, r0
 1b4:	00000000 	andeq	r0, r0, r0
 1b8:	20003da4 	andcs	r3, r0, r4, lsr #27
 1bc:	00000520 	andeq	r0, r0, r0, lsr #10
	...
 1c8:	0000001c 	andeq	r0, r0, ip, lsl r0
 1cc:	41940002 	orrsmi	r0, r4, r2
 1d0:	00040000 	andeq	r0, r4, r0
 1d4:	00000000 	andeq	r0, r0, r0
 1d8:	200042c4 	andcs	r4, r0, r4, asr #5
 1dc:	00000094 	muleq	r0, r4, r0
	...
 1e8:	0000001c 	andeq	r0, r0, ip, lsl r0
 1ec:	42d80002 	sbcsmi	r0, r8, #2
 1f0:	00040000 	andeq	r0, r4, r0
 1f4:	00000000 	andeq	r0, r0, r0
 1f8:	20004358 	andcs	r4, r0, r8, asr r3
 1fc:	000000e8 	andeq	r0, r0, r8, ror #1
	...
 208:	0000001c 	andeq	r0, r0, ip, lsl r0
 20c:	45bc0002 	ldrmi	r0, [ip, #2]!
 210:	00040000 	andeq	r0, r4, r0
 214:	00000000 	andeq	r0, r0, r0
 218:	20004440 	andcs	r4, r0, r0, asr #8
 21c:	000000e8 	andeq	r0, r0, r8, ror #1
	...
 228:	0000001c 	andeq	r0, r0, ip, lsl r0
 22c:	48a00002 	stmiami	r0!, {r1}
 230:	00040000 	andeq	r0, r4, r0
 234:	00000000 	andeq	r0, r0, r0
 238:	20004528 	andcs	r4, r0, r8, lsr #10
 23c:	000000e8 	andeq	r0, r0, r8, ror #1
	...
 248:	0000001c 	andeq	r0, r0, ip, lsl r0
 24c:	4b830002 	blmi	fe0c025c <firstTime.4040+0xde0b0e18>
 250:	00040000 	andeq	r0, r4, r0
 254:	00000000 	andeq	r0, r0, r0
 258:	20004610 	andcs	r4, r0, r0, lsl r6
 25c:	000000e8 	andeq	r0, r0, r8, ror #1
	...

Disassembly of section .debug_ranges:

00000000 <.debug_ranges>:
   0:	20000010 	andcs	r0, r0, r0, lsl r0
   4:	200018ba 			; <UNDEFINED> instruction: 0x200018ba
   8:	20000000 	andcs	r0, r0, r0
   c:	2000000c 	andcs	r0, r0, ip
	...

Disassembly of section .debug_line:

00000000 <.debug_line>:
       0:	000003d0 	ldrdeq	r0, [r0], -r0	; <UNPREDICTABLE>
       4:	017d0002 	cmneq	sp, r2
       8:	01020000 	mrseq	r0, (UNDEF: 2)
       c:	000d0efb 	strdeq	r0, [sp], -fp
      10:	01010101 	tsteq	r1, r1, lsl #2
      14:	01000000 	mrseq	r0, (UNDEF: 0)
      18:	43010000 	movwmi	r0, #4096	; 0x1000
      1c:	6f6d2f3a 	svcvs	0x006d2f3a
      20:	2f632f70 	svccs	0x00632f70
      24:	6c706f4d 	ldclvs	15, cr6, [r0], #-308	; 0xfffffecc
      28:	726f6261 	rsbvc	r6, pc, #268435462	; 0x10000006
      2c:	6f697461 	svcvs	0x00697461
      30:	2f72656e 	svccs	0x0072656e
      34:	73504944 	cmpvc	r0, #68, 18	; 0x110000
      38:	7469572d 	strbtvc	r5, [r9], #-1837	; 0xfffff8d3
      3c:	432f6863 			; <UNDEFINED> instruction: 0x432f6863
      40:	74730000 	ldrbtvc	r0, [r3], #-0
      44:	75747261 	ldrbvc	r7, [r4, #-609]!	; 0xfffffd9f
      48:	00632e70 	rsbeq	r2, r3, r0, ror lr
      4c:	73000001 	movwvc	r0, #1
      50:	74697270 	strbtvc	r7, [r9], #-624	; 0xfffffd90
      54:	00682e65 	rsbeq	r2, r8, r5, ror #28
      58:	69000001 	stmdbvs	r0, {r0}
      5c:	6567616d 	strbvs	r6, [r7, #-365]!	; 0xfffffe93
      60:	0100682e 	tsteq	r0, lr, lsr #16
      64:	61670000 	cmnvs	r7, r0
      68:	626f656d 	rsbvs	r6, pc, #457179136	; 0x1b400000
      6c:	7463656a 	strbtvc	r6, [r3], #-1386	; 0xfffffa96
      70:	0100682e 	tsteq	r0, lr, lsr #16
      74:	72670000 	rsbvc	r0, r7, #0
      78:	69687061 	stmdbvs	r8!, {r0, r5, r6, ip, sp, lr}^
      7c:	682e7363 	stmdavs	lr!, {r0, r1, r5, r6, r8, r9, ip, sp, lr}
      80:	00000100 	andeq	r0, r0, r0, lsl #2
      84:	736e6f6d 	cmnvc	lr, #436	; 0x1b4
      88:	5f726574 	svcpl	0x00726574
      8c:	63616c62 	cmnvs	r1, #25088	; 0x6200
      90:	62782e6b 	rsbsvs	r2, r8, #1712	; 0x6b0
      94:	0001006d 	andeq	r0, r1, sp, rrx
      98:	6e6f6d00 	cdpvs	13, 6, cr6, cr15, cr0, {0}
      9c:	72657473 	rsbvc	r7, r5, #1929379840	; 0x73000000
      a0:	67696c5f 			; <UNDEFINED> instruction: 0x67696c5f
      a4:	782e7468 	stmdavc	lr!, {r3, r5, r6, sl, ip, sp, lr}
      a8:	01006d62 	tsteq	r0, r2, ror #26
      ac:	6f6d0000 	svcvs	0x006d0000
      b0:	6574736e 	ldrbvs	r7, [r4, #-878]!	; 0xfffffc92
      b4:	72675f72 	rsbvc	r5, r7, #456	; 0x1c8
      b8:	782e7961 	stmdavc	lr!, {r0, r5, r6, r8, fp, ip, sp, lr}
      bc:	01006d62 	tsteq	r0, r2, ror #26
      c0:	72700000 	rsbsvc	r0, r0, #0
      c4:	5f737365 	svcpl	0x00737365
      c8:	63616c62 	cmnvs	r1, #25088	; 0x6200
      cc:	62782e6b 	rsbsvs	r2, r8, #1712	; 0x6b0
      d0:	0001006d 	andeq	r0, r1, sp, rrx
      d4:	65727000 	ldrbvs	r7, [r2, #-0]!
      d8:	6c5f7373 	mrrcvs	3, 7, r7, pc, cr3	; <UNPREDICTABLE>
      dc:	74686769 	strbtvc	r6, [r8], #-1897	; 0xfffff897
      e0:	6d62782e 	stclvs	8, cr7, [r2, #-184]!	; 0xffffff48
      e4:	00000100 	andeq	r0, r0, r0, lsl #2
      e8:	73657270 	cmnvc	r5, #112, 4
      ec:	72675f73 	rsbvc	r5, r7, #460	; 0x1cc
      f0:	782e7961 	stmdavc	lr!, {r0, r5, r6, r8, fp, ip, sp, lr}
      f4:	01006d62 	tsteq	r0, r2, ror #26
      f8:	61630000 	cmnvs	r3, r0
      fc:	656c7473 	strbvs	r7, [ip, #-1139]!	; 0xfffffb8d
     100:	616c625f 	cmnvs	ip, pc, asr r2
     104:	782e6b63 	stmdavc	lr!, {r0, r1, r5, r6, r8, r9, fp, sp, lr}
     108:	01006d62 	tsteq	r0, r2, ror #26
     10c:	61630000 	cmnvs	r3, r0
     110:	656c7473 	strbvs	r7, [ip, #-1139]!	; 0xfffffb8d
     114:	6172675f 	cmnvs	r2, pc, asr r7
     118:	62782e79 	rsbsvs	r2, r8, #1936	; 0x790
     11c:	0001006d 	andeq	r0, r1, sp, rrx
     120:	73616300 	cmnvc	r1, #0, 6
     124:	5f656c74 	svcpl	0x00656c74
     128:	6867696c 	stmdavs	r7!, {r2, r3, r5, r6, r8, fp, sp, lr}^
     12c:	62782e74 	rsbsvs	r2, r8, #116, 28	; 0x740
     130:	0001006d 	andeq	r0, r1, sp, rrx
     134:	74697400 	strbtvc	r7, [r9], #-1024	; 0xfffffc00
     138:	6c5f656c 	cfldr64vs	mvdx6, [pc], {108}	; 0x6c
     13c:	74686769 	strbtvc	r6, [r8], #-1897	; 0xfffff897
     140:	6d62782e 	stclvs	8, cr7, [r2, #-184]!	; 0xffffff48
     144:	00000100 	andeq	r0, r0, r0, lsl #2
     148:	6c746974 			; <UNDEFINED> instruction: 0x6c746974
     14c:	72675f65 	rsbvc	r5, r7, #404	; 0x194
     150:	782e7961 	stmdavc	lr!, {r0, r5, r6, r8, fp, ip, sp, lr}
     154:	01006d62 	tsteq	r0, r2, ror #26
     158:	69740000 	ldmdbvs	r4!, {}^	; <UNPREDICTABLE>
     15c:	5f656c74 	svcpl	0x00656c74
     160:	63616c62 	cmnvs	r1, #25088	; 0x6200
     164:	62782e6b 	rsbsvs	r2, r8, #1712	; 0x6b0
     168:	0001006d 	andeq	r0, r1, sp, rrx
     16c:	6f6c7300 	svcvs	0x006c7300
     170:	65745f77 	ldrbvs	r5, [r4, #-3959]!	; 0xfffff089
     174:	682e7478 	stmdavs	lr!, {r3, r4, r5, r6, sl, ip, sp, lr}
     178:	00000100 	andeq	r0, r0, r0, lsl #2
     17c:	782e6762 	stmdavc	lr!, {r1, r5, r6, r8, r9, sl, sp, lr}
     180:	01006d62 	tsteq	r0, r2, ror #26
     184:	00000000 	andeq	r0, r0, r0
     188:	00000205 	andeq	r0, r0, r5, lsl #4
     18c:	30032000 	andcc	r2, r3, r0
     190:	025e1301 	subseq	r1, lr, #67108864	; 0x4000000
     194:	01010003 	tsteq	r1, r3
     198:	10020500 	andne	r0, r2, r0, lsl #10
     19c:	03200000 	nopeq	{0}	; <UNPREDICTABLE>
     1a0:	3d2f0125 	stfccs	f0, [pc, #-148]!	; 114 <startup-0x1ffffeec>
     1a4:	03303030 	teqeq	r0, #48	; 0x30
     1a8:	2f3d742c 	svccs	0x003d742c
     1ac:	672f3e67 	strvs	r3, [pc, -r7, ror #28]!
     1b0:	3e672f3e 	mcrcc	15, 3, r2, cr7, cr14, {1}
     1b4:	2f3e672f 	svccs	0x003e672f
     1b8:	672f3e67 	strvs	r3, [pc, -r7, ror #28]!
     1bc:	3e672f3e 	mcrcc	15, 3, r2, cr7, cr14, {1}
     1c0:	2f3d672f 	svccs	0x003d672f
     1c4:	672f3d67 	strvs	r3, [pc, -r7, ror #26]!
     1c8:	3d672f3e 	stclcc	15, cr2, [r7, #-248]!	; 0xffffff08
     1cc:	2f3d672f 	svccs	0x003d672f
     1d0:	52023f67 	andpl	r3, r2, #412	; 0x19c
     1d4:	322f4c17 	eorcc	r4, pc, #5888	; 0x1700
     1d8:	4bad5975 	blmi	feb567b4 <firstTime.4040+0xdeb47370>
     1dc:	754e4b4b 	strbvc	r4, [lr, #-2891]	; 0xfffff4b5
     1e0:	6759bb75 			; <UNDEFINED> instruction: 0x6759bb75
     1e4:	ad67835c 	stclge	3, cr8, [r7, #-368]!	; 0xfffffe90
     1e8:	c94e4b4b 	stmdbgt	lr, {r0, r1, r3, r6, r8, r9, fp, lr}^
     1ec:	5959bb75 	ldmdbpl	r9, {r0, r2, r4, r5, r6, r8, r9, fp, ip, sp, pc}^
     1f0:	8583675b 	strhi	r6, [r3, #1883]	; 0x75b
     1f4:	67858367 	strvs	r8, [r5, r7, ror #6]
     1f8:	676a8583 	strbvs	r8, [sl, -r3, lsl #11]!
     1fc:	67858383 	strvs	r8, [r5, r3, lsl #7]
     200:	67858383 	strvs	r8, [r5, r3, lsl #7]
     204:	67856785 	strvs	r6, [r5, r5, lsl #15]
     208:	68858383 	stmvs	r5, {r0, r1, r7, r8, r9, pc}
     20c:	67696868 	strbvs	r6, [r9, -r8, ror #16]!
     210:	67848383 	strvs	r8, [r4, r3, lsl #7]
     214:	02836784 	addeq	r6, r3, #132, 14	; 0x2100000
     218:	50021537 	andpl	r1, r2, r7, lsr r5
     21c:	84838313 	strhi	r8, [r3], #787	; 0x313
     220:	85838383 	strhi	r8, [r3, #899]	; 0x383
     224:	84838383 	strhi	r8, [r3], #899	; 0x383
     228:	03838383 	orreq	r8, r3, #201326594	; 0xc000002
     22c:	7575820f 	ldrbvc	r8, [r5, #-527]!	; 0xfffffdf1
     230:	75757575 	ldrbvc	r7, [r5, #-1397]!	; 0xfffffa8b
     234:	75757575 	ldrbvc	r7, [r5, #-1397]!	; 0xfffffa8b
     238:	2f767567 	svccs	0x00767567
     23c:	594b302f 	stmdbpl	fp, {r0, r1, r2, r3, r5, ip, sp}^
     240:	594b594b 	stmdbpl	fp, {r0, r1, r3, r6, r8, fp, ip, lr}^
     244:	95415a4b 	strbls	r5, [r1, #-2635]	; 0xfffff5b5
     248:	3d4f3a59 	vstrcc	s7, [pc, #-356]	; ec <startup-0x1fffff14>
     24c:	675a333d 	smmlarvs	sl, sp, r3, r3
     250:	67676793 			; <UNDEFINED> instruction: 0x67676793
     254:	67676767 	strbvs	r6, [r7, -r7, ror #14]!
     258:	04020042 	streq	r0, [r2], #-66	; 0xffffffbe
     25c:	06820601 	streq	r0, [r2], r1, lsl #12
     260:	3083bb83 	addcc	fp, r3, r3, lsl #23
     264:	bbc99175 	bllt	ff264840 <firstTime.4040+0xdf2553fc>
     268:	6202c9c9 	andvs	ip, r2, #3293184	; 0x324000
     26c:	f3c9d713 	vqshl.u8	d29, d3, #1
     270:	c92108c9 	stmdbgt	r1!, {r0, r3, r6, r7, fp}
     274:	08c91308 	stmiaeq	r9, {r3, r8, r9, ip}^
     278:	1308c92f 	movwne	ip, #35119	; 0x892f
     27c:	c92108c9 	stmdbgt	r1!, {r0, r3, r6, r7, fp}
     280:	08bb4b08 	ldmeq	fp!, {r3, r8, r9, fp, lr}
     284:	3d4bca3d 	vstrcc	s25, [fp, #-244]	; 0xffffff0c
     288:	596a3d4b 	stmdbpl	sl!, {r0, r1, r3, r6, r8, sl, fp, ip, sp}^
     28c:	6a3d4b3d 	bvs	f52f88 <startup-0x1f0ad078>
     290:	bbbbbbbb 	bllt	feeef184 <firstTime.4040+0xdeedfd40>
     294:	e783e5bb 			; <UNDEFINED> instruction: 0xe783e5bb
     298:	67595932 	smmlarvs	r9, r2, r9, r5
     29c:	67143702 	ldrvs	r3, [r4, -r2, lsl #14]
     2a0:	68675969 	stmdavs	r7!, {r0, r3, r5, r6, r8, fp, ip, lr}^
     2a4:	03040200 	movweq	r0, #16896	; 0x4200
     2a8:	0402004b 	streq	r0, [r2], #-75	; 0xffffffb5
     2ac:	0200bb03 	andeq	fp, r0, #3072	; 0xc00
     2b0:	80080304 	andhi	r0, r8, r4, lsl #6
     2b4:	01040200 	mrseq	r0, R12_usr
     2b8:	4e065806 	cdpmi	8, 0, cr5, cr6, cr6, {0}
     2bc:	f3596767 	vabd.u16	q11, <illegal reg q4.5>, <illegal reg q11.5>
     2c0:	4c9191f3 	ldfmid	f1, [r1], {243}	; 0xf3
     2c4:	3fbd9167 	svccc	0x00bd9167
     2c8:	01040200 	mrseq	r0, R12_usr
     2cc:	02008206 	andeq	r8, r0, #1610612736	; 0x60000000
     2d0:	00900204 	addseq	r0, r0, r4, lsl #4
     2d4:	90030402 	andls	r0, r3, r2, lsl #8
     2d8:	844b6706 	strbhi	r6, [fp], #-1798	; 0xfffff8fa
     2dc:	c9675968 	stmdbgt	r7!, {r3, r5, r6, r8, fp, ip, lr}^
     2e0:	9168d776 	smcls	36214	; 0x8d76
     2e4:	4b8383f4 	blmi	fe0e12bc <firstTime.4040+0xde0d1e78>
     2e8:	0200bd69 	andeq	fp, r0, #6720	; 0x1a40
     2ec:	f2060104 	vrhadd.s8	d0, d6, d4
     2f0:	02040200 	andeq	r0, r4, #0, 4
     2f4:	08062008 	stmdaeq	r6, {r3, sp}
     2f8:	00596913 	subseq	r6, r9, r3, lsl r9
     2fc:	06010402 	streq	r0, [r1], -r2, lsl #8
     300:	040200f2 	streq	r0, [r2], #-242	; 0xffffff0e
     304:	06200802 	strteq	r0, [r0], -r2, lsl #16
     308:	25021408 	strcs	r1, [r2, #-1032]	; 0xfffffbf8
     30c:	5e675915 			; <UNDEFINED> instruction: 0x5e675915
     310:	bc210859 	stclt	8, cr0, [r1], #-356	; 0xfffffe9c
     314:	686759bb 	stmdavs	r7!, {r0, r1, r3, r4, r5, r7, r8, fp, ip, lr}^
     318:	911408d7 			; <UNDEFINED> instruction: 0x911408d7
     31c:	04020095 	streq	r0, [r2], #-149	; 0xffffff6b
     320:	00580601 	subseq	r0, r8, r1, lsl #12
     324:	f2020402 	vshl.s8	d0, d2, d2
     328:	03040200 	movweq	r0, #16896	; 0x4200
     32c:	08062008 	stmdaeq	r6, {r3, sp}
     330:	086b5913 	stmdaeq	fp!, {r0, r1, r4, r8, fp, ip, lr}^
     334:	009f0875 	addseq	r0, pc, r5, ror r8	; <UNPREDICTABLE>
     338:	08010402 	stmdaeq	r1, {r1, sl}
     33c:	04020075 	streq	r0, [r2], #-117	; 0xffffff8b
     340:	2f490801 	svccs	0x00490801
     344:	01040200 	mrseq	r0, R12_usr
     348:	4b064a06 	blmi	192b68 <startup-0x1fe6d498>
     34c:	04020059 	streq	r0, [r2], #-89	; 0xffffffa7
     350:	02006102 	andeq	r6, r0, #-2147483648	; 0x80000000
     354:	58060104 	stmdapl	r6, {r2, r8}
     358:	4a0b0306 	bmi	2c0f78 <startup-0x1fd3f088>
     35c:	02003d08 	andeq	r3, r0, #8, 26	; 0x200
     360:	4a060104 	bmi	180778 <startup-0x1fe7f888>
     364:	02040200 	andeq	r0, r4, #0, 4
     368:	3d4b064a 	stclcc	6, cr0, [fp, #-296]	; 0xfffffed8
     36c:	6b91e5d7 	blvs	fe479ad0 <firstTime.4040+0xde46a68c>
     370:	02003d08 	andeq	r3, r0, #8, 26	; 0x200
     374:	4a060104 	bmi	18078c <startup-0x1fe7f874>
     378:	02040200 	andeq	r0, r4, #0, 4
     37c:	04020058 	streq	r0, [r2], #-88	; 0xffffffa8
     380:	02009003 	andeq	r9, r0, #3
     384:	064a0404 	strbeq	r0, [sl], -r4, lsl #8
     388:	e5d73d4b 	ldrb	r3, [r7, #3403]	; 0xd4b
     38c:	ae84694b 			; <UNDEFINED> instruction: 0xae84694b
     390:	29023f67 	stmdbcs	r2, {r0, r1, r2, r5, r6, r8, r9, sl, fp, ip, sp}
     394:	4b3d3d16 	blmi	f4f7f4 <startup-0x1f0b080c>
     398:	594b5a40 	stmdbpl	fp, {r6, r9, fp, ip, lr}^
     39c:	594b594b 	stmdbpl	fp, {r0, r1, r3, r6, r8, fp, ip, lr}^
     3a0:	91918383 	orrsls	r8, r1, r3, lsl #7
     3a4:	84839191 	strhi	r9, [r3], #401	; 0x191
     3a8:	833e8383 	teqhi	lr, #201326594	; 0xc000002
     3ac:	5a4c3d83 	bpl	130f9c0 <startup-0x1ecf0640>
     3b0:	242f8383 	strtcs	r8, [pc], #-899	; 3b8 <startup-0x1ffffc48>
     3b4:	be033d67 	cdplt	13, 0, cr3, cr3, cr7, {3}
     3b8:	9203207e 	andls	r2, r3, #126	; 0x7e
     3bc:	02003c01 	andeq	r3, r0, #256	; 0x100
     3c0:	92030104 	andls	r0, r3, #4, 2
     3c4:	a703207e 	smlsdxge	r3, lr, r0, r2
     3c8:	4bd60802 	blmi	ff5823d8 <firstTime.4040+0xdf572f94>
     3cc:	02213e3d 	eoreq	r3, r1, #976	; 0x3d0
     3d0:	01010004 	tsteq	r1, r4
     3d4:	0000008a 	andeq	r0, r0, sl, lsl #1
     3d8:	00700002 	rsbseq	r0, r0, r2
     3dc:	01020000 	mrseq	r0, (UNDEF: 2)
     3e0:	000d0efb 	strdeq	r0, [sp], -fp
     3e4:	01010101 	tsteq	r1, r1, lsl #2
     3e8:	01000000 	mrseq	r0, (UNDEF: 0)
     3ec:	43010000 	movwmi	r0, #4096	; 0x1000
     3f0:	6f6d2f3a 	svcvs	0x006d2f3a
     3f4:	2f632f70 	svccs	0x00632f70
     3f8:	6c706f4d 	ldclvs	15, cr6, [r0], #-308	; 0xfffffecc
     3fc:	726f6261 	rsbvc	r6, pc, #268435462	; 0x10000006
     400:	6f697461 	svcvs	0x00697461
     404:	2f72656e 	svccs	0x0072656e
     408:	73504944 	cmpvc	r0, #68, 18	; 0x110000
     40c:	7469572d 	strbtvc	r5, [r9], #-1837	; 0xfffff8d3
     410:	432f6863 			; <UNDEFINED> instruction: 0x432f6863
     414:	61670000 	cmnvs	r7, r0
     418:	626f656d 	rsbvs	r6, pc, #457179136	; 0x1b400000
     41c:	7463656a 	strbtvc	r6, [r3], #-1386	; 0xfffffa96
     420:	0100632e 	tsteq	r0, lr, lsr #6
     424:	70730000 	rsbsvc	r0, r3, r0
     428:	65746972 	ldrbvs	r6, [r4, #-2418]!	; 0xfffff68e
     42c:	0100682e 	tsteq	r0, lr, lsr #16
     430:	6d690000 	stclvs	0, cr0, [r9, #-0]
     434:	2e656761 	cdpcs	7, 6, cr6, cr5, cr1, {3}
     438:	00010068 	andeq	r0, r1, r8, rrx
     43c:	6d616700 	stclvs	7, cr6, [r1, #-0]
     440:	6a626f65 	bvs	189c1dc <startup-0x1e763e24>
     444:	2e746365 	cdpcs	3, 7, cr6, cr4, cr5, {3}
     448:	00010068 	andeq	r0, r1, r8, rrx
     44c:	05000000 	streq	r0, [r0, #-0]
     450:	0018bc02 	andseq	fp, r8, r2, lsl #24
     454:	4c4c1920 	mcrrmi	9, 2, r1, ip, cr0	; <UNPREDICTABLE>
     458:	3d67594b 			; <UNDEFINED> instruction: 0x3d67594b
     45c:	000402ca 	andeq	r0, r4, sl, asr #5
     460:	01840101 	orreq	r0, r4, r1, lsl #2
     464:	00020000 	andeq	r0, r2, r0
     468:	00000137 	andeq	r0, r0, r7, lsr r1
     46c:	0efb0102 	cdpeq	1, 15, cr0, cr11, cr2, {0}
     470:	0101000d 	tsteq	r1, sp
     474:	00000101 	andeq	r0, r0, r1, lsl #2
     478:	00000100 	andeq	r0, r0, r0, lsl #2
     47c:	2f3a4301 	svccs	0x003a4301
     480:	2f706f6d 	svccs	0x00706f6d
     484:	6f4d2f63 	svcvs	0x004d2f63
     488:	62616c70 	rsbvs	r6, r1, #112, 24	; 0x7000
     48c:	7461726f 	strbtvc	r7, [r1], #-623	; 0xfffffd91
     490:	656e6f69 	strbvs	r6, [lr, #-3945]!	; 0xfffff097
     494:	49442f72 	stmdbmi	r4, {r1, r4, r5, r6, r8, r9, sl, fp, sp}^
     498:	572d7350 			; <UNDEFINED> instruction: 0x572d7350
     49c:	68637469 	stmdavs	r3!, {r0, r3, r5, r6, sl, ip, sp, lr}^
     4a0:	0000432f 	andeq	r4, r0, pc, lsr #6
     4a4:	65726966 	ldrbvs	r6, [r2, #-2406]!	; 0xfffff69a
     4a8:	0100632e 	tsteq	r0, lr, lsr #6
     4ac:	70730000 	rsbsvc	r0, r3, r0
     4b0:	65746972 	ldrbvs	r6, [r4, #-2418]!	; 0xfffff68e
     4b4:	0100682e 	tsteq	r0, lr, lsr #16
     4b8:	6d690000 	stclvs	0, cr0, [r9, #-0]
     4bc:	2e656761 	cdpcs	7, 6, cr6, cr5, cr1, {3}
     4c0:	00010068 	andeq	r0, r1, r8, rrx
     4c4:	6d616700 	stclvs	7, cr6, [r1, #-0]
     4c8:	6a626f65 	bvs	189c264 <startup-0x1e763d9c>
     4cc:	2e746365 	cdpcs	3, 7, cr6, cr4, cr5, {3}
     4d0:	00010068 	andeq	r0, r1, r8, rrx
     4d4:	72696600 	rsbvc	r6, r9, #0, 12
     4d8:	6c625f65 	stclvs	15, cr5, [r2], #-404	; 0xfffffe6c
     4dc:	5f6b6361 	svcpl	0x006b6361
     4e0:	62782e32 	rsbsvs	r2, r8, #800	; 0x320
     4e4:	0001006d 	andeq	r0, r1, sp, rrx
     4e8:	72696600 	rsbvc	r6, r9, #0, 12
     4ec:	675f3165 	ldrbvs	r3, [pc, -r5, ror #2]
     4f0:	2e796172 	mrccs	1, 3, r6, cr9, cr2, {3}
     4f4:	006d6278 	rsbeq	r6, sp, r8, ror r2
     4f8:	66000001 	strvs	r0, [r0], -r1
     4fc:	31657269 	cmncc	r5, r9, ror #4
     500:	67696c5f 			; <UNDEFINED> instruction: 0x67696c5f
     504:	782e7468 	stmdavc	lr!, {r3, r5, r6, sl, ip, sp, lr}
     508:	01006d62 	tsteq	r0, r2, ror #26
     50c:	69660000 	stmdbvs	r6!, {}^	; <UNPREDICTABLE>
     510:	5f326572 	svcpl	0x00326572
     514:	79617267 	stmdbvc	r1!, {r0, r1, r2, r5, r6, r9, ip, sp, lr}^
     518:	6d62782e 	stclvs	8, cr7, [r2, #-184]!	; 0xffffff48
     51c:	00000100 	andeq	r0, r0, r0, lsl #2
     520:	65726966 	ldrbvs	r6, [r2, #-2406]!	; 0xfffff69a
     524:	696c5f32 	stmdbvs	ip!, {r1, r4, r5, r8, r9, sl, fp, ip, lr}^
     528:	2e746867 	cdpcs	8, 7, cr6, cr4, cr7, {3}
     52c:	006d6278 	rsbeq	r6, sp, r8, ror r2
     530:	66000001 	strvs	r0, [r0], -r1
     534:	33657269 	cmncc	r5, #-1879048186	; 0x90000006
     538:	6172675f 	cmnvs	r2, pc, asr r7
     53c:	62782e79 	rsbsvs	r2, r8, #1936	; 0x790
     540:	0001006d 	andeq	r0, r1, sp, rrx
     544:	72696600 	rsbvc	r6, r9, #0, 12
     548:	6c5f3365 	mrrcvs	3, 6, r3, pc, cr5	; <UNPREDICTABLE>
     54c:	74686769 	strbtvc	r6, [r8], #-1897	; 0xfffff897
     550:	6d62782e 	stclvs	8, cr7, [r2, #-184]!	; 0xffffff48
     554:	00000100 	andeq	r0, r0, r0, lsl #2
     558:	65726966 	ldrbvs	r6, [r2, #-2406]!	; 0xfffff69a
     55c:	72675f34 	rsbvc	r5, r7, #52, 30	; 0xd0
     560:	782e7961 	stmdavc	lr!, {r0, r5, r6, r8, fp, ip, sp, lr}
     564:	01006d62 	tsteq	r0, r2, ror #26
     568:	69660000 	stmdbvs	r6!, {}^	; <UNPREDICTABLE>
     56c:	5f346572 	svcpl	0x00346572
     570:	6867696c 	stmdavs	r7!, {r2, r3, r5, r6, r8, fp, sp, lr}^
     574:	62782e74 	rsbsvs	r2, r8, #116, 28	; 0x740
     578:	0001006d 	andeq	r0, r1, sp, rrx
     57c:	72696600 	rsbvc	r6, r9, #0, 12
     580:	675f3565 	ldrbvs	r3, [pc, -r5, ror #10]
     584:	2e796172 	mrccs	1, 3, r6, cr9, cr2, {3}
     588:	006d6278 	rsbeq	r6, sp, r8, ror r2
     58c:	66000001 	strvs	r0, [r0], -r1
     590:	35657269 	strbcc	r7, [r5, #-617]!	; 0xfffffd97
     594:	67696c5f 			; <UNDEFINED> instruction: 0x67696c5f
     598:	782e7468 	stmdavc	lr!, {r3, r5, r6, sl, ip, sp, lr}
     59c:	01006d62 	tsteq	r0, r2, ror #26
     5a0:	00000000 	andeq	r0, r0, r0
     5a4:	19140205 	ldmdbne	r4, {r0, r2, r9}
     5a8:	30032000 	andcc	r2, r3, r0
     5ac:	672f3d01 	strvs	r3, [pc, -r1, lsl #26]!
     5b0:	3e672f3e 	mcrcc	15, 3, r2, cr7, cr14, {1}
     5b4:	2f3e672f 	svccs	0x003e672f
     5b8:	672f3e67 	strvs	r3, [pc, -r7, ror #28]!
     5bc:	3e672f3e 	mcrcc	15, 3, r2, cr7, cr14, {1}
     5c0:	2f3e672f 	svccs	0x003e672f
     5c4:	672f3e67 	strvs	r3, [pc, -r7, ror #28]!
     5c8:	3e672f3e 	mcrcc	15, 3, r2, cr7, cr14, {1}
     5cc:	023d672f 	eorseq	r6, sp, #12320768	; 0xbc0000
     5d0:	4b4c1446 	blmi	13056f0 <startup-0x1ecfa910>
     5d4:	594b3e2f 	stmdbpl	fp, {r0, r1, r2, r3, r5, r9, sl, fp, ip, sp}^
     5d8:	915a5959 	cmpls	sl, r9, asr r9
     5dc:	93919191 	orrsls	r9, r1, #1073741860	; 0x40000024
     5e0:	3d3d3d3e 	ldccc	13, cr3, [sp, #-248]!	; 0xffffff08
     5e4:	0031023d 	eorseq	r0, r1, sp, lsr r2
     5e8:	00e70101 	rsceq	r0, r7, r1, lsl #2
     5ec:	00020000 	andeq	r0, r2, r0
     5f0:	0000006c 	andeq	r0, r0, ip, rrx
     5f4:	0efb0102 	cdpeq	1, 15, cr0, cr11, cr2, {0}
     5f8:	0101000d 	tsteq	r1, sp
     5fc:	00000101 	andeq	r0, r0, r1, lsl #2
     600:	00000100 	andeq	r0, r0, r0, lsl #2
     604:	2f3a4301 	svccs	0x003a4301
     608:	2f706f6d 	svccs	0x00706f6d
     60c:	6f4d2f63 	svcvs	0x004d2f63
     610:	62616c70 	rsbvs	r6, r1, #112, 24	; 0x7000
     614:	7461726f 	strbtvc	r7, [r1], #-623	; 0xfffffd91
     618:	656e6f69 	strbvs	r6, [lr, #-3945]!	; 0xfffff097
     61c:	49442f72 	stmdbmi	r4, {r1, r4, r5, r6, r8, r9, sl, fp, sp}^
     620:	572d7350 			; <UNDEFINED> instruction: 0x572d7350
     624:	68637469 	stmdavs	r3!, {r0, r3, r5, r6, sl, ip, sp, lr}^
     628:	0000432f 	andeq	r4, r0, pc, lsr #6
     62c:	79616c70 	stmdbvc	r1!, {r4, r5, r6, sl, fp, sp, lr}^
     630:	632e7265 			; <UNDEFINED> instruction: 0x632e7265
     634:	00000100 	andeq	r0, r0, r0, lsl #2
     638:	69727073 	ldmdbvs	r2!, {r0, r1, r4, r5, r6, ip, sp, lr}^
     63c:	682e6574 	stmdavs	lr!, {r2, r4, r5, r6, r8, sl, sp, lr}
     640:	00000100 	andeq	r0, r0, r0, lsl #2
     644:	67616d69 	strbvs	r6, [r1, -r9, ror #26]!
     648:	00682e65 	rsbeq	r2, r8, r5, ror #28
     64c:	67000001 	strvs	r0, [r0, -r1]
     650:	6f656d61 	svcvs	0x00656d61
     654:	63656a62 	cmnvs	r5, #401408	; 0x62000
     658:	00682e74 	rsbeq	r2, r8, r4, ror lr
     65c:	00000001 	andeq	r0, r0, r1
     660:	bc020500 	cfstr32lt	mvfx0, [r2], {-0}
     664:	1820001b 	stmdane	r0!, {r0, r1, r3, r4}
     668:	3d67594d 			; <UNDEFINED> instruction: 0x3d67594d
     66c:	00c80c03 	sbceq	r0, r8, r3, lsl #24
     670:	06010402 	streq	r0, [r1], -r2, lsl #8
     674:	04020082 	streq	r0, [r2], #-130	; 0xffffff7e
     678:	4b064a02 	blmi	192e88 <startup-0x1fe6d178>
     67c:	4b3d754d 	blmi	f5dbb8 <startup-0x1f0a2448>
     680:	02004c68 	andeq	r4, r0, #104, 24	; 0x6800
     684:	74060104 	strvc	r0, [r6], #-260	; 0xfffffefc
     688:	4b3d7506 	blmi	f5daa8 <startup-0x1f0a2558>
     68c:	5d754d68 	ldclpl	13, cr4, [r5, #-416]!	; 0xfffffe60
     690:	01040200 	mrseq	r0, R12_usr
     694:	59064a06 	stmdbpl	r6, {r1, r2, r9, fp, lr}
     698:	0402005b 	streq	r0, [r2], #-91	; 0xffffffa5
     69c:	064a0601 	strbeq	r0, [sl], -r1, lsl #12
     6a0:	02005b59 	andeq	r5, r0, #91136	; 0x16400
     6a4:	4a060104 	bmi	180abc <startup-0x1fe7f544>
     6a8:	04040200 	streq	r0, [r4], #-512	; 0xfffffe00
     6ac:	04020058 	streq	r0, [r2], #-88	; 0xffffffa8
     6b0:	02004a05 	andeq	r4, r0, #20480	; 0x5000
     6b4:	00580604 	subseq	r0, r8, r4, lsl #12
     6b8:	4a070402 	bmi	1c16c8 <startup-0x1fe3e938>
     6bc:	005b4b06 	subseq	r4, fp, r6, lsl #22
     6c0:	06010402 	streq	r0, [r1], -r2, lsl #8
     6c4:	5b750674 	blpl	1d4209c <startup-0x1e2bdf64>
     6c8:	4b684b76 	blmi	1a134a8 <startup-0x1e5ecb58>
     6cc:	6867675c 	stmdavs	r7!, {r2, r3, r4, r6, r8, r9, sl, sp, lr}^
     6d0:	01001202 	tsteq	r0, r2, lsl #4
     6d4:	0001dd01 	andeq	sp, r1, r1, lsl #26
     6d8:	82000200 	andhi	r0, r0, #0, 4
     6dc:	02000001 	andeq	r0, r0, #1
     6e0:	0d0efb01 	vstreq	d15, [lr, #-4]
     6e4:	01010100 	mrseq	r0, (UNDEF: 17)
     6e8:	00000001 	andeq	r0, r0, r1
     6ec:	01000001 	tsteq	r0, r1
     6f0:	6d2f3a43 	vstmdbvs	pc!, {s6-s72}
     6f4:	632f706f 			; <UNDEFINED> instruction: 0x632f706f
     6f8:	706f4d2f 	rsbvc	r4, pc, pc, lsr #26
     6fc:	6f62616c 	svcvs	0x0062616c
     700:	69746172 	ldmdbvs	r4!, {r1, r4, r5, r6, r8, sp, lr}^
     704:	72656e6f 	rsbvc	r6, r5, #1776	; 0x6f0
     708:	5049442f 	subpl	r4, r9, pc, lsr #8
     70c:	69572d73 	ldmdbvs	r7, {r0, r1, r4, r5, r6, r8, sl, fp, sp}^
     710:	2f686374 	svccs	0x00686374
     714:	62000043 	andvs	r0, r0, #67	; 0x43
     718:	2e647269 	cdpcs	2, 6, cr7, cr4, cr9, {3}
     71c:	00010063 	andeq	r0, r1, r3, rrx
     720:	72707300 	rsbsvc	r7, r0, #0, 6
     724:	2e657469 	cdpcs	4, 6, cr7, cr5, cr9, {3}
     728:	00010068 	andeq	r0, r1, r8, rrx
     72c:	616d6900 	cmnvs	sp, r0, lsl #18
     730:	682e6567 	stmdavs	lr!, {r0, r1, r2, r5, r6, r8, sl, sp, lr}
     734:	00000100 	andeq	r0, r0, r0, lsl #2
     738:	656d6167 	strbvs	r6, [sp, #-359]!	; 0xfffffe99
     73c:	656a626f 	strbvs	r6, [sl, #-623]!	; 0xfffffd91
     740:	682e7463 	stmdavs	lr!, {r0, r1, r5, r6, sl, ip, sp, lr}
     744:	00000100 	andeq	r0, r0, r0, lsl #2
     748:	64726962 	ldrbtvs	r6, [r2], #-2402	; 0xfffff69e
     74c:	6c625f31 	stclvs	15, cr5, [r2], #-196	; 0xffffff3c
     750:	2e6b6361 	cdpcs	3, 6, cr6, cr11, cr1, {3}
     754:	006d6278 	rsbeq	r6, sp, r8, ror r2
     758:	62000001 	andvs	r0, r0, #1
     75c:	31647269 	cmncc	r4, r9, ror #4
     760:	6172675f 	cmnvs	r2, pc, asr r7
     764:	62782e79 	rsbsvs	r2, r8, #1936	; 0x790
     768:	0001006d 	andeq	r0, r1, sp, rrx
     76c:	72696200 	rsbvc	r6, r9, #0, 4
     770:	6c5f3164 	ldfvse	f3, [pc], {100}	; 0x64
     774:	74686769 	strbtvc	r6, [r8], #-1897	; 0xfffff897
     778:	6d62782e 	stclvs	8, cr7, [r2, #-184]!	; 0xffffff48
     77c:	00000100 	andeq	r0, r0, r0, lsl #2
     780:	64726962 	ldrbtvs	r6, [r2], #-2402	; 0xfffff69e
     784:	6c625f32 	stclvs	15, cr5, [r2], #-200	; 0xffffff38
     788:	2e6b6361 	cdpcs	3, 6, cr6, cr11, cr1, {3}
     78c:	006d6278 	rsbeq	r6, sp, r8, ror r2
     790:	62000001 	andvs	r0, r0, #1
     794:	32647269 	rsbcc	r7, r4, #-1879048186	; 0x90000006
     798:	6172675f 	cmnvs	r2, pc, asr r7
     79c:	62782e79 	rsbsvs	r2, r8, #1936	; 0x790
     7a0:	0001006d 	andeq	r0, r1, sp, rrx
     7a4:	72696200 	rsbvc	r6, r9, #0, 4
     7a8:	6c5f3264 	lfmvs	f3, 2, [pc], {100}	; 0x64
     7ac:	74686769 	strbtvc	r6, [r8], #-1897	; 0xfffff897
     7b0:	6d62782e 	stclvs	8, cr7, [r2, #-184]!	; 0xffffff48
     7b4:	00000100 	andeq	r0, r0, r0, lsl #2
     7b8:	64726962 	ldrbtvs	r6, [r2], #-2402	; 0xfffff69e
     7bc:	6c625f33 	stclvs	15, cr5, [r2], #-204	; 0xffffff34
     7c0:	2e6b6361 	cdpcs	3, 6, cr6, cr11, cr1, {3}
     7c4:	006d6278 	rsbeq	r6, sp, r8, ror r2
     7c8:	62000001 	andvs	r0, r0, #1
     7cc:	33647269 	cmncc	r4, #-1879048186	; 0x90000006
     7d0:	6172675f 	cmnvs	r2, pc, asr r7
     7d4:	62782e79 	rsbsvs	r2, r8, #1936	; 0x790
     7d8:	0001006d 	andeq	r0, r1, sp, rrx
     7dc:	72696200 	rsbvc	r6, r9, #0, 4
     7e0:	6c5f3364 	mrrcvs	3, 6, r3, pc, cr4	; <UNPREDICTABLE>
     7e4:	74686769 	strbtvc	r6, [r8], #-1897	; 0xfffff897
     7e8:	6d62782e 	stclvs	8, cr7, [r2, #-184]!	; 0xffffff48
     7ec:	00000100 	andeq	r0, r0, r0, lsl #2
     7f0:	64726962 	ldrbtvs	r6, [r2], #-2402	; 0xfffff69e
     7f4:	6c625f34 	stclvs	15, cr5, [r2], #-208	; 0xffffff30
     7f8:	2e6b6361 	cdpcs	3, 6, cr6, cr11, cr1, {3}
     7fc:	006d6278 	rsbeq	r6, sp, r8, ror r2
     800:	62000001 	andvs	r0, r0, #1
     804:	34647269 	strbtcc	r7, [r4], #-617	; 0xfffffd97
     808:	6172675f 	cmnvs	r2, pc, asr r7
     80c:	62782e79 	rsbsvs	r2, r8, #1936	; 0x790
     810:	0001006d 	andeq	r0, r1, sp, rrx
     814:	72696200 	rsbvc	r6, r9, #0, 4
     818:	6c5f3464 	cfldrdvs	mvd3, [pc], {100}	; 0x64
     81c:	74686769 	strbtvc	r6, [r8], #-1897	; 0xfffff897
     820:	6d62782e 	stclvs	8, cr7, [r2, #-184]!	; 0xffffff48
     824:	00000100 	andeq	r0, r0, r0, lsl #2
     828:	64726962 	ldrbtvs	r6, [r2], #-2402	; 0xfffff69e
     82c:	6c625f35 	stclvs	15, cr5, [r2], #-212	; 0xffffff2c
     830:	2e6b6361 	cdpcs	3, 6, cr6, cr11, cr1, {3}
     834:	006d6278 	rsbeq	r6, sp, r8, ror r2
     838:	62000001 	andvs	r0, r0, #1
     83c:	35647269 	strbcc	r7, [r4, #-617]!	; 0xfffffd97
     840:	6172675f 	cmnvs	r2, pc, asr r7
     844:	62782e79 	rsbsvs	r2, r8, #1936	; 0x790
     848:	0001006d 	andeq	r0, r1, sp, rrx
     84c:	72696200 	rsbvc	r6, r9, #0, 4
     850:	6c5f3564 	cfldr64vs	mvdx3, [pc], {100}	; 0x64
     854:	74686769 	strbtvc	r6, [r8], #-1897	; 0xfffff897
     858:	6d62782e 	stclvs	8, cr7, [r2, #-184]!	; 0xffffff48
     85c:	00000100 	andeq	r0, r0, r0, lsl #2
     860:	02050000 	andeq	r0, r5, #0
     864:	20001dc0 	andcs	r1, r0, r0, asr #27
     868:	3e013f03 	cdpcc	15, 0, cr3, cr1, cr3, {0}
     86c:	2f3d672f 	svccs	0x003d672f
     870:	672f3d67 	strvs	r3, [pc, -r7, ror #26]!
     874:	3d672f3e 	stclcc	15, cr2, [r7, #-248]!	; 0xffffff08
     878:	2f3d672f 	svccs	0x003d672f
     87c:	672f3f67 	strvs	r3, [pc, -r7, ror #30]!
     880:	3d672f3d 	stclcc	15, cr2, [r7, #-244]!	; 0xffffff0c
     884:	2f3e672f 	svccs	0x003e672f
     888:	672f3d67 	strvs	r3, [pc, -r7, ror #26]!
     88c:	3e672f3d 	mcrcc	15, 3, r2, cr7, cr13, {1}
     890:	2f3d672f 	svccs	0x003d672f
     894:	672f3d67 	strvs	r3, [pc, -r7, ror #26]!
     898:	145e023d 	ldrbne	r0, [lr], #-573	; 0xfffffdc3
     89c:	3e2f4b4c 	vnmulcc.f64	d4, d15, d12
     8a0:	5959594b 	ldmdbpl	r9, {r0, r1, r3, r6, r8, fp, ip, lr}^
     8a4:	91915c59 	orrsls	r5, r1, r9, asr ip
     8a8:	94939191 	ldrls	r9, [r3], #401	; 0x191
     8ac:	3d3d3d3e 	ldccc	13, cr3, [sp, #-248]!	; 0xffffff08
     8b0:	003d023d 	eorseq	r0, sp, sp, lsr r2
     8b4:	01610101 	cmneq	r1, r1, lsl #2
     8b8:	00020000 	andeq	r0, r2, r0
     8bc:	0000011c 	andeq	r0, r0, ip, lsl r1
     8c0:	0efb0102 	cdpeq	1, 15, cr0, cr11, cr2, {0}
     8c4:	0101000d 	tsteq	r1, sp
     8c8:	00000101 	andeq	r0, r0, r1, lsl #2
     8cc:	00000100 	andeq	r0, r0, r0, lsl #2
     8d0:	2f3a4301 	svccs	0x003a4301
     8d4:	2f706f6d 	svccs	0x00706f6d
     8d8:	6f4d2f63 	svcvs	0x004d2f63
     8dc:	62616c70 	rsbvs	r6, r1, #112, 24	; 0x7000
     8e0:	7461726f 	strbtvc	r7, [r1], #-623	; 0xfffffd91
     8e4:	656e6f69 	strbvs	r6, [lr, #-3945]!	; 0xfffff097
     8e8:	49442f72 	stmdbmi	r4, {r1, r4, r5, r6, r8, r9, sl, fp, sp}^
     8ec:	572d7350 			; <UNDEFINED> instruction: 0x572d7350
     8f0:	68637469 	stmdavs	r3!, {r0, r3, r5, r6, sl, ip, sp, lr}^
     8f4:	0000432f 	andeq	r4, r0, pc, lsr #6
     8f8:	63746977 	cmnvs	r4, #1949696	; 0x1dc000
     8fc:	00632e68 	rsbeq	r2, r3, r8, ror #28
     900:	73000001 	movwvc	r0, #1
     904:	74697270 	strbtvc	r7, [r9], #-624	; 0xfffffd90
     908:	00682e65 	rsbeq	r2, r8, r5, ror #28
     90c:	69000001 	stmdbvs	r0, {r0}
     910:	6567616d 	strbvs	r6, [r7, #-365]!	; 0xfffffe93
     914:	0100682e 	tsteq	r0, lr, lsr #16
     918:	61670000 	cmnvs	r7, r0
     91c:	626f656d 	rsbvs	r6, pc, #457179136	; 0x1b400000
     920:	7463656a 	strbtvc	r6, [r3], #-1386	; 0xfffffa96
     924:	0100682e 	tsteq	r0, lr, lsr #16
     928:	69770000 	ldmdbvs	r7!, {}^	; <UNPREDICTABLE>
     92c:	31686374 	smccc	34356	; 0x8634
     930:	616c625f 	cmnvs	ip, pc, asr r2
     934:	782e6b63 	stmdavc	lr!, {r0, r1, r5, r6, r8, r9, fp, sp, lr}
     938:	01006d62 	tsteq	r0, r2, ror #26
     93c:	69770000 	ldmdbvs	r7!, {}^	; <UNPREDICTABLE>
     940:	31686374 	smccc	34356	; 0x8634
     944:	6172675f 	cmnvs	r2, pc, asr r7
     948:	62782e79 	rsbsvs	r2, r8, #1936	; 0x790
     94c:	0001006d 	andeq	r0, r1, sp, rrx
     950:	74697700 	strbtvc	r7, [r9], #-1792	; 0xfffff900
     954:	5f316863 	svcpl	0x00316863
     958:	6867696c 	stmdavs	r7!, {r2, r3, r5, r6, r8, fp, sp, lr}^
     95c:	62782e74 	rsbsvs	r2, r8, #116, 28	; 0x740
     960:	0001006d 	andeq	r0, r1, sp, rrx
     964:	74697700 	strbtvc	r7, [r9], #-1792	; 0xfffff900
     968:	5f326863 	svcpl	0x00326863
     96c:	63616c62 	cmnvs	r1, #25088	; 0x6200
     970:	62782e6b 	rsbsvs	r2, r8, #1712	; 0x6b0
     974:	0001006d 	andeq	r0, r1, sp, rrx
     978:	74697700 	strbtvc	r7, [r9], #-1792	; 0xfffff900
     97c:	5f326863 	svcpl	0x00326863
     980:	79617267 	stmdbvc	r1!, {r0, r1, r2, r5, r6, r9, ip, sp, lr}^
     984:	6d62782e 	stclvs	8, cr7, [r2, #-184]!	; 0xffffff48
     988:	00000100 	andeq	r0, r0, r0, lsl #2
     98c:	63746977 	cmnvs	r4, #1949696	; 0x1dc000
     990:	6c5f3268 	lfmvs	f3, 2, [pc], {104}	; 0x68
     994:	74686769 	strbtvc	r6, [r8], #-1897	; 0xfffff897
     998:	6d62782e 	stclvs	8, cr7, [r2, #-184]!	; 0xffffff48
     99c:	00000100 	andeq	r0, r0, r0, lsl #2
     9a0:	63746977 	cmnvs	r4, #1949696	; 0x1dc000
     9a4:	625f3368 	subsvs	r3, pc, #104, 6	; 0xa0000001
     9a8:	6b63616c 	blvs	18d8f60 <startup-0x1e7270a0>
     9ac:	6d62782e 	stclvs	8, cr7, [r2, #-184]!	; 0xffffff48
     9b0:	00000100 	andeq	r0, r0, r0, lsl #2
     9b4:	63746977 	cmnvs	r4, #1949696	; 0x1dc000
     9b8:	675f3368 	ldrbvs	r3, [pc, -r8, ror #6]
     9bc:	2e796172 	mrccs	1, 3, r6, cr9, cr2, {3}
     9c0:	006d6278 	rsbeq	r6, sp, r8, ror r2
     9c4:	77000001 	strvc	r0, [r0, -r1]
     9c8:	68637469 	stmdavs	r3!, {r0, r3, r5, r6, sl, ip, sp, lr}^
     9cc:	696c5f33 	stmdbvs	ip!, {r0, r1, r4, r5, r8, r9, sl, fp, ip, lr}^
     9d0:	2e746867 	cdpcs	8, 7, cr6, cr4, cr7, {3}
     9d4:	006d6278 	rsbeq	r6, sp, r8, ror r2
     9d8:	00000001 	andeq	r0, r0, r1
     9dc:	24020500 	strcs	r0, [r2], #-1280	; 0xfffffb00
     9e0:	03200021 			; <UNDEFINED> instruction: 0x03200021
     9e4:	2f3e0128 	svccs	0x003e0128
     9e8:	672f3d67 	strvs	r3, [pc, -r7, ror #26]!
     9ec:	3e672f3d 	mcrcc	15, 3, r2, cr7, cr13, {1}
     9f0:	2f3d672f 	svccs	0x003d672f
     9f4:	672f3d67 	strvs	r3, [pc, -r7, ror #26]!
     9f8:	3d672f3f 	stclcc	15, cr2, [r7, #-252]!	; 0xffffff04
     9fc:	2f3d672f 	svccs	0x003d672f
     a00:	3a023e67 	bcc	903a4 <startup-0x1ff6fc5c>
     a04:	2f4b4c14 	svccs	0x004b4c14
     a08:	59594b3e 	ldmdbpl	r9, {r1, r2, r3, r4, r5, r8, r9, fp, lr}^
     a0c:	9191915b 	orrsls	r9, r1, fp, asr r1
     a10:	3d3d3e94 	ldccc	14, cr3, [sp, #-592]!	; 0xfffffdb0
     a14:	29023d3d 	stmdbcs	r2, {r0, r2, r3, r4, r5, r8, sl, fp, ip, sp}
     a18:	83010100 	movwhi	r0, #4352	; 0x1100
     a1c:	02000001 	andeq	r0, r0, #1
     a20:	00011a00 	andeq	r1, r1, r0, lsl #20
     a24:	fb010200 	blx	4122e <startup-0x1ffbedd2>
     a28:	01000d0e 	tsteq	r0, lr, lsl #26
     a2c:	00010101 	andeq	r0, r1, r1, lsl #2
     a30:	00010000 	andeq	r0, r1, r0
     a34:	3a430100 	bcc	10c0e3c <startup-0x1ef3f1c4>
     a38:	706f6d2f 	rsbvc	r6, pc, pc, lsr #26
     a3c:	4d2f632f 	stcmi	3, cr6, [pc, #-188]!	; 988 <startup-0x1ffff678>
     a40:	616c706f 	cmnvs	ip, pc, rrx
     a44:	61726f62 	cmnvs	r2, r2, ror #30
     a48:	6e6f6974 			; <UNDEFINED> instruction: 0x6e6f6974
     a4c:	442f7265 	strtmi	r7, [pc], #-613	; a54 <startup-0x1ffff5ac>
     a50:	2d735049 	ldclcs	0, cr5, [r3, #-292]!	; 0xfffffedc
     a54:	63746957 	cmnvs	r4, #1425408	; 0x15c000
     a58:	00432f68 	subeq	r2, r3, r8, ror #30
     a5c:	50494400 	subpl	r4, r9, r0, lsl #8
     a60:	0100632e 	tsteq	r0, lr, lsr #6
     a64:	70730000 	rsbsvc	r0, r3, r0
     a68:	65746972 	ldrbvs	r6, [r4, #-2418]!	; 0xfffff68e
     a6c:	0100682e 	tsteq	r0, lr, lsr #16
     a70:	6d690000 	stclvs	0, cr0, [r9, #-0]
     a74:	2e656761 	cdpcs	7, 6, cr6, cr5, cr1, {3}
     a78:	00010068 	andeq	r0, r1, r8, rrx
     a7c:	6d616700 	stclvs	7, cr6, [r1, #-0]
     a80:	6a626f65 	bvs	189c81c <startup-0x1e7637e4>
     a84:	2e746365 	cdpcs	3, 7, cr6, cr4, cr5, {3}
     a88:	00010068 	andeq	r0, r1, r8, rrx
     a8c:	74697700 	strbtvc	r7, [r9], #-1792	; 0xfffff900
     a90:	5f316863 	svcpl	0x00316863
     a94:	63616c62 	cmnvs	r1, #25088	; 0x6200
     a98:	62782e6b 	rsbsvs	r2, r8, #1712	; 0x6b0
     a9c:	0001006d 	andeq	r0, r1, sp, rrx
     aa0:	74697700 	strbtvc	r7, [r9], #-1792	; 0xfffff900
     aa4:	5f316863 	svcpl	0x00316863
     aa8:	79617267 	stmdbvc	r1!, {r0, r1, r2, r5, r6, r9, ip, sp, lr}^
     aac:	6d62782e 	stclvs	8, cr7, [r2, #-184]!	; 0xffffff48
     ab0:	00000100 	andeq	r0, r0, r0, lsl #2
     ab4:	63746977 	cmnvs	r4, #1949696	; 0x1dc000
     ab8:	6c5f3168 	ldfvse	f3, [pc], {104}	; 0x68
     abc:	74686769 	strbtvc	r6, [r8], #-1897	; 0xfffff897
     ac0:	6d62782e 	stclvs	8, cr7, [r2, #-184]!	; 0xffffff48
     ac4:	00000100 	andeq	r0, r0, r0, lsl #2
     ac8:	63746977 	cmnvs	r4, #1949696	; 0x1dc000
     acc:	625f3268 	subsvs	r3, pc, #104, 4	; 0x80000006
     ad0:	6b63616c 	blvs	18d9088 <startup-0x1e726f78>
     ad4:	6d62782e 	stclvs	8, cr7, [r2, #-184]!	; 0xffffff48
     ad8:	00000100 	andeq	r0, r0, r0, lsl #2
     adc:	63746977 	cmnvs	r4, #1949696	; 0x1dc000
     ae0:	675f3268 	ldrbvs	r3, [pc, -r8, ror #4]
     ae4:	2e796172 	mrccs	1, 3, r6, cr9, cr2, {3}
     ae8:	006d6278 	rsbeq	r6, sp, r8, ror r2
     aec:	77000001 	strvc	r0, [r0, -r1]
     af0:	68637469 	stmdavs	r3!, {r0, r3, r5, r6, sl, ip, sp, lr}^
     af4:	696c5f32 	stmdbvs	ip!, {r1, r4, r5, r8, r9, sl, fp, ip, lr}^
     af8:	2e746867 	cdpcs	8, 7, cr6, cr4, cr7, {3}
     afc:	006d6278 	rsbeq	r6, sp, r8, ror r2
     b00:	77000001 	strvc	r0, [r0, -r1]
     b04:	68637469 	stmdavs	r3!, {r0, r3, r5, r6, sl, ip, sp, lr}^
     b08:	6c625f33 	stclvs	15, cr5, [r2], #-204	; 0xffffff34
     b0c:	2e6b6361 	cdpcs	3, 6, cr6, cr11, cr1, {3}
     b10:	006d6278 	rsbeq	r6, sp, r8, ror r2
     b14:	77000001 	strvc	r0, [r0, -r1]
     b18:	68637469 	stmdavs	r3!, {r0, r3, r5, r6, sl, ip, sp, lr}^
     b1c:	72675f33 	rsbvc	r5, r7, #51, 30	; 0xcc
     b20:	782e7961 	stmdavc	lr!, {r0, r5, r6, r8, fp, ip, sp, lr}
     b24:	01006d62 	tsteq	r0, r2, ror #26
     b28:	69770000 	ldmdbvs	r7!, {}^	; <UNPREDICTABLE>
     b2c:	33686374 	cmncc	r8, #116, 6	; 0xd0000001
     b30:	67696c5f 			; <UNDEFINED> instruction: 0x67696c5f
     b34:	782e7468 	stmdavc	lr!, {r3, r5, r6, sl, ip, sp, lr}
     b38:	01006d62 	tsteq	r0, r2, ror #26
     b3c:	00000000 	andeq	r0, r0, r0
     b40:	235c0205 	cmpcs	ip, #1342177280	; 0x50000000
     b44:	2c032000 	stccs	0, cr2, [r3], {-0}
     b48:	672f3e01 	strvs	r3, [pc, -r1, lsl #28]!
     b4c:	3d672f3d 	stclcc	15, cr2, [r7, #-244]!	; 0xffffff0c
     b50:	2f3e672f 	svccs	0x003e672f
     b54:	672f3d67 	strvs	r3, [pc, -r7, ror #26]!
     b58:	3f672f3d 	svccc	0x00672f3d
     b5c:	2f3d672f 	svccs	0x003d672f
     b60:	672f3d67 	strvs	r3, [pc, -r7, ror #26]!
     b64:	143a023e 	ldrtne	r0, [sl], #-574	; 0xfffffdc2
     b68:	3e2f4b4c 	vnmulcc.f64	d4, d15, d12
     b6c:	5b59594b 	blpl	16570a0 <startup-0x1e9a8f60>
     b70:	94919191 	ldrls	r9, [r1], #401	; 0x191
     b74:	3d3d3d3e 	ldccc	13, cr3, [sp, #-248]!	; 0xffffff08
     b78:	1729023d 			; <UNDEFINED> instruction: 0x1729023d
     b7c:	933d3d59 	teqls	sp, #5696	; 0x1640
     b80:	5a5a4e4b 	bpl	16944b4 <startup-0x1e96bb4c>
     b84:	02004c67 	andeq	r4, r0, #26368	; 0x6700
     b88:	82060104 	andhi	r0, r6, #4, 2
     b8c:	913d8306 	teqls	sp, r6, lsl #6
     b90:	ae4b504d 	cdpge	0, 4, cr5, cr11, cr13, {2}
     b94:	3d4b3108 	stfcce	f3, [fp, #-32]	; 0xffffffe0
     b98:	3d4b1b50 	vstrcc	d17, [fp, #-320]	; 0xfffffec0
     b9c:	0010023f 	andseq	r0, r0, pc, lsr r2
     ba0:	01a50101 			; <UNDEFINED> instruction: 0x01a50101
     ba4:	00020000 	andeq	r0, r2, r0
     ba8:	00000157 	andeq	r0, r0, r7, asr r1
     bac:	0efb0102 	cdpeq	1, 15, cr0, cr11, cr2, {0}
     bb0:	0101000d 	tsteq	r1, sp
     bb4:	00000101 	andeq	r0, r0, r1, lsl #2
     bb8:	00000100 	andeq	r0, r0, r0, lsl #2
     bbc:	2f3a4301 	svccs	0x003a4301
     bc0:	2f706f6d 	svccs	0x00706f6d
     bc4:	6f4d2f63 	svcvs	0x004d2f63
     bc8:	62616c70 	rsbvs	r6, r1, #112, 24	; 0x7000
     bcc:	7461726f 	strbtvc	r7, [r1], #-623	; 0xfffffd91
     bd0:	656e6f69 	strbvs	r6, [lr, #-3945]!	; 0xfffff097
     bd4:	49442f72 	stmdbmi	r4, {r1, r4, r5, r6, r8, r9, sl, fp, sp}^
     bd8:	572d7350 			; <UNDEFINED> instruction: 0x572d7350
     bdc:	68637469 	stmdavs	r3!, {r0, r3, r5, r6, sl, ip, sp, lr}^
     be0:	0000432f 	andeq	r4, r0, pc, lsr #6
     be4:	6d616c66 	stclvs	12, cr6, [r1, #-408]!	; 0xfffffe68
     be8:	00632e65 	rsbeq	r2, r3, r5, ror #28
     bec:	73000001 	movwvc	r0, #1
     bf0:	74697270 	strbtvc	r7, [r9], #-624	; 0xfffffd90
     bf4:	00682e65 	rsbeq	r2, r8, r5, ror #28
     bf8:	69000001 	stmdbvs	r0, {r0}
     bfc:	6567616d 	strbvs	r6, [r7, #-365]!	; 0xfffffe93
     c00:	0100682e 	tsteq	r0, lr, lsr #16
     c04:	61670000 	cmnvs	r7, r0
     c08:	626f656d 	rsbvs	r6, pc, #457179136	; 0x1b400000
     c0c:	7463656a 	strbtvc	r6, [r3], #-1386	; 0xfffffa96
     c10:	0100682e 	tsteq	r0, lr, lsr #16
     c14:	6c660000 	stclvs	0, cr0, [r6], #-0
     c18:	31656d61 	cmncc	r5, r1, ror #26
     c1c:	616c625f 	cmnvs	ip, pc, asr r2
     c20:	782e6b63 	stmdavc	lr!, {r0, r1, r5, r6, r8, r9, fp, sp, lr}
     c24:	01006d62 	tsteq	r0, r2, ror #26
     c28:	6c660000 	stclvs	0, cr0, [r6], #-0
     c2c:	31656d61 	cmncc	r5, r1, ror #26
     c30:	6172675f 	cmnvs	r2, pc, asr r7
     c34:	62782e79 	rsbsvs	r2, r8, #1936	; 0x790
     c38:	0001006d 	andeq	r0, r1, sp, rrx
     c3c:	616c6600 	cmnvs	ip, r0, lsl #12
     c40:	5f31656d 	svcpl	0x0031656d
     c44:	6867696c 	stmdavs	r7!, {r2, r3, r5, r6, r8, fp, sp, lr}^
     c48:	62782e74 	rsbsvs	r2, r8, #116, 28	; 0x740
     c4c:	0001006d 	andeq	r0, r1, sp, rrx
     c50:	616c6600 	cmnvs	ip, r0, lsl #12
     c54:	5f32656d 	svcpl	0x0032656d
     c58:	63616c62 	cmnvs	r1, #25088	; 0x6200
     c5c:	62782e6b 	rsbsvs	r2, r8, #1712	; 0x6b0
     c60:	0001006d 	andeq	r0, r1, sp, rrx
     c64:	616c6600 	cmnvs	ip, r0, lsl #12
     c68:	5f32656d 	svcpl	0x0032656d
     c6c:	79617267 	stmdbvc	r1!, {r0, r1, r2, r5, r6, r9, ip, sp, lr}^
     c70:	6d62782e 	stclvs	8, cr7, [r2, #-184]!	; 0xffffff48
     c74:	00000100 	andeq	r0, r0, r0, lsl #2
     c78:	6d616c66 	stclvs	12, cr6, [r1, #-408]!	; 0xfffffe68
     c7c:	6c5f3265 	lfmvs	f3, 2, [pc], {101}	; 0x65
     c80:	74686769 	strbtvc	r6, [r8], #-1897	; 0xfffff897
     c84:	6d62782e 	stclvs	8, cr7, [r2, #-184]!	; 0xffffff48
     c88:	00000100 	andeq	r0, r0, r0, lsl #2
     c8c:	6d616c66 	stclvs	12, cr6, [r1, #-408]!	; 0xfffffe68
     c90:	625f3365 	subsvs	r3, pc, #-1811939327	; 0x94000001
     c94:	6b63616c 	blvs	18d924c <startup-0x1e726db4>
     c98:	6d62782e 	stclvs	8, cr7, [r2, #-184]!	; 0xffffff48
     c9c:	00000100 	andeq	r0, r0, r0, lsl #2
     ca0:	6d616c66 	stclvs	12, cr6, [r1, #-408]!	; 0xfffffe68
     ca4:	675f3365 	ldrbvs	r3, [pc, -r5, ror #6]
     ca8:	2e796172 	mrccs	1, 3, r6, cr9, cr2, {3}
     cac:	006d6278 	rsbeq	r6, sp, r8, ror r2
     cb0:	66000001 	strvs	r0, [r0], -r1
     cb4:	656d616c 	strbvs	r6, [sp, #-364]!	; 0xfffffe94
     cb8:	696c5f33 	stmdbvs	ip!, {r0, r1, r4, r5, r8, r9, sl, fp, ip, lr}^
     cbc:	2e746867 	cdpcs	8, 7, cr6, cr4, cr7, {3}
     cc0:	006d6278 	rsbeq	r6, sp, r8, ror r2
     cc4:	66000001 	strvs	r0, [r0], -r1
     cc8:	656d616c 	strbvs	r6, [sp, #-364]!	; 0xfffffe94
     ccc:	6c625f34 	stclvs	15, cr5, [r2], #-208	; 0xffffff30
     cd0:	2e6b6361 	cdpcs	3, 6, cr6, cr11, cr1, {3}
     cd4:	006d6278 	rsbeq	r6, sp, r8, ror r2
     cd8:	66000001 	strvs	r0, [r0], -r1
     cdc:	656d616c 	strbvs	r6, [sp, #-364]!	; 0xfffffe94
     ce0:	72675f34 	rsbvc	r5, r7, #52, 30	; 0xd0
     ce4:	782e7961 	stmdavc	lr!, {r0, r5, r6, r8, fp, ip, sp, lr}
     ce8:	01006d62 	tsteq	r0, r2, ror #26
     cec:	6c660000 	stclvs	0, cr0, [r6], #-0
     cf0:	34656d61 	strbtcc	r6, [r5], #-3425	; 0xfffff29f
     cf4:	67696c5f 			; <UNDEFINED> instruction: 0x67696c5f
     cf8:	782e7468 	stmdavc	lr!, {r3, r5, r6, sl, ip, sp, lr}
     cfc:	01006d62 	tsteq	r0, r2, ror #26
     d00:	00000000 	andeq	r0, r0, r0
     d04:	26cc0205 	strbcs	r0, [ip], r5, lsl #4
     d08:	31032000 	mrscc	r2, (UNDEF: 3)
     d0c:	672f3e01 	strvs	r3, [pc, -r1, lsl #28]!
     d10:	3d672f3d 	stclcc	15, cr2, [r7, #-244]!	; 0xffffff0c
     d14:	2f3e672f 	svccs	0x003e672f
     d18:	672f3d67 	strvs	r3, [pc, -r7, ror #26]!
     d1c:	3f672f3d 	svccc	0x00672f3d
     d20:	2f3d672f 	svccs	0x003d672f
     d24:	672f3d67 	strvs	r3, [pc, -r7, ror #26]!
     d28:	3d672f3e 	stclcc	15, cr2, [r7, #-248]!	; 0xffffff08
     d2c:	2f3d672f 	svccs	0x003d672f
     d30:	4d023e67 	stcmi	14, cr3, [r2, #-412]	; 0xfffffe64
     d34:	2f4b4c14 	svccs	0x004b4c14
     d38:	59594b3e 	ldmdbpl	r9, {r1, r2, r3, r4, r5, r8, r9, fp, lr}^
     d3c:	9191915a 	orrsls	r9, r1, sl, asr r1
     d40:	3d3d3e93 	ldccc	14, cr3, [sp, #-588]!	; 0xfffffdb4
     d44:	2f023d3d 	svccs	0x00023d3d
     d48:	31010100 	mrscc	r0, (UNDEF: 17)
     d4c:	02000002 	andeq	r0, r0, #2
     d50:	0001ba00 	andeq	fp, r1, r0, lsl #20
     d54:	fb010200 	blx	4155e <startup-0x1ffbeaa2>
     d58:	01000d0e 	tsteq	r0, lr, lsl #26
     d5c:	00010101 	andeq	r0, r1, r1, lsl #2
     d60:	00010000 	andeq	r0, r1, r0
     d64:	3a430100 	bcc	10c116c <startup-0x1ef3ee94>
     d68:	706f6d2f 	rsbvc	r6, pc, pc, lsr #26
     d6c:	4d2f632f 	stcmi	3, cr6, [pc, #-188]!	; cb8 <startup-0x1ffff348>
     d70:	616c706f 	cmnvs	ip, pc, rrx
     d74:	61726f62 	cmnvs	r2, r2, ror #30
     d78:	6e6f6974 			; <UNDEFINED> instruction: 0x6e6f6974
     d7c:	442f7265 	strtmi	r7, [pc], #-613	; d84 <startup-0x1ffff27c>
     d80:	2d735049 	ldclcs	0, cr5, [r3, #-292]!	; 0xfffffedc
     d84:	63746957 	cmnvs	r4, #1425408	; 0x15c000
     d88:	00432f68 	subeq	r2, r3, r8, ror #30
     d8c:	6f6f6200 	svcvs	0x006f6200
     d90:	00632e6d 	rsbeq	r2, r3, sp, ror #28
     d94:	73000001 	movwvc	r0, #1
     d98:	74697270 	strbtvc	r7, [r9], #-624	; 0xfffffd90
     d9c:	00682e65 	rsbeq	r2, r8, r5, ror #28
     da0:	69000001 	stmdbvs	r0, {r0}
     da4:	6567616d 	strbvs	r6, [r7, #-365]!	; 0xfffffe93
     da8:	0100682e 	tsteq	r0, lr, lsr #16
     dac:	61670000 	cmnvs	r7, r0
     db0:	626f656d 	rsbvs	r6, pc, #457179136	; 0x1b400000
     db4:	7463656a 	strbtvc	r6, [r3], #-1386	; 0xfffffa96
     db8:	0100682e 	tsteq	r0, lr, lsr #16
     dbc:	6f620000 	svcvs	0x00620000
     dc0:	5f316d6f 	svcpl	0x00316d6f
     dc4:	63616c62 	cmnvs	r1, #25088	; 0x6200
     dc8:	62782e6b 	rsbsvs	r2, r8, #1712	; 0x6b0
     dcc:	0001006d 	andeq	r0, r1, sp, rrx
     dd0:	6f6f6200 	svcvs	0x006f6200
     dd4:	675f316d 	ldrbvs	r3, [pc, -sp, ror #2]
     dd8:	2e796172 	mrccs	1, 3, r6, cr9, cr2, {3}
     ddc:	006d6278 	rsbeq	r6, sp, r8, ror r2
     de0:	62000001 	andvs	r0, r0, #1
     de4:	316d6f6f 	cmncc	sp, pc, ror #30
     de8:	67696c5f 			; <UNDEFINED> instruction: 0x67696c5f
     dec:	782e7468 	stmdavc	lr!, {r3, r5, r6, sl, ip, sp, lr}
     df0:	01006d62 	tsteq	r0, r2, ror #26
     df4:	6f620000 	svcvs	0x00620000
     df8:	5f326d6f 	svcpl	0x00326d6f
     dfc:	63616c62 	cmnvs	r1, #25088	; 0x6200
     e00:	62782e6b 	rsbsvs	r2, r8, #1712	; 0x6b0
     e04:	0001006d 	andeq	r0, r1, sp, rrx
     e08:	6f6f6200 	svcvs	0x006f6200
     e0c:	675f326d 	ldrbvs	r3, [pc, -sp, ror #4]
     e10:	2e796172 	mrccs	1, 3, r6, cr9, cr2, {3}
     e14:	006d6278 	rsbeq	r6, sp, r8, ror r2
     e18:	62000001 	andvs	r0, r0, #1
     e1c:	326d6f6f 	rsbcc	r6, sp, #444	; 0x1bc
     e20:	67696c5f 			; <UNDEFINED> instruction: 0x67696c5f
     e24:	782e7468 	stmdavc	lr!, {r3, r5, r6, sl, ip, sp, lr}
     e28:	01006d62 	tsteq	r0, r2, ror #26
     e2c:	6f620000 	svcvs	0x00620000
     e30:	5f336d6f 	svcpl	0x00336d6f
     e34:	63616c62 	cmnvs	r1, #25088	; 0x6200
     e38:	62782e6b 	rsbsvs	r2, r8, #1712	; 0x6b0
     e3c:	0001006d 	andeq	r0, r1, sp, rrx
     e40:	6f6f6200 	svcvs	0x006f6200
     e44:	675f336d 	ldrbvs	r3, [pc, -sp, ror #6]
     e48:	2e796172 	mrccs	1, 3, r6, cr9, cr2, {3}
     e4c:	006d6278 	rsbeq	r6, sp, r8, ror r2
     e50:	62000001 	andvs	r0, r0, #1
     e54:	336d6f6f 	cmncc	sp, #444	; 0x1bc
     e58:	67696c5f 			; <UNDEFINED> instruction: 0x67696c5f
     e5c:	782e7468 	stmdavc	lr!, {r3, r5, r6, sl, ip, sp, lr}
     e60:	01006d62 	tsteq	r0, r2, ror #26
     e64:	6f620000 	svcvs	0x00620000
     e68:	5f346d6f 	svcpl	0x00346d6f
     e6c:	63616c62 	cmnvs	r1, #25088	; 0x6200
     e70:	62782e6b 	rsbsvs	r2, r8, #1712	; 0x6b0
     e74:	0001006d 	andeq	r0, r1, sp, rrx
     e78:	6f6f6200 	svcvs	0x006f6200
     e7c:	675f346d 	ldrbvs	r3, [pc, -sp, ror #8]
     e80:	2e796172 	mrccs	1, 3, r6, cr9, cr2, {3}
     e84:	006d6278 	rsbeq	r6, sp, r8, ror r2
     e88:	62000001 	andvs	r0, r0, #1
     e8c:	346d6f6f 	strbtcc	r6, [sp], #-3951	; 0xfffff091
     e90:	67696c5f 			; <UNDEFINED> instruction: 0x67696c5f
     e94:	782e7468 	stmdavc	lr!, {r3, r5, r6, sl, ip, sp, lr}
     e98:	01006d62 	tsteq	r0, r2, ror #26
     e9c:	6f620000 	svcvs	0x00620000
     ea0:	5f356d6f 	svcpl	0x00356d6f
     ea4:	63616c62 	cmnvs	r1, #25088	; 0x6200
     ea8:	62782e6b 	rsbsvs	r2, r8, #1712	; 0x6b0
     eac:	0001006d 	andeq	r0, r1, sp, rrx
     eb0:	6f6f6200 	svcvs	0x006f6200
     eb4:	675f356d 	ldrbvs	r3, [pc, -sp, ror #10]
     eb8:	2e796172 	mrccs	1, 3, r6, cr9, cr2, {3}
     ebc:	006d6278 	rsbeq	r6, sp, r8, ror r2
     ec0:	62000001 	andvs	r0, r0, #1
     ec4:	356d6f6f 	strbcc	r6, [sp, #-3951]!	; 0xfffff091
     ec8:	67696c5f 			; <UNDEFINED> instruction: 0x67696c5f
     ecc:	782e7468 	stmdavc	lr!, {r3, r5, r6, sl, ip, sp, lr}
     ed0:	01006d62 	tsteq	r0, r2, ror #26
     ed4:	6f620000 	svcvs	0x00620000
     ed8:	5f366d6f 	svcpl	0x00366d6f
     edc:	63616c62 	cmnvs	r1, #25088	; 0x6200
     ee0:	62782e6b 	rsbsvs	r2, r8, #1712	; 0x6b0
     ee4:	0001006d 	andeq	r0, r1, sp, rrx
     ee8:	6f6f6200 	svcvs	0x006f6200
     eec:	675f366d 	ldrbvs	r3, [pc, -sp, ror #12]
     ef0:	2e796172 	mrccs	1, 3, r6, cr9, cr2, {3}
     ef4:	006d6278 	rsbeq	r6, sp, r8, ror r2
     ef8:	62000001 	andvs	r0, r0, #1
     efc:	366d6f6f 	strbtcc	r6, [sp], -pc, ror #30
     f00:	67696c5f 			; <UNDEFINED> instruction: 0x67696c5f
     f04:	782e7468 	stmdavc	lr!, {r3, r5, r6, sl, ip, sp, lr}
     f08:	01006d62 	tsteq	r0, r2, ror #26
     f0c:	00000000 	andeq	r0, r0, r0
     f10:	29780205 	ldmdbcs	r8!, {r0, r2, r9}^
     f14:	cf032000 	svcgt	0x00032000
     f18:	2f3e0100 	svccs	0x003e0100
     f1c:	672f3d67 	strvs	r3, [pc, -r7, ror #26]!
     f20:	3e672f3d 	mcrcc	15, 3, r2, cr7, cr13, {1}
     f24:	2f3d672f 	svccs	0x003d672f
     f28:	672f3d67 	strvs	r3, [pc, -r7, ror #26]!
     f2c:	3d672f3f 	stclcc	15, cr2, [r7, #-252]!	; 0xffffff04
     f30:	2f3d672f 	svccs	0x003d672f
     f34:	672f3e67 	strvs	r3, [pc, -r7, ror #28]!
     f38:	3d672f3d 	stclcc	15, cr2, [r7, #-244]!	; 0xffffff0c
     f3c:	2f3e672f 	svccs	0x003e672f
     f40:	672f3d67 	strvs	r3, [pc, -r7, ror #26]!
     f44:	3e672f3d 	mcrcc	15, 3, r2, cr7, cr13, {1}
     f48:	2f3d672f 	svccs	0x003d672f
     f4c:	672f3d67 	strvs	r3, [pc, -r7, ror #26]!
     f50:	1471023d 	ldrbtne	r0, [r1], #-573	; 0xfffffdc3
     f54:	3e2f594c 	vnmulcc.f16	s10, s30, s24	; <UNPREDICTABLE>
     f58:	5959594b 	ldmdbpl	r9, {r0, r1, r3, r6, r8, fp, ip, lr}^
     f5c:	59595959 	ldmdbpl	r9, {r0, r3, r4, r6, r8, fp, ip, lr}^
     f60:	75595959 	ldrbvc	r5, [r9, #-2393]	; 0xfffff6a7
     f64:	91767575 	cmnls	r6, r5, ror r5
     f68:	91919191 			; <UNDEFINED> instruction: 0x91919191
     f6c:	91919191 			; <UNDEFINED> instruction: 0x91919191
     f70:	91919191 			; <UNDEFINED> instruction: 0x91919191
     f74:	3d3e9391 	ldccc	3, cr9, [lr, #-580]!	; 0xfffffdbc
     f78:	023d3d3d 	eorseq	r3, sp, #3904	; 0xf40
     f7c:	01010066 	tsteq	r1, r6, rrx
     f80:	0000034e 	andeq	r0, r0, lr, asr #6
     f84:	007c0002 	rsbseq	r0, ip, r2
     f88:	01020000 	mrseq	r0, (UNDEF: 2)
     f8c:	000d0efb 	strdeq	r0, [sp], -fp
     f90:	01010101 	tsteq	r1, r1, lsl #2
     f94:	01000000 	mrseq	r0, (UNDEF: 0)
     f98:	43010000 	movwmi	r0, #4096	; 0x1000
     f9c:	6f6d2f3a 	svcvs	0x006d2f3a
     fa0:	2f632f70 	svccs	0x00632f70
     fa4:	6c706f4d 	ldclvs	15, cr6, [r0], #-308	; 0xfffffecc
     fa8:	726f6261 	rsbvc	r6, pc, #268435462	; 0x10000006
     fac:	6f697461 	svcvs	0x00697461
     fb0:	2f72656e 	svccs	0x0072656e
     fb4:	73504944 	cmpvc	r0, #68, 18	; 0x110000
     fb8:	7469572d 	strbtvc	r5, [r9], #-1837	; 0xfffff8d3
     fbc:	432f6863 			; <UNDEFINED> instruction: 0x432f6863
     fc0:	72670000 	rsbvc	r0, r7, #0
     fc4:	69687061 	stmdbvs	r8!, {r0, r5, r6, ip, sp, lr}^
     fc8:	632e7363 			; <UNDEFINED> instruction: 0x632e7363
     fcc:	00000100 	andeq	r0, r0, r0, lsl #2
     fd0:	69727073 	ldmdbvs	r2!, {r0, r1, r4, r5, r6, ip, sp, lr}^
     fd4:	682e6574 	stmdavs	lr!, {r2, r4, r5, r6, r8, sl, sp, lr}
     fd8:	00000100 	andeq	r0, r0, r0, lsl #2
     fdc:	67616d69 	strbvs	r6, [r1, -r9, ror #26]!
     fe0:	00682e65 	rsbeq	r2, r8, r5, ror #28
     fe4:	67000001 	strvs	r0, [r0, -r1]
     fe8:	6f656d61 	svcvs	0x00656d61
     fec:	63656a62 	cmnvs	r5, #401408	; 0x62000
     ff0:	00682e74 	rsbeq	r2, r8, r4, ror lr
     ff4:	67000001 	strvs	r0, [r0, -r1]
     ff8:	68706172 	ldmdavs	r0!, {r1, r4, r5, r6, r8, sp, lr}^
     ffc:	2e736369 	cdpcs	3, 7, cr6, cr3, cr9, {3}
    1000:	00010068 	andeq	r0, r1, r8, rrx
    1004:	05000000 	streq	r0, [r0, #-0]
    1008:	002ea402 	eoreq	sl, lr, r2, lsl #8
    100c:	3d301520 	cfldr32cc	mvfx1, [r0, #-128]!	; 0xffffff80
    1010:	003d3d3d 	eorseq	r3, sp, sp, lsr sp
    1014:	06010402 	streq	r0, [r1], -r2, lsl #8
    1018:	3d670620 	stclcc	6, cr0, [r7, #-128]!	; 0xffffff80
    101c:	3d3d30a0 	ldccc	0, cr3, [sp, #-640]!	; 0xfffffd80
    1020:	02003d3d 	andeq	r3, r0, #3904	; 0xf40
    1024:	20060104 	andcs	r0, r6, r4, lsl #2
    1028:	a03d6706 	eorsge	r6, sp, r6, lsl #14
    102c:	2f2f214b 	svccs	0x002f214b
    1030:	4c5e2a2f 	mrrcmi	10, 2, r2, lr, cr15
    1034:	5b57214f 	blpl	15c9578 <startup-0x1ea36a88>
    1038:	4c4a0903 	mcrrmi	9, 0, r0, sl, cr3	; <UNPREDICTABLE>
    103c:	03040200 	movweq	r0, #16896	; 0x4200
    1040:	0402003d 	streq	r0, [r2], #-61	; 0xffffffc3
    1044:	02005703 	andeq	r5, r0, #786432	; 0xc0000
    1048:	3c060104 	stfccs	f0, [r6], {4}
    104c:	2f674c06 	svccs	0x00674c06
    1050:	4b2f674b 	blmi	bdad84 <startup-0x1f42527c>
    1054:	68a14b4b 	stmiavs	r1!, {r0, r1, r3, r6, r8, r9, fp, lr}
    1058:	59839159 	stmibpl	r3, {r0, r3, r4, r6, r8, ip, pc}
    105c:	d7596876 			; <UNDEFINED> instruction: 0xd7596876
    1060:	67675983 	strbvs	r5, [r7, -r3, lsl #19]!
    1064:	03741203 	cmneq	r4, #805306368	; 0x30000000
    1068:	1203206e 	andne	r2, r3, #110	; 0x6e
    106c:	2070034a 	rsbscs	r0, r0, sl, asr #6
    1070:	3d223d3d 	stccc	13, cr3, [r2, #-244]!	; 0xffffff0c
    1074:	3d3d223d 	lfmcc	f2, 4, [sp, #-244]!	; 0xffffff0c
    1078:	223d3d22 	eorscs	r3, sp, #2176	; 0x880
    107c:	3d3d3e4c 	ldccc	14, cr3, [sp, #-304]!	; 0xfffffed0
    1080:	3d313d3d 	ldccc	13, cr3, [r1, #-244]!	; 0xffffff0c
    1084:	313d752f 	teqcc	sp, pc, lsr #10
    1088:	274a7903 	strbcs	r7, [sl, -r3, lsl #18]
    108c:	67bc3d23 	ldrvs	r3, [ip, r3, lsr #26]!
    1090:	3d3d3d3d 	ldccc	13, cr3, [sp, #-244]!	; 0xffffff0c
    1094:	2f3d2f59 	svccs	0x003d2f59
    1098:	4b3e3d59 	blmi	f90604 <startup-0x1f06f9fc>
    109c:	3d4b303d 	stclcc	0, cr3, [fp, #-244]	; 0xffffff0c
    10a0:	67bc3d31 			; <UNDEFINED> instruction: 0x67bc3d31
    10a4:	915a5959 	cmpls	sl, r9, asr r9
    10a8:	3d2f594b 			; <UNDEFINED> instruction: 0x3d2f594b
    10ac:	3d593e2f 	ldclcc	14, cr3, [r9, #-188]	; 0xffffff44
    10b0:	313d5930 	teqcc	sp, r0, lsr r9
    10b4:	673d3d3d 			; <UNDEFINED> instruction: 0x673d3d3d
    10b8:	3d593d91 	ldclcc	13, cr3, [r9, #-580]	; 0xfffffdbc
    10bc:	914b833d 	cmpls	fp, sp, lsr r3
    10c0:	3d3d593d 			; <UNDEFINED> instruction: 0x3d3d593d
    10c4:	3d2f4c83 	stccc	12, cr4, [pc, #-524]!	; ec0 <startup-0x1ffff140>
    10c8:	3d3d3d3e 	ldccc	13, cr3, [sp, #-248]!	; 0xffffff08
    10cc:	3e3d3d3e 	mrccc	13, 1, r3, cr13, cr14, {1}
    10d0:	4b4b4b4b 	blmi	12d3e04 <startup-0x1ed2c1fc>
    10d4:	3e3d3d4b 	cdpcc	13, 3, cr3, cr13, cr11, {2}
    10d8:	004c9f4b 	subeq	r9, ip, fp, asr #30
    10dc:	4b030402 	blmi	c20ec <startup-0x1ff3df14>
    10e0:	03040200 	movweq	r0, #16896	; 0x4200
    10e4:	04020049 	streq	r0, [r2], #-73	; 0xffffffb7
    10e8:	00580601 	subseq	r0, r8, r1, lsl #12
    10ec:	06020402 	streq	r0, [r2], -r2, lsl #8
    10f0:	04020046 	streq	r0, [r2], #-70	; 0xffffffba
    10f4:	06580601 	ldrbeq	r0, [r8], -r1, lsl #12
    10f8:	2f764d52 	svccs	0x00764d52
    10fc:	01040200 	mrseq	r0, R12_usr
    1100:	02004a06 	andeq	r4, r0, #24576	; 0x6000
    1104:	004a0204 	subeq	r0, sl, r4, lsl #4
    1108:	4a030402 	bmi	c2118 <startup-0x1ff3dee8>
    110c:	13084c06 	movwne	r4, #35846	; 0x8c06
    1110:	bc3e3d3d 	ldclt	13, cr3, [lr], #-244	; 0xffffff0c
    1114:	3d76763d 	ldclcc	6, cr7, [r6, #-244]!	; 0xffffff0c
    1118:	23d71fd9 	bicscs	r1, r7, #868	; 0x364
    111c:	d71fd93d 			; <UNDEFINED> instruction: 0xd71fd93d
    1120:	1fd93d23 	svcne	0x00d93d23
    1124:	2e6103d7 	mcrcs	3, 3, r0, cr1, cr7, {6}
    1128:	af202303 	svcge	0x00202303
    112c:	04020069 	streq	r0, [r2], #-105	; 0xffffff97
    1130:	004a0601 	subeq	r0, sl, r1, lsl #12
    1134:	4a020402 	bmi	82144 <startup-0x1ff7debc>
    1138:	03040200 	movweq	r0, #16896	; 0x4200
    113c:	754b064a 	strbvc	r0, [fp, #-1610]	; 0xfffff9b6
    1140:	59591308 	ldmdbpl	r9, {r3, r8, r9, ip}^
    1144:	59595959 	ldmdbpl	r9, {r0, r3, r4, r6, r8, fp, ip, lr}^
    1148:	763d5b59 			; <UNDEFINED> instruction: 0x763d5b59
    114c:	4b4c4b3d 	blmi	1313e48 <startup-0x1ecec1b8>
    1150:	9fd8c93e 	svcls	0x00d8c93e
    1154:	a0ae3dca 	adcge	r3, lr, sl, asr #27
    1158:	03ac5e03 			; <UNDEFINED> instruction: 0x03ac5e03
    115c:	4c842023 	stcmi	0, cr2, [r4], {35}	; 0x23
    1160:	0200592f 	andeq	r5, r0, #770048	; 0xbc000
    1164:	58060104 	stmdapl	r6, {r2, r8}
    1168:	02040200 	andeq	r0, r4, #0, 4
    116c:	0402002e 	streq	r0, [r2], #-46	; 0xffffffd2
    1170:	02002004 	andeq	r2, r0, #4
    1174:	3d060404 	cfstrscc	mvf0, [r6, #-16]
    1178:	0075d759 	rsbseq	sp, r5, r9, asr r7
    117c:	59030402 	stmdbpl	r3, {r1, sl}
    1180:	03040200 	movweq	r0, #16896	; 0x4200
    1184:	040200ab 	streq	r0, [r2], #-171	; 0xffffff55
    1188:	009e0601 	addseq	r0, lr, r1, lsl #12
    118c:	06020402 	streq	r0, [r2], -r2, lsl #8
    1190:	04020055 	streq	r0, [r2], #-85	; 0xffffffab
    1194:	00740601 	rsbseq	r0, r4, r1, lsl #12
    1198:	06020402 	streq	r0, [r2], -r2, lsl #8
    119c:	04020056 	streq	r0, [r2], #-86	; 0xffffffaa
    11a0:	06740601 	ldrbteq	r0, [r4], -r1, lsl #12
    11a4:	52580a03 	subspl	r0, r8, #12288	; 0x3000
    11a8:	595a5976 	ldmdbpl	sl, {r1, r2, r4, r5, r6, r8, fp, ip, lr}^
    11ac:	3dbb3d3d 	ldccc	13, cr3, [fp, #244]!	; 0xf4
    11b0:	083de691 	ldmdaeq	sp!, {r0, r4, r7, r9, sl, sp, lr, pc}
    11b4:	04020067 	streq	r0, [r2], #-103	; 0xffffff99
    11b8:	087a0302 	ldmdaeq	sl!, {r1, r8, r9}^
    11bc:	04020066 	streq	r0, [r2], #-102	; 0xffffff9a
    11c0:	003c0601 	eorseq	r0, ip, r1, lsl #12
    11c4:	06020402 	streq	r0, [r2], -r2, lsl #8
    11c8:	0402003a 	streq	r0, [r2], #-58	; 0xffffffc6
    11cc:	003c0601 	eorseq	r0, ip, r1, lsl #12
    11d0:	06020402 	streq	r0, [r2], -r2, lsl #8
    11d4:	04020049 	streq	r0, [r2], #-73	; 0xffffffb7
    11d8:	063c0601 	ldrteq	r0, [ip], -r1, lsl #12
    11dc:	4c580e03 	mrrcmi	14, 0, r0, r8, cr3
    11e0:	02003d77 	andeq	r3, r0, #7616	; 0x1dc0
    11e4:	003d0304 	eorseq	r0, sp, r4, lsl #6
    11e8:	65030402 	strvs	r0, [r3, #-1026]	; 0xfffffbfe
    11ec:	01040200 	mrseq	r0, R12_usr
    11f0:	02003c06 	andeq	r3, r0, #1536	; 0x600
    11f4:	65060204 	strvs	r0, [r6, #-516]	; 0xfffffdfc
    11f8:	01040200 	mrseq	r0, R12_usr
    11fc:	6b063c06 	blvs	19021c <startup-0x1fe6fde4>
    1200:	003d774c 	eorseq	r7, sp, ip, asr #14
    1204:	3d030402 	cfstrscc	mvf0, [r3, #-8]
    1208:	03040200 	movweq	r0, #16896	; 0x4200
    120c:	04020065 	streq	r0, [r2], #-101	; 0xffffff9b
    1210:	003c0601 	eorseq	r0, ip, r1, lsl #12
    1214:	06020402 	streq	r0, [r2], -r2, lsl #8
    1218:	04020065 	streq	r0, [r2], #-101	; 0xffffff9b
    121c:	063c0601 	ldrteq	r0, [ip], -r1, lsl #12
    1220:	2f3d4d6b 	svccs	0x003d4d6b
    1224:	30302f2f 	eorscc	r2, r0, pc, lsr #30
    1228:	04020069 	streq	r0, [r2], #-105	; 0xffffff97
    122c:	02003001 	andeq	r3, r0, #1
    1230:	002f0104 	eoreq	r0, pc, r4, lsl #2
    1234:	67010402 	strvs	r0, [r1, -r2, lsl #8]
    1238:	01040200 	mrseq	r0, R12_usr
    123c:	040200c9 	streq	r0, [r2], #-201	; 0xffffff37
    1240:	00130801 	andseq	r0, r3, r1, lsl #16
    1244:	4b010402 	blmi	42254 <startup-0x1ffbddac>
    1248:	01040200 	mrseq	r0, R12_usr
    124c:	0402002f 	streq	r0, [r2], #-47	; 0xffffffd1
    1250:	02006801 	andeq	r6, r0, #65536	; 0x10000
    1254:	00c90104 	sbceq	r0, r9, r4, lsl #2
    1258:	08010402 	stmdaeq	r1, {r1, sl}
    125c:	04020013 	streq	r0, [r2], #-19	; 0xffffffed
    1260:	02009201 	andeq	r9, r0, #268435456	; 0x10000000
    1264:	004b0104 	subeq	r0, fp, r4, lsl #2
    1268:	3e010402 	cdpcc	4, 0, cr0, cr1, cr2, {0}
    126c:	01040200 	mrseq	r0, R12_usr
    1270:	0402002f 	streq	r0, [r2], #-47	; 0xffffffd1
    1274:	02006701 	andeq	r6, r0, #262144	; 0x40000
    1278:	13080104 	movwne	r0, #33028	; 0x8104
    127c:	01040200 	mrseq	r0, R12_usr
    1280:	0402004c 	streq	r0, [r2], #-76	; 0xffffffb4
    1284:	3c6c0301 	stclcc	3, cr0, [ip], #-4
    1288:	3e3c1903 	vaddcc.f16	s2, s24, s6	; <UNPREDICTABLE>
    128c:	03040200 	movweq	r0, #16896	; 0x4200
    1290:	0402003d 	streq	r0, [r2], #-61	; 0xffffffc3
    1294:	00910803 	addseq	r0, r1, r3, lsl #16
    1298:	08030402 	stmdaeq	r3, {r1, sl}
    129c:	04020091 	streq	r0, [r2], #-145	; 0xffffff6f
    12a0:	00910803 	addseq	r0, r1, r3, lsl #16
    12a4:	08030402 	stmdaeq	r3, {r1, sl}
    12a8:	04020046 	streq	r0, [r2], #-70	; 0xffffffba
    12ac:	063c0601 	ldrteq	r0, [ip], -r1, lsl #12
    12b0:	4b3e0850 	blmi	f833f8 <startup-0x1f07cc08>
    12b4:	0821083d 	stmdaeq	r1!, {r0, r2, r3, r4, r5, fp}
    12b8:	4d210821 	stcmi	8, cr0, [r1, #-132]!	; 0xffffff7c
    12bc:	4b21304b 	blmi	84d3f0 <startup-0x1f7b2c10>
    12c0:	4b3e4b3e 	blmi	f93fc0 <startup-0x1f06c040>
    12c4:	75034b3e 	strvc	r4, [r3, #-2878]	; 0xfffff4c2
    12c8:	580e033c 	stmdapl	lr, {r2, r3, r4, r5, r8, r9}
    12cc:	000b0230 	andeq	r0, fp, r0, lsr r2
    12d0:	00720101 	rsbseq	r0, r2, r1, lsl #2
    12d4:	00020000 	andeq	r0, r2, r0
    12d8:	0000005b 	andeq	r0, r0, fp, asr r0
    12dc:	0efb0102 	cdpeq	1, 15, cr0, cr11, cr2, {0}
    12e0:	0101000d 	tsteq	r1, sp
    12e4:	00000101 	andeq	r0, r0, r1, lsl #2
    12e8:	00000100 	andeq	r0, r0, r0, lsl #2
    12ec:	2f3a4301 	svccs	0x003a4301
    12f0:	2f706f6d 	svccs	0x00706f6d
    12f4:	6f4d2f63 	svcvs	0x004d2f63
    12f8:	62616c70 	rsbvs	r6, r1, #112, 24	; 0x7000
    12fc:	7461726f 	strbtvc	r7, [r1], #-623	; 0xfffffd91
    1300:	656e6f69 	strbvs	r6, [lr, #-3945]!	; 0xfffff097
    1304:	49442f72 	stmdbmi	r4, {r1, r4, r5, r6, r8, r9, sl, fp, sp}^
    1308:	572d7350 			; <UNDEFINED> instruction: 0x572d7350
    130c:	68637469 	stmdavs	r3!, {r0, r3, r5, r6, sl, ip, sp, lr}^
    1310:	0000432f 	andeq	r4, r0, pc, lsr #6
    1314:	67616d69 	strbvs	r6, [r1, -r9, ror #26]!
    1318:	00632e65 	rsbeq	r2, r3, r5, ror #28
    131c:	73000001 	movwvc	r0, #1
    1320:	74697270 	strbtvc	r7, [r9], #-624	; 0xfffffd90
    1324:	00682e65 	rsbeq	r2, r8, r5, ror #28
    1328:	69000001 	stmdbvs	r0, {r0}
    132c:	6567616d 	strbvs	r6, [r7, #-365]!	; 0xfffffe93
    1330:	0100682e 	tsteq	r0, lr, lsr #16
    1334:	00000000 	andeq	r0, r0, r0
    1338:	3ce80205 	sfmcc	f0, 2, [r8], #20
    133c:	75142000 	ldrvc	r2, [r4, #-0]
    1340:	023d3d3d 	eorseq	r3, sp, #3904	; 0xf40
    1344:	01010004 	tsteq	r1, r4
    1348:	00000068 	andeq	r0, r0, r8, rrx
    134c:	00510002 	subseq	r0, r1, r2
    1350:	01020000 	mrseq	r0, (UNDEF: 2)
    1354:	000d0efb 	strdeq	r0, [sp], -fp
    1358:	01010101 	tsteq	r1, r1, lsl #2
    135c:	01000000 	mrseq	r0, (UNDEF: 0)
    1360:	43010000 	movwmi	r0, #4096	; 0x1000
    1364:	6f6d2f3a 	svcvs	0x006d2f3a
    1368:	2f632f70 	svccs	0x00632f70
    136c:	6c706f4d 	ldclvs	15, cr6, [r0], #-308	; 0xfffffecc
    1370:	726f6261 	rsbvc	r6, pc, #268435462	; 0x10000006
    1374:	6f697461 	svcvs	0x00697461
    1378:	2f72656e 	svccs	0x0072656e
    137c:	73504944 	cmpvc	r0, #68, 18	; 0x110000
    1380:	7469572d 	strbtvc	r5, [r9], #-1837	; 0xfffff8d3
    1384:	432f6863 			; <UNDEFINED> instruction: 0x432f6863
    1388:	70730000 	rsbsvc	r0, r3, r0
    138c:	65746972 	ldrbvs	r6, [r4, #-2418]!	; 0xfffff68e
    1390:	0100632e 	tsteq	r0, lr, lsr #6
    1394:	70730000 	rsbsvc	r0, r3, r0
    1398:	65746972 	ldrbvs	r6, [r4, #-2418]!	; 0xfffff68e
    139c:	0100682e 	tsteq	r0, lr, lsr #16
    13a0:	00000000 	andeq	r0, r0, r0
    13a4:	3d100205 	lfmcc	f0, 4, [r0, #-20]	; 0xffffffec
    13a8:	75152000 	ldrvc	r2, [r5, #-0]
    13ac:	023d3d3d 	eorseq	r3, sp, #3904	; 0xf40
    13b0:	01010004 	tsteq	r1, r4
    13b4:	0000006c 	andeq	r0, r0, ip, rrx
    13b8:	004d0002 	subeq	r0, sp, r2
    13bc:	01020000 	mrseq	r0, (UNDEF: 2)
    13c0:	000d0efb 	strdeq	r0, [sp], -fp
    13c4:	01010101 	tsteq	r1, r1, lsl #2
    13c8:	01000000 	mrseq	r0, (UNDEF: 0)
    13cc:	43010000 	movwmi	r0, #4096	; 0x1000
    13d0:	6f6d2f3a 	svcvs	0x006d2f3a
    13d4:	2f632f70 	svccs	0x00632f70
    13d8:	6c706f4d 	ldclvs	15, cr6, [r0], #-308	; 0xfffffecc
    13dc:	726f6261 	rsbvc	r6, pc, #268435462	; 0x10000006
    13e0:	6f697461 	svcvs	0x00697461
    13e4:	2f72656e 	svccs	0x0072656e
    13e8:	73504944 	cmpvc	r0, #68, 18	; 0x110000
    13ec:	7469572d 	strbtvc	r5, [r9], #-1837	; 0xfffff8d3
    13f0:	432f6863 			; <UNDEFINED> instruction: 0x432f6863
    13f4:	70670000 	rsbvc	r0, r7, r0
    13f8:	632e6f69 			; <UNDEFINED> instruction: 0x632e6f69
    13fc:	00000100 	andeq	r0, r0, r0, lsl #2
    1400:	6f697067 	svcvs	0x00697067
    1404:	0100682e 	tsteq	r0, lr, lsr #16
    1408:	00000000 	andeq	r0, r0, r0
    140c:	3d380205 	lfmcc	f0, 4, [r8, #-20]!	; 0xffffffec
    1410:	2f152000 	svccs	0x00152000
    1414:	592f763d 	stmdbpl	pc!, {r0, r2, r3, r4, r5, r9, sl, ip, sp, lr}	; <UNPREDICTABLE>
    1418:	674b693d 	smlaldxvs	r6, fp, sp, r9
    141c:	02223091 	eoreq	r3, r2, #145	; 0x91
    1420:	01010004 	tsteq	r1, r4
    1424:	0000015a 	andeq	r0, r0, sl, asr r1
    1428:	00810002 	addeq	r0, r1, r2
    142c:	01020000 	mrseq	r0, (UNDEF: 2)
    1430:	000d0efb 	strdeq	r0, [sp], -fp
    1434:	01010101 	tsteq	r1, r1, lsl #2
    1438:	01000000 	mrseq	r0, (UNDEF: 0)
    143c:	43010000 	movwmi	r0, #4096	; 0x1000
    1440:	6f6d2f3a 	svcvs	0x006d2f3a
    1444:	2f632f70 	svccs	0x00632f70
    1448:	6c706f4d 	ldclvs	15, cr6, [r0], #-308	; 0xfffffecc
    144c:	726f6261 	rsbvc	r6, pc, #268435462	; 0x10000006
    1450:	6f697461 	svcvs	0x00697461
    1454:	2f72656e 	svccs	0x0072656e
    1458:	73504944 	cmpvc	r0, #68, 18	; 0x110000
    145c:	7469572d 	strbtvc	r5, [r9], #-1837	; 0xfffff8d3
    1460:	432f6863 			; <UNDEFINED> instruction: 0x432f6863
    1464:	73610000 	cmnvc	r1, #0
    1468:	5f696963 	svcpl	0x00696963
    146c:	70736964 	rsbsvc	r6, r3, r4, ror #18
    1470:	2e79616c 	rpwcsez	f6, f1, #4.0
    1474:	00010063 	andeq	r0, r1, r3, rrx
    1478:	72707300 	rsbsvc	r7, r0, #0, 6
    147c:	2e657469 	cdpcs	4, 6, cr7, cr5, cr9, {3}
    1480:	00010068 	andeq	r0, r1, r8, rrx
    1484:	616d6900 	cmnvs	sp, r0, lsl #18
    1488:	682e6567 	stmdavs	lr!, {r0, r1, r2, r5, r6, r8, sl, sp, lr}
    148c:	00000100 	andeq	r0, r0, r0, lsl #2
    1490:	656d6167 	strbvs	r6, [sp, #-359]!	; 0xfffffe99
    1494:	656a626f 	strbvs	r6, [sl, #-623]!	; 0xfffffd91
    1498:	682e7463 	stmdavs	lr!, {r0, r1, r5, r6, sl, ip, sp, lr}
    149c:	00000100 	andeq	r0, r0, r0, lsl #2
    14a0:	70617267 	rsbvc	r7, r1, r7, ror #4
    14a4:	73636968 	cmnvc	r3, #104, 18	; 0x1a0000
    14a8:	0100682e 	tsteq	r0, lr, lsr #16
    14ac:	00000000 	andeq	r0, r0, r0
    14b0:	3da40205 	sfmcc	f0, 4, [r4, #20]!
    14b4:	2e032000 	cdpcs	0, 0, cr2, cr3, cr0, {0}
    14b8:	bb596901 	bllt	165b8c4 <startup-0x1e9a473c>
    14bc:	59696859 	stmdbpl	r9!, {r0, r3, r4, r6, fp, sp, lr}^
    14c0:	76591308 	ldrbvc	r1, [r9], -r8, lsl #6
    14c4:	593d3d67 	ldmdbpl	sp!, {r0, r1, r2, r5, r6, r8, sl, fp, ip, sp}
    14c8:	3d3d674c 	ldccc	7, cr6, [sp, #-304]!	; 0xfffffed0
    14cc:	673e4c59 			; <UNDEFINED> instruction: 0x673e4c59
    14d0:	675a3d3d 	smmlarvs	sl, sp, sp, r3
    14d4:	3e842f67 	cdpcc	15, 8, cr2, cr4, cr7, {3}
    14d8:	5a3d3d67 	bpl	f50a7c <startup-0x1f0af584>
    14dc:	842f6767 	strthi	r6, [pc], #-1895	; 14e4 <startup-0x1fffeb1c>
    14e0:	2f4b3d67 	svccs	0x004b3d67
    14e4:	3d3e683d 	ldccc	8, cr6, [lr, #-244]!	; 0xffffff0c
    14e8:	3d4b2f2f 	stclcc	15, cr2, [fp, #-188]	; 0xffffff44
    14ec:	0067762f 	rsbeq	r7, r7, pc, lsr #12
    14f0:	06010402 	streq	r0, [r1], -r2, lsl #8
    14f4:	3d830620 	stccc	6, cr0, [r3, #128]	; 0x80
    14f8:	914c3d59 	cmpls	ip, r9, asr sp
    14fc:	9f764b67 	svcls	0x00764b67
    1500:	0200304c 	andeq	r3, r0, #76	; 0x4c
    1504:	20060104 	andcs	r0, r6, r4, lsl #2
    1508:	3d3d8306 	ldccc	3, cr8, [sp, #-24]!	; 0xffffffe8
    150c:	0402003f 	streq	r0, [r2], #-63	; 0xffffffc1
    1510:	06200601 	strteq	r0, [r0], -r1, lsl #12
    1514:	3f3d3d83 	svccc	0x003d3d83
    1518:	01040200 	mrseq	r0, R12_usr
    151c:	83062006 	movwhi	r2, #24582	; 0x6006
    1520:	003f3d3d 	eorseq	r3, pc, sp, lsr sp	; <UNPREDICTABLE>
    1524:	06010402 	streq	r0, [r1], -r2, lsl #8
    1528:	3d830620 	stccc	6, cr0, [r3, #128]	; 0x80
    152c:	343e3f3d 	ldrtcc	r3, [lr], #-3901	; 0xfffff0c3
    1530:	2f2f843d 	svccs	0x002f843d
    1534:	843e3e2f 	ldrthi	r3, [lr], #-3631	; 0xfffff1d1
    1538:	73214b2f 			; <UNDEFINED> instruction: 0x73214b2f
    153c:	214b2f4d 	cmpcs	fp, sp, asr #30
    1540:	59684d73 	stmdbpl	r8!, {r0, r1, r4, r5, r6, r8, sl, fp, lr}^
    1544:	73214b30 			; <UNDEFINED> instruction: 0x73214b30
    1548:	73214b4d 			; <UNDEFINED> instruction: 0x73214b4d
    154c:	754c4b4e 	strbvc	r4, [ip, #-2894]	; 0xfffff4b2
    1550:	3d2f4b30 	vstmdbcc	pc!, {d4-d27}
    1554:	02007321 	andeq	r7, r0, #-2080374784	; 0x84000000
    1558:	4a060104 	bmi	181970 <startup-0x1fe7e690>
    155c:	2f4b6b06 	svccs	0x004b6b06
    1560:	0073213d 	rsbseq	r2, r3, sp, lsr r1
    1564:	06010402 	streq	r0, [r1], -r2, lsl #8
    1568:	4b6b064a 	blmi	1ac2e98 <startup-0x1e53d168>
    156c:	68753e4e 	ldmdavs	r5!, {r1, r2, r3, r6, r9, sl, fp, ip, sp}^
    1570:	3d4b2f2f 	stclcc	15, cr2, [fp, #-188]	; 0xffffff44
    1574:	4b4d7321 	blmi	135e200 <startup-0x1eca1e00>
    1578:	4d73212f 	ldfmie	f2, [r3, #-188]!	; 0xffffff44
    157c:	00080221 	andeq	r0, r8, r1, lsr #4
    1580:	00760101 	rsbseq	r0, r6, r1, lsl #2
    1584:	00020000 	andeq	r0, r2, r0
    1588:	00000057 	andeq	r0, r0, r7, asr r0
    158c:	0efb0102 	cdpeq	1, 15, cr0, cr11, cr2, {0}
    1590:	0101000d 	tsteq	r1, sp
    1594:	00000101 	andeq	r0, r0, r1, lsl #2
    1598:	00000100 	andeq	r0, r0, r0, lsl #2
    159c:	2f3a4301 	svccs	0x003a4301
    15a0:	2f706f6d 	svccs	0x00706f6d
    15a4:	6f4d2f63 	svcvs	0x004d2f63
    15a8:	62616c70 	rsbvs	r6, r1, #112, 24	; 0x7000
    15ac:	7461726f 	strbtvc	r7, [r1], #-623	; 0xfffffd91
    15b0:	656e6f69 	strbvs	r6, [lr, #-3945]!	; 0xfffff097
    15b4:	49442f72 	stmdbmi	r4, {r1, r4, r5, r6, r8, r9, sl, fp, sp}^
    15b8:	572d7350 			; <UNDEFINED> instruction: 0x572d7350
    15bc:	68637469 	stmdavs	r3!, {r0, r3, r5, r6, sl, ip, sp, lr}^
    15c0:	0000432f 	andeq	r4, r0, pc, lsr #6
    15c4:	776f6c73 			; <UNDEFINED> instruction: 0x776f6c73
    15c8:	7865745f 	stmdavc	r5!, {r0, r1, r2, r3, r4, r6, sl, ip, sp, lr}^
    15cc:	00632e74 	rsbeq	r2, r3, r4, ror lr
    15d0:	73000001 	movwvc	r0, #1
    15d4:	5f776f6c 	svcpl	0x00776f6c
    15d8:	74786574 	ldrbtvc	r6, [r8], #-1396	; 0xfffffa8c
    15dc:	0100682e 	tsteq	r0, lr, lsr #16
    15e0:	00000000 	andeq	r0, r0, r0
    15e4:	42c40205 	sbcmi	r0, r4, #1342177280	; 0x50000000
    15e8:	59152000 	ldmdbpl	r5, {sp}
    15ec:	5984c99f 	stmibpl	r4, {r0, r1, r2, r3, r4, r7, r8, fp, lr, pc}
    15f0:	3d3d754c 	cfldr32cc	mvfx7, [sp, #-304]!	; 0xfffffed0
    15f4:	023d3d3d 	eorseq	r3, sp, #3904	; 0xf40
    15f8:	01010007 	tsteq	r1, r7
    15fc:	000000d6 	ldrdeq	r0, [r0], -r6
    1600:	00ab0002 	adceq	r0, fp, r2
    1604:	01020000 	mrseq	r0, (UNDEF: 2)
    1608:	000d0efb 	strdeq	r0, [sp], -fp
    160c:	01010101 	tsteq	r1, r1, lsl #2
    1610:	01000000 	mrseq	r0, (UNDEF: 0)
    1614:	43010000 	movwmi	r0, #4096	; 0x1000
    1618:	6f6d2f3a 	svcvs	0x006d2f3a
    161c:	2f632f70 	svccs	0x00632f70
    1620:	6c706f4d 	ldclvs	15, cr6, [r0], #-308	; 0xfffffecc
    1624:	726f6261 	rsbvc	r6, pc, #268435462	; 0x10000006
    1628:	6f697461 	svcvs	0x00697461
    162c:	2f72656e 	svccs	0x0072656e
    1630:	73504944 	cmpvc	r0, #68, 18	; 0x110000
    1634:	7469572d 	strbtvc	r5, [r9], #-1837	; 0xfffff8d3
    1638:	432f6863 			; <UNDEFINED> instruction: 0x432f6863
    163c:	6e690000 	cdpvs	0, 6, cr0, cr9, cr0, {0}
    1640:	726f6f64 	rsbvc	r6, pc, #100, 30	; 0x190
    1644:	00632e73 	rsbeq	r2, r3, r3, ror lr
    1648:	73000001 	movwvc	r0, #1
    164c:	74697270 	strbtvc	r7, [r9], #-624	; 0xfffffd90
    1650:	00682e65 	rsbeq	r2, r8, r5, ror #28
    1654:	69000001 	stmdbvs	r0, {r0}
    1658:	6567616d 	strbvs	r6, [r7, #-365]!	; 0xfffffe93
    165c:	0100682e 	tsteq	r0, lr, lsr #16
    1660:	61670000 	cmnvs	r7, r0
    1664:	626f656d 	rsbvs	r6, pc, #457179136	; 0x1b400000
    1668:	7463656a 	strbtvc	r6, [r3], #-1386	; 0xfffffa96
    166c:	0100682e 	tsteq	r0, lr, lsr #16
    1670:	6e690000 	cdpvs	0, 6, cr0, cr9, cr0, {0}
    1674:	726f6f64 	rsbvc	r6, pc, #100, 30	; 0x190
    1678:	6c625f73 	stclvs	15, cr5, [r2], #-460	; 0xfffffe34
    167c:	2e6b6361 	cdpcs	3, 6, cr6, cr11, cr1, {3}
    1680:	006d6278 	rsbeq	r6, sp, r8, ror r2
    1684:	69000001 	stmdbvs	r0, {r0}
    1688:	6f6f646e 	svcvs	0x006f646e
    168c:	675f7372 			; <UNDEFINED> instruction: 0x675f7372
    1690:	2e796172 	mrccs	1, 3, r6, cr9, cr2, {3}
    1694:	006d6278 	rsbeq	r6, sp, r8, ror r2
    1698:	69000001 	stmdbvs	r0, {r0}
    169c:	6f6f646e 	svcvs	0x006f646e
    16a0:	6c5f7372 	mrrcvs	3, 7, r7, pc, cr2	; <UNPREDICTABLE>
    16a4:	74686769 	strbtvc	r6, [r8], #-1897	; 0xfffff897
    16a8:	6d62782e 	stclvs	8, cr7, [r2, #-184]!	; 0xffffff48
    16ac:	00000100 	andeq	r0, r0, r0, lsl #2
    16b0:	02050000 	andeq	r0, r5, #0
    16b4:	20004358 	andcs	r4, r0, r8, asr r3
    16b8:	3e011303 	cdpcc	3, 0, cr1, cr1, cr3, {0}
    16bc:	2f3d672f 	svccs	0x003d672f
    16c0:	672f3d67 	strvs	r3, [pc, -r7, ror #26]!
    16c4:	4c5a083e 	mrrcmi	8, 3, r0, sl, cr14
    16c8:	4c3e2f4b 	ldcmi	15, cr2, [lr], #-300	; 0xfffffed4
    16cc:	3d3d3e93 	ldccc	14, cr3, [sp, #-588]!	; 0xfffffdb4
    16d0:	00083d3d 	andeq	r3, r8, sp, lsr sp
    16d4:	00da0101 	sbcseq	r0, sl, r1, lsl #2
    16d8:	00020000 	andeq	r0, r2, r0
    16dc:	000000af 	andeq	r0, r0, pc, lsr #1
    16e0:	0efb0102 	cdpeq	1, 15, cr0, cr11, cr2, {0}
    16e4:	0101000d 	tsteq	r1, sp
    16e8:	00000101 	andeq	r0, r0, r1, lsl #2
    16ec:	00000100 	andeq	r0, r0, r0, lsl #2
    16f0:	2f3a4301 	svccs	0x003a4301
    16f4:	2f706f6d 	svccs	0x00706f6d
    16f8:	6f4d2f63 	svcvs	0x004d2f63
    16fc:	62616c70 	rsbvs	r6, r1, #112, 24	; 0x7000
    1700:	7461726f 	strbtvc	r7, [r1], #-623	; 0xfffffd91
    1704:	656e6f69 	strbvs	r6, [lr, #-3945]!	; 0xfffff097
    1708:	49442f72 	stmdbmi	r4, {r1, r4, r5, r6, r8, r9, sl, fp, sp}^
    170c:	572d7350 			; <UNDEFINED> instruction: 0x572d7350
    1710:	68637469 	stmdavs	r3!, {r0, r3, r5, r6, sl, ip, sp, lr}^
    1714:	0000432f 	andeq	r4, r0, pc, lsr #6
    1718:	6f646e69 	svcvs	0x00646e69
    171c:	3273726f 	rsbscc	r7, r3, #-268435450	; 0xf0000006
    1720:	0100632e 	tsteq	r0, lr, lsr #6
    1724:	70730000 	rsbsvc	r0, r3, r0
    1728:	65746972 	ldrbvs	r6, [r4, #-2418]!	; 0xfffff68e
    172c:	0100682e 	tsteq	r0, lr, lsr #16
    1730:	6d690000 	stclvs	0, cr0, [r9, #-0]
    1734:	2e656761 	cdpcs	7, 6, cr6, cr5, cr1, {3}
    1738:	00010068 	andeq	r0, r1, r8, rrx
    173c:	6d616700 	stclvs	7, cr6, [r1, #-0]
    1740:	6a626f65 	bvs	189d4dc <startup-0x1e762b24>
    1744:	2e746365 	cdpcs	3, 7, cr6, cr4, cr5, {3}
    1748:	00010068 	andeq	r0, r1, r8, rrx
    174c:	646e6900 	strbtvs	r6, [lr], #-2304	; 0xfffff700
    1750:	73726f6f 	cmnvc	r2, #444	; 0x1bc
    1754:	6c625f32 	stclvs	15, cr5, [r2], #-200	; 0xffffff38
    1758:	2e6b6361 	cdpcs	3, 6, cr6, cr11, cr1, {3}
    175c:	006d6278 	rsbeq	r6, sp, r8, ror r2
    1760:	69000001 	stmdbvs	r0, {r0}
    1764:	6f6f646e 	svcvs	0x006f646e
    1768:	5f327372 	svcpl	0x00327372
    176c:	79617267 	stmdbvc	r1!, {r0, r1, r2, r5, r6, r9, ip, sp, lr}^
    1770:	6d62782e 	stclvs	8, cr7, [r2, #-184]!	; 0xffffff48
    1774:	00000100 	andeq	r0, r0, r0, lsl #2
    1778:	6f646e69 	svcvs	0x00646e69
    177c:	3273726f 	rsbscc	r7, r3, #-268435450	; 0xf0000006
    1780:	67696c5f 			; <UNDEFINED> instruction: 0x67696c5f
    1784:	782e7468 	stmdavc	lr!, {r3, r5, r6, sl, ip, sp, lr}
    1788:	01006d62 	tsteq	r0, r2, ror #26
    178c:	00000000 	andeq	r0, r0, r0
    1790:	44400205 	strbmi	r0, [r0], #-517	; 0xfffffdfb
    1794:	13032000 	movwne	r2, #12288	; 0x3000
    1798:	672f3e01 	strvs	r3, [pc, -r1, lsl #28]!
    179c:	3d672f3d 	stclcc	15, cr2, [r7, #-244]!	; 0xffffff0c
    17a0:	083e672f 	ldmdaeq	lr!, {r0, r1, r2, r3, r5, r8, r9, sl, sp, lr}
    17a4:	2f4b4c5a 	svccs	0x004b4c5a
    17a8:	3e934c3e 	mrccc	12, 4, r4, cr3, cr14, {1}
    17ac:	3d3d3d3d 	ldccc	13, cr3, [sp, #-244]!	; 0xffffff0c
    17b0:	01010008 	tsteq	r1, r8
    17b4:	000000d2 	ldrdeq	r0, [r0], -r2
    17b8:	00a70002 	adceq	r0, r7, r2
    17bc:	01020000 	mrseq	r0, (UNDEF: 2)
    17c0:	000d0efb 	strdeq	r0, [sp], -fp
    17c4:	01010101 	tsteq	r1, r1, lsl #2
    17c8:	01000000 	mrseq	r0, (UNDEF: 0)
    17cc:	43010000 	movwmi	r0, #4096	; 0x1000
    17d0:	6f6d2f3a 	svcvs	0x006d2f3a
    17d4:	2f632f70 	svccs	0x00632f70
    17d8:	6c706f4d 	ldclvs	15, cr6, [r0], #-308	; 0xfffffecc
    17dc:	726f6261 	rsbvc	r6, pc, #268435462	; 0x10000006
    17e0:	6f697461 	svcvs	0x00697461
    17e4:	2f72656e 	svccs	0x0072656e
    17e8:	73504944 	cmpvc	r0, #68, 18	; 0x110000
    17ec:	7469572d 	strbtvc	r5, [r9], #-1837	; 0xfffff8d3
    17f0:	432f6863 			; <UNDEFINED> instruction: 0x432f6863
    17f4:	72740000 	rsbsvc	r0, r4, #0
    17f8:	7968706f 	stmdbvc	r8!, {r0, r1, r2, r3, r5, r6, ip, sp, lr}^
    17fc:	0100632e 	tsteq	r0, lr, lsr #6
    1800:	70730000 	rsbsvc	r0, r3, r0
    1804:	65746972 	ldrbvs	r6, [r4, #-2418]!	; 0xfffff68e
    1808:	0100682e 	tsteq	r0, lr, lsr #16
    180c:	6d690000 	stclvs	0, cr0, [r9, #-0]
    1810:	2e656761 	cdpcs	7, 6, cr6, cr5, cr1, {3}
    1814:	00010068 	andeq	r0, r1, r8, rrx
    1818:	6d616700 	stclvs	7, cr6, [r1, #-0]
    181c:	6a626f65 	bvs	189d5b8 <startup-0x1e762a48>
    1820:	2e746365 	cdpcs	3, 7, cr6, cr4, cr5, {3}
    1824:	00010068 	andeq	r0, r1, r8, rrx
    1828:	6f727400 	svcvs	0x00727400
    182c:	5f796870 	svcpl	0x00796870
    1830:	63616c62 	cmnvs	r1, #25088	; 0x6200
    1834:	62782e6b 	rsbsvs	r2, r8, #1712	; 0x6b0
    1838:	0001006d 	andeq	r0, r1, sp, rrx
    183c:	6f727400 	svcvs	0x00727400
    1840:	5f796870 	svcpl	0x00796870
    1844:	79617267 	stmdbvc	r1!, {r0, r1, r2, r5, r6, r9, ip, sp, lr}^
    1848:	6d62782e 	stclvs	8, cr7, [r2, #-184]!	; 0xffffff48
    184c:	00000100 	andeq	r0, r0, r0, lsl #2
    1850:	706f7274 	rsbvc	r7, pc, r4, ror r2	; <UNPREDICTABLE>
    1854:	6c5f7968 	mrrcvs	9, 6, r7, pc, cr8	; <UNPREDICTABLE>
    1858:	74686769 	strbtvc	r6, [r8], #-1897	; 0xfffff897
    185c:	6d62782e 	stclvs	8, cr7, [r2, #-184]!	; 0xffffff48
    1860:	00000100 	andeq	r0, r0, r0, lsl #2
    1864:	02050000 	andeq	r0, r5, #0
    1868:	20004528 	andcs	r4, r0, r8, lsr #10
    186c:	3e011303 	cdpcc	3, 0, cr1, cr1, cr3, {0}
    1870:	2f3d672f 	svccs	0x003d672f
    1874:	672f3d67 	strvs	r3, [pc, -r7, ror #26]!
    1878:	4c5a083e 	mrrcmi	8, 3, r0, sl, cr14
    187c:	4c3e2f4b 	ldcmi	15, cr2, [lr], #-300	; 0xfffffed4
    1880:	3d3d3e93 	ldccc	14, cr3, [sp, #-588]!	; 0xfffffdb4
    1884:	00083d3d 	andeq	r3, r8, sp, lsr sp
    1888:	00ce0101 	sbceq	r0, lr, r1, lsl #2
    188c:	00020000 	andeq	r0, r2, r0
    1890:	000000a3 	andeq	r0, r0, r3, lsr #1
    1894:	0efb0102 	cdpeq	1, 15, cr0, cr11, cr2, {0}
    1898:	0101000d 	tsteq	r1, sp
    189c:	00000101 	andeq	r0, r0, r1, lsl #2
    18a0:	00000100 	andeq	r0, r0, r0, lsl #2
    18a4:	2f3a4301 	svccs	0x003a4301
    18a8:	2f706f6d 	svccs	0x00706f6d
    18ac:	6f4d2f63 	svcvs	0x004d2f63
    18b0:	62616c70 	rsbvs	r6, r1, #112, 24	; 0x7000
    18b4:	7461726f 	strbtvc	r7, [r1], #-623	; 0xfffffd91
    18b8:	656e6f69 	strbvs	r6, [lr, #-3945]!	; 0xfffff097
    18bc:	49442f72 	stmdbmi	r4, {r1, r4, r5, r6, r8, r9, sl, fp, sp}^
    18c0:	572d7350 			; <UNDEFINED> instruction: 0x572d7350
    18c4:	68637469 	stmdavs	r3!, {r0, r3, r5, r6, sl, ip, sp, lr}^
    18c8:	0000432f 	andeq	r4, r0, pc, lsr #6
    18cc:	65676f72 	strbvs	r6, [r7, #-3954]!	; 0xfffff08e
    18d0:	00632e72 	rsbeq	r2, r3, r2, ror lr
    18d4:	73000001 	movwvc	r0, #1
    18d8:	74697270 	strbtvc	r7, [r9], #-624	; 0xfffffd90
    18dc:	00682e65 	rsbeq	r2, r8, r5, ror #28
    18e0:	69000001 	stmdbvs	r0, {r0}
    18e4:	6567616d 	strbvs	r6, [r7, #-365]!	; 0xfffffe93
    18e8:	0100682e 	tsteq	r0, lr, lsr #16
    18ec:	61670000 	cmnvs	r7, r0
    18f0:	626f656d 	rsbvs	r6, pc, #457179136	; 0x1b400000
    18f4:	7463656a 	strbtvc	r6, [r3], #-1386	; 0xfffffa96
    18f8:	0100682e 	tsteq	r0, lr, lsr #16
    18fc:	6f720000 	svcvs	0x00720000
    1900:	5f726567 	svcpl	0x00726567
    1904:	63616c62 	cmnvs	r1, #25088	; 0x6200
    1908:	62782e6b 	rsbsvs	r2, r8, #1712	; 0x6b0
    190c:	0001006d 	andeq	r0, r1, sp, rrx
    1910:	676f7200 	strbvs	r7, [pc, -r0, lsl #4]!
    1914:	675f7265 	ldrbvs	r7, [pc, -r5, ror #4]
    1918:	2e796172 	mrccs	1, 3, r6, cr9, cr2, {3}
    191c:	006d6278 	rsbeq	r6, sp, r8, ror r2
    1920:	72000001 	andvc	r0, r0, #1
    1924:	7265676f 	rsbvc	r6, r5, #29097984	; 0x1bc0000
    1928:	67696c5f 			; <UNDEFINED> instruction: 0x67696c5f
    192c:	782e7468 	stmdavc	lr!, {r3, r5, r6, sl, ip, sp, lr}
    1930:	01006d62 	tsteq	r0, r2, ror #26
    1934:	00000000 	andeq	r0, r0, r0
    1938:	46100205 	ldrmi	r0, [r0], -r5, lsl #4
    193c:	13032000 	movwne	r2, #12288	; 0x3000
    1940:	672f3e01 	strvs	r3, [pc, -r1, lsl #28]!
    1944:	3d672f3d 	stclcc	15, cr2, [r7, #-244]!	; 0xffffff0c
    1948:	083e672f 	ldmdaeq	lr!, {r0, r1, r2, r3, r5, r8, r9, sl, sp, lr}
    194c:	2f4b4c5a 	svccs	0x004b4c5a
    1950:	3e934c3e 	mrccc	12, 4, r4, cr3, cr14, {1}
    1954:	3d3d3d3d 	ldccc	13, cr3, [sp, #-244]!	; 0xffffff0c
    1958:	01010008 	tsteq	r1, r8

Disassembly of section .debug_str:

00000000 <.debug_str>:
       0:	7473616c 	ldrbtvc	r6, [r3], #-364	; 0xfffffe94
       4:	65726946 	ldrbvs	r6, [r2, #-2374]!	; 0xfffff6ba
       8:	67697254 			; <UNDEFINED> instruction: 0x67697254
       c:	00726567 	rsbseq	r6, r2, r7, ror #10
      10:	74736163 	ldrbtvc	r6, [r3], #-355	; 0xfffffe9d
      14:	6c5f656c 	cfldr64vs	mvdx6, [pc], {108}	; 0x6c
      18:	74686769 	strbtvc	r6, [r8], #-1897	; 0xfffff897
      1c:	7469625f 	strbtvc	r6, [r9], #-607	; 0xfffffda1
      20:	69660073 	stmdbvs	r6!, {r0, r1, r4, r5, r6}^
      24:	5f336572 	svcpl	0x00336572
      28:	6f646e69 	svcvs	0x00646e69
      2c:	0073726f 	rsbseq	r7, r3, pc, ror #4
      30:	6867696c 	stmdavs	r7!, {r2, r3, r5, r6, r8, fp, sp, lr}^
      34:	616d4974 	smcvs	54420	; 0xd494
      38:	67006567 	strvs	r6, [r0, -r7, ror #10]
      3c:	49796172 	ldmdbmi	r9!, {r1, r4, r5, r6, r8, sp, lr}^
      40:	6567616d 	strbvs	r6, [r7, #-365]!	; 0xfffffe93
      44:	73616300 	cmnvc	r1, #0, 6
      48:	5f656c74 	svcpl	0x00656c74
      4c:	79617267 	stmdbvc	r1!, {r0, r1, r2, r5, r6, r9, ip, sp, lr}^
      50:	7469625f 	strbtvc	r6, [r9], #-607	; 0xfffffda1
      54:	6c700073 	ldclvs	0, cr0, [r0], #-460	; 0xfffffe34
      58:	72657961 	rsbvc	r7, r5, #1589248	; 0x184000
      5c:	78657400 	stmdavc	r5!, {sl, ip, sp, lr}^
      60:	726b5f74 	rsbvc	r5, fp, #116, 30	; 0x1d0
      64:	61670061 	cmnvs	r7, r1, rrx
      68:	6f5f656d 	svcvs	0x005f656d
      6c:	00726576 	rsbseq	r6, r2, r6, ror r5
      70:	72665f6e 	rsbvc	r5, r6, #440	; 0x1b8
      74:	73656d61 	cmnvc	r5, #6208	; 0x1840
      78:	73616300 	cmnvc	r1, #0, 6
      7c:	4c656c74 	stclmi	12, cr6, [r5], #-464	; 0xfffffe30
      80:	74686769 	strbtvc	r6, [r8], #-1897	; 0xfffff897
      84:	696f7000 	stmdbvs	pc!, {ip, sp, lr}^	; <UNPREDICTABLE>
      88:	7265746e 	rsbvc	r7, r5, #1845493760	; 0x6e000000
      8c:	74003031 	strvc	r3, [r0], #-49	; 0xffffffcf
      90:	43706d65 	cmnmi	r0, #6464	; 0x1940
      94:	6c747361 	ldclvs	3, cr7, [r4], #-388	; 0xfffffe7c
      98:	616c4265 	cmnvs	ip, r5, ror #4
      9c:	47006b63 	strmi	r6, [r0, -r3, ror #22]
      a0:	4320554e 			; <UNDEFINED> instruction: 0x4320554e
      a4:	36203939 			; <UNDEFINED> instruction: 0x36203939
      a8:	312e332e 			; <UNDEFINED> instruction: 0x312e332e
      ac:	31303220 	teqcc	r0, r0, lsr #4
      b0:	31323037 	teqcc	r2, r7, lsr r0
      b4:	72282035 	eorvc	r2, r8, #53	; 0x35
      b8:	61656c65 	cmnvs	r5, r5, ror #24
      bc:	20296573 	eorcs	r6, r9, r3, ror r5
      c0:	4d52415b 	ldfmie	f4, [r2, #-364]	; 0xfffffe94
      c4:	626d652f 	rsbvs	r6, sp, #197132288	; 0xbc00000
      c8:	65646465 	strbvs	r6, [r4, #-1125]!	; 0xfffffb9b
      cc:	2d362d64 	ldccs	13, cr2, [r6, #-400]!	; 0xfffffe70
      d0:	6e617262 	cdpvs	2, 6, cr7, cr1, cr2, {3}
      d4:	72206863 	eorvc	r6, r0, #6488064	; 0x630000
      d8:	73697665 	cmnvc	r9, #105906176	; 0x6500000
      dc:	206e6f69 	rsbcs	r6, lr, r9, ror #30
      e0:	35353432 	ldrcc	r3, [r5, #-1074]!	; 0xfffffbce
      e4:	205d3231 	subscs	r3, sp, r1, lsr r2
      e8:	68746d2d 	ldmdavs	r4!, {r0, r2, r3, r5, r8, sl, fp, sp, lr}^
      ec:	20626d75 	rsbcs	r6, r2, r5, ror sp
      f0:	72616d2d 	rsbvc	r6, r1, #2880	; 0xb40
      f4:	613d6863 	teqvs	sp, r3, ror #16
      f8:	36766d72 			; <UNDEFINED> instruction: 0x36766d72
      fc:	2d206d2d 	stccs	13, cr6, [r0, #-180]!	; 0xffffff4c
     100:	6f6c666d 	svcvs	0x006c666d
     104:	612d7461 			; <UNDEFINED> instruction: 0x612d7461
     108:	733d6962 	teqvc	sp, #1605632	; 0x188000
     10c:	2074666f 	rsbscs	r6, r4, pc, ror #12
     110:	68746d2d 	ldmdavs	r4!, {r0, r2, r3, r5, r8, sl, fp, sp, lr}^
     114:	20626d75 	rsbcs	r6, r2, r5, ror sp
     118:	72616d2d 	rsbvc	r6, r1, #2880	; 0xb40
     11c:	613d6863 	teqvs	sp, r3, ror #16
     120:	36766d72 			; <UNDEFINED> instruction: 0x36766d72
     124:	2d206d2d 	stccs	13, cr6, [r0, #-180]!	; 0xffffff4c
     128:	4f2d2067 	svcmi	0x002d2067
     12c:	732d2030 			; <UNDEFINED> instruction: 0x732d2030
     130:	633d6474 	teqvs	sp, #116, 8	; 0x74000000
     134:	6d003939 	vstrvs.16	s6, [r0, #-114]	; 0xffffff8e	; <UNPREDICTABLE>
     138:	74736e6f 	ldrbtvc	r6, [r3], #-3695	; 0xfffff191
     13c:	69007265 	stmdbvs	r0, {r0, r2, r5, r6, r9, ip, sp, lr}
     140:	6c635f73 	stclvs	15, cr5, [r3], #-460	; 0xfffffe34
     144:	69626d69 	stmdbvs	r2!, {r0, r3, r5, r6, r8, sl, fp, sp, lr}^
     148:	7000676e 	andvc	r6, r0, lr, ror #14
     14c:	746e696f 	strbtvc	r6, [lr], #-2415	; 0xfffff691
     150:	00377265 	eorseq	r7, r7, r5, ror #4
     154:	74736163 	ldrbtvc	r6, [r3], #-355	; 0xfffffe9d
     158:	624f656c 	subvs	r6, pc, #108, 10	; 0x1b000000
     15c:	7274006a 	rsbsvc	r0, r4, #106	; 0x6a
     160:	7968706f 	stmdbvc	r8!, {r0, r1, r2, r3, r5, r6, ip, sp, lr}^
     164:	7275625f 	rsbsvc	r6, r5, #-268435451	; 0xf0000005
     168:	0064656e 	rsbeq	r6, r4, lr, ror #10
     16c:	73657270 	cmnvc	r5, #112, 4
     170:	6c625f73 	stclvs	15, cr5, [r2], #-460	; 0xfffffe34
     174:	5f6b6361 	svcpl	0x006b6361
     178:	73746962 	cmnvc	r4, #1605632	; 0x188000
     17c:	72696600 	rsbvc	r6, r9, #0, 12
     180:	695f3165 	ldmdbvs	pc, {r0, r2, r5, r6, r8, ip, sp}^	; <UNPREDICTABLE>
     184:	6f6f646e 	svcvs	0x006f646e
     188:	63007372 	movwvs	r7, #882	; 0x372
     18c:	6c747361 	ldclvs	3, cr7, [r4], #-388	; 0xfffffe7c
     190:	616d4965 	cmnvs	sp, r5, ror #18
     194:	00736567 	rsbseq	r6, r3, r7, ror #10
     198:	6c746974 			; <UNDEFINED> instruction: 0x6c746974
     19c:	616d4965 	cmnvs	sp, r5, ror #18
     1a0:	73006567 	movwvc	r6, #1383	; 0x567
     1a4:	74726174 	ldrbtvc	r6, [r2], #-372	; 0xfffffe8c
     1a8:	74007075 	strvc	r7, [r0], #-117	; 0xffffff8b
     1ac:	31747865 	cmncc	r4, r5, ror #16
     1b0:	6e6f6d00 	cdpvs	13, 6, cr6, cr15, cr0, {0}
     1b4:	72657473 	rsbvc	r7, r5, #1929379840	; 0x73000000
     1b8:	6867694c 	stmdavs	r7!, {r2, r3, r6, r8, fp, sp, lr}^
     1bc:	69740074 	ldmdbvs	r4!, {r2, r4, r5, r6}^
     1c0:	5f656c74 	svcpl	0x00656c74
     1c4:	6867696c 	stmdavs	r7!, {r2, r3, r5, r6, r8, fp, sp, lr}^
     1c8:	69625f74 	stmdbvs	r2!, {r2, r4, r5, r6, r8, r9, sl, fp, ip, lr}^
     1cc:	74007374 	strvc	r7, [r0], #-884	; 0xfffffc8c
     1d0:	4d706d65 	ldclmi	13, cr6, [r0, #-404]!	; 0xfffffe6c
     1d4:	74736e6f 	ldrbtvc	r6, [r3], #-3695	; 0xfffff191
     1d8:	72477265 	subvc	r7, r7, #1342177286	; 0x50000006
     1dc:	74007961 	strvc	r7, [r0], #-2401	; 0xfffff69f
     1e0:	32747865 	rsbscc	r7, r4, #6619136	; 0x650000
     1e4:	65727000 	ldrbvs	r7, [r2, #-0]!
     1e8:	72477373 	subvc	r7, r7, #-872415231	; 0xcc000001
     1ec:	74007961 	strvc	r7, [r0], #-2401	; 0xfffff69f
     1f0:	34747865 	ldrbtcc	r7, [r4], #-2149	; 0xfffff79b
     1f4:	78657400 	stmdavc	r5!, {sl, ip, sp, lr}^
     1f8:	66003574 			; <UNDEFINED> instruction: 0x66003574
     1fc:	31657269 	cmncc	r5, r9, ror #4
     200:	73616800 	cmnvc	r1, #0, 16
     204:	696c635f 	stmdbvs	ip!, {r0, r1, r2, r3, r4, r6, r8, r9, sp, lr}^
     208:	6465626d 	strbtvs	r6, [r5], #-621	; 0xfffffd93
     20c:	6d657400 	cfstrdvs	mvd7, [r5, #-0]
     210:	00674270 	rsbeq	r4, r7, r0, ror r2
     214:	74786574 	ldrbtvc	r6, [r8], #-1396	; 0xfffffa8c
     218:	65740033 	ldrbvs	r0, [r4, #-51]!	; 0xffffffcd
     21c:	00387478 	eorseq	r7, r8, r8, ror r4
     220:	6c746974 			; <UNDEFINED> instruction: 0x6c746974
     224:	6c625f65 	stclvs	15, cr5, [r2], #-404	; 0xfffffe6c
     228:	5f6b6361 	svcpl	0x006b6361
     22c:	73746962 	cmnvc	r4, #1605632	; 0x188000
     230:	6d657400 	cfstrdvs	mvd7, [r5, #-0]
     234:	6e6f4d70 	mcrvs	13, 3, r4, cr15, cr0, {3}
     238:	72657473 	rsbvc	r7, r5, #1929379840	; 0x73000000
     23c:	6867694c 	stmdavs	r7!, {r2, r3, r6, r8, fp, sp, lr}^
     240:	65740074 	ldrbvs	r0, [r4, #-116]!	; 0xffffff8c
     244:	00377478 	eorseq	r7, r7, r8, ror r4
     248:	77617264 	strbvc	r7, [r1, -r4, ror #4]!
     24c:	6675625f 			; <UNDEFINED> instruction: 0x6675625f
     250:	5f726566 	svcpl	0x00726566
     254:	63616c62 	cmnvs	r1, #25088	; 0x6200
     258:	6574006b 	ldrbvs	r0, [r4, #-107]!	; 0xffffff95
     25c:	00367478 	eorseq	r7, r6, r8, ror r4
     260:	74786574 	ldrbtvc	r6, [r8], #-1396	; 0xfffffa8c
     264:	6f6d0039 	svcvs	0x006d0039
     268:	6574736e 	ldrbvs	r7, [r4, #-878]!	; 0xfffffc92
     26c:	696f5072 	stmdbvs	pc!, {r1, r4, r5, r6, ip, lr}^	; <UNPREDICTABLE>
     270:	7265746e 	rsbvc	r7, r5, #1845493760	; 0x6e000000
     274:	6f6d0032 	svcvs	0x006d0032
     278:	6574736e 	ldrbvs	r7, [r4, #-878]!	; 0xfffffc92
     27c:	696f5072 	stmdbvs	pc!, {r1, r4, r5, r6, ip, lr}^	; <UNPREDICTABLE>
     280:	7265746e 	rsbvc	r7, r5, #1845493760	; 0x6e000000
     284:	6f720033 	svcvs	0x00720033
     288:	64003277 	strvs	r3, [r0], #-631	; 0xfffffd89
     28c:	6c707369 	ldclvs	3, cr7, [r0], #-420	; 0xfffffe5c
     290:	6d007961 	vstrvs.16	s14, [r0, #-194]	; 0xffffff3e	; <UNPREDICTABLE>
     294:	74736e6f 	ldrbtvc	r6, [r3], #-3695	; 0xfffff191
     298:	625f7265 	subsvs	r7, pc, #1342177286	; 0x50000006
     29c:	6b63616c 	blvs	18d8854 <startup-0x1e7277ac>
     2a0:	7469625f 	strbtvc	r6, [r9], #-607	; 0xfffffda1
     2a4:	6e690073 	mcrvs	0, 3, r0, cr9, cr3, {3}
     2a8:	615f7469 	cmpvs	pc, r9, ror #8
     2ac:	6c007070 	stcvs	0, cr7, [r0], {112}	; 0x70
     2b0:	5f676e6f 	svcpl	0x00676e6f
     2b4:	74786574 	ldrbtvc	r6, [r8], #-1396	; 0xfffffa8c
     2b8:	65727000 	ldrbvs	r7, [r2, #-0]!
     2bc:	624f7373 	subvs	r7, pc, #-872415231	; 0xcc000001
     2c0:	6966006a 	stmdbvs	r6!, {r1, r3, r5, r6}^
     2c4:	5f326572 	svcpl	0x00326572
     2c8:	6f646e69 	svcvs	0x00646e69
     2cc:	0073726f 	rsbseq	r7, r3, pc, ror #4
     2d0:	77617264 	strbvc	r7, [r1, -r4, ror #4]!
     2d4:	6675625f 			; <UNDEFINED> instruction: 0x6675625f
     2d8:	5f726566 	svcpl	0x00726566
     2dc:	63616c62 	cmnvs	r1, #25088	; 0x6200
     2e0:	72675f6b 	rsbvc	r5, r7, #428	; 0x1ac
     2e4:	6c5f7961 	mrrcvs	9, 6, r7, pc, cr1	; <UNPREDICTABLE>
     2e8:	74686769 	strbtvc	r6, [r8], #-1897	; 0xfffff897
     2ec:	696e6900 	stmdbvs	lr!, {r8, fp, sp, lr}^
     2f0:	72745f74 	rsbsvc	r5, r4, #116, 30	; 0x1d0
     2f4:	7968706f 	stmdbvc	r8!, {r0, r1, r2, r3, r5, r6, ip, sp, lr}^
     2f8:	696f7000 	stmdbvs	pc!, {ip, sp, lr}^	; <UNPREDICTABLE>
     2fc:	7265746e 	rsbvc	r7, r5, #1845493760	; 0x6e000000
     300:	6f700035 	svcvs	0x00700035
     304:	65746e69 	ldrbvs	r6, [r4, #-3689]!	; 0xfffff197
     308:	64003672 	strvs	r3, [r0], #-1650	; 0xfffff98e
     30c:	61747369 	cmnvs	r4, r9, ror #6
     310:	5f65636e 	svcpl	0x0065636e
     314:	72696168 	rsbvc	r6, r9, #104, 2
     318:	6f72745f 	svcvs	0x0072745f
     31c:	00796870 	rsbseq	r6, r9, r0, ror r8
     320:	6e696f70 	mcrvs	15, 3, r6, cr9, cr0, {3}
     324:	38726574 	ldmdacc	r2!, {r2, r4, r5, r6, r8, sl, sp, lr}^
     328:	696f7000 	stmdbvs	pc!, {ip, sp, lr}^	; <UNPREDICTABLE>
     32c:	7265746e 	rsbvc	r7, r5, #1845493760	; 0x6e000000
     330:	65740039 	ldrbvs	r0, [r4, #-57]!	; 0xffffffc7
     334:	6143706d 	cmpvs	r3, sp, rrx
     338:	656c7473 	strbvs	r7, [ip, #-1139]!	; 0xfffffb8d
     33c:	6867694c 	stmdavs	r7!, {r2, r3, r6, r8, fp, sp, lr}^
     340:	65720074 	ldrbvs	r0, [r2, #-116]!	; 0xffffff8c
     344:	7265646e 	rsbvc	r6, r5, #1845493760	; 0x6e000000
     348:	73696400 	cmnvc	r9, #0, 8
     34c:	636e6174 	cmnvs	lr, #116, 2
     350:	61685f65 	cmnvs	r8, r5, ror #30
     354:	445f7269 	ldrbmi	r7, [pc], #-617	; 35c <startup-0x1ffffca4>
     358:	77005049 	strvc	r5, [r0, -r9, asr #32]
     35c:	68746469 	ldmdavs	r4!, {r0, r3, r5, r6, sl, sp, lr}^
     360:	696e6900 	stmdbvs	lr!, {r8, fp, sp, lr}^
     364:	6f625f74 	svcvs	0x00625f74
     368:	64006d6f 	strvs	r6, [r0], #-3439	; 0xfffff291
     36c:	5f776172 	svcpl	0x00776172
     370:	66667562 	strbtvs	r7, [r6], -r2, ror #10
     374:	625f7265 	subsvs	r7, pc, #1342177286	; 0x50000006
     378:	6b63616c 	blvs	18d8930 <startup-0x1e7276d0>
     37c:	67696c5f 			; <UNDEFINED> instruction: 0x67696c5f
     380:	73007468 	movwvc	r7, #1128	; 0x468
     384:	74726f68 	ldrbtvc	r6, [r2], #-3944	; 0xfffff098
     388:	736e7520 	cmnvc	lr, #32, 10	; 0x8000000
     38c:	656e6769 	strbvs	r6, [lr, #-1897]!	; 0xfffff897
     390:	6e692064 	cdpvs	0, 6, cr2, cr9, cr4, {3}
     394:	65640074 	strbvs	r0, [r4, #-116]!	; 0xffffff8c
     398:	5f79616c 	svcpl	0x0079616c
     39c:	69746e75 	ldmdbvs	r4!, {r0, r2, r4, r5, r6, r9, sl, fp, sp, lr}^
     3a0:	65745f6c 	ldrbvs	r5, [r4, #-3948]!	; 0xfffff094
     3a4:	74007478 	strvc	r7, [r0], #-1144	; 0xfffffb88
     3a8:	4d706d65 	ldclmi	13, cr6, [r0, #-404]!	; 0xfffffe6c
     3ac:	74736e6f 	ldrbtvc	r6, [r3], #-3695	; 0xfffff191
     3b0:	74007265 	strvc	r7, [r0], #-613	; 0xfffffd9b
     3b4:	656c7469 	strbvs	r7, [ip, #-1129]!	; 0xfffffb97
     3b8:	63616c42 	cmnvs	r1, #16896	; 0x4200
     3bc:	7270006b 	rsbsvc	r0, r0, #107	; 0x6b
     3c0:	5f737365 	svcpl	0x00737365
     3c4:	79617267 	stmdbvc	r1!, {r0, r1, r2, r5, r6, r9, ip, sp, lr}^
     3c8:	7469625f 	strbtvc	r6, [r9], #-607	; 0xfffffda1
     3cc:	6e690073 	mcrvs	0, 3, r0, cr9, cr3, {3}
     3d0:	665f7469 	ldrbvs	r7, [pc], -r9, ror #8
     3d4:	656d616c 	strbvs	r6, [sp, #-364]!	; 0xfffffe94
     3d8:	696e6100 	stmdbvs	lr!, {r8, sp, lr}^
     3dc:	6974616d 	ldmdbvs	r4!, {r0, r2, r3, r5, r6, r8, sp, lr}^
     3e0:	735f6e6f 	cmpvc	pc, #1776	; 0x6f0
     3e4:	64656570 	strbtvs	r6, [r5], #-1392	; 0xfffffa90
     3e8:	696e6100 	stmdbvs	lr!, {r8, sp, lr}^
     3ec:	6974616d 	ldmdbvs	r4!, {r0, r2, r3, r5, r6, r8, sp, lr}^
     3f0:	635f6e6f 	cmpvs	pc, #1776	; 0x6f0
     3f4:	746e756f 	strbtvc	r7, [lr], #-1391	; 0xfffffa91
     3f8:	6d007265 	sfmvs	f7, 4, [r0, #-404]	; 0xfffffe6c
     3fc:	74736e6f 	ldrbtvc	r6, [r3], #-3695	; 0xfffff191
     400:	624f7265 	subvs	r7, pc, #1342177286	; 0x50000006
     404:	6973006a 	ldmdbvs	r3!, {r1, r3, r5, r6}^
     408:	7974657a 	ldmdbvc	r4!, {r1, r3, r4, r5, r6, r8, sl, sp, lr}^
     40c:	74006570 	strvc	r6, [r0], #-1392	; 0xfffffa90
     410:	656c7469 	strbvs	r7, [ip, #-1129]!	; 0xfffffb97
     414:	6172675f 	cmnvs	r2, pc, asr r7
     418:	69625f79 	stmdbvs	r2!, {r0, r3, r4, r5, r6, r8, r9, sl, fp, ip, lr}^
     41c:	68007374 	stmdavs	r0, {r2, r4, r5, r6, r8, r9, ip, sp, lr}
     420:	00726961 	rsbseq	r6, r2, r1, ror #18
     424:	6d61476e 	stclvs	7, cr4, [r1, #-440]!	; 0xfffffe48
     428:	6a624f65 	bvs	18941c4 <startup-0x1e76be3c>
     42c:	73746365 	cmnvc	r4, #-1811939327	; 0x94000001
     430:	65727000 	ldrbvs	r7, [r2, #-0]!
     434:	6c5f7373 	mrrcvs	3, 7, r7, pc, cr3	; <UNPREDICTABLE>
     438:	74686769 	strbtvc	r6, [r8], #-1897	; 0xfffff897
     43c:	7469625f 	strbtvc	r6, [r9], #-607	; 0xfffffda1
     440:	6e690073 	mcrvs	0, 3, r0, cr9, cr3, {3}
     444:	725f7469 	subsvc	r7, pc, #1761607680	; 0x69000000
     448:	7265676f 	rsbvc	r6, r5, #29097984	; 0x1bc0000
     44c:	696f7000 	stmdbvs	pc!, {ip, sp, lr}^	; <UNPREDICTABLE>
     450:	7265746e 	rsbvc	r7, r5, #1845493760	; 0x6e000000
     454:	72700034 	rsbsvc	r0, r0, #52	; 0x34
     458:	49737365 	ldmdbmi	r3!, {r0, r2, r5, r6, r8, r9, ip, sp, lr}^
     45c:	6567616d 	strbvs	r6, [r7, #-365]!	; 0xfffffe93
     460:	616d6900 	cmnvs	sp, r0, lsl #18
     464:	00736567 	rsbseq	r6, r3, r7, ror #10
     468:	726f6873 	rsbvc	r6, pc, #7536640	; 0x730000
     46c:	65745f74 	ldrbvs	r5, [r4, #-3956]!	; 0xfffff08c
     470:	63007478 	movwvs	r7, #1144	; 0x478
     474:	65727275 	ldrbvs	r7, [r2, #-629]!	; 0xfffffd8b
     478:	665f746e 	ldrbvs	r7, [pc], -lr, ror #8
     47c:	656d6172 	strbvs	r6, [sp, #-370]!	; 0xfffffe8e
     480:	74697400 	strbtvc	r7, [r9], #-1024	; 0xfffffc00
     484:	694c656c 	stmdbvs	ip, {r2, r3, r5, r6, r8, sl, sp, lr}^
     488:	00746867 	rsbseq	r6, r4, r7, ror #16
     48c:	706d6574 	rsbvc	r6, sp, r4, ror r5
     490:	73657250 	cmnvc	r5, #80, 4
     494:	61724773 	cmnvs	r2, r3, ror r7
     498:	6f6d0079 	svcvs	0x006d0079
     49c:	6574736e 	ldrbvs	r7, [r4, #-878]!	; 0xfffffc92
     4a0:	696f5072 	stmdbvs	pc!, {r1, r4, r5, r6, ip, lr}^	; <UNPREDICTABLE>
     4a4:	7265746e 	rsbvc	r7, r5, #1845493760	; 0x6e000000
     4a8:	696e6900 	stmdbvs	lr!, {r8, fp, sp, lr}^
     4ac:	72705374 	rsbsvc	r5, r0, #116, 6	; 0xd0000001
     4b0:	73657469 	cmnvc	r5, #1761607680	; 0x69000000
     4b4:	6d657400 	cfstrdvs	mvd7, [r5, #-0]
     4b8:	73614370 	cmnvc	r1, #112, 6	; 0xc0000001
     4bc:	47656c74 			; <UNDEFINED> instruction: 0x47656c74
     4c0:	00796172 	rsbseq	r6, r9, r2, ror r1
     4c4:	706d6574 	rsbvc	r6, sp, r4, ror r5
     4c8:	6c746954 			; <UNDEFINED> instruction: 0x6c746954
     4cc:	616c4265 	cmnvs	ip, r5, ror #4
     4d0:	75006b63 	strvc	r6, [r0, #-2915]	; 0xfffff49d
     4d4:	6769736e 	strbvs	r7, [r9, -lr, ror #6]!
     4d8:	2064656e 	rsbcs	r6, r4, lr, ror #10
     4dc:	72616863 	rsbvc	r6, r1, #6488064	; 0x630000
     4e0:	61726400 	cmnvs	r2, r0, lsl #8
     4e4:	75625f77 	strbvc	r5, [r2, #-3959]!	; 0xfffff089
     4e8:	72656666 	rsbvc	r6, r5, #106954752	; 0x6600000
     4ec:	616c625f 	cmnvs	ip, pc, asr r2
     4f0:	675f6b63 	ldrbvs	r6, [pc, -r3, ror #22]
     4f4:	00796172 	rsbseq	r6, r9, r2, ror r1
     4f8:	736e6f6d 	cmnvc	lr, #436	; 0x1b4
     4fc:	5f726574 	svcpl	0x00726574
     500:	6867696c 	stmdavs	r7!, {r2, r3, r5, r6, r8, fp, sp, lr}^
     504:	69625f74 	stmdbvs	r2!, {r2, r4, r5, r6, r8, r9, sl, fp, ip, lr}^
     508:	63007374 	movwvs	r7, #884	; 0x374
     50c:	6c747361 	ldclvs	3, cr7, [r4], #-388	; 0xfffffe7c
     510:	6c625f65 	stclvs	15, cr5, [r2], #-404	; 0xfffffe6c
     514:	5f6b6361 	svcpl	0x006b6361
     518:	73746962 	cmnvc	r4, #1605632	; 0x188000
     51c:	74697400 	strbtvc	r7, [r9], #-1024	; 0xfffffc00
     520:	624f656c 	subvs	r6, pc, #108, 10	; 0x1b000000
     524:	3a43006a 	bcc	10c06d4 <startup-0x1ef3f92c>
     528:	706f6d2f 	rsbvc	r6, pc, pc, lsr #26
     52c:	4d2f632f 	stcmi	3, cr6, [pc, #-188]!	; 478 <startup-0x1ffffb88>
     530:	616c706f 	cmnvs	ip, pc, rrx
     534:	61726f62 	cmnvs	r2, r2, ror #30
     538:	6e6f6974 			; <UNDEFINED> instruction: 0x6e6f6974
     53c:	442f7265 	strtmi	r7, [pc], #-613	; 544 <startup-0x1ffffabc>
     540:	2d735049 	ldclcs	0, cr5, [r3, #-292]!	; 0xfffffedc
     544:	63746957 	cmnvs	r4, #1425408	; 0x15c000
     548:	2f432f68 	svccs	0x00432f68
     54c:	72617473 	rsbvc	r7, r1, #1929379840	; 0x73000000
     550:	2e707574 	mrccs	5, 3, r7, cr0, cr4, {3}
     554:	61670063 	cmnvs	r7, r3, rrx
     558:	624f656d 	subvs	r6, pc, #457179136	; 0x1b400000
     55c:	7463656a 	strbtvc	r6, [r3], #-1386	; 0xfffffa96
     560:	61630073 	smcvs	12291	; 0x3003
     564:	656c7473 	strbvs	r7, [ip, #-1139]!	; 0xfffffb8d
     568:	79617247 	stmdbvc	r1!, {r0, r1, r2, r6, r9, ip, sp, lr}^
     56c:	6e6f6d00 	cdpvs	13, 6, cr6, cr15, cr0, {0}
     570:	72657473 	rsbvc	r7, r5, #1929379840	; 0x73000000
     574:	79617247 	stmdbvc	r1!, {r0, r1, r2, r6, r9, ip, sp, lr}^
     578:	74697400 	strbtvc	r7, [r9], #-1024	; 0xfffffc00
     57c:	7247656c 	subvc	r6, r7, #108, 10	; 0x1b000000
     580:	44007961 	strmi	r7, [r0], #-2401	; 0xfffff69f
     584:	625f5049 	subsvs	r5, pc, #73	; 0x49
     588:	656e7275 	strbvs	r7, [lr, #-629]!	; 0xfffffd8b
     58c:	75630064 	strbvc	r0, [r3, #-100]!	; 0xffffff9c
     590:	6e657272 	mcrvs	2, 3, r7, cr5, cr2, {3}
     594:	63735f74 	cmnvs	r3, #116, 30	; 0x1d0
     598:	6e656572 	mcrvs	5, 3, r6, cr5, cr2, {3}
     59c:	73696400 	cmnvc	r9, #0, 8
     5a0:	636e6174 	cmnvs	lr, #116, 2
     5a4:	6c705f65 	ldclvs	15, cr5, [r0], #-404	; 0xfffffe6c
     5a8:	72657961 	rsbvc	r7, r5, #1589248	; 0x184000
     5ac:	7269665f 	rsbvc	r6, r9, #99614720	; 0x5f00000
     5b0:	65740065 	ldrbvs	r0, [r4, #-101]!	; 0xffffff9b
     5b4:	7250706d 	subsvc	r7, r0, #109	; 0x6d
     5b8:	42737365 	rsbsmi	r7, r3, #-1811939327	; 0x94000001
     5bc:	6b63616c 	blvs	18d8b74 <startup-0x1e72748c>
     5c0:	5f676200 	svcpl	0x00676200
     5c4:	73746962 	cmnvc	r4, #1605632	; 0x188000
     5c8:	616c6200 	cmnvs	ip, r0, lsl #4
     5cc:	6d496b63 	vstrvs	d22, [r9, #-396]	; 0xfffffe74
     5d0:	00656761 	rsbeq	r6, r5, r1, ror #14
     5d4:	736e6f6d 	cmnvc	lr, #436	; 0x1b4
     5d8:	5f726574 	svcpl	0x00726574
     5dc:	79617267 	stmdbvc	r1!, {r0, r1, r2, r5, r6, r9, ip, sp, lr}^
     5e0:	7469625f 	strbtvc	r6, [r9], #-607	; 0xfffffda1
     5e4:	61630073 	smcvs	12291	; 0x3003
     5e8:	656c7473 	strbvs	r7, [ip, #-1139]!	; 0xfffffb8d
     5ec:	67616d49 	strbvs	r6, [r1, -r9, asr #26]!
     5f0:	69660065 	stmdbvs	r6!, {r0, r2, r5, r6}^
     5f4:	00747372 	rsbseq	r7, r4, r2, ror r3
     5f8:	6c746974 			; <UNDEFINED> instruction: 0x6c746974
     5fc:	616d4965 	cmnvs	sp, r5, ror #18
     600:	00736567 	rsbseq	r6, r3, r7, ror #10
     604:	646e6172 	strbtvs	r6, [lr], #-370	; 0xfffffe8e
     608:	735f6d6f 	cmpvc	pc, #7104	; 0x1bc0
     60c:	00646565 	rsbeq	r6, r4, r5, ror #10
     610:	65726966 	ldrbvs	r6, [r2, #-2406]!	; 0xfffff69a
     614:	69660032 	stmdbvs	r6!, {r1, r4, r5}^
     618:	00336572 	eorseq	r6, r3, r2, ror r5
     61c:	65726966 	ldrbvs	r6, [r2, #-2406]!	; 0xfffff69a
     620:	72700034 	rsbsvc	r0, r0, #52	; 0x34
     624:	42737365 	rsbsmi	r7, r3, #-1811939327	; 0x94000001
     628:	6b63616c 	blvs	18d8be0 <startup-0x1e727420>
     62c:	6e6f6d00 	cdpvs	13, 6, cr6, cr15, cr0, {0}
     630:	72657473 	rsbvc	r7, r5, #1929379840	; 0x73000000
     634:	67616d49 	strbvs	r6, [r1, -r9, asr #26]!
     638:	50790065 	rsbspl	r0, r9, r5, rrx
     63c:	6c00736f 	stcvs	3, cr7, [r0], {111}	; 0x6f
     640:	5f747361 	svcpl	0x00747361
     644:	6d696c63 	stclvs	12, cr6, [r9, #-396]!	; 0xfffffe74
     648:	61765f62 	cmnvs	r6, r2, ror #30
     64c:	0065756c 	rsbeq	r7, r5, ip, ror #10
     650:	74786574 	ldrbtvc	r6, [r8], #-1396	; 0xfffffa8c
     654:	74003231 	strvc	r3, [r0], #-561	; 0xfffffdcf
     658:	54706d65 	ldrbtpl	r6, [r0], #-3429	; 0xfffff29b
     65c:	656c7469 	strbvs	r7, [ip, #-1129]!	; 0xfffffb97
     660:	6867694c 	stmdavs	r7!, {r2, r3, r6, r8, fp, sp, lr}^
     664:	70750074 	rsbsvc	r0, r5, r4, ror r0
     668:	65746164 	ldrbvs	r6, [r4, #-356]!	; 0xfffffe9c
     66c:	5f6f6e00 	svcpl	0x006f6e00
     670:	00504944 	subseq	r4, r0, r4, asr #18
     674:	73657270 	cmnvc	r5, #112, 4
     678:	616d4973 	smcvs	54419	; 0xd493
     67c:	00736567 	rsbseq	r6, r3, r7, ror #10
     680:	6c707865 	ldclvs	8, cr7, [r0], #-404	; 0xfffffe6c
     684:	6e69646f 	cdpvs	4, 6, cr6, cr9, cr15, {3}
     688:	65740067 	ldrbvs	r0, [r4, #-103]!	; 0xffffff99
     68c:	6954706d 	ldmdbvs	r4, {r0, r2, r3, r5, r6, ip, sp, lr}^
     690:	47656c74 			; <UNDEFINED> instruction: 0x47656c74
     694:	00796172 	rsbseq	r6, r9, r2, ror r1
     698:	6f6c5374 	svcvs	0x006c5374
     69c:	78655477 	stmdavc	r5!, {r0, r1, r2, r4, r5, r6, sl, ip, lr}^
     6a0:	69750074 	ldmdbvs	r5!, {r2, r4, r5, r6}^
     6a4:	5f38746e 	svcpl	0x0038746e
     6a8:	69660074 	stmdbvs	r6!, {r2, r4, r5, r6}^
     6ac:	00736572 	rsbseq	r6, r3, r2, ror r5
     6b0:	6b636162 	blvs	18d8c40 <startup-0x1e7273c0>
     6b4:	66667542 	strbtvs	r7, [r6], -r2, asr #10
     6b8:	694c7265 	stmdbvs	ip, {r0, r2, r5, r6, r9, ip, sp, lr}^
     6bc:	00746867 	rsbseq	r6, r4, r7, ror #16
     6c0:	6b636162 	blvs	18d8c50 <startup-0x1e7273b0>
     6c4:	66667542 	strbtvs	r7, [r6], -r2, asr #10
     6c8:	72477265 	subvc	r7, r7, #1342177286	; 0x50000006
     6cc:	74007961 	strvc	r7, [r0], #-2401	; 0xfffff69f
     6d0:	50706d65 	rsbspl	r6, r0, r5, ror #26
     6d4:	73736572 	cmnvc	r3, #478150656	; 0x1c800000
     6d8:	6867694c 	stmdavs	r7!, {r2, r3, r6, r8, fp, sp, lr}^
     6dc:	47740074 			; <UNDEFINED> instruction: 0x47740074
     6e0:	4f656d61 	svcmi	0x00656d61
     6e4:	63656a62 	cmnvs	r5, #401408	; 0x62000
     6e8:	50780074 	rsbspl	r0, r8, r4, ror r0
     6ec:	6300736f 	movwvs	r7, #879	; 0x36f
     6f0:	6c747361 	ldclvs	3, cr7, [r4], #-388	; 0xfffffe7c
     6f4:	616c4265 	cmnvs	ip, r5, ror #4
     6f8:	67006b63 	strvs	r6, [r0, -r3, ror #22]
     6fc:	5f656d61 	svcpl	0x00656d61
     700:	7265766f 	rsbvc	r7, r5, #116391936	; 0x6f00000
     704:	6464615f 	strbtvs	r6, [r4], #-351	; 0xfffffea1
     708:	74007265 	strvc	r7, [r0], #-613	; 0xfffffd9b
     70c:	31747865 	cmncc	r4, r5, ror #16
     710:	65740030 	ldrbvs	r0, [r4, #-48]!	; 0xffffffd0
     714:	31317478 	teqcc	r1, r8, ror r4
     718:	69656800 	stmdbvs	r5!, {fp, sp, lr}^
     71c:	00746867 	rsbseq	r6, r4, r7, ror #16
     720:	6e69616d 	powvsez	f6, f1, #5.0
     724:	65727000 	ldrbvs	r7, [r2, #-0]!
     728:	694c7373 	stmdbvs	ip, {r0, r1, r4, r5, r6, r8, r9, ip, sp, lr}^
     72c:	00746867 	rsbseq	r6, r4, r7, ror #16
     730:	736e6f6d 	cmnvc	lr, #436	; 0x1b4
     734:	49726574 	ldmdbmi	r2!, {r2, r4, r5, r6, r8, sl, sp, lr}^
     738:	6567616d 	strbvs	r6, [r7, #-365]!	; 0xfffffe93
     73c:	61670073 	smcvs	28675	; 0x7003
     740:	624f656d 	subvs	r6, pc, #457179136	; 0x1b400000
     744:	7463656a 	strbtvc	r6, [r3], #-1386	; 0xfffffa96
     748:	61647055 	qdsubvs	r7, r5, r4
     74c:	43006574 	movwmi	r6, #1396	; 0x574
     750:	6f6d2f3a 	svcvs	0x006d2f3a
     754:	2f632f70 	svccs	0x00632f70
     758:	6c706f4d 	ldclvs	15, cr6, [r0], #-308	; 0xfffffecc
     75c:	726f6261 	rsbvc	r6, pc, #268435462	; 0x10000006
     760:	6f697461 	svcvs	0x00697461
     764:	2f72656e 	svccs	0x0072656e
     768:	73504944 	cmpvc	r0, #68, 18	; 0x110000
     76c:	7469572d 	strbtvc	r5, [r9], #-1837	; 0xfffff8d3
     770:	432f6863 			; <UNDEFINED> instruction: 0x432f6863
     774:	6d61672f 	stclvs	7, cr6, [r1, #-188]!	; 0xffffff44
     778:	6a626f65 	bvs	189c514 <startup-0x1e763aec>
     77c:	2e746365 	cdpcs	3, 7, cr6, cr4, cr5, {3}
     780:	68740063 	ldmdavs	r4!, {r0, r1, r5, r6}^
     784:	66007369 	strvs	r7, [r0], -r9, ror #6
     788:	35657269 	strbcc	r7, [r5, #-617]!	; 0xfffffd97
     78c:	79617247 	stmdbvc	r1!, {r0, r1, r2, r6, r9, ip, sp, lr}^
     790:	72696600 	rsbvc	r6, r9, #0, 12
     794:	72473165 	subvc	r3, r7, #1073741849	; 0x40000019
     798:	74007961 	strvc	r7, [r0], #-2401	; 0xfffff69f
     79c:	46706d65 	ldrbtmi	r6, [r0], -r5, ror #26
     7a0:	32657269 	rsbcc	r7, r5, #-1879048186	; 0x90000006
     7a4:	79617247 	stmdbvc	r1!, {r0, r1, r2, r6, r9, ip, sp, lr}^
     7a8:	72696600 	rsbvc	r6, r9, #0, 12
     7ac:	72473365 	subvc	r3, r7, #-1811939327	; 0x94000001
     7b0:	74007961 	strvc	r7, [r0], #-2401	; 0xfffff69f
     7b4:	46706d65 	ldrbtmi	r6, [r0], -r5, ror #26
     7b8:	34657269 	strbtcc	r7, [r5], #-617	; 0xfffffd97
     7bc:	79617247 	stmdbvc	r1!, {r0, r1, r2, r6, r9, ip, sp, lr}^
     7c0:	72696600 	rsbvc	r6, r9, #0, 12
     7c4:	616c4265 	cmnvs	ip, r5, ror #4
     7c8:	74006b63 	strvc	r6, [r0], #-2915	; 0xfffff49d
     7cc:	46706d65 	ldrbtmi	r6, [r0], -r5, ror #26
     7d0:	33657269 	cmncc	r5, #-1879048186	; 0x90000006
     7d4:	79617247 	stmdbvc	r1!, {r0, r1, r2, r6, r9, ip, sp, lr}^
     7d8:	6d657400 	cfstrdvs	mvd7, [r5, #-0]
     7dc:	72694670 	rsbvc	r4, r9, #112, 12	; 0x7000000
     7e0:	616c4265 	cmnvs	ip, r5, ror #4
     7e4:	66006b63 	strvs	r6, [r0], -r3, ror #22
     7e8:	31657269 	cmncc	r5, r9, ror #4
     7ec:	6867694c 	stmdavs	r7!, {r2, r3, r6, r8, fp, sp, lr}^
     7f0:	69660074 	stmdbvs	r6!, {r2, r4, r5, r6}^
     7f4:	4c346572 	cfldr32mi	mvfx6, [r4], #-456	; 0xfffffe38
     7f8:	74686769 	strbtvc	r6, [r8], #-1897	; 0xfffff897
     7fc:	72696600 	rsbvc	r6, r9, #0, 12
     800:	675f3265 	ldrbvs	r3, [pc, -r5, ror #4]
     804:	5f796172 	svcpl	0x00796172
     808:	73746962 	cmnvc	r4, #1605632	; 0x188000
     80c:	72696600 	rsbvc	r6, r9, #0, 12
     810:	6c5f3465 	cfldrdvs	mvd3, [pc], {101}	; 0x65
     814:	74686769 	strbtvc	r6, [r8], #-1897	; 0xfffff897
     818:	7469625f 	strbtvc	r6, [r9], #-607	; 0xfffffda1
     81c:	69660073 	stmdbvs	r6!, {r0, r1, r4, r5, r6}^
     820:	4c336572 	cfldr32mi	mvfx6, [r3], #-456	; 0xfffffe38
     824:	74686769 	strbtvc	r6, [r8], #-1897	; 0xfffff897
     828:	696f7000 	stmdbvs	pc!, {ip, sp, lr}^	; <UNPREDICTABLE>
     82c:	7265746e 	rsbvc	r7, r5, #1845493760	; 0x6e000000
     830:	6f700031 	svcvs	0x00700031
     834:	65746e69 	ldrbvs	r6, [r4, #-3689]!	; 0xfffff197
     838:	66003372 			; <UNDEFINED> instruction: 0x66003372
     83c:	35657269 	strbcc	r7, [r5, #-617]!	; 0xfffffd97
     840:	6172675f 	cmnvs	r2, pc, asr r7
     844:	69625f79 	stmdbvs	r2!, {r0, r3, r4, r5, r6, r8, r9, sl, fp, ip, lr}^
     848:	66007374 			; <UNDEFINED> instruction: 0x66007374
     84c:	33657269 	cmncc	r5, #-1879048186	; 0x90000006
     850:	67616d49 	strbvs	r6, [r1, -r9, asr #26]!
     854:	6f700065 	svcvs	0x00700065
     858:	65746e69 	ldrbvs	r6, [r4, #-3689]!	; 0xfffff197
     85c:	66003072 			; <UNDEFINED> instruction: 0x66003072
     860:	35657269 	strbcc	r7, [r5, #-617]!	; 0xfffffd97
     864:	6867694c 	stmdavs	r7!, {r2, r3, r6, r8, fp, sp, lr}^
     868:	6f700074 	svcvs	0x00700074
     86c:	65746e69 	ldrbvs	r6, [r4, #-3689]!	; 0xfffff197
     870:	74003272 	strvc	r3, [r0], #-626	; 0xfffffd8e
     874:	46706d65 	ldrbtmi	r6, [r0], -r5, ror #26
     878:	35657269 	strbcc	r7, [r5, #-617]!	; 0xfffffd97
     87c:	79617247 	stmdbvc	r1!, {r0, r1, r2, r6, r9, ip, sp, lr}^
     880:	72696600 	rsbvc	r6, r9, #0, 12
     884:	675f3165 	ldrbvs	r3, [pc, -r5, ror #2]
     888:	5f796172 	svcpl	0x00796172
     88c:	73746962 	cmnvc	r4, #1605632	; 0x188000
     890:	72696600 	rsbvc	r6, r9, #0, 12
     894:	694c3265 	stmdbvs	ip, {r0, r2, r5, r6, r9, ip, sp}^
     898:	00746867 	rsbseq	r6, r4, r7, ror #16
     89c:	65726966 	ldrbvs	r6, [r2, #-2406]!	; 0xfffff69a
     8a0:	696c5f31 	stmdbvs	ip!, {r0, r4, r5, r8, r9, sl, fp, ip, lr}^
     8a4:	5f746867 	svcpl	0x00746867
     8a8:	73746962 	cmnvc	r4, #1605632	; 0x188000
     8ac:	72696600 	rsbvc	r6, r9, #0, 12
     8b0:	6c5f3265 	lfmvs	f3, 2, [pc], {101}	; 0x65
     8b4:	74686769 	strbtvc	r6, [r8], #-1897	; 0xfffff897
     8b8:	7469625f 	strbtvc	r6, [r9], #-607	; 0xfffffda1
     8bc:	69660073 	stmdbvs	r6!, {r0, r1, r4, r5, r6}^
     8c0:	624f6572 	subvs	r6, pc, #478150656	; 0x1c800000
     8c4:	6966006a 	stmdbvs	r6!, {r1, r3, r5, r6}^
     8c8:	47326572 			; <UNDEFINED> instruction: 0x47326572
     8cc:	00796172 	rsbseq	r6, r9, r2, ror r1
     8d0:	65726966 	ldrbvs	r6, [r2, #-2406]!	; 0xfffff69a
     8d4:	72675f34 	rsbvc	r5, r7, #52, 30	; 0xd0
     8d8:	625f7961 	subsvs	r7, pc, #1589248	; 0x184000
     8dc:	00737469 	rsbseq	r7, r3, r9, ror #8
     8e0:	706d6574 	rsbvc	r6, sp, r4, ror r5
     8e4:	65726946 	ldrbvs	r6, [r2, #-2374]!	; 0xfffff6ba
     8e8:	67694c33 			; <UNDEFINED> instruction: 0x67694c33
     8ec:	66007468 	strvs	r7, [r0], -r8, ror #8
     8f0:	34657269 	strbtcc	r7, [r5], #-617	; 0xfffffd97
     8f4:	67616d49 	strbvs	r6, [r1, -r9, asr #26]!
     8f8:	65740065 	ldrbvs	r0, [r4, #-101]!	; 0xffffff9b
     8fc:	6946706d 	stmdbvs	r6, {r0, r2, r3, r5, r6, ip, sp, lr}^
     900:	4c316572 	cfldr32mi	mvfx6, [r1], #-456	; 0xfffffe38
     904:	74686769 	strbtvc	r6, [r8], #-1897	; 0xfffff897
     908:	72696600 	rsbvc	r6, r9, #0, 12
     90c:	69547473 	ldmdbvs	r4, {r0, r1, r4, r5, r6, sl, ip, sp, lr}^
     910:	6900656d 	stmdbvs	r0, {r0, r2, r3, r5, r6, r8, sl, sp, lr}
     914:	5f74696e 	svcpl	0x0074696e
     918:	65726966 	ldrbvs	r6, [r2, #-2406]!	; 0xfffff69a
     91c:	72696600 	rsbvc	r6, r9, #0, 12
     920:	6c5f3565 	cfldr64vs	mvdx3, [pc], {101}	; 0x65
     924:	74686769 	strbtvc	r6, [r8], #-1897	; 0xfffff897
     928:	7469625f 	strbtvc	r6, [r9], #-607	; 0xfffffda1
     92c:	69660073 	stmdbvs	r6!, {r0, r1, r4, r5, r6}^
     930:	6d496572 	cfstr64vs	mvdx6, [r9, #-456]	; 0xfffffe38
     934:	73656761 	cmnvc	r5, #25427968	; 0x1840000
     938:	72696600 	rsbvc	r6, r9, #0, 12
     93c:	6d493165 	stfvse	f3, [r9, #-404]	; 0xfffffe6c
     940:	00656761 	rsbeq	r6, r5, r1, ror #14
     944:	65726966 	ldrbvs	r6, [r2, #-2406]!	; 0xfffff69a
     948:	61724734 	cmnvs	r2, r4, lsr r7
     94c:	65740079 	ldrbvs	r0, [r4, #-121]!	; 0xffffff87
     950:	6946706d 	stmdbvs	r6, {r0, r2, r3, r5, r6, ip, sp, lr}^
     954:	47316572 			; <UNDEFINED> instruction: 0x47316572
     958:	00796172 	rsbseq	r6, r9, r2, ror r1
     95c:	706d6574 	rsbvc	r6, sp, r4, ror r5
     960:	65726946 	ldrbvs	r6, [r2, #-2374]!	; 0xfffff6ba
     964:	67694c34 			; <UNDEFINED> instruction: 0x67694c34
     968:	66007468 	strvs	r7, [r0], -r8, ror #8
     96c:	33657269 	cmncc	r5, #-1879048186	; 0x90000006
     970:	67696c5f 			; <UNDEFINED> instruction: 0x67696c5f
     974:	625f7468 	subsvs	r7, pc, #104, 8	; 0x68000000
     978:	00737469 	rsbseq	r7, r3, r9, ror #8
     97c:	65726966 	ldrbvs	r6, [r2, #-2406]!	; 0xfffff69a
     980:	616d4935 	cmnvs	sp, r5, lsr r9
     984:	66006567 	strvs	r6, [r0], -r7, ror #10
     988:	5f657269 	svcpl	0x00657269
     98c:	63616c62 	cmnvs	r1, #25088	; 0x6200
     990:	5f325f6b 	svcpl	0x00325f6b
     994:	73746962 	cmnvc	r4, #1605632	; 0x188000
     998:	6d657400 	cfstrdvs	mvd7, [r5, #-0]
     99c:	72694670 	rsbvc	r4, r9, #112, 12	; 0x7000000
     9a0:	694c3265 	stmdbvs	ip, {r0, r2, r5, r6, r9, ip, sp}^
     9a4:	00746867 	rsbseq	r6, r4, r7, ror #16
     9a8:	65726966 	ldrbvs	r6, [r2, #-2406]!	; 0xfffff69a
     9ac:	616d4932 	cmnvs	sp, r2, lsr r9
     9b0:	74006567 	strvc	r6, [r0], #-1383	; 0xfffffa99
     9b4:	46706d65 	ldrbtmi	r6, [r0], -r5, ror #26
     9b8:	35657269 	strbcc	r7, [r5, #-617]!	; 0xfffffd97
     9bc:	6867694c 	stmdavs	r7!, {r2, r3, r6, r8, fp, sp, lr}^
     9c0:	3a430074 	bcc	10c0b98 <startup-0x1ef3f468>
     9c4:	706f6d2f 	rsbvc	r6, pc, pc, lsr #26
     9c8:	4d2f632f 	stcmi	3, cr6, [pc, #-188]!	; 914 <startup-0x1ffff6ec>
     9cc:	616c706f 	cmnvs	ip, pc, rrx
     9d0:	61726f62 	cmnvs	r2, r2, ror #30
     9d4:	6e6f6974 			; <UNDEFINED> instruction: 0x6e6f6974
     9d8:	442f7265 	strtmi	r7, [pc], #-613	; 9e0 <startup-0x1ffff620>
     9dc:	2d735049 	ldclcs	0, cr5, [r3, #-292]!	; 0xfffffedc
     9e0:	63746957 	cmnvs	r4, #1425408	; 0x15c000
     9e4:	2f432f68 	svccs	0x00432f68
     9e8:	65726966 	ldrbvs	r6, [r2, #-2406]!	; 0xfffff69a
     9ec:	6600632e 	strvs	r6, [r0], -lr, lsr #6
     9f0:	33657269 	cmncc	r5, #-1879048186	; 0x90000006
     9f4:	6172675f 	cmnvs	r2, pc, asr r7
     9f8:	69625f79 	stmdbvs	r2!, {r0, r3, r4, r5, r6, r8, r9, sl, fp, ip, lr}^
     9fc:	6c007374 	stcvs	3, cr7, [r0], {116}	; 0x74
     a00:	52747361 	rsbspl	r7, r4, #-2080374783	; 0x84000001
     a04:	74686769 	strbtvc	r6, [r8], #-1897	; 0xfffff897
     a08:	756c6156 	strbvc	r6, [ip, #-342]!	; 0xfffffeaa
     a0c:	616c0065 	cmnvs	ip, r5, rrx
     a10:	754a7473 	strbvc	r7, [sl, #-1139]	; 0xfffffb8d
     a14:	6156706d 	cmpvs	r6, sp, rrx
     a18:	0065756c 	rsbeq	r7, r5, ip, ror #10
     a1c:	65705379 	ldrbvs	r5, [r0, #-889]!	; 0xfffffc87
     a20:	78006465 	stmdavc	r0, {r0, r2, r5, r6, sl, sp, lr}
     a24:	65657053 	strbvs	r7, [r5, #-83]!	; 0xffffffad
     a28:	616c0064 	cmnvs	ip, r4, rrx
     a2c:	654c7473 	strbvs	r7, [ip, #-1139]	; 0xfffffb8d
     a30:	61567466 	cmpvs	r6, r6, ror #8
     a34:	0065756c 	rsbeq	r7, r5, ip, ror #10
     a38:	6d2f3a43 	vstmdbvs	pc!, {s6-s72}
     a3c:	632f706f 			; <UNDEFINED> instruction: 0x632f706f
     a40:	706f4d2f 	rsbvc	r4, pc, pc, lsr #26
     a44:	6f62616c 	svcvs	0x0062616c
     a48:	69746172 	ldmdbvs	r4!, {r1, r4, r5, r6, r8, sp, lr}^
     a4c:	72656e6f 	rsbvc	r6, r5, #1776	; 0x6f0
     a50:	5049442f 	subpl	r4, r9, pc, lsr #8
     a54:	69572d73 	ldmdbvs	r7, {r0, r1, r4, r5, r6, r8, sl, fp, sp}^
     a58:	2f686374 	svccs	0x00686374
     a5c:	6c702f43 	ldclvs	15, cr2, [r0], #-268	; 0xfffffef4
     a60:	72657961 	rsbvc	r7, r5, #1589248	; 0x184000
     a64:	7000632e 	andvc	r6, r0, lr, lsr #6
     a68:	6579616c 	ldrbvs	r6, [r9, #-364]!	; 0xfffffe94
     a6c:	64705572 	ldrbtvs	r5, [r0], #-1394	; 0xfffffa8e
     a70:	00657461 	rsbeq	r7, r5, r1, ror #8
     a74:	706d6574 	rsbvc	r6, sp, r4, ror r5
     a78:	64726942 	ldrbtvs	r6, [r2], #-2370	; 0xfffff6be
     a7c:	67694c32 			; <UNDEFINED> instruction: 0x67694c32
     a80:	62007468 	andvs	r7, r0, #104, 8	; 0x68000000
     a84:	33647269 	cmncc	r4, #-1879048186	; 0x90000006
     a88:	67696c5f 			; <UNDEFINED> instruction: 0x67696c5f
     a8c:	625f7468 	subsvs	r7, pc, #104, 8	; 0x68000000
     a90:	00737469 	rsbseq	r7, r3, r9, ror #8
     a94:	64726962 	ldrbtvs	r6, [r2], #-2402	; 0xfffff69e
     a98:	616d4934 	cmnvs	sp, r4, lsr r9
     a9c:	62006567 	andvs	r6, r0, #432013312	; 0x19c00000
     aa0:	34647269 	strbtcc	r7, [r4], #-617	; 0xfffffd97
     aa4:	67696c5f 			; <UNDEFINED> instruction: 0x67696c5f
     aa8:	625f7468 	subsvs	r7, pc, #104, 8	; 0x68000000
     aac:	00737469 	rsbseq	r7, r3, r9, ror #8
     ab0:	706d6574 	rsbvc	r6, sp, r4, ror r5
     ab4:	64726942 	ldrbtvs	r6, [r2], #-2370	; 0xfffff6be
     ab8:	67694c35 			; <UNDEFINED> instruction: 0x67694c35
     abc:	70007468 	andvc	r7, r0, r8, ror #8
     ac0:	746e696f 	strbtvc	r6, [lr], #-2415	; 0xfffff691
     ac4:	34317265 	ldrtcc	r7, [r1], #-613	; 0xfffffd9b
     ac8:	72696200 	rsbvc	r6, r9, #0, 4
     acc:	6c5f3564 	cfldr64vs	mvdx3, [pc], {100}	; 0x64
     ad0:	74686769 	strbtvc	r6, [r8], #-1897	; 0xfffff897
     ad4:	7469625f 	strbtvc	r6, [r9], #-607	; 0xfffffda1
     ad8:	69620073 	stmdbvs	r2!, {r0, r1, r4, r5, r6}^
     adc:	4c336472 	cfldrsmi	mvf6, [r3], #-456	; 0xfffffe38
     ae0:	74686769 	strbtvc	r6, [r8], #-1897	; 0xfffff897
     ae4:	696f7000 	stmdbvs	pc!, {ip, sp, lr}^	; <UNPREDICTABLE>
     ae8:	7265746e 	rsbvc	r7, r5, #1845493760	; 0x6e000000
     aec:	62003931 	andvs	r3, r0, #802816	; 0xc4000
     af0:	31647269 	cmncc	r4, r9, ror #4
     af4:	6867694c 	stmdavs	r7!, {r2, r3, r6, r8, fp, sp, lr}^
     af8:	69620074 	stmdbvs	r2!, {r2, r4, r5, r6}^
     afc:	42336472 	eorsmi	r6, r3, #1912602624	; 0x72000000
     b00:	6b63616c 	blvs	18d90b8 <startup-0x1e726f48>
     b04:	72696200 	rsbvc	r6, r9, #0, 4
     b08:	72473164 	subvc	r3, r7, #100, 2
     b0c:	74007961 	strvc	r7, [r0], #-2401	; 0xfffff69f
     b10:	42706d65 	rsbsmi	r6, r0, #6464	; 0x1940
     b14:	34647269 	strbtcc	r7, [r4], #-617	; 0xfffffd97
     b18:	63616c42 	cmnvs	r1, #16896	; 0x4200
     b1c:	6962006b 	stmdbvs	r2!, {r0, r1, r3, r5, r6}^
     b20:	42356472 	eorsmi	r6, r5, #1912602624	; 0x72000000
     b24:	6b63616c 	blvs	18d90dc <startup-0x1e726f24>
     b28:	696f7000 	stmdbvs	pc!, {ip, sp, lr}^	; <UNPREDICTABLE>
     b2c:	7265746e 	rsbvc	r7, r5, #1845493760	; 0x6e000000
     b30:	70003032 	andvc	r3, r0, r2, lsr r0
     b34:	746e696f 	strbtvc	r6, [lr], #-2415	; 0xfffff691
     b38:	31327265 	teqcc	r2, r5, ror #4
     b3c:	72696200 	rsbvc	r6, r9, #0, 4
     b40:	72473464 	subvc	r3, r7, #100, 8	; 0x64000000
     b44:	62007961 	andvs	r7, r0, #1589248	; 0x184000
     b48:	32647269 	rsbcc	r7, r4, #-1879048186	; 0x90000006
     b4c:	63616c42 	cmnvs	r1, #16896	; 0x4200
     b50:	6f70006b 	svcvs	0x0070006b
     b54:	65746e69 	ldrbvs	r6, [r4, #-3689]!	; 0xfffff197
     b58:	00343272 	eorseq	r3, r4, r2, ror r2
     b5c:	6e696f70 	mcrvs	15, 3, r6, cr9, cr0, {3}
     b60:	31726574 	cmncc	r2, r4, ror r5
     b64:	65740036 	ldrbvs	r0, [r4, #-54]!	; 0xffffffca
     b68:	6942706d 	stmdbvs	r2, {r0, r2, r3, r5, r6, ip, sp, lr}^
     b6c:	47326472 			; <UNDEFINED> instruction: 0x47326472
     b70:	00796172 	rsbseq	r6, r9, r2, ror r1
     b74:	706d6574 	rsbvc	r6, sp, r4, ror r5
     b78:	64726942 	ldrbtvs	r6, [r2], #-2370	; 0xfffff6be
     b7c:	61724734 	cmnvs	r2, r4, lsr r7
     b80:	65740079 	ldrbvs	r0, [r4, #-121]!	; 0xffffff87
     b84:	6942706d 	stmdbvs	r2, {r0, r2, r3, r5, r6, ip, sp, lr}^
     b88:	694c6472 	stmdbvs	ip, {r1, r4, r5, r6, sl, sp, lr}^
     b8c:	00746867 	rsbseq	r6, r4, r7, ror #16
     b90:	706d6574 	rsbvc	r6, sp, r4, ror r5
     b94:	64726942 	ldrbtvs	r6, [r2], #-2370	; 0xfffff6be
     b98:	61724735 	cmnvs	r2, r5, lsr r7
     b9c:	6f700079 	svcvs	0x00700079
     ba0:	65746e69 	ldrbvs	r6, [r4, #-3689]!	; 0xfffff197
     ba4:	00333172 	eorseq	r3, r3, r2, ror r1
     ba8:	64726962 	ldrbtvs	r6, [r2], #-2402	; 0xfffff69e
     bac:	6c625f32 	stclvs	15, cr5, [r2], #-200	; 0xffffff38
     bb0:	5f6b6361 	svcpl	0x006b6361
     bb4:	73746962 	cmnvc	r4, #1605632	; 0x188000
     bb8:	72696200 	rsbvc	r6, r9, #0, 4
     bbc:	675f3164 	ldrbvs	r3, [pc, -r4, ror #2]
     bc0:	5f796172 	svcpl	0x00796172
     bc4:	73746962 	cmnvc	r4, #1605632	; 0x188000
     bc8:	72696200 	rsbvc	r6, r9, #0, 4
     bcc:	6d493664 	stclvs	6, cr3, [r9, #-400]	; 0xfffffe70
     bd0:	00656761 	rsbeq	r6, r5, r1, ror #14
     bd4:	64726962 	ldrbtvs	r6, [r2], #-2402	; 0xfffff69e
     bd8:	6c625f33 	stclvs	15, cr5, [r2], #-204	; 0xffffff34
     bdc:	5f6b6361 	svcpl	0x006b6361
     be0:	73746962 	cmnvc	r4, #1605632	; 0x188000
     be4:	72696200 	rsbvc	r6, r9, #0, 4
     be8:	625f3464 	subsvs	r3, pc, #100, 8	; 0x64000000
     bec:	6b63616c 	blvs	18d91a4 <startup-0x1e726e5c>
     bf0:	7469625f 	strbtvc	r6, [r9], #-607	; 0xfffffda1
     bf4:	69620073 	stmdbvs	r2!, {r0, r1, r4, r5, r6}^
     bf8:	49336472 	ldmdbmi	r3!, {r1, r4, r5, r6, sl, sp, lr}
     bfc:	6567616d 	strbvs	r6, [r7, #-365]!	; 0xfffffe93
     c00:	72696200 	rsbvc	r6, r9, #0, 4
     c04:	6c5f3164 	ldfvse	f3, [pc], {100}	; 0x64
     c08:	74686769 	strbtvc	r6, [r8], #-1897	; 0xfffff897
     c0c:	7469625f 	strbtvc	r6, [r9], #-607	; 0xfffffda1
     c10:	69620073 	stmdbvs	r2!, {r0, r1, r4, r5, r6}^
     c14:	5f356472 	svcpl	0x00356472
     c18:	63616c62 	cmnvs	r1, #25088	; 0x6200
     c1c:	69625f6b 	stmdbvs	r2!, {r0, r1, r3, r5, r6, r8, r9, sl, fp, ip, lr}^
     c20:	74007374 	strvc	r7, [r0], #-884	; 0xfffffc8c
     c24:	42706d65 	rsbsmi	r6, r0, #6464	; 0x1940
     c28:	33647269 	cmncc	r4, #-1879048186	; 0x90000006
     c2c:	6867694c 	stmdavs	r7!, {r2, r3, r6, r8, fp, sp, lr}^
     c30:	69620074 	stmdbvs	r2!, {r2, r4, r5, r6}^
     c34:	5f356472 	svcpl	0x00356472
     c38:	79617267 	stmdbvc	r1!, {r0, r1, r2, r5, r6, r9, ip, sp, lr}^
     c3c:	7469625f 	strbtvc	r6, [r9], #-607	; 0xfffffda1
     c40:	69620073 	stmdbvs	r2!, {r0, r1, r4, r5, r6}^
     c44:	47326472 			; <UNDEFINED> instruction: 0x47326472
     c48:	00796172 	rsbseq	r6, r9, r2, ror r1
     c4c:	706d6574 	rsbvc	r6, sp, r4, ror r5
     c50:	64726942 	ldrbtvs	r6, [r2], #-2370	; 0xfffff6be
     c54:	67694c34 			; <UNDEFINED> instruction: 0x67694c34
     c58:	74007468 	strvc	r7, [r0], #-1128	; 0xfffffb98
     c5c:	42706d65 	rsbsmi	r6, r0, #6464	; 0x1940
     c60:	33647269 	cmncc	r4, #-1879048186	; 0x90000006
     c64:	79617247 	stmdbvc	r1!, {r0, r1, r2, r6, r9, ip, sp, lr}^
     c68:	72696200 	rsbvc	r6, r9, #0, 4
     c6c:	675f3464 	ldrbvs	r3, [pc, -r4, ror #8]
     c70:	5f796172 	svcpl	0x00796172
     c74:	73746962 	cmnvc	r4, #1605632	; 0x188000
     c78:	696f7000 	stmdbvs	pc!, {ip, sp, lr}^	; <UNPREDICTABLE>
     c7c:	7265746e 	rsbvc	r7, r5, #1845493760	; 0x6e000000
     c80:	62003332 	andvs	r3, r0, #-939524096	; 0xc8000000
     c84:	35647269 	strbcc	r7, [r4, #-617]!	; 0xfffffd97
     c88:	6867694c 	stmdavs	r7!, {r2, r3, r6, r8, fp, sp, lr}^
     c8c:	69620074 	stmdbvs	r2!, {r2, r4, r5, r6}^
     c90:	6d496472 	cfstrdvs	mvd6, [r9, #-456]	; 0xfffffe38
     c94:	73656761 	cmnvc	r5, #25427968	; 0x1840000
     c98:	6d657400 	cfstrdvs	mvd7, [r5, #-0]
     c9c:	72694270 	rsbvc	r4, r9, #112, 4
     ca0:	6c423564 	cfstr64vs	mvdx3, [r2], {100}	; 0x64
     ca4:	006b6361 	rsbeq	r6, fp, r1, ror #6
     ca8:	64726962 	ldrbtvs	r6, [r2], #-2402	; 0xfffff69e
     cac:	616c4234 	cmnvs	ip, r4, lsr r2
     cb0:	74006b63 	strvc	r6, [r0], #-2915	; 0xfffff49d
     cb4:	42706d65 	rsbsmi	r6, r0, #6464	; 0x1940
     cb8:	32647269 	rsbcc	r7, r4, #-1879048186	; 0x90000006
     cbc:	63616c42 	cmnvs	r1, #16896	; 0x4200
     cc0:	6962006b 	stmdbvs	r2!, {r0, r1, r3, r5, r6}^
     cc4:	5f336472 	svcpl	0x00336472
     cc8:	79617267 	stmdbvc	r1!, {r0, r1, r2, r5, r6, r9, ip, sp, lr}^
     ccc:	7469625f 	strbtvc	r6, [r9], #-607	; 0xfffffda1
     cd0:	69620073 	stmdbvs	r2!, {r0, r1, r4, r5, r6}^
     cd4:	42316472 	eorsmi	r6, r1, #1912602624	; 0x72000000
     cd8:	6b63616c 	blvs	18d9290 <startup-0x1e726d70>
     cdc:	72696200 	rsbvc	r6, r9, #0, 4
     ce0:	694c3264 	stmdbvs	ip, {r2, r5, r6, r9, ip, sp}^
     ce4:	00746867 	rsbseq	r6, r4, r7, ror #16
     ce8:	6d2f3a43 	vstmdbvs	pc!, {s6-s72}
     cec:	632f706f 			; <UNDEFINED> instruction: 0x632f706f
     cf0:	706f4d2f 	rsbvc	r4, pc, pc, lsr #26
     cf4:	6f62616c 	svcvs	0x0062616c
     cf8:	69746172 	ldmdbvs	r4!, {r1, r4, r5, r6, r8, sp, lr}^
     cfc:	72656e6f 	rsbvc	r6, r5, #1776	; 0x6f0
     d00:	5049442f 	subpl	r4, r9, pc, lsr #8
     d04:	69572d73 	ldmdbvs	r7, {r0, r1, r4, r5, r6, r8, sl, fp, sp}^
     d08:	2f686374 	svccs	0x00686374
     d0c:	69622f43 	stmdbvs	r2!, {r0, r1, r6, r8, r9, sl, fp, sp}^
     d10:	632e6472 			; <UNDEFINED> instruction: 0x632e6472
     d14:	696e6900 	stmdbvs	lr!, {r8, fp, sp, lr}^
     d18:	69625f74 	stmdbvs	r2!, {r2, r4, r5, r6, r8, r9, sl, fp, ip, lr}^
     d1c:	62006472 	andvs	r6, r0, #1912602624	; 0x72000000
     d20:	4f647269 	svcmi	0x00647269
     d24:	62006a62 	andvs	r6, r0, #401408	; 0x62000
     d28:	32647269 	rsbcc	r7, r4, #-1879048186	; 0x90000006
     d2c:	6172675f 	cmnvs	r2, pc, asr r7
     d30:	69625f79 	stmdbvs	r2!, {r0, r3, r4, r5, r6, r8, r9, sl, fp, ip, lr}^
     d34:	74007374 	strvc	r7, [r0], #-884	; 0xfffffc8c
     d38:	42706d65 	rsbsmi	r6, r0, #6464	; 0x1940
     d3c:	47647269 	strbmi	r7, [r4, -r9, ror #4]!
     d40:	00796172 	rsbseq	r6, r9, r2, ror r1
     d44:	64726962 	ldrbtvs	r6, [r2], #-2402	; 0xfffff69e
     d48:	61724735 	cmnvs	r2, r5, lsr r7
     d4c:	69620079 	stmdbvs	r2!, {r0, r3, r4, r5, r6}^
     d50:	5f316472 	svcpl	0x00316472
     d54:	63616c62 	cmnvs	r1, #25088	; 0x6200
     d58:	69625f6b 	stmdbvs	r2!, {r0, r1, r3, r5, r6, r8, r9, sl, fp, ip, lr}^
     d5c:	62007374 	andvs	r7, r0, #116, 6	; 0xd0000001
     d60:	31647269 	cmncc	r4, r9, ror #4
     d64:	67616d49 	strbvs	r6, [r1, -r9, asr #26]!
     d68:	69620065 	stmdbvs	r2!, {r0, r2, r5, r6}^
     d6c:	47336472 			; <UNDEFINED> instruction: 0x47336472
     d70:	00796172 	rsbseq	r6, r9, r2, ror r1
     d74:	616e6966 	cmnvs	lr, r6, ror #18
     d78:	696f506c 	stmdbvs	pc!, {r2, r3, r5, r6, ip, lr}^	; <UNPREDICTABLE>
     d7c:	7265746e 	rsbvc	r7, r5, #1845493760	; 0x6e000000
     d80:	6d657400 	cfstrdvs	mvd7, [r5, #-0]
     d84:	72694270 	rsbvc	r4, r9, #112, 4
     d88:	616c4264 	cmnvs	ip, r4, ror #4
     d8c:	74006b63 	strvc	r6, [r0], #-2915	; 0xfffff49d
     d90:	42706d65 	rsbsmi	r6, r0, #6464	; 0x1940
     d94:	33647269 	cmncc	r4, #-1879048186	; 0x90000006
     d98:	63616c42 	cmnvs	r1, #16896	; 0x4200
     d9c:	6f70006b 	svcvs	0x0070006b
     da0:	65746e69 	ldrbvs	r6, [r4, #-3689]!	; 0xfffff197
     da4:	00313172 	eorseq	r3, r1, r2, ror r1
     da8:	6e696f70 	mcrvs	15, 3, r6, cr9, cr0, {3}
     dac:	31726574 	cmncc	r2, r4, ror r5
     db0:	69620032 	stmdbvs	r2!, {r1, r4, r5}^
     db4:	4c346472 	cfldrsmi	mvf6, [r4], #-456	; 0xfffffe38
     db8:	74686769 	strbtvc	r6, [r8], #-1897	; 0xfffff897
     dbc:	72696200 	rsbvc	r6, r9, #0, 4
     dc0:	6d493564 	cfstr64vs	mvdx3, [r9, #-400]	; 0xfffffe70
     dc4:	00656761 	rsbeq	r6, r5, r1, ror #14
     dc8:	6e696f70 	mcrvs	15, 3, r6, cr9, cr0, {3}
     dcc:	31726574 	cmncc	r2, r4, ror r5
     dd0:	6f700035 	svcvs	0x00700035
     dd4:	65746e69 	ldrbvs	r6, [r4, #-3689]!	; 0xfffff197
     dd8:	00373172 	eorseq	r3, r7, r2, ror r1
     ddc:	6e696f70 	mcrvs	15, 3, r6, cr9, cr0, {3}
     de0:	31726574 	cmncc	r2, r4, ror r5
     de4:	69620038 	stmdbvs	r2!, {r3, r4, r5}^
     de8:	49326472 	ldmdbmi	r2!, {r1, r4, r5, r6, sl, sp, lr}
     dec:	6567616d 	strbvs	r6, [r7, #-365]!	; 0xfffffe93
     df0:	696f7000 	stmdbvs	pc!, {ip, sp, lr}^	; <UNPREDICTABLE>
     df4:	7265746e 	rsbvc	r7, r5, #1845493760	; 0x6e000000
     df8:	62003232 	andvs	r3, r0, #536870915	; 0x20000003
     dfc:	32647269 	rsbcc	r7, r4, #-1879048186	; 0x90000006
     e00:	67696c5f 			; <UNDEFINED> instruction: 0x67696c5f
     e04:	625f7468 	subsvs	r7, pc, #104, 8	; 0x68000000
     e08:	00737469 	rsbseq	r7, r3, r9, ror #8
     e0c:	63746977 	cmnvs	r4, #1949696	; 0x1dc000
     e10:	6c423268 	sfmvs	f3, 2, [r2], {104}	; 0x68
     e14:	006b6361 	rsbeq	r6, fp, r1, ror #6
     e18:	63746977 	cmnvs	r4, #1949696	; 0x1dc000
     e1c:	72473168 	subvc	r3, r7, #104, 2
     e20:	74007961 	strvc	r7, [r0], #-2401	; 0xfffff69f
     e24:	57706d65 	ldrbpl	r6, [r0, -r5, ror #26]!
     e28:	68637469 	stmdavs	r3!, {r0, r3, r5, r6, sl, ip, sp, lr}^
     e2c:	6867694c 	stmdavs	r7!, {r2, r3, r6, r8, fp, sp, lr}^
     e30:	69770074 	ldmdbvs	r7!, {r2, r4, r5, r6}^
     e34:	4f686374 	svcmi	0x00686374
     e38:	77006a62 	strvc	r6, [r0, -r2, ror #20]
     e3c:	68637469 	stmdavs	r3!, {r0, r3, r5, r6, sl, ip, sp, lr}^
     e40:	6c625f31 	stclvs	15, cr5, [r2], #-196	; 0xffffff3c
     e44:	5f6b6361 	svcpl	0x006b6361
     e48:	73746962 	cmnvc	r4, #1605632	; 0x188000
     e4c:	6d657400 	cfstrdvs	mvd7, [r5, #-0]
     e50:	74695770 	strbtvc	r5, [r9], #-1904	; 0xfffff890
     e54:	4c336863 	ldcmi	8, cr6, [r3], #-396	; 0xfffffe74
     e58:	74686769 	strbtvc	r6, [r8], #-1897	; 0xfffff897
     e5c:	6d657400 	cfstrdvs	mvd7, [r5, #-0]
     e60:	74695770 	strbtvc	r5, [r9], #-1904	; 0xfffff890
     e64:	4c326863 	ldcmi	8, cr6, [r2], #-396	; 0xfffffe74
     e68:	74686769 	strbtvc	r6, [r8], #-1897	; 0xfffff897
     e6c:	74697700 	strbtvc	r7, [r9], #-1792	; 0xfffff900
     e70:	4c316863 	ldcmi	8, cr6, [r1], #-396	; 0xfffffe74
     e74:	74686769 	strbtvc	r6, [r8], #-1897	; 0xfffff897
     e78:	6d657400 	cfstrdvs	mvd7, [r5, #-0]
     e7c:	74695770 	strbtvc	r5, [r9], #-1904	; 0xfffff890
     e80:	42326863 	eorsmi	r6, r2, #6488064	; 0x630000
     e84:	6b63616c 	blvs	18d943c <startup-0x1e726bc4>
     e88:	74697700 	strbtvc	r7, [r9], #-1792	; 0xfffff900
     e8c:	5f326863 	svcpl	0x00326863
     e90:	6867696c 	stmdavs	r7!, {r2, r3, r5, r6, r8, fp, sp, lr}^
     e94:	69625f74 	stmdbvs	r2!, {r2, r4, r5, r6, r8, r9, sl, fp, ip, lr}^
     e98:	77007374 	smlsdxvc	r0, r4, r3, r7
     e9c:	68637469 	stmdavs	r3!, {r0, r3, r5, r6, sl, ip, sp, lr}^
     ea0:	616d4933 	cmnvs	sp, r3, lsr r9
     ea4:	77006567 	strvc	r6, [r0, -r7, ror #10]
     ea8:	68637469 	stmdavs	r3!, {r0, r3, r5, r6, sl, ip, sp, lr}^
     eac:	616c4233 	cmnvs	ip, r3, lsr r2
     eb0:	77006b63 	strvc	r6, [r0, -r3, ror #22]
     eb4:	68637469 	stmdavs	r3!, {r0, r3, r5, r6, sl, ip, sp, lr}^
     eb8:	72675f33 	rsbvc	r5, r7, #51, 30	; 0xcc
     ebc:	625f7961 	subsvs	r7, pc, #1589248	; 0x184000
     ec0:	00737469 	rsbseq	r7, r3, r9, ror #8
     ec4:	74696e69 	strbtvc	r6, [r9], #-3689	; 0xfffff197
     ec8:	7469775f 	strbtvc	r7, [r9], #-1887	; 0xfffff8a1
     ecc:	74006863 	strvc	r6, [r0], #-2147	; 0xfffff79d
     ed0:	57706d65 	ldrbpl	r6, [r0, -r5, ror #26]!
     ed4:	68637469 	stmdavs	r3!, {r0, r3, r5, r6, sl, ip, sp, lr}^
     ed8:	63616c42 	cmnvs	r1, #16896	; 0x4200
     edc:	6977006b 	ldmdbvs	r7!, {r0, r1, r3, r5, r6}^
     ee0:	32686374 	rsbcc	r6, r8, #116, 6	; 0xd0000001
     ee4:	616c625f 	cmnvs	ip, pc, asr r2
     ee8:	625f6b63 	subsvs	r6, pc, #101376	; 0x18c00
     eec:	00737469 	rsbseq	r7, r3, r9, ror #8
     ef0:	63746977 	cmnvs	r4, #1949696	; 0x1dc000
     ef4:	6c5f3368 	mrrcvs	3, 6, r3, pc, cr8	; <UNPREDICTABLE>
     ef8:	74686769 	strbtvc	r6, [r8], #-1897	; 0xfffff897
     efc:	7469625f 	strbtvc	r6, [r9], #-607	; 0xfffffda1
     f00:	69770073 	ldmdbvs	r7!, {r0, r1, r4, r5, r6}^
     f04:	33686374 	cmncc	r8, #116, 6	; 0xd0000001
     f08:	79617247 	stmdbvc	r1!, {r0, r1, r2, r6, r9, ip, sp, lr}^
     f0c:	74697700 	strbtvc	r7, [r9], #-1792	; 0xfffff900
     f10:	47326863 	ldrmi	r6, [r2, -r3, ror #16]!
     f14:	00796172 	rsbseq	r6, r9, r2, ror r1
     f18:	706d6574 	rsbvc	r6, sp, r4, ror r5
     f1c:	63746957 	cmnvs	r4, #1425408	; 0x15c000
     f20:	61724768 	cmnvs	r2, r8, ror #14
     f24:	65740079 	ldrbvs	r0, [r4, #-121]!	; 0xffffff87
     f28:	6957706d 	ldmdbvs	r7, {r0, r2, r3, r5, r6, ip, sp, lr}^
     f2c:	32686374 	rsbcc	r6, r8, #116, 6	; 0xd0000001
     f30:	79617247 	stmdbvc	r1!, {r0, r1, r2, r6, r9, ip, sp, lr}^
     f34:	6d657400 	cfstrdvs	mvd7, [r5, #-0]
     f38:	74695770 	strbtvc	r5, [r9], #-1904	; 0xfffff890
     f3c:	42336863 	eorsmi	r6, r3, #6488064	; 0x630000
     f40:	6b63616c 	blvs	18d94f8 <startup-0x1e726b08>
     f44:	74697700 	strbtvc	r7, [r9], #-1792	; 0xfffff900
     f48:	5f316863 	svcpl	0x00316863
     f4c:	6867696c 	stmdavs	r7!, {r2, r3, r5, r6, r8, fp, sp, lr}^
     f50:	69625f74 	stmdbvs	r2!, {r2, r4, r5, r6, r8, r9, sl, fp, ip, lr}^
     f54:	77007374 	smlsdxvc	r0, r4, r3, r7
     f58:	68637469 	stmdavs	r3!, {r0, r3, r5, r6, sl, ip, sp, lr}^
     f5c:	72675f32 	rsbvc	r5, r7, #50, 30	; 0xc8
     f60:	625f7961 	subsvs	r7, pc, #1589248	; 0x184000
     f64:	00737469 	rsbseq	r7, r3, r9, ror #8
     f68:	63746977 	cmnvs	r4, #1949696	; 0x1dc000
     f6c:	6d493468 	cfstrdvs	mvd3, [r9, #-416]	; 0xfffffe60
     f70:	00656761 	rsbeq	r6, r5, r1, ror #14
     f74:	63746977 	cmnvs	r4, #1949696	; 0x1dc000
     f78:	694c3268 	stmdbvs	ip, {r3, r5, r6, r9, ip, sp}^
     f7c:	00746867 	rsbseq	r6, r4, r7, ror #16
     f80:	63746977 	cmnvs	r4, #1949696	; 0x1dc000
     f84:	6d493168 	stfvse	f3, [r9, #-416]	; 0xfffffe60
     f88:	00656761 	rsbeq	r6, r5, r1, ror #14
     f8c:	63746977 	cmnvs	r4, #1949696	; 0x1dc000
     f90:	6c423168 	stfvse	f3, [r2], {104}	; 0x68
     f94:	006b6361 	rsbeq	r6, fp, r1, ror #6
     f98:	63746977 	cmnvs	r4, #1949696	; 0x1dc000
     f9c:	694c3368 	stmdbvs	ip, {r3, r5, r6, r8, r9, ip, sp}^
     fa0:	00746867 	rsbseq	r6, r4, r7, ror #16
     fa4:	63746977 	cmnvs	r4, #1949696	; 0x1dc000
     fa8:	616d4968 	cmnvs	sp, r8, ror #18
     fac:	00736567 	rsbseq	r6, r3, r7, ror #10
     fb0:	706d6574 	rsbvc	r6, sp, r4, ror r5
     fb4:	63746957 	cmnvs	r4, #1425408	; 0x15c000
     fb8:	72473368 	subvc	r3, r7, #104, 6	; 0xa0000001
     fbc:	43007961 	movwmi	r7, #2401	; 0x961
     fc0:	6f6d2f3a 	svcvs	0x006d2f3a
     fc4:	2f632f70 	svccs	0x00632f70
     fc8:	6c706f4d 	ldclvs	15, cr6, [r0], #-308	; 0xfffffecc
     fcc:	726f6261 	rsbvc	r6, pc, #268435462	; 0x10000006
     fd0:	6f697461 	svcvs	0x00697461
     fd4:	2f72656e 	svccs	0x0072656e
     fd8:	73504944 	cmpvc	r0, #68, 18	; 0x110000
     fdc:	7469572d 	strbtvc	r5, [r9], #-1837	; 0xfffff8d3
     fe0:	432f6863 			; <UNDEFINED> instruction: 0x432f6863
     fe4:	7469772f 	strbtvc	r7, [r9], #-1839	; 0xfffff8d1
     fe8:	632e6863 			; <UNDEFINED> instruction: 0x632e6863
     fec:	74697700 	strbtvc	r7, [r9], #-1792	; 0xfffff900
     ff0:	5f316863 	svcpl	0x00316863
     ff4:	79617267 	stmdbvc	r1!, {r0, r1, r2, r5, r6, r9, ip, sp, lr}^
     ff8:	7469625f 	strbtvc	r6, [r9], #-607	; 0xfffffda1
     ffc:	69770073 	ldmdbvs	r7!, {r0, r1, r4, r5, r6}^
    1000:	33686374 	cmncc	r8, #116, 6	; 0xd0000001
    1004:	616c625f 	cmnvs	ip, pc, asr r2
    1008:	625f6b63 	subsvs	r6, pc, #101376	; 0x18c00
    100c:	00737469 	rsbseq	r7, r3, r9, ror #8
    1010:	63746977 	cmnvs	r4, #1949696	; 0x1dc000
    1014:	6d493268 	sfmvs	f3, 2, [r9, #-416]	; 0xfffffe60
    1018:	00656761 	rsbeq	r6, r5, r1, ror #14
    101c:	65726964 	ldrbvs	r6, [r2, #-2404]!	; 0xfffff69c
    1020:	6f697463 	svcvs	0x00697463
    1024:	4944006e 	stmdbmi	r4, {r1, r2, r3, r5, r6}^
    1028:	6d493450 	cfstrdvs	mvd3, [r9, #-320]	; 0xfffffec0
    102c:	00656761 	rsbeq	r6, r5, r1, ror #14
    1030:	31504944 	cmpcc	r0, r4, asr #18
    1034:	67616d49 	strbvs	r6, [r1, -r9, asr #26]!
    1038:	65740065 	ldrbvs	r0, [r4, #-101]!	; 0xffffff9b
    103c:	4944706d 	stmdbmi	r4, {r0, r2, r3, r5, r6, ip, sp, lr}^
    1040:	694c3250 	stmdbvs	ip, {r4, r6, r9, ip, sp}^
    1044:	00746867 	rsbseq	r6, r4, r7, ror #16
    1048:	75527369 	ldrbvc	r7, [r2, #-873]	; 0xfffffc97
    104c:	6e696e6e 	cdpvs	14, 6, cr6, cr9, cr14, {3}
    1050:	65740067 	ldrbvs	r0, [r4, #-103]!	; 0xffffff99
    1054:	4944706d 	stmdbmi	r4, {r0, r2, r3, r5, r6, ip, sp, lr}^
    1058:	6c423350 	mcrrvs	3, 5, r3, r2, cr0
    105c:	006b6361 	rsbeq	r6, fp, r1, ror #6
    1060:	706d6574 	rsbvc	r6, sp, r4, ror r5
    1064:	32504944 	subscc	r4, r0, #68, 18	; 0x110000
    1068:	79617247 	stmdbvc	r1!, {r0, r1, r2, r6, r9, ip, sp, lr}^
    106c:	50494400 	subpl	r4, r9, r0, lsl #8
    1070:	61724731 	cmnvs	r2, r1, lsr r7
    1074:	65740079 	ldrbvs	r0, [r4, #-121]!	; 0xffffff87
    1078:	4944706d 	stmdbmi	r4, {r0, r2, r3, r5, r6, ip, sp, lr}^
    107c:	67694c50 			; <UNDEFINED> instruction: 0x67694c50
    1080:	44007468 	strmi	r7, [r0], #-1128	; 0xfffffb98
    1084:	6d495049 	stclvs	0, cr5, [r9, #-292]	; 0xfffffedc
    1088:	73656761 	cmnvc	r5, #25427968	; 0x1840000
    108c:	696e6900 	stmdbvs	lr!, {r8, fp, sp, lr}^
    1090:	49445f74 	stmdbmi	r4, {r2, r4, r5, r6, r8, r9, sl, fp, ip, lr}^
    1094:	65740050 	ldrbvs	r0, [r4, #-80]!	; 0xffffffb0
    1098:	4944706d 	stmdbmi	r4, {r0, r2, r3, r5, r6, ip, sp, lr}^
    109c:	61724750 	cmnvs	r2, r0, asr r7
    10a0:	49440079 	stmdbmi	r4, {r0, r3, r4, r5, r6}^
    10a4:	6c423150 	stfvse	f3, [r2], {80}	; 0x50
    10a8:	006b6361 	rsbeq	r6, fp, r1, ror #6
    10ac:	79616c70 	stmdbvc	r1!, {r4, r5, r6, sl, fp, sp, lr}^
    10b0:	6f507265 	svcvs	0x00507265
    10b4:	69746973 	ldmdbvs	r4!, {r0, r1, r4, r5, r6, r8, fp, sp, lr}^
    10b8:	00596e6f 	subseq	r6, r9, pc, ror #28
    10bc:	706d6574 	rsbvc	r6, sp, r4, ror r5
    10c0:	33504944 	cmpcc	r0, #68, 18	; 0x110000
    10c4:	79617247 	stmdbvc	r1!, {r0, r1, r2, r6, r9, ip, sp, lr}^
    10c8:	50494400 	subpl	r4, r9, r0, lsl #8
    10cc:	616d4933 	cmnvs	sp, r3, lsr r9
    10d0:	74006567 	strvc	r6, [r0], #-1383	; 0xfffffa99
    10d4:	44706d65 	ldrbtmi	r6, [r0], #-3429	; 0xfffff29b
    10d8:	4c335049 	ldcmi	0, cr5, [r3], #-292	; 0xfffffedc
    10dc:	74686769 	strbtvc	r6, [r8], #-1897	; 0xfffff897
    10e0:	50494400 	subpl	r4, r9, r0, lsl #8
    10e4:	61647055 	qdsubvs	r7, r5, r4
    10e8:	74006574 	strvc	r6, [r0], #-1396	; 0xfffffa8c
    10ec:	44706d65 	ldrbtmi	r6, [r0], #-3429	; 0xfffff29b
    10f0:	42325049 	eorsmi	r5, r2, #73	; 0x49
    10f4:	6b63616c 	blvs	18d96ac <startup-0x1e726954>
    10f8:	50494400 	subpl	r4, r9, r0, lsl #8
    10fc:	616d4932 	cmnvs	sp, r2, lsr r9
    1100:	43006567 	movwmi	r6, #1383	; 0x567
    1104:	6f6d2f3a 	svcvs	0x006d2f3a
    1108:	2f632f70 	svccs	0x00632f70
    110c:	6c706f4d 	ldclvs	15, cr6, [r0], #-308	; 0xfffffecc
    1110:	726f6261 	rsbvc	r6, pc, #268435462	; 0x10000006
    1114:	6f697461 	svcvs	0x00697461
    1118:	2f72656e 	svccs	0x0072656e
    111c:	73504944 	cmpvc	r0, #68, 18	; 0x110000
    1120:	7469572d 	strbtvc	r5, [r9], #-1837	; 0xfffff8d3
    1124:	432f6863 			; <UNDEFINED> instruction: 0x432f6863
    1128:	5049442f 	subpl	r4, r9, pc, lsr #8
    112c:	4400632e 	strmi	r6, [r0], #-814	; 0xfffffcd2
    1130:	4c315049 	ldcmi	0, cr5, [r1], #-292	; 0xfffffedc
    1134:	74686769 	strbtvc	r6, [r8], #-1897	; 0xfffff897
    1138:	50494400 	subpl	r4, r9, r0, lsl #8
    113c:	006a624f 	rsbeq	r6, sl, pc, asr #4
    1140:	706d6574 	rsbvc	r6, sp, r4, ror r5
    1144:	42504944 	subsmi	r4, r0, #68, 18	; 0x110000
    1148:	6b63616c 	blvs	18d9700 <startup-0x1e726900>
    114c:	616c7000 	cmnvs	ip, r0
    1150:	50726579 	rsbspl	r6, r2, r9, ror r5
    1154:	7469736f 	strbtvc	r7, [r9], #-879	; 0xfffffc91
    1158:	586e6f69 	stmdapl	lr!, {r0, r3, r5, r6, r8, r9, sl, fp, sp, lr}^
    115c:	74657300 	strbtvc	r7, [r5], #-768	; 0xfffffd00
    1160:	79616c50 	stmdbvc	r1!, {r4, r6, sl, fp, sp, lr}^
    1164:	6f507265 	svcvs	0x00507265
    1168:	69746973 	ldmdbvs	r4!, {r0, r1, r4, r5, r6, r8, fp, sp, lr}^
    116c:	66006e6f 	strvs	r6, [r0], -pc, ror #28
    1170:	656d616c 	strbvs	r6, [sp, #-364]!	; 0xfffffe94
    1174:	72675f31 	rsbvc	r5, r7, #49, 30	; 0xc4
    1178:	625f7961 	subsvs	r7, pc, #1589248	; 0x184000
    117c:	00737469 	rsbseq	r7, r3, r9, ror #8
    1180:	6d616c66 	stclvs	12, cr6, [r1, #-408]!	; 0xfffffe68
    1184:	6c423165 	stfvse	f3, [r2], {101}	; 0x65
    1188:	006b6361 	rsbeq	r6, fp, r1, ror #6
    118c:	6d616c66 	stclvs	12, cr6, [r1, #-408]!	; 0xfffffe68
    1190:	675f3265 	ldrbvs	r3, [pc, -r5, ror #4]
    1194:	5f796172 	svcpl	0x00796172
    1198:	73746962 	cmnvc	r4, #1605632	; 0x188000
    119c:	6d657400 	cfstrdvs	mvd7, [r5, #-0]
    11a0:	616c4670 	smcvs	50272	; 0xc460
    11a4:	694c656d 	stmdbvs	ip, {r0, r2, r3, r5, r6, r8, sl, sp, lr}^
    11a8:	00746867 	rsbseq	r6, r4, r7, ror #16
    11ac:	6d616c66 	stclvs	12, cr6, [r1, #-408]!	; 0xfffffe68
    11b0:	6c5f3265 	lfmvs	f3, 2, [pc], {101}	; 0x65
    11b4:	74686769 	strbtvc	r6, [r8], #-1897	; 0xfffff897
    11b8:	7469625f 	strbtvc	r6, [r9], #-607	; 0xfffffda1
    11bc:	6c660073 	stclvs	0, cr0, [r6], #-460	; 0xfffffe34
    11c0:	33656d61 	cmncc	r5, #6208	; 0x1840
    11c4:	6867694c 	stmdavs	r7!, {r2, r3, r6, r8, fp, sp, lr}^
    11c8:	6c660074 	stclvs	0, cr0, [r6], #-464	; 0xfffffe30
    11cc:	32656d61 	rsbcc	r6, r5, #6208	; 0x1840
    11d0:	63616c42 	cmnvs	r1, #16896	; 0x4200
    11d4:	6574006b 	ldrbvs	r0, [r4, #-107]!	; 0xffffff95
    11d8:	6c46706d 	mcrrvs	0, 6, r7, r6, cr13
    11dc:	32656d61 	rsbcc	r6, r5, #6208	; 0x1840
    11e0:	63616c42 	cmnvs	r1, #16896	; 0x4200
    11e4:	6574006b 	ldrbvs	r0, [r4, #-107]!	; 0xffffff95
    11e8:	6c46706d 	mcrrvs	0, 6, r7, r6, cr13
    11ec:	32656d61 	rsbcc	r6, r5, #6208	; 0x1840
    11f0:	6867694c 	stmdavs	r7!, {r2, r3, r6, r8, fp, sp, lr}^
    11f4:	6c660074 	stclvs	0, cr0, [r6], #-464	; 0xfffffe30
    11f8:	33656d61 	cmncc	r5, #6208	; 0x1840
    11fc:	67696c5f 			; <UNDEFINED> instruction: 0x67696c5f
    1200:	625f7468 	subsvs	r7, pc, #104, 8	; 0x68000000
    1204:	00737469 	rsbseq	r7, r3, r9, ror #8
    1208:	6d616c66 	stclvs	12, cr6, [r1, #-408]!	; 0xfffffe68
    120c:	6a624f65 	bvs	1894fa8 <startup-0x1e76b058>
    1210:	6d657400 	cfstrdvs	mvd7, [r5, #-0]
    1214:	616c4670 	smcvs	50272	; 0xc460
    1218:	4732656d 	ldrmi	r6, [r2, -sp, ror #10]!
    121c:	00796172 	rsbseq	r6, r9, r2, ror r1
    1220:	6d616c66 	stclvs	12, cr6, [r1, #-408]!	; 0xfffffe68
    1224:	6d493465 	cfstrdvs	mvd3, [r9, #-404]	; 0xfffffe6c
    1228:	00656761 	rsbeq	r6, r5, r1, ror #14
    122c:	6d616c66 	stclvs	12, cr6, [r1, #-408]!	; 0xfffffe68
    1230:	6c5f3165 	ldfvse	f3, [pc], {101}	; 0x65
    1234:	74686769 	strbtvc	r6, [r8], #-1897	; 0xfffff897
    1238:	7469625f 	strbtvc	r6, [r9], #-607	; 0xfffffda1
    123c:	6c660073 	stclvs	0, cr0, [r6], #-460	; 0xfffffe34
    1240:	31656d61 	cmncc	r5, r1, ror #26
    1244:	67616d49 	strbvs	r6, [r1, -r9, asr #26]!
    1248:	6c660065 	stclvs	0, cr0, [r6], #-404	; 0xfffffe6c
    124c:	33656d61 	cmncc	r5, #6208	; 0x1840
    1250:	63616c42 	cmnvs	r1, #16896	; 0x4200
    1254:	6574006b 	ldrbvs	r0, [r4, #-107]!	; 0xffffff95
    1258:	6c46706d 	mcrrvs	0, 6, r7, r6, cr13
    125c:	33656d61 	cmncc	r5, #6208	; 0x1840
    1260:	6867694c 	stmdavs	r7!, {r2, r3, r6, r8, fp, sp, lr}^
    1264:	6c660074 	stclvs	0, cr0, [r6], #-464	; 0xfffffe30
    1268:	33656d61 	cmncc	r5, #6208	; 0x1840
    126c:	79617247 	stmdbvc	r1!, {r0, r1, r2, r6, r9, ip, sp, lr}^
    1270:	6d657400 	cfstrdvs	mvd7, [r5, #-0]
    1274:	616c4670 	smcvs	50272	; 0xc460
    1278:	4234656d 	eorsmi	r6, r4, #457179136	; 0x1b400000
    127c:	6b63616c 	blvs	18d9834 <startup-0x1e7267cc>
    1280:	6d657400 	cfstrdvs	mvd7, [r5, #-0]
    1284:	616c4670 	smcvs	50272	; 0xc460
    1288:	4c34656d 	cfldr32mi	mvfx6, [r4], #-436	; 0xfffffe4c
    128c:	74686769 	strbtvc	r6, [r8], #-1897	; 0xfffff897
    1290:	616c6600 	cmnvs	ip, r0, lsl #12
    1294:	4933656d 	ldmdbmi	r3!, {r0, r2, r3, r5, r6, r8, sl, sp, lr}
    1298:	6567616d 	strbvs	r6, [r7, #-365]!	; 0xfffffe93
    129c:	616c6600 	cmnvs	ip, r0, lsl #12
    12a0:	5f33656d 	svcpl	0x0033656d
    12a4:	63616c62 	cmnvs	r1, #25088	; 0x6200
    12a8:	69625f6b 	stmdbvs	r2!, {r0, r1, r3, r5, r6, r8, r9, sl, fp, ip, lr}^
    12ac:	66007374 			; <UNDEFINED> instruction: 0x66007374
    12b0:	656d616c 	strbvs	r6, [sp, #-364]!	; 0xfffffe94
    12b4:	696c5f34 	stmdbvs	ip!, {r2, r4, r5, r8, r9, sl, fp, ip, lr}^
    12b8:	5f746867 	svcpl	0x00746867
    12bc:	73746962 	cmnvc	r4, #1605632	; 0x188000
    12c0:	616c6600 	cmnvs	ip, r0, lsl #12
    12c4:	5f33656d 	svcpl	0x0033656d
    12c8:	79617267 	stmdbvc	r1!, {r0, r1, r2, r5, r6, r9, ip, sp, lr}^
    12cc:	7469625f 	strbtvc	r6, [r9], #-607	; 0xfffffda1
    12d0:	65740073 	ldrbvs	r0, [r4, #-115]!	; 0xffffff8d
    12d4:	6c46706d 	mcrrvs	0, 6, r7, r6, cr13
    12d8:	34656d61 	strbtcc	r6, [r5], #-3425	; 0xfffff29f
    12dc:	79617247 	stmdbvc	r1!, {r0, r1, r2, r6, r9, ip, sp, lr}^
    12e0:	616c6600 	cmnvs	ip, r0, lsl #12
    12e4:	4932656d 	ldmdbmi	r2!, {r0, r2, r3, r5, r6, r8, sl, sp, lr}
    12e8:	6567616d 	strbvs	r6, [r7, #-365]!	; 0xfffffe93
    12ec:	616c6600 	cmnvs	ip, r0, lsl #12
    12f0:	4731656d 	ldrmi	r6, [r1, -sp, ror #10]!
    12f4:	00796172 	rsbseq	r6, r9, r2, ror r1
    12f8:	6d616c66 	stclvs	12, cr6, [r1, #-408]!	; 0xfffffe68
    12fc:	625f3265 	subsvs	r3, pc, #1342177286	; 0x50000006
    1300:	6b63616c 	blvs	18d98b8 <startup-0x1e726748>
    1304:	7469625f 	strbtvc	r6, [r9], #-607	; 0xfffffda1
    1308:	65740073 	ldrbvs	r0, [r4, #-115]!	; 0xffffff8d
    130c:	6c46706d 	mcrrvs	0, 6, r7, r6, cr13
    1310:	42656d61 	rsbmi	r6, r5, #6208	; 0x1840
    1314:	6b63616c 	blvs	18d98cc <startup-0x1e726734>
    1318:	616c6600 	cmnvs	ip, r0, lsl #12
    131c:	5f34656d 	svcpl	0x0034656d
    1320:	63616c62 	cmnvs	r1, #25088	; 0x6200
    1324:	69625f6b 	stmdbvs	r2!, {r0, r1, r3, r5, r6, r8, r9, sl, fp, ip, lr}^
    1328:	66007374 			; <UNDEFINED> instruction: 0x66007374
    132c:	656d616c 	strbvs	r6, [sp, #-364]!	; 0xfffffe94
    1330:	61724734 	cmnvs	r2, r4, lsr r7
    1334:	6c660079 	stclvs	0, cr0, [r6], #-484	; 0xfffffe1c
    1338:	31656d61 	cmncc	r5, r1, ror #26
    133c:	616c625f 	cmnvs	ip, pc, asr r2
    1340:	625f6b63 	subsvs	r6, pc, #101376	; 0x18c00
    1344:	00737469 	rsbseq	r7, r3, r9, ror #8
    1348:	6d616c66 	stclvs	12, cr6, [r1, #-408]!	; 0xfffffe68
    134c:	694c3165 	stmdbvs	ip, {r0, r2, r5, r6, r8, ip, sp}^
    1350:	00746867 	rsbseq	r6, r4, r7, ror #16
    1354:	6d616c66 	stclvs	12, cr6, [r1, #-408]!	; 0xfffffe68
    1358:	675f3465 	ldrbvs	r3, [pc, -r5, ror #8]
    135c:	5f796172 	svcpl	0x00796172
    1360:	73746962 	cmnvc	r4, #1605632	; 0x188000
    1364:	616c6600 	cmnvs	ip, r0, lsl #12
    1368:	4c34656d 	cfldr32mi	mvfx6, [r4], #-436	; 0xfffffe4c
    136c:	74686769 	strbtvc	r6, [r8], #-1897	; 0xfffff897
    1370:	6d657400 	cfstrdvs	mvd7, [r5, #-0]
    1374:	616c4670 	smcvs	50272	; 0xc460
    1378:	4733656d 	ldrmi	r6, [r3, -sp, ror #10]!
    137c:	00796172 	rsbseq	r6, r9, r2, ror r1
    1380:	6d616c66 	stclvs	12, cr6, [r1, #-408]!	; 0xfffffe68
    1384:	616d4965 	cmnvs	sp, r5, ror #18
    1388:	00736567 	rsbseq	r6, r3, r7, ror #10
    138c:	706d6574 	rsbvc	r6, sp, r4, ror r5
    1390:	6d616c46 	stclvs	12, cr6, [r1, #-280]!	; 0xfffffee8
    1394:	6c423365 	mcrrvs	3, 6, r3, r2, cr5
    1398:	006b6361 	rsbeq	r6, fp, r1, ror #6
    139c:	6d616c66 	stclvs	12, cr6, [r1, #-408]!	; 0xfffffe68
    13a0:	72473265 	subvc	r3, r7, #1342177286	; 0x50000006
    13a4:	43007961 	movwmi	r7, #2401	; 0x961
    13a8:	6f6d2f3a 	svcvs	0x006d2f3a
    13ac:	2f632f70 	svccs	0x00632f70
    13b0:	6c706f4d 	ldclvs	15, cr6, [r0], #-308	; 0xfffffecc
    13b4:	726f6261 	rsbvc	r6, pc, #268435462	; 0x10000006
    13b8:	6f697461 	svcvs	0x00697461
    13bc:	2f72656e 	svccs	0x0072656e
    13c0:	73504944 	cmpvc	r0, #68, 18	; 0x110000
    13c4:	7469572d 	strbtvc	r5, [r9], #-1837	; 0xfffff8d3
    13c8:	432f6863 			; <UNDEFINED> instruction: 0x432f6863
    13cc:	616c662f 	cmnvs	ip, pc, lsr #12
    13d0:	632e656d 			; <UNDEFINED> instruction: 0x632e656d
    13d4:	6d657400 	cfstrdvs	mvd7, [r5, #-0]
    13d8:	616c4670 	smcvs	50272	; 0xc460
    13dc:	7247656d 	subvc	r6, r7, #457179136	; 0x1b400000
    13e0:	66007961 	strvs	r7, [r0], -r1, ror #18
    13e4:	656d616c 	strbvs	r6, [sp, #-364]!	; 0xfffffe94
    13e8:	616c4234 	cmnvs	ip, r4, lsr r2
    13ec:	66006b63 	strvs	r6, [r0], -r3, ror #22
    13f0:	656d616c 	strbvs	r6, [sp, #-364]!	; 0xfffffe94
    13f4:	67694c32 			; <UNDEFINED> instruction: 0x67694c32
    13f8:	62007468 	andvs	r7, r0, #104, 8	; 0x68000000
    13fc:	386d6f6f 	stmdacc	sp!, {r0, r1, r2, r3, r5, r6, r8, r9, sl, fp, sp, lr}^
    1400:	67616d49 	strbvs	r6, [r1, -r9, asr #26]!
    1404:	6f620065 	svcvs	0x00620065
    1408:	49316d6f 	ldmdbmi	r1!, {r0, r1, r2, r3, r5, r6, r8, sl, fp, sp, lr}
    140c:	6567616d 	strbvs	r6, [r7, #-365]!	; 0xfffffe93
    1410:	6f6f6200 	svcvs	0x006f6200
    1414:	6d49396d 	vstrvs.16	s7, [r9, #-218]	; 0xffffff26	; <UNPREDICTABLE>
    1418:	00656761 	rsbeq	r6, r5, r1, ror #14
    141c:	6d6f6f62 	stclvs	15, cr6, [pc, #-392]!	; 129c <startup-0x1fffed64>
    1420:	616d4935 	cmnvs	sp, r5, lsr r9
    1424:	74006567 	strvc	r6, [r0], #-1383	; 0xfffffa99
    1428:	42706d65 	rsbsmi	r6, r0, #6464	; 0x1940
    142c:	366d6f6f 	strbtcc	r6, [sp], -pc, ror #30
    1430:	79617247 	stmdbvc	r1!, {r0, r1, r2, r6, r9, ip, sp, lr}^
    1434:	6f6f6200 	svcvs	0x006f6200
    1438:	675f316d 	ldrbvs	r3, [pc, -sp, ror #2]
    143c:	5f796172 	svcpl	0x00796172
    1440:	73746962 	cmnvc	r4, #1605632	; 0x188000
    1444:	6f6f6200 	svcvs	0x006f6200
    1448:	6a624f6d 	bvs	1895204 <startup-0x1e76adfc>
    144c:	2f3a4300 	svccs	0x003a4300
    1450:	2f706f6d 	svccs	0x00706f6d
    1454:	6f4d2f63 	svcvs	0x004d2f63
    1458:	62616c70 	rsbvs	r6, r1, #112, 24	; 0x7000
    145c:	7461726f 	strbtvc	r7, [r1], #-623	; 0xfffffd91
    1460:	656e6f69 	strbvs	r6, [lr, #-3945]!	; 0xfffff097
    1464:	49442f72 	stmdbmi	r4, {r1, r4, r5, r6, r8, r9, sl, fp, sp}^
    1468:	572d7350 			; <UNDEFINED> instruction: 0x572d7350
    146c:	68637469 	stmdavs	r3!, {r0, r3, r5, r6, sl, ip, sp, lr}^
    1470:	622f432f 	eorvs	r4, pc, #-1140850688	; 0xbc000000
    1474:	2e6d6f6f 	cdpcs	15, 6, cr6, cr13, cr15, {3}
    1478:	65740063 	ldrbvs	r0, [r4, #-99]!	; 0xffffff9d
    147c:	6f42706d 	svcvs	0x0042706d
    1480:	47356d6f 	ldrmi	r6, [r5, -pc, ror #26]!
    1484:	00796172 	rsbseq	r6, r9, r2, ror r1
    1488:	6d6f6f62 	stclvs	15, cr6, [pc, #-392]!	; 1308 <startup-0x1fffecf8>
    148c:	61724731 	cmnvs	r2, r1, lsr r7
    1490:	6f700079 	svcvs	0x00700079
    1494:	65746e69 	ldrbvs	r6, [r4, #-3689]!	; 0xfffff197
    1498:	00373272 	eorseq	r3, r7, r2, ror r2
    149c:	6d6f6f62 	stclvs	15, cr6, [pc, #-392]!	; 131c <startup-0x1fffece4>
    14a0:	616d4936 	cmnvs	sp, r6, lsr r9
    14a4:	62006567 	andvs	r6, r0, #432013312	; 0x19c00000
    14a8:	346d6f6f 	strbtcc	r6, [sp], #-3951	; 0xfffff091
    14ac:	616c625f 	cmnvs	ip, pc, asr r2
    14b0:	625f6b63 	subsvs	r6, pc, #101376	; 0x18c00
    14b4:	00737469 	rsbseq	r7, r3, r9, ror #8
    14b8:	6d6f6f62 	stclvs	15, cr6, [pc, #-392]!	; 1338 <startup-0x1fffecc8>
    14bc:	72675f35 	rsbvc	r5, r7, #53, 30	; 0xd4
    14c0:	625f7961 	subsvs	r7, pc, #1589248	; 0x184000
    14c4:	00737469 	rsbseq	r7, r3, r9, ror #8
    14c8:	706d6574 	rsbvc	r6, sp, r4, ror r5
    14cc:	6d6f6f42 	stclvs	15, cr6, [pc, #-264]!	; 13cc <startup-0x1fffec34>
    14d0:	67694c36 			; <UNDEFINED> instruction: 0x67694c36
    14d4:	62007468 	andvs	r7, r0, #104, 8	; 0x68000000
    14d8:	336d6f6f 	cmncc	sp, #444	; 0x1bc
    14dc:	63616c42 	cmnvs	r1, #16896	; 0x4200
    14e0:	6574006b 	ldrbvs	r0, [r4, #-107]!	; 0xffffff95
    14e4:	6f42706d 	svcvs	0x0042706d
    14e8:	4c336d6f 	ldcmi	13, cr6, [r3], #-444	; 0xfffffe44
    14ec:	74686769 	strbtvc	r6, [r8], #-1897	; 0xfffff897
    14f0:	6f6f6200 	svcvs	0x006f6200
    14f4:	694c346d 	stmdbvs	ip, {r0, r2, r3, r5, r6, sl, ip, sp}^
    14f8:	00746867 	rsbseq	r6, r4, r7, ror #16
    14fc:	6d6f6f62 	stclvs	15, cr6, [pc, #-392]!	; 137c <startup-0x1fffec84>
    1500:	6d493231 	sfmvs	f3, 2, [r9, #-196]	; 0xffffff3c
    1504:	00656761 	rsbeq	r6, r5, r1, ror #14
    1508:	6d6f6f62 	stclvs	15, cr6, [pc, #-392]!	; 1388 <startup-0x1fffec78>
    150c:	6d493531 	cfstr64vs	mvdx3, [r9, #-196]	; 0xffffff3c
    1510:	00656761 	rsbeq	r6, r5, r1, ror #14
    1514:	6d6f6f62 	stclvs	15, cr6, [pc, #-392]!	; 1394 <startup-0x1fffec6c>
    1518:	67694c31 			; <UNDEFINED> instruction: 0x67694c31
    151c:	62007468 	andvs	r7, r0, #104, 8	; 0x68000000
    1520:	316d6f6f 	cmncc	sp, pc, ror #30
    1524:	616c625f 	cmnvs	ip, pc, asr r2
    1528:	625f6b63 	subsvs	r6, pc, #101376	; 0x18c00
    152c:	00737469 	rsbseq	r7, r3, r9, ror #8
    1530:	6d6f6f62 	stclvs	15, cr6, [pc, #-392]!	; 13b0 <startup-0x1fffec50>
    1534:	616d4933 	cmnvs	sp, r3, lsr r9
    1538:	74006567 	strvc	r6, [r0], #-1383	; 0xfffffa99
    153c:	42706d65 	rsbsmi	r6, r0, #6464	; 0x1940
    1540:	476d6f6f 	strbmi	r6, [sp, -pc, ror #30]!
    1544:	00796172 	rsbseq	r6, r9, r2, ror r1
    1548:	6d6f6f62 	stclvs	15, cr6, [pc, #-392]!	; 13c8 <startup-0x1fffec38>
    154c:	72675f34 	rsbvc	r5, r7, #52, 30	; 0xd0
    1550:	625f7961 	subsvs	r7, pc, #1589248	; 0x184000
    1554:	00737469 	rsbseq	r7, r3, r9, ror #8
    1558:	6d6f6f62 	stclvs	15, cr6, [pc, #-392]!	; 13d8 <startup-0x1fffec28>
    155c:	6c625f32 	stclvs	15, cr5, [r2], #-200	; 0xffffff38
    1560:	5f6b6361 	svcpl	0x006b6361
    1564:	73746962 	cmnvc	r4, #1605632	; 0x188000
    1568:	6d657400 	cfstrdvs	mvd7, [r5, #-0]
    156c:	6f6f4270 	svcvs	0x006f4270
    1570:	616c426d 	cmnvs	ip, sp, ror #4
    1574:	62006b63 	andvs	r6, r0, #101376	; 0x18c00
    1578:	356d6f6f 	strbcc	r6, [sp, #-3951]!	; 0xfffff091
    157c:	63616c42 	cmnvs	r1, #16896	; 0x4200
    1580:	6574006b 	ldrbvs	r0, [r4, #-107]!	; 0xffffff95
    1584:	6f42706d 	svcvs	0x0042706d
    1588:	42326d6f 	eorsmi	r6, r2, #7104	; 0x1bc0
    158c:	6b63616c 	blvs	18d9b44 <startup-0x1e7264bc>
    1590:	6f6f6200 	svcvs	0x006f6200
    1594:	6c42326d 	sfmvs	f3, 2, [r2], {109}	; 0x6d
    1598:	006b6361 	rsbeq	r6, fp, r1, ror #6
    159c:	6d6f6f62 	stclvs	15, cr6, [pc, #-392]!	; 141c <startup-0x1fffebe4>
    15a0:	67694c36 			; <UNDEFINED> instruction: 0x67694c36
    15a4:	74007468 	strvc	r7, [r0], #-1128	; 0xfffffb98
    15a8:	42706d65 	rsbsmi	r6, r0, #6464	; 0x1940
    15ac:	346d6f6f 	strbtcc	r6, [sp], #-3951	; 0xfffff091
    15b0:	79617247 	stmdbvc	r1!, {r0, r1, r2, r6, r9, ip, sp, lr}^
    15b4:	6f6f6200 	svcvs	0x006f6200
    15b8:	675f336d 	ldrbvs	r3, [pc, -sp, ror #6]
    15bc:	5f796172 	svcpl	0x00796172
    15c0:	73746962 	cmnvc	r4, #1605632	; 0x188000
    15c4:	6f6f6200 	svcvs	0x006f6200
    15c8:	6c5f336d 	mrrcvs	3, 6, r3, pc, cr13	; <UNPREDICTABLE>
    15cc:	74686769 	strbtvc	r6, [r8], #-1897	; 0xfffff897
    15d0:	7469625f 	strbtvc	r6, [r9], #-607	; 0xfffffda1
    15d4:	6f700073 	svcvs	0x00700073
    15d8:	65746e69 	ldrbvs	r6, [r4, #-3689]!	; 0xfffff197
    15dc:	00353272 	eorseq	r3, r5, r2, ror r2
    15e0:	6d6f6f62 	stclvs	15, cr6, [pc, #-392]!	; 1460 <startup-0x1fffeba0>
    15e4:	67694c33 			; <UNDEFINED> instruction: 0x67694c33
    15e8:	62007468 	andvs	r7, r0, #104, 8	; 0x68000000
    15ec:	366d6f6f 	strbtcc	r6, [sp], -pc, ror #30
    15f0:	6172675f 	cmnvs	r2, pc, asr r7
    15f4:	69625f79 	stmdbvs	r2!, {r0, r3, r4, r5, r6, r8, r9, sl, fp, ip, lr}^
    15f8:	62007374 	andvs	r7, r0, #116, 6	; 0xd0000001
    15fc:	356d6f6f 	strbcc	r6, [sp, #-3951]!	; 0xfffff091
    1600:	79617247 	stmdbvc	r1!, {r0, r1, r2, r6, r9, ip, sp, lr}^
    1604:	6f6f6200 	svcvs	0x006f6200
    1608:	6c5f356d 	cfldr64vs	mvdx3, [pc], {109}	; 0x6d
    160c:	74686769 	strbtvc	r6, [r8], #-1897	; 0xfffff897
    1610:	7469625f 	strbtvc	r6, [r9], #-607	; 0xfffffda1
    1614:	6f620073 	svcvs	0x00620073
    1618:	33316d6f 	teqcc	r1, #7104	; 0x1bc0
    161c:	67616d49 	strbvs	r6, [r1, -r9, asr #26]!
    1620:	6f620065 	svcvs	0x00620065
    1624:	30316d6f 	eorscc	r6, r1, pc, ror #26
    1628:	67616d49 	strbvs	r6, [r1, -r9, asr #26]!
    162c:	6f620065 	svcvs	0x00620065
    1630:	5f366d6f 	svcpl	0x00366d6f
    1634:	6867696c 	stmdavs	r7!, {r2, r3, r5, r6, r8, fp, sp, lr}^
    1638:	69625f74 	stmdbvs	r2!, {r2, r4, r5, r6, r8, r9, sl, fp, ip, lr}^
    163c:	62007374 	andvs	r7, r0, #116, 6	; 0xd0000001
    1640:	376d6f6f 	strbcc	r6, [sp, -pc, ror #30]!
    1644:	67616d49 	strbvs	r6, [r1, -r9, asr #26]!
    1648:	6f620065 	svcvs	0x00620065
    164c:	49346d6f 	ldmdbmi	r4!, {r0, r1, r2, r3, r5, r6, r8, sl, fp, sp, lr}
    1650:	6567616d 	strbvs	r6, [r7, #-365]!	; 0xfffffe93
    1654:	6d657400 	cfstrdvs	mvd7, [r5, #-0]
    1658:	6f6f4270 	svcvs	0x006f4270
    165c:	7247326d 	subvc	r3, r7, #-805306362	; 0xd0000006
    1660:	70007961 	andvc	r7, r0, r1, ror #18
    1664:	746e696f 	strbtvc	r6, [lr], #-2415	; 0xfffff691
    1668:	36327265 	ldrtcc	r7, [r2], -r5, ror #4
    166c:	6f6f6200 	svcvs	0x006f6200
    1670:	7247326d 	subvc	r3, r7, #-805306362	; 0xd0000006
    1674:	62007961 	andvs	r7, r0, #1589248	; 0x184000
    1678:	496d6f6f 	stmdbmi	sp!, {r0, r1, r2, r3, r5, r6, r8, r9, sl, fp, sp, lr}^
    167c:	6567616d 	strbvs	r6, [r7, #-365]!	; 0xfffffe93
    1680:	65740073 	ldrbvs	r0, [r4, #-115]!	; 0xffffff8d
    1684:	6f42706d 	svcvs	0x0042706d
    1688:	4c346d6f 	ldcmi	13, cr6, [r4], #-444	; 0xfffffe44
    168c:	74686769 	strbtvc	r6, [r8], #-1897	; 0xfffff897
    1690:	6d657400 	cfstrdvs	mvd7, [r5, #-0]
    1694:	6f6f4270 	svcvs	0x006f4270
    1698:	6c42356d 	cfstr64vs	mvdx3, [r2], {109}	; 0x6d
    169c:	006b6361 	rsbeq	r6, fp, r1, ror #6
    16a0:	706d6574 	rsbvc	r6, sp, r4, ror r5
    16a4:	6d6f6f42 	stclvs	15, cr6, [pc, #-264]!	; 15a4 <startup-0x1fffea5c>
    16a8:	6867694c 	stmdavs	r7!, {r2, r3, r6, r8, fp, sp, lr}^
    16ac:	6f620074 	svcvs	0x00620074
    16b0:	4c356d6f 	ldcmi	13, cr6, [r5], #-444	; 0xfffffe44
    16b4:	74686769 	strbtvc	r6, [r8], #-1897	; 0xfffff897
    16b8:	6d657400 	cfstrdvs	mvd7, [r5, #-0]
    16bc:	6f6f4270 	svcvs	0x006f4270
    16c0:	694c326d 	stmdbvs	ip, {r0, r2, r3, r5, r6, r9, ip, sp}^
    16c4:	00746867 	rsbseq	r6, r4, r7, ror #16
    16c8:	6d6f6f62 	stclvs	15, cr6, [pc, #-392]!	; 1548 <startup-0x1fffeab8>
    16cc:	616d4932 	cmnvs	sp, r2, lsr r9
    16d0:	62006567 	andvs	r6, r0, #432013312	; 0x19c00000
    16d4:	326d6f6f 	rsbcc	r6, sp, #444	; 0x1bc
    16d8:	6867694c 	stmdavs	r7!, {r2, r3, r6, r8, fp, sp, lr}^
    16dc:	6f620074 	svcvs	0x00620074
    16e0:	47346d6f 	ldrmi	r6, [r4, -pc, ror #26]!
    16e4:	00796172 	rsbseq	r6, r9, r2, ror r1
    16e8:	706d6574 	rsbvc	r6, sp, r4, ror r5
    16ec:	6d6f6f42 	stclvs	15, cr6, [pc, #-264]!	; 15ec <startup-0x1fffea14>
    16f0:	616c4236 	cmnvs	ip, r6, lsr r2
    16f4:	62006b63 	andvs	r6, r0, #101376	; 0x18c00
    16f8:	336d6f6f 	cmncc	sp, #444	; 0x1bc
    16fc:	79617247 	stmdbvc	r1!, {r0, r1, r2, r6, r9, ip, sp, lr}^
    1700:	6d657400 	cfstrdvs	mvd7, [r5, #-0]
    1704:	6f6f4270 	svcvs	0x006f4270
    1708:	6c42336d 	mcrrvs	3, 6, r3, r2, cr13
    170c:	006b6361 	rsbeq	r6, fp, r1, ror #6
    1710:	6d6f6f62 	stclvs	15, cr6, [pc, #-392]!	; 1590 <startup-0x1fffea70>
    1714:	6c625f33 	stclvs	15, cr5, [r2], #-204	; 0xffffff34
    1718:	5f6b6361 	svcpl	0x006b6361
    171c:	73746962 	cmnvc	r4, #1605632	; 0x188000
    1720:	6f6f6200 	svcvs	0x006f6200
    1724:	6c42316d 	stfvse	f3, [r2], {109}	; 0x6d
    1728:	006b6361 	rsbeq	r6, fp, r1, ror #6
    172c:	6d6f6f62 	stclvs	15, cr6, [pc, #-392]!	; 15ac <startup-0x1fffea54>
    1730:	61724736 	cmnvs	r2, r6, lsr r7
    1734:	6f620079 	svcvs	0x00620079
    1738:	42366d6f 	eorsmi	r6, r6, #7104	; 0x1bc0
    173c:	6b63616c 	blvs	18d9cf4 <startup-0x1e72630c>
    1740:	6f6f6200 	svcvs	0x006f6200
    1744:	6c5f346d 	cfldrdvs	mvd3, [pc], {109}	; 0x6d
    1748:	74686769 	strbtvc	r6, [r8], #-1897	; 0xfffff897
    174c:	7469625f 	strbtvc	r6, [r9], #-607	; 0xfffffda1
    1750:	6f620073 	svcvs	0x00620073
    1754:	5f316d6f 	svcpl	0x00316d6f
    1758:	6867696c 	stmdavs	r7!, {r2, r3, r5, r6, r8, fp, sp, lr}^
    175c:	69625f74 	stmdbvs	r2!, {r2, r4, r5, r6, r8, r9, sl, fp, ip, lr}^
    1760:	62007374 	andvs	r7, r0, #116, 6	; 0xd0000001
    1764:	356d6f6f 	strbcc	r6, [sp, #-3951]!	; 0xfffff091
    1768:	616c625f 	cmnvs	ip, pc, asr r2
    176c:	625f6b63 	subsvs	r6, pc, #101376	; 0x18c00
    1770:	00737469 	rsbseq	r7, r3, r9, ror #8
    1774:	6d6f6f62 	stclvs	15, cr6, [pc, #-392]!	; 15f4 <startup-0x1fffea0c>
    1778:	696c5f32 	stmdbvs	ip!, {r1, r4, r5, r8, r9, sl, fp, ip, lr}^
    177c:	5f746867 	svcpl	0x00746867
    1780:	73746962 	cmnvc	r4, #1605632	; 0x188000
    1784:	6f6f6200 	svcvs	0x006f6200
    1788:	625f366d 	subsvs	r3, pc, #114294784	; 0x6d00000
    178c:	6b63616c 	blvs	18d9d44 <startup-0x1e7262bc>
    1790:	7469625f 	strbtvc	r6, [r9], #-607	; 0xfffffda1
    1794:	6f620073 	svcvs	0x00620073
    1798:	42346d6f 	eorsmi	r6, r4, #7104	; 0x1bc0
    179c:	6b63616c 	blvs	18d9d54 <startup-0x1e7262ac>
    17a0:	6f6f6200 	svcvs	0x006f6200
    17a4:	675f326d 	ldrbvs	r3, [pc, -sp, ror #4]
    17a8:	5f796172 	svcpl	0x00796172
    17ac:	73746962 	cmnvc	r4, #1605632	; 0x188000
    17b0:	6d657400 	cfstrdvs	mvd7, [r5, #-0]
    17b4:	6f6f4270 	svcvs	0x006f4270
    17b8:	694c356d 	stmdbvs	ip, {r0, r2, r3, r5, r6, r8, sl, ip, sp}^
    17bc:	00746867 	rsbseq	r6, r4, r7, ror #16
    17c0:	6d6f6f62 	stclvs	15, cr6, [pc, #-392]!	; 1640 <startup-0x1fffe9c0>
    17c4:	6d493431 	cfstrdvs	mvd3, [r9, #-196]	; 0xffffff3c
    17c8:	00656761 	rsbeq	r6, r5, r1, ror #14
    17cc:	706d6574 	rsbvc	r6, sp, r4, ror r5
    17d0:	6d6f6f42 	stclvs	15, cr6, [pc, #-264]!	; 16d0 <startup-0x1fffe930>
    17d4:	61724733 	cmnvs	r2, r3, lsr r7
    17d8:	65740079 	ldrbvs	r0, [r4, #-121]!	; 0xffffff87
    17dc:	6f42706d 	svcvs	0x0042706d
    17e0:	42346d6f 	eorsmi	r6, r4, #7104	; 0x1bc0
    17e4:	6b63616c 	blvs	18d9d9c <startup-0x1e726264>
    17e8:	6f6f6200 	svcvs	0x006f6200
    17ec:	4931316d 	ldmdbmi	r1!, {r0, r2, r3, r5, r6, r8, ip, sp}
    17f0:	6567616d 	strbvs	r6, [r7, #-365]!	; 0xfffffe93
    17f4:	67617000 	strbvs	r7, [r1, -r0]!
    17f8:	72670065 	rsbvc	r0, r7, #101	; 0x65
    17fc:	69687061 	stmdbvs	r8!, {r0, r5, r6, ip, sp, lr}^
    1800:	65725f63 	ldrbvs	r5, [r2, #-3939]!	; 0xfffff09d
    1804:	62006461 	andvs	r6, r0, #1627389952	; 0x61000000
    1808:	65666675 	strbvs	r6, [r6, #-1653]!	; 0xfffff98b
    180c:	69700072 	ldmdbvs	r0!, {r1, r4, r5, r6}^
    1810:	326c6578 	rsbcc	r6, ip, #120, 10	; 0x1e000000
    1814:	61726400 	cmnvs	r2, r0, lsl #8
    1818:	61675f77 	smcvs	30199	; 0x75f7
    181c:	6f5f656d 	svcvs	0x005f656d
    1820:	63656a62 	cmnvs	r5, #401408	; 0x62000
    1824:	65640074 	strbvs	r0, [r4, #-116]!	; 0xffffff8c
    1828:	5f79616c 	svcpl	0x0079616c
    182c:	7263696d 	rsbvc	r6, r3, #1785856	; 0x1b4000
    1830:	7267006f 	rsbvc	r0, r7, #111	; 0x6f
    1834:	69687061 	stmdbvs	r8!, {r0, r5, r6, ip, sp, lr}^
    1838:	72775f63 	rsbsvc	r5, r7, #396	; 0x18c
    183c:	5f657469 	svcpl	0x00657469
    1840:	6d6d6f63 	stclvs	15, cr6, [sp, #-396]!	; 0xfffffe74
    1844:	00646e61 	rsbeq	r6, r4, r1, ror #28
    1848:	61656c63 	cmnvs	r5, r3, ror #24
    184c:	61625f72 	smcvs	9714	; 0x25f2
    1850:	75426b63 	strbvc	r6, [r2, #-2915]	; 0xfffff49d
    1854:	72656666 	rsbvc	r6, r5, #106954752	; 0x6600000
    1858:	78697000 	stmdavc	r9!, {ip, sp, lr}^
    185c:	67006c65 	strvs	r6, [r0, -r5, ror #24]
    1860:	006a624f 	rsbeq	r6, sl, pc, asr #4
    1864:	70617267 	rsbvc	r7, r1, r7, ror #4
    1868:	5f636968 	svcpl	0x00636968
    186c:	77617264 	strbvc	r7, [r1, -r4, ror #4]!
    1870:	7263735f 	rsbvc	r7, r3, #2080374785	; 0x7c000001
    1874:	006e6565 	rsbeq	r6, lr, r5, ror #10
    1878:	616c6564 	cmnvs	ip, r4, ror #10
    187c:	696d5f79 	stmdbvs	sp!, {r0, r3, r4, r5, r6, r8, r9, sl, fp, ip, lr}^
    1880:	00696c6c 	rsbeq	r6, r9, ip, ror #24
    1884:	776f6873 			; <UNDEFINED> instruction: 0x776f6873
    1888:	6172665f 	cmnvs	r2, pc, asr r6
    188c:	6400656d 	strvs	r6, [r0], #-1389	; 0xfffffa93
    1890:	5f776172 	svcpl	0x00776172
    1894:	69727073 	ldmdbvs	r2!, {r0, r1, r4, r5, r6, ip, sp, lr}^
    1898:	64006574 	strvs	r6, [r0], #-1396	; 0xfffffa8c
    189c:	79616c65 	stmdbvc	r1!, {r0, r2, r5, r6, sl, fp, sp, lr}^
    18a0:	3030355f 	eorscc	r3, r0, pc, asr r5
    18a4:	6700736e 	strvs	r7, [r0, -lr, ror #6]
    18a8:	68706172 	ldmdavs	r0!, {r1, r4, r5, r6, r8, sp, lr}^
    18ac:	775f6369 	ldrbvc	r6, [pc, -r9, ror #6]
    18b0:	65746972 	ldrbvs	r6, [r4, #-2418]!	; 0xfffff68e
    18b4:	61726700 	cmnvs	r2, r0, lsl #14
    18b8:	61635379 	smcvs	13625	; 0x3539
    18bc:	6554656c 	ldrbvs	r6, [r4, #-1388]	; 0xfffffa94
    18c0:	67007473 	smlsdxvs	r0, r3, r4, r7
    18c4:	68706172 	ldmdavs	r0!, {r1, r4, r5, r6, r8, sp, lr}^
    18c8:	635f6369 	cmpvs	pc, #-1543503871	; 0xa4000001
    18cc:	5f6c7274 	svcpl	0x006c7274
    18d0:	5f746962 	svcpl	0x00746962
    18d4:	61656c63 	cmnvs	r5, r3, ror #24
    18d8:	3a430072 	bcc	10c1aa8 <startup-0x1ef3e558>
    18dc:	706f6d2f 	rsbvc	r6, pc, pc, lsr #26
    18e0:	4d2f632f 	stcmi	3, cr6, [pc, #-188]!	; 182c <startup-0x1fffe7d4>
    18e4:	616c706f 	cmnvs	ip, pc, rrx
    18e8:	61726f62 	cmnvs	r2, r2, ror #30
    18ec:	6e6f6974 			; <UNDEFINED> instruction: 0x6e6f6974
    18f0:	442f7265 	strtmi	r7, [pc], #-613	; 18f8 <startup-0x1fffe708>
    18f4:	2d735049 	ldclcs	0, cr5, [r3, #-292]!	; 0xfffffedc
    18f8:	63746957 	cmnvs	r4, #1425408	; 0x15c000
    18fc:	2f432f68 	svccs	0x00432f68
    1900:	70617267 	rsbvc	r7, r1, r7, ror #4
    1904:	73636968 	cmnvc	r3, #104, 18	; 0x1a0000
    1908:	6700632e 	strvs	r6, [r0, -lr, lsr #6]
    190c:	68706172 	ldmdavs	r0!, {r1, r4, r5, r6, r8, sp, lr}^
    1910:	725f6369 	subsvc	r6, pc, #-1543503871	; 0xa4000001
    1914:	5f646165 	svcpl	0x00646165
    1918:	61746164 	cmnvs	r4, r4, ror #2
    191c:	6c6f6300 	stclvs	3, cr6, [pc], #-0	; 1924 <startup-0x1fffe6dc>
    1920:	7300726f 	movwvc	r7, #623	; 0x26f
    1924:	755f7465 	ldrbvc	r7, [pc, #-1125]	; 14c7 <startup-0x1fffeb39>
    1928:	72645f70 	rsbvc	r5, r4, #112, 30	; 0x1c0
    192c:	625f7761 	subsvs	r7, pc, #25427968	; 0x1840000
    1930:	65666675 	strbvs	r6, [r6, #-1653]!	; 0xfffff98b
    1934:	67007372 	smlsdxvs	r0, r2, r3, r7
    1938:	68706172 	ldmdavs	r0!, {r1, r4, r5, r6, r8, sp, lr}^
    193c:	635f6369 	cmpvs	pc, #-1543503871	; 0xa4000001
    1940:	5f6c7274 	svcpl	0x006c7274
    1944:	5f746962 	svcpl	0x00746962
    1948:	00746573 	rsbseq	r6, r4, r3, ror r5
    194c:	616c6564 	cmnvs	ip, r4, ror #10
    1950:	35325f79 	ldrcc	r5, [r2, #-3961]!	; 0xfffff087
    1954:	00736e30 	rsbseq	r6, r3, r0, lsr lr
    1958:	6c6c6966 			; <UNDEFINED> instruction: 0x6c6c6966
    195c:	74636552 	strbtvc	r6, [r3], #-1362	; 0xfffffaae
    1960:	6c676e61 	stclvs	14, cr6, [r7], #-388	; 0xfffffe7c
    1964:	616d0065 	cmnvs	sp, r5, rrx
    1968:	66006b73 			; <UNDEFINED> instruction: 0x66006b73
    196c:	656d6172 	strbvs	r6, [sp, #-370]!	; 0xfffffe8e
    1970:	6e656c5f 	mcrvs	12, 3, r6, cr5, cr15, {2}
    1974:	00687467 	rsbeq	r7, r8, r7, ror #8
    1978:	70617267 	rsbvc	r7, r1, r7, ror #4
    197c:	5f636968 	svcpl	0x00636968
    1980:	74697277 	strbtvc	r7, [r9], #-631	; 0xfffffd89
    1984:	61645f65 	cmnvs	r4, r5, ror #30
    1988:	62006174 	andvs	r6, r0, #116, 2
    198c:	00657479 	rsbeq	r7, r5, r9, ror r4
    1990:	74646977 	strbtvc	r6, [r4], #-2423	; 0xfffff689
    1994:	6e695f68 	cdpvs	15, 6, cr5, cr9, cr8, {3}
    1998:	7479625f 	ldrbtvc	r6, [r9], #-607	; 0xfffffda1
    199c:	63007365 	movwvs	r7, #869	; 0x365
    19a0:	7261656c 	rsbvc	r6, r1, #108, 10	; 0x1b000000
    19a4:	6c6c615f 	stfvse	f6, [ip], #-380	; 0xfffffe84
    19a8:	6361625f 	cmnvs	r1, #-268435451	; 0xf0000005
    19ac:	6675426b 	ldrbtvs	r4, [r5], -fp, ror #4
    19b0:	73726566 	cmnvc	r2, #427819008	; 0x19800000
    19b4:	656c6300 	strbvs	r6, [ip, #-768]!	; 0xfffffd00
    19b8:	65527261 	ldrbvs	r7, [r2, #-609]	; 0xfffffd9f
    19bc:	6e617463 	cdpvs	4, 6, cr7, cr1, cr3, {3}
    19c0:	00656c67 	rsbeq	r6, r5, r7, ror #24
    19c4:	65646e69 	strbvs	r6, [r4, #-3689]!	; 0xfffff197
    19c8:	65730078 	ldrbvs	r0, [r3, #-120]!	; 0xffffff88
    19cc:	7463656c 	strbtvc	r6, [r3], #-1388	; 0xfffffa94
    19d0:	6e6f635f 	mcrvs	3, 3, r6, cr15, cr15, {2}
    19d4:	6c6f7274 	sfmvs	f7, 2, [pc], #-464	; 180c <startup-0x1fffe7f4>
    19d8:	0072656c 	rsbseq	r6, r2, ip, ror #10
    19dc:	70617267 	rsbvc	r7, r1, r7, ror #4
    19e0:	5f636968 	svcpl	0x00636968
    19e4:	74696177 	strbtvc	r6, [r9], #-375	; 0xfffffe89
    19e8:	6165725f 	cmnvs	r5, pc, asr r2
    19ec:	63007964 	movwvs	r7, #2404	; 0x964
    19f0:	7261656c 	rsbvc	r6, r1, #108, 10	; 0x1b000000
    19f4:	6968745f 	stmdbvs	r8!, {r0, r1, r2, r3, r4, r6, sl, ip, sp, lr}^
    19f8:	63614273 	cmnvs	r1, #805306375	; 0x30000007
    19fc:	6675426b 	ldrbtvs	r4, [r5], -fp, ror #4
    1a00:	00726566 	rsbseq	r6, r2, r6, ror #10
    1a04:	70617267 	rsbvc	r7, r1, r7, ror #4
    1a08:	5f636968 	svcpl	0x00636968
    1a0c:	74696e69 	strbtvc	r6, [r9], #-3689	; 0xfffff197
    1a10:	696c6169 	stmdbvs	ip!, {r0, r3, r5, r6, r8, sp, lr}^
    1a14:	6700657a 	smlsdxvs	r0, sl, r5, r6
    1a18:	68706172 	ldmdavs	r0!, {r1, r4, r5, r6, r8, sp, lr}^
    1a1c:	635f6369 	cmpvs	pc, #-1543503871	; 0xa4000001
    1a20:	7261656c 	rsbvc	r6, r1, #108, 10	; 0x1b000000
    1a24:	7263735f 	rsbvc	r7, r3, #2080374785	; 0x7c000001
    1a28:	006e6565 	rsbeq	r6, lr, r5, ror #10
    1a2c:	64616f6c 	strbtvs	r6, [r1], #-3948	; 0xfffff094
    1a30:	616d695f 	cmnvs	sp, pc, asr r9
    1a34:	43006567 	movwmi	r6, #1383	; 0x567
    1a38:	6f6d2f3a 	svcvs	0x006d2f3a
    1a3c:	2f632f70 	svccs	0x00632f70
    1a40:	6c706f4d 	ldclvs	15, cr6, [r0], #-308	; 0xfffffecc
    1a44:	726f6261 	rsbvc	r6, pc, #268435462	; 0x10000006
    1a48:	6f697461 	svcvs	0x00697461
    1a4c:	2f72656e 	svccs	0x0072656e
    1a50:	73504944 	cmpvc	r0, #68, 18	; 0x110000
    1a54:	7469572d 	strbtvc	r5, [r9], #-1837	; 0xfffff8d3
    1a58:	432f6863 			; <UNDEFINED> instruction: 0x432f6863
    1a5c:	616d692f 	cmnvs	sp, pc, lsr #18
    1a60:	632e6567 			; <UNDEFINED> instruction: 0x632e6567
    1a64:	616f6c00 	cmnvs	pc, r0, lsl #24
    1a68:	70735f64 	rsbsvc	r5, r3, r4, ror #30
    1a6c:	65746972 	ldrbvs	r6, [r4, #-2418]!	; 0xfffff68e
    1a70:	2f3a4300 	svccs	0x003a4300
    1a74:	2f706f6d 	svccs	0x00706f6d
    1a78:	6f4d2f63 	svcvs	0x004d2f63
    1a7c:	62616c70 	rsbvs	r6, r1, #112, 24	; 0x7000
    1a80:	7461726f 	strbtvc	r7, [r1], #-623	; 0xfffffd91
    1a84:	656e6f69 	strbvs	r6, [lr, #-3945]!	; 0xfffff097
    1a88:	49442f72 	stmdbmi	r4, {r1, r4, r5, r6, r8, r9, sl, fp, sp}^
    1a8c:	572d7350 			; <UNDEFINED> instruction: 0x572d7350
    1a90:	68637469 	stmdavs	r3!, {r0, r3, r5, r6, sl, ip, sp, lr}^
    1a94:	732f432f 			; <UNDEFINED> instruction: 0x732f432f
    1a98:	74697270 	strbtvc	r7, [r9], #-624	; 0xfffffd90
    1a9c:	00632e65 	rsbeq	r2, r3, r5, ror #28
    1aa0:	65646f4d 	strbvs	r6, [r4, #-3917]!	; 0xfffff0b3
    1aa4:	65730072 	ldrbvs	r0, [r3, #-114]!	; 0xffffff8e
    1aa8:	70755f74 	rsbsvc	r5, r5, r4, ror pc
    1aac:	4c49445f 	cfstrdmi	mvd4, [r9], {95}	; 0x5f
    1ab0:	72646f00 	rsbvc	r6, r4, #0, 30
    1ab4:	68676948 	stmdavs	r7!, {r3, r6, r8, fp, sp, lr}^
    1ab8:	79546f00 	ldmdbvc	r4, {r8, r9, sl, fp, sp, lr}^
    1abc:	00726570 	rsbseq	r6, r2, r0, ror r5
    1ac0:	4f495047 	svcmi	0x00495047
    1ac4:	50755000 	rsbspl	r5, r5, r0
    1ac8:	69007264 	stmdbvs	r0, {r2, r5, r6, r9, ip, sp, lr}
    1acc:	65527264 	ldrbvs	r7, [r2, #-612]	; 0xfffffd9c
    1ad0:	76726573 			; <UNDEFINED> instruction: 0x76726573
    1ad4:	43006465 	movwmi	r6, #1125	; 0x465
    1ad8:	6f6d2f3a 	svcvs	0x006d2f3a
    1adc:	2f632f70 	svccs	0x00632f70
    1ae0:	6c706f4d 	ldclvs	15, cr6, [r0], #-308	; 0xfffffecc
    1ae4:	726f6261 	rsbvc	r6, pc, #268435462	; 0x10000006
    1ae8:	6f697461 	svcvs	0x00697461
    1aec:	2f72656e 	svccs	0x0072656e
    1af0:	73504944 	cmpvc	r0, #68, 18	; 0x110000
    1af4:	7469572d 	strbtvc	r5, [r9], #-1837	; 0xfffff8d3
    1af8:	432f6863 			; <UNDEFINED> instruction: 0x432f6863
    1afc:	6970672f 	ldmdbvs	r0!, {r0, r1, r2, r3, r5, r8, r9, sl, sp, lr}^
    1b00:	00632e6f 	rsbeq	r2, r3, pc, ror #28
    1b04:	6552746f 	ldrbvs	r7, [r2, #-1135]	; 0xfffffb91
    1b08:	76726573 			; <UNDEFINED> instruction: 0x76726573
    1b0c:	72006465 	andvc	r6, r0, #1694498816	; 0x65000000
    1b10:	5f646165 	svcpl	0x00646165
    1b14:	5f4c4944 	svcpl	0x004c4944
    1b18:	676e6973 			; <UNDEFINED> instruction: 0x676e6973
    1b1c:	6f00656c 	svcvs	0x0000656c
    1b20:	6f4c7264 	svcvs	0x004c7264
    1b24:	536f0077 	cmnpl	pc, #119	; 0x77
    1b28:	64656570 	strbtvs	r6, [r5], #-1392	; 0xfffffa90
    1b2c:	64690072 	strbtvs	r0, [r9], #-114	; 0xffffff8e
    1b30:	67694872 			; <UNDEFINED> instruction: 0x67694872
    1b34:	64690068 	strbtvs	r0, [r9], #-104	; 0xffffff98
    1b38:	776f4c72 			; <UNDEFINED> instruction: 0x776f4c72
    1b3c:	72646f00 	rsbvc	r6, r4, #0, 30
    1b40:	65736552 	ldrbvs	r6, [r3, #-1362]!	; 0xfffffaae
    1b44:	64657672 	strbtvs	r7, [r5], #-1650	; 0xfffff98e
    1b48:	61657200 	cmnvs	r5, r0, lsl #4
    1b4c:	49445f64 	stmdbmi	r4, {r2, r5, r6, r8, r9, sl, fp, ip, lr}^
    1b50:	6e69004c 	cdpvs	0, 6, cr0, cr9, cr12, {2}
    1b54:	615f7469 	cmpvs	pc, r9, ror #8
    1b58:	696c7070 	stmdbvs	ip!, {r4, r5, r6, ip, sp, lr}^
    1b5c:	69746163 	ldmdbvs	r4!, {r0, r1, r5, r6, r8, sp, lr}^
    1b60:	6c006e6f 	stcvs	14, cr6, [r0], {111}	; 0x6f
    1b64:	74696d69 	strbtvc	r6, [r9], #-3433	; 0xfffff297
    1b68:	73610032 	cmnvc	r1, #50	; 0x32
    1b6c:	5f696963 	svcpl	0x00696963
    1b70:	64616572 	strbtvs	r6, [r1], #-1394	; 0xfffffa8e
    1b74:	7461645f 	strbtvc	r6, [r1], #-1119	; 0xfffffba1
    1b78:	65730061 	ldrbvs	r0, [r3, #-97]!	; 0xffffff9f
    1b7c:	70755f74 	rsbsvc	r5, r5, r4, ror pc
    1b80:	6373615f 	cmnvs	r3, #-1073741801	; 0xc0000017
    1b84:	61006969 	tstvs	r0, r9, ror #18
    1b88:	69696373 	stmdbvs	r9!, {r0, r1, r4, r5, r6, r8, r9, sp, lr}^
    1b8c:	696e695f 	stmdbvs	lr!, {r0, r1, r2, r3, r4, r6, r8, fp, sp, lr}^
    1b90:	6f630074 	svcvs	0x00630074
    1b94:	6e6d756c 	cdpvs	5, 6, cr7, cr13, cr12, {3}
    1b98:	656c6300 	strbvs	r6, [ip, #-768]!	; 0xfffffd00
    1b9c:	615f7261 	cmpvs	pc, r1, ror #4
    1ba0:	69696373 	stmdbvs	r9!, {r0, r1, r4, r5, r6, r8, r9, sp, lr}^
    1ba4:	63736100 	cmnvs	r3, #0, 2
    1ba8:	775f6969 	ldrbvc	r6, [pc, -r9, ror #18]
    1bac:	65746972 	ldrbvs	r6, [r4, #-2418]!	; 0xfffff68e
    1bb0:	7261705f 	rsbvc	r7, r1, #95	; 0x5f
    1bb4:	73610074 	cmnvc	r1, #116	; 0x74
    1bb8:	5f696963 	svcpl	0x00696963
    1bbc:	64616572 	strbtvs	r6, [r1], #-1394	; 0xfffffa8e
    1bc0:	6e6f635f 	mcrvs	3, 3, r6, cr15, cr15, {2}
    1bc4:	6c6f7274 	sfmvs	f7, 2, [pc], #-464	; 19fc <startup-0x1fffe604>
    1bc8:	0072656c 	rsbseq	r6, r2, ip, ror #10
    1bcc:	69637361 	stmdbvs	r3!, {r0, r5, r6, r8, r9, ip, sp, lr}^
    1bd0:	74635f69 	strbtvc	r5, [r3], #-3945	; 0xfffff097
    1bd4:	625f6c72 	subsvs	r6, pc, #29184	; 0x7200
    1bd8:	735f7469 	cmpvc	pc, #1761607680	; 0x69000000
    1bdc:	61007465 	tstvs	r0, r5, ror #8
    1be0:	69696373 	stmdbvs	r9!, {r0, r1, r4, r5, r6, r8, r9, sp, lr}^
    1be4:	6972775f 	ldmdbvs	r2!, {r0, r1, r2, r3, r4, r6, r8, r9, sl, ip, sp, lr}^
    1be8:	635f6574 	cmpvs	pc, #116, 10	; 0x1d000000
    1bec:	7400646d 	strvc	r6, [r0], #-1133	; 0xfffffb93
    1bf0:	31747365 	cmncc	r4, r5, ror #6
    1bf4:	73657400 	cmnvc	r5, #0, 8
    1bf8:	61003274 	tstvs	r0, r4, ror r2
    1bfc:	65726464 	ldrbvs	r6, [r2, #-1124]!	; 0xfffffb9c
    1c00:	61007373 	tstvs	r0, r3, ror r3
    1c04:	69696373 	stmdbvs	r9!, {r0, r1, r4, r5, r6, r8, r9, sp, lr}^
    1c08:	6972775f 	ldmdbvs	r2!, {r0, r1, r2, r3, r4, r6, r8, r9, sl, ip, sp, lr}^
    1c0c:	645f6574 	ldrbvs	r6, [pc], #-1396	; 1c14 <startup-0x1fffe3ec>
    1c10:	00617461 	rsbeq	r7, r1, r1, ror #8
    1c14:	69637361 	stmdbvs	r3!, {r0, r5, r6, r8, r9, ip, sp, lr}^
    1c18:	65745f69 	ldrbvs	r5, [r4, #-3945]!	; 0xfffff097
    1c1c:	61007473 	tstvs	r0, r3, ror r4
    1c20:	69696373 	stmdbvs	r9!, {r0, r1, r4, r5, r6, r8, r9, sp, lr}^
    1c24:	6165725f 	cmnvs	r5, pc, asr r2
    1c28:	74735f64 	ldrbtvc	r5, [r3], #-3940	; 0xfffff09c
    1c2c:	73757461 	cmnvc	r5, #1627389952	; 0x61000000
    1c30:	63736100 	cmnvs	r3, #0, 2
    1c34:	635f6969 	cmpvs	pc, #1720320	; 0x1a4000
    1c38:	5f6c7274 	svcpl	0x006c7274
    1c3c:	5f746962 	svcpl	0x00746962
    1c40:	61656c63 	cmnvs	r5, r3, ror #24
    1c44:	73610072 	cmnvc	r1, #114	; 0x72
    1c48:	5f696963 	svcpl	0x00696963
    1c4c:	74697277 	strbtvc	r7, [r9], #-631	; 0xfffffd89
    1c50:	73610065 	cmnvc	r1, #101	; 0x65
    1c54:	5f696963 	svcpl	0x00696963
    1c58:	6f546f67 	svcvs	0x00546f67
    1c5c:	61005958 	tstvs	r0, r8, asr r9
    1c60:	69696373 	stmdbvs	r9!, {r0, r1, r4, r5, r6, r8, r9, sp, lr}^
    1c64:	6972775f 	ldmdbvs	r2!, {r0, r1, r2, r3, r4, r6, r8, r9, sl, ip, sp, lr}^
    1c68:	635f6574 	cmpvs	pc, #116, 10	; 0x1d000000
    1c6c:	72746e6f 	rsbsvc	r6, r4, #1776	; 0x6f0
    1c70:	656c6c6f 	strbvs	r6, [ip, #-3183]!	; 0xfffff391
    1c74:	73610072 	cmnvc	r1, #114	; 0x72
    1c78:	5f696963 	svcpl	0x00696963
    1c7c:	74697277 	strbtvc	r7, [r9], #-631	; 0xfffffd89
    1c80:	68635f65 	stmdavs	r3!, {r0, r2, r5, r6, r8, r9, sl, fp, ip, lr}^
    1c84:	6c007261 	sfmvs	f7, 4, [r0], {97}	; 0x61
    1c88:	74696d69 	strbtvc	r6, [r9], #-3433	; 0xfffff297
    1c8c:	3a430031 	bcc	10c1d58 <startup-0x1ef3e2a8>
    1c90:	706f6d2f 	rsbvc	r6, pc, pc, lsr #26
    1c94:	4d2f632f 	stcmi	3, cr6, [pc, #-188]!	; 1be0 <startup-0x1fffe420>
    1c98:	616c706f 	cmnvs	ip, pc, rrx
    1c9c:	61726f62 	cmnvs	r2, r2, ror #30
    1ca0:	6e6f6974 			; <UNDEFINED> instruction: 0x6e6f6974
    1ca4:	442f7265 	strtmi	r7, [pc], #-613	; 1cac <startup-0x1fffe354>
    1ca8:	2d735049 	ldclcs	0, cr5, [r3, #-292]!	; 0xfffffedc
    1cac:	63746957 	cmnvs	r4, #1425408	; 0x15c000
    1cb0:	2f432f68 	svccs	0x00432f68
    1cb4:	69637361 	stmdbvs	r3!, {r0, r5, r6, r8, r9, ip, sp, lr}^
    1cb8:	69645f69 	stmdbvs	r4!, {r0, r3, r5, r6, r8, r9, sl, fp, ip, lr}^
    1cbc:	616c7073 	smcvs	50947	; 0xc703
    1cc0:	00632e79 	rsbeq	r2, r3, r9, ror lr
    1cc4:	74696e69 	strbtvc	r6, [r9], #-3689	; 0xfffff197
    1cc8:	6f6c735f 	svcvs	0x006c735f
    1ccc:	65745f77 	ldrbvs	r5, [r4, #-3959]!	; 0xfffff089
    1cd0:	6c007478 	cfstrsvs	mvf7, [r0], {120}	; 0x78
    1cd4:	74676e65 	strbtvc	r6, [r7], #-3685	; 0xfffff19b
    1cd8:	666f5f68 	strbtvs	r5, [pc], -r8, ror #30
    1cdc:	776f725f 			; <UNDEFINED> instruction: 0x776f725f
    1ce0:	3a430031 	bcc	10c1dac <startup-0x1ef3e254>
    1ce4:	706f6d2f 	rsbvc	r6, pc, pc, lsr #26
    1ce8:	4d2f632f 	stcmi	3, cr6, [pc, #-188]!	; 1c34 <startup-0x1fffe3cc>
    1cec:	616c706f 	cmnvs	ip, pc, rrx
    1cf0:	61726f62 	cmnvs	r2, r2, ror #30
    1cf4:	6e6f6974 			; <UNDEFINED> instruction: 0x6e6f6974
    1cf8:	442f7265 	strtmi	r7, [pc], #-613	; 1d00 <startup-0x1fffe300>
    1cfc:	2d735049 	ldclcs	0, cr5, [r3, #-292]!	; 0xfffffedc
    1d00:	63746957 	cmnvs	r4, #1425408	; 0x15c000
    1d04:	2f432f68 	svccs	0x00432f68
    1d08:	776f6c73 			; <UNDEFINED> instruction: 0x776f6c73
    1d0c:	7865745f 	stmdavc	r5!, {r0, r1, r2, r3, r4, r6, sl, ip, sp, lr}^
    1d10:	00632e74 	rsbeq	r2, r3, r4, ror lr
    1d14:	6f646e69 	svcvs	0x00646e69
    1d18:	4973726f 	ldmdbmi	r3!, {r0, r1, r2, r3, r5, r6, r9, ip, sp, lr}^
    1d1c:	6567616d 	strbvs	r6, [r7, #-365]!	; 0xfffffe93
    1d20:	646e6900 	strbtvs	r6, [lr], #-2304	; 0xfffff700
    1d24:	73726f6f 	cmnvc	r2, #444	; 0x1bc
    1d28:	63616c42 	cmnvs	r1, #16896	; 0x4200
    1d2c:	6e69006b 	cdpvs	0, 6, cr0, cr9, cr11, {3}
    1d30:	726f6f64 	rsbvc	r6, pc, #100, 30	; 0x190
    1d34:	616d4973 	smcvs	54419	; 0xd493
    1d38:	00736567 	rsbseq	r6, r3, r7, ror #10
    1d3c:	6f646e69 	svcvs	0x00646e69
    1d40:	5f73726f 	svcpl	0x0073726f
    1d44:	6867696c 	stmdavs	r7!, {r2, r3, r5, r6, r8, fp, sp, lr}^
    1d48:	69625f74 	stmdbvs	r2!, {r2, r4, r5, r6, r8, r9, sl, fp, ip, lr}^
    1d4c:	74007374 	strvc	r7, [r0], #-884	; 0xfffffc8c
    1d50:	49706d65 	ldmdbmi	r0!, {r0, r2, r5, r6, r8, sl, fp, sp, lr}^
    1d54:	6f6f646e 	svcvs	0x006f646e
    1d58:	72477372 	subvc	r7, r7, #-939524095	; 0xc8000001
    1d5c:	69007961 	stmdbvs	r0, {r0, r5, r6, r8, fp, ip, sp, lr}
    1d60:	6f6f646e 	svcvs	0x006f646e
    1d64:	675f7372 			; <UNDEFINED> instruction: 0x675f7372
    1d68:	5f796172 	svcpl	0x00796172
    1d6c:	73746962 	cmnvc	r4, #1605632	; 0x188000
    1d70:	6d657400 	cfstrdvs	mvd7, [r5, #-0]
    1d74:	646e4970 	strbtvs	r4, [lr], #-2416	; 0xfffff690
    1d78:	73726f6f 	cmnvc	r2, #444	; 0x1bc
    1d7c:	6867694c 	stmdavs	r7!, {r2, r3, r6, r8, fp, sp, lr}^
    1d80:	6e690074 	mcrvs	0, 3, r0, cr9, cr4, {3}
    1d84:	726f6f64 	rsbvc	r6, pc, #100, 30	; 0x190
    1d88:	67694c73 			; <UNDEFINED> instruction: 0x67694c73
    1d8c:	43007468 	movwmi	r7, #1128	; 0x468
    1d90:	6f6d2f3a 	svcvs	0x006d2f3a
    1d94:	2f632f70 	svccs	0x00632f70
    1d98:	6c706f4d 	ldclvs	15, cr6, [r0], #-308	; 0xfffffecc
    1d9c:	726f6261 	rsbvc	r6, pc, #268435462	; 0x10000006
    1da0:	6f697461 	svcvs	0x00697461
    1da4:	2f72656e 	svccs	0x0072656e
    1da8:	73504944 	cmpvc	r0, #68, 18	; 0x110000
    1dac:	7469572d 	strbtvc	r5, [r9], #-1837	; 0xfffff8d3
    1db0:	432f6863 			; <UNDEFINED> instruction: 0x432f6863
    1db4:	646e692f 	strbtvs	r6, [lr], #-2351	; 0xfffff6d1
    1db8:	73726f6f 	cmnvc	r2, #444	; 0x1bc
    1dbc:	6900632e 	stmdbvs	r0, {r1, r2, r3, r5, r8, r9, sp, lr}
    1dc0:	6f6f646e 	svcvs	0x006f646e
    1dc4:	625f7372 	subsvs	r7, pc, #-939524095	; 0xc8000001
    1dc8:	6b63616c 	blvs	18da380 <startup-0x1e725c80>
    1dcc:	7469625f 	strbtvc	r6, [r9], #-607	; 0xfffffda1
    1dd0:	65740073 	ldrbvs	r0, [r4, #-115]!	; 0xffffff8d
    1dd4:	6e49706d 	cdpvs	0, 4, cr7, cr9, cr13, {3}
    1dd8:	726f6f64 	rsbvc	r6, pc, #100, 30	; 0x190
    1ddc:	616c4273 	smcvs	50211	; 0xc423
    1de0:	69006b63 	stmdbvs	r0, {r0, r1, r5, r6, r8, r9, fp, sp, lr}
    1de4:	5f74696e 	svcpl	0x0074696e
    1de8:	6f646e69 	svcvs	0x00646e69
    1dec:	0073726f 	rsbseq	r7, r3, pc, ror #4
    1df0:	6f646e69 	svcvs	0x00646e69
    1df4:	4f73726f 	svcmi	0x0073726f
    1df8:	69006a62 	stmdbvs	r0, {r1, r5, r6, r9, fp, sp, lr}
    1dfc:	6f6f646e 	svcvs	0x006f646e
    1e00:	72477372 	subvc	r7, r7, #-939524095	; 0xc8000001
    1e04:	69007961 	stmdbvs	r0, {r0, r5, r6, r8, fp, ip, sp, lr}
    1e08:	6f6f646e 	svcvs	0x006f646e
    1e0c:	4c327372 	ldcmi	3, cr7, [r2], #-456	; 0xfffffe38
    1e10:	74686769 	strbtvc	r6, [r8], #-1897	; 0xfffff897
    1e14:	646e6900 	strbtvs	r6, [lr], #-2304	; 0xfffff700
    1e18:	73726f6f 	cmnvc	r2, #444	; 0x1bc
    1e1c:	6c625f32 	stclvs	15, cr5, [r2], #-200	; 0xffffff38
    1e20:	5f6b6361 	svcpl	0x006b6361
    1e24:	73746962 	cmnvc	r4, #1605632	; 0x188000
    1e28:	6d657400 	cfstrdvs	mvd7, [r5, #-0]
    1e2c:	646e4970 	strbtvs	r4, [lr], #-2416	; 0xfffff690
    1e30:	73726f6f 	cmnvc	r2, #444	; 0x1bc
    1e34:	67694c32 			; <UNDEFINED> instruction: 0x67694c32
    1e38:	69007468 	stmdbvs	r0, {r3, r5, r6, sl, ip, sp, lr}
    1e3c:	6f6f646e 	svcvs	0x006f646e
    1e40:	47327372 			; <UNDEFINED> instruction: 0x47327372
    1e44:	00796172 	rsbseq	r6, r9, r2, ror r1
    1e48:	6d2f3a43 	vstmdbvs	pc!, {s6-s72}
    1e4c:	632f706f 			; <UNDEFINED> instruction: 0x632f706f
    1e50:	706f4d2f 	rsbvc	r4, pc, pc, lsr #26
    1e54:	6f62616c 	svcvs	0x0062616c
    1e58:	69746172 	ldmdbvs	r4!, {r1, r4, r5, r6, r8, sp, lr}^
    1e5c:	72656e6f 	rsbvc	r6, r5, #1776	; 0x6f0
    1e60:	5049442f 	subpl	r4, r9, pc, lsr #8
    1e64:	69572d73 	ldmdbvs	r7, {r0, r1, r4, r5, r6, r8, sl, fp, sp}^
    1e68:	2f686374 	svccs	0x00686374
    1e6c:	6e692f43 	cdpvs	15, 6, cr2, cr9, cr3, {2}
    1e70:	726f6f64 	rsbvc	r6, pc, #100, 30	; 0x190
    1e74:	632e3273 			; <UNDEFINED> instruction: 0x632e3273
    1e78:	6d657400 	cfstrdvs	mvd7, [r5, #-0]
    1e7c:	646e4970 	strbtvs	r4, [lr], #-2416	; 0xfffff690
    1e80:	73726f6f 	cmnvc	r2, #444	; 0x1bc
    1e84:	616c4232 	cmnvs	ip, r2, lsr r2
    1e88:	69006b63 	stmdbvs	r0, {r0, r1, r5, r6, r8, r9, fp, sp, lr}
    1e8c:	6f6f646e 	svcvs	0x006f646e
    1e90:	42327372 	eorsmi	r7, r2, #-939524095	; 0xc8000001
    1e94:	6b63616c 	blvs	18da44c <startup-0x1e725bb4>
    1e98:	646e6900 	strbtvs	r6, [lr], #-2304	; 0xfffff700
    1e9c:	73726f6f 	cmnvc	r2, #444	; 0x1bc
    1ea0:	616d4932 	cmnvs	sp, r2, lsr r9
    1ea4:	69006567 	stmdbvs	r0, {r0, r1, r2, r5, r6, r8, sl, sp, lr}
    1ea8:	5f74696e 	svcpl	0x0074696e
    1eac:	6f646e69 	svcvs	0x00646e69
    1eb0:	3273726f 	rsbscc	r7, r3, #-268435450	; 0xf0000006
    1eb4:	646e6900 	strbtvs	r6, [lr], #-2304	; 0xfffff700
    1eb8:	73726f6f 	cmnvc	r2, #444	; 0x1bc
    1ebc:	696c5f32 	stmdbvs	ip!, {r1, r4, r5, r8, r9, sl, fp, ip, lr}^
    1ec0:	5f746867 	svcpl	0x00746867
    1ec4:	73746962 	cmnvc	r4, #1605632	; 0x188000
    1ec8:	646e6900 	strbtvs	r6, [lr], #-2304	; 0xfffff700
    1ecc:	73726f6f 	cmnvc	r2, #444	; 0x1bc
    1ed0:	616d4932 	cmnvs	sp, r2, lsr r9
    1ed4:	00736567 	rsbseq	r6, r3, r7, ror #10
    1ed8:	6f646e69 	svcvs	0x00646e69
    1edc:	3273726f 	rsbscc	r7, r3, #-268435450	; 0xf0000006
    1ee0:	6172675f 	cmnvs	r2, pc, asr r7
    1ee4:	69625f79 	stmdbvs	r2!, {r0, r3, r4, r5, r6, r8, r9, sl, fp, ip, lr}^
    1ee8:	69007374 	stmdbvs	r0, {r2, r4, r5, r6, r8, r9, ip, sp, lr}
    1eec:	6f6f646e 	svcvs	0x006f646e
    1ef0:	4f327372 	svcmi	0x00327372
    1ef4:	74006a62 	strvc	r6, [r0], #-2658	; 0xfffff59e
    1ef8:	49706d65 	ldmdbmi	r0!, {r0, r2, r5, r6, r8, sl, fp, sp, lr}^
    1efc:	6f6f646e 	svcvs	0x006f646e
    1f00:	47327372 			; <UNDEFINED> instruction: 0x47327372
    1f04:	00796172 	rsbseq	r6, r9, r2, ror r1
    1f08:	6d2f3a43 	vstmdbvs	pc!, {s6-s72}
    1f0c:	632f706f 			; <UNDEFINED> instruction: 0x632f706f
    1f10:	706f4d2f 	rsbvc	r4, pc, pc, lsr #26
    1f14:	6f62616c 	svcvs	0x0062616c
    1f18:	69746172 	ldmdbvs	r4!, {r1, r4, r5, r6, r8, sp, lr}^
    1f1c:	72656e6f 	rsbvc	r6, r5, #1776	; 0x6f0
    1f20:	5049442f 	subpl	r4, r9, pc, lsr #8
    1f24:	69572d73 	ldmdbvs	r7, {r0, r1, r4, r5, r6, r8, sl, fp, sp}^
    1f28:	2f686374 	svccs	0x00686374
    1f2c:	72742f43 	rsbsvc	r2, r4, #268	; 0x10c
    1f30:	7968706f 	stmdbvc	r8!, {r0, r1, r2, r3, r5, r6, ip, sp, lr}^
    1f34:	7400632e 	strvc	r6, [r0], #-814	; 0xfffffcd2
    1f38:	68706f72 	ldmdavs	r0!, {r1, r4, r5, r6, r8, r9, sl, fp, sp, lr}^
    1f3c:	6c625f79 	stclvs	15, cr5, [r2], #-484	; 0xfffffe1c
    1f40:	5f6b6361 	svcpl	0x006b6361
    1f44:	73746962 	cmnvc	r4, #1605632	; 0x188000
    1f48:	6f727400 	svcvs	0x00727400
    1f4c:	4c796870 	ldclmi	8, cr6, [r9], #-448	; 0xfffffe40
    1f50:	74686769 	strbtvc	r6, [r8], #-1897	; 0xfffff897
    1f54:	6f727400 	svcvs	0x00727400
    1f58:	4f796870 	svcmi	0x00796870
    1f5c:	74006a62 	strvc	r6, [r0], #-2658	; 0xfffff59e
    1f60:	68706f72 	ldmdavs	r0!, {r1, r4, r5, r6, r8, r9, sl, fp, sp, lr}^
    1f64:	696c5f79 	stmdbvs	ip!, {r0, r3, r4, r5, r6, r8, r9, sl, fp, ip, lr}^
    1f68:	5f746867 	svcpl	0x00746867
    1f6c:	73746962 	cmnvc	r4, #1605632	; 0x188000
    1f70:	6d657400 	cfstrdvs	mvd7, [r5, #-0]
    1f74:	6f725470 	svcvs	0x00725470
    1f78:	42796870 	rsbsmi	r6, r9, #112, 16	; 0x700000
    1f7c:	6b63616c 	blvs	18da534 <startup-0x1e725acc>
    1f80:	6f727400 	svcvs	0x00727400
    1f84:	5f796870 	svcpl	0x00796870
    1f88:	79617267 	stmdbvc	r1!, {r0, r1, r2, r5, r6, r9, ip, sp, lr}^
    1f8c:	7469625f 	strbtvc	r6, [r9], #-607	; 0xfffffda1
    1f90:	65740073 	ldrbvs	r0, [r4, #-115]!	; 0xffffff8d
    1f94:	7254706d 	subsvc	r7, r4, #109	; 0x6d
    1f98:	7968706f 	stmdbvc	r8!, {r0, r1, r2, r3, r5, r6, ip, sp, lr}^
    1f9c:	6867694c 	stmdavs	r7!, {r2, r3, r6, r8, fp, sp, lr}^
    1fa0:	72740074 	rsbsvc	r0, r4, #116	; 0x74
    1fa4:	7968706f 	stmdbvc	r8!, {r0, r1, r2, r3, r5, r6, ip, sp, lr}^
    1fa8:	79617247 	stmdbvc	r1!, {r0, r1, r2, r6, r9, ip, sp, lr}^
    1fac:	6f727400 	svcvs	0x00727400
    1fb0:	49796870 	ldmdbmi	r9!, {r4, r5, r6, fp, sp, lr}^
    1fb4:	6567616d 	strbvs	r6, [r7, #-365]!	; 0xfffffe93
    1fb8:	72740073 	rsbsvc	r0, r4, #115	; 0x73
    1fbc:	7968706f 	stmdbvc	r8!, {r0, r1, r2, r3, r5, r6, ip, sp, lr}^
    1fc0:	67616d49 	strbvs	r6, [r1, -r9, asr #26]!
    1fc4:	72740065 	rsbsvc	r0, r4, #101	; 0x65
    1fc8:	7968706f 	stmdbvc	r8!, {r0, r1, r2, r3, r5, r6, ip, sp, lr}^
    1fcc:	63616c42 	cmnvs	r1, #16896	; 0x4200
    1fd0:	6574006b 	ldrbvs	r0, [r4, #-107]!	; 0xffffff95
    1fd4:	7254706d 	subsvc	r7, r4, #109	; 0x6d
    1fd8:	7968706f 	stmdbvc	r8!, {r0, r1, r2, r3, r5, r6, ip, sp, lr}^
    1fdc:	79617247 	stmdbvc	r1!, {r0, r1, r2, r6, r9, ip, sp, lr}^
    1fe0:	676f7200 	strbvs	r7, [pc, -r0, lsl #4]!
    1fe4:	625f7265 	subsvs	r7, pc, #1342177286	; 0x50000006
    1fe8:	6b63616c 	blvs	18da5a0 <startup-0x1e725a60>
    1fec:	7469625f 	strbtvc	r6, [r9], #-607	; 0xfffffda1
    1ff0:	6f720073 	svcvs	0x00720073
    1ff4:	4f726567 	svcmi	0x00726567
    1ff8:	43006a62 	movwmi	r6, #2658	; 0xa62
    1ffc:	6f6d2f3a 	svcvs	0x006d2f3a
    2000:	2f632f70 	svccs	0x00632f70
    2004:	6c706f4d 	ldclvs	15, cr6, [r0], #-308	; 0xfffffecc
    2008:	726f6261 	rsbvc	r6, pc, #268435462	; 0x10000006
    200c:	6f697461 	svcvs	0x00697461
    2010:	2f72656e 	svccs	0x0072656e
    2014:	73504944 	cmpvc	r0, #68, 18	; 0x110000
    2018:	7469572d 	strbtvc	r5, [r9], #-1837	; 0xfffff8d3
    201c:	432f6863 			; <UNDEFINED> instruction: 0x432f6863
    2020:	676f722f 	strbvs	r7, [pc, -pc, lsr #4]!
    2024:	632e7265 			; <UNDEFINED> instruction: 0x632e7265
    2028:	6d657400 	cfstrdvs	mvd7, [r5, #-0]
    202c:	676f5270 			; <UNDEFINED> instruction: 0x676f5270
    2030:	72477265 	subvc	r7, r7, #1342177286	; 0x50000006
    2034:	74007961 	strvc	r7, [r0], #-2401	; 0xfffff69f
    2038:	52706d65 	rsbspl	r6, r0, #6464	; 0x1940
    203c:	7265676f 	rsbvc	r6, r5, #29097984	; 0x1bc0000
    2040:	63616c42 	cmnvs	r1, #16896	; 0x4200
    2044:	6f72006b 	svcvs	0x0072006b
    2048:	5f726567 	svcpl	0x00726567
    204c:	79617267 	stmdbvc	r1!, {r0, r1, r2, r5, r6, r9, ip, sp, lr}^
    2050:	7469625f 	strbtvc	r6, [r9], #-607	; 0xfffffda1
    2054:	6f720073 	svcvs	0x00720073
    2058:	49726567 	ldmdbmi	r2!, {r0, r1, r2, r5, r6, r8, sl, sp, lr}^
    205c:	6567616d 	strbvs	r6, [r7, #-365]!	; 0xfffffe93
    2060:	6f720073 	svcvs	0x00720073
    2064:	47726567 	ldrbmi	r6, [r2, -r7, ror #10]!
    2068:	00796172 	rsbseq	r6, r9, r2, ror r1
    206c:	65676f72 	strbvs	r6, [r7, #-3954]!	; 0xfffff08e
    2070:	67694c72 			; <UNDEFINED> instruction: 0x67694c72
    2074:	72007468 	andvc	r7, r0, #104, 8	; 0x68000000
    2078:	7265676f 	rsbvc	r6, r5, #29097984	; 0x1bc0000
    207c:	67696c5f 			; <UNDEFINED> instruction: 0x67696c5f
    2080:	625f7468 	subsvs	r7, pc, #104, 8	; 0x68000000
    2084:	00737469 	rsbseq	r7, r3, r9, ror #8
    2088:	65676f72 	strbvs	r6, [r7, #-3954]!	; 0xfffff08e
    208c:	616d4972 	smcvs	54418	; 0xd492
    2090:	72006567 	andvc	r6, r0, #432013312	; 0x19c00000
    2094:	7265676f 	rsbvc	r6, r5, #29097984	; 0x1bc0000
    2098:	63616c42 	cmnvs	r1, #16896	; 0x4200
    209c:	6574006b 	ldrbvs	r0, [r4, #-107]!	; 0xffffff95
    20a0:	6f52706d 	svcvs	0x0052706d
    20a4:	4c726567 	cfldr64mi	mvdx6, [r2], #-412	; 0xfffffe64
    20a8:	74686769 	strbtvc	r6, [r8], #-1897	; 0xfffff897
	...

Disassembly of section .comment:

00000000 <.comment>:
   0:	3a434347 	bcc	10d0d24 <startup-0x1ef2f2dc>
   4:	4e472820 	cdpmi	8, 4, cr2, cr7, cr0, {1}
   8:	6f542055 	svcvs	0x00542055
   c:	20736c6f 	rsbscs	r6, r3, pc, ror #24
  10:	20726f66 	rsbscs	r6, r2, r6, ror #30
  14:	204d5241 	subcs	r5, sp, r1, asr #4
  18:	65626d45 	strbvs	r6, [r2, #-3397]!	; 0xfffff2bb
  1c:	64656464 	strbtvs	r6, [r5], #-1124	; 0xfffffb9c
  20:	6f725020 	svcvs	0x00725020
  24:	73736563 	cmnvc	r3, #415236096	; 0x18c00000
  28:	2073726f 	rsbscs	r7, r3, pc, ror #4
  2c:	30322d36 	eorscc	r2, r2, r6, lsr sp
  30:	712d3731 			; <UNDEFINED> instruction: 0x712d3731
  34:	70752d31 	rsbsvc	r2, r5, r1, lsr sp
  38:	65746164 	ldrbvs	r6, [r4, #-356]!	; 0xfffffe9c
  3c:	2e362029 	cdpcs	0, 3, cr2, cr6, cr9, {1}
  40:	20312e33 	eorscs	r2, r1, r3, lsr lr
  44:	37313032 			; <UNDEFINED> instruction: 0x37313032
  48:	35313230 	ldrcc	r3, [r1, #-560]!	; 0xfffffdd0
  4c:	65722820 	ldrbvs	r2, [r2, #-2080]!	; 0xfffff7e0
  50:	7361656c 	cmnvc	r1, #108, 10	; 0x1b000000
  54:	5b202965 	blpl	80a5f0 <startup-0x1f7f5a10>
  58:	2f4d5241 	svccs	0x004d5241
  5c:	65626d65 	strbvs	r6, [r2, #-3429]!	; 0xfffff29b
  60:	64656464 	strbtvs	r6, [r5], #-1124	; 0xfffffb9c
  64:	622d362d 	eorvs	r3, sp, #47185920	; 0x2d00000
  68:	636e6172 	cmnvs	lr, #-2147483620	; 0x8000001c
  6c:	65722068 	ldrbvs	r2, [r2, #-104]!	; 0xffffff98
  70:	69736976 	ldmdbvs	r3!, {r1, r2, r4, r5, r6, r8, fp, sp, lr}^
  74:	32206e6f 	eorcc	r6, r0, #1776	; 0x6f0
  78:	31353534 	teqcc	r5, r4, lsr r5
  7c:	Address 0x0000007c is out of bounds.


Disassembly of section .ARM.attributes:

00000000 <.ARM.attributes>:
   0:	00002b41 	andeq	r2, r0, r1, asr #22
   4:	61656100 	cmnvs	r5, r0, lsl #2
   8:	01006962 	tsteq	r0, r2, ror #18
   c:	00000021 	andeq	r0, r0, r1, lsr #32
  10:	2d533605 	ldclcs	6, cr3, [r3, #-20]	; 0xffffffec
  14:	0c06004d 	stceq	0, cr0, [r6], {77}	; 0x4d
  18:	01094d07 	tsteq	r9, r7, lsl #26
  1c:	01140412 	tsteq	r4, r2, lsl r4
  20:	03170115 	tsteq	r7, #1073741829	; 0x40000005
  24:	01190118 	tsteq	r9, r8, lsl r1
  28:	061e011a 			; <UNDEFINED> instruction: 0x061e011a

Disassembly of section .debug_frame:

00000000 <.debug_frame>:
   0:	0000000c 	andeq	r0, r0, ip
   4:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
   8:	7c020001 	stcvc	0, cr0, [r2], {1}
   c:	000d0c0e 	andeq	r0, sp, lr, lsl #24
  10:	0000000c 	andeq	r0, r0, ip
  14:	00000000 	andeq	r0, r0, r0
  18:	20000000 	andcs	r0, r0, r0
  1c:	0000000c 	andeq	r0, r0, ip
  20:	00000018 	andeq	r0, r0, r8, lsl r0
  24:	00000000 	andeq	r0, r0, r0
  28:	20000010 	andcs	r0, r0, r0, lsl r0
  2c:	00000024 	andeq	r0, r0, r4, lsr #32
  30:	40080e41 	andmi	r0, r8, r1, asr #28
  34:	8e400287 	cdphi	2, 4, cr0, cr0, cr7, {4}
  38:	070d4101 	streq	r4, [sp, -r1, lsl #2]
  3c:	0000001c 	andeq	r0, r0, ip, lsl r0
  40:	00000000 	andeq	r0, r0, r0
  44:	20000034 	andcs	r0, r0, r4, lsr r0
  48:	000001c8 	andeq	r0, r0, r8, asr #3
  4c:	40080e41 	andmi	r0, r8, r1, asr #28
  50:	8e400287 	cdphi	2, 4, cr0, cr0, cr7, {4}
  54:	300e4101 	andcc	r4, lr, r1, lsl #2
  58:	00070d41 	andeq	r0, r7, r1, asr #26
  5c:	00000020 	andeq	r0, r0, r0, lsr #32
  60:	00000000 	andeq	r0, r0, r0
  64:	200001fc 	strdcs	r0, [r0], -ip
  68:	000016a0 	andeq	r1, r0, r0, lsr #13
  6c:	400c0e41 	andmi	r0, ip, r1, asr #28
  70:	87400384 	strbhi	r0, [r0, -r4, lsl #7]
  74:	018e4002 	orreq	r4, lr, r2
  78:	09d00e42 	ldmibeq	r0, {r1, r6, r9, sl, fp}^
  7c:	00070d41 	andeq	r0, r7, r1, asr #26
  80:	0000001c 	andeq	r0, r0, ip, lsl r0
  84:	00000000 	andeq	r0, r0, r0
  88:	2000189c 	mulcs	r0, ip, r8
  8c:	0000001e 	andeq	r0, r0, lr, lsl r0
  90:	40080e41 	andmi	r0, r8, r1, asr #28
  94:	8e400287 	cdphi	2, 4, cr0, cr0, cr7, {4}
  98:	100e4101 	andne	r4, lr, r1, lsl #2
  9c:	00070d41 	andeq	r0, r7, r1, asr #26
  a0:	0000000c 	andeq	r0, r0, ip
  a4:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
  a8:	7c020001 	stcvc	0, cr0, [r2], {1}
  ac:	000d0c0e 	andeq	r0, sp, lr, lsl #24
  b0:	0000001c 	andeq	r0, r0, ip, lsl r0
  b4:	000000a0 	andeq	r0, r0, r0, lsr #1
  b8:	200018bc 			; <UNDEFINED> instruction: 0x200018bc
  bc:	00000010 	andeq	r0, r0, r0, lsl r0
  c0:	40080e41 	andmi	r0, r8, r1, asr #28
  c4:	8e400287 	cdphi	2, 4, cr0, cr0, cr7, {4}
  c8:	100e4101 	andne	r4, lr, r1, lsl #2
  cc:	00070d41 	andeq	r0, r7, r1, asr #26
  d0:	0000001c 	andeq	r0, r0, ip, lsl r0
  d4:	000000a0 	andeq	r0, r0, r0, lsr #1
  d8:	200018cc 	andcs	r1, r0, ip, asr #17
  dc:	00000046 	andeq	r0, r0, r6, asr #32
  e0:	40080e41 	andmi	r0, r8, r1, asr #28
  e4:	8e400287 	cdphi	2, 4, cr0, cr0, cr7, {4}
  e8:	100e4101 	andne	r4, lr, r1, lsl #2
  ec:	00070d41 	andeq	r0, r7, r1, asr #26
  f0:	0000000c 	andeq	r0, r0, ip
  f4:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
  f8:	7c020001 	stcvc	0, cr0, [r2], {1}
  fc:	000d0c0e 	andeq	r0, sp, lr, lsl #24
 100:	0000001c 	andeq	r0, r0, ip, lsl r0
 104:	000000f0 	strdeq	r0, [r0], -r0	; <UNPREDICTABLE>
 108:	20001914 	andcs	r1, r0, r4, lsl r9
 10c:	00000184 	andeq	r0, r0, r4, lsl #3
 110:	40080e41 	andmi	r0, r8, r1, asr #28
 114:	8e400287 	cdphi	2, 4, cr0, cr0, cr7, {4}
 118:	380e4101 	stmdacc	lr, {r0, r8, lr}
 11c:	00070d41 	andeq	r0, r7, r1, asr #26
 120:	00000020 	andeq	r0, r0, r0, lsr #32
 124:	000000f0 	strdeq	r0, [r0], -r0	; <UNPREDICTABLE>
 128:	20001a98 	mulcs	r0, r8, sl
 12c:	00000124 	andeq	r0, r0, r4, lsr #2
 130:	400c0e41 	andmi	r0, ip, r1, asr #28
 134:	87400384 	strbhi	r0, [r0, -r4, lsl #7]
 138:	018e4002 	orreq	r4, lr, r2
 13c:	41180e41 	tstmi	r8, r1, asr #28
 140:	0000070d 	andeq	r0, r0, sp, lsl #14
 144:	0000000c 	andeq	r0, r0, ip
 148:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
 14c:	7c020001 	stcvc	0, cr0, [r2], {1}
 150:	000d0c0e 	andeq	r0, sp, lr, lsl #24
 154:	0000001c 	andeq	r0, r0, ip, lsl r0
 158:	00000144 	andeq	r0, r0, r4, asr #2
 15c:	20001bbc 			; <UNDEFINED> instruction: 0x20001bbc
 160:	00000204 	andeq	r0, r0, r4, lsl #4
 164:	40080e41 	andmi	r0, r8, r1, asr #28
 168:	8e400287 	cdphi	2, 4, cr0, cr0, cr7, {4}
 16c:	100e4101 	andne	r4, lr, r1, lsl #2
 170:	00070d41 	andeq	r0, r7, r1, asr #26
 174:	0000000c 	andeq	r0, r0, ip
 178:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
 17c:	7c020001 	stcvc	0, cr0, [r2], {1}
 180:	000d0c0e 	andeq	r0, sp, lr, lsl #24
 184:	0000001c 	andeq	r0, r0, ip, lsl r0
 188:	00000174 	andeq	r0, r0, r4, ror r1
 18c:	20001dc0 	andcs	r1, r0, r0, asr #27
 190:	0000020c 	andeq	r0, r0, ip, lsl #4
 194:	40080e41 	andmi	r0, r8, r1, asr #28
 198:	8e400287 	cdphi	2, 4, cr0, cr0, cr7, {4}
 19c:	480e4101 	stmdami	lr, {r0, r8, lr}
 1a0:	00070d41 	andeq	r0, r7, r1, asr #26
 1a4:	00000020 	andeq	r0, r0, r0, lsr #32
 1a8:	00000174 	andeq	r0, r0, r4, ror r1
 1ac:	20001fcc 	andcs	r1, r0, ip, asr #31
 1b0:	00000158 	andeq	r0, r0, r8, asr r1
 1b4:	400c0e41 	andmi	r0, ip, r1, asr #28
 1b8:	87400384 	strbhi	r0, [r0, -r4, lsl #7]
 1bc:	018e4002 	orreq	r4, lr, r2
 1c0:	41180e41 	tstmi	r8, r1, asr #28
 1c4:	0000070d 	andeq	r0, r0, sp, lsl #14
 1c8:	0000000c 	andeq	r0, r0, ip
 1cc:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
 1d0:	7c020001 	stcvc	0, cr0, [r2], {1}
 1d4:	000d0c0e 	andeq	r0, sp, lr, lsl #24
 1d8:	0000001c 	andeq	r0, r0, ip, lsl r0
 1dc:	000001c8 	andeq	r0, r0, r8, asr #3
 1e0:	20002124 	andcs	r2, r0, r4, lsr #2
 1e4:	00000140 	andeq	r0, r0, r0, asr #2
 1e8:	40080e41 	andmi	r0, r8, r1, asr #28
 1ec:	8e400287 	cdphi	2, 4, cr0, cr0, cr7, {4}
 1f0:	300e4101 	andcc	r4, lr, r1, lsl #2
 1f4:	00070d41 	andeq	r0, r7, r1, asr #26
 1f8:	00000020 	andeq	r0, r0, r0, lsr #32
 1fc:	000001c8 	andeq	r0, r0, r8, asr #3
 200:	20002264 	andcs	r2, r0, r4, ror #4
 204:	000000f8 	strdeq	r0, [r0], -r8
 208:	400c0e41 	andmi	r0, ip, r1, asr #28
 20c:	87400384 	strbhi	r0, [r0, -r4, lsl #7]
 210:	018e4002 	orreq	r4, lr, r2
 214:	41180e41 	tstmi	r8, r1, asr #28
 218:	0000070d 	andeq	r0, r0, sp, lsl #14
 21c:	0000000c 	andeq	r0, r0, ip
 220:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
 224:	7c020001 	stcvc	0, cr0, [r2], {1}
 228:	000d0c0e 	andeq	r0, sp, lr, lsl #24
 22c:	0000001c 	andeq	r0, r0, ip, lsl r0
 230:	0000021c 	andeq	r0, r0, ip, lsl r2
 234:	2000235c 	andcs	r2, r0, ip, asr r3
 238:	00000140 	andeq	r0, r0, r0, asr #2
 23c:	40080e41 	andmi	r0, r8, r1, asr #28
 240:	8e400287 	cdphi	2, 4, cr0, cr0, cr7, {4}
 244:	300e4101 	andcc	r4, lr, r1, lsl #2
 248:	00070d41 	andeq	r0, r7, r1, asr #26
 24c:	00000020 	andeq	r0, r0, r0, lsr #32
 250:	0000021c 	andeq	r0, r0, ip, lsl r2
 254:	2000249c 	mulcs	r0, ip, r4
 258:	000000f8 	strdeq	r0, [r0], -r8
 25c:	400c0e41 	andmi	r0, ip, r1, asr #28
 260:	87400384 	strbhi	r0, [r0, -r4, lsl #7]
 264:	018e4002 	orreq	r4, lr, r2
 268:	41180e41 	tstmi	r8, r1, asr #28
 26c:	0000070d 	andeq	r0, r0, sp, lsl #14
 270:	0000001c 	andeq	r0, r0, ip, lsl r0
 274:	0000021c 	andeq	r0, r0, ip, lsl r2
 278:	20002594 	mulcs	r0, r4, r5
 27c:	00000028 	andeq	r0, r0, r8, lsr #32
 280:	40080e41 	andmi	r0, r8, r1, asr #28
 284:	8e400287 	cdphi	2, 4, cr0, cr0, cr7, {4}
 288:	100e4101 	andne	r4, lr, r1, lsl #2
 28c:	00070d41 	andeq	r0, r7, r1, asr #26
 290:	0000001c 	andeq	r0, r0, ip, lsl r0
 294:	0000021c 	andeq	r0, r0, ip, lsl r2
 298:	200025bc 			; <UNDEFINED> instruction: 0x200025bc
 29c:	00000110 	andeq	r0, r0, r0, lsl r1
 2a0:	40080e41 	andmi	r0, r8, r1, asr #28
 2a4:	8e400287 	cdphi	2, 4, cr0, cr0, cr7, {4}
 2a8:	100e4101 	andne	r4, lr, r1, lsl #2
 2ac:	00070d41 	andeq	r0, r7, r1, asr #26
 2b0:	0000000c 	andeq	r0, r0, ip
 2b4:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
 2b8:	7c020001 	stcvc	0, cr0, [r2], {1}
 2bc:	000d0c0e 	andeq	r0, sp, lr, lsl #24
 2c0:	0000001c 	andeq	r0, r0, ip, lsl r0
 2c4:	000002b0 			; <UNDEFINED> instruction: 0x000002b0
 2c8:	200026cc 	andcs	r2, r0, ip, asr #13
 2cc:	000001a8 	andeq	r0, r0, r8, lsr #3
 2d0:	40080e41 	andmi	r0, r8, r1, asr #28
 2d4:	8e400287 	cdphi	2, 4, cr0, cr0, cr7, {4}
 2d8:	380e4101 	stmdacc	lr, {r0, r8, lr}
 2dc:	00070d41 	andeq	r0, r7, r1, asr #26
 2e0:	00000020 	andeq	r0, r0, r0, lsr #32
 2e4:	000002b0 			; <UNDEFINED> instruction: 0x000002b0
 2e8:	20002874 	andcs	r2, r0, r4, ror r8
 2ec:	00000104 	andeq	r0, r0, r4, lsl #2
 2f0:	400c0e41 	andmi	r0, ip, r1, asr #28
 2f4:	87400384 	strbhi	r0, [r0, -r4, lsl #7]
 2f8:	018e4002 	orreq	r4, lr, r2
 2fc:	41180e41 	tstmi	r8, r1, asr #28
 300:	0000070d 	andeq	r0, r0, sp, lsl #14
 304:	0000000c 	andeq	r0, r0, ip
 308:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
 30c:	7c020001 	stcvc	0, cr0, [r2], {1}
 310:	000d0c0e 	andeq	r0, sp, lr, lsl #24
 314:	0000001c 	andeq	r0, r0, ip, lsl r0
 318:	00000304 	andeq	r0, r0, r4, lsl #6
 31c:	20002978 	andcs	r2, r0, r8, ror r9
 320:	00000274 	andeq	r0, r0, r4, ror r2
 324:	40080e41 	andmi	r0, r8, r1, asr #28
 328:	8e400287 	cdphi	2, 4, cr0, cr0, cr7, {4}
 32c:	500e4101 	andpl	r4, lr, r1, lsl #2
 330:	00070d41 	andeq	r0, r7, r1, asr #26
 334:	00000020 	andeq	r0, r0, r0, lsr #32
 338:	00000304 	andeq	r0, r0, r4, lsl #6
 33c:	20002bec 	andcs	r2, r0, ip, ror #23
 340:	000002b8 			; <UNDEFINED> instruction: 0x000002b8
 344:	400c0e41 	andmi	r0, ip, r1, asr #28
 348:	87400384 	strbhi	r0, [r0, -r4, lsl #7]
 34c:	018e4002 	orreq	r4, lr, r2
 350:	41180e41 	tstmi	r8, r1, asr #28
 354:	0000070d 	andeq	r0, r0, sp, lsl #14
 358:	0000000c 	andeq	r0, r0, ip
 35c:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
 360:	7c020001 	stcvc	0, cr0, [r2], {1}
 364:	000d0c0e 	andeq	r0, sp, lr, lsl #24
 368:	00000018 	andeq	r0, r0, r8, lsl r0
 36c:	00000358 	andeq	r0, r0, r8, asr r3
 370:	20002ea4 	andcs	r2, r0, r4, lsr #29
 374:	00000044 	andeq	r0, r0, r4, asr #32
 378:	40080e41 	andmi	r0, r8, r1, asr #28
 37c:	8e400287 	cdphi	2, 4, cr0, cr0, cr7, {4}
 380:	070d4101 	streq	r4, [sp, -r1, lsl #2]
 384:	00000018 	andeq	r0, r0, r8, lsl r0
 388:	00000358 	andeq	r0, r0, r8, asr r3
 38c:	20002ee8 	andcs	r2, r0, r8, ror #29
 390:	00000044 	andeq	r0, r0, r4, asr #32
 394:	40080e41 	andmi	r0, r8, r1, asr #28
 398:	8e400287 	cdphi	2, 4, cr0, cr0, cr7, {4}
 39c:	070d4101 	streq	r4, [sp, -r1, lsl #2]
 3a0:	0000001c 	andeq	r0, r0, ip, lsl r0
 3a4:	00000358 	andeq	r0, r0, r8, asr r3
 3a8:	20002f2c 	andcs	r2, r0, ip, lsr #30
 3ac:	0000002c 	andeq	r0, r0, ip, lsr #32
 3b0:	40080e41 	andmi	r0, r8, r1, asr #28
 3b4:	8e400287 	cdphi	2, 4, cr0, cr0, cr7, {4}
 3b8:	100e4101 	andne	r4, lr, r1, lsl #2
 3bc:	00070d41 	andeq	r0, r7, r1, asr #26
 3c0:	0000001c 	andeq	r0, r0, ip, lsl r0
 3c4:	00000358 	andeq	r0, r0, r8, asr r3
 3c8:	20002f58 	andcs	r2, r0, r8, asr pc
 3cc:	00000026 	andeq	r0, r0, r6, lsr #32
 3d0:	40080e41 	andmi	r0, r8, r1, asr #28
 3d4:	8e400287 	cdphi	2, 4, cr0, cr0, cr7, {4}
 3d8:	100e4101 	andne	r4, lr, r1, lsl #2
 3dc:	00070d41 	andeq	r0, r7, r1, asr #26
 3e0:	0000001c 	andeq	r0, r0, ip, lsl r0
 3e4:	00000358 	andeq	r0, r0, r8, asr r3
 3e8:	20002f7e 	andcs	r2, r0, lr, ror pc
 3ec:	00000032 	andeq	r0, r0, r2, lsr r0
 3f0:	40080e41 	andmi	r0, r8, r1, asr #28
 3f4:	8e400287 	cdphi	2, 4, cr0, cr0, cr7, {4}
 3f8:	180e4101 	stmdane	lr, {r0, r8, lr}
 3fc:	00070d41 	andeq	r0, r7, r1, asr #26
 400:	00000018 	andeq	r0, r0, r8, lsl r0
 404:	00000358 	andeq	r0, r0, r8, asr r3
 408:	20002fb0 			; <UNDEFINED> instruction: 0x20002fb0
 40c:	00000018 	andeq	r0, r0, r8, lsl r0
 410:	40080e41 	andmi	r0, r8, r1, asr #28
 414:	8e400287 	cdphi	2, 4, cr0, cr0, cr7, {4}
 418:	070d4101 	streq	r4, [sp, -r1, lsl #2]
 41c:	00000018 	andeq	r0, r0, r8, lsl r0
 420:	00000358 	andeq	r0, r0, r8, asr r3
 424:	20002fc8 	andcs	r2, r0, r8, asr #31
 428:	00000030 	andeq	r0, r0, r0, lsr r0
 42c:	40080e41 	andmi	r0, r8, r1, asr #28
 430:	8e400287 	cdphi	2, 4, cr0, cr0, cr7, {4}
 434:	070d4101 	streq	r4, [sp, -r1, lsl #2]
 438:	0000001c 	andeq	r0, r0, ip, lsl r0
 43c:	00000358 	andeq	r0, r0, r8, asr r3
 440:	20002ff8 	strdcs	r2, [r0], -r8
 444:	00000050 	andeq	r0, r0, r0, asr r0
 448:	40080e41 	andmi	r0, r8, r1, asr #28
 44c:	8e400287 	cdphi	2, 4, cr0, cr0, cr7, {4}
 450:	180e4101 	stmdane	lr, {r0, r8, lr}
 454:	00070d41 	andeq	r0, r7, r1, asr #26
 458:	0000001c 	andeq	r0, r0, ip, lsl r0
 45c:	00000358 	andeq	r0, r0, r8, asr r3
 460:	20003048 	andcs	r3, r0, r8, asr #32
 464:	00000058 	andeq	r0, r0, r8, asr r0
 468:	40080e41 	andmi	r0, r8, r1, asr #28
 46c:	8e400287 	cdphi	2, 4, cr0, cr0, cr7, {4}
 470:	180e4101 	stmdane	lr, {r0, r8, lr}
 474:	00070d41 	andeq	r0, r7, r1, asr #26
 478:	0000001c 	andeq	r0, r0, ip, lsl r0
 47c:	00000358 	andeq	r0, r0, r8, asr r3
 480:	200030a0 	andcs	r3, r0, r0, lsr #1
 484:	00000066 	andeq	r0, r0, r6, rrx
 488:	40080e41 	andmi	r0, r8, r1, asr #28
 48c:	8e400287 	cdphi	2, 4, cr0, cr0, cr7, {4}
 490:	100e4101 	andne	r4, lr, r1, lsl #2
 494:	00070d41 	andeq	r0, r7, r1, asr #26
 498:	0000001c 	andeq	r0, r0, ip, lsl r0
 49c:	00000358 	andeq	r0, r0, r8, asr r3
 4a0:	20003106 	andcs	r3, r0, r6, lsl #2
 4a4:	0000006e 	andeq	r0, r0, lr, rrx
 4a8:	40080e41 	andmi	r0, r8, r1, asr #28
 4ac:	8e400287 	cdphi	2, 4, cr0, cr0, cr7, {4}
 4b0:	100e4101 	andne	r4, lr, r1, lsl #2
 4b4:	00070d41 	andeq	r0, r7, r1, asr #26
 4b8:	0000001c 	andeq	r0, r0, ip, lsl r0
 4bc:	00000358 	andeq	r0, r0, r8, asr r3
 4c0:	20003174 	andcs	r3, r0, r4, ror r1
 4c4:	00000094 	muleq	r0, r4, r0
 4c8:	40080e41 	andmi	r0, r8, r1, asr #28
 4cc:	8e400287 	cdphi	2, 4, cr0, cr0, cr7, {4}
 4d0:	180e4101 	stmdane	lr, {r0, r8, lr}
 4d4:	00070d41 	andeq	r0, r7, r1, asr #26
 4d8:	0000001c 	andeq	r0, r0, ip, lsl r0
 4dc:	00000358 	andeq	r0, r0, r8, asr r3
 4e0:	20003208 	andcs	r3, r0, r8, lsl #4
 4e4:	0000002a 	andeq	r0, r0, sl, lsr #32
 4e8:	40080e41 	andmi	r0, r8, r1, asr #28
 4ec:	8e400287 	cdphi	2, 4, cr0, cr0, cr7, {4}
 4f0:	100e4101 	andne	r4, lr, r1, lsl #2
 4f4:	00070d41 	andeq	r0, r7, r1, asr #26
 4f8:	0000001c 	andeq	r0, r0, ip, lsl r0
 4fc:	00000358 	andeq	r0, r0, r8, asr r3
 500:	20003232 	andcs	r3, r0, r2, lsr r2
 504:	0000007e 	andeq	r0, r0, lr, ror r0
 508:	40080e41 	andmi	r0, r8, r1, asr #28
 50c:	8e400287 	cdphi	2, 4, cr0, cr0, cr7, {4}
 510:	100e4101 	andne	r4, lr, r1, lsl #2
 514:	00070d41 	andeq	r0, r7, r1, asr #26
 518:	0000001c 	andeq	r0, r0, ip, lsl r0
 51c:	00000358 	andeq	r0, r0, r8, asr r3
 520:	200032b0 			; <UNDEFINED> instruction: 0x200032b0
 524:	00000046 	andeq	r0, r0, r6, asr #32
 528:	40080e41 	andmi	r0, r8, r1, asr #28
 52c:	8e400287 	cdphi	2, 4, cr0, cr0, cr7, {4}
 530:	100e4101 	andne	r4, lr, r1, lsl #2
 534:	00070d41 	andeq	r0, r7, r1, asr #26
 538:	0000001c 	andeq	r0, r0, ip, lsl r0
 53c:	00000358 	andeq	r0, r0, r8, asr r3
 540:	200032f6 	strdcs	r3, [r0], -r6
 544:	00000046 	andeq	r0, r0, r6, asr #32
 548:	40080e41 	andmi	r0, r8, r1, asr #28
 54c:	8e400287 	cdphi	2, 4, cr0, cr0, cr7, {4}
 550:	100e4101 	andne	r4, lr, r1, lsl #2
 554:	00070d41 	andeq	r0, r7, r1, asr #26
 558:	00000018 	andeq	r0, r0, r8, lsl r0
 55c:	00000358 	andeq	r0, r0, r8, asr r3
 560:	2000333c 	andcs	r3, r0, ip, lsr r3
 564:	0000006e 	andeq	r0, r0, lr, rrx
 568:	40080e41 	andmi	r0, r8, r1, asr #28
 56c:	8e400287 	cdphi	2, 4, cr0, cr0, cr7, {4}
 570:	070d4101 	streq	r4, [sp, -r1, lsl #2]
 574:	0000001c 	andeq	r0, r0, ip, lsl r0
 578:	00000358 	andeq	r0, r0, r8, asr r3
 57c:	200033aa 	andcs	r3, r0, sl, lsr #7
 580:	00000066 	andeq	r0, r0, r6, rrx
 584:	40080e41 	andmi	r0, r8, r1, asr #28
 588:	8e400287 	cdphi	2, 4, cr0, cr0, cr7, {4}
 58c:	100e4101 	andne	r4, lr, r1, lsl #2
 590:	00070d41 	andeq	r0, r7, r1, asr #26
 594:	0000001c 	andeq	r0, r0, ip, lsl r0
 598:	00000358 	andeq	r0, r0, r8, asr r3
 59c:	20003410 	andcs	r3, r0, r0, lsl r4
 5a0:	00000180 	andeq	r0, r0, r0, lsl #3
 5a4:	40080e41 	andmi	r0, r8, r1, asr #28
 5a8:	8e400287 	cdphi	2, 4, cr0, cr0, cr7, {4}
 5ac:	200e4101 	andcs	r4, lr, r1, lsl #2
 5b0:	00070d41 	andeq	r0, r7, r1, asr #26
 5b4:	0000001c 	andeq	r0, r0, ip, lsl r0
 5b8:	00000358 	andeq	r0, r0, r8, asr r3
 5bc:	20003590 	mulcs	r0, r0, r5
 5c0:	000001a0 	andeq	r0, r0, r0, lsr #3
 5c4:	40080e41 	andmi	r0, r8, r1, asr #28
 5c8:	8e400287 	cdphi	2, 4, cr0, cr0, cr7, {4}
 5cc:	280e4101 	stmdacs	lr, {r0, r8, lr}
 5d0:	00070d41 	andeq	r0, r7, r1, asr #26
 5d4:	0000001c 	andeq	r0, r0, ip, lsl r0
 5d8:	00000358 	andeq	r0, r0, r8, asr r3
 5dc:	20003730 	andcs	r3, r0, r0, lsr r7
 5e0:	000000d6 	ldrdeq	r0, [r0], -r6
 5e4:	40080e41 	andmi	r0, r8, r1, asr #28
 5e8:	8e400287 	cdphi	2, 4, cr0, cr0, cr7, {4}
 5ec:	200e4101 	andcs	r4, lr, r1, lsl #2
 5f0:	00070d41 	andeq	r0, r7, r1, asr #26
 5f4:	00000024 	andeq	r0, r0, r4, lsr #32
 5f8:	00000358 	andeq	r0, r0, r8, asr r3
 5fc:	20003806 	andcs	r3, r0, r6, lsl #16
 600:	0000011a 	andeq	r0, r0, sl, lsl r1
 604:	40100e41 	andsmi	r0, r0, r1, asr #28
 608:	85400484 	strbhi	r0, [r0, #-1156]	; 0xfffffb7c
 60c:	02874003 	addeq	r4, r7, #3
 610:	41018e40 	tstmi	r1, r0, asr #28
 614:	0d41380e 	stcleq	8, cr3, [r1, #-56]	; 0xffffffc8
 618:	00000007 	andeq	r0, r0, r7
 61c:	0000001c 	andeq	r0, r0, ip, lsl r0
 620:	00000358 	andeq	r0, r0, r8, asr r3
 624:	20003920 	andcs	r3, r0, r0, lsr #18
 628:	00000052 	andeq	r0, r0, r2, asr r0
 62c:	40080e41 	andmi	r0, r8, r1, asr #28
 630:	8e400287 	cdphi	2, 4, cr0, cr0, cr7, {4}
 634:	200e4101 	andcs	r4, lr, r1, lsl #2
 638:	00070d41 	andeq	r0, r7, r1, asr #26
 63c:	0000001c 	andeq	r0, r0, ip, lsl r0
 640:	00000358 	andeq	r0, r0, r8, asr r3
 644:	20003972 	andcs	r3, r0, r2, ror r9
 648:	00000052 	andeq	r0, r0, r2, asr r0
 64c:	40080e41 	andmi	r0, r8, r1, asr #28
 650:	8e400287 	cdphi	2, 4, cr0, cr0, cr7, {4}
 654:	200e4101 	andcs	r4, lr, r1, lsl #2
 658:	00070d41 	andeq	r0, r7, r1, asr #26
 65c:	00000020 	andeq	r0, r0, r0, lsr #32
 660:	00000358 	andeq	r0, r0, r8, asr r3
 664:	200039c4 	andcs	r3, r0, r4, asr #19
 668:	00000130 	andeq	r0, r0, r0, lsr r1
 66c:	400c0e41 	andmi	r0, ip, r1, asr #28
 670:	87400384 	strbhi	r0, [r0, -r4, lsl #7]
 674:	018e4002 	orreq	r4, lr, r2
 678:	41280e41 			; <UNDEFINED> instruction: 0x41280e41
 67c:	0000070d 	andeq	r0, r0, sp, lsl #14
 680:	0000001c 	andeq	r0, r0, ip, lsl r0
 684:	00000358 	andeq	r0, r0, r8, asr r3
 688:	20003af4 	strdcs	r3, [r0], -r4
 68c:	00000108 	andeq	r0, r0, r8, lsl #2
 690:	40080e41 	andmi	r0, r8, r1, asr #28
 694:	8e400287 	cdphi	2, 4, cr0, cr0, cr7, {4}
 698:	100e4101 	andne	r4, lr, r1, lsl #2
 69c:	00070d41 	andeq	r0, r7, r1, asr #26
 6a0:	0000001c 	andeq	r0, r0, ip, lsl r0
 6a4:	00000358 	andeq	r0, r0, r8, asr r3
 6a8:	20003bfc 	strdcs	r3, [r0], -ip
 6ac:	00000082 	andeq	r0, r0, r2, lsl #1
 6b0:	40080e41 	andmi	r0, r8, r1, asr #28
 6b4:	8e400287 	cdphi	2, 4, cr0, cr0, cr7, {4}
 6b8:	200e4101 	andcs	r4, lr, r1, lsl #2
 6bc:	18070c41 	stmdane	r7, {r0, r6, sl, fp}
 6c0:	0000001c 	andeq	r0, r0, ip, lsl r0
 6c4:	00000358 	andeq	r0, r0, r8, asr r3
 6c8:	20003c7e 	andcs	r3, r0, lr, ror ip
 6cc:	0000006a 	andeq	r0, r0, sl, rrx
 6d0:	40080e41 	andmi	r0, r8, r1, asr #28
 6d4:	8e400287 	cdphi	2, 4, cr0, cr0, cr7, {4}
 6d8:	100e4101 	andne	r4, lr, r1, lsl #2
 6dc:	00070d41 	andeq	r0, r7, r1, asr #26
 6e0:	0000000c 	andeq	r0, r0, ip
 6e4:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
 6e8:	7c020001 	stcvc	0, cr0, [r2], {1}
 6ec:	000d0c0e 	andeq	r0, sp, lr, lsl #24
 6f0:	0000001c 	andeq	r0, r0, ip, lsl r0
 6f4:	000006e0 	andeq	r0, r0, r0, ror #13
 6f8:	20003ce8 	andcs	r3, r0, r8, ror #25
 6fc:	00000028 	andeq	r0, r0, r8, lsr #32
 700:	40080e41 	andmi	r0, r8, r1, asr #28
 704:	8e400287 	cdphi	2, 4, cr0, cr0, cr7, {4}
 708:	180e4101 	stmdane	lr, {r0, r8, lr}
 70c:	00070d41 	andeq	r0, r7, r1, asr #26
 710:	0000000c 	andeq	r0, r0, ip
 714:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
 718:	7c020001 	stcvc	0, cr0, [r2], {1}
 71c:	000d0c0e 	andeq	r0, sp, lr, lsl #24
 720:	0000001c 	andeq	r0, r0, ip, lsl r0
 724:	00000710 	andeq	r0, r0, r0, lsl r7
 728:	20003d10 	andcs	r3, r0, r0, lsl sp
 72c:	00000028 	andeq	r0, r0, r8, lsr #32
 730:	40080e41 	andmi	r0, r8, r1, asr #28
 734:	8e400287 	cdphi	2, 4, cr0, cr0, cr7, {4}
 738:	180e4101 	stmdane	lr, {r0, r8, lr}
 73c:	00070d41 	andeq	r0, r7, r1, asr #26
 740:	0000000c 	andeq	r0, r0, ip
 744:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
 748:	7c020001 	stcvc	0, cr0, [r2], {1}
 74c:	000d0c0e 	andeq	r0, sp, lr, lsl #24
 750:	00000018 	andeq	r0, r0, r8, lsl r0
 754:	00000740 	andeq	r0, r0, r0, asr #14
 758:	20003d38 	andcs	r3, r0, r8, lsr sp
 75c:	00000018 	andeq	r0, r0, r8, lsl r0
 760:	40080e41 	andmi	r0, r8, r1, asr #28
 764:	8e400287 	cdphi	2, 4, cr0, cr0, cr7, {4}
 768:	070d4101 	streq	r4, [sp, -r1, lsl #2]
 76c:	00000018 	andeq	r0, r0, r8, lsl r0
 770:	00000740 	andeq	r0, r0, r0, asr #14
 774:	20003d50 	andcs	r3, r0, r0, asr sp
 778:	00000020 	andeq	r0, r0, r0, lsr #32
 77c:	40080e41 	andmi	r0, r8, r1, asr #28
 780:	8e400287 	cdphi	2, 4, cr0, cr0, cr7, {4}
 784:	070d4101 	streq	r4, [sp, -r1, lsl #2]
 788:	00000020 	andeq	r0, r0, r0, lsr #32
 78c:	00000740 	andeq	r0, r0, r0, asr #14
 790:	20003d70 	andcs	r3, r0, r0, ror sp
 794:	00000034 	andeq	r0, r0, r4, lsr r0
 798:	400c0e41 	andmi	r0, ip, r1, asr #28
 79c:	87400384 	strbhi	r0, [r0, -r4, lsl #7]
 7a0:	018e4002 	orreq	r4, lr, r2
 7a4:	41200e41 			; <UNDEFINED> instruction: 0x41200e41
 7a8:	0000070d 	andeq	r0, r0, sp, lsl #14
 7ac:	0000000c 	andeq	r0, r0, ip
 7b0:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
 7b4:	7c020001 	stcvc	0, cr0, [r2], {1}
 7b8:	000d0c0e 	andeq	r0, sp, lr, lsl #24
 7bc:	0000001c 	andeq	r0, r0, ip, lsl r0
 7c0:	000007ac 	andeq	r0, r0, ip, lsr #15
 7c4:	20003da4 	andcs	r3, r0, r4, lsr #27
 7c8:	00000044 	andeq	r0, r0, r4, asr #32
 7cc:	40080e41 	andmi	r0, r8, r1, asr #28
 7d0:	8e400287 	cdphi	2, 4, cr0, cr0, cr7, {4}
 7d4:	180e4101 	stmdane	lr, {r0, r8, lr}
 7d8:	00070d41 	andeq	r0, r7, r1, asr #26
 7dc:	0000001c 	andeq	r0, r0, ip, lsl r0
 7e0:	000007ac 	andeq	r0, r0, ip, lsr #15
 7e4:	20003de8 	andcs	r3, r0, r8, ror #27
 7e8:	00000050 	andeq	r0, r0, r0, asr r0
 7ec:	40080e41 	andmi	r0, r8, r1, asr #28
 7f0:	8e400287 	cdphi	2, 4, cr0, cr0, cr7, {4}
 7f4:	180e4101 	stmdane	lr, {r0, r8, lr}
 7f8:	00070d41 	andeq	r0, r7, r1, asr #26
 7fc:	0000001c 	andeq	r0, r0, ip, lsl r0
 800:	000007ac 	andeq	r0, r0, ip, lsr #15
 804:	20003e38 	andcs	r3, r0, r8, lsr lr
 808:	0000002a 	andeq	r0, r0, sl, lsr #32
 80c:	40080e41 	andmi	r0, r8, r1, asr #28
 810:	8e400287 	cdphi	2, 4, cr0, cr0, cr7, {4}
 814:	100e4101 	andne	r4, lr, r1, lsl #2
 818:	00070d41 	andeq	r0, r7, r1, asr #26
 81c:	0000001c 	andeq	r0, r0, ip, lsl r0
 820:	000007ac 	andeq	r0, r0, ip, lsr #15
 824:	20003e62 	andcs	r3, r0, r2, ror #28
 828:	0000002a 	andeq	r0, r0, sl, lsr #32
 82c:	40080e41 	andmi	r0, r8, r1, asr #28
 830:	8e400287 	cdphi	2, 4, cr0, cr0, cr7, {4}
 834:	100e4101 	andne	r4, lr, r1, lsl #2
 838:	00070d41 	andeq	r0, r7, r1, asr #26
 83c:	00000020 	andeq	r0, r0, r0, lsr #32
 840:	000007ac 	andeq	r0, r0, ip, lsr #15
 844:	20003e8c 	andcs	r3, r0, ip, lsl #29
 848:	00000054 	andeq	r0, r0, r4, asr r0
 84c:	400c0e41 	andmi	r0, ip, r1, asr #28
 850:	87400384 	strbhi	r0, [r0, -r4, lsl #7]
 854:	018e4002 	orreq	r4, lr, r2
 858:	41180e41 	tstmi	r8, r1, asr #28
 85c:	0000070d 	andeq	r0, r0, sp, lsl #14
 860:	00000020 	andeq	r0, r0, r0, lsr #32
 864:	000007ac 	andeq	r0, r0, ip, lsr #15
 868:	20003ee0 	andcs	r3, r0, r0, ror #29
 86c:	00000054 	andeq	r0, r0, r4, asr r0
 870:	400c0e41 	andmi	r0, ip, r1, asr #28
 874:	87400384 	strbhi	r0, [r0, -r4, lsl #7]
 878:	018e4002 	orreq	r4, lr, r2
 87c:	41180e41 	tstmi	r8, r1, asr #28
 880:	0000070d 	andeq	r0, r0, sp, lsl #14
 884:	0000001c 	andeq	r0, r0, ip, lsl r0
 888:	000007ac 	andeq	r0, r0, ip, lsr #15
 88c:	20003f34 	andcs	r3, r0, r4, lsr pc
 890:	00000030 	andeq	r0, r0, r0, lsr r0
 894:	40080e41 	andmi	r0, r8, r1, asr #28
 898:	8e400287 	cdphi	2, 4, cr0, cr0, cr7, {4}
 89c:	100e4101 	andne	r4, lr, r1, lsl #2
 8a0:	00070d41 	andeq	r0, r7, r1, asr #26
 8a4:	0000001c 	andeq	r0, r0, ip, lsl r0
 8a8:	000007ac 	andeq	r0, r0, ip, lsr #15
 8ac:	20003f64 	andcs	r3, r0, r4, ror #30
 8b0:	00000034 	andeq	r0, r0, r4, lsr r0
 8b4:	40080e41 	andmi	r0, r8, r1, asr #28
 8b8:	8e400287 	cdphi	2, 4, cr0, cr0, cr7, {4}
 8bc:	100e4101 	andne	r4, lr, r1, lsl #2
 8c0:	00070d41 	andeq	r0, r7, r1, asr #26
 8c4:	0000001c 	andeq	r0, r0, ip, lsl r0
 8c8:	000007ac 	andeq	r0, r0, ip, lsr #15
 8cc:	20003f98 	mulcs	r0, r8, pc	; <UNPREDICTABLE>
 8d0:	0000003c 	andeq	r0, r0, ip, lsr r0
 8d4:	40080e41 	andmi	r0, r8, r1, asr #28
 8d8:	8e400287 	cdphi	2, 4, cr0, cr0, cr7, {4}
 8dc:	100e4101 	andne	r4, lr, r1, lsl #2
 8e0:	00070d41 	andeq	r0, r7, r1, asr #26
 8e4:	0000001c 	andeq	r0, r0, ip, lsl r0
 8e8:	000007ac 	andeq	r0, r0, ip, lsr #15
 8ec:	20003fd4 	ldrdcs	r3, [r0], -r4
 8f0:	00000050 	andeq	r0, r0, r0, asr r0
 8f4:	40080e41 	andmi	r0, r8, r1, asr #28
 8f8:	8e400287 	cdphi	2, 4, cr0, cr0, cr7, {4}
 8fc:	180e4101 	stmdane	lr, {r0, r8, lr}
 900:	00070d41 	andeq	r0, r7, r1, asr #26
 904:	00000018 	andeq	r0, r0, r8, lsl r0
 908:	000007ac 	andeq	r0, r0, ip, lsr #15
 90c:	20004024 	andcs	r4, r0, r4, lsr #32
 910:	0000009a 	muleq	r0, sl, r0
 914:	40080e41 	andmi	r0, r8, r1, asr #28
 918:	8e400287 	cdphi	2, 4, cr0, cr0, cr7, {4}
 91c:	070d4101 	streq	r4, [sp, -r1, lsl #2]
 920:	00000018 	andeq	r0, r0, r8, lsl r0
 924:	000007ac 	andeq	r0, r0, ip, lsr #15
 928:	200040be 	strhcs	r4, [r0], -lr
 92c:	0000001a 	andeq	r0, r0, sl, lsl r0
 930:	40080e41 	andmi	r0, r8, r1, asr #28
 934:	8e400287 	cdphi	2, 4, cr0, cr0, cr7, {4}
 938:	070d4101 	streq	r4, [sp, -r1, lsl #2]
 93c:	00000018 	andeq	r0, r0, r8, lsl r0
 940:	000007ac 	andeq	r0, r0, ip, lsr #15
 944:	200040d8 	ldrdcs	r4, [r0], -r8
 948:	00000012 	andeq	r0, r0, r2, lsl r0
 94c:	40080e41 	andmi	r0, r8, r1, asr #28
 950:	8e400287 	cdphi	2, 4, cr0, cr0, cr7, {4}
 954:	070d4101 	streq	r4, [sp, -r1, lsl #2]
 958:	00000020 	andeq	r0, r0, r0, lsr #32
 95c:	000007ac 	andeq	r0, r0, ip, lsr #15
 960:	200040ea 	andcs	r4, r0, sl, ror #1
 964:	0000006a 	andeq	r0, r0, sl, rrx
 968:	400c0e41 	andmi	r0, ip, r1, asr #28
 96c:	87400384 	strbhi	r0, [r0, -r4, lsl #7]
 970:	018e4002 	orreq	r4, lr, r2
 974:	41300e41 	teqmi	r0, r1, asr #28
 978:	0000070d 	andeq	r0, r0, sp, lsl #14
 97c:	0000001c 	andeq	r0, r0, ip, lsl r0
 980:	000007ac 	andeq	r0, r0, ip, lsr #15
 984:	20004154 	andcs	r4, r0, r4, asr r1
 988:	0000005e 	andeq	r0, r0, lr, asr r0
 98c:	40080e41 	andmi	r0, r8, r1, asr #28
 990:	8e400287 	cdphi	2, 4, cr0, cr0, cr7, {4}
 994:	100e4101 	andne	r4, lr, r1, lsl #2
 998:	00070d41 	andeq	r0, r7, r1, asr #26
 99c:	0000001c 	andeq	r0, r0, ip, lsl r0
 9a0:	000007ac 	andeq	r0, r0, ip, lsr #15
 9a4:	200041b2 			; <UNDEFINED> instruction: 0x200041b2
 9a8:	0000008e 	andeq	r0, r0, lr, lsl #1
 9ac:	40080e41 	andmi	r0, r8, r1, asr #28
 9b0:	8e400287 	cdphi	2, 4, cr0, cr0, cr7, {4}
 9b4:	200e4101 	andcs	r4, lr, r1, lsl #2
 9b8:	00070d41 	andeq	r0, r7, r1, asr #26
 9bc:	00000020 	andeq	r0, r0, r0, lsr #32
 9c0:	000007ac 	andeq	r0, r0, ip, lsr #15
 9c4:	20004240 	andcs	r4, r0, r0, asr #4
 9c8:	00000084 	andeq	r0, r0, r4, lsl #1
 9cc:	400c0e41 	andmi	r0, ip, r1, asr #28
 9d0:	87400384 	strbhi	r0, [r0, -r4, lsl #7]
 9d4:	018e4002 	orreq	r4, lr, r2
 9d8:	41380e41 	teqmi	r8, r1, asr #28
 9dc:	0000070d 	andeq	r0, r0, sp, lsl #14
 9e0:	0000000c 	andeq	r0, r0, ip
 9e4:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
 9e8:	7c020001 	stcvc	0, cr0, [r2], {1}
 9ec:	000d0c0e 	andeq	r0, sp, lr, lsl #24
 9f0:	0000001c 	andeq	r0, r0, ip, lsl r0
 9f4:	000009e0 	andeq	r0, r0, r0, ror #19
 9f8:	200042c4 	andcs	r4, r0, r4, asr #5
 9fc:	0000005a 	andeq	r0, r0, sl, asr r0
 a00:	40080e41 	andmi	r0, r8, r1, asr #28
 a04:	8e400287 	cdphi	2, 4, cr0, cr0, cr7, {4}
 a08:	180e4101 	stmdane	lr, {r0, r8, lr}
 a0c:	00070d41 	andeq	r0, r7, r1, asr #26
 a10:	0000001c 	andeq	r0, r0, ip, lsl r0
 a14:	000009e0 	andeq	r0, r0, r0, ror #19
 a18:	2000431e 	andcs	r4, r0, lr, lsl r3
 a1c:	0000003a 	andeq	r0, r0, sl, lsr r0
 a20:	40080e41 	andmi	r0, r8, r1, asr #28
 a24:	8e400287 	cdphi	2, 4, cr0, cr0, cr7, {4}
 a28:	180e4101 	stmdane	lr, {r0, r8, lr}
 a2c:	00070d41 	andeq	r0, r7, r1, asr #26
 a30:	0000000c 	andeq	r0, r0, ip
 a34:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
 a38:	7c020001 	stcvc	0, cr0, [r2], {1}
 a3c:	000d0c0e 	andeq	r0, sp, lr, lsl #24
 a40:	0000001c 	andeq	r0, r0, ip, lsl r0
 a44:	00000a30 	andeq	r0, r0, r0, lsr sl
 a48:	20004358 	andcs	r4, r0, r8, asr r3
 a4c:	00000074 	andeq	r0, r0, r4, ror r0
 a50:	40080e41 	andmi	r0, r8, r1, asr #28
 a54:	8e400287 	cdphi	2, 4, cr0, cr0, cr7, {4}
 a58:	180e4101 	stmdane	lr, {r0, r8, lr}
 a5c:	00070d41 	andeq	r0, r7, r1, asr #26
 a60:	00000020 	andeq	r0, r0, r0, lsr #32
 a64:	00000a30 	andeq	r0, r0, r0, lsr sl
 a68:	200043cc 	andcs	r4, r0, ip, asr #7
 a6c:	00000074 	andeq	r0, r0, r4, ror r0
 a70:	400c0e41 	andmi	r0, ip, r1, asr #28
 a74:	87400384 	strbhi	r0, [r0, -r4, lsl #7]
 a78:	018e4002 	orreq	r4, lr, r2
 a7c:	41180e41 	tstmi	r8, r1, asr #28
 a80:	0000070d 	andeq	r0, r0, sp, lsl #14
 a84:	0000000c 	andeq	r0, r0, ip
 a88:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
 a8c:	7c020001 	stcvc	0, cr0, [r2], {1}
 a90:	000d0c0e 	andeq	r0, sp, lr, lsl #24
 a94:	0000001c 	andeq	r0, r0, ip, lsl r0
 a98:	00000a84 	andeq	r0, r0, r4, lsl #21
 a9c:	20004440 	andcs	r4, r0, r0, asr #8
 aa0:	00000074 	andeq	r0, r0, r4, ror r0
 aa4:	40080e41 	andmi	r0, r8, r1, asr #28
 aa8:	8e400287 	cdphi	2, 4, cr0, cr0, cr7, {4}
 aac:	180e4101 	stmdane	lr, {r0, r8, lr}
 ab0:	00070d41 	andeq	r0, r7, r1, asr #26
 ab4:	00000020 	andeq	r0, r0, r0, lsr #32
 ab8:	00000a84 	andeq	r0, r0, r4, lsl #21
 abc:	200044b4 			; <UNDEFINED> instruction: 0x200044b4
 ac0:	00000074 	andeq	r0, r0, r4, ror r0
 ac4:	400c0e41 	andmi	r0, ip, r1, asr #28
 ac8:	87400384 	strbhi	r0, [r0, -r4, lsl #7]
 acc:	018e4002 	orreq	r4, lr, r2
 ad0:	41180e41 	tstmi	r8, r1, asr #28
 ad4:	0000070d 	andeq	r0, r0, sp, lsl #14
 ad8:	0000000c 	andeq	r0, r0, ip
 adc:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
 ae0:	7c020001 	stcvc	0, cr0, [r2], {1}
 ae4:	000d0c0e 	andeq	r0, sp, lr, lsl #24
 ae8:	0000001c 	andeq	r0, r0, ip, lsl r0
 aec:	00000ad8 	ldrdeq	r0, [r0], -r8
 af0:	20004528 	andcs	r4, r0, r8, lsr #10
 af4:	00000074 	andeq	r0, r0, r4, ror r0
 af8:	40080e41 	andmi	r0, r8, r1, asr #28
 afc:	8e400287 	cdphi	2, 4, cr0, cr0, cr7, {4}
 b00:	180e4101 	stmdane	lr, {r0, r8, lr}
 b04:	00070d41 	andeq	r0, r7, r1, asr #26
 b08:	00000020 	andeq	r0, r0, r0, lsr #32
 b0c:	00000ad8 	ldrdeq	r0, [r0], -r8
 b10:	2000459c 	mulcs	r0, ip, r5
 b14:	00000074 	andeq	r0, r0, r4, ror r0
 b18:	400c0e41 	andmi	r0, ip, r1, asr #28
 b1c:	87400384 	strbhi	r0, [r0, -r4, lsl #7]
 b20:	018e4002 	orreq	r4, lr, r2
 b24:	41180e41 	tstmi	r8, r1, asr #28
 b28:	0000070d 	andeq	r0, r0, sp, lsl #14
 b2c:	0000000c 	andeq	r0, r0, ip
 b30:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
 b34:	7c020001 	stcvc	0, cr0, [r2], {1}
 b38:	000d0c0e 	andeq	r0, sp, lr, lsl #24
 b3c:	0000001c 	andeq	r0, r0, ip, lsl r0
 b40:	00000b2c 	andeq	r0, r0, ip, lsr #22
 b44:	20004610 	andcs	r4, r0, r0, lsl r6
 b48:	00000074 	andeq	r0, r0, r4, ror r0
 b4c:	40080e41 	andmi	r0, r8, r1, asr #28
 b50:	8e400287 	cdphi	2, 4, cr0, cr0, cr7, {4}
 b54:	180e4101 	stmdane	lr, {r0, r8, lr}
 b58:	00070d41 	andeq	r0, r7, r1, asr #26
 b5c:	00000020 	andeq	r0, r0, r0, lsr #32
 b60:	00000b2c 	andeq	r0, r0, ip, lsr #22
 b64:	20004684 	andcs	r4, r0, r4, lsl #13
 b68:	00000074 	andeq	r0, r0, r4, ror r0
 b6c:	400c0e41 	andmi	r0, ip, r1, asr #28
 b70:	87400384 	strbhi	r0, [r0, -r4, lsl #7]
 b74:	018e4002 	orreq	r4, lr, r2
 b78:	41180e41 	tstmi	r8, r1, asr #28
 b7c:	0000070d 	andeq	r0, r0, sp, lsl #14
 b80:	0000000c 	andeq	r0, r0, ip
 b84:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
 b88:	7c010001 	stcvc	0, cr0, [r1], {1}
 b8c:	000d0c0e 	andeq	r0, sp, lr, lsl #24
 b90:	0000000c 	andeq	r0, r0, ip
 b94:	00000b80 	andeq	r0, r0, r0, lsl #23
 b98:	200046f9 	strdcs	r4, [r0], -r9
 b9c:	000001cc 	andeq	r0, r0, ip, asr #3
