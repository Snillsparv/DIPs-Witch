
./Debug/graphicdisplay.elf:     file format elf32-littlearm


Disassembly of section .text:

20000000 <startup>:
#endif
}

void startup ( void )
{
__asm volatile(
20000000:	4802      	ldr	r0, [pc, #8]	; (2000000c <_exit+0x4>)
20000002:	4685      	mov	sp, r0
20000004:	f000 f8fa 	bl	200001fc <main>

20000008 <_exit>:
20000008:	e7fe      	b.n	20000008 <_exit>
	" LDR R0,=0x2001C000\n"		/* set stack */
	" MOV SP,R0\n"
	" BL main\n"				/* call main */
	"_exit: B .\n"				/* never return */
	) ;
}
2000000a:	46c0      	nop			; (mov r8, r8)
2000000c:	2001c000 	andcs	ip, r1, r0

20000010 <init_app>:
void init_app( void ) {
20000010:	b580      	push	{r7, lr}
20000012:	af00      	add	r7, sp, #0
	*portModer = 0x55555555;
20000014:	4b05      	ldr	r3, [pc, #20]	; (2000002c <init_app+0x1c>)
20000016:	4a06      	ldr	r2, [pc, #24]	; (20000030 <init_app+0x20>)
20000018:	601a      	str	r2, [r3, #0]
	set_up_DIL();
2000001a:	f003 ffdb 	bl	20003fd4 <set_up_DIL>
	graphic_initialize();
2000001e:	f003 fab5 	bl	2000358c <graphic_initialize>
	graphic_clear_screen();
20000022:	f003 faea 	bl	200035fa <graphic_clear_screen>
}
20000026:	46c0      	nop			; (mov r8, r8)
20000028:	46bd      	mov	sp, r7
2000002a:	bd80      	pop	{r7, pc}
2000002c:	40021000 	andmi	r1, r2, r0
20000030:	55555555 	ldrbpl	r5, [r5, #-1365]	; 0xfffffaab

20000034 <initSprites>:
sprite tempTitleLight;
sprite tempPressBlack;
sprite tempPressGray;
sprite tempPressLight;

void initSprites( void ) {
20000034:	b580      	push	{r7, lr}
20000036:	b08a      	sub	sp, #40	; 0x28
20000038:	af00      	add	r7, sp, #0
	sprite *monsterPointer = &tempMonster;
2000003a:	4b49      	ldr	r3, [pc, #292]	; (20000160 <initSprites+0x12c>)
2000003c:	627b      	str	r3, [r7, #36]	; 0x24
	load_sprite(monsterPointer, monster_black_bits, monster_black_width, monster_black_height);
2000003e:	4949      	ldr	r1, [pc, #292]	; (20000164 <initSprites+0x130>)
20000040:	6a78      	ldr	r0, [r7, #36]	; 0x24
20000042:	231e      	movs	r3, #30
20000044:	221e      	movs	r2, #30
20000046:	f003 ffb1 	bl	20003fac <load_sprite>
	monster = monsterPointer;
2000004a:	4b47      	ldr	r3, [pc, #284]	; (20000168 <initSprites+0x134>)
2000004c:	6a7a      	ldr	r2, [r7, #36]	; 0x24
2000004e:	601a      	str	r2, [r3, #0]
	
	sprite *monsterPointer2 = &tempMonsterLight;
20000050:	4b46      	ldr	r3, [pc, #280]	; (2000016c <initSprites+0x138>)
20000052:	623b      	str	r3, [r7, #32]
	load_sprite(monsterPointer2, monster_light_bits, monster_light_width, monster_light_height);
20000054:	4946      	ldr	r1, [pc, #280]	; (20000170 <initSprites+0x13c>)
20000056:	6a38      	ldr	r0, [r7, #32]
20000058:	231e      	movs	r3, #30
2000005a:	221e      	movs	r2, #30
2000005c:	f003 ffa6 	bl	20003fac <load_sprite>
	monsterLight = monsterPointer2;
20000060:	4b44      	ldr	r3, [pc, #272]	; (20000174 <initSprites+0x140>)
20000062:	6a3a      	ldr	r2, [r7, #32]
20000064:	601a      	str	r2, [r3, #0]

	sprite *monsterPointer3 = &tempMonsterGray;
20000066:	4b44      	ldr	r3, [pc, #272]	; (20000178 <initSprites+0x144>)
20000068:	61fb      	str	r3, [r7, #28]
	load_sprite(monsterPointer3, monster_gray_bits, monster_gray_width, monster_gray_height);
2000006a:	4944      	ldr	r1, [pc, #272]	; (2000017c <initSprites+0x148>)
2000006c:	69f8      	ldr	r0, [r7, #28]
2000006e:	231e      	movs	r3, #30
20000070:	221e      	movs	r2, #30
20000072:	f003 ff9b 	bl	20003fac <load_sprite>
	monsterGray = monsterPointer3;
20000076:	4b42      	ldr	r3, [pc, #264]	; (20000180 <initSprites+0x14c>)
20000078:	69fa      	ldr	r2, [r7, #28]
2000007a:	601a      	str	r2, [r3, #0]

	sprite *pointer4 = &tempBg;
2000007c:	4b41      	ldr	r3, [pc, #260]	; (20000184 <initSprites+0x150>)
2000007e:	61bb      	str	r3, [r7, #24]
	load_sprite(pointer4, bg_bits, bg_width, bg_height);
20000080:	4941      	ldr	r1, [pc, #260]	; (20000188 <initSprites+0x154>)
20000082:	69b8      	ldr	r0, [r7, #24]
20000084:	2340      	movs	r3, #64	; 0x40
20000086:	2280      	movs	r2, #128	; 0x80
20000088:	f003 ff90 	bl	20003fac <load_sprite>
	bg = pointer4;
2000008c:	4b3f      	ldr	r3, [pc, #252]	; (2000018c <initSprites+0x158>)
2000008e:	69ba      	ldr	r2, [r7, #24]
20000090:	601a      	str	r2, [r3, #0]
	
	sprite *pointer5 = &tempCastleBlack;
20000092:	4b3f      	ldr	r3, [pc, #252]	; (20000190 <initSprites+0x15c>)
20000094:	617b      	str	r3, [r7, #20]
	load_sprite(pointer5, castle_black_bits, castle_black_width, castle_black_height);
20000096:	493f      	ldr	r1, [pc, #252]	; (20000194 <initSprites+0x160>)
20000098:	6978      	ldr	r0, [r7, #20]
2000009a:	2340      	movs	r3, #64	; 0x40
2000009c:	2280      	movs	r2, #128	; 0x80
2000009e:	f003 ff85 	bl	20003fac <load_sprite>
	castleBlack = pointer5;
200000a2:	4b3d      	ldr	r3, [pc, #244]	; (20000198 <initSprites+0x164>)
200000a4:	697a      	ldr	r2, [r7, #20]
200000a6:	601a      	str	r2, [r3, #0]
	
	sprite *pointer6 = &tempCastleGray;
200000a8:	4b3c      	ldr	r3, [pc, #240]	; (2000019c <initSprites+0x168>)
200000aa:	613b      	str	r3, [r7, #16]
	load_sprite(pointer6, castle_gray_bits, castle_black_width, castle_black_height);
200000ac:	493c      	ldr	r1, [pc, #240]	; (200001a0 <initSprites+0x16c>)
200000ae:	6938      	ldr	r0, [r7, #16]
200000b0:	2340      	movs	r3, #64	; 0x40
200000b2:	2280      	movs	r2, #128	; 0x80
200000b4:	f003 ff7a 	bl	20003fac <load_sprite>
	castleGray = pointer6;
200000b8:	4b3a      	ldr	r3, [pc, #232]	; (200001a4 <initSprites+0x170>)
200000ba:	693a      	ldr	r2, [r7, #16]
200000bc:	601a      	str	r2, [r3, #0]
	
	sprite *pointer7 = &tempCastleLight;
200000be:	4b3a      	ldr	r3, [pc, #232]	; (200001a8 <initSprites+0x174>)
200000c0:	60fb      	str	r3, [r7, #12]
	load_sprite(pointer7, castle_light_bits, castle_black_width, castle_black_height);
200000c2:	493a      	ldr	r1, [pc, #232]	; (200001ac <initSprites+0x178>)
200000c4:	68f8      	ldr	r0, [r7, #12]
200000c6:	2340      	movs	r3, #64	; 0x40
200000c8:	2280      	movs	r2, #128	; 0x80
200000ca:	f003 ff6f 	bl	20003fac <load_sprite>
	castleLight = pointer7;
200000ce:	4b38      	ldr	r3, [pc, #224]	; (200001b0 <initSprites+0x17c>)
200000d0:	68fa      	ldr	r2, [r7, #12]
200000d2:	601a      	str	r2, [r3, #0]
	
	sprite *pointer8 = &tempTitleLight;
200000d4:	4b37      	ldr	r3, [pc, #220]	; (200001b4 <initSprites+0x180>)
200000d6:	60bb      	str	r3, [r7, #8]
	load_sprite(pointer8, title_light_bits, title_black_width, title_black_height);
200000d8:	4937      	ldr	r1, [pc, #220]	; (200001b8 <initSprites+0x184>)
200000da:	68b8      	ldr	r0, [r7, #8]
200000dc:	231e      	movs	r3, #30
200000de:	2232      	movs	r2, #50	; 0x32
200000e0:	f003 ff64 	bl	20003fac <load_sprite>
	titleLight = pointer8;
200000e4:	4b35      	ldr	r3, [pc, #212]	; (200001bc <initSprites+0x188>)
200000e6:	68ba      	ldr	r2, [r7, #8]
200000e8:	601a      	str	r2, [r3, #0]
	sprite *pointer9 = &tempTitleGray;
200000ea:	4b35      	ldr	r3, [pc, #212]	; (200001c0 <initSprites+0x18c>)
200000ec:	607b      	str	r3, [r7, #4]
	load_sprite(pointer9, title_gray_bits, title_black_width, title_black_height);
200000ee:	4935      	ldr	r1, [pc, #212]	; (200001c4 <initSprites+0x190>)
200000f0:	6878      	ldr	r0, [r7, #4]
200000f2:	231e      	movs	r3, #30
200000f4:	2232      	movs	r2, #50	; 0x32
200000f6:	f003 ff59 	bl	20003fac <load_sprite>
	titleGray = pointer9;
200000fa:	4b33      	ldr	r3, [pc, #204]	; (200001c8 <initSprites+0x194>)
200000fc:	687a      	ldr	r2, [r7, #4]
200000fe:	601a      	str	r2, [r3, #0]
	sprite *pointer10 = &tempTitleBlack;
20000100:	4b32      	ldr	r3, [pc, #200]	; (200001cc <initSprites+0x198>)
20000102:	603b      	str	r3, [r7, #0]
	load_sprite(pointer10, title_black_bits, title_black_width, title_black_height);
20000104:	4932      	ldr	r1, [pc, #200]	; (200001d0 <initSprites+0x19c>)
20000106:	6838      	ldr	r0, [r7, #0]
20000108:	231e      	movs	r3, #30
2000010a:	2232      	movs	r2, #50	; 0x32
2000010c:	f003 ff4e 	bl	20003fac <load_sprite>
	titleBlack = pointer10;	
20000110:	4b30      	ldr	r3, [pc, #192]	; (200001d4 <initSprites+0x1a0>)
20000112:	683a      	ldr	r2, [r7, #0]
20000114:	601a      	str	r2, [r3, #0]
	
	pointer8 = &tempPressLight;
20000116:	4b30      	ldr	r3, [pc, #192]	; (200001d8 <initSprites+0x1a4>)
20000118:	60bb      	str	r3, [r7, #8]
	load_sprite(pointer8, press_light_bits, press_black_width, press_black_height);
2000011a:	4930      	ldr	r1, [pc, #192]	; (200001dc <initSprites+0x1a8>)
2000011c:	68b8      	ldr	r0, [r7, #8]
2000011e:	2323      	movs	r3, #35	; 0x23
20000120:	223c      	movs	r2, #60	; 0x3c
20000122:	f003 ff43 	bl	20003fac <load_sprite>
	pressLight = pointer8;
20000126:	4b2e      	ldr	r3, [pc, #184]	; (200001e0 <initSprites+0x1ac>)
20000128:	68ba      	ldr	r2, [r7, #8]
2000012a:	601a      	str	r2, [r3, #0]
	pointer9 = &tempPressGray;
2000012c:	4b2d      	ldr	r3, [pc, #180]	; (200001e4 <initSprites+0x1b0>)
2000012e:	607b      	str	r3, [r7, #4]
	load_sprite(pointer9, press_gray_bits, press_black_width, press_black_height);
20000130:	492d      	ldr	r1, [pc, #180]	; (200001e8 <initSprites+0x1b4>)
20000132:	6878      	ldr	r0, [r7, #4]
20000134:	2323      	movs	r3, #35	; 0x23
20000136:	223c      	movs	r2, #60	; 0x3c
20000138:	f003 ff38 	bl	20003fac <load_sprite>
	pressGray = pointer9;
2000013c:	4b2b      	ldr	r3, [pc, #172]	; (200001ec <initSprites+0x1b8>)
2000013e:	687a      	ldr	r2, [r7, #4]
20000140:	601a      	str	r2, [r3, #0]
	pointer10 = &tempPressBlack;
20000142:	4b2b      	ldr	r3, [pc, #172]	; (200001f0 <initSprites+0x1bc>)
20000144:	603b      	str	r3, [r7, #0]
	load_sprite(pointer10, press_black_bits, press_black_width, press_black_height);
20000146:	492b      	ldr	r1, [pc, #172]	; (200001f4 <initSprites+0x1c0>)
20000148:	6838      	ldr	r0, [r7, #0]
2000014a:	2323      	movs	r3, #35	; 0x23
2000014c:	223c      	movs	r2, #60	; 0x3c
2000014e:	f003 ff2d 	bl	20003fac <load_sprite>
	pressBlack = pointer10;	
20000152:	4b29      	ldr	r3, [pc, #164]	; (200001f8 <initSprites+0x1c4>)
20000154:	683a      	ldr	r2, [r7, #0]
20000156:	601a      	str	r2, [r3, #0]
	
	
}
20000158:	46c0      	nop			; (mov r8, r8)
2000015a:	46bd      	mov	sp, r7
2000015c:	b00a      	add	sp, #40	; 0x28
2000015e:	bd80      	pop	{r7, pc}
20000160:	20004fbc 			; <UNDEFINED> instruction: 0x20004fbc
20000164:	20007a5c 	andcs	r7, r0, ip, asr sl
20000168:	20004f90 	mulcs	r0, r0, pc	; <UNPREDICTABLE>
2000016c:	20005014 	andcs	r5, r0, r4, lsl r0
20000170:	20007ad4 	ldrdcs	r7, [r0], -r4
20000174:	2000503c 	andcs	r5, r0, ip, lsr r0
20000178:	20004fdc 	ldrdcs	r4, [r0], -ip
2000017c:	20007b4c 	andcs	r7, r0, ip, asr #22
20000180:	20005050 	andcs	r5, r0, r0, asr r0
20000184:	20005054 	andcs	r5, r0, r4, asr r0
20000188:	20008d88 	andcs	r8, r0, r8, lsl #27
2000018c:	20004fd8 	ldrdcs	r4, [r0], -r8
20000190:	20004f94 	mulcs	r0, r4, pc	; <UNPREDICTABLE>
20000194:	20007f0c 	andcs	r7, r0, ip, lsl #30
20000198:	20004fb8 			; <UNDEFINED> instruction: 0x20004fb8
2000019c:	20005030 	andcs	r5, r0, r0, lsr r0
200001a0:	2000830c 	andcs	r8, r0, ip, lsl #6
200001a4:	20005044 	andcs	r5, r0, r4, asr #32
200001a8:	20005004 	andcs	r5, r0, r4
200001ac:	2000870c 	andcs	r8, r0, ip, lsl #14
200001b0:	20004ff4 	strdcs	r4, [r0], -r4	; <UNPREDICTABLE>
200001b4:	20004fe8 	andcs	r4, r0, r8, ror #31
200001b8:	20008b0c 	andcs	r8, r0, ip, lsl #22
200001bc:	20005040 	andcs	r5, r0, r0, asr #32
200001c0:	20004fac 	andcs	r4, r0, ip, lsr #31
200001c4:	20008be0 	andcs	r8, r0, r0, ror #23
200001c8:	2000502c 	andcs	r5, r0, ip, lsr #32
200001cc:	20004fcc 	andcs	r4, r0, ip, asr #31
200001d0:	20008cb4 			; <UNDEFINED> instruction: 0x20008cb4
200001d4:	20005060 	andcs	r5, r0, r0, rrx
200001d8:	20004ff8 	strdcs	r4, [r0], -r8
200001dc:	20007cdc 	ldrdcs	r7, [r0], -ip
200001e0:	20004fc8 	andcs	r4, r0, r8, asr #31
200001e4:	20004fa0 	andcs	r4, r0, r0, lsr #31
200001e8:	20007df4 	strdcs	r7, [r0], -r4
200001ec:	20005010 	andcs	r5, r0, r0, lsl r0
200001f0:	20005020 	andcs	r5, r0, r0, lsr #32
200001f4:	20007bc4 	andcs	r7, r0, r4, asr #23
200001f8:	2000504c 	andcs	r5, r0, ip, asr #32

200001fc <main>:
	
int counter = 0;
int current_screen = START_SCREEN;
void main(void)
{
200001fc:	b590      	push	{r4, r7, lr}
200001fe:	4cfe      	ldr	r4, [pc, #1016]	; (200005f8 <main+0x3fc>)
20000200:	44a5      	add	sp, r4
20000202:	af00      	add	r7, sp, #0
	
	init_app();	
20000204:	f7ff ff04 	bl	20000010 <init_app>
	initSprites();
20000208:	f7ff ff14 	bl	20000034 <initSprites>
	
	GameObject monsterObj;
	Image monsterImage;
	Image monsterImages[] = {monsterImage};
2000020c:	4bfb      	ldr	r3, [pc, #1004]	; (200005fc <main+0x400>)
2000020e:	18fb      	adds	r3, r7, r3
20000210:	2298      	movs	r2, #152	; 0x98
20000212:	00d2      	lsls	r2, r2, #3
20000214:	18ba      	adds	r2, r7, r2
20000216:	ca13      	ldmia	r2!, {r0, r1, r4}
20000218:	c313      	stmia	r3!, {r0, r1, r4}
	monsterObj.images = monsterImages;
2000021a:	4bf9      	ldr	r3, [pc, #996]	; (20000600 <main+0x404>)
2000021c:	18fb      	adds	r3, r7, r3
2000021e:	4af7      	ldr	r2, [pc, #988]	; (200005fc <main+0x400>)
20000220:	18ba      	adds	r2, r7, r2
20000222:	601a      	str	r2, [r3, #0]
	load_image(&monsterObj.images[0], monster, monsterGray, monsterLight);
20000224:	4bf6      	ldr	r3, [pc, #984]	; (20000600 <main+0x404>)
20000226:	18fb      	adds	r3, r7, r3
20000228:	6818      	ldr	r0, [r3, #0]
2000022a:	4bf6      	ldr	r3, [pc, #984]	; (20000604 <main+0x408>)
2000022c:	6819      	ldr	r1, [r3, #0]
2000022e:	4bf6      	ldr	r3, [pc, #984]	; (20000608 <main+0x40c>)
20000230:	681a      	ldr	r2, [r3, #0]
20000232:	4bf6      	ldr	r3, [pc, #984]	; (2000060c <main+0x410>)
20000234:	681b      	ldr	r3, [r3, #0]
20000236:	f003 fea5 	bl	20003f84 <load_image>
	monsterObj.xPos = 30;
2000023a:	4bf1      	ldr	r3, [pc, #964]	; (20000600 <main+0x404>)
2000023c:	18fb      	adds	r3, r7, r3
2000023e:	221e      	movs	r2, #30
20000240:	605a      	str	r2, [r3, #4]
	monsterObj.yPos = 4;
20000242:	4bef      	ldr	r3, [pc, #956]	; (20000600 <main+0x404>)
20000244:	18fb      	adds	r3, r7, r3
20000246:	2204      	movs	r2, #4
20000248:	609a      	str	r2, [r3, #8]
	monsterObj.current_frame = 0;
2000024a:	4bed      	ldr	r3, [pc, #948]	; (20000600 <main+0x404>)
2000024c:	18fb      	adds	r3, r7, r3
2000024e:	2200      	movs	r2, #0
20000250:	615a      	str	r2, [r3, #20]
	monsterObj.update = playerUpdate;
20000252:	4beb      	ldr	r3, [pc, #940]	; (20000600 <main+0x404>)
20000254:	18fb      	adds	r3, r7, r3
20000256:	4aee      	ldr	r2, [pc, #952]	; (20000610 <main+0x414>)
20000258:	60da      	str	r2, [r3, #12]
	
	GameObject titleObj;
	Image titleImage;
	Image titleImages[] = {titleImage};
2000025a:	238f      	movs	r3, #143	; 0x8f
2000025c:	00db      	lsls	r3, r3, #3
2000025e:	18fb      	adds	r3, r7, r3
20000260:	4aec      	ldr	r2, [pc, #944]	; (20000614 <main+0x418>)
20000262:	18ba      	adds	r2, r7, r2
20000264:	ca13      	ldmia	r2!, {r0, r1, r4}
20000266:	c313      	stmia	r3!, {r0, r1, r4}
	titleObj.images = titleImages;
20000268:	2392      	movs	r3, #146	; 0x92
2000026a:	00db      	lsls	r3, r3, #3
2000026c:	18fb      	adds	r3, r7, r3
2000026e:	228f      	movs	r2, #143	; 0x8f
20000270:	00d2      	lsls	r2, r2, #3
20000272:	18ba      	adds	r2, r7, r2
20000274:	601a      	str	r2, [r3, #0]
	load_image(&titleObj.images[0], titleBlack, titleGray, titleLight);
20000276:	2392      	movs	r3, #146	; 0x92
20000278:	00db      	lsls	r3, r3, #3
2000027a:	18fb      	adds	r3, r7, r3
2000027c:	6818      	ldr	r0, [r3, #0]
2000027e:	4be6      	ldr	r3, [pc, #920]	; (20000618 <main+0x41c>)
20000280:	6819      	ldr	r1, [r3, #0]
20000282:	4be6      	ldr	r3, [pc, #920]	; (2000061c <main+0x420>)
20000284:	681a      	ldr	r2, [r3, #0]
20000286:	4be6      	ldr	r3, [pc, #920]	; (20000620 <main+0x424>)
20000288:	681b      	ldr	r3, [r3, #0]
2000028a:	f003 fe7b 	bl	20003f84 <load_image>
	titleObj.xPos = 1;
2000028e:	2392      	movs	r3, #146	; 0x92
20000290:	00db      	lsls	r3, r3, #3
20000292:	18fb      	adds	r3, r7, r3
20000294:	2201      	movs	r2, #1
20000296:	605a      	str	r2, [r3, #4]
	titleObj.yPos = -40;
20000298:	2392      	movs	r3, #146	; 0x92
2000029a:	00db      	lsls	r3, r3, #3
2000029c:	18fb      	adds	r3, r7, r3
2000029e:	2228      	movs	r2, #40	; 0x28
200002a0:	4252      	negs	r2, r2
200002a2:	609a      	str	r2, [r3, #8]
	titleObj.current_frame = 0;
200002a4:	2392      	movs	r3, #146	; 0x92
200002a6:	00db      	lsls	r3, r3, #3
200002a8:	18fb      	adds	r3, r7, r3
200002aa:	2200      	movs	r2, #0
200002ac:	615a      	str	r2, [r3, #20]
	
	GameObject pressObj;
	Image pressImage;
	Image pressImages[] = {pressImage};
200002ae:	4bdd      	ldr	r3, [pc, #884]	; (20000624 <main+0x428>)
200002b0:	18fb      	adds	r3, r7, r3
200002b2:	2289      	movs	r2, #137	; 0x89
200002b4:	00d2      	lsls	r2, r2, #3
200002b6:	18ba      	adds	r2, r7, r2
200002b8:	ca13      	ldmia	r2!, {r0, r1, r4}
200002ba:	c313      	stmia	r3!, {r0, r1, r4}
	pressObj.images = pressImages;
200002bc:	4bda      	ldr	r3, [pc, #872]	; (20000628 <main+0x42c>)
200002be:	18fb      	adds	r3, r7, r3
200002c0:	4ad8      	ldr	r2, [pc, #864]	; (20000624 <main+0x428>)
200002c2:	18ba      	adds	r2, r7, r2
200002c4:	601a      	str	r2, [r3, #0]
	load_image(&pressObj.images[0], pressBlack, pressLight, pressGray);
200002c6:	4bd8      	ldr	r3, [pc, #864]	; (20000628 <main+0x42c>)
200002c8:	18fb      	adds	r3, r7, r3
200002ca:	6818      	ldr	r0, [r3, #0]
200002cc:	4bd7      	ldr	r3, [pc, #860]	; (2000062c <main+0x430>)
200002ce:	6819      	ldr	r1, [r3, #0]
200002d0:	4bd7      	ldr	r3, [pc, #860]	; (20000630 <main+0x434>)
200002d2:	681a      	ldr	r2, [r3, #0]
200002d4:	4bd7      	ldr	r3, [pc, #860]	; (20000634 <main+0x438>)
200002d6:	681b      	ldr	r3, [r3, #0]
200002d8:	f003 fe54 	bl	20003f84 <load_image>
	pressObj.xPos = 65-30;
200002dc:	4bd2      	ldr	r3, [pc, #840]	; (20000628 <main+0x42c>)
200002de:	18fb      	adds	r3, r7, r3
200002e0:	2223      	movs	r2, #35	; 0x23
200002e2:	605a      	str	r2, [r3, #4]
	pressObj.yPos = 29-15;
200002e4:	4bd0      	ldr	r3, [pc, #832]	; (20000628 <main+0x42c>)
200002e6:	18fb      	adds	r3, r7, r3
200002e8:	220e      	movs	r2, #14
200002ea:	609a      	str	r2, [r3, #8]
	pressObj.current_frame = 0;
200002ec:	4bce      	ldr	r3, [pc, #824]	; (20000628 <main+0x42c>)
200002ee:	18fb      	adds	r3, r7, r3
200002f0:	2200      	movs	r2, #0
200002f2:	615a      	str	r2, [r3, #20]
	
	GameObject castleObj;
	Image castleImage;
	Image castleImages[] = {castleImage};
200002f4:	4bd0      	ldr	r3, [pc, #832]	; (20000638 <main+0x43c>)
200002f6:	22a3      	movs	r2, #163	; 0xa3
200002f8:	00d2      	lsls	r2, r2, #3
200002fa:	18ba      	adds	r2, r7, r2
200002fc:	18d1      	adds	r1, r2, r3
200002fe:	4bcf      	ldr	r3, [pc, #828]	; (2000063c <main+0x440>)
20000300:	22a3      	movs	r2, #163	; 0xa3
20000302:	00d2      	lsls	r2, r2, #3
20000304:	18ba      	adds	r2, r7, r2
20000306:	18d2      	adds	r2, r2, r3
20000308:	000b      	movs	r3, r1
2000030a:	ca13      	ldmia	r2!, {r0, r1, r4}
2000030c:	c313      	stmia	r3!, {r0, r1, r4}
	castleObj.images = castleImages;
2000030e:	4bcc      	ldr	r3, [pc, #816]	; (20000640 <main+0x444>)
20000310:	22a3      	movs	r2, #163	; 0xa3
20000312:	00d2      	lsls	r2, r2, #3
20000314:	4694      	mov	ip, r2
20000316:	44bc      	add	ip, r7
20000318:	4463      	add	r3, ip
2000031a:	2280      	movs	r2, #128	; 0x80
2000031c:	00d2      	lsls	r2, r2, #3
2000031e:	18ba      	adds	r2, r7, r2
20000320:	601a      	str	r2, [r3, #0]
	load_image(&castleObj.images[0], castleBlack, castleGray, castleLight);
20000322:	4bc7      	ldr	r3, [pc, #796]	; (20000640 <main+0x444>)
20000324:	22a3      	movs	r2, #163	; 0xa3
20000326:	00d2      	lsls	r2, r2, #3
20000328:	4694      	mov	ip, r2
2000032a:	44bc      	add	ip, r7
2000032c:	4463      	add	r3, ip
2000032e:	6818      	ldr	r0, [r3, #0]
20000330:	4bc4      	ldr	r3, [pc, #784]	; (20000644 <main+0x448>)
20000332:	6819      	ldr	r1, [r3, #0]
20000334:	4bc4      	ldr	r3, [pc, #784]	; (20000648 <main+0x44c>)
20000336:	681a      	ldr	r2, [r3, #0]
20000338:	4bc4      	ldr	r3, [pc, #784]	; (2000064c <main+0x450>)
2000033a:	681b      	ldr	r3, [r3, #0]
2000033c:	f003 fe22 	bl	20003f84 <load_image>
	castleObj.xPos = 1;
20000340:	4bbf      	ldr	r3, [pc, #764]	; (20000640 <main+0x444>)
20000342:	22a3      	movs	r2, #163	; 0xa3
20000344:	00d2      	lsls	r2, r2, #3
20000346:	4694      	mov	ip, r2
20000348:	44bc      	add	ip, r7
2000034a:	4463      	add	r3, ip
2000034c:	2201      	movs	r2, #1
2000034e:	605a      	str	r2, [r3, #4]
	castleObj.yPos = 1;
20000350:	4bbb      	ldr	r3, [pc, #748]	; (20000640 <main+0x444>)
20000352:	22a3      	movs	r2, #163	; 0xa3
20000354:	00d2      	lsls	r2, r2, #3
20000356:	4694      	mov	ip, r2
20000358:	44bc      	add	ip, r7
2000035a:	4463      	add	r3, ip
2000035c:	2201      	movs	r2, #1
2000035e:	609a      	str	r2, [r3, #8]
	castleObj.current_frame = 0;
20000360:	4bb7      	ldr	r3, [pc, #732]	; (20000640 <main+0x444>)
20000362:	22a3      	movs	r2, #163	; 0xa3
20000364:	00d2      	lsls	r2, r2, #3
20000366:	4694      	mov	ip, r2
20000368:	44bc      	add	ip, r7
2000036a:	4463      	add	r3, ip
2000036c:	2200      	movs	r2, #0
2000036e:	615a      	str	r2, [r3, #20]

	GameObject roger;
	init_roger( &roger );
20000370:	23f7      	movs	r3, #247	; 0xf7
20000372:	009b      	lsls	r3, r3, #2
20000374:	18fb      	adds	r3, r7, r3
20000376:	0018      	movs	r0, r3
20000378:	f004 fad2 	bl	20004920 <init_roger>
	roger.xPos = 1;
2000037c:	4bb4      	ldr	r3, [pc, #720]	; (20000650 <main+0x454>)
2000037e:	22a3      	movs	r2, #163	; 0xa3
20000380:	00d2      	lsls	r2, r2, #3
20000382:	4694      	mov	ip, r2
20000384:	44bc      	add	ip, r7
20000386:	4463      	add	r3, ip
20000388:	2201      	movs	r2, #1
2000038a:	605a      	str	r2, [r3, #4]
	roger.yPos = 100;
2000038c:	4bb0      	ldr	r3, [pc, #704]	; (20000650 <main+0x454>)
2000038e:	22a3      	movs	r2, #163	; 0xa3
20000390:	00d2      	lsls	r2, r2, #3
20000392:	4694      	mov	ip, r2
20000394:	44bc      	add	ip, r7
20000396:	4463      	add	r3, ip
20000398:	2264      	movs	r2, #100	; 0x64
2000039a:	609a      	str	r2, [r3, #8]
	
	GameObject game_over_witch;
	init_game_over_witch( &game_over_witch );
2000039c:	23ee      	movs	r3, #238	; 0xee
2000039e:	009b      	lsls	r3, r3, #2
200003a0:	18fb      	adds	r3, r7, r3
200003a2:	0018      	movs	r0, r3
200003a4:	f004 fc30 	bl	20004c08 <init_game_over_witch>
	game_over_witch.xPos = 1;
200003a8:	4baa      	ldr	r3, [pc, #680]	; (20000654 <main+0x458>)
200003aa:	22a3      	movs	r2, #163	; 0xa3
200003ac:	00d2      	lsls	r2, r2, #3
200003ae:	4694      	mov	ip, r2
200003b0:	44bc      	add	ip, r7
200003b2:	4463      	add	r3, ip
200003b4:	2201      	movs	r2, #1
200003b6:	605a      	str	r2, [r3, #4]
	game_over_witch.yPos = 1;
200003b8:	4ba6      	ldr	r3, [pc, #664]	; (20000654 <main+0x458>)
200003ba:	22a3      	movs	r2, #163	; 0xa3
200003bc:	00d2      	lsls	r2, r2, #3
200003be:	4694      	mov	ip, r2
200003c0:	44bc      	add	ip, r7
200003c2:	4463      	add	r3, ip
200003c4:	2201      	movs	r2, #1
200003c6:	609a      	str	r2, [r3, #8]
	game_over_witch.update = gameObjectUpdate;
200003c8:	4ba2      	ldr	r3, [pc, #648]	; (20000654 <main+0x458>)
200003ca:	22a3      	movs	r2, #163	; 0xa3
200003cc:	00d2      	lsls	r2, r2, #3
200003ce:	4694      	mov	ip, r2
200003d0:	44bc      	add	ip, r7
200003d2:	4463      	add	r3, ip
200003d4:	4aa0      	ldr	r2, [pc, #640]	; (20000658 <main+0x45c>)
200003d6:	60da      	str	r2, [r3, #12]
	game_over_witch.animation_speed = 2;
200003d8:	4b9e      	ldr	r3, [pc, #632]	; (20000654 <main+0x458>)
200003da:	22a3      	movs	r2, #163	; 0xa3
200003dc:	00d2      	lsls	r2, r2, #3
200003de:	4694      	mov	ip, r2
200003e0:	44bc      	add	ip, r7
200003e2:	4463      	add	r3, ip
200003e4:	2202      	movs	r2, #2
200003e6:	61da      	str	r2, [r3, #28]
	
	GameObject indoors;
	init_indoors( &indoors );
200003e8:	23e5      	movs	r3, #229	; 0xe5
200003ea:	009b      	lsls	r3, r3, #2
200003ec:	18fb      	adds	r3, r7, r3
200003ee:	0018      	movs	r0, r3
200003f0:	f004 f93a 	bl	20004668 <init_indoors>
	indoors.xPos = 1;
200003f4:	4b99      	ldr	r3, [pc, #612]	; (2000065c <main+0x460>)
200003f6:	22a3      	movs	r2, #163	; 0xa3
200003f8:	00d2      	lsls	r2, r2, #3
200003fa:	4694      	mov	ip, r2
200003fc:	44bc      	add	ip, r7
200003fe:	4463      	add	r3, ip
20000400:	2201      	movs	r2, #1
20000402:	605a      	str	r2, [r3, #4]
	indoors.yPos = 1;
20000404:	4b95      	ldr	r3, [pc, #596]	; (2000065c <main+0x460>)
20000406:	22a3      	movs	r2, #163	; 0xa3
20000408:	00d2      	lsls	r2, r2, #3
2000040a:	4694      	mov	ip, r2
2000040c:	44bc      	add	ip, r7
2000040e:	4463      	add	r3, ip
20000410:	2201      	movs	r2, #1
20000412:	609a      	str	r2, [r3, #8]
	
	GameObject indoors2;
	init_indoors2( &indoors2 );
20000414:	23dc      	movs	r3, #220	; 0xdc
20000416:	009b      	lsls	r3, r3, #2
20000418:	18fb      	adds	r3, r7, r3
2000041a:	0018      	movs	r0, r3
2000041c:	f004 f998 	bl	20004750 <init_indoors2>
	indoors2.xPos = 1;
20000420:	4b8f      	ldr	r3, [pc, #572]	; (20000660 <main+0x464>)
20000422:	22a3      	movs	r2, #163	; 0xa3
20000424:	00d2      	lsls	r2, r2, #3
20000426:	4694      	mov	ip, r2
20000428:	44bc      	add	ip, r7
2000042a:	4463      	add	r3, ip
2000042c:	2201      	movs	r2, #1
2000042e:	605a      	str	r2, [r3, #4]
	indoors2.yPos = 1;
20000430:	4b8b      	ldr	r3, [pc, #556]	; (20000660 <main+0x464>)
20000432:	22a3      	movs	r2, #163	; 0xa3
20000434:	00d2      	lsls	r2, r2, #3
20000436:	4694      	mov	ip, r2
20000438:	44bc      	add	ip, r7
2000043a:	4463      	add	r3, ip
2000043c:	2201      	movs	r2, #1
2000043e:	609a      	str	r2, [r3, #8]
	
	GameObject trophy;
	init_trophy( &trophy );
20000440:	23d3      	movs	r3, #211	; 0xd3
20000442:	009b      	lsls	r3, r3, #2
20000444:	18fb      	adds	r3, r7, r3
20000446:	0018      	movs	r0, r3
20000448:	f004 f9f6 	bl	20004838 <init_trophy>

	
	GameObject hair;
	init_flame(&hair);
2000044c:	23ca      	movs	r3, #202	; 0xca
2000044e:	009b      	lsls	r3, r3, #2
20000450:	18fb      	adds	r3, r7, r3
20000452:	0018      	movs	r0, r3
20000454:	f002 fb36 	bl	20002ac4 <init_flame>
	hair.xPos = 40;
20000458:	4b82      	ldr	r3, [pc, #520]	; (20000664 <main+0x468>)
2000045a:	22a3      	movs	r2, #163	; 0xa3
2000045c:	00d2      	lsls	r2, r2, #3
2000045e:	4694      	mov	ip, r2
20000460:	44bc      	add	ip, r7
20000462:	4463      	add	r3, ip
20000464:	2228      	movs	r2, #40	; 0x28
20000466:	605a      	str	r2, [r3, #4]
	hair.yPos = 10;
20000468:	4b7e      	ldr	r3, [pc, #504]	; (20000664 <main+0x468>)
2000046a:	22a3      	movs	r2, #163	; 0xa3
2000046c:	00d2      	lsls	r2, r2, #3
2000046e:	4694      	mov	ip, r2
20000470:	44bc      	add	ip, r7
20000472:	4463      	add	r3, ip
20000474:	220a      	movs	r2, #10
20000476:	609a      	str	r2, [r3, #8]
	hair.update = gameObjectUpdate;
20000478:	4b7a      	ldr	r3, [pc, #488]	; (20000664 <main+0x468>)
2000047a:	22a3      	movs	r2, #163	; 0xa3
2000047c:	00d2      	lsls	r2, r2, #3
2000047e:	4694      	mov	ip, r2
20000480:	44bc      	add	ip, r7
20000482:	4463      	add	r3, ip
20000484:	4a74      	ldr	r2, [pc, #464]	; (20000658 <main+0x45c>)
20000486:	60da      	str	r2, [r3, #12]
	
	GameObject bird;
	init_bird( &bird );
20000488:	23c1      	movs	r3, #193	; 0xc1
2000048a:	009b      	lsls	r3, r3, #2
2000048c:	18fb      	adds	r3, r7, r3
2000048e:	0018      	movs	r0, r3
20000490:	f001 fec4 	bl	2000221c <init_bird>
	bird.xPos = 180;
20000494:	4b74      	ldr	r3, [pc, #464]	; (20000668 <main+0x46c>)
20000496:	22a3      	movs	r2, #163	; 0xa3
20000498:	00d2      	lsls	r2, r2, #3
2000049a:	4694      	mov	ip, r2
2000049c:	44bc      	add	ip, r7
2000049e:	4463      	add	r3, ip
200004a0:	22b4      	movs	r2, #180	; 0xb4
200004a2:	605a      	str	r2, [r3, #4]
	bird.yPos = 40;
200004a4:	4b70      	ldr	r3, [pc, #448]	; (20000668 <main+0x46c>)
200004a6:	22a3      	movs	r2, #163	; 0xa3
200004a8:	00d2      	lsls	r2, r2, #3
200004aa:	4694      	mov	ip, r2
200004ac:	44bc      	add	ip, r7
200004ae:	4463      	add	r3, ip
200004b0:	2228      	movs	r2, #40	; 0x28
200004b2:	609a      	str	r2, [r3, #8]
	bird.update = gameObjectUpdate;
200004b4:	4b6c      	ldr	r3, [pc, #432]	; (20000668 <main+0x46c>)
200004b6:	22a3      	movs	r2, #163	; 0xa3
200004b8:	00d2      	lsls	r2, r2, #3
200004ba:	4694      	mov	ip, r2
200004bc:	44bc      	add	ip, r7
200004be:	4463      	add	r3, ip
200004c0:	4a65      	ldr	r2, [pc, #404]	; (20000658 <main+0x45c>)
200004c2:	60da      	str	r2, [r3, #12]
	
	GameObject boom;
	init_boom( &boom );
200004c4:	23b8      	movs	r3, #184	; 0xb8
200004c6:	009b      	lsls	r3, r3, #2
200004c8:	18fb      	adds	r3, r7, r3
200004ca:	0018      	movs	r0, r3
200004cc:	f002 fcb6 	bl	20002e3c <init_boom>
	boom.update = gameObjectUpdate;
200004d0:	4b66      	ldr	r3, [pc, #408]	; (2000066c <main+0x470>)
200004d2:	22a3      	movs	r2, #163	; 0xa3
200004d4:	00d2      	lsls	r2, r2, #3
200004d6:	4694      	mov	ip, r2
200004d8:	44bc      	add	ip, r7
200004da:	4463      	add	r3, ip
200004dc:	4a5e      	ldr	r2, [pc, #376]	; (20000658 <main+0x45c>)
200004de:	60da      	str	r2, [r3, #12]
	
	GameObject DIP;
	init_DIP( &DIP );
200004e0:	23af      	movs	r3, #175	; 0xaf
200004e2:	009b      	lsls	r3, r3, #2
200004e4:	18fb      	adds	r3, r7, r3
200004e6:	0018      	movs	r0, r3
200004e8:	f002 f900 	bl	200026ec <init_DIP>
	DIP.update = DIPUpdate;
200004ec:	4b60      	ldr	r3, [pc, #384]	; (20000670 <main+0x474>)
200004ee:	22a3      	movs	r2, #163	; 0xa3
200004f0:	00d2      	lsls	r2, r2, #3
200004f2:	4694      	mov	ip, r2
200004f4:	44bc      	add	ip, r7
200004f6:	4463      	add	r3, ip
200004f8:	4a5e      	ldr	r2, [pc, #376]	; (20000674 <main+0x478>)
200004fa:	60da      	str	r2, [r3, #12]
	
	GameObject player;
	init_witch( &player );
200004fc:	23a6      	movs	r3, #166	; 0xa6
200004fe:	009b      	lsls	r3, r3, #2
20000500:	18fb      	adds	r3, r7, r3
20000502:	0018      	movs	r0, r3
20000504:	f001 ffd6 	bl	200024b4 <init_witch>
	player.xPos = 3;
20000508:	4b5b      	ldr	r3, [pc, #364]	; (20000678 <main+0x47c>)
2000050a:	22a3      	movs	r2, #163	; 0xa3
2000050c:	00d2      	lsls	r2, r2, #3
2000050e:	4694      	mov	ip, r2
20000510:	44bc      	add	ip, r7
20000512:	4463      	add	r3, ip
20000514:	2203      	movs	r2, #3
20000516:	605a      	str	r2, [r3, #4]
	player.yPos = LIMIT_DOWN - 1; //player position
20000518:	4b57      	ldr	r3, [pc, #348]	; (20000678 <main+0x47c>)
2000051a:	22a3      	movs	r2, #163	; 0xa3
2000051c:	00d2      	lsls	r2, r2, #3
2000051e:	4694      	mov	ip, r2
20000520:	44bc      	add	ip, r7
20000522:	4463      	add	r3, ip
20000524:	2226      	movs	r2, #38	; 0x26
20000526:	609a      	str	r2, [r3, #8]
	player.update = playerUpdate;
20000528:	4b53      	ldr	r3, [pc, #332]	; (20000678 <main+0x47c>)
2000052a:	22a3      	movs	r2, #163	; 0xa3
2000052c:	00d2      	lsls	r2, r2, #3
2000052e:	4694      	mov	ip, r2
20000530:	44bc      	add	ip, r7
20000532:	4463      	add	r3, ip
20000534:	4a36      	ldr	r2, [pc, #216]	; (20000610 <main+0x414>)
20000536:	60da      	str	r2, [r3, #12]
	
	GameObject fire2;
	init_fire( &fire2 );
20000538:	239d      	movs	r3, #157	; 0x9d
2000053a:	009b      	lsls	r3, r3, #2
2000053c:	18fb      	adds	r3, r7, r3
2000053e:	0018      	movs	r0, r3
20000540:	f001 fbb4 	bl	20001cac <init_fire>
	GameObject fire3;
	init_fire( &fire3 );
20000544:	2394      	movs	r3, #148	; 0x94
20000546:	009b      	lsls	r3, r3, #2
20000548:	18fb      	adds	r3, r7, r3
2000054a:	0018      	movs	r0, r3
2000054c:	f001 fbae 	bl	20001cac <init_fire>
	GameObject fire4;
	init_fire( &fire4 );
20000550:	238b      	movs	r3, #139	; 0x8b
20000552:	009b      	lsls	r3, r3, #2
20000554:	18fb      	adds	r3, r7, r3
20000556:	0018      	movs	r0, r3
20000558:	f001 fba8 	bl	20001cac <init_fire>
	GameObject fire1;
	init_fire( &fire1 );
2000055c:	2382      	movs	r3, #130	; 0x82
2000055e:	009b      	lsls	r3, r3, #2
20000560:	18fb      	adds	r3, r7, r3
20000562:	0018      	movs	r0, r3
20000564:	f001 fba2 	bl	20001cac <init_fire>
	
	GameObject fire1_indoors;
	init_fire( &fire1_indoors );
20000568:	23f2      	movs	r3, #242	; 0xf2
2000056a:	005b      	lsls	r3, r3, #1
2000056c:	18fb      	adds	r3, r7, r3
2000056e:	0018      	movs	r0, r3
20000570:	f001 fb9c 	bl	20001cac <init_fire>
	fire1_indoors.xPos = 50;		//FIRE1_INDO
20000574:	4b41      	ldr	r3, [pc, #260]	; (2000067c <main+0x480>)
20000576:	22a3      	movs	r2, #163	; 0xa3
20000578:	00d2      	lsls	r2, r2, #3
2000057a:	4694      	mov	ip, r2
2000057c:	44bc      	add	ip, r7
2000057e:	4463      	add	r3, ip
20000580:	2232      	movs	r2, #50	; 0x32
20000582:	605a      	str	r2, [r3, #4]
	fire1_indoors.yPos = 64-12-7;
20000584:	4b3d      	ldr	r3, [pc, #244]	; (2000067c <main+0x480>)
20000586:	22a3      	movs	r2, #163	; 0xa3
20000588:	00d2      	lsls	r2, r2, #3
2000058a:	4694      	mov	ip, r2
2000058c:	44bc      	add	ip, r7
2000058e:	4463      	add	r3, ip
20000590:	222d      	movs	r2, #45	; 0x2d
20000592:	609a      	str	r2, [r3, #8]
	fire1_indoors.update = gameObjectUpdate;
20000594:	4b39      	ldr	r3, [pc, #228]	; (2000067c <main+0x480>)
20000596:	22a3      	movs	r2, #163	; 0xa3
20000598:	00d2      	lsls	r2, r2, #3
2000059a:	4694      	mov	ip, r2
2000059c:	44bc      	add	ip, r7
2000059e:	4463      	add	r3, ip
200005a0:	4a2d      	ldr	r2, [pc, #180]	; (20000658 <main+0x45c>)
200005a2:	60da      	str	r2, [r3, #12]
	GameObject fire2_indoors;
	init_fire( &fire2_indoors );
200005a4:	23e0      	movs	r3, #224	; 0xe0
200005a6:	005b      	lsls	r3, r3, #1
200005a8:	18fb      	adds	r3, r7, r3
200005aa:	0018      	movs	r0, r3
200005ac:	f001 fb7e 	bl	20001cac <init_fire>
	fire2_indoors.update = gameObjectUpdate;
200005b0:	4b33      	ldr	r3, [pc, #204]	; (20000680 <main+0x484>)
200005b2:	22a3      	movs	r2, #163	; 0xa3
200005b4:	00d2      	lsls	r2, r2, #3
200005b6:	4694      	mov	ip, r2
200005b8:	44bc      	add	ip, r7
200005ba:	4463      	add	r3, ip
200005bc:	4a26      	ldr	r2, [pc, #152]	; (20000658 <main+0x45c>)
200005be:	60da      	str	r2, [r3, #12]
	GameObject fire3_indoors;
	init_fire( &fire3_indoors );
200005c0:	23ce      	movs	r3, #206	; 0xce
200005c2:	005b      	lsls	r3, r3, #1
200005c4:	18fb      	adds	r3, r7, r3
200005c6:	0018      	movs	r0, r3
200005c8:	f001 fb70 	bl	20001cac <init_fire>
	fire3_indoors.update = gameObjectUpdate;
200005cc:	4b2d      	ldr	r3, [pc, #180]	; (20000684 <main+0x488>)
200005ce:	22a3      	movs	r2, #163	; 0xa3
200005d0:	00d2      	lsls	r2, r2, #3
200005d2:	4694      	mov	ip, r2
200005d4:	44bc      	add	ip, r7
200005d6:	4463      	add	r3, ip
200005d8:	4a1f      	ldr	r2, [pc, #124]	; (20000658 <main+0x45c>)
200005da:	60da      	str	r2, [r3, #12]
	GameObject fires[] = {fire1_indoors, fire2_indoors, fire3_indoors};
200005dc:	4b2a      	ldr	r3, [pc, #168]	; (20000688 <main+0x48c>)
200005de:	22a3      	movs	r2, #163	; 0xa3
200005e0:	00d2      	lsls	r2, r2, #3
200005e2:	18ba      	adds	r2, r7, r2
200005e4:	18d1      	adds	r1, r2, r3
200005e6:	4b25      	ldr	r3, [pc, #148]	; (2000067c <main+0x480>)
200005e8:	22a3      	movs	r2, #163	; 0xa3
200005ea:	00d2      	lsls	r2, r2, #3
200005ec:	18ba      	adds	r2, r7, r2
200005ee:	18d2      	adds	r2, r2, r3
200005f0:	000b      	movs	r3, r1
200005f2:	ca13      	ldmia	r2!, {r0, r1, r4}
200005f4:	c313      	stmia	r3!, {r0, r1, r4}
200005f6:	e049      	b.n	2000068c <main+0x490>
200005f8:	fffffae4 			; <UNDEFINED> instruction: 0xfffffae4
200005fc:	000004b4 			; <UNDEFINED> instruction: 0x000004b4
20000600:	000004cc 	andeq	r0, r0, ip, asr #9
20000604:	20004f90 	mulcs	r0, r0, pc	; <UNPREDICTABLE>
20000608:	20005050 	andcs	r5, r0, r0, asr r0
2000060c:	2000503c 	andcs	r5, r0, ip, lsr r0
20000610:	20001e0d 	andcs	r1, r0, sp, lsl #28
20000614:	00000484 	andeq	r0, r0, r4, lsl #9
20000618:	20005060 	andcs	r5, r0, r0, rrx
2000061c:	2000502c 	andcs	r5, r0, ip, lsr #32
20000620:	20005040 	andcs	r5, r0, r0, asr #32
20000624:	0000043c 	andeq	r0, r0, ip, lsr r4
20000628:	00000454 	andeq	r0, r0, r4, asr r4
2000062c:	2000504c 	andcs	r5, r0, ip, asr #32
20000630:	20004fc8 	andcs	r4, r0, r8, asr #31
20000634:	20005010 	andcs	r5, r0, r0, lsl r0
20000638:	fffffee8 			; <UNDEFINED> instruction: 0xfffffee8
2000063c:	fffffef4 			; <UNDEFINED> instruction: 0xfffffef4
20000640:	ffffff00 			; <UNDEFINED> instruction: 0xffffff00
20000644:	20004fb8 			; <UNDEFINED> instruction: 0x20004fb8
20000648:	20005044 	andcs	r5, r0, r4, asr #32
2000064c:	20004ff4 	strdcs	r4, [r0], -r4	; <UNPREDICTABLE>
20000650:	fffffec4 			; <UNDEFINED> instruction: 0xfffffec4
20000654:	fffffea0 			; <UNDEFINED> instruction: 0xfffffea0
20000658:	20001ae1 	andcs	r1, r0, r1, ror #21
2000065c:	fffffe7c 			; <UNDEFINED> instruction: 0xfffffe7c
20000660:	fffffe58 			; <UNDEFINED> instruction: 0xfffffe58
20000664:	fffffe10 			; <UNDEFINED> instruction: 0xfffffe10
20000668:	fffffdec 			; <UNDEFINED> instruction: 0xfffffdec
2000066c:	fffffdc8 			; <UNDEFINED> instruction: 0xfffffdc8
20000670:	fffffda4 			; <UNDEFINED> instruction: 0xfffffda4
20000674:	2000280d 	andcs	r2, r0, sp, lsl #16
20000678:	fffffd80 			; <UNDEFINED> instruction: 0xfffffd80
2000067c:	fffffccc 			; <UNDEFINED> instruction: 0xfffffccc
20000680:	fffffca8 			; <UNDEFINED> instruction: 0xfffffca8
20000684:	fffffc84 			; <UNDEFINED> instruction: 0xfffffc84
20000688:	fffffc18 			; <UNDEFINED> instruction: 0xfffffc18
2000068c:	ca13      	ldmia	r2!, {r0, r1, r4}
2000068e:	c313      	stmia	r3!, {r0, r1, r4}
20000690:	ca13      	ldmia	r2!, {r0, r1, r4}
20000692:	c313      	stmia	r3!, {r0, r1, r4}
20000694:	4bf4      	ldr	r3, [pc, #976]	; (20000a68 <main+0x86c>)
20000696:	22a3      	movs	r2, #163	; 0xa3
20000698:	00d2      	lsls	r2, r2, #3
2000069a:	4694      	mov	ip, r2
2000069c:	44bc      	add	ip, r7
2000069e:	4463      	add	r3, ip
200006a0:	4af2      	ldr	r2, [pc, #968]	; (20000a6c <main+0x870>)
200006a2:	21a3      	movs	r1, #163	; 0xa3
200006a4:	00c9      	lsls	r1, r1, #3
200006a6:	468c      	mov	ip, r1
200006a8:	44bc      	add	ip, r7
200006aa:	4462      	add	r2, ip
200006ac:	3324      	adds	r3, #36	; 0x24
200006ae:	ca13      	ldmia	r2!, {r0, r1, r4}
200006b0:	c313      	stmia	r3!, {r0, r1, r4}
200006b2:	ca13      	ldmia	r2!, {r0, r1, r4}
200006b4:	c313      	stmia	r3!, {r0, r1, r4}
200006b6:	ca13      	ldmia	r2!, {r0, r1, r4}
200006b8:	c313      	stmia	r3!, {r0, r1, r4}
200006ba:	4beb      	ldr	r3, [pc, #940]	; (20000a68 <main+0x86c>)
200006bc:	22a3      	movs	r2, #163	; 0xa3
200006be:	00d2      	lsls	r2, r2, #3
200006c0:	4694      	mov	ip, r2
200006c2:	44bc      	add	ip, r7
200006c4:	4463      	add	r3, ip
200006c6:	4aea      	ldr	r2, [pc, #936]	; (20000a70 <main+0x874>)
200006c8:	21a3      	movs	r1, #163	; 0xa3
200006ca:	00c9      	lsls	r1, r1, #3
200006cc:	468c      	mov	ip, r1
200006ce:	44bc      	add	ip, r7
200006d0:	4462      	add	r2, ip
200006d2:	3348      	adds	r3, #72	; 0x48
200006d4:	ca13      	ldmia	r2!, {r0, r1, r4}
200006d6:	c313      	stmia	r3!, {r0, r1, r4}
200006d8:	ca13      	ldmia	r2!, {r0, r1, r4}
200006da:	c313      	stmia	r3!, {r0, r1, r4}
200006dc:	ca13      	ldmia	r2!, {r0, r1, r4}
200006de:	c313      	stmia	r3!, {r0, r1, r4}
	
	
	fire2.xPos = 98;
200006e0:	4be4      	ldr	r3, [pc, #912]	; (20000a74 <main+0x878>)
200006e2:	22a3      	movs	r2, #163	; 0xa3
200006e4:	00d2      	lsls	r2, r2, #3
200006e6:	4694      	mov	ip, r2
200006e8:	44bc      	add	ip, r7
200006ea:	4463      	add	r3, ip
200006ec:	2262      	movs	r2, #98	; 0x62
200006ee:	605a      	str	r2, [r3, #4]
	fire2.yPos = 26-12;
200006f0:	4be0      	ldr	r3, [pc, #896]	; (20000a74 <main+0x878>)
200006f2:	22a3      	movs	r2, #163	; 0xa3
200006f4:	00d2      	lsls	r2, r2, #3
200006f6:	4694      	mov	ip, r2
200006f8:	44bc      	add	ip, r7
200006fa:	4463      	add	r3, ip
200006fc:	220e      	movs	r2, #14
200006fe:	609a      	str	r2, [r3, #8]
	fire3.xPos = 115;
20000700:	4bdd      	ldr	r3, [pc, #884]	; (20000a78 <main+0x87c>)
20000702:	22a3      	movs	r2, #163	; 0xa3
20000704:	00d2      	lsls	r2, r2, #3
20000706:	4694      	mov	ip, r2
20000708:	44bc      	add	ip, r7
2000070a:	4463      	add	r3, ip
2000070c:	2273      	movs	r2, #115	; 0x73
2000070e:	605a      	str	r2, [r3, #4]
	fire3.yPos = 34-12;
20000710:	4bd9      	ldr	r3, [pc, #868]	; (20000a78 <main+0x87c>)
20000712:	22a3      	movs	r2, #163	; 0xa3
20000714:	00d2      	lsls	r2, r2, #3
20000716:	4694      	mov	ip, r2
20000718:	44bc      	add	ip, r7
2000071a:	4463      	add	r3, ip
2000071c:	2216      	movs	r2, #22
2000071e:	609a      	str	r2, [r3, #8]
	
	fire1.xPos = 85;
20000720:	4bd6      	ldr	r3, [pc, #856]	; (20000a7c <main+0x880>)
20000722:	22a3      	movs	r2, #163	; 0xa3
20000724:	00d2      	lsls	r2, r2, #3
20000726:	4694      	mov	ip, r2
20000728:	44bc      	add	ip, r7
2000072a:	4463      	add	r3, ip
2000072c:	2255      	movs	r2, #85	; 0x55
2000072e:	605a      	str	r2, [r3, #4]
	fire1.yPos = 23-12;
20000730:	4bd2      	ldr	r3, [pc, #840]	; (20000a7c <main+0x880>)
20000732:	22a3      	movs	r2, #163	; 0xa3
20000734:	00d2      	lsls	r2, r2, #3
20000736:	4694      	mov	ip, r2
20000738:	44bc      	add	ip, r7
2000073a:	4463      	add	r3, ip
2000073c:	220b      	movs	r2, #11
2000073e:	609a      	str	r2, [r3, #8]
	fire4.xPos = 71;
20000740:	4bcf      	ldr	r3, [pc, #828]	; (20000a80 <main+0x884>)
20000742:	22a3      	movs	r2, #163	; 0xa3
20000744:	00d2      	lsls	r2, r2, #3
20000746:	4694      	mov	ip, r2
20000748:	44bc      	add	ip, r7
2000074a:	4463      	add	r3, ip
2000074c:	2247      	movs	r2, #71	; 0x47
2000074e:	605a      	str	r2, [r3, #4]
	fire4.yPos = 27-11;
20000750:	4bcb      	ldr	r3, [pc, #812]	; (20000a80 <main+0x884>)
20000752:	22a3      	movs	r2, #163	; 0xa3
20000754:	00d2      	lsls	r2, r2, #3
20000756:	4694      	mov	ip, r2
20000758:	44bc      	add	ip, r7
2000075a:	4463      	add	r3, ip
2000075c:	2210      	movs	r2, #16
2000075e:	609a      	str	r2, [r3, #8]
	//draw_game_object(&castleObj);
	
	fire2.animation_speed = 2;
20000760:	4bc4      	ldr	r3, [pc, #784]	; (20000a74 <main+0x878>)
20000762:	22a3      	movs	r2, #163	; 0xa3
20000764:	00d2      	lsls	r2, r2, #3
20000766:	4694      	mov	ip, r2
20000768:	44bc      	add	ip, r7
2000076a:	4463      	add	r3, ip
2000076c:	2202      	movs	r2, #2
2000076e:	61da      	str	r2, [r3, #28]
	fire3.animation_speed = 2;
20000770:	4bc1      	ldr	r3, [pc, #772]	; (20000a78 <main+0x87c>)
20000772:	22a3      	movs	r2, #163	; 0xa3
20000774:	00d2      	lsls	r2, r2, #3
20000776:	4694      	mov	ip, r2
20000778:	44bc      	add	ip, r7
2000077a:	4463      	add	r3, ip
2000077c:	2202      	movs	r2, #2
2000077e:	61da      	str	r2, [r3, #28]
	fire1.animation_speed = 2;
20000780:	4bbe      	ldr	r3, [pc, #760]	; (20000a7c <main+0x880>)
20000782:	22a3      	movs	r2, #163	; 0xa3
20000784:	00d2      	lsls	r2, r2, #3
20000786:	4694      	mov	ip, r2
20000788:	44bc      	add	ip, r7
2000078a:	4463      	add	r3, ip
2000078c:	2202      	movs	r2, #2
2000078e:	61da      	str	r2, [r3, #28]
	fire4.animation_speed = 2;
20000790:	4bbb      	ldr	r3, [pc, #748]	; (20000a80 <main+0x884>)
20000792:	22a3      	movs	r2, #163	; 0xa3
20000794:	00d2      	lsls	r2, r2, #3
20000796:	4694      	mov	ip, r2
20000798:	44bc      	add	ip, r7
2000079a:	4463      	add	r3, ip
2000079c:	2202      	movs	r2, #2
2000079e:	61da      	str	r2, [r3, #28]
	
	fire2.update = gameObjectUpdate;
200007a0:	4bb4      	ldr	r3, [pc, #720]	; (20000a74 <main+0x878>)
200007a2:	22a3      	movs	r2, #163	; 0xa3
200007a4:	00d2      	lsls	r2, r2, #3
200007a6:	4694      	mov	ip, r2
200007a8:	44bc      	add	ip, r7
200007aa:	4463      	add	r3, ip
200007ac:	4ab5      	ldr	r2, [pc, #724]	; (20000a84 <main+0x888>)
200007ae:	60da      	str	r2, [r3, #12]
	fire3.update = gameObjectUpdate;
200007b0:	4bb1      	ldr	r3, [pc, #708]	; (20000a78 <main+0x87c>)
200007b2:	22a3      	movs	r2, #163	; 0xa3
200007b4:	00d2      	lsls	r2, r2, #3
200007b6:	4694      	mov	ip, r2
200007b8:	44bc      	add	ip, r7
200007ba:	4463      	add	r3, ip
200007bc:	4ab1      	ldr	r2, [pc, #708]	; (20000a84 <main+0x888>)
200007be:	60da      	str	r2, [r3, #12]
	fire1.update = gameObjectUpdate;
200007c0:	4bae      	ldr	r3, [pc, #696]	; (20000a7c <main+0x880>)
200007c2:	22a3      	movs	r2, #163	; 0xa3
200007c4:	00d2      	lsls	r2, r2, #3
200007c6:	4694      	mov	ip, r2
200007c8:	44bc      	add	ip, r7
200007ca:	4463      	add	r3, ip
200007cc:	4aad      	ldr	r2, [pc, #692]	; (20000a84 <main+0x888>)
200007ce:	60da      	str	r2, [r3, #12]
	fire4.update = gameObjectUpdate;
200007d0:	4bab      	ldr	r3, [pc, #684]	; (20000a80 <main+0x884>)
200007d2:	22a3      	movs	r2, #163	; 0xa3
200007d4:	00d2      	lsls	r2, r2, #3
200007d6:	4694      	mov	ip, r2
200007d8:	44bc      	add	ip, r7
200007da:	4463      	add	r3, ip
200007dc:	4aa9      	ldr	r2, [pc, #676]	; (20000a84 <main+0x888>)
200007de:	60da      	str	r2, [r3, #12]
	SlowText text10;
	SlowText text11;
	SlowText text12;
	SlowText textGameOver;
	SlowText textWin;
	init_slow_text(&text_kra, "*KRA!* *KRA!*", "   ", 1);
200007e0:	4aa9      	ldr	r2, [pc, #676]	; (20000a88 <main+0x88c>)
200007e2:	49aa      	ldr	r1, [pc, #680]	; (20000a8c <main+0x890>)
200007e4:	238e      	movs	r3, #142	; 0x8e
200007e6:	005b      	lsls	r3, r3, #1
200007e8:	18f8      	adds	r0, r7, r3
200007ea:	2301      	movs	r3, #1
200007ec:	f003 fee5 	bl	200045ba <init_slow_text>
	init_slow_text(&text1, "For centuries the", "DILs-witches have", 1);
200007f0:	4aa7      	ldr	r2, [pc, #668]	; (20000a90 <main+0x894>)
200007f2:	49a8      	ldr	r1, [pc, #672]	; (20000a94 <main+0x898>)
200007f4:	2384      	movs	r3, #132	; 0x84
200007f6:	005b      	lsls	r3, r3, #1
200007f8:	18f8      	adds	r0, r7, r3
200007fa:	2301      	movs	r3, #1
200007fc:	f003 fedd 	bl	200045ba <init_slow_text>
	init_slow_text(&text2, "coiled in fear,", "    ", 1);
20000800:	4aa5      	ldr	r2, [pc, #660]	; (20000a98 <main+0x89c>)
20000802:	49a6      	ldr	r1, [pc, #664]	; (20000a9c <main+0x8a0>)
20000804:	23f4      	movs	r3, #244	; 0xf4
20000806:	18f8      	adds	r0, r7, r3
20000808:	2301      	movs	r3, #1
2000080a:	f003 fed6 	bl	200045ba <init_slow_text>
	init_slow_text(&text3, "whenever they hear", "that a DIPs-witch", 1);
2000080e:	4aa4      	ldr	r2, [pc, #656]	; (20000aa0 <main+0x8a4>)
20000810:	49a4      	ldr	r1, [pc, #656]	; (20000aa4 <main+0x8a8>)
20000812:	23e0      	movs	r3, #224	; 0xe0
20000814:	18f8      	adds	r0, r7, r3
20000816:	2301      	movs	r3, #1
20000818:	f003 fecf 	bl	200045ba <init_slow_text>
	init_slow_text(&text4, "is near.", "   ", 1);
2000081c:	4a9a      	ldr	r2, [pc, #616]	; (20000a88 <main+0x88c>)
2000081e:	49a2      	ldr	r1, [pc, #648]	; (20000aa8 <main+0x8ac>)
20000820:	23cc      	movs	r3, #204	; 0xcc
20000822:	18f8      	adds	r0, r7, r3
20000824:	2301      	movs	r3, #1
20000826:	f003 fec8 	bl	200045ba <init_slow_text>
	init_slow_text(&text5, "So it is quite", "surprising, finding", 1);
2000082a:	4aa0      	ldr	r2, [pc, #640]	; (20000aac <main+0x8b0>)
2000082c:	49a0      	ldr	r1, [pc, #640]	; (20000ab0 <main+0x8b4>)
2000082e:	23b8      	movs	r3, #184	; 0xb8
20000830:	18f8      	adds	r0, r7, r3
20000832:	2301      	movs	r3, #1
20000834:	f003 fec1 	bl	200045ba <init_slow_text>
	init_slow_text(&text6, "you here,", "    ", 1);
20000838:	4a97      	ldr	r2, [pc, #604]	; (20000a98 <main+0x89c>)
2000083a:	499e      	ldr	r1, [pc, #632]	; (20000ab4 <main+0x8b8>)
2000083c:	23a4      	movs	r3, #164	; 0xa4
2000083e:	18f8      	adds	r0, r7, r3
20000840:	2301      	movs	r3, #1
20000842:	f003 feba 	bl	200045ba <init_slow_text>
	init_slow_text(&text7, "queen Daffo of DILs,", "heir to king Lear.", 1);
20000846:	4a9c      	ldr	r2, [pc, #624]	; (20000ab8 <main+0x8bc>)
20000848:	499c      	ldr	r1, [pc, #624]	; (20000abc <main+0x8c0>)
2000084a:	2390      	movs	r3, #144	; 0x90
2000084c:	18f8      	adds	r0, r7, r3
2000084e:	2301      	movs	r3, #1
20000850:	f003 feb3 	bl	200045ba <init_slow_text>
	init_slow_text(&text8, "But maybe you're", "tempted, to loot", 1);
20000854:	4a9a      	ldr	r2, [pc, #616]	; (20000ac0 <main+0x8c4>)
20000856:	499b      	ldr	r1, [pc, #620]	; (20000ac4 <main+0x8c8>)
20000858:	237c      	movs	r3, #124	; 0x7c
2000085a:	18f8      	adds	r0, r7, r3
2000085c:	2301      	movs	r3, #1
2000085e:	f003 feac 	bl	200045ba <init_slow_text>
	init_slow_text(&text9, "from the riches,", "    ", 1);
20000862:	4a8d      	ldr	r2, [pc, #564]	; (20000a98 <main+0x89c>)
20000864:	4998      	ldr	r1, [pc, #608]	; (20000ac8 <main+0x8cc>)
20000866:	2368      	movs	r3, #104	; 0x68
20000868:	18f8      	adds	r0, r7, r3
2000086a:	2301      	movs	r3, #1
2000086c:	f003 fea5 	bl	200045ba <init_slow_text>
	init_slow_text(&text12, "wicked DIPs-witches.", "    ", 1);
20000870:	4a89      	ldr	r2, [pc, #548]	; (20000a98 <main+0x89c>)
20000872:	4996      	ldr	r1, [pc, #600]	; (20000acc <main+0x8d0>)
20000874:	232c      	movs	r3, #44	; 0x2c
20000876:	18f8      	adds	r0, r7, r3
20000878:	2301      	movs	r3, #1
2000087a:	f003 fe9e 	bl	200045ba <init_slow_text>
	init_slow_text(&text10, "so grippily trea-", "sured by", 1);
2000087e:	4a94      	ldr	r2, [pc, #592]	; (20000ad0 <main+0x8d4>)
20000880:	4994      	ldr	r1, [pc, #592]	; (20000ad4 <main+0x8d8>)
20000882:	2354      	movs	r3, #84	; 0x54
20000884:	18f8      	adds	r0, r7, r3
20000886:	2301      	movs	r3, #1
20000888:	f003 fe97 	bl	200045ba <init_slow_text>
	init_slow_text(&text11, "Enter, brave witch,", "- reset the switch!", 1);
2000088c:	4a92      	ldr	r2, [pc, #584]	; (20000ad8 <main+0x8dc>)
2000088e:	4993      	ldr	r1, [pc, #588]	; (20000adc <main+0x8e0>)
20000890:	2340      	movs	r3, #64	; 0x40
20000892:	18f8      	adds	r0, r7, r3
20000894:	2301      	movs	r3, #1
20000896:	f003 fe90 	bl	200045ba <init_slow_text>
	init_slow_text(&textGameOver, "DIPs-WITCH:","HAHAHAHAHAAAAAAAA!!!", 1);
2000089a:	4a91      	ldr	r2, [pc, #580]	; (20000ae0 <main+0x8e4>)
2000089c:	4991      	ldr	r1, [pc, #580]	; (20000ae4 <main+0x8e8>)
2000089e:	2318      	movs	r3, #24
200008a0:	18f8      	adds	r0, r7, r3
200008a2:	2301      	movs	r3, #1
200008a4:	f003 fe89 	bl	200045ba <init_slow_text>
	init_slow_text(&textWin, "Roger (King Lear): ","I am proud of you!", 1);
200008a8:	4a8f      	ldr	r2, [pc, #572]	; (20000ae8 <main+0x8ec>)
200008aa:	4990      	ldr	r1, [pc, #576]	; (20000aec <main+0x8f0>)
200008ac:	1d38      	adds	r0, r7, #4
200008ae:	2301      	movs	r3, #1
200008b0:	f003 fe83 	bl	200045ba <init_slow_text>
	//ascii_write_part("Yeeaaah!!!", "This is working! :)", 5, 10);
	set_up_ascii();
200008b4:	f003 fd5e 	bl	20004374 <set_up_ascii>
	set_up_DIL();
200008b8:	f003 fb8c 	bl	20003fd4 <set_up_DIL>
	clear_ascii();
200008bc:	f003 fd63 	bl	20004386 <clear_ascii>
	
	int game_over_counter = 0;
200008c0:	2300      	movs	r3, #0
200008c2:	4a8b      	ldr	r2, [pc, #556]	; (20000af0 <main+0x8f4>)
200008c4:	18ba      	adds	r2, r7, r2
200008c6:	6013      	str	r3, [r2, #0]
	
	int is_climbing = 0;
200008c8:	2300      	movs	r3, #0
200008ca:	22a2      	movs	r2, #162	; 0xa2
200008cc:	00d2      	lsls	r2, r2, #3
200008ce:	18ba      	adds	r2, r7, r2
200008d0:	6013      	str	r3, [r2, #0]
	int has_climbed = 0;
200008d2:	2300      	movs	r3, #0
200008d4:	4a87      	ldr	r2, [pc, #540]	; (20000af4 <main+0x8f8>)
200008d6:	18ba      	adds	r2, r7, r2
200008d8:	6013      	str	r3, [r2, #0]
	int game_over = 0;
200008da:	2300      	movs	r3, #0
200008dc:	22a1      	movs	r2, #161	; 0xa1
200008de:	00d2      	lsls	r2, r2, #3
200008e0:	18ba      	adds	r2, r7, r2
200008e2:	6013      	str	r3, [r2, #0]
	int game_over_adder = 0;
200008e4:	2300      	movs	r3, #0
200008e6:	4a84      	ldr	r2, [pc, #528]	; (20000af8 <main+0x8fc>)
200008e8:	18ba      	adds	r2, r7, r2
200008ea:	6013      	str	r3, [r2, #0]
	int no_DIP = 0;
200008ec:	2300      	movs	r3, #0
200008ee:	22a0      	movs	r2, #160	; 0xa0
200008f0:	00d2      	lsls	r2, r2, #3
200008f2:	18ba      	adds	r2, r7, r2
200008f4:	6013      	str	r3, [r2, #0]
	int exploding = 0;
200008f6:	2300      	movs	r3, #0
200008f8:	4a80      	ldr	r2, [pc, #512]	; (20000afc <main+0x900>)
200008fa:	18ba      	adds	r2, r7, r2
200008fc:	6013      	str	r3, [r2, #0]
	int first = 1;
200008fe:	2301      	movs	r3, #1
20000900:	229f      	movs	r2, #159	; 0x9f
20000902:	00d2      	lsls	r2, r2, #3
20000904:	18ba      	adds	r2, r7, r2
20000906:	6013      	str	r3, [r2, #0]
	int lastFireTrigger = 0;
20000908:	2300      	movs	r3, #0
2000090a:	4a7d      	ldr	r2, [pc, #500]	; (20000b00 <main+0x904>)
2000090c:	18ba      	adds	r2, r7, r2
2000090e:	6013      	str	r3, [r2, #0]
	int final_show_count = 8192;
20000910:	2380      	movs	r3, #128	; 0x80
20000912:	019b      	lsls	r3, r3, #6
20000914:	229e      	movs	r2, #158	; 0x9e
20000916:	00d2      	lsls	r2, r2, #3
20000918:	18ba      	adds	r2, r7, r2
2000091a:	6013      	str	r3, [r2, #0]
		
	current_screen = RESET_GAME;
2000091c:	4b79      	ldr	r3, [pc, #484]	; (20000b04 <main+0x908>)
2000091e:	220a      	movs	r2, #10
20000920:	601a      	str	r2, [r3, #0]
	
	//Game loop
	while(1) {
			
		switch(current_screen) {
20000922:	4b78      	ldr	r3, [pc, #480]	; (20000b04 <main+0x908>)
20000924:	681b      	ldr	r3, [r3, #0]
20000926:	2b0a      	cmp	r3, #10
20000928:	d8fb      	bhi.n	20000922 <main+0x726>
2000092a:	009a      	lsls	r2, r3, #2
2000092c:	4b76      	ldr	r3, [pc, #472]	; (20000b08 <main+0x90c>)
2000092e:	18d3      	adds	r3, r2, r3
20000930:	681b      	ldr	r3, [r3, #0]
20000932:	469f      	mov	pc, r3
			
			case SWITCH_LOCK: //before

				while(read_DIL() == 0){
					draw_game_object(&pressObj);
20000934:	4b75      	ldr	r3, [pc, #468]	; (20000b0c <main+0x910>)
20000936:	18fb      	adds	r3, r7, r3
20000938:	0018      	movs	r0, r3
2000093a:	f003 faad 	bl	20003e98 <draw_game_object>
					show_frame(1);
2000093e:	2001      	movs	r0, #1
20000940:	f003 faeb 	bl	20003f1a <show_frame>
				while(read_DIL() == 0){
20000944:	f003 fb52 	bl	20003fec <read_DIL>
20000948:	1e03      	subs	r3, r0, #0
2000094a:	d0f3      	beq.n	20000934 <main+0x738>
				}
				
				counter = 0;
2000094c:	4b70      	ldr	r3, [pc, #448]	; (20000b10 <main+0x914>)
2000094e:	2200      	movs	r2, #0
20000950:	601a      	str	r2, [r3, #0]
				current_screen = START_SCREEN;
20000952:	4b6c      	ldr	r3, [pc, #432]	; (20000b04 <main+0x908>)
20000954:	2201      	movs	r2, #1
20000956:	601a      	str	r2, [r3, #0]
				break;
20000958:	f001 f87f 	bl	20001a5a <main+0x185e>
			
			
			case START_SCREEN: //outside
				
				counter++;
2000095c:	4b6c      	ldr	r3, [pc, #432]	; (20000b10 <main+0x914>)
2000095e:	681b      	ldr	r3, [r3, #0]
20000960:	1c5a      	adds	r2, r3, #1
20000962:	4b6b      	ldr	r3, [pc, #428]	; (20000b10 <main+0x914>)
20000964:	601a      	str	r2, [r3, #0]
				
				if(titleObj.yPos < 1) {
20000966:	2392      	movs	r3, #146	; 0x92
20000968:	00db      	lsls	r3, r3, #3
2000096a:	18fb      	adds	r3, r7, r3
2000096c:	689b      	ldr	r3, [r3, #8]
2000096e:	2b00      	cmp	r3, #0
20000970:	dc08      	bgt.n	20000984 <main+0x788>
					titleObj.yPos++;
20000972:	2392      	movs	r3, #146	; 0x92
20000974:	00db      	lsls	r3, r3, #3
20000976:	18fb      	adds	r3, r7, r3
20000978:	689b      	ldr	r3, [r3, #8]
2000097a:	1c5a      	adds	r2, r3, #1
2000097c:	2392      	movs	r3, #146	; 0x92
2000097e:	00db      	lsls	r3, r3, #3
20000980:	18fb      	adds	r3, r7, r3
20000982:	609a      	str	r2, [r3, #8]
				}
				
				draw_game_object(&castleObj);
20000984:	2383      	movs	r3, #131	; 0x83
20000986:	00db      	lsls	r3, r3, #3
20000988:	18fb      	adds	r3, r7, r3
2000098a:	0018      	movs	r0, r3
2000098c:	f003 fa84 	bl	20003e98 <draw_game_object>
				draw_game_object(&fire2);
20000990:	239d      	movs	r3, #157	; 0x9d
20000992:	009b      	lsls	r3, r3, #2
20000994:	18fb      	adds	r3, r7, r3
20000996:	0018      	movs	r0, r3
20000998:	f003 fa7e 	bl	20003e98 <draw_game_object>
				draw_game_object(&fire3);
2000099c:	2394      	movs	r3, #148	; 0x94
2000099e:	009b      	lsls	r3, r3, #2
200009a0:	18fb      	adds	r3, r7, r3
200009a2:	0018      	movs	r0, r3
200009a4:	f003 fa78 	bl	20003e98 <draw_game_object>
				draw_game_object(&fire1);
200009a8:	2382      	movs	r3, #130	; 0x82
200009aa:	009b      	lsls	r3, r3, #2
200009ac:	18fb      	adds	r3, r7, r3
200009ae:	0018      	movs	r0, r3
200009b0:	f003 fa72 	bl	20003e98 <draw_game_object>
				draw_game_object(&fire4);
200009b4:	238b      	movs	r3, #139	; 0x8b
200009b6:	009b      	lsls	r3, r3, #2
200009b8:	18fb      	adds	r3, r7, r3
200009ba:	0018      	movs	r0, r3
200009bc:	f003 fa6c 	bl	20003e98 <draw_game_object>
				draw_game_object(&titleObj);
200009c0:	2392      	movs	r3, #146	; 0x92
200009c2:	00db      	lsls	r3, r3, #3
200009c4:	18fb      	adds	r3, r7, r3
200009c6:	0018      	movs	r0, r3
200009c8:	f003 fa66 	bl	20003e98 <draw_game_object>
				draw_game_object(&bird);
200009cc:	23c1      	movs	r3, #193	; 0xc1
200009ce:	009b      	lsls	r3, r3, #2
200009d0:	18fb      	adds	r3, r7, r3
200009d2:	0018      	movs	r0, r3
200009d4:	f003 fa60 	bl	20003e98 <draw_game_object>
				show_frame(1);
200009d8:	2001      	movs	r0, #1
200009da:	f003 fa9e 	bl	20003f1a <show_frame>
				
				static int long_text = 40;
				static int short_text = 20;
				static int delay_until_text = 130;
				
				if (counter < delay_until_text - 55 && counter > delay_until_text - 90)
200009de:	4b4d      	ldr	r3, [pc, #308]	; (20000b14 <main+0x918>)
200009e0:	681b      	ldr	r3, [r3, #0]
200009e2:	3b37      	subs	r3, #55	; 0x37
200009e4:	001a      	movs	r2, r3
200009e6:	4b4a      	ldr	r3, [pc, #296]	; (20000b10 <main+0x914>)
200009e8:	681b      	ldr	r3, [r3, #0]
200009ea:	429a      	cmp	r2, r3
200009ec:	dd14      	ble.n	20000a18 <main+0x81c>
200009ee:	4b49      	ldr	r3, [pc, #292]	; (20000b14 <main+0x918>)
200009f0:	681b      	ldr	r3, [r3, #0]
200009f2:	3b5a      	subs	r3, #90	; 0x5a
200009f4:	001a      	movs	r2, r3
200009f6:	4b46      	ldr	r3, [pc, #280]	; (20000b10 <main+0x914>)
200009f8:	681b      	ldr	r3, [r3, #0]
200009fa:	429a      	cmp	r2, r3
200009fc:	da0c      	bge.n	20000a18 <main+0x81c>
					text_kra.display(&text_kra, 20);
200009fe:	4b46      	ldr	r3, [pc, #280]	; (20000b18 <main+0x91c>)
20000a00:	22a3      	movs	r2, #163	; 0xa3
20000a02:	00d2      	lsls	r2, r2, #3
20000a04:	4694      	mov	ip, r2
20000a06:	44bc      	add	ip, r7
20000a08:	4463      	add	r3, ip
20000a0a:	691b      	ldr	r3, [r3, #16]
20000a0c:	228e      	movs	r2, #142	; 0x8e
20000a0e:	0052      	lsls	r2, r2, #1
20000a10:	18ba      	adds	r2, r7, r2
20000a12:	2114      	movs	r1, #20
20000a14:	0010      	movs	r0, r2
20000a16:	4798      	blx	r3
				if (counter == delay_until_text - 25)
20000a18:	4b3e      	ldr	r3, [pc, #248]	; (20000b14 <main+0x918>)
20000a1a:	681b      	ldr	r3, [r3, #0]
20000a1c:	3b19      	subs	r3, #25
20000a1e:	001a      	movs	r2, r3
20000a20:	4b3b      	ldr	r3, [pc, #236]	; (20000b10 <main+0x914>)
20000a22:	681b      	ldr	r3, [r3, #0]
20000a24:	429a      	cmp	r2, r3
20000a26:	d101      	bne.n	20000a2c <main+0x830>
					clear_ascii();
20000a28:	f003 fcad 	bl	20004386 <clear_ascii>
				
				if (counter < delay_until_text);
20000a2c:	4b38      	ldr	r3, [pc, #224]	; (20000b10 <main+0x914>)
20000a2e:	681a      	ldr	r2, [r3, #0]
20000a30:	4b38      	ldr	r3, [pc, #224]	; (20000b14 <main+0x918>)
20000a32:	681b      	ldr	r3, [r3, #0]
20000a34:	429a      	cmp	r2, r3
20000a36:	da00      	bge.n	20000a3a <main+0x83e>
20000a38:	e1d0      	b.n	20000ddc <main+0xbe0>
				else if (counter < delay_until_text + 1*long_text)
20000a3a:	4b36      	ldr	r3, [pc, #216]	; (20000b14 <main+0x918>)
20000a3c:	681a      	ldr	r2, [r3, #0]
20000a3e:	4b37      	ldr	r3, [pc, #220]	; (20000b1c <main+0x920>)
20000a40:	681b      	ldr	r3, [r3, #0]
20000a42:	18d2      	adds	r2, r2, r3
20000a44:	4b32      	ldr	r3, [pc, #200]	; (20000b10 <main+0x914>)
20000a46:	681b      	ldr	r3, [r3, #0]
20000a48:	429a      	cmp	r2, r3
20000a4a:	dd6b      	ble.n	20000b24 <main+0x928>
					text1.display(&text1, 20);
20000a4c:	4b34      	ldr	r3, [pc, #208]	; (20000b20 <main+0x924>)
20000a4e:	22a3      	movs	r2, #163	; 0xa3
20000a50:	00d2      	lsls	r2, r2, #3
20000a52:	4694      	mov	ip, r2
20000a54:	44bc      	add	ip, r7
20000a56:	4463      	add	r3, ip
20000a58:	691b      	ldr	r3, [r3, #16]
20000a5a:	2284      	movs	r2, #132	; 0x84
20000a5c:	0052      	lsls	r2, r2, #1
20000a5e:	18ba      	adds	r2, r7, r2
20000a60:	2114      	movs	r1, #20
20000a62:	0010      	movs	r0, r2
20000a64:	4798      	blx	r3
20000a66:	e1b9      	b.n	20000ddc <main+0xbe0>
20000a68:	fffffc18 			; <UNDEFINED> instruction: 0xfffffc18
20000a6c:	fffffca8 			; <UNDEFINED> instruction: 0xfffffca8
20000a70:	fffffc84 			; <UNDEFINED> instruction: 0xfffffc84
20000a74:	fffffd5c 			; <UNDEFINED> instruction: 0xfffffd5c
20000a78:	fffffd38 			; <UNDEFINED> instruction: 0xfffffd38
20000a7c:	fffffcf0 			; <UNDEFINED> instruction: 0xfffffcf0
20000a80:	fffffd14 			; <UNDEFINED> instruction: 0xfffffd14
20000a84:	20001ae1 	andcs	r1, r0, r1, ror #21
20000a88:	20014470 	andcs	r4, r1, r0, ror r4
20000a8c:	20014474 	andcs	r4, r1, r4, ror r4
20000a90:	20014484 	andcs	r4, r1, r4, lsl #9
20000a94:	20014498 	mulcs	r1, r8, r4
20000a98:	200144ac 	andcs	r4, r1, ip, lsr #9
20000a9c:	200144b4 			; <UNDEFINED> instruction: 0x200144b4
20000aa0:	200144c4 	andcs	r4, r1, r4, asr #9
20000aa4:	200144d8 	ldrdcs	r4, [r1], -r8
20000aa8:	200144ec 	andcs	r4, r1, ip, ror #9
20000aac:	200144f8 	strdcs	r4, [r1], -r8
20000ab0:	2001450c 	andcs	r4, r1, ip, lsl #10
20000ab4:	2001451c 	andcs	r4, r1, ip, lsl r5
20000ab8:	20014528 	andcs	r4, r1, r8, lsr #10
20000abc:	2001453c 	andcs	r4, r1, ip, lsr r5
20000ac0:	20014554 	andcs	r4, r1, r4, asr r5
20000ac4:	20014568 	andcs	r4, r1, r8, ror #10
20000ac8:	2001457c 	andcs	r4, r1, ip, ror r5
20000acc:	20014590 	mulcs	r1, r0, r5
20000ad0:	200145a8 	andcs	r4, r1, r8, lsr #11
20000ad4:	200145b4 			; <UNDEFINED> instruction: 0x200145b4
20000ad8:	200145c8 	andcs	r4, r1, r8, asr #11
20000adc:	200145dc 	ldrdcs	r4, [r1], -ip
20000ae0:	200145f0 	strdcs	r4, [r1], -r0
20000ae4:	20014608 	andcs	r4, r1, r8, lsl #12
20000ae8:	20014614 	andcs	r4, r1, r4, lsl r6
20000aec:	20014628 	andcs	r4, r1, r8, lsr #12
20000af0:	00000514 	andeq	r0, r0, r4, lsl r5
20000af4:	0000050c 	andeq	r0, r0, ip, lsl #10
20000af8:	00000504 	andeq	r0, r0, r4, lsl #10
20000afc:	000004fc 	strdeq	r0, [r0], -ip
20000b00:	000004f4 	strdeq	r0, [r0], -r4
20000b04:	20009188 	andcs	r9, r0, r8, lsl #3
20000b08:	20014734 	andcs	r4, r1, r4, lsr r7
20000b0c:	00000454 	andeq	r0, r0, r4, asr r4
20000b10:	20004f44 	andcs	r4, r0, r4, asr #30
20000b14:	2000918c 	andcs	r9, r0, ip, lsl #3
20000b18:	fffffc04 			; <UNDEFINED> instruction: 0xfffffc04
20000b1c:	20009190 	mulcs	r0, r0, r1
20000b20:	fffffbf0 			; <UNDEFINED> instruction: 0xfffffbf0
				else if(counter < delay_until_text + 1*long_text + 1*short_text)
20000b24:	4bea      	ldr	r3, [pc, #936]	; (20000ed0 <main+0xcd4>)
20000b26:	681a      	ldr	r2, [r3, #0]
20000b28:	4bea      	ldr	r3, [pc, #936]	; (20000ed4 <main+0xcd8>)
20000b2a:	681b      	ldr	r3, [r3, #0]
20000b2c:	18d2      	adds	r2, r2, r3
20000b2e:	4bea      	ldr	r3, [pc, #936]	; (20000ed8 <main+0xcdc>)
20000b30:	681b      	ldr	r3, [r3, #0]
20000b32:	18d2      	adds	r2, r2, r3
20000b34:	4be9      	ldr	r3, [pc, #932]	; (20000edc <main+0xce0>)
20000b36:	681b      	ldr	r3, [r3, #0]
20000b38:	429a      	cmp	r2, r3
20000b3a:	dd0c      	ble.n	20000b56 <main+0x95a>
					text2.display(&text2, 20);
20000b3c:	4be8      	ldr	r3, [pc, #928]	; (20000ee0 <main+0xce4>)
20000b3e:	22a3      	movs	r2, #163	; 0xa3
20000b40:	00d2      	lsls	r2, r2, #3
20000b42:	4694      	mov	ip, r2
20000b44:	44bc      	add	ip, r7
20000b46:	4463      	add	r3, ip
20000b48:	691b      	ldr	r3, [r3, #16]
20000b4a:	22f4      	movs	r2, #244	; 0xf4
20000b4c:	18ba      	adds	r2, r7, r2
20000b4e:	2114      	movs	r1, #20
20000b50:	0010      	movs	r0, r2
20000b52:	4798      	blx	r3
20000b54:	e142      	b.n	20000ddc <main+0xbe0>
				else if(counter < delay_until_text + 2*long_text + 1*short_text)
20000b56:	4bdf      	ldr	r3, [pc, #892]	; (20000ed4 <main+0xcd8>)
20000b58:	681b      	ldr	r3, [r3, #0]
20000b5a:	005a      	lsls	r2, r3, #1
20000b5c:	4bdc      	ldr	r3, [pc, #880]	; (20000ed0 <main+0xcd4>)
20000b5e:	681b      	ldr	r3, [r3, #0]
20000b60:	18d2      	adds	r2, r2, r3
20000b62:	4bdd      	ldr	r3, [pc, #884]	; (20000ed8 <main+0xcdc>)
20000b64:	681b      	ldr	r3, [r3, #0]
20000b66:	18d2      	adds	r2, r2, r3
20000b68:	4bdc      	ldr	r3, [pc, #880]	; (20000edc <main+0xce0>)
20000b6a:	681b      	ldr	r3, [r3, #0]
20000b6c:	429a      	cmp	r2, r3
20000b6e:	dd0c      	ble.n	20000b8a <main+0x98e>
					text3.display(&text3, 20);
20000b70:	4bdc      	ldr	r3, [pc, #880]	; (20000ee4 <main+0xce8>)
20000b72:	22a3      	movs	r2, #163	; 0xa3
20000b74:	00d2      	lsls	r2, r2, #3
20000b76:	4694      	mov	ip, r2
20000b78:	44bc      	add	ip, r7
20000b7a:	4463      	add	r3, ip
20000b7c:	691b      	ldr	r3, [r3, #16]
20000b7e:	22e0      	movs	r2, #224	; 0xe0
20000b80:	18ba      	adds	r2, r7, r2
20000b82:	2114      	movs	r1, #20
20000b84:	0010      	movs	r0, r2
20000b86:	4798      	blx	r3
20000b88:	e128      	b.n	20000ddc <main+0xbe0>
				else if(counter < delay_until_text + 2*long_text + 2*short_text)
20000b8a:	4bd2      	ldr	r3, [pc, #840]	; (20000ed4 <main+0xcd8>)
20000b8c:	681b      	ldr	r3, [r3, #0]
20000b8e:	005a      	lsls	r2, r3, #1
20000b90:	4bcf      	ldr	r3, [pc, #828]	; (20000ed0 <main+0xcd4>)
20000b92:	681b      	ldr	r3, [r3, #0]
20000b94:	18d2      	adds	r2, r2, r3
20000b96:	4bd0      	ldr	r3, [pc, #832]	; (20000ed8 <main+0xcdc>)
20000b98:	681b      	ldr	r3, [r3, #0]
20000b9a:	005b      	lsls	r3, r3, #1
20000b9c:	18d2      	adds	r2, r2, r3
20000b9e:	4bcf      	ldr	r3, [pc, #828]	; (20000edc <main+0xce0>)
20000ba0:	681b      	ldr	r3, [r3, #0]
20000ba2:	429a      	cmp	r2, r3
20000ba4:	dd0c      	ble.n	20000bc0 <main+0x9c4>
					text4.display(&text4, 20);
20000ba6:	4bd0      	ldr	r3, [pc, #832]	; (20000ee8 <main+0xcec>)
20000ba8:	22a3      	movs	r2, #163	; 0xa3
20000baa:	00d2      	lsls	r2, r2, #3
20000bac:	4694      	mov	ip, r2
20000bae:	44bc      	add	ip, r7
20000bb0:	4463      	add	r3, ip
20000bb2:	691b      	ldr	r3, [r3, #16]
20000bb4:	22cc      	movs	r2, #204	; 0xcc
20000bb6:	18ba      	adds	r2, r7, r2
20000bb8:	2114      	movs	r1, #20
20000bba:	0010      	movs	r0, r2
20000bbc:	4798      	blx	r3
20000bbe:	e10d      	b.n	20000ddc <main+0xbe0>
				else if(counter < delay_until_text + 3*long_text + 2*short_text)
20000bc0:	4bc4      	ldr	r3, [pc, #784]	; (20000ed4 <main+0xcd8>)
20000bc2:	681a      	ldr	r2, [r3, #0]
20000bc4:	0013      	movs	r3, r2
20000bc6:	005b      	lsls	r3, r3, #1
20000bc8:	189a      	adds	r2, r3, r2
20000bca:	4bc1      	ldr	r3, [pc, #772]	; (20000ed0 <main+0xcd4>)
20000bcc:	681b      	ldr	r3, [r3, #0]
20000bce:	18d2      	adds	r2, r2, r3
20000bd0:	4bc1      	ldr	r3, [pc, #772]	; (20000ed8 <main+0xcdc>)
20000bd2:	681b      	ldr	r3, [r3, #0]
20000bd4:	005b      	lsls	r3, r3, #1
20000bd6:	18d2      	adds	r2, r2, r3
20000bd8:	4bc0      	ldr	r3, [pc, #768]	; (20000edc <main+0xce0>)
20000bda:	681b      	ldr	r3, [r3, #0]
20000bdc:	429a      	cmp	r2, r3
20000bde:	dd0c      	ble.n	20000bfa <main+0x9fe>
					text5.display(&text5, 15);
20000be0:	4bc2      	ldr	r3, [pc, #776]	; (20000eec <main+0xcf0>)
20000be2:	22a3      	movs	r2, #163	; 0xa3
20000be4:	00d2      	lsls	r2, r2, #3
20000be6:	4694      	mov	ip, r2
20000be8:	44bc      	add	ip, r7
20000bea:	4463      	add	r3, ip
20000bec:	691b      	ldr	r3, [r3, #16]
20000bee:	22b8      	movs	r2, #184	; 0xb8
20000bf0:	18ba      	adds	r2, r7, r2
20000bf2:	210f      	movs	r1, #15
20000bf4:	0010      	movs	r0, r2
20000bf6:	4798      	blx	r3
20000bf8:	e0f0      	b.n	20000ddc <main+0xbe0>
				else if(counter < delay_until_text + 3*long_text + 3*short_text)
20000bfa:	4bb6      	ldr	r3, [pc, #728]	; (20000ed4 <main+0xcd8>)
20000bfc:	681a      	ldr	r2, [r3, #0]
20000bfe:	0013      	movs	r3, r2
20000c00:	005b      	lsls	r3, r3, #1
20000c02:	189a      	adds	r2, r3, r2
20000c04:	4bb2      	ldr	r3, [pc, #712]	; (20000ed0 <main+0xcd4>)
20000c06:	681b      	ldr	r3, [r3, #0]
20000c08:	18d1      	adds	r1, r2, r3
20000c0a:	4bb3      	ldr	r3, [pc, #716]	; (20000ed8 <main+0xcdc>)
20000c0c:	681a      	ldr	r2, [r3, #0]
20000c0e:	0013      	movs	r3, r2
20000c10:	005b      	lsls	r3, r3, #1
20000c12:	189b      	adds	r3, r3, r2
20000c14:	18ca      	adds	r2, r1, r3
20000c16:	4bb1      	ldr	r3, [pc, #708]	; (20000edc <main+0xce0>)
20000c18:	681b      	ldr	r3, [r3, #0]
20000c1a:	429a      	cmp	r2, r3
20000c1c:	dd0c      	ble.n	20000c38 <main+0xa3c>
					text6.display(&text6, 20);
20000c1e:	4bb4      	ldr	r3, [pc, #720]	; (20000ef0 <main+0xcf4>)
20000c20:	22a3      	movs	r2, #163	; 0xa3
20000c22:	00d2      	lsls	r2, r2, #3
20000c24:	4694      	mov	ip, r2
20000c26:	44bc      	add	ip, r7
20000c28:	4463      	add	r3, ip
20000c2a:	691b      	ldr	r3, [r3, #16]
20000c2c:	22a4      	movs	r2, #164	; 0xa4
20000c2e:	18ba      	adds	r2, r7, r2
20000c30:	2114      	movs	r1, #20
20000c32:	0010      	movs	r0, r2
20000c34:	4798      	blx	r3
20000c36:	e0d1      	b.n	20000ddc <main+0xbe0>
				else if(counter < delay_until_text + 4*long_text + 3*short_text + 3)
20000c38:	4ba6      	ldr	r3, [pc, #664]	; (20000ed4 <main+0xcd8>)
20000c3a:	681b      	ldr	r3, [r3, #0]
20000c3c:	009a      	lsls	r2, r3, #2
20000c3e:	4ba4      	ldr	r3, [pc, #656]	; (20000ed0 <main+0xcd4>)
20000c40:	681b      	ldr	r3, [r3, #0]
20000c42:	18d1      	adds	r1, r2, r3
20000c44:	4ba4      	ldr	r3, [pc, #656]	; (20000ed8 <main+0xcdc>)
20000c46:	681a      	ldr	r2, [r3, #0]
20000c48:	0013      	movs	r3, r2
20000c4a:	005b      	lsls	r3, r3, #1
20000c4c:	189b      	adds	r3, r3, r2
20000c4e:	18cb      	adds	r3, r1, r3
20000c50:	1cda      	adds	r2, r3, #3
20000c52:	4ba2      	ldr	r3, [pc, #648]	; (20000edc <main+0xce0>)
20000c54:	681b      	ldr	r3, [r3, #0]
20000c56:	429a      	cmp	r2, r3
20000c58:	dd0c      	ble.n	20000c74 <main+0xa78>
					text7.display(&text7, 20);
20000c5a:	4ba6      	ldr	r3, [pc, #664]	; (20000ef4 <main+0xcf8>)
20000c5c:	22a3      	movs	r2, #163	; 0xa3
20000c5e:	00d2      	lsls	r2, r2, #3
20000c60:	4694      	mov	ip, r2
20000c62:	44bc      	add	ip, r7
20000c64:	4463      	add	r3, ip
20000c66:	691b      	ldr	r3, [r3, #16]
20000c68:	2290      	movs	r2, #144	; 0x90
20000c6a:	18ba      	adds	r2, r7, r2
20000c6c:	2114      	movs	r1, #20
20000c6e:	0010      	movs	r0, r2
20000c70:	4798      	blx	r3
20000c72:	e0b3      	b.n	20000ddc <main+0xbe0>
				else if(counter < delay_until_text + 5*long_text + 3*short_text + 2)
20000c74:	4b97      	ldr	r3, [pc, #604]	; (20000ed4 <main+0xcd8>)
20000c76:	681a      	ldr	r2, [r3, #0]
20000c78:	0013      	movs	r3, r2
20000c7a:	009b      	lsls	r3, r3, #2
20000c7c:	189a      	adds	r2, r3, r2
20000c7e:	4b94      	ldr	r3, [pc, #592]	; (20000ed0 <main+0xcd4>)
20000c80:	681b      	ldr	r3, [r3, #0]
20000c82:	18d1      	adds	r1, r2, r3
20000c84:	4b94      	ldr	r3, [pc, #592]	; (20000ed8 <main+0xcdc>)
20000c86:	681a      	ldr	r2, [r3, #0]
20000c88:	0013      	movs	r3, r2
20000c8a:	005b      	lsls	r3, r3, #1
20000c8c:	189b      	adds	r3, r3, r2
20000c8e:	18cb      	adds	r3, r1, r3
20000c90:	1c9a      	adds	r2, r3, #2
20000c92:	4b92      	ldr	r3, [pc, #584]	; (20000edc <main+0xce0>)
20000c94:	681b      	ldr	r3, [r3, #0]
20000c96:	429a      	cmp	r2, r3
20000c98:	dd0c      	ble.n	20000cb4 <main+0xab8>
					text8.display(&text8, 20);
20000c9a:	4b97      	ldr	r3, [pc, #604]	; (20000ef8 <main+0xcfc>)
20000c9c:	22a3      	movs	r2, #163	; 0xa3
20000c9e:	00d2      	lsls	r2, r2, #3
20000ca0:	4694      	mov	ip, r2
20000ca2:	44bc      	add	ip, r7
20000ca4:	4463      	add	r3, ip
20000ca6:	691b      	ldr	r3, [r3, #16]
20000ca8:	227c      	movs	r2, #124	; 0x7c
20000caa:	18ba      	adds	r2, r7, r2
20000cac:	2114      	movs	r1, #20
20000cae:	0010      	movs	r0, r2
20000cb0:	4798      	blx	r3
20000cb2:	e093      	b.n	20000ddc <main+0xbe0>
				else if(counter < delay_until_text + 5*long_text + 4*short_text + 2)
20000cb4:	4b87      	ldr	r3, [pc, #540]	; (20000ed4 <main+0xcd8>)
20000cb6:	681a      	ldr	r2, [r3, #0]
20000cb8:	0013      	movs	r3, r2
20000cba:	009b      	lsls	r3, r3, #2
20000cbc:	189a      	adds	r2, r3, r2
20000cbe:	4b84      	ldr	r3, [pc, #528]	; (20000ed0 <main+0xcd4>)
20000cc0:	681b      	ldr	r3, [r3, #0]
20000cc2:	18d2      	adds	r2, r2, r3
20000cc4:	4b84      	ldr	r3, [pc, #528]	; (20000ed8 <main+0xcdc>)
20000cc6:	681b      	ldr	r3, [r3, #0]
20000cc8:	009b      	lsls	r3, r3, #2
20000cca:	18d3      	adds	r3, r2, r3
20000ccc:	1c9a      	adds	r2, r3, #2
20000cce:	4b83      	ldr	r3, [pc, #524]	; (20000edc <main+0xce0>)
20000cd0:	681b      	ldr	r3, [r3, #0]
20000cd2:	429a      	cmp	r2, r3
20000cd4:	dd0c      	ble.n	20000cf0 <main+0xaf4>
					text9.display(&text9, 20);
20000cd6:	4b89      	ldr	r3, [pc, #548]	; (20000efc <main+0xd00>)
20000cd8:	22a3      	movs	r2, #163	; 0xa3
20000cda:	00d2      	lsls	r2, r2, #3
20000cdc:	4694      	mov	ip, r2
20000cde:	44bc      	add	ip, r7
20000ce0:	4463      	add	r3, ip
20000ce2:	691b      	ldr	r3, [r3, #16]
20000ce4:	2268      	movs	r2, #104	; 0x68
20000ce6:	18ba      	adds	r2, r7, r2
20000ce8:	2114      	movs	r1, #20
20000cea:	0010      	movs	r0, r2
20000cec:	4798      	blx	r3
20000cee:	e075      	b.n	20000ddc <main+0xbe0>
				else if(counter < delay_until_text + 6*long_text + 4*short_text - 2 + 2)
20000cf0:	4b78      	ldr	r3, [pc, #480]	; (20000ed4 <main+0xcd8>)
20000cf2:	681a      	ldr	r2, [r3, #0]
20000cf4:	0013      	movs	r3, r2
20000cf6:	005b      	lsls	r3, r3, #1
20000cf8:	189b      	adds	r3, r3, r2
20000cfa:	005b      	lsls	r3, r3, #1
20000cfc:	001a      	movs	r2, r3
20000cfe:	4b74      	ldr	r3, [pc, #464]	; (20000ed0 <main+0xcd4>)
20000d00:	681b      	ldr	r3, [r3, #0]
20000d02:	18d2      	adds	r2, r2, r3
20000d04:	4b74      	ldr	r3, [pc, #464]	; (20000ed8 <main+0xcdc>)
20000d06:	681b      	ldr	r3, [r3, #0]
20000d08:	009b      	lsls	r3, r3, #2
20000d0a:	18d2      	adds	r2, r2, r3
20000d0c:	4b73      	ldr	r3, [pc, #460]	; (20000edc <main+0xce0>)
20000d0e:	681b      	ldr	r3, [r3, #0]
20000d10:	429a      	cmp	r2, r3
20000d12:	dd0c      	ble.n	20000d2e <main+0xb32>
					text10.display(&text10, 15);
20000d14:	4b7a      	ldr	r3, [pc, #488]	; (20000f00 <main+0xd04>)
20000d16:	22a3      	movs	r2, #163	; 0xa3
20000d18:	00d2      	lsls	r2, r2, #3
20000d1a:	4694      	mov	ip, r2
20000d1c:	44bc      	add	ip, r7
20000d1e:	4463      	add	r3, ip
20000d20:	691b      	ldr	r3, [r3, #16]
20000d22:	2254      	movs	r2, #84	; 0x54
20000d24:	18ba      	adds	r2, r7, r2
20000d26:	210f      	movs	r1, #15
20000d28:	0010      	movs	r0, r2
20000d2a:	4798      	blx	r3
20000d2c:	e056      	b.n	20000ddc <main+0xbe0>
				else if(counter < delay_until_text + 6*long_text + 5*short_text + 3 + 2)
20000d2e:	4b69      	ldr	r3, [pc, #420]	; (20000ed4 <main+0xcd8>)
20000d30:	681a      	ldr	r2, [r3, #0]
20000d32:	0013      	movs	r3, r2
20000d34:	005b      	lsls	r3, r3, #1
20000d36:	189b      	adds	r3, r3, r2
20000d38:	005b      	lsls	r3, r3, #1
20000d3a:	001a      	movs	r2, r3
20000d3c:	4b64      	ldr	r3, [pc, #400]	; (20000ed0 <main+0xcd4>)
20000d3e:	681b      	ldr	r3, [r3, #0]
20000d40:	18d1      	adds	r1, r2, r3
20000d42:	4b65      	ldr	r3, [pc, #404]	; (20000ed8 <main+0xcdc>)
20000d44:	681a      	ldr	r2, [r3, #0]
20000d46:	0013      	movs	r3, r2
20000d48:	009b      	lsls	r3, r3, #2
20000d4a:	189b      	adds	r3, r3, r2
20000d4c:	18cb      	adds	r3, r1, r3
20000d4e:	1d5a      	adds	r2, r3, #5
20000d50:	4b62      	ldr	r3, [pc, #392]	; (20000edc <main+0xce0>)
20000d52:	681b      	ldr	r3, [r3, #0]
20000d54:	429a      	cmp	r2, r3
20000d56:	dd0c      	ble.n	20000d72 <main+0xb76>
					text12.display(&text12, 15);
20000d58:	4b6a      	ldr	r3, [pc, #424]	; (20000f04 <main+0xd08>)
20000d5a:	22a3      	movs	r2, #163	; 0xa3
20000d5c:	00d2      	lsls	r2, r2, #3
20000d5e:	4694      	mov	ip, r2
20000d60:	44bc      	add	ip, r7
20000d62:	4463      	add	r3, ip
20000d64:	691b      	ldr	r3, [r3, #16]
20000d66:	222c      	movs	r2, #44	; 0x2c
20000d68:	18ba      	adds	r2, r7, r2
20000d6a:	210f      	movs	r1, #15
20000d6c:	0010      	movs	r0, r2
20000d6e:	4798      	blx	r3
20000d70:	e034      	b.n	20000ddc <main+0xbe0>
				else if(counter < delay_until_text + 7*long_text + 5*short_text + 6 + 2) {
20000d72:	4b58      	ldr	r3, [pc, #352]	; (20000ed4 <main+0xcd8>)
20000d74:	681a      	ldr	r2, [r3, #0]
20000d76:	0013      	movs	r3, r2
20000d78:	00db      	lsls	r3, r3, #3
20000d7a:	1a9a      	subs	r2, r3, r2
20000d7c:	4b54      	ldr	r3, [pc, #336]	; (20000ed0 <main+0xcd4>)
20000d7e:	681b      	ldr	r3, [r3, #0]
20000d80:	18d1      	adds	r1, r2, r3
20000d82:	4b55      	ldr	r3, [pc, #340]	; (20000ed8 <main+0xcdc>)
20000d84:	681a      	ldr	r2, [r3, #0]
20000d86:	0013      	movs	r3, r2
20000d88:	009b      	lsls	r3, r3, #2
20000d8a:	189b      	adds	r3, r3, r2
20000d8c:	18cb      	adds	r3, r1, r3
20000d8e:	3308      	adds	r3, #8
20000d90:	001a      	movs	r2, r3
20000d92:	4b52      	ldr	r3, [pc, #328]	; (20000edc <main+0xce0>)
20000d94:	681b      	ldr	r3, [r3, #0]
20000d96:	429a      	cmp	r2, r3
20000d98:	dd0c      	ble.n	20000db4 <main+0xbb8>
					text11.display(&text11, 20);
20000d9a:	4b5b      	ldr	r3, [pc, #364]	; (20000f08 <main+0xd0c>)
20000d9c:	22a3      	movs	r2, #163	; 0xa3
20000d9e:	00d2      	lsls	r2, r2, #3
20000da0:	4694      	mov	ip, r2
20000da2:	44bc      	add	ip, r7
20000da4:	4463      	add	r3, ip
20000da6:	691b      	ldr	r3, [r3, #16]
20000da8:	2240      	movs	r2, #64	; 0x40
20000daa:	18ba      	adds	r2, r7, r2
20000dac:	2114      	movs	r1, #20
20000dae:	0010      	movs	r0, r2
20000db0:	4798      	blx	r3
20000db2:	e013      	b.n	20000ddc <main+0xbe0>
				} else {
					if (read_DIL() == 0) {
20000db4:	f003 f91a 	bl	20003fec <read_DIL>
20000db8:	1e03      	subs	r3, r0, #0
20000dba:	d10f      	bne.n	20000ddc <main+0xbe0>
						current_screen = GAME_SCREEN;
20000dbc:	4b53      	ldr	r3, [pc, #332]	; (20000f0c <main+0xd10>)
20000dbe:	2202      	movs	r2, #2
20000dc0:	601a      	str	r2, [r3, #0]
						random_seed = counter;
20000dc2:	4b46      	ldr	r3, [pc, #280]	; (20000edc <main+0xce0>)
20000dc4:	681a      	ldr	r2, [r3, #0]
20000dc6:	4b52      	ldr	r3, [pc, #328]	; (20000f10 <main+0xd14>)
20000dc8:	601a      	str	r2, [r3, #0]
						counter = 0;
20000dca:	4b44      	ldr	r3, [pc, #272]	; (20000edc <main+0xce0>)
20000dcc:	2200      	movs	r2, #0
20000dce:	601a      	str	r2, [r3, #0]
						ascii_write("Daffo: I'm feeling ","a bit spooked out...");
20000dd0:	4a50      	ldr	r2, [pc, #320]	; (20000f14 <main+0xd18>)
20000dd2:	4b51      	ldr	r3, [pc, #324]	; (20000f18 <main+0xd1c>)
20000dd4:	0011      	movs	r1, r2
20000dd6:	0018      	movs	r0, r3
20000dd8:	f003 fb0a 	bl	200043f0 <ascii_write>
					}
				}
				
				if(read_DIL() == SKIP_VALUE) {
20000ddc:	f003 f906 	bl	20003fec <read_DIL>
20000de0:	0003      	movs	r3, r0
20000de2:	2b81      	cmp	r3, #129	; 0x81
20000de4:	d10f      	bne.n	20000e06 <main+0xc0a>
					current_screen = GAME_SCREEN;
20000de6:	4b49      	ldr	r3, [pc, #292]	; (20000f0c <main+0xd10>)
20000de8:	2202      	movs	r2, #2
20000dea:	601a      	str	r2, [r3, #0]
					random_seed = counter;
20000dec:	4b3b      	ldr	r3, [pc, #236]	; (20000edc <main+0xce0>)
20000dee:	681a      	ldr	r2, [r3, #0]
20000df0:	4b47      	ldr	r3, [pc, #284]	; (20000f10 <main+0xd14>)
20000df2:	601a      	str	r2, [r3, #0]
					counter = 0;
20000df4:	4b39      	ldr	r3, [pc, #228]	; (20000edc <main+0xce0>)
20000df6:	2200      	movs	r2, #0
20000df8:	601a      	str	r2, [r3, #0]
					ascii_write("Daffo: I'm feeling ","a bit spooked out...");
20000dfa:	4a46      	ldr	r2, [pc, #280]	; (20000f14 <main+0xd18>)
20000dfc:	4b46      	ldr	r3, [pc, #280]	; (20000f18 <main+0xd1c>)
20000dfe:	0011      	movs	r1, r2
20000e00:	0018      	movs	r0, r3
20000e02:	f003 faf5 	bl	200043f0 <ascii_write>
				}
				
				
				fire2.update(&fire2);
20000e06:	4b45      	ldr	r3, [pc, #276]	; (20000f1c <main+0xd20>)
20000e08:	22a3      	movs	r2, #163	; 0xa3
20000e0a:	00d2      	lsls	r2, r2, #3
20000e0c:	4694      	mov	ip, r2
20000e0e:	44bc      	add	ip, r7
20000e10:	4463      	add	r3, ip
20000e12:	68db      	ldr	r3, [r3, #12]
20000e14:	229d      	movs	r2, #157	; 0x9d
20000e16:	0092      	lsls	r2, r2, #2
20000e18:	18ba      	adds	r2, r7, r2
20000e1a:	0010      	movs	r0, r2
20000e1c:	4798      	blx	r3
				fire3.update(&fire3);
20000e1e:	4b40      	ldr	r3, [pc, #256]	; (20000f20 <main+0xd24>)
20000e20:	22a3      	movs	r2, #163	; 0xa3
20000e22:	00d2      	lsls	r2, r2, #3
20000e24:	4694      	mov	ip, r2
20000e26:	44bc      	add	ip, r7
20000e28:	4463      	add	r3, ip
20000e2a:	68db      	ldr	r3, [r3, #12]
20000e2c:	2294      	movs	r2, #148	; 0x94
20000e2e:	0092      	lsls	r2, r2, #2
20000e30:	18ba      	adds	r2, r7, r2
20000e32:	0010      	movs	r0, r2
20000e34:	4798      	blx	r3
				fire1.update(&fire1);
20000e36:	4b3b      	ldr	r3, [pc, #236]	; (20000f24 <main+0xd28>)
20000e38:	22a3      	movs	r2, #163	; 0xa3
20000e3a:	00d2      	lsls	r2, r2, #3
20000e3c:	4694      	mov	ip, r2
20000e3e:	44bc      	add	ip, r7
20000e40:	4463      	add	r3, ip
20000e42:	68db      	ldr	r3, [r3, #12]
20000e44:	2282      	movs	r2, #130	; 0x82
20000e46:	0092      	lsls	r2, r2, #2
20000e48:	18ba      	adds	r2, r7, r2
20000e4a:	0010      	movs	r0, r2
20000e4c:	4798      	blx	r3
				fire4.update(&fire4);
20000e4e:	4b36      	ldr	r3, [pc, #216]	; (20000f28 <main+0xd2c>)
20000e50:	22a3      	movs	r2, #163	; 0xa3
20000e52:	00d2      	lsls	r2, r2, #3
20000e54:	4694      	mov	ip, r2
20000e56:	44bc      	add	ip, r7
20000e58:	4463      	add	r3, ip
20000e5a:	68db      	ldr	r3, [r3, #12]
20000e5c:	228b      	movs	r2, #139	; 0x8b
20000e5e:	0092      	lsls	r2, r2, #2
20000e60:	18ba      	adds	r2, r7, r2
20000e62:	0010      	movs	r0, r2
20000e64:	4798      	blx	r3
				bird.update(&bird);
20000e66:	4b31      	ldr	r3, [pc, #196]	; (20000f2c <main+0xd30>)
20000e68:	22a3      	movs	r2, #163	; 0xa3
20000e6a:	00d2      	lsls	r2, r2, #3
20000e6c:	4694      	mov	ip, r2
20000e6e:	44bc      	add	ip, r7
20000e70:	4463      	add	r3, ip
20000e72:	68db      	ldr	r3, [r3, #12]
20000e74:	22c1      	movs	r2, #193	; 0xc1
20000e76:	0092      	lsls	r2, r2, #2
20000e78:	18ba      	adds	r2, r7, r2
20000e7a:	0010      	movs	r0, r2
20000e7c:	4798      	blx	r3
				bird.xPos -= 2;
20000e7e:	4b2b      	ldr	r3, [pc, #172]	; (20000f2c <main+0xd30>)
20000e80:	22a3      	movs	r2, #163	; 0xa3
20000e82:	00d2      	lsls	r2, r2, #3
20000e84:	4694      	mov	ip, r2
20000e86:	44bc      	add	ip, r7
20000e88:	4463      	add	r3, ip
20000e8a:	685b      	ldr	r3, [r3, #4]
20000e8c:	1e9a      	subs	r2, r3, #2
20000e8e:	4b27      	ldr	r3, [pc, #156]	; (20000f2c <main+0xd30>)
20000e90:	21a3      	movs	r1, #163	; 0xa3
20000e92:	00c9      	lsls	r1, r1, #3
20000e94:	468c      	mov	ip, r1
20000e96:	44bc      	add	ip, r7
20000e98:	4463      	add	r3, ip
20000e9a:	605a      	str	r2, [r3, #4]
				if (counter % 2 == 0) {
20000e9c:	4b0f      	ldr	r3, [pc, #60]	; (20000edc <main+0xce0>)
20000e9e:	681b      	ldr	r3, [r3, #0]
20000ea0:	001a      	movs	r2, r3
20000ea2:	2301      	movs	r3, #1
20000ea4:	4013      	ands	r3, r2
20000ea6:	d001      	beq.n	20000eac <main+0xcb0>
20000ea8:	f000 fdcd 	bl	20001a46 <main+0x184a>
					bird.yPos--;
20000eac:	4b1f      	ldr	r3, [pc, #124]	; (20000f2c <main+0xd30>)
20000eae:	22a3      	movs	r2, #163	; 0xa3
20000eb0:	00d2      	lsls	r2, r2, #3
20000eb2:	4694      	mov	ip, r2
20000eb4:	44bc      	add	ip, r7
20000eb6:	4463      	add	r3, ip
20000eb8:	689b      	ldr	r3, [r3, #8]
20000eba:	1e5a      	subs	r2, r3, #1
20000ebc:	4b1b      	ldr	r3, [pc, #108]	; (20000f2c <main+0xd30>)
20000ebe:	21a3      	movs	r1, #163	; 0xa3
20000ec0:	00c9      	lsls	r1, r1, #3
20000ec2:	468c      	mov	ip, r1
20000ec4:	44bc      	add	ip, r7
20000ec6:	4463      	add	r3, ip
20000ec8:	609a      	str	r2, [r3, #8]
				}
				
				break;
20000eca:	f000 fdbc 	bl	20001a46 <main+0x184a>
20000ece:	46c0      	nop			; (mov r8, r8)
20000ed0:	2000918c 	andcs	r9, r0, ip, lsl #3
20000ed4:	20009190 	mulcs	r0, r0, r1
20000ed8:	20009194 	mulcs	r0, r4, r1
20000edc:	20004f44 	andcs	r4, r0, r4, asr #30
20000ee0:	fffffbdc 			; <UNDEFINED> instruction: 0xfffffbdc
20000ee4:	fffffbc8 			; <UNDEFINED> instruction: 0xfffffbc8
20000ee8:	fffffbb4 			; <UNDEFINED> instruction: 0xfffffbb4
20000eec:	fffffba0 			; <UNDEFINED> instruction: 0xfffffba0
20000ef0:	fffffb8c 			; <UNDEFINED> instruction: 0xfffffb8c
20000ef4:	fffffb78 			; <UNDEFINED> instruction: 0xfffffb78
20000ef8:	fffffb64 			; <UNDEFINED> instruction: 0xfffffb64
20000efc:	fffffb50 			; <UNDEFINED> instruction: 0xfffffb50
20000f00:	fffffb3c 			; <UNDEFINED> instruction: 0xfffffb3c
20000f04:	fffffb14 			; <UNDEFINED> instruction: 0xfffffb14
20000f08:	fffffb28 			; <UNDEFINED> instruction: 0xfffffb28
20000f0c:	20009188 	andcs	r9, r0, r8, lsl #3
20000f10:	20005048 	andcs	r5, r0, r8, asr #32
20000f14:	2001463c 	andcs	r4, r1, ip, lsr r6
20000f18:	20014654 	andcs	r4, r1, r4, asr r6
20000f1c:	fffffd5c 			; <UNDEFINED> instruction: 0xfffffd5c
20000f20:	fffffd38 			; <UNDEFINED> instruction: 0xfffffd38
20000f24:	fffffcf0 			; <UNDEFINED> instruction: 0xfffffcf0
20000f28:	fffffd14 			; <UNDEFINED> instruction: 0xfffffd14
20000f2c:	fffffdec 			; <UNDEFINED> instruction: 0xfffffdec
				
			case GAME_SCREEN: //inside
				
				counter++;
20000f30:	4bb4      	ldr	r3, [pc, #720]	; (20001204 <main+0x1008>)
20000f32:	681b      	ldr	r3, [r3, #0]
20000f34:	1c5a      	adds	r2, r3, #1
20000f36:	4bb3      	ldr	r3, [pc, #716]	; (20001204 <main+0x1008>)
20000f38:	601a      	str	r2, [r3, #0]
				if(read_DIL_single( LIGHT_TRIGGER )) {
20000f3a:	2006      	movs	r0, #6
20000f3c:	f003 f866 	bl	2000400c <read_DIL_single>
20000f40:	1e03      	subs	r3, r0, #0
20000f42:	d00c      	beq.n	20000f5e <main+0xd62>
					draw_game_object( &indoors2 );
20000f44:	23dc      	movs	r3, #220	; 0xdc
20000f46:	009b      	lsls	r3, r3, #2
20000f48:	18fb      	adds	r3, r7, r3
20000f4a:	0018      	movs	r0, r3
20000f4c:	f002 ffa4 	bl	20003e98 <draw_game_object>
					ascii_write("*click*","");
20000f50:	4aad      	ldr	r2, [pc, #692]	; (20001208 <main+0x100c>)
20000f52:	4bae      	ldr	r3, [pc, #696]	; (2000120c <main+0x1010>)
20000f54:	0011      	movs	r1, r2
20000f56:	0018      	movs	r0, r3
20000f58:	f003 fa4a 	bl	200043f0 <ascii_write>
20000f5c:	e00b      	b.n	20000f76 <main+0xd7a>
				} else {
					draw_game_object( &indoors );
20000f5e:	23e5      	movs	r3, #229	; 0xe5
20000f60:	009b      	lsls	r3, r3, #2
20000f62:	18fb      	adds	r3, r7, r3
20000f64:	0018      	movs	r0, r3
20000f66:	f002 ff97 	bl	20003e98 <draw_game_object>
					draw_game_object( &trophy );
20000f6a:	23d3      	movs	r3, #211	; 0xd3
20000f6c:	009b      	lsls	r3, r3, #2
20000f6e:	18fb      	adds	r3, r7, r3
20000f70:	0018      	movs	r0, r3
20000f72:	f002 ff91 	bl	20003e98 <draw_game_object>
				}
				
				if(!no_DIP)
20000f76:	23a0      	movs	r3, #160	; 0xa0
20000f78:	00db      	lsls	r3, r3, #3
20000f7a:	18fb      	adds	r3, r7, r3
20000f7c:	681b      	ldr	r3, [r3, #0]
20000f7e:	2b00      	cmp	r3, #0
20000f80:	d105      	bne.n	20000f8e <main+0xd92>
					draw_game_object( &DIP );
20000f82:	23af      	movs	r3, #175	; 0xaf
20000f84:	009b      	lsls	r3, r3, #2
20000f86:	18fb      	adds	r3, r7, r3
20000f88:	0018      	movs	r0, r3
20000f8a:	f002 ff85 	bl	20003e98 <draw_game_object>
				draw_game_object( &player );
20000f8e:	23a6      	movs	r3, #166	; 0xa6
20000f90:	009b      	lsls	r3, r3, #2
20000f92:	18fb      	adds	r3, r7, r3
20000f94:	0018      	movs	r0, r3
20000f96:	f002 ff7f 	bl	20003e98 <draw_game_object>
				static int i;
				for(i = 0; i < 3; i++) {
20000f9a:	4b9d      	ldr	r3, [pc, #628]	; (20001210 <main+0x1014>)
20000f9c:	2200      	movs	r2, #0
20000f9e:	601a      	str	r2, [r3, #0]
20000fa0:	e02b      	b.n	20000ffa <main+0xdfe>
					draw_game_object( &fires[i] );
20000fa2:	4b9b      	ldr	r3, [pc, #620]	; (20001210 <main+0x1014>)
20000fa4:	681a      	ldr	r2, [r3, #0]
20000fa6:	2398      	movs	r3, #152	; 0x98
20000fa8:	005b      	lsls	r3, r3, #1
20000faa:	18f9      	adds	r1, r7, r3
20000fac:	0013      	movs	r3, r2
20000fae:	00db      	lsls	r3, r3, #3
20000fb0:	189b      	adds	r3, r3, r2
20000fb2:	009b      	lsls	r3, r3, #2
20000fb4:	18cb      	adds	r3, r1, r3
20000fb6:	0018      	movs	r0, r3
20000fb8:	f002 ff6e 	bl	20003e98 <draw_game_object>
					fires[i].update( &fires[i] );
20000fbc:	4b94      	ldr	r3, [pc, #592]	; (20001210 <main+0x1014>)
20000fbe:	681a      	ldr	r2, [r3, #0]
20000fc0:	4b94      	ldr	r3, [pc, #592]	; (20001214 <main+0x1018>)
20000fc2:	21a3      	movs	r1, #163	; 0xa3
20000fc4:	00c9      	lsls	r1, r1, #3
20000fc6:	1879      	adds	r1, r7, r1
20000fc8:	18c9      	adds	r1, r1, r3
20000fca:	0013      	movs	r3, r2
20000fcc:	00db      	lsls	r3, r3, #3
20000fce:	189b      	adds	r3, r3, r2
20000fd0:	009b      	lsls	r3, r3, #2
20000fd2:	18cb      	adds	r3, r1, r3
20000fd4:	330c      	adds	r3, #12
20000fd6:	6819      	ldr	r1, [r3, #0]
20000fd8:	4b8d      	ldr	r3, [pc, #564]	; (20001210 <main+0x1014>)
20000fda:	681a      	ldr	r2, [r3, #0]
20000fdc:	2398      	movs	r3, #152	; 0x98
20000fde:	005b      	lsls	r3, r3, #1
20000fe0:	18f8      	adds	r0, r7, r3
20000fe2:	0013      	movs	r3, r2
20000fe4:	00db      	lsls	r3, r3, #3
20000fe6:	189b      	adds	r3, r3, r2
20000fe8:	009b      	lsls	r3, r3, #2
20000fea:	18c3      	adds	r3, r0, r3
20000fec:	0018      	movs	r0, r3
20000fee:	4788      	blx	r1
				for(i = 0; i < 3; i++) {
20000ff0:	4b87      	ldr	r3, [pc, #540]	; (20001210 <main+0x1014>)
20000ff2:	681b      	ldr	r3, [r3, #0]
20000ff4:	1c5a      	adds	r2, r3, #1
20000ff6:	4b86      	ldr	r3, [pc, #536]	; (20001210 <main+0x1014>)
20000ff8:	601a      	str	r2, [r3, #0]
20000ffa:	4b85      	ldr	r3, [pc, #532]	; (20001210 <main+0x1014>)
20000ffc:	681b      	ldr	r3, [r3, #0]
20000ffe:	2b02      	cmp	r3, #2
20001000:	ddcf      	ble.n	20000fa2 <main+0xda6>
				}
				draw_game_object( &hair );
20001002:	23ca      	movs	r3, #202	; 0xca
20001004:	009b      	lsls	r3, r3, #2
20001006:	18fb      	adds	r3, r7, r3
20001008:	0018      	movs	r0, r3
2000100a:	f002 ff45 	bl	20003e98 <draw_game_object>
				if(exploding) {
2000100e:	4b82      	ldr	r3, [pc, #520]	; (20001218 <main+0x101c>)
20001010:	18fb      	adds	r3, r7, r3
20001012:	681b      	ldr	r3, [r3, #0]
20001014:	2b00      	cmp	r3, #0
20001016:	d057      	beq.n	200010c8 <main+0xecc>
					if (first) {
20001018:	239f      	movs	r3, #159	; 0x9f
2000101a:	00db      	lsls	r3, r3, #3
2000101c:	18fb      	adds	r3, r7, r3
2000101e:	681b      	ldr	r3, [r3, #0]
20001020:	2b00      	cmp	r3, #0
20001022:	d036      	beq.n	20001092 <main+0xe96>
						boom.xPos = player.xPos + 9 - 53;
20001024:	4b7d      	ldr	r3, [pc, #500]	; (2000121c <main+0x1020>)
20001026:	22a3      	movs	r2, #163	; 0xa3
20001028:	00d2      	lsls	r2, r2, #3
2000102a:	4694      	mov	ip, r2
2000102c:	44bc      	add	ip, r7
2000102e:	4463      	add	r3, ip
20001030:	685b      	ldr	r3, [r3, #4]
20001032:	3b2c      	subs	r3, #44	; 0x2c
20001034:	001a      	movs	r2, r3
20001036:	4b7a      	ldr	r3, [pc, #488]	; (20001220 <main+0x1024>)
20001038:	21a3      	movs	r1, #163	; 0xa3
2000103a:	00c9      	lsls	r1, r1, #3
2000103c:	468c      	mov	ip, r1
2000103e:	44bc      	add	ip, r7
20001040:	4463      	add	r3, ip
20001042:	605a      	str	r2, [r3, #4]
						boom.yPos = player.yPos + 9 - 27;
20001044:	4b75      	ldr	r3, [pc, #468]	; (2000121c <main+0x1020>)
20001046:	22a3      	movs	r2, #163	; 0xa3
20001048:	00d2      	lsls	r2, r2, #3
2000104a:	4694      	mov	ip, r2
2000104c:	44bc      	add	ip, r7
2000104e:	4463      	add	r3, ip
20001050:	689b      	ldr	r3, [r3, #8]
20001052:	3b12      	subs	r3, #18
20001054:	001a      	movs	r2, r3
20001056:	4b72      	ldr	r3, [pc, #456]	; (20001220 <main+0x1024>)
20001058:	21a3      	movs	r1, #163	; 0xa3
2000105a:	00c9      	lsls	r1, r1, #3
2000105c:	468c      	mov	ip, r1
2000105e:	44bc      	add	ip, r7
20001060:	4463      	add	r3, ip
20001062:	609a      	str	r2, [r3, #8]
						player.xPos = -100;
20001064:	4b6d      	ldr	r3, [pc, #436]	; (2000121c <main+0x1020>)
20001066:	22a3      	movs	r2, #163	; 0xa3
20001068:	00d2      	lsls	r2, r2, #3
2000106a:	4694      	mov	ip, r2
2000106c:	44bc      	add	ip, r7
2000106e:	4463      	add	r3, ip
20001070:	2264      	movs	r2, #100	; 0x64
20001072:	4252      	negs	r2, r2
20001074:	605a      	str	r2, [r3, #4]
						player.yPos = -100;
20001076:	4b69      	ldr	r3, [pc, #420]	; (2000121c <main+0x1020>)
20001078:	22a3      	movs	r2, #163	; 0xa3
2000107a:	00d2      	lsls	r2, r2, #3
2000107c:	4694      	mov	ip, r2
2000107e:	44bc      	add	ip, r7
20001080:	4463      	add	r3, ip
20001082:	2264      	movs	r2, #100	; 0x64
20001084:	4252      	negs	r2, r2
20001086:	609a      	str	r2, [r3, #8]
						first = 0;
20001088:	2300      	movs	r3, #0
2000108a:	229f      	movs	r2, #159	; 0x9f
2000108c:	00d2      	lsls	r2, r2, #3
2000108e:	18ba      	adds	r2, r7, r2
20001090:	6013      	str	r3, [r2, #0]
					}					
					draw_game_object( &boom );
20001092:	23b8      	movs	r3, #184	; 0xb8
20001094:	009b      	lsls	r3, r3, #2
20001096:	18fb      	adds	r3, r7, r3
20001098:	0018      	movs	r0, r3
2000109a:	f002 fefd 	bl	20003e98 <draw_game_object>
					if(boom.current_frame < 10)
2000109e:	4b60      	ldr	r3, [pc, #384]	; (20001220 <main+0x1024>)
200010a0:	22a3      	movs	r2, #163	; 0xa3
200010a2:	00d2      	lsls	r2, r2, #3
200010a4:	4694      	mov	ip, r2
200010a6:	44bc      	add	ip, r7
200010a8:	4463      	add	r3, ip
200010aa:	695b      	ldr	r3, [r3, #20]
200010ac:	2b09      	cmp	r3, #9
200010ae:	dc0b      	bgt.n	200010c8 <main+0xecc>
						boom.update( &boom );
200010b0:	4b5b      	ldr	r3, [pc, #364]	; (20001220 <main+0x1024>)
200010b2:	22a3      	movs	r2, #163	; 0xa3
200010b4:	00d2      	lsls	r2, r2, #3
200010b6:	4694      	mov	ip, r2
200010b8:	44bc      	add	ip, r7
200010ba:	4463      	add	r3, ip
200010bc:	68db      	ldr	r3, [r3, #12]
200010be:	22b8      	movs	r2, #184	; 0xb8
200010c0:	0092      	lsls	r2, r2, #2
200010c2:	18ba      	adds	r2, r7, r2
200010c4:	0010      	movs	r0, r2
200010c6:	4798      	blx	r3
				}
				
				show_frame(1);
200010c8:	2001      	movs	r0, #1
200010ca:	f002 ff26 	bl	20003f1a <show_frame>
				
				static int last_climb_value = 100;
				if((read_DIL_single(CLIMB_TRIGGER) != last_climb_value) && player.xPos > 90 && player.xPos < 108 && !has_climbed) {
200010ce:	2004      	movs	r0, #4
200010d0:	f002 ff9c 	bl	2000400c <read_DIL_single>
200010d4:	0002      	movs	r2, r0
200010d6:	4b53      	ldr	r3, [pc, #332]	; (20001224 <main+0x1028>)
200010d8:	681b      	ldr	r3, [r3, #0]
200010da:	429a      	cmp	r2, r3
200010dc:	d023      	beq.n	20001126 <main+0xf2a>
200010de:	4b4f      	ldr	r3, [pc, #316]	; (2000121c <main+0x1020>)
200010e0:	22a3      	movs	r2, #163	; 0xa3
200010e2:	00d2      	lsls	r2, r2, #3
200010e4:	4694      	mov	ip, r2
200010e6:	44bc      	add	ip, r7
200010e8:	4463      	add	r3, ip
200010ea:	685b      	ldr	r3, [r3, #4]
200010ec:	2b5a      	cmp	r3, #90	; 0x5a
200010ee:	dd1a      	ble.n	20001126 <main+0xf2a>
200010f0:	4b4a      	ldr	r3, [pc, #296]	; (2000121c <main+0x1020>)
200010f2:	22a3      	movs	r2, #163	; 0xa3
200010f4:	00d2      	lsls	r2, r2, #3
200010f6:	4694      	mov	ip, r2
200010f8:	44bc      	add	ip, r7
200010fa:	4463      	add	r3, ip
200010fc:	685b      	ldr	r3, [r3, #4]
200010fe:	2b6b      	cmp	r3, #107	; 0x6b
20001100:	dc11      	bgt.n	20001126 <main+0xf2a>
20001102:	4b49      	ldr	r3, [pc, #292]	; (20001228 <main+0x102c>)
20001104:	18fb      	adds	r3, r7, r3
20001106:	681b      	ldr	r3, [r3, #0]
20001108:	2b00      	cmp	r3, #0
2000110a:	d10c      	bne.n	20001126 <main+0xf2a>
					is_climbing = 1;
2000110c:	2301      	movs	r3, #1
2000110e:	22a2      	movs	r2, #162	; 0xa2
20001110:	00d2      	lsls	r2, r2, #3
20001112:	18ba      	adds	r2, r7, r2
20001114:	6013      	str	r3, [r2, #0]
					player.xPos = 98;
20001116:	4b41      	ldr	r3, [pc, #260]	; (2000121c <main+0x1020>)
20001118:	22a3      	movs	r2, #163	; 0xa3
2000111a:	00d2      	lsls	r2, r2, #3
2000111c:	4694      	mov	ip, r2
2000111e:	44bc      	add	ip, r7
20001120:	4463      	add	r3, ip
20001122:	2262      	movs	r2, #98	; 0x62
20001124:	605a      	str	r2, [r3, #4]
				}
				last_climb_value = read_DIL_single(CLIMB_TRIGGER);
20001126:	2004      	movs	r0, #4
20001128:	f002 ff70 	bl	2000400c <read_DIL_single>
2000112c:	0002      	movs	r2, r0
2000112e:	4b3d      	ldr	r3, [pc, #244]	; (20001224 <main+0x1028>)
20001130:	601a      	str	r2, [r3, #0]
				
				if(is_climbing) {
20001132:	23a2      	movs	r3, #162	; 0xa2
20001134:	00db      	lsls	r3, r3, #3
20001136:	18fb      	adds	r3, r7, r3
20001138:	681b      	ldr	r3, [r3, #0]
2000113a:	2b00      	cmp	r3, #0
2000113c:	d100      	bne.n	20001140 <main+0xf44>
2000113e:	e079      	b.n	20001234 <main+0x1038>
					gameObjectUpdate( &player );
20001140:	23a6      	movs	r3, #166	; 0xa6
20001142:	009b      	lsls	r3, r3, #2
20001144:	18fb      	adds	r3, r7, r3
20001146:	0018      	movs	r0, r3
20001148:	f000 fcca 	bl	20001ae0 <gameObjectUpdate>
					if (player.yPos % 6 == 0){
2000114c:	4b33      	ldr	r3, [pc, #204]	; (2000121c <main+0x1020>)
2000114e:	22a3      	movs	r2, #163	; 0xa3
20001150:	00d2      	lsls	r2, r2, #3
20001152:	4694      	mov	ip, r2
20001154:	44bc      	add	ip, r7
20001156:	4463      	add	r3, ip
20001158:	689b      	ldr	r3, [r3, #8]
2000115a:	2106      	movs	r1, #6
2000115c:	0018      	movs	r0, r3
2000115e:	f003 feeb 	bl	20004f38 <__aeabi_idivmod>
20001162:	1e0b      	subs	r3, r1, #0
20001164:	d106      	bne.n	20001174 <main+0xf78>
						ascii_write("*tipp*","");
20001166:	4a28      	ldr	r2, [pc, #160]	; (20001208 <main+0x100c>)
20001168:	4b30      	ldr	r3, [pc, #192]	; (2000122c <main+0x1030>)
2000116a:	0011      	movs	r1, r2
2000116c:	0018      	movs	r0, r3
2000116e:	f003 f93f 	bl	200043f0 <ascii_write>
20001172:	e013      	b.n	2000119c <main+0xfa0>
					}
					else if (player.yPos % 6 == 3) {
20001174:	4b29      	ldr	r3, [pc, #164]	; (2000121c <main+0x1020>)
20001176:	22a3      	movs	r2, #163	; 0xa3
20001178:	00d2      	lsls	r2, r2, #3
2000117a:	4694      	mov	ip, r2
2000117c:	44bc      	add	ip, r7
2000117e:	4463      	add	r3, ip
20001180:	689b      	ldr	r3, [r3, #8]
20001182:	2106      	movs	r1, #6
20001184:	0018      	movs	r0, r3
20001186:	f003 fed7 	bl	20004f38 <__aeabi_idivmod>
2000118a:	000b      	movs	r3, r1
2000118c:	2b03      	cmp	r3, #3
2000118e:	d105      	bne.n	2000119c <main+0xfa0>
						ascii_write("*tapp*","");
20001190:	4a1d      	ldr	r2, [pc, #116]	; (20001208 <main+0x100c>)
20001192:	4b27      	ldr	r3, [pc, #156]	; (20001230 <main+0x1034>)
20001194:	0011      	movs	r1, r2
20001196:	0018      	movs	r0, r3
20001198:	f003 f92a 	bl	200043f0 <ascii_write>
					}
					if(player.yPos > 4) {
2000119c:	4b1f      	ldr	r3, [pc, #124]	; (2000121c <main+0x1020>)
2000119e:	22a3      	movs	r2, #163	; 0xa3
200011a0:	00d2      	lsls	r2, r2, #3
200011a2:	4694      	mov	ip, r2
200011a4:	44bc      	add	ip, r7
200011a6:	4463      	add	r3, ip
200011a8:	689b      	ldr	r3, [r3, #8]
200011aa:	2b04      	cmp	r3, #4
200011ac:	dd0f      	ble.n	200011ce <main+0xfd2>
						player.yPos--;
200011ae:	4b1b      	ldr	r3, [pc, #108]	; (2000121c <main+0x1020>)
200011b0:	22a3      	movs	r2, #163	; 0xa3
200011b2:	00d2      	lsls	r2, r2, #3
200011b4:	4694      	mov	ip, r2
200011b6:	44bc      	add	ip, r7
200011b8:	4463      	add	r3, ip
200011ba:	689b      	ldr	r3, [r3, #8]
200011bc:	1e5a      	subs	r2, r3, #1
200011be:	4b17      	ldr	r3, [pc, #92]	; (2000121c <main+0x1020>)
200011c0:	21a3      	movs	r1, #163	; 0xa3
200011c2:	00c9      	lsls	r1, r1, #3
200011c4:	468c      	mov	ip, r1
200011c6:	44bc      	add	ip, r7
200011c8:	4463      	add	r3, ip
200011ca:	609a      	str	r2, [r3, #8]
200011cc:	e03e      	b.n	2000124c <main+0x1050>
					} else {	//Stay at top level and disable climbing forever!
						player.yPos = 5;
200011ce:	4b13      	ldr	r3, [pc, #76]	; (2000121c <main+0x1020>)
200011d0:	22a3      	movs	r2, #163	; 0xa3
200011d2:	00d2      	lsls	r2, r2, #3
200011d4:	4694      	mov	ip, r2
200011d6:	44bc      	add	ip, r7
200011d8:	4463      	add	r3, ip
200011da:	2205      	movs	r2, #5
200011dc:	609a      	str	r2, [r3, #8]
						player.xPos = 96;
200011de:	4b0f      	ldr	r3, [pc, #60]	; (2000121c <main+0x1020>)
200011e0:	22a3      	movs	r2, #163	; 0xa3
200011e2:	00d2      	lsls	r2, r2, #3
200011e4:	4694      	mov	ip, r2
200011e6:	44bc      	add	ip, r7
200011e8:	4463      	add	r3, ip
200011ea:	2260      	movs	r2, #96	; 0x60
200011ec:	605a      	str	r2, [r3, #4]
						is_climbing = 0;
200011ee:	2300      	movs	r3, #0
200011f0:	22a2      	movs	r2, #162	; 0xa2
200011f2:	00d2      	lsls	r2, r2, #3
200011f4:	18ba      	adds	r2, r7, r2
200011f6:	6013      	str	r3, [r2, #0]
						has_climbed = 1;
200011f8:	2301      	movs	r3, #1
200011fa:	4a0b      	ldr	r2, [pc, #44]	; (20001228 <main+0x102c>)
200011fc:	18ba      	adds	r2, r7, r2
200011fe:	6013      	str	r3, [r2, #0]
20001200:	e024      	b.n	2000124c <main+0x1050>
20001202:	46c0      	nop			; (mov r8, r8)
20001204:	20004f44 	andcs	r4, r0, r4, asr #30
20001208:	20014668 	andcs	r4, r1, r8, ror #12
2000120c:	2001466c 	andcs	r4, r1, ip, ror #12
20001210:	20004f48 	andcs	r4, r0, r8, asr #30
20001214:	fffffc18 			; <UNDEFINED> instruction: 0xfffffc18
20001218:	000004fc 	strdeq	r0, [r0], -ip
2000121c:	fffffd80 			; <UNDEFINED> instruction: 0xfffffd80
20001220:	fffffdc8 			; <UNDEFINED> instruction: 0xfffffdc8
20001224:	20009198 	mulcs	r0, r8, r1
20001228:	0000050c 	andeq	r0, r0, ip, lsl #10
2000122c:	20014674 	andcs	r4, r1, r4, ror r6
20001230:	2001467c 	andcs	r4, r1, ip, ror r6
					}
				} else {
					player.update(&player);
20001234:	4ba7      	ldr	r3, [pc, #668]	; (200014d4 <main+0x12d8>)
20001236:	22a3      	movs	r2, #163	; 0xa3
20001238:	00d2      	lsls	r2, r2, #3
2000123a:	4694      	mov	ip, r2
2000123c:	44bc      	add	ip, r7
2000123e:	4463      	add	r3, ip
20001240:	68db      	ldr	r3, [r3, #12]
20001242:	22a6      	movs	r2, #166	; 0xa6
20001244:	0092      	lsls	r2, r2, #2
20001246:	18ba      	adds	r2, r7, r2
20001248:	0010      	movs	r0, r2
2000124a:	4798      	blx	r3
				}
				
				if (trophy.yPos >= player.yPos && (player.xPos + PLAYER_WIDTH/2 >= trophy.xPos && player.xPos <= trophy.xPos + PLAYER_WIDTH/2 )) {
2000124c:	4ba2      	ldr	r3, [pc, #648]	; (200014d8 <main+0x12dc>)
2000124e:	22a3      	movs	r2, #163	; 0xa3
20001250:	00d2      	lsls	r2, r2, #3
20001252:	4694      	mov	ip, r2
20001254:	44bc      	add	ip, r7
20001256:	4463      	add	r3, ip
20001258:	689a      	ldr	r2, [r3, #8]
2000125a:	4b9e      	ldr	r3, [pc, #632]	; (200014d4 <main+0x12d8>)
2000125c:	21a3      	movs	r1, #163	; 0xa3
2000125e:	00c9      	lsls	r1, r1, #3
20001260:	468c      	mov	ip, r1
20001262:	44bc      	add	ip, r7
20001264:	4463      	add	r3, ip
20001266:	689b      	ldr	r3, [r3, #8]
20001268:	429a      	cmp	r2, r3
2000126a:	db28      	blt.n	200012be <main+0x10c2>
2000126c:	4b99      	ldr	r3, [pc, #612]	; (200014d4 <main+0x12d8>)
2000126e:	22a3      	movs	r2, #163	; 0xa3
20001270:	00d2      	lsls	r2, r2, #3
20001272:	4694      	mov	ip, r2
20001274:	44bc      	add	ip, r7
20001276:	4463      	add	r3, ip
20001278:	685b      	ldr	r3, [r3, #4]
2000127a:	3309      	adds	r3, #9
2000127c:	001a      	movs	r2, r3
2000127e:	4b96      	ldr	r3, [pc, #600]	; (200014d8 <main+0x12dc>)
20001280:	21a3      	movs	r1, #163	; 0xa3
20001282:	00c9      	lsls	r1, r1, #3
20001284:	468c      	mov	ip, r1
20001286:	44bc      	add	ip, r7
20001288:	4463      	add	r3, ip
2000128a:	685b      	ldr	r3, [r3, #4]
2000128c:	429a      	cmp	r2, r3
2000128e:	db16      	blt.n	200012be <main+0x10c2>
20001290:	4b90      	ldr	r3, [pc, #576]	; (200014d4 <main+0x12d8>)
20001292:	22a3      	movs	r2, #163	; 0xa3
20001294:	00d2      	lsls	r2, r2, #3
20001296:	4694      	mov	ip, r2
20001298:	44bc      	add	ip, r7
2000129a:	4463      	add	r3, ip
2000129c:	685a      	ldr	r2, [r3, #4]
2000129e:	4b8e      	ldr	r3, [pc, #568]	; (200014d8 <main+0x12dc>)
200012a0:	21a3      	movs	r1, #163	; 0xa3
200012a2:	00c9      	lsls	r1, r1, #3
200012a4:	468c      	mov	ip, r1
200012a6:	44bc      	add	ip, r7
200012a8:	4463      	add	r3, ip
200012aa:	685b      	ldr	r3, [r3, #4]
200012ac:	3309      	adds	r3, #9
200012ae:	429a      	cmp	r2, r3
200012b0:	dc05      	bgt.n	200012be <main+0x10c2>
					ascii_write("Daffo: I need magic ","to grab the trophy!");
200012b2:	4a8a      	ldr	r2, [pc, #552]	; (200014dc <main+0x12e0>)
200012b4:	4b8a      	ldr	r3, [pc, #552]	; (200014e0 <main+0x12e4>)
200012b6:	0011      	movs	r1, r2
200012b8:	0018      	movs	r0, r3
200012ba:	f003 f899 	bl	200043f0 <ascii_write>
				}
				
				if (read_DIL_single(EXPLOSION_TRIGGER)){
200012be:	2003      	movs	r0, #3
200012c0:	f002 fea4 	bl	2000400c <read_DIL_single>
200012c4:	1e03      	subs	r3, r0, #0
200012c6:	d047      	beq.n	20001358 <main+0x115c>
					if (trophy.yPos >= player.yPos && (player.xPos + PLAYER_WIDTH/2 >= trophy.xPos && player.xPos <= trophy.xPos + PLAYER_WIDTH/2 )){
200012c8:	4b83      	ldr	r3, [pc, #524]	; (200014d8 <main+0x12dc>)
200012ca:	22a3      	movs	r2, #163	; 0xa3
200012cc:	00d2      	lsls	r2, r2, #3
200012ce:	4694      	mov	ip, r2
200012d0:	44bc      	add	ip, r7
200012d2:	4463      	add	r3, ip
200012d4:	689a      	ldr	r2, [r3, #8]
200012d6:	4b7f      	ldr	r3, [pc, #508]	; (200014d4 <main+0x12d8>)
200012d8:	21a3      	movs	r1, #163	; 0xa3
200012da:	00c9      	lsls	r1, r1, #3
200012dc:	468c      	mov	ip, r1
200012de:	44bc      	add	ip, r7
200012e0:	4463      	add	r3, ip
200012e2:	689b      	ldr	r3, [r3, #8]
200012e4:	429a      	cmp	r2, r3
200012e6:	db29      	blt.n	2000133c <main+0x1140>
200012e8:	4b7a      	ldr	r3, [pc, #488]	; (200014d4 <main+0x12d8>)
200012ea:	22a3      	movs	r2, #163	; 0xa3
200012ec:	00d2      	lsls	r2, r2, #3
200012ee:	4694      	mov	ip, r2
200012f0:	44bc      	add	ip, r7
200012f2:	4463      	add	r3, ip
200012f4:	685b      	ldr	r3, [r3, #4]
200012f6:	3309      	adds	r3, #9
200012f8:	001a      	movs	r2, r3
200012fa:	4b77      	ldr	r3, [pc, #476]	; (200014d8 <main+0x12dc>)
200012fc:	21a3      	movs	r1, #163	; 0xa3
200012fe:	00c9      	lsls	r1, r1, #3
20001300:	468c      	mov	ip, r1
20001302:	44bc      	add	ip, r7
20001304:	4463      	add	r3, ip
20001306:	685b      	ldr	r3, [r3, #4]
20001308:	429a      	cmp	r2, r3
2000130a:	db17      	blt.n	2000133c <main+0x1140>
2000130c:	4b71      	ldr	r3, [pc, #452]	; (200014d4 <main+0x12d8>)
2000130e:	22a3      	movs	r2, #163	; 0xa3
20001310:	00d2      	lsls	r2, r2, #3
20001312:	4694      	mov	ip, r2
20001314:	44bc      	add	ip, r7
20001316:	4463      	add	r3, ip
20001318:	685a      	ldr	r2, [r3, #4]
2000131a:	4b6f      	ldr	r3, [pc, #444]	; (200014d8 <main+0x12dc>)
2000131c:	21a3      	movs	r1, #163	; 0xa3
2000131e:	00c9      	lsls	r1, r1, #3
20001320:	468c      	mov	ip, r1
20001322:	44bc      	add	ip, r7
20001324:	4463      	add	r3, ip
20001326:	685b      	ldr	r3, [r3, #4]
20001328:	3309      	adds	r3, #9
2000132a:	429a      	cmp	r2, r3
2000132c:	dc06      	bgt.n	2000133c <main+0x1140>
						counter = 0;
2000132e:	4b6d      	ldr	r3, [pc, #436]	; (200014e4 <main+0x12e8>)
20001330:	2200      	movs	r2, #0
20001332:	601a      	str	r2, [r3, #0]
						current_screen = WIN_SCREEN;
20001334:	4b6c      	ldr	r3, [pc, #432]	; (200014e8 <main+0x12ec>)
20001336:	2204      	movs	r2, #4
20001338:	601a      	str	r2, [r3, #0]
2000133a:	e00d      	b.n	20001358 <main+0x115c>
						//ascii_write("Roger (King Lear): ","I am proud of you!");
					}
					else{
						game_over_adder = 5;
2000133c:	2305      	movs	r3, #5
2000133e:	4a6b      	ldr	r2, [pc, #428]	; (200014ec <main+0x12f0>)
20001340:	18ba      	adds	r2, r7, r2
20001342:	6013      	str	r3, [r2, #0]
						ascii_write("*KABOOOOM*","");
20001344:	4a6a      	ldr	r2, [pc, #424]	; (200014f0 <main+0x12f4>)
20001346:	4b6b      	ldr	r3, [pc, #428]	; (200014f4 <main+0x12f8>)
20001348:	0011      	movs	r1, r2
2000134a:	0018      	movs	r0, r3
2000134c:	f003 f850 	bl	200043f0 <ascii_write>
						exploding = 1;
20001350:	2301      	movs	r3, #1
20001352:	4a69      	ldr	r2, [pc, #420]	; (200014f8 <main+0x12fc>)
20001354:	18ba      	adds	r2, r7, r2
20001356:	6013      	str	r3, [r2, #0]
				}
				
				//fire1_indoors.update(&fire1_indoors);
				//fire updates done above
				
				hair.update(&hair);
20001358:	4b68      	ldr	r3, [pc, #416]	; (200014fc <main+0x1300>)
2000135a:	22a3      	movs	r2, #163	; 0xa3
2000135c:	00d2      	lsls	r2, r2, #3
2000135e:	4694      	mov	ip, r2
20001360:	44bc      	add	ip, r7
20001362:	4463      	add	r3, ip
20001364:	68db      	ldr	r3, [r3, #12]
20001366:	22ca      	movs	r2, #202	; 0xca
20001368:	0092      	lsls	r2, r2, #2
2000136a:	18ba      	adds	r2, r7, r2
2000136c:	0010      	movs	r0, r2
2000136e:	4798      	blx	r3
				if(read_DIL_single(HAIR_TRIGGER)) {
20001370:	2001      	movs	r0, #1
20001372:	f002 fe4b 	bl	2000400c <read_DIL_single>
20001376:	1e03      	subs	r3, r0, #0
20001378:	d029      	beq.n	200013ce <main+0x11d2>
					if (lastFireTrigger == 0){
2000137a:	4b61      	ldr	r3, [pc, #388]	; (20001500 <main+0x1304>)
2000137c:	18fb      	adds	r3, r7, r3
2000137e:	681b      	ldr	r3, [r3, #0]
20001380:	2b00      	cmp	r3, #0
20001382:	d105      	bne.n	20001390 <main+0x1194>
						ascii_write("*FwOOOo*","");
20001384:	4a5a      	ldr	r2, [pc, #360]	; (200014f0 <main+0x12f4>)
20001386:	4b5f      	ldr	r3, [pc, #380]	; (20001504 <main+0x1308>)
20001388:	0011      	movs	r1, r2
2000138a:	0018      	movs	r0, r3
2000138c:	f003 f830 	bl	200043f0 <ascii_write>
					}
					hair.xPos = player.xPos;
20001390:	4b50      	ldr	r3, [pc, #320]	; (200014d4 <main+0x12d8>)
20001392:	22a3      	movs	r2, #163	; 0xa3
20001394:	00d2      	lsls	r2, r2, #3
20001396:	4694      	mov	ip, r2
20001398:	44bc      	add	ip, r7
2000139a:	4463      	add	r3, ip
2000139c:	685a      	ldr	r2, [r3, #4]
2000139e:	4b57      	ldr	r3, [pc, #348]	; (200014fc <main+0x1300>)
200013a0:	21a3      	movs	r1, #163	; 0xa3
200013a2:	00c9      	lsls	r1, r1, #3
200013a4:	468c      	mov	ip, r1
200013a6:	44bc      	add	ip, r7
200013a8:	4463      	add	r3, ip
200013aa:	605a      	str	r2, [r3, #4]
					hair.yPos = player.yPos - 28;
200013ac:	4b49      	ldr	r3, [pc, #292]	; (200014d4 <main+0x12d8>)
200013ae:	22a3      	movs	r2, #163	; 0xa3
200013b0:	00d2      	lsls	r2, r2, #3
200013b2:	4694      	mov	ip, r2
200013b4:	44bc      	add	ip, r7
200013b6:	4463      	add	r3, ip
200013b8:	689b      	ldr	r3, [r3, #8]
200013ba:	3b1c      	subs	r3, #28
200013bc:	001a      	movs	r2, r3
200013be:	4b4f      	ldr	r3, [pc, #316]	; (200014fc <main+0x1300>)
200013c0:	21a3      	movs	r1, #163	; 0xa3
200013c2:	00c9      	lsls	r1, r1, #3
200013c4:	468c      	mov	ip, r1
200013c6:	44bc      	add	ip, r7
200013c8:	4463      	add	r3, ip
200013ca:	609a      	str	r2, [r3, #8]
200013cc:	e011      	b.n	200013f2 <main+0x11f6>
				} else {
					hair.xPos = -100;
200013ce:	4b4b      	ldr	r3, [pc, #300]	; (200014fc <main+0x1300>)
200013d0:	22a3      	movs	r2, #163	; 0xa3
200013d2:	00d2      	lsls	r2, r2, #3
200013d4:	4694      	mov	ip, r2
200013d6:	44bc      	add	ip, r7
200013d8:	4463      	add	r3, ip
200013da:	2264      	movs	r2, #100	; 0x64
200013dc:	4252      	negs	r2, r2
200013de:	605a      	str	r2, [r3, #4]
					hair.yPos = -100;
200013e0:	4b46      	ldr	r3, [pc, #280]	; (200014fc <main+0x1300>)
200013e2:	22a3      	movs	r2, #163	; 0xa3
200013e4:	00d2      	lsls	r2, r2, #3
200013e6:	4694      	mov	ip, r2
200013e8:	44bc      	add	ip, r7
200013ea:	4463      	add	r3, ip
200013ec:	2264      	movs	r2, #100	; 0x64
200013ee:	4252      	negs	r2, r2
200013f0:	609a      	str	r2, [r3, #8]
				}
				
				
				
				if (!no_DIP && DIP.yPos >= player.yPos && (player.xPos + DIP_WIDTH/2 >= DIP.xPos && player.xPos <= DIP.xPos + DIP_WIDTH/2 )){ // DIP_collision
200013f2:	23a0      	movs	r3, #160	; 0xa0
200013f4:	00db      	lsls	r3, r3, #3
200013f6:	18fb      	adds	r3, r7, r3
200013f8:	681b      	ldr	r3, [r3, #0]
200013fa:	2b00      	cmp	r3, #0
200013fc:	d141      	bne.n	20001482 <main+0x1286>
200013fe:	4b42      	ldr	r3, [pc, #264]	; (20001508 <main+0x130c>)
20001400:	22a3      	movs	r2, #163	; 0xa3
20001402:	00d2      	lsls	r2, r2, #3
20001404:	4694      	mov	ip, r2
20001406:	44bc      	add	ip, r7
20001408:	4463      	add	r3, ip
2000140a:	689a      	ldr	r2, [r3, #8]
2000140c:	4b31      	ldr	r3, [pc, #196]	; (200014d4 <main+0x12d8>)
2000140e:	21a3      	movs	r1, #163	; 0xa3
20001410:	00c9      	lsls	r1, r1, #3
20001412:	468c      	mov	ip, r1
20001414:	44bc      	add	ip, r7
20001416:	4463      	add	r3, ip
20001418:	689b      	ldr	r3, [r3, #8]
2000141a:	429a      	cmp	r2, r3
2000141c:	db31      	blt.n	20001482 <main+0x1286>
2000141e:	4b2d      	ldr	r3, [pc, #180]	; (200014d4 <main+0x12d8>)
20001420:	22a3      	movs	r2, #163	; 0xa3
20001422:	00d2      	lsls	r2, r2, #3
20001424:	4694      	mov	ip, r2
20001426:	44bc      	add	ip, r7
20001428:	4463      	add	r3, ip
2000142a:	685b      	ldr	r3, [r3, #4]
2000142c:	3309      	adds	r3, #9
2000142e:	001a      	movs	r2, r3
20001430:	4b35      	ldr	r3, [pc, #212]	; (20001508 <main+0x130c>)
20001432:	21a3      	movs	r1, #163	; 0xa3
20001434:	00c9      	lsls	r1, r1, #3
20001436:	468c      	mov	ip, r1
20001438:	44bc      	add	ip, r7
2000143a:	4463      	add	r3, ip
2000143c:	685b      	ldr	r3, [r3, #4]
2000143e:	429a      	cmp	r2, r3
20001440:	db1f      	blt.n	20001482 <main+0x1286>
20001442:	4b24      	ldr	r3, [pc, #144]	; (200014d4 <main+0x12d8>)
20001444:	22a3      	movs	r2, #163	; 0xa3
20001446:	00d2      	lsls	r2, r2, #3
20001448:	4694      	mov	ip, r2
2000144a:	44bc      	add	ip, r7
2000144c:	4463      	add	r3, ip
2000144e:	685a      	ldr	r2, [r3, #4]
20001450:	4b2d      	ldr	r3, [pc, #180]	; (20001508 <main+0x130c>)
20001452:	21a3      	movs	r1, #163	; 0xa3
20001454:	00c9      	lsls	r1, r1, #3
20001456:	468c      	mov	ip, r1
20001458:	44bc      	add	ip, r7
2000145a:	4463      	add	r3, ip
2000145c:	685b      	ldr	r3, [r3, #4]
2000145e:	3309      	adds	r3, #9
20001460:	429a      	cmp	r2, r3
20001462:	dc0e      	bgt.n	20001482 <main+0x1286>
					game_over_adder = 5;
20001464:	2305      	movs	r3, #5
20001466:	4a21      	ldr	r2, [pc, #132]	; (200014ec <main+0x12f0>)
20001468:	18ba      	adds	r2, r7, r2
2000146a:	6013      	str	r3, [r2, #0]
					ascii_write("DIPs-WITCH:","      NyAHAHAHAH!");
2000146c:	4a27      	ldr	r2, [pc, #156]	; (2000150c <main+0x1310>)
2000146e:	4b28      	ldr	r3, [pc, #160]	; (20001510 <main+0x1314>)
20001470:	0011      	movs	r1, r2
20001472:	0018      	movs	r0, r3
20001474:	f002 ffbc 	bl	200043f0 <ascii_write>
					exploding = 1;
20001478:	2301      	movs	r3, #1
2000147a:	4a1f      	ldr	r2, [pc, #124]	; (200014f8 <main+0x12fc>)
2000147c:	18ba      	adds	r2, r7, r2
2000147e:	6013      	str	r3, [r2, #0]
20001480:	e023      	b.n	200014ca <main+0x12ce>
				} else if(!no_DIP) {
20001482:	23a0      	movs	r3, #160	; 0xa0
20001484:	00db      	lsls	r3, r3, #3
20001486:	18fb      	adds	r3, r7, r3
20001488:	681b      	ldr	r3, [r3, #0]
2000148a:	2b00      	cmp	r3, #0
2000148c:	d11d      	bne.n	200014ca <main+0x12ce>
					setPlayerPosition(player.xPos, player.yPos);
2000148e:	4b11      	ldr	r3, [pc, #68]	; (200014d4 <main+0x12d8>)
20001490:	22a3      	movs	r2, #163	; 0xa3
20001492:	00d2      	lsls	r2, r2, #3
20001494:	4694      	mov	ip, r2
20001496:	44bc      	add	ip, r7
20001498:	4463      	add	r3, ip
2000149a:	685a      	ldr	r2, [r3, #4]
2000149c:	4b0d      	ldr	r3, [pc, #52]	; (200014d4 <main+0x12d8>)
2000149e:	21a3      	movs	r1, #163	; 0xa3
200014a0:	00c9      	lsls	r1, r1, #3
200014a2:	468c      	mov	ip, r1
200014a4:	44bc      	add	ip, r7
200014a6:	4463      	add	r3, ip
200014a8:	689b      	ldr	r3, [r3, #8]
200014aa:	0019      	movs	r1, r3
200014ac:	0010      	movs	r0, r2
200014ae:	f001 f999 	bl	200027e4 <setPlayerPosition>
					DIP.update(&DIP);					
200014b2:	4b15      	ldr	r3, [pc, #84]	; (20001508 <main+0x130c>)
200014b4:	22a3      	movs	r2, #163	; 0xa3
200014b6:	00d2      	lsls	r2, r2, #3
200014b8:	4694      	mov	ip, r2
200014ba:	44bc      	add	ip, r7
200014bc:	4463      	add	r3, ip
200014be:	68db      	ldr	r3, [r3, #12]
200014c0:	22af      	movs	r2, #175	; 0xaf
200014c2:	0092      	lsls	r2, r2, #2
200014c4:	18ba      	adds	r2, r7, r2
200014c6:	0010      	movs	r0, r2
200014c8:	4798      	blx	r3
				}
				
				static int distance_player_fire;	//fire_collision
				static int j;
				for(j = 0; j < 3; j++) {
200014ca:	4b12      	ldr	r3, [pc, #72]	; (20001514 <main+0x1318>)
200014cc:	2200      	movs	r2, #0
200014ce:	601a      	str	r2, [r3, #0]
200014d0:	e087      	b.n	200015e2 <main+0x13e6>
200014d2:	46c0      	nop			; (mov r8, r8)
200014d4:	fffffd80 			; <UNDEFINED> instruction: 0xfffffd80
200014d8:	fffffe34 			; <UNDEFINED> instruction: 0xfffffe34
200014dc:	20014684 	andcs	r4, r1, r4, lsl #13
200014e0:	20014698 	mulcs	r1, r8, r6
200014e4:	20004f44 	andcs	r4, r0, r4, asr #30
200014e8:	20009188 	andcs	r9, r0, r8, lsl #3
200014ec:	00000504 	andeq	r0, r0, r4, lsl #10
200014f0:	20014668 	andcs	r4, r1, r8, ror #12
200014f4:	200146b0 			; <UNDEFINED> instruction: 0x200146b0
200014f8:	000004fc 	strdeq	r0, [r0], -ip
200014fc:	fffffe10 			; <UNDEFINED> instruction: 0xfffffe10
20001500:	000004f4 	strdeq	r0, [r0], -r4
20001504:	200146bc 			; <UNDEFINED> instruction: 0x200146bc
20001508:	fffffda4 			; <UNDEFINED> instruction: 0xfffffda4
2000150c:	200146c8 	andcs	r4, r1, r8, asr #13
20001510:	20014608 	andcs	r4, r1, r8, lsl #12
20001514:	20004f4c 	andcs	r4, r0, ip, asr #30
					distance_player_fire = (player.xPos + 9) - (fires[j].xPos + 5);
20001518:	4b98      	ldr	r3, [pc, #608]	; (2000177c <main+0x1580>)
2000151a:	22a3      	movs	r2, #163	; 0xa3
2000151c:	00d2      	lsls	r2, r2, #3
2000151e:	4694      	mov	ip, r2
20001520:	44bc      	add	ip, r7
20001522:	4463      	add	r3, ip
20001524:	685b      	ldr	r3, [r3, #4]
20001526:	3309      	adds	r3, #9
20001528:	0019      	movs	r1, r3
2000152a:	4b95      	ldr	r3, [pc, #596]	; (20001780 <main+0x1584>)
2000152c:	681a      	ldr	r2, [r3, #0]
2000152e:	4b95      	ldr	r3, [pc, #596]	; (20001784 <main+0x1588>)
20001530:	20a3      	movs	r0, #163	; 0xa3
20001532:	00c0      	lsls	r0, r0, #3
20001534:	1838      	adds	r0, r7, r0
20001536:	18c0      	adds	r0, r0, r3
20001538:	0013      	movs	r3, r2
2000153a:	00db      	lsls	r3, r3, #3
2000153c:	189b      	adds	r3, r3, r2
2000153e:	009b      	lsls	r3, r3, #2
20001540:	18c3      	adds	r3, r0, r3
20001542:	3304      	adds	r3, #4
20001544:	681b      	ldr	r3, [r3, #0]
20001546:	3305      	adds	r3, #5
20001548:	1aca      	subs	r2, r1, r3
2000154a:	4b8f      	ldr	r3, [pc, #572]	; (20001788 <main+0x158c>)
2000154c:	601a      	str	r2, [r3, #0]
					if(player.yPos > (fires[j].yPos - 18 + 7) && 
2000154e:	4b8b      	ldr	r3, [pc, #556]	; (2000177c <main+0x1580>)
20001550:	22a3      	movs	r2, #163	; 0xa3
20001552:	00d2      	lsls	r2, r2, #3
20001554:	4694      	mov	ip, r2
20001556:	44bc      	add	ip, r7
20001558:	4463      	add	r3, ip
2000155a:	6899      	ldr	r1, [r3, #8]
2000155c:	4b88      	ldr	r3, [pc, #544]	; (20001780 <main+0x1584>)
2000155e:	681a      	ldr	r2, [r3, #0]
20001560:	4b88      	ldr	r3, [pc, #544]	; (20001784 <main+0x1588>)
20001562:	20a3      	movs	r0, #163	; 0xa3
20001564:	00c0      	lsls	r0, r0, #3
20001566:	1838      	adds	r0, r7, r0
20001568:	18c0      	adds	r0, r0, r3
2000156a:	0013      	movs	r3, r2
2000156c:	00db      	lsls	r3, r3, #3
2000156e:	189b      	adds	r3, r3, r2
20001570:	009b      	lsls	r3, r3, #2
20001572:	18c3      	adds	r3, r0, r3
20001574:	3308      	adds	r3, #8
20001576:	681b      	ldr	r3, [r3, #0]
20001578:	3b0b      	subs	r3, #11
2000157a:	4299      	cmp	r1, r3
2000157c:	dd2c      	ble.n	200015d8 <main+0x13dc>
							player.yPos < fires[j].yPos && distance_player_fire < 8 && distance_player_fire > -8) {
2000157e:	4b7f      	ldr	r3, [pc, #508]	; (2000177c <main+0x1580>)
20001580:	22a3      	movs	r2, #163	; 0xa3
20001582:	00d2      	lsls	r2, r2, #3
20001584:	4694      	mov	ip, r2
20001586:	44bc      	add	ip, r7
20001588:	4463      	add	r3, ip
2000158a:	6899      	ldr	r1, [r3, #8]
2000158c:	4b7c      	ldr	r3, [pc, #496]	; (20001780 <main+0x1584>)
2000158e:	681a      	ldr	r2, [r3, #0]
20001590:	4b7c      	ldr	r3, [pc, #496]	; (20001784 <main+0x1588>)
20001592:	20a3      	movs	r0, #163	; 0xa3
20001594:	00c0      	lsls	r0, r0, #3
20001596:	1838      	adds	r0, r7, r0
20001598:	18c0      	adds	r0, r0, r3
2000159a:	0013      	movs	r3, r2
2000159c:	00db      	lsls	r3, r3, #3
2000159e:	189b      	adds	r3, r3, r2
200015a0:	009b      	lsls	r3, r3, #2
200015a2:	18c3      	adds	r3, r0, r3
200015a4:	3308      	adds	r3, #8
200015a6:	681b      	ldr	r3, [r3, #0]
					if(player.yPos > (fires[j].yPos - 18 + 7) && 
200015a8:	4299      	cmp	r1, r3
200015aa:	da15      	bge.n	200015d8 <main+0x13dc>
							player.yPos < fires[j].yPos && distance_player_fire < 8 && distance_player_fire > -8) {
200015ac:	4b76      	ldr	r3, [pc, #472]	; (20001788 <main+0x158c>)
200015ae:	681b      	ldr	r3, [r3, #0]
200015b0:	2b07      	cmp	r3, #7
200015b2:	dc11      	bgt.n	200015d8 <main+0x13dc>
200015b4:	4b74      	ldr	r3, [pc, #464]	; (20001788 <main+0x158c>)
200015b6:	681b      	ldr	r3, [r3, #0]
200015b8:	3307      	adds	r3, #7
200015ba:	db0d      	blt.n	200015d8 <main+0x13dc>
						game_over_adder = 5;
200015bc:	2305      	movs	r3, #5
200015be:	4a73      	ldr	r2, [pc, #460]	; (2000178c <main+0x1590>)
200015c0:	18ba      	adds	r2, r7, r2
200015c2:	6013      	str	r3, [r2, #0]
						ascii_write("*FWOOSH*","");
200015c4:	4a72      	ldr	r2, [pc, #456]	; (20001790 <main+0x1594>)
200015c6:	4b73      	ldr	r3, [pc, #460]	; (20001794 <main+0x1598>)
200015c8:	0011      	movs	r1, r2
200015ca:	0018      	movs	r0, r3
200015cc:	f002 ff10 	bl	200043f0 <ascii_write>
						exploding = 1;
200015d0:	2301      	movs	r3, #1
200015d2:	4a71      	ldr	r2, [pc, #452]	; (20001798 <main+0x159c>)
200015d4:	18ba      	adds	r2, r7, r2
200015d6:	6013      	str	r3, [r2, #0]
				for(j = 0; j < 3; j++) {
200015d8:	4b69      	ldr	r3, [pc, #420]	; (20001780 <main+0x1584>)
200015da:	681b      	ldr	r3, [r3, #0]
200015dc:	1c5a      	adds	r2, r3, #1
200015de:	4b68      	ldr	r3, [pc, #416]	; (20001780 <main+0x1584>)
200015e0:	601a      	str	r2, [r3, #0]
200015e2:	4b67      	ldr	r3, [pc, #412]	; (20001780 <main+0x1584>)
200015e4:	681b      	ldr	r3, [r3, #0]
200015e6:	2b02      	cmp	r3, #2
200015e8:	dd96      	ble.n	20001518 <main+0x131c>
					}					
				}
				
				static int trophy_burned = 0;	//trophy burning
				static int distance_hair_trophy;
				distance_hair_trophy = (hair.xPos + 9) - (trophy.xPos + 5);
200015ea:	4b6c      	ldr	r3, [pc, #432]	; (2000179c <main+0x15a0>)
200015ec:	22a3      	movs	r2, #163	; 0xa3
200015ee:	00d2      	lsls	r2, r2, #3
200015f0:	4694      	mov	ip, r2
200015f2:	44bc      	add	ip, r7
200015f4:	4463      	add	r3, ip
200015f6:	685b      	ldr	r3, [r3, #4]
200015f8:	3309      	adds	r3, #9
200015fa:	001a      	movs	r2, r3
200015fc:	4b68      	ldr	r3, [pc, #416]	; (200017a0 <main+0x15a4>)
200015fe:	21a3      	movs	r1, #163	; 0xa3
20001600:	00c9      	lsls	r1, r1, #3
20001602:	468c      	mov	ip, r1
20001604:	44bc      	add	ip, r7
20001606:	4463      	add	r3, ip
20001608:	685b      	ldr	r3, [r3, #4]
2000160a:	3305      	adds	r3, #5
2000160c:	1ad2      	subs	r2, r2, r3
2000160e:	4b65      	ldr	r3, [pc, #404]	; (200017a4 <main+0x15a8>)
20001610:	601a      	str	r2, [r3, #0]
				if(!trophy_burned && abs(distance_hair_trophy) < 5) {
20001612:	4b65      	ldr	r3, [pc, #404]	; (200017a8 <main+0x15ac>)
20001614:	681b      	ldr	r3, [r3, #0]
20001616:	2b00      	cmp	r3, #0
20001618:	d136      	bne.n	20001688 <main+0x148c>
2000161a:	4b62      	ldr	r3, [pc, #392]	; (200017a4 <main+0x15a8>)
2000161c:	681b      	ldr	r3, [r3, #0]
2000161e:	3304      	adds	r3, #4
20001620:	db32      	blt.n	20001688 <main+0x148c>
20001622:	4b60      	ldr	r3, [pc, #384]	; (200017a4 <main+0x15a8>)
20001624:	681b      	ldr	r3, [r3, #0]
20001626:	2b04      	cmp	r3, #4
20001628:	dc2e      	bgt.n	20001688 <main+0x148c>
					trophy_burned = 1;
2000162a:	4b5f      	ldr	r3, [pc, #380]	; (200017a8 <main+0x15ac>)
2000162c:	2201      	movs	r2, #1
2000162e:	601a      	str	r2, [r3, #0]
					fires[1].xPos = trophy.xPos;
20001630:	4b5b      	ldr	r3, [pc, #364]	; (200017a0 <main+0x15a4>)
20001632:	22a3      	movs	r2, #163	; 0xa3
20001634:	00d2      	lsls	r2, r2, #3
20001636:	4694      	mov	ip, r2
20001638:	44bc      	add	ip, r7
2000163a:	4463      	add	r3, ip
2000163c:	685a      	ldr	r2, [r3, #4]
2000163e:	4b51      	ldr	r3, [pc, #324]	; (20001784 <main+0x1588>)
20001640:	21a3      	movs	r1, #163	; 0xa3
20001642:	00c9      	lsls	r1, r1, #3
20001644:	468c      	mov	ip, r1
20001646:	44bc      	add	ip, r7
20001648:	4463      	add	r3, ip
2000164a:	629a      	str	r2, [r3, #40]	; 0x28
					fires[1].yPos = trophy.yPos + 5;
2000164c:	4b54      	ldr	r3, [pc, #336]	; (200017a0 <main+0x15a4>)
2000164e:	22a3      	movs	r2, #163	; 0xa3
20001650:	00d2      	lsls	r2, r2, #3
20001652:	4694      	mov	ip, r2
20001654:	44bc      	add	ip, r7
20001656:	4463      	add	r3, ip
20001658:	689b      	ldr	r3, [r3, #8]
2000165a:	1d5a      	adds	r2, r3, #5
2000165c:	4b49      	ldr	r3, [pc, #292]	; (20001784 <main+0x1588>)
2000165e:	21a3      	movs	r1, #163	; 0xa3
20001660:	00c9      	lsls	r1, r1, #3
20001662:	468c      	mov	ip, r1
20001664:	44bc      	add	ip, r7
20001666:	4463      	add	r3, ip
20001668:	62da      	str	r2, [r3, #44]	; 0x2c
					trophy.xPos = 500;
2000166a:	4b4d      	ldr	r3, [pc, #308]	; (200017a0 <main+0x15a4>)
2000166c:	22a3      	movs	r2, #163	; 0xa3
2000166e:	00d2      	lsls	r2, r2, #3
20001670:	4694      	mov	ip, r2
20001672:	44bc      	add	ip, r7
20001674:	4463      	add	r3, ip
20001676:	22fa      	movs	r2, #250	; 0xfa
20001678:	0052      	lsls	r2, r2, #1
2000167a:	605a      	str	r2, [r3, #4]
					ascii_write("DAFFO:  ","        Oops...!");
2000167c:	4a4b      	ldr	r2, [pc, #300]	; (200017ac <main+0x15b0>)
2000167e:	4b4c      	ldr	r3, [pc, #304]	; (200017b0 <main+0x15b4>)
20001680:	0011      	movs	r1, r2
20001682:	0018      	movs	r0, r3
20001684:	f002 feb4 	bl	200043f0 <ascii_write>
				}
				
				static int DIP_burned = 0;
				static int distance_hair_DIP;
				distance_hair_DIP = (hair.xPos + 9) - (DIP.xPos + 9);
20001688:	4b44      	ldr	r3, [pc, #272]	; (2000179c <main+0x15a0>)
2000168a:	22a3      	movs	r2, #163	; 0xa3
2000168c:	00d2      	lsls	r2, r2, #3
2000168e:	4694      	mov	ip, r2
20001690:	44bc      	add	ip, r7
20001692:	4463      	add	r3, ip
20001694:	685b      	ldr	r3, [r3, #4]
20001696:	3309      	adds	r3, #9
20001698:	001a      	movs	r2, r3
2000169a:	4b46      	ldr	r3, [pc, #280]	; (200017b4 <main+0x15b8>)
2000169c:	21a3      	movs	r1, #163	; 0xa3
2000169e:	00c9      	lsls	r1, r1, #3
200016a0:	468c      	mov	ip, r1
200016a2:	44bc      	add	ip, r7
200016a4:	4463      	add	r3, ip
200016a6:	685b      	ldr	r3, [r3, #4]
200016a8:	3309      	adds	r3, #9
200016aa:	1ad2      	subs	r2, r2, r3
200016ac:	4b42      	ldr	r3, [pc, #264]	; (200017b8 <main+0x15bc>)
200016ae:	601a      	str	r2, [r3, #0]
				if(!DIP_burned && read_DIL_single(LIGHT_TRIGGER) && player.yPos > 10 && abs(distance_hair_DIP) < 5) {
200016b0:	4b42      	ldr	r3, [pc, #264]	; (200017bc <main+0x15c0>)
200016b2:	681b      	ldr	r3, [r3, #0]
200016b4:	2b00      	cmp	r3, #0
200016b6:	d140      	bne.n	2000173a <main+0x153e>
200016b8:	2006      	movs	r0, #6
200016ba:	f002 fca7 	bl	2000400c <read_DIL_single>
200016be:	1e03      	subs	r3, r0, #0
200016c0:	d03b      	beq.n	2000173a <main+0x153e>
200016c2:	4b2e      	ldr	r3, [pc, #184]	; (2000177c <main+0x1580>)
200016c4:	22a3      	movs	r2, #163	; 0xa3
200016c6:	00d2      	lsls	r2, r2, #3
200016c8:	4694      	mov	ip, r2
200016ca:	44bc      	add	ip, r7
200016cc:	4463      	add	r3, ip
200016ce:	689b      	ldr	r3, [r3, #8]
200016d0:	2b0a      	cmp	r3, #10
200016d2:	dd32      	ble.n	2000173a <main+0x153e>
200016d4:	4b38      	ldr	r3, [pc, #224]	; (200017b8 <main+0x15bc>)
200016d6:	681b      	ldr	r3, [r3, #0]
200016d8:	3304      	adds	r3, #4
200016da:	db2e      	blt.n	2000173a <main+0x153e>
200016dc:	4b36      	ldr	r3, [pc, #216]	; (200017b8 <main+0x15bc>)
200016de:	681b      	ldr	r3, [r3, #0]
200016e0:	2b04      	cmp	r3, #4
200016e2:	dc2a      	bgt.n	2000173a <main+0x153e>
					ascii_write("DIPs-WITCH:","         ARHGRGHR!");
200016e4:	4a36      	ldr	r2, [pc, #216]	; (200017c0 <main+0x15c4>)
200016e6:	4b37      	ldr	r3, [pc, #220]	; (200017c4 <main+0x15c8>)
200016e8:	0011      	movs	r1, r2
200016ea:	0018      	movs	r0, r3
200016ec:	f002 fe80 	bl	200043f0 <ascii_write>
					DIP_burned = 1;
200016f0:	4b32      	ldr	r3, [pc, #200]	; (200017bc <main+0x15c0>)
200016f2:	2201      	movs	r2, #1
200016f4:	601a      	str	r2, [r3, #0]
					fires[2].xPos = DIP.xPos;
200016f6:	4b2f      	ldr	r3, [pc, #188]	; (200017b4 <main+0x15b8>)
200016f8:	22a3      	movs	r2, #163	; 0xa3
200016fa:	00d2      	lsls	r2, r2, #3
200016fc:	4694      	mov	ip, r2
200016fe:	44bc      	add	ip, r7
20001700:	4463      	add	r3, ip
20001702:	685a      	ldr	r2, [r3, #4]
20001704:	4b1f      	ldr	r3, [pc, #124]	; (20001784 <main+0x1588>)
20001706:	21a3      	movs	r1, #163	; 0xa3
20001708:	00c9      	lsls	r1, r1, #3
2000170a:	468c      	mov	ip, r1
2000170c:	44bc      	add	ip, r7
2000170e:	4463      	add	r3, ip
20001710:	64da      	str	r2, [r3, #76]	; 0x4c
					fires[2].yPos = DIP.yPos + 6;
20001712:	4b28      	ldr	r3, [pc, #160]	; (200017b4 <main+0x15b8>)
20001714:	22a3      	movs	r2, #163	; 0xa3
20001716:	00d2      	lsls	r2, r2, #3
20001718:	4694      	mov	ip, r2
2000171a:	44bc      	add	ip, r7
2000171c:	4463      	add	r3, ip
2000171e:	689b      	ldr	r3, [r3, #8]
20001720:	1d9a      	adds	r2, r3, #6
20001722:	4b18      	ldr	r3, [pc, #96]	; (20001784 <main+0x1588>)
20001724:	21a3      	movs	r1, #163	; 0xa3
20001726:	00c9      	lsls	r1, r1, #3
20001728:	468c      	mov	ip, r1
2000172a:	44bc      	add	ip, r7
2000172c:	4463      	add	r3, ip
2000172e:	651a      	str	r2, [r3, #80]	; 0x50
					no_DIP = 1;
20001730:	2301      	movs	r3, #1
20001732:	22a0      	movs	r2, #160	; 0xa0
20001734:	00d2      	lsls	r2, r2, #3
20001736:	18ba      	adds	r2, r7, r2
20001738:	6013      	str	r3, [r2, #0]
				}
				
				lastFireTrigger = read_DIL_single(HAIR_TRIGGER);
2000173a:	2001      	movs	r0, #1
2000173c:	f002 fc66 	bl	2000400c <read_DIL_single>
20001740:	0003      	movs	r3, r0
20001742:	4a21      	ldr	r2, [pc, #132]	; (200017c8 <main+0x15cc>)
20001744:	18ba      	adds	r2, r7, r2
20001746:	6013      	str	r3, [r2, #0]
				
				game_over += game_over_adder;
20001748:	23a1      	movs	r3, #161	; 0xa1
2000174a:	00db      	lsls	r3, r3, #3
2000174c:	18fb      	adds	r3, r7, r3
2000174e:	681a      	ldr	r2, [r3, #0]
20001750:	4b0e      	ldr	r3, [pc, #56]	; (2000178c <main+0x1590>)
20001752:	18fb      	adds	r3, r7, r3
20001754:	681b      	ldr	r3, [r3, #0]
20001756:	18d3      	adds	r3, r2, r3
20001758:	22a1      	movs	r2, #161	; 0xa1
2000175a:	00d2      	lsls	r2, r2, #3
2000175c:	18ba      	adds	r2, r7, r2
2000175e:	6013      	str	r3, [r2, #0]
				
				if(game_over >= 100) {
20001760:	23a1      	movs	r3, #161	; 0xa1
20001762:	00db      	lsls	r3, r3, #3
20001764:	18fb      	adds	r3, r7, r3
20001766:	681b      	ldr	r3, [r3, #0]
20001768:	2b63      	cmp	r3, #99	; 0x63
2000176a:	dc00      	bgt.n	2000176e <main+0x1572>
2000176c:	e16e      	b.n	20001a4c <main+0x1850>
					current_screen = GAME_OVER_SCREEN;
2000176e:	4b17      	ldr	r3, [pc, #92]	; (200017cc <main+0x15d0>)
20001770:	2203      	movs	r2, #3
20001772:	601a      	str	r2, [r3, #0]
					counter = 0;
20001774:	4b16      	ldr	r3, [pc, #88]	; (200017d0 <main+0x15d4>)
20001776:	2200      	movs	r2, #0
20001778:	601a      	str	r2, [r3, #0]
				}
				
				break;
2000177a:	e167      	b.n	20001a4c <main+0x1850>
2000177c:	fffffd80 			; <UNDEFINED> instruction: 0xfffffd80
20001780:	20004f4c 	andcs	r4, r0, ip, asr #30
20001784:	fffffc18 			; <UNDEFINED> instruction: 0xfffffc18
20001788:	20004f50 	andcs	r4, r0, r0, asr pc
2000178c:	00000504 	andeq	r0, r0, r4, lsl #10
20001790:	20014668 	andcs	r4, r1, r8, ror #12
20001794:	200146dc 	ldrdcs	r4, [r1], -ip
20001798:	000004fc 	strdeq	r0, [r0], -ip
2000179c:	fffffe10 			; <UNDEFINED> instruction: 0xfffffe10
200017a0:	fffffe34 			; <UNDEFINED> instruction: 0xfffffe34
200017a4:	20004f54 	andcs	r4, r0, r4, asr pc
200017a8:	20004f58 	andcs	r4, r0, r8, asr pc
200017ac:	200146e8 	andcs	r4, r1, r8, ror #13
200017b0:	200146fc 	strdcs	r4, [r1], -ip
200017b4:	fffffda4 			; <UNDEFINED> instruction: 0xfffffda4
200017b8:	20004f5c 	andcs	r4, r0, ip, asr pc
200017bc:	20004f60 	andcs	r4, r0, r0, ror #30
200017c0:	20014708 	andcs	r4, r1, r8, lsl #14
200017c4:	20014608 	andcs	r4, r1, r8, lsl #12
200017c8:	000004f4 	strdeq	r0, [r0], -r4
200017cc:	20009188 	andcs	r9, r0, r8, lsl #3
200017d0:	20004f44 	andcs	r4, r0, r4, asr #30
				
			
			case RESET_GAME: //restart
				counter = 0;
200017d4:	4ba2      	ldr	r3, [pc, #648]	; (20001a60 <main+0x1864>)
200017d6:	2200      	movs	r2, #0
200017d8:	601a      	str	r2, [r3, #0]
				current_screen = START_SCREEN;
200017da:	4ba2      	ldr	r3, [pc, #648]	; (20001a64 <main+0x1868>)
200017dc:	2201      	movs	r2, #1
200017de:	601a      	str	r2, [r3, #0]
				if(read_DIL() == 0) {
200017e0:	f002 fc04 	bl	20003fec <read_DIL>
200017e4:	1e03      	subs	r3, r0, #0
200017e6:	d102      	bne.n	200017ee <main+0x15f2>
					current_screen = SWITCH_LOCK; 
200017e8:	4b9e      	ldr	r3, [pc, #632]	; (20001a64 <main+0x1868>)
200017ea:	2200      	movs	r2, #0
200017ec:	601a      	str	r2, [r3, #0]
				}
	
				static int test = 0;
				test+=2;
200017ee:	4b9e      	ldr	r3, [pc, #632]	; (20001a68 <main+0x186c>)
200017f0:	681b      	ldr	r3, [r3, #0]
200017f2:	1c9a      	adds	r2, r3, #2
200017f4:	4b9c      	ldr	r3, [pc, #624]	; (20001a68 <main+0x186c>)
200017f6:	601a      	str	r2, [r3, #0]
				
				roger.yPos = 80;
200017f8:	4b9c      	ldr	r3, [pc, #624]	; (20001a6c <main+0x1870>)
200017fa:	22a3      	movs	r2, #163	; 0xa3
200017fc:	00d2      	lsls	r2, r2, #3
200017fe:	4694      	mov	ip, r2
20001800:	44bc      	add	ip, r7
20001802:	4463      	add	r3, ip
20001804:	2250      	movs	r2, #80	; 0x50
20001806:	609a      	str	r2, [r3, #8]
				final_show_count = 8192;
20001808:	2380      	movs	r3, #128	; 0x80
2000180a:	019b      	lsls	r3, r3, #6
2000180c:	229e      	movs	r2, #158	; 0x9e
2000180e:	00d2      	lsls	r2, r2, #3
20001810:	18ba      	adds	r2, r7, r2
20001812:	6013      	str	r3, [r2, #0]
				boom.current_frame = 0;
20001814:	4b96      	ldr	r3, [pc, #600]	; (20001a70 <main+0x1874>)
20001816:	22a3      	movs	r2, #163	; 0xa3
20001818:	00d2      	lsls	r2, r2, #3
2000181a:	4694      	mov	ip, r2
2000181c:	44bc      	add	ip, r7
2000181e:	4463      	add	r3, ip
20001820:	2200      	movs	r2, #0
20001822:	615a      	str	r2, [r3, #20]
				first = 1;
20001824:	2301      	movs	r3, #1
20001826:	229f      	movs	r2, #159	; 0x9f
20001828:	00d2      	lsls	r2, r2, #3
2000182a:	18ba      	adds	r2, r7, r2
2000182c:	6013      	str	r3, [r2, #0]
				exploding = 0;
2000182e:	2300      	movs	r3, #0
20001830:	4a90      	ldr	r2, [pc, #576]	; (20001a74 <main+0x1878>)
20001832:	18ba      	adds	r2, r7, r2
20001834:	6013      	str	r3, [r2, #0]
				is_climbing = 0;
20001836:	2300      	movs	r3, #0
20001838:	22a2      	movs	r2, #162	; 0xa2
2000183a:	00d2      	lsls	r2, r2, #3
2000183c:	18ba      	adds	r2, r7, r2
2000183e:	6013      	str	r3, [r2, #0]
				has_climbed = 0;
20001840:	2300      	movs	r3, #0
20001842:	4a8d      	ldr	r2, [pc, #564]	; (20001a78 <main+0x187c>)
20001844:	18ba      	adds	r2, r7, r2
20001846:	6013      	str	r3, [r2, #0]
				game_over = 0;
20001848:	2300      	movs	r3, #0
2000184a:	22a1      	movs	r2, #161	; 0xa1
2000184c:	00d2      	lsls	r2, r2, #3
2000184e:	18ba      	adds	r2, r7, r2
20001850:	6013      	str	r3, [r2, #0]
				game_over_adder = 0;
20001852:	2300      	movs	r3, #0
20001854:	4a89      	ldr	r2, [pc, #548]	; (20001a7c <main+0x1880>)
20001856:	18ba      	adds	r2, r7, r2
20001858:	6013      	str	r3, [r2, #0]
				fires[0].xPos = 40;		//FIRE1_INDO
2000185a:	4b89      	ldr	r3, [pc, #548]	; (20001a80 <main+0x1884>)
2000185c:	22a3      	movs	r2, #163	; 0xa3
2000185e:	00d2      	lsls	r2, r2, #3
20001860:	4694      	mov	ip, r2
20001862:	44bc      	add	ip, r7
20001864:	4463      	add	r3, ip
20001866:	2228      	movs	r2, #40	; 0x28
20001868:	605a      	str	r2, [r3, #4]
				fires[0].yPos = 64-12-8;
2000186a:	4b85      	ldr	r3, [pc, #532]	; (20001a80 <main+0x1884>)
2000186c:	22a3      	movs	r2, #163	; 0xa3
2000186e:	00d2      	lsls	r2, r2, #3
20001870:	4694      	mov	ip, r2
20001872:	44bc      	add	ip, r7
20001874:	4463      	add	r3, ip
20001876:	222c      	movs	r2, #44	; 0x2c
20001878:	609a      	str	r2, [r3, #8]
				fires[2].xPos = -50;		//FIRE1_INDO
2000187a:	4b81      	ldr	r3, [pc, #516]	; (20001a80 <main+0x1884>)
2000187c:	22a3      	movs	r2, #163	; 0xa3
2000187e:	00d2      	lsls	r2, r2, #3
20001880:	4694      	mov	ip, r2
20001882:	44bc      	add	ip, r7
20001884:	4463      	add	r3, ip
20001886:	2232      	movs	r2, #50	; 0x32
20001888:	4252      	negs	r2, r2
2000188a:	64da      	str	r2, [r3, #76]	; 0x4c
				fires[2].yPos = -50;
2000188c:	4b7c      	ldr	r3, [pc, #496]	; (20001a80 <main+0x1884>)
2000188e:	22a3      	movs	r2, #163	; 0xa3
20001890:	00d2      	lsls	r2, r2, #3
20001892:	4694      	mov	ip, r2
20001894:	44bc      	add	ip, r7
20001896:	4463      	add	r3, ip
20001898:	2232      	movs	r2, #50	; 0x32
2000189a:	4252      	negs	r2, r2
2000189c:	651a      	str	r2, [r3, #80]	; 0x50
				fires[1].xPos = -50;		//FIRE1_INDO
2000189e:	4b78      	ldr	r3, [pc, #480]	; (20001a80 <main+0x1884>)
200018a0:	22a3      	movs	r2, #163	; 0xa3
200018a2:	00d2      	lsls	r2, r2, #3
200018a4:	4694      	mov	ip, r2
200018a6:	44bc      	add	ip, r7
200018a8:	4463      	add	r3, ip
200018aa:	2232      	movs	r2, #50	; 0x32
200018ac:	4252      	negs	r2, r2
200018ae:	629a      	str	r2, [r3, #40]	; 0x28
				fires[1].yPos = -50;
200018b0:	4b73      	ldr	r3, [pc, #460]	; (20001a80 <main+0x1884>)
200018b2:	22a3      	movs	r2, #163	; 0xa3
200018b4:	00d2      	lsls	r2, r2, #3
200018b6:	4694      	mov	ip, r2
200018b8:	44bc      	add	ip, r7
200018ba:	4463      	add	r3, ip
200018bc:	2232      	movs	r2, #50	; 0x32
200018be:	4252      	negs	r2, r2
200018c0:	62da      	str	r2, [r3, #44]	; 0x2c
				bird.xPos = 180;
200018c2:	4b70      	ldr	r3, [pc, #448]	; (20001a84 <main+0x1888>)
200018c4:	22a3      	movs	r2, #163	; 0xa3
200018c6:	00d2      	lsls	r2, r2, #3
200018c8:	4694      	mov	ip, r2
200018ca:	44bc      	add	ip, r7
200018cc:	4463      	add	r3, ip
200018ce:	22b4      	movs	r2, #180	; 0xb4
200018d0:	605a      	str	r2, [r3, #4]
				bird.yPos = 40;
200018d2:	4b6c      	ldr	r3, [pc, #432]	; (20001a84 <main+0x1888>)
200018d4:	22a3      	movs	r2, #163	; 0xa3
200018d6:	00d2      	lsls	r2, r2, #3
200018d8:	4694      	mov	ip, r2
200018da:	44bc      	add	ip, r7
200018dc:	4463      	add	r3, ip
200018de:	2228      	movs	r2, #40	; 0x28
200018e0:	609a      	str	r2, [r3, #8]
				
				trophy.xPos = 24;
200018e2:	4b69      	ldr	r3, [pc, #420]	; (20001a88 <main+0x188c>)
200018e4:	22a3      	movs	r2, #163	; 0xa3
200018e6:	00d2      	lsls	r2, r2, #3
200018e8:	4694      	mov	ip, r2
200018ea:	44bc      	add	ip, r7
200018ec:	4463      	add	r3, ip
200018ee:	2218      	movs	r2, #24
200018f0:	605a      	str	r2, [r3, #4]
				trophy.yPos = 5;
200018f2:	4b65      	ldr	r3, [pc, #404]	; (20001a88 <main+0x188c>)
200018f4:	22a3      	movs	r2, #163	; 0xa3
200018f6:	00d2      	lsls	r2, r2, #3
200018f8:	4694      	mov	ip, r2
200018fa:	44bc      	add	ip, r7
200018fc:	4463      	add	r3, ip
200018fe:	2205      	movs	r2, #5
20001900:	609a      	str	r2, [r3, #8]
				trophy_burned = 0;
20001902:	4b62      	ldr	r3, [pc, #392]	; (20001a8c <main+0x1890>)
20001904:	2200      	movs	r2, #0
20001906:	601a      	str	r2, [r3, #0]
				
				DIP.xPos = 100;
20001908:	4b61      	ldr	r3, [pc, #388]	; (20001a90 <main+0x1894>)
2000190a:	22a3      	movs	r2, #163	; 0xa3
2000190c:	00d2      	lsls	r2, r2, #3
2000190e:	4694      	mov	ip, r2
20001910:	44bc      	add	ip, r7
20001912:	4463      	add	r3, ip
20001914:	2264      	movs	r2, #100	; 0x64
20001916:	605a      	str	r2, [r3, #4]
				DIP.yPos = 5;
20001918:	4b5d      	ldr	r3, [pc, #372]	; (20001a90 <main+0x1894>)
2000191a:	22a3      	movs	r2, #163	; 0xa3
2000191c:	00d2      	lsls	r2, r2, #3
2000191e:	4694      	mov	ip, r2
20001920:	44bc      	add	ip, r7
20001922:	4463      	add	r3, ip
20001924:	2205      	movs	r2, #5
20001926:	609a      	str	r2, [r3, #8]
				DIP_burned = 0;
20001928:	4b5a      	ldr	r3, [pc, #360]	; (20001a94 <main+0x1898>)
2000192a:	2200      	movs	r2, #0
2000192c:	601a      	str	r2, [r3, #0]
				no_DIP = 0;
2000192e:	2300      	movs	r3, #0
20001930:	22a0      	movs	r2, #160	; 0xa0
20001932:	00d2      	lsls	r2, r2, #3
20001934:	18ba      	adds	r2, r7, r2
20001936:	6013      	str	r3, [r2, #0]
				
				lastFireTrigger = 0;
20001938:	2300      	movs	r3, #0
2000193a:	4a57      	ldr	r2, [pc, #348]	; (20001a98 <main+0x189c>)
2000193c:	18ba      	adds	r2, r7, r2
2000193e:	6013      	str	r3, [r2, #0]
				game_over_counter = 0;
20001940:	2300      	movs	r3, #0
20001942:	4a56      	ldr	r2, [pc, #344]	; (20001a9c <main+0x18a0>)
20001944:	18ba      	adds	r2, r7, r2
20001946:	6013      	str	r3, [r2, #0]
				
				playerReset();
20001948:	f000 fa42 	bl	20001dd0 <playerReset>
				player.xPos = 3;
2000194c:	4b54      	ldr	r3, [pc, #336]	; (20001aa0 <main+0x18a4>)
2000194e:	22a3      	movs	r2, #163	; 0xa3
20001950:	00d2      	lsls	r2, r2, #3
20001952:	4694      	mov	ip, r2
20001954:	44bc      	add	ip, r7
20001956:	4463      	add	r3, ip
20001958:	2203      	movs	r2, #3
2000195a:	605a      	str	r2, [r3, #4]
				player.yPos = 64-18-7; //player position
2000195c:	4b50      	ldr	r3, [pc, #320]	; (20001aa0 <main+0x18a4>)
2000195e:	22a3      	movs	r2, #163	; 0xa3
20001960:	00d2      	lsls	r2, r2, #3
20001962:	4694      	mov	ip, r2
20001964:	44bc      	add	ip, r7
20001966:	4463      	add	r3, ip
20001968:	2227      	movs	r2, #39	; 0x27
2000196a:	609a      	str	r2, [r3, #8]
				//clear_ascii();
				ascii_write("                    ","                    ");
2000196c:	4a4d      	ldr	r2, [pc, #308]	; (20001aa4 <main+0x18a8>)
2000196e:	4b4d      	ldr	r3, [pc, #308]	; (20001aa4 <main+0x18a8>)
20001970:	0011      	movs	r1, r2
20001972:	0018      	movs	r0, r3
20001974:	f002 fd3c 	bl	200043f0 <ascii_write>
				break;
20001978:	e06f      	b.n	20001a5a <main+0x185e>
				
				
			case WIN_SCREEN:
				draw_game_object( &roger );
2000197a:	23f7      	movs	r3, #247	; 0xf7
2000197c:	009b      	lsls	r3, r3, #2
2000197e:	18fb      	adds	r3, r7, r3
20001980:	0018      	movs	r0, r3
20001982:	f002 fa89 	bl	20003e98 <draw_game_object>
				if(roger.yPos > 1) {
20001986:	4b39      	ldr	r3, [pc, #228]	; (20001a6c <main+0x1870>)
20001988:	22a3      	movs	r2, #163	; 0xa3
2000198a:	00d2      	lsls	r2, r2, #3
2000198c:	4694      	mov	ip, r2
2000198e:	44bc      	add	ip, r7
20001990:	4463      	add	r3, ip
20001992:	689b      	ldr	r3, [r3, #8]
20001994:	2b01      	cmp	r3, #1
20001996:	dd0e      	ble.n	200019b6 <main+0x17ba>
					roger.yPos--;
20001998:	4b34      	ldr	r3, [pc, #208]	; (20001a6c <main+0x1870>)
2000199a:	22a3      	movs	r2, #163	; 0xa3
2000199c:	00d2      	lsls	r2, r2, #3
2000199e:	4694      	mov	ip, r2
200019a0:	44bc      	add	ip, r7
200019a2:	4463      	add	r3, ip
200019a4:	689b      	ldr	r3, [r3, #8]
200019a6:	1e5a      	subs	r2, r3, #1
200019a8:	4b30      	ldr	r3, [pc, #192]	; (20001a6c <main+0x1870>)
200019aa:	21a3      	movs	r1, #163	; 0xa3
200019ac:	00c9      	lsls	r1, r1, #3
200019ae:	468c      	mov	ip, r1
200019b0:	44bc      	add	ip, r7
200019b2:	4463      	add	r3, ip
200019b4:	609a      	str	r2, [r3, #8]
				}
				show_frame(1);
200019b6:	2001      	movs	r0, #1
200019b8:	f002 faaf 	bl	20003f1a <show_frame>
				counter++;
200019bc:	4b28      	ldr	r3, [pc, #160]	; (20001a60 <main+0x1864>)
200019be:	681b      	ldr	r3, [r3, #0]
200019c0:	1c5a      	adds	r2, r3, #1
200019c2:	4b27      	ldr	r3, [pc, #156]	; (20001a60 <main+0x1864>)
200019c4:	601a      	str	r2, [r3, #0]
				if(counter > 72) {
200019c6:	4b26      	ldr	r3, [pc, #152]	; (20001a60 <main+0x1864>)
200019c8:	681b      	ldr	r3, [r3, #0]
200019ca:	2b48      	cmp	r3, #72	; 0x48
200019cc:	dd41      	ble.n	20001a52 <main+0x1856>
					display(&textWin, 20);
200019ce:	1d3b      	adds	r3, r7, #4
200019d0:	2114      	movs	r1, #20
200019d2:	0018      	movs	r0, r3
200019d4:	f002 fdc4 	bl	20004560 <display>
				}
				break;
200019d8:	e03b      	b.n	20001a52 <main+0x1856>
				
			case GAME_OVER_SCREEN:
				draw_game_object(&game_over_witch);
200019da:	23ee      	movs	r3, #238	; 0xee
200019dc:	009b      	lsls	r3, r3, #2
200019de:	18fb      	adds	r3, r7, r3
200019e0:	0018      	movs	r0, r3
200019e2:	f002 fa59 	bl	20003e98 <draw_game_object>
				show_frame(1);
200019e6:	2001      	movs	r0, #1
200019e8:	f002 fa97 	bl	20003f1a <show_frame>
				game_over_witch.update(&game_over_witch);
200019ec:	4b2e      	ldr	r3, [pc, #184]	; (20001aa8 <main+0x18ac>)
200019ee:	22a3      	movs	r2, #163	; 0xa3
200019f0:	00d2      	lsls	r2, r2, #3
200019f2:	4694      	mov	ip, r2
200019f4:	44bc      	add	ip, r7
200019f6:	4463      	add	r3, ip
200019f8:	68db      	ldr	r3, [r3, #12]
200019fa:	22ee      	movs	r2, #238	; 0xee
200019fc:	0092      	lsls	r2, r2, #2
200019fe:	18ba      	adds	r2, r7, r2
20001a00:	0010      	movs	r0, r2
20001a02:	4798      	blx	r3
				
				
				game_over_counter++;
20001a04:	4b25      	ldr	r3, [pc, #148]	; (20001a9c <main+0x18a0>)
20001a06:	18fb      	adds	r3, r7, r3
20001a08:	681b      	ldr	r3, [r3, #0]
20001a0a:	3301      	adds	r3, #1
20001a0c:	4a23      	ldr	r2, [pc, #140]	; (20001a9c <main+0x18a0>)
20001a0e:	18ba      	adds	r2, r7, r2
20001a10:	6013      	str	r3, [r2, #0]
				if (game_over_counter > 5) {
20001a12:	4b22      	ldr	r3, [pc, #136]	; (20001a9c <main+0x18a0>)
20001a14:	18fb      	adds	r3, r7, r3
20001a16:	681b      	ldr	r3, [r3, #0]
20001a18:	2b05      	cmp	r3, #5
20001a1a:	dd0b      	ble.n	20001a34 <main+0x1838>
					textGameOver.display(&textGameOver, 15);
20001a1c:	4b23      	ldr	r3, [pc, #140]	; (20001aac <main+0x18b0>)
20001a1e:	22a3      	movs	r2, #163	; 0xa3
20001a20:	00d2      	lsls	r2, r2, #3
20001a22:	4694      	mov	ip, r2
20001a24:	44bc      	add	ip, r7
20001a26:	4463      	add	r3, ip
20001a28:	691b      	ldr	r3, [r3, #16]
20001a2a:	2218      	movs	r2, #24
20001a2c:	18ba      	adds	r2, r7, r2
20001a2e:	210f      	movs	r1, #15
20001a30:	0010      	movs	r0, r2
20001a32:	4798      	blx	r3
				}
				
				if (game_over_counter > 50){
20001a34:	4b19      	ldr	r3, [pc, #100]	; (20001a9c <main+0x18a0>)
20001a36:	18fb      	adds	r3, r7, r3
20001a38:	681b      	ldr	r3, [r3, #0]
20001a3a:	2b32      	cmp	r3, #50	; 0x32
20001a3c:	dd0c      	ble.n	20001a58 <main+0x185c>
					current_screen = RESET_GAME;
20001a3e:	4b09      	ldr	r3, [pc, #36]	; (20001a64 <main+0x1868>)
20001a40:	220a      	movs	r2, #10
20001a42:	601a      	str	r2, [r3, #0]
				}
			break;
20001a44:	e008      	b.n	20001a58 <main+0x185c>
				break;
20001a46:	46c0      	nop			; (mov r8, r8)
20001a48:	f7fe ff6b 	bl	20000922 <main+0x726>
				break;
20001a4c:	46c0      	nop			; (mov r8, r8)
20001a4e:	f7fe ff68 	bl	20000922 <main+0x726>
				break;
20001a52:	46c0      	nop			; (mov r8, r8)
20001a54:	f7fe ff65 	bl	20000922 <main+0x726>
			break;
20001a58:	46c0      	nop			; (mov r8, r8)
		switch(current_screen) {
20001a5a:	f7fe ff62 	bl	20000922 <main+0x726>
20001a5e:	46c0      	nop			; (mov r8, r8)
20001a60:	20004f44 	andcs	r4, r0, r4, asr #30
20001a64:	20009188 	andcs	r9, r0, r8, lsl #3
20001a68:	20004f64 	andcs	r4, r0, r4, ror #30
20001a6c:	fffffec4 			; <UNDEFINED> instruction: 0xfffffec4
20001a70:	fffffdc8 			; <UNDEFINED> instruction: 0xfffffdc8
20001a74:	000004fc 	strdeq	r0, [r0], -ip
20001a78:	0000050c 	andeq	r0, r0, ip, lsl #10
20001a7c:	00000504 	andeq	r0, r0, r4, lsl #10
20001a80:	fffffc18 			; <UNDEFINED> instruction: 0xfffffc18
20001a84:	fffffdec 			; <UNDEFINED> instruction: 0xfffffdec
20001a88:	fffffe34 			; <UNDEFINED> instruction: 0xfffffe34
20001a8c:	20004f58 	andcs	r4, r0, r8, asr pc
20001a90:	fffffda4 			; <UNDEFINED> instruction: 0xfffffda4
20001a94:	20004f60 	andcs	r4, r0, r0, ror #30
20001a98:	000004f4 	strdeq	r0, [r0], -r4
20001a9c:	00000514 	andeq	r0, r0, r4, lsl r5
20001aa0:	fffffd80 			; <UNDEFINED> instruction: 0xfffffd80
20001aa4:	2001471c 	andcs	r4, r1, ip, lsl r7
20001aa8:	fffffea0 			; <UNDEFINED> instruction: 0xfffffea0
20001aac:	fffffb00 			; <UNDEFINED> instruction: 0xfffffb00

20001ab0 <abs>:
		
	}
	
}

int abs(int value) {
20001ab0:	b580      	push	{r7, lr}
20001ab2:	b082      	sub	sp, #8
20001ab4:	af00      	add	r7, sp, #0
20001ab6:	6078      	str	r0, [r7, #4]
	if(value < 0) {
20001ab8:	687b      	ldr	r3, [r7, #4]
20001aba:	2b00      	cmp	r3, #0
20001abc:	da02      	bge.n	20001ac4 <abs+0x14>
		return -value;
20001abe:	687b      	ldr	r3, [r7, #4]
20001ac0:	425b      	negs	r3, r3
20001ac2:	e000      	b.n	20001ac6 <abs+0x16>
	}
	return value;
20001ac4:	687b      	ldr	r3, [r7, #4]
}
20001ac6:	0018      	movs	r0, r3
20001ac8:	46bd      	mov	sp, r7
20001aca:	b002      	add	sp, #8
20001acc:	bd80      	pop	{r7, pc}
20001ace:	46c0      	nop			; (mov r8, r8)

20001ad0 <render>:
GameObject* gameObjects[100];
int nGameObjects = 0;


void render(GameObject* this)
{
20001ad0:	b580      	push	{r7, lr}
20001ad2:	b082      	sub	sp, #8
20001ad4:	af00      	add	r7, sp, #0
20001ad6:	6078      	str	r0, [r7, #4]
    
}
20001ad8:	46c0      	nop			; (mov r8, r8)
20001ada:	46bd      	mov	sp, r7
20001adc:	b002      	add	sp, #8
20001ade:	bd80      	pop	{r7, pc}

20001ae0 <gameObjectUpdate>:

void gameObjectUpdate(GameObject *this) {
20001ae0:	b580      	push	{r7, lr}
20001ae2:	b082      	sub	sp, #8
20001ae4:	af00      	add	r7, sp, #0
20001ae6:	6078      	str	r0, [r7, #4]
	this->animation_counter++;
20001ae8:	687b      	ldr	r3, [r7, #4]
20001aea:	6a1b      	ldr	r3, [r3, #32]
20001aec:	1c5a      	adds	r2, r3, #1
20001aee:	687b      	ldr	r3, [r7, #4]
20001af0:	621a      	str	r2, [r3, #32]
	if (this->animation_counter == this->animation_speed) {
20001af2:	687b      	ldr	r3, [r7, #4]
20001af4:	6a1a      	ldr	r2, [r3, #32]
20001af6:	687b      	ldr	r3, [r7, #4]
20001af8:	69db      	ldr	r3, [r3, #28]
20001afa:	429a      	cmp	r2, r3
20001afc:	d10f      	bne.n	20001b1e <gameObjectUpdate+0x3e>
		this->animation_counter = 0;
20001afe:	687b      	ldr	r3, [r7, #4]
20001b00:	2200      	movs	r2, #0
20001b02:	621a      	str	r2, [r3, #32]
		this->current_frame = (this->current_frame + 1) % this->n_frames;
20001b04:	687b      	ldr	r3, [r7, #4]
20001b06:	695b      	ldr	r3, [r3, #20]
20001b08:	1c5a      	adds	r2, r3, #1
20001b0a:	687b      	ldr	r3, [r7, #4]
20001b0c:	699b      	ldr	r3, [r3, #24]
20001b0e:	0019      	movs	r1, r3
20001b10:	0010      	movs	r0, r2
20001b12:	f003 fa11 	bl	20004f38 <__aeabi_idivmod>
20001b16:	000b      	movs	r3, r1
20001b18:	001a      	movs	r2, r3
20001b1a:	687b      	ldr	r3, [r7, #4]
20001b1c:	615a      	str	r2, [r3, #20]
	}
}
20001b1e:	46c0      	nop			; (mov r8, r8)
20001b20:	46bd      	mov	sp, r7
20001b22:	b002      	add	sp, #8
20001b24:	bd80      	pop	{r7, pc}
	...

20001b28 <initSprites>:
Image fire2Image;
Image fire3Image;
Image fire4Image;
Image fire5Image;
Image fireImages[5];
static void initSprites( void ) {	
20001b28:	b580      	push	{r7, lr}
20001b2a:	b08c      	sub	sp, #48	; 0x30
20001b2c:	af00      	add	r7, sp, #0
	sprite *pointer0 = &tempFireBlack;
20001b2e:	4b3e      	ldr	r3, [pc, #248]	; (20001c28 <initSprites+0x100>)
20001b30:	62fb      	str	r3, [r7, #44]	; 0x2c
	load_sprite(pointer0, fire_black_2_bits, fire1_gray_width, fire1_gray_height);
20001b32:	493e      	ldr	r1, [pc, #248]	; (20001c2c <initSprites+0x104>)
20001b34:	6af8      	ldr	r0, [r7, #44]	; 0x2c
20001b36:	230c      	movs	r3, #12
20001b38:	2208      	movs	r2, #8
20001b3a:	f002 fa37 	bl	20003fac <load_sprite>
	fireBlack = pointer0;
20001b3e:	4b3c      	ldr	r3, [pc, #240]	; (20001c30 <initSprites+0x108>)
20001b40:	6afa      	ldr	r2, [r7, #44]	; 0x2c
20001b42:	601a      	str	r2, [r3, #0]
	
	sprite *pointer1 = &tempFire1Gray;
20001b44:	4b3b      	ldr	r3, [pc, #236]	; (20001c34 <initSprites+0x10c>)
20001b46:	62bb      	str	r3, [r7, #40]	; 0x28
	load_sprite(pointer1, fire1_gray_bits, fire1_gray_width, fire1_gray_height);
20001b48:	493b      	ldr	r1, [pc, #236]	; (20001c38 <initSprites+0x110>)
20001b4a:	6ab8      	ldr	r0, [r7, #40]	; 0x28
20001b4c:	230c      	movs	r3, #12
20001b4e:	2208      	movs	r2, #8
20001b50:	f002 fa2c 	bl	20003fac <load_sprite>
	fire1Gray = pointer1;
20001b54:	4b39      	ldr	r3, [pc, #228]	; (20001c3c <initSprites+0x114>)
20001b56:	6aba      	ldr	r2, [r7, #40]	; 0x28
20001b58:	601a      	str	r2, [r3, #0]

	sprite *pointer2 = &tempFire1Light;
20001b5a:	4b39      	ldr	r3, [pc, #228]	; (20001c40 <initSprites+0x118>)
20001b5c:	627b      	str	r3, [r7, #36]	; 0x24
	load_sprite(pointer2, fire1_light_bits, fire1_gray_width, fire1_gray_height);
20001b5e:	4939      	ldr	r1, [pc, #228]	; (20001c44 <initSprites+0x11c>)
20001b60:	6a78      	ldr	r0, [r7, #36]	; 0x24
20001b62:	230c      	movs	r3, #12
20001b64:	2208      	movs	r2, #8
20001b66:	f002 fa21 	bl	20003fac <load_sprite>
	fire1Light = pointer2;
20001b6a:	4b37      	ldr	r3, [pc, #220]	; (20001c48 <initSprites+0x120>)
20001b6c:	6a7a      	ldr	r2, [r7, #36]	; 0x24
20001b6e:	601a      	str	r2, [r3, #0]

	sprite *pointer3 = &tempFire2Gray;
20001b70:	4b36      	ldr	r3, [pc, #216]	; (20001c4c <initSprites+0x124>)
20001b72:	623b      	str	r3, [r7, #32]
	load_sprite(pointer3, fire2_gray_bits, fire1_gray_width, fire1_gray_height);
20001b74:	4936      	ldr	r1, [pc, #216]	; (20001c50 <initSprites+0x128>)
20001b76:	6a38      	ldr	r0, [r7, #32]
20001b78:	230c      	movs	r3, #12
20001b7a:	2208      	movs	r2, #8
20001b7c:	f002 fa16 	bl	20003fac <load_sprite>
	fire2Gray = pointer3;
20001b80:	4b34      	ldr	r3, [pc, #208]	; (20001c54 <initSprites+0x12c>)
20001b82:	6a3a      	ldr	r2, [r7, #32]
20001b84:	601a      	str	r2, [r3, #0]

	sprite *pointer4 = &tempFire2Light;
20001b86:	4b34      	ldr	r3, [pc, #208]	; (20001c58 <initSprites+0x130>)
20001b88:	61fb      	str	r3, [r7, #28]
	load_sprite(pointer4, fire2_light_bits, fire1_gray_width, fire1_gray_height);
20001b8a:	4934      	ldr	r1, [pc, #208]	; (20001c5c <initSprites+0x134>)
20001b8c:	69f8      	ldr	r0, [r7, #28]
20001b8e:	230c      	movs	r3, #12
20001b90:	2208      	movs	r2, #8
20001b92:	f002 fa0b 	bl	20003fac <load_sprite>
	fire2Light = pointer4;
20001b96:	4b32      	ldr	r3, [pc, #200]	; (20001c60 <initSprites+0x138>)
20001b98:	69fa      	ldr	r2, [r7, #28]
20001b9a:	601a      	str	r2, [r3, #0]

	sprite *pointer5 = &tempFire3Gray;
20001b9c:	4b31      	ldr	r3, [pc, #196]	; (20001c64 <initSprites+0x13c>)
20001b9e:	61bb      	str	r3, [r7, #24]
	load_sprite(pointer5, fire3_gray_bits, fire1_gray_width, fire1_gray_height);
20001ba0:	4931      	ldr	r1, [pc, #196]	; (20001c68 <initSprites+0x140>)
20001ba2:	69b8      	ldr	r0, [r7, #24]
20001ba4:	230c      	movs	r3, #12
20001ba6:	2208      	movs	r2, #8
20001ba8:	f002 fa00 	bl	20003fac <load_sprite>
	fire3Gray = pointer5;
20001bac:	4b2f      	ldr	r3, [pc, #188]	; (20001c6c <initSprites+0x144>)
20001bae:	69ba      	ldr	r2, [r7, #24]
20001bb0:	601a      	str	r2, [r3, #0]

	sprite *pointer6 = &tempFire3Light;
20001bb2:	4b2f      	ldr	r3, [pc, #188]	; (20001c70 <initSprites+0x148>)
20001bb4:	617b      	str	r3, [r7, #20]
	load_sprite(pointer6, fire3_light_bits, fire1_gray_width, fire1_gray_height);
20001bb6:	492f      	ldr	r1, [pc, #188]	; (20001c74 <initSprites+0x14c>)
20001bb8:	6978      	ldr	r0, [r7, #20]
20001bba:	230c      	movs	r3, #12
20001bbc:	2208      	movs	r2, #8
20001bbe:	f002 f9f5 	bl	20003fac <load_sprite>
	fire3Light = pointer6;
20001bc2:	4b2d      	ldr	r3, [pc, #180]	; (20001c78 <initSprites+0x150>)
20001bc4:	697a      	ldr	r2, [r7, #20]
20001bc6:	601a      	str	r2, [r3, #0]

	sprite *pointer7 = &tempFire4Gray;
20001bc8:	4b2c      	ldr	r3, [pc, #176]	; (20001c7c <initSprites+0x154>)
20001bca:	613b      	str	r3, [r7, #16]
	load_sprite(pointer7, fire4_gray_bits, fire1_gray_width, fire1_gray_height);
20001bcc:	492c      	ldr	r1, [pc, #176]	; (20001c80 <initSprites+0x158>)
20001bce:	6938      	ldr	r0, [r7, #16]
20001bd0:	230c      	movs	r3, #12
20001bd2:	2208      	movs	r2, #8
20001bd4:	f002 f9ea 	bl	20003fac <load_sprite>
	fire4Gray = pointer7;
20001bd8:	4b2a      	ldr	r3, [pc, #168]	; (20001c84 <initSprites+0x15c>)
20001bda:	693a      	ldr	r2, [r7, #16]
20001bdc:	601a      	str	r2, [r3, #0]

	sprite *pointer8 = &tempFire4Light;
20001bde:	4b2a      	ldr	r3, [pc, #168]	; (20001c88 <initSprites+0x160>)
20001be0:	60fb      	str	r3, [r7, #12]
	load_sprite(pointer8, fire4_light_bits, fire1_gray_width, fire1_gray_height);
20001be2:	492a      	ldr	r1, [pc, #168]	; (20001c8c <initSprites+0x164>)
20001be4:	68f8      	ldr	r0, [r7, #12]
20001be6:	230c      	movs	r3, #12
20001be8:	2208      	movs	r2, #8
20001bea:	f002 f9df 	bl	20003fac <load_sprite>
	fire4Light = pointer8;
20001bee:	4b28      	ldr	r3, [pc, #160]	; (20001c90 <initSprites+0x168>)
20001bf0:	68fa      	ldr	r2, [r7, #12]
20001bf2:	601a      	str	r2, [r3, #0]

	sprite *pointer9 = &tempFire5Gray;
20001bf4:	4b27      	ldr	r3, [pc, #156]	; (20001c94 <initSprites+0x16c>)
20001bf6:	60bb      	str	r3, [r7, #8]
	load_sprite(pointer9, fire5_gray_bits, fire1_gray_width, fire1_gray_height);
20001bf8:	4927      	ldr	r1, [pc, #156]	; (20001c98 <initSprites+0x170>)
20001bfa:	68b8      	ldr	r0, [r7, #8]
20001bfc:	230c      	movs	r3, #12
20001bfe:	2208      	movs	r2, #8
20001c00:	f002 f9d4 	bl	20003fac <load_sprite>
	fire5Gray = pointer9;
20001c04:	4b25      	ldr	r3, [pc, #148]	; (20001c9c <initSprites+0x174>)
20001c06:	68ba      	ldr	r2, [r7, #8]
20001c08:	601a      	str	r2, [r3, #0]

	sprite *pointer10 = &tempFire5Light;
20001c0a:	4b25      	ldr	r3, [pc, #148]	; (20001ca0 <initSprites+0x178>)
20001c0c:	607b      	str	r3, [r7, #4]
	load_sprite(pointer10, fire5_light_bits, fire1_gray_width, fire1_gray_height);
20001c0e:	4925      	ldr	r1, [pc, #148]	; (20001ca4 <initSprites+0x17c>)
20001c10:	6878      	ldr	r0, [r7, #4]
20001c12:	230c      	movs	r3, #12
20001c14:	2208      	movs	r2, #8
20001c16:	f002 f9c9 	bl	20003fac <load_sprite>
	fire5Light = pointer10;
20001c1a:	4b23      	ldr	r3, [pc, #140]	; (20001ca8 <initSprites+0x180>)
20001c1c:	687a      	ldr	r2, [r7, #4]
20001c1e:	601a      	str	r2, [r3, #0]
}
20001c20:	46c0      	nop			; (mov r8, r8)
20001c22:	46bd      	mov	sp, r7
20001c24:	b00c      	add	sp, #48	; 0x30
20001c26:	bd80      	pop	{r7, pc}
20001c28:	2000522c 	andcs	r5, r0, ip, lsr #4
20001c2c:	2000919c 	mulcs	r0, ip, r1
20001c30:	20005324 	andcs	r5, r0, r4, lsr #6
20001c34:	20005318 	andcs	r5, r0, r8, lsl r3
20001c38:	200091a8 	andcs	r9, r0, r8, lsr #3
20001c3c:	2000533c 	andcs	r5, r0, ip, lsr r3
20001c40:	200052f4 	strdcs	r5, [r0], -r4
20001c44:	200091b4 			; <UNDEFINED> instruction: 0x200091b4
20001c48:	200051f4 	strdcs	r5, [r0], -r4
20001c4c:	20005220 	andcs	r5, r0, r0, lsr #4
20001c50:	200091c0 	andcs	r9, r0, r0, asr #3
20001c54:	20005338 	andcs	r5, r0, r8, lsr r3
20001c58:	20005328 	andcs	r5, r0, r8, lsr #6
20001c5c:	200091cc 	andcs	r9, r0, ip, asr #3
20001c60:	20005310 	andcs	r5, r0, r0, lsl r3
20001c64:	200052d8 	ldrdcs	r5, [r0], -r8
20001c68:	200091d8 	ldrdcs	r9, [r0], -r8
20001c6c:	20005204 	andcs	r5, r0, r4, lsl #4
20001c70:	200051f8 	strdcs	r5, [r0], -r8
20001c74:	200091e4 	andcs	r9, r0, r4, ror #3
20001c78:	20005334 	andcs	r5, r0, r4, lsr r3
20001c7c:	20005208 	andcs	r5, r0, r8, lsl #4
20001c80:	200091f0 	strdcs	r9, [r0], -r0
20001c84:	200052f0 	strdcs	r5, [r0], -r0
20001c88:	20005244 	andcs	r5, r0, r4, asr #4
20001c8c:	200091fc 	strdcs	r9, [r0], -ip
20001c90:	2000525c 	andcs	r5, r0, ip, asr r2
20001c94:	200052cc 	andcs	r5, r0, ip, asr #5
20001c98:	20009208 	andcs	r9, r0, r8, lsl #4
20001c9c:	2000530c 	andcs	r5, r0, ip, lsl #6
20001ca0:	20005300 	andcs	r5, r0, r0, lsl #6
20001ca4:	20009214 	andcs	r9, r0, r4, lsl r2
20001ca8:	20005314 	andcs	r5, r0, r4, lsl r3

20001cac <init_fire>:
	
void init_fire( GameObject *fireObj ) {
20001cac:	b590      	push	{r4, r7, lr}
20001cae:	b083      	sub	sp, #12
20001cb0:	af00      	add	r7, sp, #0
20001cb2:	6078      	str	r0, [r7, #4]
	static int firstTime = 1;
	if (firstTime) {
20001cb4:	4b30      	ldr	r3, [pc, #192]	; (20001d78 <init_fire+0xcc>)
20001cb6:	681b      	ldr	r3, [r3, #0]
20001cb8:	2b00      	cmp	r3, #0
20001cba:	d049      	beq.n	20001d50 <init_fire+0xa4>
		initSprites();
20001cbc:	f7ff ff34 	bl	20001b28 <initSprites>
		firstTime = 0;			
20001cc0:	4b2d      	ldr	r3, [pc, #180]	; (20001d78 <init_fire+0xcc>)
20001cc2:	2200      	movs	r2, #0
20001cc4:	601a      	str	r2, [r3, #0]

		fireImages[0] = fire1Image;
20001cc6:	4b2d      	ldr	r3, [pc, #180]	; (20001d7c <init_fire+0xd0>)
20001cc8:	4a2d      	ldr	r2, [pc, #180]	; (20001d80 <init_fire+0xd4>)
20001cca:	ca13      	ldmia	r2!, {r0, r1, r4}
20001ccc:	c313      	stmia	r3!, {r0, r1, r4}
		fireImages[1] = fire2Image;
20001cce:	4b2b      	ldr	r3, [pc, #172]	; (20001d7c <init_fire+0xd0>)
20001cd0:	4a2c      	ldr	r2, [pc, #176]	; (20001d84 <init_fire+0xd8>)
20001cd2:	330c      	adds	r3, #12
20001cd4:	ca13      	ldmia	r2!, {r0, r1, r4}
20001cd6:	c313      	stmia	r3!, {r0, r1, r4}
		fireImages[2] = fire3Image;
20001cd8:	4b28      	ldr	r3, [pc, #160]	; (20001d7c <init_fire+0xd0>)
20001cda:	4a2b      	ldr	r2, [pc, #172]	; (20001d88 <init_fire+0xdc>)
20001cdc:	3318      	adds	r3, #24
20001cde:	ca13      	ldmia	r2!, {r0, r1, r4}
20001ce0:	c313      	stmia	r3!, {r0, r1, r4}
		fireImages[3] = fire4Image;
20001ce2:	4b26      	ldr	r3, [pc, #152]	; (20001d7c <init_fire+0xd0>)
20001ce4:	4a29      	ldr	r2, [pc, #164]	; (20001d8c <init_fire+0xe0>)
20001ce6:	3324      	adds	r3, #36	; 0x24
20001ce8:	ca13      	ldmia	r2!, {r0, r1, r4}
20001cea:	c313      	stmia	r3!, {r0, r1, r4}
		fireImages[4] = fire5Image;
20001cec:	4b23      	ldr	r3, [pc, #140]	; (20001d7c <init_fire+0xd0>)
20001cee:	4a28      	ldr	r2, [pc, #160]	; (20001d90 <init_fire+0xe4>)
20001cf0:	3330      	adds	r3, #48	; 0x30
20001cf2:	ca13      	ldmia	r2!, {r0, r1, r4}
20001cf4:	c313      	stmia	r3!, {r0, r1, r4}
		
		load_image(&fireImages[0], fire1Gray, fire1Light, fireBlack);
20001cf6:	4b27      	ldr	r3, [pc, #156]	; (20001d94 <init_fire+0xe8>)
20001cf8:	6819      	ldr	r1, [r3, #0]
20001cfa:	4b27      	ldr	r3, [pc, #156]	; (20001d98 <init_fire+0xec>)
20001cfc:	681a      	ldr	r2, [r3, #0]
20001cfe:	4b27      	ldr	r3, [pc, #156]	; (20001d9c <init_fire+0xf0>)
20001d00:	681b      	ldr	r3, [r3, #0]
20001d02:	481e      	ldr	r0, [pc, #120]	; (20001d7c <init_fire+0xd0>)
20001d04:	f002 f93e 	bl	20003f84 <load_image>
		load_image(&fireImages[1], fire2Gray, fire2Light, fireBlack);
20001d08:	4b25      	ldr	r3, [pc, #148]	; (20001da0 <init_fire+0xf4>)
20001d0a:	6819      	ldr	r1, [r3, #0]
20001d0c:	4b25      	ldr	r3, [pc, #148]	; (20001da4 <init_fire+0xf8>)
20001d0e:	681a      	ldr	r2, [r3, #0]
20001d10:	4b22      	ldr	r3, [pc, #136]	; (20001d9c <init_fire+0xf0>)
20001d12:	681b      	ldr	r3, [r3, #0]
20001d14:	4824      	ldr	r0, [pc, #144]	; (20001da8 <init_fire+0xfc>)
20001d16:	f002 f935 	bl	20003f84 <load_image>
		load_image(&fireImages[2], fire3Gray, fire3Light, fireBlack);
20001d1a:	4b24      	ldr	r3, [pc, #144]	; (20001dac <init_fire+0x100>)
20001d1c:	6819      	ldr	r1, [r3, #0]
20001d1e:	4b24      	ldr	r3, [pc, #144]	; (20001db0 <init_fire+0x104>)
20001d20:	681a      	ldr	r2, [r3, #0]
20001d22:	4b1e      	ldr	r3, [pc, #120]	; (20001d9c <init_fire+0xf0>)
20001d24:	681b      	ldr	r3, [r3, #0]
20001d26:	4823      	ldr	r0, [pc, #140]	; (20001db4 <init_fire+0x108>)
20001d28:	f002 f92c 	bl	20003f84 <load_image>
		load_image(&fireImages[3], fire4Gray, fire4Light, fireBlack);
20001d2c:	4b22      	ldr	r3, [pc, #136]	; (20001db8 <init_fire+0x10c>)
20001d2e:	6819      	ldr	r1, [r3, #0]
20001d30:	4b22      	ldr	r3, [pc, #136]	; (20001dbc <init_fire+0x110>)
20001d32:	681a      	ldr	r2, [r3, #0]
20001d34:	4b19      	ldr	r3, [pc, #100]	; (20001d9c <init_fire+0xf0>)
20001d36:	681b      	ldr	r3, [r3, #0]
20001d38:	4821      	ldr	r0, [pc, #132]	; (20001dc0 <init_fire+0x114>)
20001d3a:	f002 f923 	bl	20003f84 <load_image>
		load_image(&fireImages[4], fire5Gray, fire5Light, fireBlack);
20001d3e:	4b21      	ldr	r3, [pc, #132]	; (20001dc4 <init_fire+0x118>)
20001d40:	6819      	ldr	r1, [r3, #0]
20001d42:	4b21      	ldr	r3, [pc, #132]	; (20001dc8 <init_fire+0x11c>)
20001d44:	681a      	ldr	r2, [r3, #0]
20001d46:	4b15      	ldr	r3, [pc, #84]	; (20001d9c <init_fire+0xf0>)
20001d48:	681b      	ldr	r3, [r3, #0]
20001d4a:	4820      	ldr	r0, [pc, #128]	; (20001dcc <init_fire+0x120>)
20001d4c:	f002 f91a 	bl	20003f84 <load_image>
	}
	
	fireObj->images = fireImages;
20001d50:	687b      	ldr	r3, [r7, #4]
20001d52:	4a0a      	ldr	r2, [pc, #40]	; (20001d7c <init_fire+0xd0>)
20001d54:	601a      	str	r2, [r3, #0]

	fireObj->current_frame = 0;
20001d56:	687b      	ldr	r3, [r7, #4]
20001d58:	2200      	movs	r2, #0
20001d5a:	615a      	str	r2, [r3, #20]
	fireObj->n_frames = 5;
20001d5c:	687b      	ldr	r3, [r7, #4]
20001d5e:	2205      	movs	r2, #5
20001d60:	619a      	str	r2, [r3, #24]
	fireObj->animation_speed = 1;
20001d62:	687b      	ldr	r3, [r7, #4]
20001d64:	2201      	movs	r2, #1
20001d66:	61da      	str	r2, [r3, #28]
	fireObj->animation_counter = 0;
20001d68:	687b      	ldr	r3, [r7, #4]
20001d6a:	2200      	movs	r2, #0
20001d6c:	621a      	str	r2, [r3, #32]
}
20001d6e:	46c0      	nop			; (mov r8, r8)
20001d70:	46bd      	mov	sp, r7
20001d72:	b003      	add	sp, #12
20001d74:	bd90      	pop	{r4, r7, pc}
20001d76:	46c0      	nop			; (mov r8, r8)
20001d78:	20009220 	andcs	r9, r0, r0, lsr #4
20001d7c:	20005290 	mulcs	r0, r0, r2
20001d80:	20005250 	andcs	r5, r0, r0, asr r2
20001d84:	20005214 	andcs	r5, r0, r4, lsl r2
20001d88:	20005238 	andcs	r5, r0, r8, lsr r2
20001d8c:	200052e4 	andcs	r5, r0, r4, ror #5
20001d90:	20005284 	andcs	r5, r0, r4, lsl #5
20001d94:	2000533c 	andcs	r5, r0, ip, lsr r3
20001d98:	200051f4 	strdcs	r5, [r0], -r4
20001d9c:	20005324 	andcs	r5, r0, r4, lsr #6
20001da0:	20005338 	andcs	r5, r0, r8, lsr r3
20001da4:	20005310 	andcs	r5, r0, r0, lsl r3
20001da8:	2000529c 	mulcs	r0, ip, r2
20001dac:	20005204 	andcs	r5, r0, r4, lsl #4
20001db0:	20005334 	andcs	r5, r0, r4, lsr r3
20001db4:	200052a8 	andcs	r5, r0, r8, lsr #5
20001db8:	200052f0 	strdcs	r5, [r0], -r0
20001dbc:	2000525c 	andcs	r5, r0, ip, asr r2
20001dc0:	200052b4 			; <UNDEFINED> instruction: 0x200052b4
20001dc4:	2000530c 	andcs	r5, r0, ip, lsl #6
20001dc8:	20005314 	andcs	r5, r0, r4, lsl r3
20001dcc:	200052c0 	andcs	r5, r0, r0, asr #5

20001dd0 <playerReset>:
	static lastRightValue = 0;
	static lastLeftValue = 0; 
	static xSpeed = 0;
	static ySpeed = 0;

void playerReset(void){
20001dd0:	b580      	push	{r7, lr}
20001dd2:	af00      	add	r7, sp, #0
	lastJumpValue = 0;
20001dd4:	4b08      	ldr	r3, [pc, #32]	; (20001df8 <playerReset+0x28>)
20001dd6:	2200      	movs	r2, #0
20001dd8:	601a      	str	r2, [r3, #0]
	lastRightValue = 0;
20001dda:	4b08      	ldr	r3, [pc, #32]	; (20001dfc <playerReset+0x2c>)
20001ddc:	2200      	movs	r2, #0
20001dde:	601a      	str	r2, [r3, #0]
	lastLeftValue = 0; 
20001de0:	4b07      	ldr	r3, [pc, #28]	; (20001e00 <playerReset+0x30>)
20001de2:	2200      	movs	r2, #0
20001de4:	601a      	str	r2, [r3, #0]
	xSpeed = 0;
20001de6:	4b07      	ldr	r3, [pc, #28]	; (20001e04 <playerReset+0x34>)
20001de8:	2200      	movs	r2, #0
20001dea:	601a      	str	r2, [r3, #0]
	ySpeed = 0;
20001dec:	4b06      	ldr	r3, [pc, #24]	; (20001e08 <playerReset+0x38>)
20001dee:	2200      	movs	r2, #0
20001df0:	601a      	str	r2, [r3, #0]
}
20001df2:	46c0      	nop			; (mov r8, r8)
20001df4:	46bd      	mov	sp, r7
20001df6:	bd80      	pop	{r7, pc}
20001df8:	20004f6c 	andcs	r4, r0, ip, ror #30
20001dfc:	20004f70 	andcs	r4, r0, r0, ror pc
20001e00:	20004f74 	andcs	r4, r0, r4, ror pc
20001e04:	20004f78 	andcs	r4, r0, r8, ror pc
20001e08:	20004f7c 	andcs	r4, r0, ip, ror pc

20001e0c <playerUpdate>:

void playerUpdate(GameObject *this) {
20001e0c:	b580      	push	{r7, lr}
20001e0e:	b082      	sub	sp, #8
20001e10:	af00      	add	r7, sp, #0
20001e12:	6078      	str	r0, [r7, #4]
	
	// Animate
	this->animation_counter++;
20001e14:	687b      	ldr	r3, [r7, #4]
20001e16:	6a1b      	ldr	r3, [r3, #32]
20001e18:	1c5a      	adds	r2, r3, #1
20001e1a:	687b      	ldr	r3, [r7, #4]
20001e1c:	621a      	str	r2, [r3, #32]
	if (this->animation_counter == this->animation_speed) {
20001e1e:	687b      	ldr	r3, [r7, #4]
20001e20:	6a1a      	ldr	r2, [r3, #32]
20001e22:	687b      	ldr	r3, [r7, #4]
20001e24:	69db      	ldr	r3, [r3, #28]
20001e26:	429a      	cmp	r2, r3
20001e28:	d10f      	bne.n	20001e4a <playerUpdate+0x3e>
		this->animation_counter = 0;
20001e2a:	687b      	ldr	r3, [r7, #4]
20001e2c:	2200      	movs	r2, #0
20001e2e:	621a      	str	r2, [r3, #32]
		this->current_frame = (this->current_frame + 1) % this->n_frames;
20001e30:	687b      	ldr	r3, [r7, #4]
20001e32:	695b      	ldr	r3, [r3, #20]
20001e34:	1c5a      	adds	r2, r3, #1
20001e36:	687b      	ldr	r3, [r7, #4]
20001e38:	699b      	ldr	r3, [r3, #24]
20001e3a:	0019      	movs	r1, r3
20001e3c:	0010      	movs	r0, r2
20001e3e:	f003 f87b 	bl	20004f38 <__aeabi_idivmod>
20001e42:	000b      	movs	r3, r1
20001e44:	001a      	movs	r2, r3
20001e46:	687b      	ldr	r3, [r7, #4]
20001e48:	615a      	str	r2, [r3, #20]
	}
	
	// Y position changes
	
	if (lastJumpValue != read_DIL_single(JUMP_TRIGGER) && (this->yPos == LIMIT_DOWN || this->yPos == PLATFORM_Y - PLAYER_HEIGHT)){
20001e4a:	2005      	movs	r0, #5
20001e4c:	f002 f8de 	bl	2000400c <read_DIL_single>
20001e50:	0002      	movs	r2, r0
20001e52:	4b68      	ldr	r3, [pc, #416]	; (20001ff4 <playerUpdate+0x1e8>)
20001e54:	681b      	ldr	r3, [r3, #0]
20001e56:	429a      	cmp	r2, r3
20001e58:	d00b      	beq.n	20001e72 <playerUpdate+0x66>
20001e5a:	687b      	ldr	r3, [r7, #4]
20001e5c:	689b      	ldr	r3, [r3, #8]
20001e5e:	2b27      	cmp	r3, #39	; 0x27
20001e60:	d003      	beq.n	20001e6a <playerUpdate+0x5e>
20001e62:	687b      	ldr	r3, [r7, #4]
20001e64:	689b      	ldr	r3, [r3, #8]
20001e66:	2b05      	cmp	r3, #5
20001e68:	d103      	bne.n	20001e72 <playerUpdate+0x66>
		ySpeed = -(SPEED_ADD_Y);
20001e6a:	4b63      	ldr	r3, [pc, #396]	; (20001ff8 <playerUpdate+0x1ec>)
20001e6c:	2204      	movs	r2, #4
20001e6e:	4252      	negs	r2, r2
20001e70:	601a      	str	r2, [r3, #0]
	}
	
	if (this->yPos + ySpeed > LIMIT_DOWN){
20001e72:	687b      	ldr	r3, [r7, #4]
20001e74:	689a      	ldr	r2, [r3, #8]
20001e76:	4b60      	ldr	r3, [pc, #384]	; (20001ff8 <playerUpdate+0x1ec>)
20001e78:	681b      	ldr	r3, [r3, #0]
20001e7a:	18d3      	adds	r3, r2, r3
20001e7c:	2b27      	cmp	r3, #39	; 0x27
20001e7e:	dd10      	ble.n	20001ea2 <playerUpdate+0x96>
		this->yPos = LIMIT_DOWN;
20001e80:	687b      	ldr	r3, [r7, #4]
20001e82:	2227      	movs	r2, #39	; 0x27
20001e84:	609a      	str	r2, [r3, #8]
		if (ySpeed == SPEED_ADD_Y + 1){
20001e86:	4b5c      	ldr	r3, [pc, #368]	; (20001ff8 <playerUpdate+0x1ec>)
20001e88:	681b      	ldr	r3, [r3, #0]
20001e8a:	2b05      	cmp	r3, #5
20001e8c:	d105      	bne.n	20001e9a <playerUpdate+0x8e>
			ascii_write("*THUMP*","");
20001e8e:	4a5b      	ldr	r2, [pc, #364]	; (20001ffc <playerUpdate+0x1f0>)
20001e90:	4b5b      	ldr	r3, [pc, #364]	; (20002000 <playerUpdate+0x1f4>)
20001e92:	0011      	movs	r1, r2
20001e94:	0018      	movs	r0, r3
20001e96:	f002 faab 	bl	200043f0 <ascii_write>
		}
		ySpeed = 0;
20001e9a:	4b57      	ldr	r3, [pc, #348]	; (20001ff8 <playerUpdate+0x1ec>)
20001e9c:	2200      	movs	r2, #0
20001e9e:	601a      	str	r2, [r3, #0]
20001ea0:	e02a      	b.n	20001ef8 <playerUpdate+0xec>
	}
	else if (this->yPos + ySpeed > PLATFORM_Y - PLAYER_HEIGHT && this->yPos + ySpeed < PLATFORM_Y - PLAYER_HEIGHT + 2*SPEED_ADD_Y){
20001ea2:	687b      	ldr	r3, [r7, #4]
20001ea4:	689a      	ldr	r2, [r3, #8]
20001ea6:	4b54      	ldr	r3, [pc, #336]	; (20001ff8 <playerUpdate+0x1ec>)
20001ea8:	681b      	ldr	r3, [r3, #0]
20001eaa:	18d3      	adds	r3, r2, r3
20001eac:	2b05      	cmp	r3, #5
20001eae:	dd17      	ble.n	20001ee0 <playerUpdate+0xd4>
20001eb0:	687b      	ldr	r3, [r7, #4]
20001eb2:	689a      	ldr	r2, [r3, #8]
20001eb4:	4b50      	ldr	r3, [pc, #320]	; (20001ff8 <playerUpdate+0x1ec>)
20001eb6:	681b      	ldr	r3, [r3, #0]
20001eb8:	18d3      	adds	r3, r2, r3
20001eba:	2b0c      	cmp	r3, #12
20001ebc:	dc10      	bgt.n	20001ee0 <playerUpdate+0xd4>
		this->yPos = PLATFORM_Y - PLAYER_HEIGHT;
20001ebe:	687b      	ldr	r3, [r7, #4]
20001ec0:	2205      	movs	r2, #5
20001ec2:	609a      	str	r2, [r3, #8]
		if (ySpeed == SPEED_ADD_Y + 1){
20001ec4:	4b4c      	ldr	r3, [pc, #304]	; (20001ff8 <playerUpdate+0x1ec>)
20001ec6:	681b      	ldr	r3, [r3, #0]
20001ec8:	2b05      	cmp	r3, #5
20001eca:	d105      	bne.n	20001ed8 <playerUpdate+0xcc>
			ascii_write("*THUMP*","");
20001ecc:	4a4b      	ldr	r2, [pc, #300]	; (20001ffc <playerUpdate+0x1f0>)
20001ece:	4b4c      	ldr	r3, [pc, #304]	; (20002000 <playerUpdate+0x1f4>)
20001ed0:	0011      	movs	r1, r2
20001ed2:	0018      	movs	r0, r3
20001ed4:	f002 fa8c 	bl	200043f0 <ascii_write>
		}
		ySpeed = 0;
20001ed8:	4b47      	ldr	r3, [pc, #284]	; (20001ff8 <playerUpdate+0x1ec>)
20001eda:	2200      	movs	r2, #0
20001edc:	601a      	str	r2, [r3, #0]
20001ede:	e00b      	b.n	20001ef8 <playerUpdate+0xec>
	}
	else{
		this->yPos+=ySpeed;
20001ee0:	687b      	ldr	r3, [r7, #4]
20001ee2:	689a      	ldr	r2, [r3, #8]
20001ee4:	4b44      	ldr	r3, [pc, #272]	; (20001ff8 <playerUpdate+0x1ec>)
20001ee6:	681b      	ldr	r3, [r3, #0]
20001ee8:	18d2      	adds	r2, r2, r3
20001eea:	687b      	ldr	r3, [r7, #4]
20001eec:	609a      	str	r2, [r3, #8]
		ySpeed++;
20001eee:	4b42      	ldr	r3, [pc, #264]	; (20001ff8 <playerUpdate+0x1ec>)
20001ef0:	681b      	ldr	r3, [r3, #0]
20001ef2:	1c5a      	adds	r2, r3, #1
20001ef4:	4b40      	ldr	r3, [pc, #256]	; (20001ff8 <playerUpdate+0x1ec>)
20001ef6:	601a      	str	r2, [r3, #0]
	}

	// X position changes
	
	if (!lastRightValue && read_DIL_single(RIGHT_TRIGGER)){ 
20001ef8:	4b42      	ldr	r3, [pc, #264]	; (20002004 <playerUpdate+0x1f8>)
20001efa:	681b      	ldr	r3, [r3, #0]
20001efc:	2b00      	cmp	r3, #0
20001efe:	d109      	bne.n	20001f14 <playerUpdate+0x108>
20001f00:	2000      	movs	r0, #0
20001f02:	f002 f883 	bl	2000400c <read_DIL_single>
20001f06:	1e03      	subs	r3, r0, #0
20001f08:	d004      	beq.n	20001f14 <playerUpdate+0x108>
		xSpeed += SPEED_ADD_X;
20001f0a:	4b3f      	ldr	r3, [pc, #252]	; (20002008 <playerUpdate+0x1fc>)
20001f0c:	681b      	ldr	r3, [r3, #0]
20001f0e:	1cda      	adds	r2, r3, #3
20001f10:	4b3d      	ldr	r3, [pc, #244]	; (20002008 <playerUpdate+0x1fc>)
20001f12:	601a      	str	r2, [r3, #0]
	}
	
	if (!lastLeftValue && read_DIL_single(LEFT_TRIGGER)){
20001f14:	4b3d      	ldr	r3, [pc, #244]	; (2000200c <playerUpdate+0x200>)
20001f16:	681b      	ldr	r3, [r3, #0]
20001f18:	2b00      	cmp	r3, #0
20001f1a:	d109      	bne.n	20001f30 <playerUpdate+0x124>
20001f1c:	2007      	movs	r0, #7
20001f1e:	f002 f875 	bl	2000400c <read_DIL_single>
20001f22:	1e03      	subs	r3, r0, #0
20001f24:	d004      	beq.n	20001f30 <playerUpdate+0x124>
		xSpeed -= SPEED_ADD_X;
20001f26:	4b38      	ldr	r3, [pc, #224]	; (20002008 <playerUpdate+0x1fc>)
20001f28:	681b      	ldr	r3, [r3, #0]
20001f2a:	1eda      	subs	r2, r3, #3
20001f2c:	4b36      	ldr	r3, [pc, #216]	; (20002008 <playerUpdate+0x1fc>)
20001f2e:	601a      	str	r2, [r3, #0]
	}
	
	if (((!lastLeftValue && read_DIL_single(LEFT_TRIGGER)) || (!lastRightValue && read_DIL_single(RIGHT_TRIGGER))) && this->yPos != PLATFORM_Y - PLAYER_HEIGHT && this->yPos != LIMIT_DOWN){
20001f30:	4b36      	ldr	r3, [pc, #216]	; (2000200c <playerUpdate+0x200>)
20001f32:	681b      	ldr	r3, [r3, #0]
20001f34:	2b00      	cmp	r3, #0
20001f36:	d104      	bne.n	20001f42 <playerUpdate+0x136>
20001f38:	2007      	movs	r0, #7
20001f3a:	f002 f867 	bl	2000400c <read_DIL_single>
20001f3e:	1e03      	subs	r3, r0, #0
20001f40:	d108      	bne.n	20001f54 <playerUpdate+0x148>
20001f42:	4b30      	ldr	r3, [pc, #192]	; (20002004 <playerUpdate+0x1f8>)
20001f44:	681b      	ldr	r3, [r3, #0]
20001f46:	2b00      	cmp	r3, #0
20001f48:	d111      	bne.n	20001f6e <playerUpdate+0x162>
20001f4a:	2000      	movs	r0, #0
20001f4c:	f002 f85e 	bl	2000400c <read_DIL_single>
20001f50:	1e03      	subs	r3, r0, #0
20001f52:	d00c      	beq.n	20001f6e <playerUpdate+0x162>
20001f54:	687b      	ldr	r3, [r7, #4]
20001f56:	689b      	ldr	r3, [r3, #8]
20001f58:	2b05      	cmp	r3, #5
20001f5a:	d008      	beq.n	20001f6e <playerUpdate+0x162>
20001f5c:	687b      	ldr	r3, [r7, #4]
20001f5e:	689b      	ldr	r3, [r3, #8]
20001f60:	2b27      	cmp	r3, #39	; 0x27
20001f62:	d004      	beq.n	20001f6e <playerUpdate+0x162>
		xSpeed *=2;
20001f64:	4b28      	ldr	r3, [pc, #160]	; (20002008 <playerUpdate+0x1fc>)
20001f66:	681b      	ldr	r3, [r3, #0]
20001f68:	005a      	lsls	r2, r3, #1
20001f6a:	4b27      	ldr	r3, [pc, #156]	; (20002008 <playerUpdate+0x1fc>)
20001f6c:	601a      	str	r2, [r3, #0]
	}
	
	if (this->xPos + xSpeed > LIMIT_RIGHT || this->xPos + xSpeed < LIMIT_LEFT){
20001f6e:	687b      	ldr	r3, [r7, #4]
20001f70:	685a      	ldr	r2, [r3, #4]
20001f72:	4b25      	ldr	r3, [pc, #148]	; (20002008 <playerUpdate+0x1fc>)
20001f74:	681b      	ldr	r3, [r3, #0]
20001f76:	18d3      	adds	r3, r2, r3
20001f78:	2b6e      	cmp	r3, #110	; 0x6e
20001f7a:	dc06      	bgt.n	20001f8a <playerUpdate+0x17e>
20001f7c:	687b      	ldr	r3, [r7, #4]
20001f7e:	685a      	ldr	r2, [r3, #4]
20001f80:	4b21      	ldr	r3, [pc, #132]	; (20002008 <playerUpdate+0x1fc>)
20001f82:	681b      	ldr	r3, [r3, #0]
20001f84:	18d3      	adds	r3, r2, r3
20001f86:	2b00      	cmp	r3, #0
20001f88:	da04      	bge.n	20001f94 <playerUpdate+0x188>
		xSpeed *= -1;	
20001f8a:	4b1f      	ldr	r3, [pc, #124]	; (20002008 <playerUpdate+0x1fc>)
20001f8c:	681b      	ldr	r3, [r3, #0]
20001f8e:	425a      	negs	r2, r3
20001f90:	4b1d      	ldr	r3, [pc, #116]	; (20002008 <playerUpdate+0x1fc>)
20001f92:	601a      	str	r2, [r3, #0]
	}
	
	this->xPos += xSpeed;	
20001f94:	687b      	ldr	r3, [r7, #4]
20001f96:	685a      	ldr	r2, [r3, #4]
20001f98:	4b1b      	ldr	r3, [pc, #108]	; (20002008 <playerUpdate+0x1fc>)
20001f9a:	681b      	ldr	r3, [r3, #0]
20001f9c:	18d2      	adds	r2, r2, r3
20001f9e:	687b      	ldr	r3, [r7, #4]
20001fa0:	605a      	str	r2, [r3, #4]
	
	if (xSpeed > 0){
20001fa2:	4b19      	ldr	r3, [pc, #100]	; (20002008 <playerUpdate+0x1fc>)
20001fa4:	681b      	ldr	r3, [r3, #0]
20001fa6:	2b00      	cmp	r3, #0
20001fa8:	dd05      	ble.n	20001fb6 <playerUpdate+0x1aa>
		xSpeed--;
20001faa:	4b17      	ldr	r3, [pc, #92]	; (20002008 <playerUpdate+0x1fc>)
20001fac:	681b      	ldr	r3, [r3, #0]
20001fae:	1e5a      	subs	r2, r3, #1
20001fb0:	4b15      	ldr	r3, [pc, #84]	; (20002008 <playerUpdate+0x1fc>)
20001fb2:	601a      	str	r2, [r3, #0]
20001fb4:	e008      	b.n	20001fc8 <playerUpdate+0x1bc>
	}
	else if (xSpeed < 0){
20001fb6:	4b14      	ldr	r3, [pc, #80]	; (20002008 <playerUpdate+0x1fc>)
20001fb8:	681b      	ldr	r3, [r3, #0]
20001fba:	2b00      	cmp	r3, #0
20001fbc:	da04      	bge.n	20001fc8 <playerUpdate+0x1bc>
		xSpeed++;
20001fbe:	4b12      	ldr	r3, [pc, #72]	; (20002008 <playerUpdate+0x1fc>)
20001fc0:	681b      	ldr	r3, [r3, #0]
20001fc2:	1c5a      	adds	r2, r3, #1
20001fc4:	4b10      	ldr	r3, [pc, #64]	; (20002008 <playerUpdate+0x1fc>)
20001fc6:	601a      	str	r2, [r3, #0]
	}
	
	// Prepare values
	lastRightValue = read_DIL_single(RIGHT_TRIGGER);
20001fc8:	2000      	movs	r0, #0
20001fca:	f002 f81f 	bl	2000400c <read_DIL_single>
20001fce:	0002      	movs	r2, r0
20001fd0:	4b0c      	ldr	r3, [pc, #48]	; (20002004 <playerUpdate+0x1f8>)
20001fd2:	601a      	str	r2, [r3, #0]
	lastLeftValue = read_DIL_single(LEFT_TRIGGER);
20001fd4:	2007      	movs	r0, #7
20001fd6:	f002 f819 	bl	2000400c <read_DIL_single>
20001fda:	0002      	movs	r2, r0
20001fdc:	4b0b      	ldr	r3, [pc, #44]	; (2000200c <playerUpdate+0x200>)
20001fde:	601a      	str	r2, [r3, #0]
	lastJumpValue = read_DIL_single(JUMP_TRIGGER);
20001fe0:	2005      	movs	r0, #5
20001fe2:	f002 f813 	bl	2000400c <read_DIL_single>
20001fe6:	0002      	movs	r2, r0
20001fe8:	4b02      	ldr	r3, [pc, #8]	; (20001ff4 <playerUpdate+0x1e8>)
20001fea:	601a      	str	r2, [r3, #0]
	
20001fec:	46c0      	nop			; (mov r8, r8)
20001fee:	46bd      	mov	sp, r7
20001ff0:	b002      	add	sp, #8
20001ff2:	bd80      	pop	{r7, pc}
20001ff4:	20004f6c 	andcs	r4, r0, ip, ror #30
20001ff8:	20004f7c 	andcs	r4, r0, ip, ror pc
20001ffc:	20014760 	andcs	r4, r1, r0, ror #14
20002000:	20014764 	andcs	r4, r1, r4, ror #14
20002004:	20004f70 	andcs	r4, r0, r0, ror pc
20002008:	20004f78 	andcs	r4, r0, r8, ror pc
2000200c:	20004f74 	andcs	r4, r0, r4, ror pc

20002010 <initSprites>:
Image bird5Image;
Image bird6Image;
//Image bird7Image;
//Image bird8Image;
Image birdImages[6];
static void initSprites( void ) {	
20002010:	b580      	push	{r7, lr}
20002012:	b090      	sub	sp, #64	; 0x40
20002014:	af00      	add	r7, sp, #0
	
	sprite *pointer11 = &tempBirdLight;
20002016:	4b54      	ldr	r3, [pc, #336]	; (20002168 <initSprites+0x158>)
20002018:	63fb      	str	r3, [r7, #60]	; 0x3c
	load_sprite(pointer11, bird1_light_bits, bird1_black_width, bird1_black_height);
2000201a:	4954      	ldr	r1, [pc, #336]	; (2000216c <initSprites+0x15c>)
2000201c:	6bf8      	ldr	r0, [r7, #60]	; 0x3c
2000201e:	2319      	movs	r3, #25
20002020:	2219      	movs	r2, #25
20002022:	f001 ffc3 	bl	20003fac <load_sprite>
	bird1Light = pointer11;
20002026:	4b52      	ldr	r3, [pc, #328]	; (20002170 <initSprites+0x160>)
20002028:	6bfa      	ldr	r2, [r7, #60]	; 0x3c
2000202a:	601a      	str	r2, [r3, #0]
	sprite *pointer12 = &tempBirdGray;
2000202c:	4b51      	ldr	r3, [pc, #324]	; (20002174 <initSprites+0x164>)
2000202e:	63bb      	str	r3, [r7, #56]	; 0x38
	load_sprite(pointer12, bird1_gray_bits, bird1_black_width, bird1_black_height);
20002030:	4951      	ldr	r1, [pc, #324]	; (20002178 <initSprites+0x168>)
20002032:	6bb8      	ldr	r0, [r7, #56]	; 0x38
20002034:	2319      	movs	r3, #25
20002036:	2219      	movs	r2, #25
20002038:	f001 ffb8 	bl	20003fac <load_sprite>
	bird1Gray = pointer12;
2000203c:	4b4f      	ldr	r3, [pc, #316]	; (2000217c <initSprites+0x16c>)
2000203e:	6bba      	ldr	r2, [r7, #56]	; 0x38
20002040:	601a      	str	r2, [r3, #0]
	sprite *pointer13 = &tempBirdBlack;
20002042:	4b4f      	ldr	r3, [pc, #316]	; (20002180 <initSprites+0x170>)
20002044:	637b      	str	r3, [r7, #52]	; 0x34
	load_sprite(pointer13, bird1_black_bits, bird1_black_width, bird1_black_height);
20002046:	494f      	ldr	r1, [pc, #316]	; (20002184 <initSprites+0x174>)
20002048:	6b78      	ldr	r0, [r7, #52]	; 0x34
2000204a:	2319      	movs	r3, #25
2000204c:	2219      	movs	r2, #25
2000204e:	f001 ffad 	bl	20003fac <load_sprite>
	bird1Black = pointer13;	
20002052:	4b4d      	ldr	r3, [pc, #308]	; (20002188 <initSprites+0x178>)
20002054:	6b7a      	ldr	r2, [r7, #52]	; 0x34
20002056:	601a      	str	r2, [r3, #0]
	
	sprite *pointer14 = &tempBird2Light;
20002058:	4b4c      	ldr	r3, [pc, #304]	; (2000218c <initSprites+0x17c>)
2000205a:	633b      	str	r3, [r7, #48]	; 0x30
	load_sprite(pointer14, bird2_light_bits, bird2_black_width, bird2_black_height);
2000205c:	494c      	ldr	r1, [pc, #304]	; (20002190 <initSprites+0x180>)
2000205e:	6b38      	ldr	r0, [r7, #48]	; 0x30
20002060:	2319      	movs	r3, #25
20002062:	2219      	movs	r2, #25
20002064:	f001 ffa2 	bl	20003fac <load_sprite>
	bird2Light = pointer14;
20002068:	4b4a      	ldr	r3, [pc, #296]	; (20002194 <initSprites+0x184>)
2000206a:	6b3a      	ldr	r2, [r7, #48]	; 0x30
2000206c:	601a      	str	r2, [r3, #0]
	sprite *pointer15 = &tempBird2Gray;
2000206e:	4b4a      	ldr	r3, [pc, #296]	; (20002198 <initSprites+0x188>)
20002070:	62fb      	str	r3, [r7, #44]	; 0x2c
	load_sprite(pointer15, bird2_gray_bits, bird2_black_width, bird2_black_height);
20002072:	494a      	ldr	r1, [pc, #296]	; (2000219c <initSprites+0x18c>)
20002074:	6af8      	ldr	r0, [r7, #44]	; 0x2c
20002076:	2319      	movs	r3, #25
20002078:	2219      	movs	r2, #25
2000207a:	f001 ff97 	bl	20003fac <load_sprite>
	bird2Gray = pointer15;
2000207e:	4b48      	ldr	r3, [pc, #288]	; (200021a0 <initSprites+0x190>)
20002080:	6afa      	ldr	r2, [r7, #44]	; 0x2c
20002082:	601a      	str	r2, [r3, #0]
	sprite *pointer16 = &tempBird2Black;
20002084:	4b47      	ldr	r3, [pc, #284]	; (200021a4 <initSprites+0x194>)
20002086:	62bb      	str	r3, [r7, #40]	; 0x28
	load_sprite(pointer16, bird2_black_bits, bird2_black_width, bird2_black_height);
20002088:	4947      	ldr	r1, [pc, #284]	; (200021a8 <initSprites+0x198>)
2000208a:	6ab8      	ldr	r0, [r7, #40]	; 0x28
2000208c:	2319      	movs	r3, #25
2000208e:	2219      	movs	r2, #25
20002090:	f001 ff8c 	bl	20003fac <load_sprite>
	bird2Black = pointer16;
20002094:	4b45      	ldr	r3, [pc, #276]	; (200021ac <initSprites+0x19c>)
20002096:	6aba      	ldr	r2, [r7, #40]	; 0x28
20002098:	601a      	str	r2, [r3, #0]
	
	
	sprite *finalPointer = &tempBird3Light;
2000209a:	4b45      	ldr	r3, [pc, #276]	; (200021b0 <initSprites+0x1a0>)
2000209c:	627b      	str	r3, [r7, #36]	; 0x24
	load_sprite(finalPointer, bird3_light_bits, bird3_black_width, bird3_black_height);
2000209e:	4945      	ldr	r1, [pc, #276]	; (200021b4 <initSprites+0x1a4>)
200020a0:	6a78      	ldr	r0, [r7, #36]	; 0x24
200020a2:	2319      	movs	r3, #25
200020a4:	2219      	movs	r2, #25
200020a6:	f001 ff81 	bl	20003fac <load_sprite>
	bird3Light = finalPointer;
200020aa:	4b43      	ldr	r3, [pc, #268]	; (200021b8 <initSprites+0x1a8>)
200020ac:	6a7a      	ldr	r2, [r7, #36]	; 0x24
200020ae:	601a      	str	r2, [r3, #0]
	sprite *pointer17 = &tempBird3Gray;
200020b0:	4b42      	ldr	r3, [pc, #264]	; (200021bc <initSprites+0x1ac>)
200020b2:	623b      	str	r3, [r7, #32]
	load_sprite(pointer17, bird3_gray_bits, bird3_black_width, bird3_black_height);
200020b4:	4942      	ldr	r1, [pc, #264]	; (200021c0 <initSprites+0x1b0>)
200020b6:	6a38      	ldr	r0, [r7, #32]
200020b8:	2319      	movs	r3, #25
200020ba:	2219      	movs	r2, #25
200020bc:	f001 ff76 	bl	20003fac <load_sprite>
	bird3Gray = pointer17;
200020c0:	4b40      	ldr	r3, [pc, #256]	; (200021c4 <initSprites+0x1b4>)
200020c2:	6a3a      	ldr	r2, [r7, #32]
200020c4:	601a      	str	r2, [r3, #0]
	sprite *pointer18 = &tempBird3Black;
200020c6:	4b40      	ldr	r3, [pc, #256]	; (200021c8 <initSprites+0x1b8>)
200020c8:	61fb      	str	r3, [r7, #28]
	load_sprite(pointer18, bird3_black_bits, bird3_black_width, bird3_black_height);
200020ca:	4940      	ldr	r1, [pc, #256]	; (200021cc <initSprites+0x1bc>)
200020cc:	69f8      	ldr	r0, [r7, #28]
200020ce:	2319      	movs	r3, #25
200020d0:	2219      	movs	r2, #25
200020d2:	f001 ff6b 	bl	20003fac <load_sprite>
	bird3Black = pointer18;	
200020d6:	4b3e      	ldr	r3, [pc, #248]	; (200021d0 <initSprites+0x1c0>)
200020d8:	69fa      	ldr	r2, [r7, #28]
200020da:	601a      	str	r2, [r3, #0]
	
	sprite *pointer19 = &tempBird4Light;
200020dc:	4b3d      	ldr	r3, [pc, #244]	; (200021d4 <initSprites+0x1c4>)
200020de:	61bb      	str	r3, [r7, #24]
	load_sprite(pointer19, bird4_light_bits, bird4_black_width, bird4_black_height);
200020e0:	493d      	ldr	r1, [pc, #244]	; (200021d8 <initSprites+0x1c8>)
200020e2:	69b8      	ldr	r0, [r7, #24]
200020e4:	2319      	movs	r3, #25
200020e6:	2219      	movs	r2, #25
200020e8:	f001 ff60 	bl	20003fac <load_sprite>
	bird4Light = pointer19;
200020ec:	4b3b      	ldr	r3, [pc, #236]	; (200021dc <initSprites+0x1cc>)
200020ee:	69ba      	ldr	r2, [r7, #24]
200020f0:	601a      	str	r2, [r3, #0]
	sprite *pointer20 = &tempBird4Gray;
200020f2:	4b3b      	ldr	r3, [pc, #236]	; (200021e0 <initSprites+0x1d0>)
200020f4:	617b      	str	r3, [r7, #20]
	load_sprite(pointer20, bird4_gray_bits, bird4_black_width, bird4_black_height);
200020f6:	493b      	ldr	r1, [pc, #236]	; (200021e4 <initSprites+0x1d4>)
200020f8:	6978      	ldr	r0, [r7, #20]
200020fa:	2319      	movs	r3, #25
200020fc:	2219      	movs	r2, #25
200020fe:	f001 ff55 	bl	20003fac <load_sprite>
	bird4Gray = pointer20;
20002102:	4b39      	ldr	r3, [pc, #228]	; (200021e8 <initSprites+0x1d8>)
20002104:	697a      	ldr	r2, [r7, #20]
20002106:	601a      	str	r2, [r3, #0]
	sprite *pointer21 = &tempBird4Black;
20002108:	4b38      	ldr	r3, [pc, #224]	; (200021ec <initSprites+0x1dc>)
2000210a:	613b      	str	r3, [r7, #16]
	load_sprite(pointer21, bird4_black_bits, bird4_black_width, bird4_black_height);
2000210c:	4938      	ldr	r1, [pc, #224]	; (200021f0 <initSprites+0x1e0>)
2000210e:	6938      	ldr	r0, [r7, #16]
20002110:	2319      	movs	r3, #25
20002112:	2219      	movs	r2, #25
20002114:	f001 ff4a 	bl	20003fac <load_sprite>
	bird4Black = pointer21;	
20002118:	4b36      	ldr	r3, [pc, #216]	; (200021f4 <initSprites+0x1e4>)
2000211a:	693a      	ldr	r2, [r7, #16]
2000211c:	601a      	str	r2, [r3, #0]
	
	sprite *pointer22 = &tempBird5Light;
2000211e:	4b36      	ldr	r3, [pc, #216]	; (200021f8 <initSprites+0x1e8>)
20002120:	60fb      	str	r3, [r7, #12]
	load_sprite(pointer22, bird5_light_bits, bird5_black_width, bird5_black_height);
20002122:	4936      	ldr	r1, [pc, #216]	; (200021fc <initSprites+0x1ec>)
20002124:	68f8      	ldr	r0, [r7, #12]
20002126:	2319      	movs	r3, #25
20002128:	2219      	movs	r2, #25
2000212a:	f001 ff3f 	bl	20003fac <load_sprite>
	bird5Light = pointer22;
2000212e:	4b34      	ldr	r3, [pc, #208]	; (20002200 <initSprites+0x1f0>)
20002130:	68fa      	ldr	r2, [r7, #12]
20002132:	601a      	str	r2, [r3, #0]
	sprite *pointer23 = &tempBird5Gray;
20002134:	4b33      	ldr	r3, [pc, #204]	; (20002204 <initSprites+0x1f4>)
20002136:	60bb      	str	r3, [r7, #8]
	load_sprite(pointer23, bird5_gray_bits, bird5_black_width, bird5_black_height);
20002138:	4933      	ldr	r1, [pc, #204]	; (20002208 <initSprites+0x1f8>)
2000213a:	68b8      	ldr	r0, [r7, #8]
2000213c:	2319      	movs	r3, #25
2000213e:	2219      	movs	r2, #25
20002140:	f001 ff34 	bl	20003fac <load_sprite>
	bird5Gray = pointer23;
20002144:	4b31      	ldr	r3, [pc, #196]	; (2000220c <initSprites+0x1fc>)
20002146:	68ba      	ldr	r2, [r7, #8]
20002148:	601a      	str	r2, [r3, #0]
	sprite *pointer24 = &tempBird5Black;
2000214a:	4b31      	ldr	r3, [pc, #196]	; (20002210 <initSprites+0x200>)
2000214c:	607b      	str	r3, [r7, #4]
	load_sprite(pointer24, bird5_black_bits, bird5_black_width, bird5_black_height);
2000214e:	4931      	ldr	r1, [pc, #196]	; (20002214 <initSprites+0x204>)
20002150:	6878      	ldr	r0, [r7, #4]
20002152:	2319      	movs	r3, #25
20002154:	2219      	movs	r2, #25
20002156:	f001 ff29 	bl	20003fac <load_sprite>
	bird5Black = pointer24;
2000215a:	4b2f      	ldr	r3, [pc, #188]	; (20002218 <initSprites+0x208>)
2000215c:	687a      	ldr	r2, [r7, #4]
2000215e:	601a      	str	r2, [r3, #0]
}
20002160:	46c0      	nop			; (mov r8, r8)
20002162:	46bd      	mov	sp, r7
20002164:	b010      	add	sp, #64	; 0x40
20002166:	bd80      	pop	{r7, pc}
20002168:	20005430 	andcs	r5, r0, r0, lsr r4
2000216c:	200092ec 	andcs	r9, r0, ip, ror #5
20002170:	2000543c 	andcs	r5, r0, ip, lsr r4
20002174:	200053cc 	andcs	r5, r0, ip, asr #7
20002178:	20009288 	andcs	r9, r0, r8, lsl #5
2000217c:	20005344 	andcs	r5, r0, r4, asr #6
20002180:	200053bc 			; <UNDEFINED> instruction: 0x200053bc
20002184:	20009224 	andcs	r9, r0, r4, lsr #4
20002188:	200053ac 	andcs	r5, r0, ip, lsr #7
2000218c:	20005440 	andcs	r5, r0, r0, asr #8
20002190:	20009418 	andcs	r9, r0, r8, lsl r4
20002194:	200054e0 	andcs	r5, r0, r0, ror #9
20002198:	200053e8 	andcs	r5, r0, r8, ror #7
2000219c:	200093b4 			; <UNDEFINED> instruction: 0x200093b4
200021a0:	2000542c 	andcs	r5, r0, ip, lsr #8
200021a4:	200054c8 	andcs	r5, r0, r8, asr #9
200021a8:	20009350 	andcs	r9, r0, r0, asr r3
200021ac:	200053a8 	andcs	r5, r0, r8, lsr #7
200021b0:	20005464 	andcs	r5, r0, r4, ror #8
200021b4:	20009544 	andcs	r9, r0, r4, asr #10
200021b8:	200053f4 	strdcs	r5, [r0], -r4
200021bc:	20005470 	andcs	r5, r0, r0, ror r4
200021c0:	200094e0 	andcs	r9, r0, r0, ror #9
200021c4:	200053c8 	andcs	r5, r0, r8, asr #7
200021c8:	20005420 	andcs	r5, r0, r0, lsr #8
200021cc:	2000947c 	andcs	r9, r0, ip, ror r4
200021d0:	200053a0 	andcs	r5, r0, r0, lsr #7
200021d4:	20005458 	andcs	r5, r0, r8, asr r4
200021d8:	20009670 	andcs	r9, r0, r0, ror r6
200021dc:	20005340 	andcs	r5, r0, r0, asr #6
200021e0:	200054d4 	ldrdcs	r5, [r0], -r4
200021e4:	2000960c 	andcs	r9, r0, ip, lsl #12
200021e8:	200053a4 	andcs	r5, r0, r4, lsr #7
200021ec:	20005358 	andcs	r5, r0, r8, asr r3
200021f0:	200095a8 	andcs	r9, r0, r8, lsr #11
200021f4:	200054c4 	andcs	r5, r0, r4, asr #9
200021f8:	200053dc 	ldrdcs	r5, [r0], -ip
200021fc:	2000979c 	mulcs	r0, ip, r7
20002200:	2000541c 	andcs	r5, r0, ip, lsl r4
20002204:	200053f8 	strdcs	r5, [r0], -r8
20002208:	20009738 	andcs	r9, r0, r8, lsr r7
2000220c:	200053d8 	ldrdcs	r5, [r0], -r8
20002210:	20005404 	andcs	r5, r0, r4, lsl #8
20002214:	200096d4 	ldrdcs	r9, [r0], -r4
20002218:	20005354 	andcs	r5, r0, r4, asr r3

2000221c <init_bird>:
	
void init_bird( GameObject *birdObj ) {
2000221c:	b590      	push	{r4, r7, lr}
2000221e:	b083      	sub	sp, #12
20002220:	af00      	add	r7, sp, #0
20002222:	6078      	str	r0, [r7, #4]
	static int firstTime = 1;
	if (firstTime) {
20002224:	4b37      	ldr	r3, [pc, #220]	; (20002304 <init_bird+0xe8>)
20002226:	681b      	ldr	r3, [r3, #0]
20002228:	2b00      	cmp	r3, #0
2000222a:	d057      	beq.n	200022dc <init_bird+0xc0>
		initSprites();
2000222c:	f7ff fef0 	bl	20002010 <initSprites>
		firstTime = 0;			
20002230:	4b34      	ldr	r3, [pc, #208]	; (20002304 <init_bird+0xe8>)
20002232:	2200      	movs	r2, #0
20002234:	601a      	str	r2, [r3, #0]

		birdImages[0] = bird1Image;
20002236:	4b34      	ldr	r3, [pc, #208]	; (20002308 <init_bird+0xec>)
20002238:	4a34      	ldr	r2, [pc, #208]	; (2000230c <init_bird+0xf0>)
2000223a:	ca13      	ldmia	r2!, {r0, r1, r4}
2000223c:	c313      	stmia	r3!, {r0, r1, r4}
		birdImages[1] = bird2Image;
2000223e:	4b32      	ldr	r3, [pc, #200]	; (20002308 <init_bird+0xec>)
20002240:	4a33      	ldr	r2, [pc, #204]	; (20002310 <init_bird+0xf4>)
20002242:	330c      	adds	r3, #12
20002244:	ca13      	ldmia	r2!, {r0, r1, r4}
20002246:	c313      	stmia	r3!, {r0, r1, r4}
		birdImages[2] = bird3Image;
20002248:	4b2f      	ldr	r3, [pc, #188]	; (20002308 <init_bird+0xec>)
2000224a:	4a32      	ldr	r2, [pc, #200]	; (20002314 <init_bird+0xf8>)
2000224c:	3318      	adds	r3, #24
2000224e:	ca13      	ldmia	r2!, {r0, r1, r4}
20002250:	c313      	stmia	r3!, {r0, r1, r4}
		birdImages[3] = bird4Image;
20002252:	4b2d      	ldr	r3, [pc, #180]	; (20002308 <init_bird+0xec>)
20002254:	4a30      	ldr	r2, [pc, #192]	; (20002318 <init_bird+0xfc>)
20002256:	3324      	adds	r3, #36	; 0x24
20002258:	ca13      	ldmia	r2!, {r0, r1, r4}
2000225a:	c313      	stmia	r3!, {r0, r1, r4}
		birdImages[4] = bird5Image;
2000225c:	4b2a      	ldr	r3, [pc, #168]	; (20002308 <init_bird+0xec>)
2000225e:	4a2f      	ldr	r2, [pc, #188]	; (2000231c <init_bird+0x100>)
20002260:	3330      	adds	r3, #48	; 0x30
20002262:	ca13      	ldmia	r2!, {r0, r1, r4}
20002264:	c313      	stmia	r3!, {r0, r1, r4}
		birdImages[5] = bird6Image;
20002266:	4b28      	ldr	r3, [pc, #160]	; (20002308 <init_bird+0xec>)
20002268:	4a2d      	ldr	r2, [pc, #180]	; (20002320 <init_bird+0x104>)
2000226a:	333c      	adds	r3, #60	; 0x3c
2000226c:	ca13      	ldmia	r2!, {r0, r1, r4}
2000226e:	c313      	stmia	r3!, {r0, r1, r4}
//		birdImages[6] = bird7Image;
		//birdImages[7] = bird8Image;
		
		load_image(&birdImages[0], bird1Black, bird1Gray, bird1Light);
20002270:	4b2c      	ldr	r3, [pc, #176]	; (20002324 <init_bird+0x108>)
20002272:	6819      	ldr	r1, [r3, #0]
20002274:	4b2c      	ldr	r3, [pc, #176]	; (20002328 <init_bird+0x10c>)
20002276:	681a      	ldr	r2, [r3, #0]
20002278:	4b2c      	ldr	r3, [pc, #176]	; (2000232c <init_bird+0x110>)
2000227a:	681b      	ldr	r3, [r3, #0]
2000227c:	4822      	ldr	r0, [pc, #136]	; (20002308 <init_bird+0xec>)
2000227e:	f001 fe81 	bl	20003f84 <load_image>
		load_image(&birdImages[1], bird2Black, bird2Gray, bird2Light);
20002282:	4b2b      	ldr	r3, [pc, #172]	; (20002330 <init_bird+0x114>)
20002284:	6819      	ldr	r1, [r3, #0]
20002286:	4b2b      	ldr	r3, [pc, #172]	; (20002334 <init_bird+0x118>)
20002288:	681a      	ldr	r2, [r3, #0]
2000228a:	4b2b      	ldr	r3, [pc, #172]	; (20002338 <init_bird+0x11c>)
2000228c:	681b      	ldr	r3, [r3, #0]
2000228e:	482b      	ldr	r0, [pc, #172]	; (2000233c <init_bird+0x120>)
20002290:	f001 fe78 	bl	20003f84 <load_image>
		load_image(&birdImages[2], bird3Black, bird3Gray, bird3Light);
20002294:	4b2a      	ldr	r3, [pc, #168]	; (20002340 <init_bird+0x124>)
20002296:	6819      	ldr	r1, [r3, #0]
20002298:	4b2a      	ldr	r3, [pc, #168]	; (20002344 <init_bird+0x128>)
2000229a:	681a      	ldr	r2, [r3, #0]
2000229c:	4b2a      	ldr	r3, [pc, #168]	; (20002348 <init_bird+0x12c>)
2000229e:	681b      	ldr	r3, [r3, #0]
200022a0:	482a      	ldr	r0, [pc, #168]	; (2000234c <init_bird+0x130>)
200022a2:	f001 fe6f 	bl	20003f84 <load_image>
		load_image(&birdImages[3], bird4Black, bird4Gray, bird4Light);
200022a6:	4b2a      	ldr	r3, [pc, #168]	; (20002350 <init_bird+0x134>)
200022a8:	6819      	ldr	r1, [r3, #0]
200022aa:	4b2a      	ldr	r3, [pc, #168]	; (20002354 <init_bird+0x138>)
200022ac:	681a      	ldr	r2, [r3, #0]
200022ae:	4b2a      	ldr	r3, [pc, #168]	; (20002358 <init_bird+0x13c>)
200022b0:	681b      	ldr	r3, [r3, #0]
200022b2:	482a      	ldr	r0, [pc, #168]	; (2000235c <init_bird+0x140>)
200022b4:	f001 fe66 	bl	20003f84 <load_image>
		load_image(&birdImages[4], bird5Black, bird5Gray, bird5Light);
200022b8:	4b29      	ldr	r3, [pc, #164]	; (20002360 <init_bird+0x144>)
200022ba:	6819      	ldr	r1, [r3, #0]
200022bc:	4b29      	ldr	r3, [pc, #164]	; (20002364 <init_bird+0x148>)
200022be:	681a      	ldr	r2, [r3, #0]
200022c0:	4b29      	ldr	r3, [pc, #164]	; (20002368 <init_bird+0x14c>)
200022c2:	681b      	ldr	r3, [r3, #0]
200022c4:	4829      	ldr	r0, [pc, #164]	; (2000236c <init_bird+0x150>)
200022c6:	f001 fe5d 	bl	20003f84 <load_image>
		
		//load_image(&birdImages[7], bird2Black, bird2Gray, bird2Light);
		load_image(&birdImages[5], bird3Black, bird3Gray, bird3Light);
200022ca:	4b1d      	ldr	r3, [pc, #116]	; (20002340 <init_bird+0x124>)
200022cc:	6819      	ldr	r1, [r3, #0]
200022ce:	4b1d      	ldr	r3, [pc, #116]	; (20002344 <init_bird+0x128>)
200022d0:	681a      	ldr	r2, [r3, #0]
200022d2:	4b1d      	ldr	r3, [pc, #116]	; (20002348 <init_bird+0x12c>)
200022d4:	681b      	ldr	r3, [r3, #0]
200022d6:	4826      	ldr	r0, [pc, #152]	; (20002370 <init_bird+0x154>)
200022d8:	f001 fe54 	bl	20003f84 <load_image>
		//load_image(&birdImages[5], bird4Black, bird4Gray, bird4Light);
	}
	
	birdObj->images = birdImages;
200022dc:	687b      	ldr	r3, [r7, #4]
200022de:	4a0a      	ldr	r2, [pc, #40]	; (20002308 <init_bird+0xec>)
200022e0:	601a      	str	r2, [r3, #0]

	birdObj->current_frame = 0;
200022e2:	687b      	ldr	r3, [r7, #4]
200022e4:	2200      	movs	r2, #0
200022e6:	615a      	str	r2, [r3, #20]
	birdObj->n_frames = 6;
200022e8:	687b      	ldr	r3, [r7, #4]
200022ea:	2206      	movs	r2, #6
200022ec:	619a      	str	r2, [r3, #24]
	birdObj->animation_speed = 1;
200022ee:	687b      	ldr	r3, [r7, #4]
200022f0:	2201      	movs	r2, #1
200022f2:	61da      	str	r2, [r3, #28]
	birdObj->animation_counter = 0;
200022f4:	687b      	ldr	r3, [r7, #4]
200022f6:	2200      	movs	r2, #0
200022f8:	621a      	str	r2, [r3, #32]
}
200022fa:	46c0      	nop			; (mov r8, r8)
200022fc:	46bd      	mov	sp, r7
200022fe:	b003      	add	sp, #12
20002300:	bd90      	pop	{r4, r7, pc}
20002302:	46c0      	nop			; (mov r8, r8)
20002304:	20009800 	andcs	r9, r0, r0, lsl #16
20002308:	2000547c 	andcs	r5, r0, ip, ror r4
2000230c:	20005394 	mulcs	r0, r4, r3
20002310:	20005364 	andcs	r5, r0, r4, ror #6
20002314:	2000544c 	andcs	r5, r0, ip, asr #8
20002318:	200053b0 			; <UNDEFINED> instruction: 0x200053b0
2000231c:	20005410 	andcs	r5, r0, r0, lsl r4
20002320:	20005348 	andcs	r5, r0, r8, asr #6
20002324:	200053ac 	andcs	r5, r0, ip, lsr #7
20002328:	20005344 	andcs	r5, r0, r4, asr #6
2000232c:	2000543c 	andcs	r5, r0, ip, lsr r4
20002330:	200053a8 	andcs	r5, r0, r8, lsr #7
20002334:	2000542c 	andcs	r5, r0, ip, lsr #8
20002338:	200054e0 	andcs	r5, r0, r0, ror #9
2000233c:	20005488 	andcs	r5, r0, r8, lsl #9
20002340:	200053a0 	andcs	r5, r0, r0, lsr #7
20002344:	200053c8 	andcs	r5, r0, r8, asr #7
20002348:	200053f4 	strdcs	r5, [r0], -r4
2000234c:	20005494 	mulcs	r0, r4, r4
20002350:	200054c4 	andcs	r5, r0, r4, asr #9
20002354:	200053a4 	andcs	r5, r0, r4, lsr #7
20002358:	20005340 	andcs	r5, r0, r0, asr #6
2000235c:	200054a0 	andcs	r5, r0, r0, lsr #9
20002360:	20005354 	andcs	r5, r0, r4, asr r3
20002364:	200053d8 	ldrdcs	r5, [r0], -r8
20002368:	2000541c 	andcs	r5, r0, ip, lsl r4
2000236c:	200054ac 	andcs	r5, r0, ip, lsr #9
20002370:	200054b8 			; <UNDEFINED> instruction: 0x200054b8

20002374 <initSprites>:
Image witch1Image;
Image witch2Image;
Image witch3Image;
Image witch4Image;
Image witchImages[4];
static void initSprites( void ) {	
20002374:	b580      	push	{r7, lr}
20002376:	b08a      	sub	sp, #40	; 0x28
20002378:	af00      	add	r7, sp, #0
	
	sprite *pointer11 = &tempWitchLight;
2000237a:	4b33      	ldr	r3, [pc, #204]	; (20002448 <initSprites+0xd4>)
2000237c:	627b      	str	r3, [r7, #36]	; 0x24
	load_sprite(pointer11, witch1_light_bits, witch1_black_width, witch1_black_height);
2000237e:	4933      	ldr	r1, [pc, #204]	; (2000244c <initSprites+0xd8>)
20002380:	6a78      	ldr	r0, [r7, #36]	; 0x24
20002382:	2312      	movs	r3, #18
20002384:	2212      	movs	r2, #18
20002386:	f001 fe11 	bl	20003fac <load_sprite>
	witch1Light = pointer11;
2000238a:	4b31      	ldr	r3, [pc, #196]	; (20002450 <initSprites+0xdc>)
2000238c:	6a7a      	ldr	r2, [r7, #36]	; 0x24
2000238e:	601a      	str	r2, [r3, #0]
	sprite *pointer12 = &tempWitchGray;
20002390:	4b30      	ldr	r3, [pc, #192]	; (20002454 <initSprites+0xe0>)
20002392:	623b      	str	r3, [r7, #32]
	load_sprite(pointer12, witch1_gray_bits, witch1_black_width, witch1_black_height);
20002394:	4930      	ldr	r1, [pc, #192]	; (20002458 <initSprites+0xe4>)
20002396:	6a38      	ldr	r0, [r7, #32]
20002398:	2312      	movs	r3, #18
2000239a:	2212      	movs	r2, #18
2000239c:	f001 fe06 	bl	20003fac <load_sprite>
	witch1Gray = pointer12;
200023a0:	4b2e      	ldr	r3, [pc, #184]	; (2000245c <initSprites+0xe8>)
200023a2:	6a3a      	ldr	r2, [r7, #32]
200023a4:	601a      	str	r2, [r3, #0]
	sprite *pointer13 = &tempWitchBlack;
200023a6:	4b2e      	ldr	r3, [pc, #184]	; (20002460 <initSprites+0xec>)
200023a8:	61fb      	str	r3, [r7, #28]
	load_sprite(pointer13, witch1_black_bits, witch1_black_width, witch1_black_height);
200023aa:	492e      	ldr	r1, [pc, #184]	; (20002464 <initSprites+0xf0>)
200023ac:	69f8      	ldr	r0, [r7, #28]
200023ae:	2312      	movs	r3, #18
200023b0:	2212      	movs	r2, #18
200023b2:	f001 fdfb 	bl	20003fac <load_sprite>
	witch1Black = pointer13;	
200023b6:	4b2c      	ldr	r3, [pc, #176]	; (20002468 <initSprites+0xf4>)
200023b8:	69fa      	ldr	r2, [r7, #28]
200023ba:	601a      	str	r2, [r3, #0]
	
	sprite *pointer14 = &tempWitch2Light;
200023bc:	4b2b      	ldr	r3, [pc, #172]	; (2000246c <initSprites+0xf8>)
200023be:	61bb      	str	r3, [r7, #24]
	load_sprite(pointer14, witch2_light_bits, witch2_black_width, witch2_black_height);
200023c0:	492b      	ldr	r1, [pc, #172]	; (20002470 <initSprites+0xfc>)
200023c2:	69b8      	ldr	r0, [r7, #24]
200023c4:	2312      	movs	r3, #18
200023c6:	2212      	movs	r2, #18
200023c8:	f001 fdf0 	bl	20003fac <load_sprite>
	witch2Light = pointer14;
200023cc:	4b29      	ldr	r3, [pc, #164]	; (20002474 <initSprites+0x100>)
200023ce:	69ba      	ldr	r2, [r7, #24]
200023d0:	601a      	str	r2, [r3, #0]
	sprite *pointer15 = &tempWitch2Gray;
200023d2:	4b29      	ldr	r3, [pc, #164]	; (20002478 <initSprites+0x104>)
200023d4:	617b      	str	r3, [r7, #20]
	load_sprite(pointer15, witch2_gray_bits, witch2_black_width, witch2_black_height);
200023d6:	4929      	ldr	r1, [pc, #164]	; (2000247c <initSprites+0x108>)
200023d8:	6978      	ldr	r0, [r7, #20]
200023da:	2312      	movs	r3, #18
200023dc:	2212      	movs	r2, #18
200023de:	f001 fde5 	bl	20003fac <load_sprite>
	witch2Gray = pointer15;
200023e2:	4b27      	ldr	r3, [pc, #156]	; (20002480 <initSprites+0x10c>)
200023e4:	697a      	ldr	r2, [r7, #20]
200023e6:	601a      	str	r2, [r3, #0]
	sprite *pointer16 = &tempWitch2Black;
200023e8:	4b26      	ldr	r3, [pc, #152]	; (20002484 <initSprites+0x110>)
200023ea:	613b      	str	r3, [r7, #16]
	load_sprite(pointer16, witch2_black_bits, witch2_black_width, witch2_black_height);
200023ec:	4926      	ldr	r1, [pc, #152]	; (20002488 <initSprites+0x114>)
200023ee:	6938      	ldr	r0, [r7, #16]
200023f0:	2312      	movs	r3, #18
200023f2:	2212      	movs	r2, #18
200023f4:	f001 fdda 	bl	20003fac <load_sprite>
	witch2Black = pointer16;
200023f8:	4b24      	ldr	r3, [pc, #144]	; (2000248c <initSprites+0x118>)
200023fa:	693a      	ldr	r2, [r7, #16]
200023fc:	601a      	str	r2, [r3, #0]
	
	
	sprite *finalPointer = &tempWitch3Light;
200023fe:	4b24      	ldr	r3, [pc, #144]	; (20002490 <initSprites+0x11c>)
20002400:	60fb      	str	r3, [r7, #12]
	load_sprite(finalPointer, witch3_light_bits, witch3_black_width, witch3_black_height);
20002402:	4924      	ldr	r1, [pc, #144]	; (20002494 <initSprites+0x120>)
20002404:	68f8      	ldr	r0, [r7, #12]
20002406:	2312      	movs	r3, #18
20002408:	2212      	movs	r2, #18
2000240a:	f001 fdcf 	bl	20003fac <load_sprite>
	witch3Light = finalPointer;
2000240e:	4b22      	ldr	r3, [pc, #136]	; (20002498 <initSprites+0x124>)
20002410:	68fa      	ldr	r2, [r7, #12]
20002412:	601a      	str	r2, [r3, #0]
	sprite *pointer17 = &tempWitch3Gray;
20002414:	4b21      	ldr	r3, [pc, #132]	; (2000249c <initSprites+0x128>)
20002416:	60bb      	str	r3, [r7, #8]
	load_sprite(pointer17, witch3_gray_bits, witch3_black_width, witch3_black_height);
20002418:	4921      	ldr	r1, [pc, #132]	; (200024a0 <initSprites+0x12c>)
2000241a:	68b8      	ldr	r0, [r7, #8]
2000241c:	2312      	movs	r3, #18
2000241e:	2212      	movs	r2, #18
20002420:	f001 fdc4 	bl	20003fac <load_sprite>
	witch3Gray = pointer17;
20002424:	4b1f      	ldr	r3, [pc, #124]	; (200024a4 <initSprites+0x130>)
20002426:	68ba      	ldr	r2, [r7, #8]
20002428:	601a      	str	r2, [r3, #0]
	sprite *pointer18 = &tempWitch3Black;
2000242a:	4b1f      	ldr	r3, [pc, #124]	; (200024a8 <initSprites+0x134>)
2000242c:	607b      	str	r3, [r7, #4]
	load_sprite(pointer18, witch3_black_bits, witch3_black_width, witch3_black_height);
2000242e:	491f      	ldr	r1, [pc, #124]	; (200024ac <initSprites+0x138>)
20002430:	6878      	ldr	r0, [r7, #4]
20002432:	2312      	movs	r3, #18
20002434:	2212      	movs	r2, #18
20002436:	f001 fdb9 	bl	20003fac <load_sprite>
	witch3Black = pointer18;	
2000243a:	4b1d      	ldr	r3, [pc, #116]	; (200024b0 <initSprites+0x13c>)
2000243c:	687a      	ldr	r2, [r7, #4]
2000243e:	601a      	str	r2, [r3, #0]
	
}
20002440:	46c0      	nop			; (mov r8, r8)
20002442:	46bd      	mov	sp, r7
20002444:	b00a      	add	sp, #40	; 0x28
20002446:	bd80      	pop	{r7, pc}
20002448:	200055cc 	andcs	r5, r0, ip, asr #11
2000244c:	20009874 	andcs	r9, r0, r4, ror r8
20002450:	200055e4 	andcs	r5, r0, r4, ror #11
20002454:	2000555c 	andcs	r5, r0, ip, asr r5
20002458:	2000983c 	andcs	r9, r0, ip, lsr r8
2000245c:	200054e4 	andcs	r5, r0, r4, ror #9
20002460:	20005534 	andcs	r5, r0, r4, lsr r5
20002464:	20009804 	andcs	r9, r0, r4, lsl #16
20002468:	200055b8 			; <UNDEFINED> instruction: 0x200055b8
2000246c:	200055d8 	ldrdcs	r5, [r0], -r8
20002470:	2000991c 	andcs	r9, r0, ip, lsl r9
20002474:	200054e8 	andcs	r5, r0, r8, ror #9
20002478:	20005574 	andcs	r5, r0, r4, ror r5
2000247c:	200098e4 	andcs	r9, r0, r4, ror #17
20002480:	20005558 	andcs	r5, r0, r8, asr r5
20002484:	20005528 	andcs	r5, r0, r8, lsr #10
20002488:	200098ac 	andcs	r9, r0, ip, lsr #17
2000248c:	200055f4 	strdcs	r5, [r0], -r4
20002490:	20005540 	andcs	r5, r0, r0, asr #10
20002494:	200099c4 	andcs	r9, r0, r4, asr #19
20002498:	200055a8 	andcs	r5, r0, r8, lsr #11
2000249c:	200055ac 	andcs	r5, r0, ip, lsr #11
200024a0:	2000998c 	andcs	r9, r0, ip, lsl #19
200024a4:	200055bc 			; <UNDEFINED> instruction: 0x200055bc
200024a8:	20005568 	andcs	r5, r0, r8, ror #10
200024ac:	20009954 	andcs	r9, r0, r4, asr r9
200024b0:	20005580 	andcs	r5, r0, r0, lsl #11

200024b4 <init_witch>:
	
void init_witch( GameObject *witchObj ) {
200024b4:	b590      	push	{r4, r7, lr}
200024b6:	b083      	sub	sp, #12
200024b8:	af00      	add	r7, sp, #0
200024ba:	6078      	str	r0, [r7, #4]
	static int firstTime = 1;
	if (firstTime) {
200024bc:	4b29      	ldr	r3, [pc, #164]	; (20002564 <init_witch+0xb0>)
200024be:	681b      	ldr	r3, [r3, #0]
200024c0:	2b00      	cmp	r3, #0
200024c2:	d03b      	beq.n	2000253c <init_witch+0x88>
		initSprites();
200024c4:	f7ff ff56 	bl	20002374 <initSprites>
		firstTime = 0;			
200024c8:	4b26      	ldr	r3, [pc, #152]	; (20002564 <init_witch+0xb0>)
200024ca:	2200      	movs	r2, #0
200024cc:	601a      	str	r2, [r3, #0]

		witchImages[0] = witch1Image;
200024ce:	4b26      	ldr	r3, [pc, #152]	; (20002568 <init_witch+0xb4>)
200024d0:	4a26      	ldr	r2, [pc, #152]	; (2000256c <init_witch+0xb8>)
200024d2:	ca13      	ldmia	r2!, {r0, r1, r4}
200024d4:	c313      	stmia	r3!, {r0, r1, r4}
		witchImages[1] = witch2Image;
200024d6:	4b24      	ldr	r3, [pc, #144]	; (20002568 <init_witch+0xb4>)
200024d8:	4a25      	ldr	r2, [pc, #148]	; (20002570 <init_witch+0xbc>)
200024da:	330c      	adds	r3, #12
200024dc:	ca13      	ldmia	r2!, {r0, r1, r4}
200024de:	c313      	stmia	r3!, {r0, r1, r4}
		witchImages[2] = witch3Image;
200024e0:	4b21      	ldr	r3, [pc, #132]	; (20002568 <init_witch+0xb4>)
200024e2:	4a24      	ldr	r2, [pc, #144]	; (20002574 <init_witch+0xc0>)
200024e4:	3318      	adds	r3, #24
200024e6:	ca13      	ldmia	r2!, {r0, r1, r4}
200024e8:	c313      	stmia	r3!, {r0, r1, r4}
		witchImages[3] = witch4Image;
200024ea:	4b1f      	ldr	r3, [pc, #124]	; (20002568 <init_witch+0xb4>)
200024ec:	4a22      	ldr	r2, [pc, #136]	; (20002578 <init_witch+0xc4>)
200024ee:	3324      	adds	r3, #36	; 0x24
200024f0:	ca13      	ldmia	r2!, {r0, r1, r4}
200024f2:	c313      	stmia	r3!, {r0, r1, r4}
		
		
		load_image(&witchImages[0], witch1Black, witch1Gray, witch1Light);
200024f4:	4b21      	ldr	r3, [pc, #132]	; (2000257c <init_witch+0xc8>)
200024f6:	6819      	ldr	r1, [r3, #0]
200024f8:	4b21      	ldr	r3, [pc, #132]	; (20002580 <init_witch+0xcc>)
200024fa:	681a      	ldr	r2, [r3, #0]
200024fc:	4b21      	ldr	r3, [pc, #132]	; (20002584 <init_witch+0xd0>)
200024fe:	681b      	ldr	r3, [r3, #0]
20002500:	4819      	ldr	r0, [pc, #100]	; (20002568 <init_witch+0xb4>)
20002502:	f001 fd3f 	bl	20003f84 <load_image>
		load_image(&witchImages[1], witch2Black, witch2Gray, witch2Light);
20002506:	4b20      	ldr	r3, [pc, #128]	; (20002588 <init_witch+0xd4>)
20002508:	6819      	ldr	r1, [r3, #0]
2000250a:	4b20      	ldr	r3, [pc, #128]	; (2000258c <init_witch+0xd8>)
2000250c:	681a      	ldr	r2, [r3, #0]
2000250e:	4b20      	ldr	r3, [pc, #128]	; (20002590 <init_witch+0xdc>)
20002510:	681b      	ldr	r3, [r3, #0]
20002512:	4820      	ldr	r0, [pc, #128]	; (20002594 <init_witch+0xe0>)
20002514:	f001 fd36 	bl	20003f84 <load_image>
		load_image(&witchImages[2], witch3Black, witch3Gray, witch3Light);
20002518:	4b1f      	ldr	r3, [pc, #124]	; (20002598 <init_witch+0xe4>)
2000251a:	6819      	ldr	r1, [r3, #0]
2000251c:	4b1f      	ldr	r3, [pc, #124]	; (2000259c <init_witch+0xe8>)
2000251e:	681a      	ldr	r2, [r3, #0]
20002520:	4b1f      	ldr	r3, [pc, #124]	; (200025a0 <init_witch+0xec>)
20002522:	681b      	ldr	r3, [r3, #0]
20002524:	481f      	ldr	r0, [pc, #124]	; (200025a4 <init_witch+0xf0>)
20002526:	f001 fd2d 	bl	20003f84 <load_image>
		load_image(&witchImages[3], witch2Black, witch2Gray, witch2Light);
2000252a:	4b17      	ldr	r3, [pc, #92]	; (20002588 <init_witch+0xd4>)
2000252c:	6819      	ldr	r1, [r3, #0]
2000252e:	4b17      	ldr	r3, [pc, #92]	; (2000258c <init_witch+0xd8>)
20002530:	681a      	ldr	r2, [r3, #0]
20002532:	4b17      	ldr	r3, [pc, #92]	; (20002590 <init_witch+0xdc>)
20002534:	681b      	ldr	r3, [r3, #0]
20002536:	481c      	ldr	r0, [pc, #112]	; (200025a8 <init_witch+0xf4>)
20002538:	f001 fd24 	bl	20003f84 <load_image>
		
	}
	
	witchObj->images = witchImages;
2000253c:	687b      	ldr	r3, [r7, #4]
2000253e:	4a0a      	ldr	r2, [pc, #40]	; (20002568 <init_witch+0xb4>)
20002540:	601a      	str	r2, [r3, #0]

	witchObj->current_frame = 0;
20002542:	687b      	ldr	r3, [r7, #4]
20002544:	2200      	movs	r2, #0
20002546:	615a      	str	r2, [r3, #20]
	witchObj->n_frames = 4;
20002548:	687b      	ldr	r3, [r7, #4]
2000254a:	2204      	movs	r2, #4
2000254c:	619a      	str	r2, [r3, #24]
	witchObj->animation_speed = 1;
2000254e:	687b      	ldr	r3, [r7, #4]
20002550:	2201      	movs	r2, #1
20002552:	61da      	str	r2, [r3, #28]
	witchObj->animation_counter = 0;
20002554:	687b      	ldr	r3, [r7, #4]
20002556:	2200      	movs	r2, #0
20002558:	621a      	str	r2, [r3, #32]
}
2000255a:	46c0      	nop			; (mov r8, r8)
2000255c:	46bd      	mov	sp, r7
2000255e:	b003      	add	sp, #12
20002560:	bd90      	pop	{r4, r7, pc}
20002562:	46c0      	nop			; (mov r8, r8)
20002564:	200099fc 	strdcs	r9, [r0], -ip
20002568:	200054ec 	andcs	r5, r0, ip, ror #9
2000256c:	200055c0 	andcs	r5, r0, r0, asr #11
20002570:	2000551c 	andcs	r5, r0, ip, lsl r5
20002574:	200055e8 	andcs	r5, r0, r8, ror #11
20002578:	2000554c 	andcs	r5, r0, ip, asr #10
2000257c:	200055b8 			; <UNDEFINED> instruction: 0x200055b8
20002580:	200054e4 	andcs	r5, r0, r4, ror #9
20002584:	200055e4 	andcs	r5, r0, r4, ror #11
20002588:	200055f4 	strdcs	r5, [r0], -r4
2000258c:	20005558 	andcs	r5, r0, r8, asr r5
20002590:	200054e8 	andcs	r5, r0, r8, ror #9
20002594:	200054f8 	strdcs	r5, [r0], -r8
20002598:	20005580 	andcs	r5, r0, r0, lsl #11
2000259c:	200055bc 			; <UNDEFINED> instruction: 0x200055bc
200025a0:	200055a8 	andcs	r5, r0, r8, lsr #11
200025a4:	20005504 	andcs	r5, r0, r4, lsl #10
200025a8:	20005510 	andcs	r5, r0, r0, lsl r5

200025ac <initSprites>:
Image DIP1Image;
Image DIP2Image;
Image DIP3Image;
Image DIP4Image;
Image DIPImages[4];
static void initSprites( void ) {	
200025ac:	b580      	push	{r7, lr}
200025ae:	b08a      	sub	sp, #40	; 0x28
200025b0:	af00      	add	r7, sp, #0
	
	sprite *pointer11 = &tempDIPLight;
200025b2:	4b33      	ldr	r3, [pc, #204]	; (20002680 <initSprites+0xd4>)
200025b4:	627b      	str	r3, [r7, #36]	; 0x24
	load_sprite(pointer11, witch1_light_bits, witch1_black_width, witch1_black_height);
200025b6:	4933      	ldr	r1, [pc, #204]	; (20002684 <initSprites+0xd8>)
200025b8:	6a78      	ldr	r0, [r7, #36]	; 0x24
200025ba:	2312      	movs	r3, #18
200025bc:	2212      	movs	r2, #18
200025be:	f001 fcf5 	bl	20003fac <load_sprite>
	DIP1Light = pointer11;
200025c2:	4b31      	ldr	r3, [pc, #196]	; (20002688 <initSprites+0xdc>)
200025c4:	6a7a      	ldr	r2, [r7, #36]	; 0x24
200025c6:	601a      	str	r2, [r3, #0]
	sprite *pointer12 = &tempDIPGray;
200025c8:	4b30      	ldr	r3, [pc, #192]	; (2000268c <initSprites+0xe0>)
200025ca:	623b      	str	r3, [r7, #32]
	load_sprite(pointer12, witch1_gray_bits, witch1_black_width, witch1_black_height);
200025cc:	4930      	ldr	r1, [pc, #192]	; (20002690 <initSprites+0xe4>)
200025ce:	6a38      	ldr	r0, [r7, #32]
200025d0:	2312      	movs	r3, #18
200025d2:	2212      	movs	r2, #18
200025d4:	f001 fcea 	bl	20003fac <load_sprite>
	DIP1Gray = pointer12;
200025d8:	4b2e      	ldr	r3, [pc, #184]	; (20002694 <initSprites+0xe8>)
200025da:	6a3a      	ldr	r2, [r7, #32]
200025dc:	601a      	str	r2, [r3, #0]
	sprite *pointer13 = &tempDIPBlack;
200025de:	4b2e      	ldr	r3, [pc, #184]	; (20002698 <initSprites+0xec>)
200025e0:	61fb      	str	r3, [r7, #28]
	load_sprite(pointer13, witch1_black_bits, witch1_black_width, witch1_black_height);
200025e2:	492e      	ldr	r1, [pc, #184]	; (2000269c <initSprites+0xf0>)
200025e4:	69f8      	ldr	r0, [r7, #28]
200025e6:	2312      	movs	r3, #18
200025e8:	2212      	movs	r2, #18
200025ea:	f001 fcdf 	bl	20003fac <load_sprite>
	DIP1Black = pointer13;	
200025ee:	4b2c      	ldr	r3, [pc, #176]	; (200026a0 <initSprites+0xf4>)
200025f0:	69fa      	ldr	r2, [r7, #28]
200025f2:	601a      	str	r2, [r3, #0]
	
	sprite *pointer14 = &tempDIP2Light;
200025f4:	4b2b      	ldr	r3, [pc, #172]	; (200026a4 <initSprites+0xf8>)
200025f6:	61bb      	str	r3, [r7, #24]
	load_sprite(pointer14, witch2_light_bits, witch2_black_width, witch2_black_height);
200025f8:	492b      	ldr	r1, [pc, #172]	; (200026a8 <initSprites+0xfc>)
200025fa:	69b8      	ldr	r0, [r7, #24]
200025fc:	2312      	movs	r3, #18
200025fe:	2212      	movs	r2, #18
20002600:	f001 fcd4 	bl	20003fac <load_sprite>
	DIP2Light = pointer14;
20002604:	4b29      	ldr	r3, [pc, #164]	; (200026ac <initSprites+0x100>)
20002606:	69ba      	ldr	r2, [r7, #24]
20002608:	601a      	str	r2, [r3, #0]
	sprite *pointer15 = &tempDIP2Gray;
2000260a:	4b29      	ldr	r3, [pc, #164]	; (200026b0 <initSprites+0x104>)
2000260c:	617b      	str	r3, [r7, #20]
	load_sprite(pointer15, witch2_gray_bits, witch2_black_width, witch2_black_height);
2000260e:	4929      	ldr	r1, [pc, #164]	; (200026b4 <initSprites+0x108>)
20002610:	6978      	ldr	r0, [r7, #20]
20002612:	2312      	movs	r3, #18
20002614:	2212      	movs	r2, #18
20002616:	f001 fcc9 	bl	20003fac <load_sprite>
	DIP2Gray = pointer15;
2000261a:	4b27      	ldr	r3, [pc, #156]	; (200026b8 <initSprites+0x10c>)
2000261c:	697a      	ldr	r2, [r7, #20]
2000261e:	601a      	str	r2, [r3, #0]
	sprite *pointer16 = &tempDIP2Black;
20002620:	4b26      	ldr	r3, [pc, #152]	; (200026bc <initSprites+0x110>)
20002622:	613b      	str	r3, [r7, #16]
	load_sprite(pointer16, witch2_black_bits, witch2_black_width, witch2_black_height);
20002624:	4926      	ldr	r1, [pc, #152]	; (200026c0 <initSprites+0x114>)
20002626:	6938      	ldr	r0, [r7, #16]
20002628:	2312      	movs	r3, #18
2000262a:	2212      	movs	r2, #18
2000262c:	f001 fcbe 	bl	20003fac <load_sprite>
	DIP2Black = pointer16;
20002630:	4b24      	ldr	r3, [pc, #144]	; (200026c4 <initSprites+0x118>)
20002632:	693a      	ldr	r2, [r7, #16]
20002634:	601a      	str	r2, [r3, #0]
	
	
	sprite *finalPointer = &tempDIP3Light;
20002636:	4b24      	ldr	r3, [pc, #144]	; (200026c8 <initSprites+0x11c>)
20002638:	60fb      	str	r3, [r7, #12]
	load_sprite(finalPointer, witch3_light_bits, witch3_black_width, witch3_black_height);
2000263a:	4924      	ldr	r1, [pc, #144]	; (200026cc <initSprites+0x120>)
2000263c:	68f8      	ldr	r0, [r7, #12]
2000263e:	2312      	movs	r3, #18
20002640:	2212      	movs	r2, #18
20002642:	f001 fcb3 	bl	20003fac <load_sprite>
	DIP3Light = finalPointer;
20002646:	4b22      	ldr	r3, [pc, #136]	; (200026d0 <initSprites+0x124>)
20002648:	68fa      	ldr	r2, [r7, #12]
2000264a:	601a      	str	r2, [r3, #0]
	sprite *pointer17 = &tempDIP3Gray;
2000264c:	4b21      	ldr	r3, [pc, #132]	; (200026d4 <initSprites+0x128>)
2000264e:	60bb      	str	r3, [r7, #8]
	load_sprite(pointer17, witch3_gray_bits, witch3_black_width, witch3_black_height);
20002650:	4921      	ldr	r1, [pc, #132]	; (200026d8 <initSprites+0x12c>)
20002652:	68b8      	ldr	r0, [r7, #8]
20002654:	2312      	movs	r3, #18
20002656:	2212      	movs	r2, #18
20002658:	f001 fca8 	bl	20003fac <load_sprite>
	DIP3Gray = pointer17;
2000265c:	4b1f      	ldr	r3, [pc, #124]	; (200026dc <initSprites+0x130>)
2000265e:	68ba      	ldr	r2, [r7, #8]
20002660:	601a      	str	r2, [r3, #0]
	sprite *pointer18 = &tempDIP3Black;
20002662:	4b1f      	ldr	r3, [pc, #124]	; (200026e0 <initSprites+0x134>)
20002664:	607b      	str	r3, [r7, #4]
	load_sprite(pointer18, witch3_black_bits, witch3_black_width, witch3_black_height);
20002666:	491f      	ldr	r1, [pc, #124]	; (200026e4 <initSprites+0x138>)
20002668:	6878      	ldr	r0, [r7, #4]
2000266a:	2312      	movs	r3, #18
2000266c:	2212      	movs	r2, #18
2000266e:	f001 fc9d 	bl	20003fac <load_sprite>
	DIP3Black = pointer18;	
20002672:	4b1d      	ldr	r3, [pc, #116]	; (200026e8 <initSprites+0x13c>)
20002674:	687a      	ldr	r2, [r7, #4]
20002676:	601a      	str	r2, [r3, #0]
	
}
20002678:	46c0      	nop			; (mov r8, r8)
2000267a:	46bd      	mov	sp, r7
2000267c:	b00a      	add	sp, #40	; 0x28
2000267e:	bd80      	pop	{r7, pc}
20002680:	20005640 	andcs	r5, r0, r0, asr #12
20002684:	20009a70 	andcs	r9, r0, r0, ror sl
20002688:	200056ac 	andcs	r5, r0, ip, lsr #13
2000268c:	20005700 	andcs	r5, r0, r0, lsl #14
20002690:	20009a38 	andcs	r9, r0, r8, lsr sl
20002694:	200056d4 	ldrdcs	r5, [r0], -r4
20002698:	200056c8 	andcs	r5, r0, r8, asr #13
2000269c:	20009a00 	andcs	r9, r0, r0, lsl #20
200026a0:	2000563c 	andcs	r5, r0, ip, lsr r6
200026a4:	200056f4 	strdcs	r5, [r0], -r4
200026a8:	20009b18 	andcs	r9, r0, r8, lsl fp
200026ac:	200056b0 			; <UNDEFINED> instruction: 0x200056b0
200026b0:	2000562c 	andcs	r5, r0, ip, lsr #12
200026b4:	20009ae0 	andcs	r9, r0, r0, ror #21
200026b8:	20005628 	andcs	r5, r0, r8, lsr #12
200026bc:	20005688 	andcs	r5, r0, r8, lsl #13
200026c0:	20009aa8 	andcs	r9, r0, r8, lsr #21
200026c4:	200056b8 			; <UNDEFINED> instruction: 0x200056b8
200026c8:	2000564c 	andcs	r5, r0, ip, asr #12
200026cc:	20009bc0 	andcs	r9, r0, r0, asr #23
200026d0:	200056b4 			; <UNDEFINED> instruction: 0x200056b4
200026d4:	200056bc 			; <UNDEFINED> instruction: 0x200056bc
200026d8:	20009b88 	andcs	r9, r0, r8, lsl #23
200026dc:	200056e4 	andcs	r5, r0, r4, ror #13
200026e0:	200056d8 	ldrdcs	r5, [r0], -r8
200026e4:	20009b50 	andcs	r9, r0, r0, asr fp
200026e8:	20005638 	andcs	r5, r0, r8, lsr r6

200026ec <init_DIP>:
	
void init_DIP( GameObject *DIPObj ) {
200026ec:	b590      	push	{r4, r7, lr}
200026ee:	b083      	sub	sp, #12
200026f0:	af00      	add	r7, sp, #0
200026f2:	6078      	str	r0, [r7, #4]
	static int firstTime = 1;
	if (firstTime) {
200026f4:	4b29      	ldr	r3, [pc, #164]	; (2000279c <init_DIP+0xb0>)
200026f6:	681b      	ldr	r3, [r3, #0]
200026f8:	2b00      	cmp	r3, #0
200026fa:	d03b      	beq.n	20002774 <init_DIP+0x88>
		initSprites();
200026fc:	f7ff ff56 	bl	200025ac <initSprites>
		firstTime = 0;			
20002700:	4b26      	ldr	r3, [pc, #152]	; (2000279c <init_DIP+0xb0>)
20002702:	2200      	movs	r2, #0
20002704:	601a      	str	r2, [r3, #0]

		DIPImages[0] = DIP1Image;
20002706:	4b26      	ldr	r3, [pc, #152]	; (200027a0 <init_DIP+0xb4>)
20002708:	4a26      	ldr	r2, [pc, #152]	; (200027a4 <init_DIP+0xb8>)
2000270a:	ca13      	ldmia	r2!, {r0, r1, r4}
2000270c:	c313      	stmia	r3!, {r0, r1, r4}
		DIPImages[1] = DIP2Image;
2000270e:	4b24      	ldr	r3, [pc, #144]	; (200027a0 <init_DIP+0xb4>)
20002710:	4a25      	ldr	r2, [pc, #148]	; (200027a8 <init_DIP+0xbc>)
20002712:	330c      	adds	r3, #12
20002714:	ca13      	ldmia	r2!, {r0, r1, r4}
20002716:	c313      	stmia	r3!, {r0, r1, r4}
		DIPImages[2] = DIP3Image;
20002718:	4b21      	ldr	r3, [pc, #132]	; (200027a0 <init_DIP+0xb4>)
2000271a:	4a24      	ldr	r2, [pc, #144]	; (200027ac <init_DIP+0xc0>)
2000271c:	3318      	adds	r3, #24
2000271e:	ca13      	ldmia	r2!, {r0, r1, r4}
20002720:	c313      	stmia	r3!, {r0, r1, r4}
		DIPImages[3] = DIP4Image;
20002722:	4b1f      	ldr	r3, [pc, #124]	; (200027a0 <init_DIP+0xb4>)
20002724:	4a22      	ldr	r2, [pc, #136]	; (200027b0 <init_DIP+0xc4>)
20002726:	3324      	adds	r3, #36	; 0x24
20002728:	ca13      	ldmia	r2!, {r0, r1, r4}
2000272a:	c313      	stmia	r3!, {r0, r1, r4}
		
		
		load_image(&DIPImages[0], DIP1Black, DIP1Light, DIP1Gray);
2000272c:	4b21      	ldr	r3, [pc, #132]	; (200027b4 <init_DIP+0xc8>)
2000272e:	6819      	ldr	r1, [r3, #0]
20002730:	4b21      	ldr	r3, [pc, #132]	; (200027b8 <init_DIP+0xcc>)
20002732:	681a      	ldr	r2, [r3, #0]
20002734:	4b21      	ldr	r3, [pc, #132]	; (200027bc <init_DIP+0xd0>)
20002736:	681b      	ldr	r3, [r3, #0]
20002738:	4819      	ldr	r0, [pc, #100]	; (200027a0 <init_DIP+0xb4>)
2000273a:	f001 fc23 	bl	20003f84 <load_image>
		load_image(&DIPImages[1], DIP2Black, DIP2Light, DIP2Gray);
2000273e:	4b20      	ldr	r3, [pc, #128]	; (200027c0 <init_DIP+0xd4>)
20002740:	6819      	ldr	r1, [r3, #0]
20002742:	4b20      	ldr	r3, [pc, #128]	; (200027c4 <init_DIP+0xd8>)
20002744:	681a      	ldr	r2, [r3, #0]
20002746:	4b20      	ldr	r3, [pc, #128]	; (200027c8 <init_DIP+0xdc>)
20002748:	681b      	ldr	r3, [r3, #0]
2000274a:	4820      	ldr	r0, [pc, #128]	; (200027cc <init_DIP+0xe0>)
2000274c:	f001 fc1a 	bl	20003f84 <load_image>
		load_image(&DIPImages[2], DIP3Black, DIP3Light, DIP3Gray);
20002750:	4b1f      	ldr	r3, [pc, #124]	; (200027d0 <init_DIP+0xe4>)
20002752:	6819      	ldr	r1, [r3, #0]
20002754:	4b1f      	ldr	r3, [pc, #124]	; (200027d4 <init_DIP+0xe8>)
20002756:	681a      	ldr	r2, [r3, #0]
20002758:	4b1f      	ldr	r3, [pc, #124]	; (200027d8 <init_DIP+0xec>)
2000275a:	681b      	ldr	r3, [r3, #0]
2000275c:	481f      	ldr	r0, [pc, #124]	; (200027dc <init_DIP+0xf0>)
2000275e:	f001 fc11 	bl	20003f84 <load_image>
		load_image(&DIPImages[3], DIP2Black, DIP2Light, DIP2Gray);
20002762:	4b17      	ldr	r3, [pc, #92]	; (200027c0 <init_DIP+0xd4>)
20002764:	6819      	ldr	r1, [r3, #0]
20002766:	4b17      	ldr	r3, [pc, #92]	; (200027c4 <init_DIP+0xd8>)
20002768:	681a      	ldr	r2, [r3, #0]
2000276a:	4b17      	ldr	r3, [pc, #92]	; (200027c8 <init_DIP+0xdc>)
2000276c:	681b      	ldr	r3, [r3, #0]
2000276e:	481c      	ldr	r0, [pc, #112]	; (200027e0 <init_DIP+0xf4>)
20002770:	f001 fc08 	bl	20003f84 <load_image>
		
	}
	
	DIPObj->images = DIPImages;
20002774:	687b      	ldr	r3, [r7, #4]
20002776:	4a0a      	ldr	r2, [pc, #40]	; (200027a0 <init_DIP+0xb4>)
20002778:	601a      	str	r2, [r3, #0]

	DIPObj->current_frame = 0;
2000277a:	687b      	ldr	r3, [r7, #4]
2000277c:	2200      	movs	r2, #0
2000277e:	615a      	str	r2, [r3, #20]
	DIPObj->n_frames = 4;
20002780:	687b      	ldr	r3, [r7, #4]
20002782:	2204      	movs	r2, #4
20002784:	619a      	str	r2, [r3, #24]
	DIPObj->animation_speed = 1;
20002786:	687b      	ldr	r3, [r7, #4]
20002788:	2201      	movs	r2, #1
2000278a:	61da      	str	r2, [r3, #28]
	DIPObj->animation_counter = 0;
2000278c:	687b      	ldr	r3, [r7, #4]
2000278e:	2200      	movs	r2, #0
20002790:	621a      	str	r2, [r3, #32]
}
20002792:	46c0      	nop			; (mov r8, r8)
20002794:	46bd      	mov	sp, r7
20002796:	b003      	add	sp, #12
20002798:	bd90      	pop	{r4, r7, pc}
2000279a:	46c0      	nop			; (mov r8, r8)
2000279c:	20009bf8 	strdcs	r9, [r0], -r8
200027a0:	20005658 	andcs	r5, r0, r8, asr r6
200027a4:	200056a0 	andcs	r5, r0, r0, lsr #13
200027a8:	2000561c 	andcs	r5, r0, ip, lsl r6
200027ac:	20005694 	mulcs	r0, r4, r6
200027b0:	200056e8 	andcs	r5, r0, r8, ror #13
200027b4:	2000563c 	andcs	r5, r0, ip, lsr r6
200027b8:	200056ac 	andcs	r5, r0, ip, lsr #13
200027bc:	200056d4 	ldrdcs	r5, [r0], -r4
200027c0:	200056b8 			; <UNDEFINED> instruction: 0x200056b8
200027c4:	200056b0 			; <UNDEFINED> instruction: 0x200056b0
200027c8:	20005628 	andcs	r5, r0, r8, lsr #12
200027cc:	20005664 	andcs	r5, r0, r4, ror #12
200027d0:	20005638 	andcs	r5, r0, r8, lsr r6
200027d4:	200056b4 			; <UNDEFINED> instruction: 0x200056b4
200027d8:	200056e4 	andcs	r5, r0, r4, ror #13
200027dc:	20005670 	andcs	r5, r0, r0, ror r6
200027e0:	2000567c 	andcs	r5, r0, ip, ror r6

200027e4 <setPlayerPosition>:

static int playerPositionX = 0;
static int playerPositionY = 0;

void setPlayerPosition(int x, int y){
200027e4:	b580      	push	{r7, lr}
200027e6:	b082      	sub	sp, #8
200027e8:	af00      	add	r7, sp, #0
200027ea:	6078      	str	r0, [r7, #4]
200027ec:	6039      	str	r1, [r7, #0]
	playerPositionX = x;
200027ee:	4b05      	ldr	r3, [pc, #20]	; (20002804 <setPlayerPosition+0x20>)
200027f0:	687a      	ldr	r2, [r7, #4]
200027f2:	601a      	str	r2, [r3, #0]
	playerPositionY = y;
200027f4:	4b04      	ldr	r3, [pc, #16]	; (20002808 <setPlayerPosition+0x24>)
200027f6:	683a      	ldr	r2, [r7, #0]
200027f8:	601a      	str	r2, [r3, #0]
}
200027fa:	46c0      	nop			; (mov r8, r8)
200027fc:	46bd      	mov	sp, r7
200027fe:	b002      	add	sp, #8
20002800:	bd80      	pop	{r7, pc}
20002802:	46c0      	nop			; (mov r8, r8)
20002804:	20004f80 	andcs	r4, r0, r0, lsl #31
20002808:	20004f84 	andcs	r4, r0, r4, lsl #31

2000280c <DIPUpdate>:


void DIPUpdate(GameObject *this) {
2000280c:	b580      	push	{r7, lr}
2000280e:	b082      	sub	sp, #8
20002810:	af00      	add	r7, sp, #0
20002812:	6078      	str	r0, [r7, #4]
	gameObjectUpdate(this);
20002814:	687b      	ldr	r3, [r7, #4]
20002816:	0018      	movs	r0, r3
20002818:	f7ff f962 	bl	20001ae0 <gameObjectUpdate>
	static int counter = 0;
	static int direction = -1;
	static int isRunning = 0;
	counter++;
2000281c:	4b39      	ldr	r3, [pc, #228]	; (20002904 <DIPUpdate+0xf8>)
2000281e:	681b      	ldr	r3, [r3, #0]
20002820:	1c5a      	adds	r2, r3, #1
20002822:	4b38      	ldr	r3, [pc, #224]	; (20002904 <DIPUpdate+0xf8>)
20002824:	601a      	str	r2, [r3, #0]
	
	if (!read_DIL_single(LIGHT_TRIGGER)){ // Only move if the light is off
20002826:	2006      	movs	r0, #6
20002828:	f001 fbf0 	bl	2000400c <read_DIL_single>
2000282c:	1e03      	subs	r3, r0, #0
2000282e:	d165      	bne.n	200028fc <DIPUpdate+0xf0>
		
		if (this->yPos >= playerPositionY){
20002830:	687b      	ldr	r3, [r7, #4]
20002832:	689a      	ldr	r2, [r3, #8]
20002834:	4b34      	ldr	r3, [pc, #208]	; (20002908 <DIPUpdate+0xfc>)
20002836:	681b      	ldr	r3, [r3, #0]
20002838:	429a      	cmp	r2, r3
2000283a:	db03      	blt.n	20002844 <DIPUpdate+0x38>
			isRunning = 1;
2000283c:	4b33      	ldr	r3, [pc, #204]	; (2000290c <DIPUpdate+0x100>)
2000283e:	2201      	movs	r2, #1
20002840:	601a      	str	r2, [r3, #0]
20002842:	e023      	b.n	2000288c <DIPUpdate+0x80>
		}
		else if ((playerPositionX + DIP_WIDTH >= this->xPos && playerPositionX <= this->xPos + DIP_WIDTH )) { // Move faster if player is below or on the same level
20002844:	4b32      	ldr	r3, [pc, #200]	; (20002910 <DIPUpdate+0x104>)
20002846:	681b      	ldr	r3, [r3, #0]
20002848:	3312      	adds	r3, #18
2000284a:	001a      	movs	r2, r3
2000284c:	687b      	ldr	r3, [r7, #4]
2000284e:	685b      	ldr	r3, [r3, #4]
20002850:	429a      	cmp	r2, r3
20002852:	db1b      	blt.n	2000288c <DIPUpdate+0x80>
20002854:	687b      	ldr	r3, [r7, #4]
20002856:	685b      	ldr	r3, [r3, #4]
20002858:	3312      	adds	r3, #18
2000285a:	001a      	movs	r2, r3
2000285c:	4b2c      	ldr	r3, [pc, #176]	; (20002910 <DIPUpdate+0x104>)
2000285e:	681b      	ldr	r3, [r3, #0]
20002860:	429a      	cmp	r2, r3
20002862:	db13      	blt.n	2000288c <DIPUpdate+0x80>
			isRunning = 1;
20002864:	4b29      	ldr	r3, [pc, #164]	; (2000290c <DIPUpdate+0x100>)
20002866:	2201      	movs	r2, #1
20002868:	601a      	str	r2, [r3, #0]
			if (RIGHT_POINT - playerPositionX > playerPositionX - LEFT_POINT){
2000286a:	4b29      	ldr	r3, [pc, #164]	; (20002910 <DIPUpdate+0x104>)
2000286c:	681b      	ldr	r3, [r3, #0]
2000286e:	226b      	movs	r2, #107	; 0x6b
20002870:	1ad2      	subs	r2, r2, r3
20002872:	4b27      	ldr	r3, [pc, #156]	; (20002910 <DIPUpdate+0x104>)
20002874:	681b      	ldr	r3, [r3, #0]
20002876:	3b2e      	subs	r3, #46	; 0x2e
20002878:	429a      	cmp	r2, r3
2000287a:	dd03      	ble.n	20002884 <DIPUpdate+0x78>
				direction = 1;
2000287c:	4b25      	ldr	r3, [pc, #148]	; (20002914 <DIPUpdate+0x108>)
2000287e:	2201      	movs	r2, #1
20002880:	601a      	str	r2, [r3, #0]
20002882:	e003      	b.n	2000288c <DIPUpdate+0x80>
			}
			else{
				direction = -1;
20002884:	4b23      	ldr	r3, [pc, #140]	; (20002914 <DIPUpdate+0x108>)
20002886:	2201      	movs	r2, #1
20002888:	4252      	negs	r2, r2
2000288a:	601a      	str	r2, [r3, #0]
			}
		} 
		
		
		
		if (isRunning){
2000288c:	4b1f      	ldr	r3, [pc, #124]	; (2000290c <DIPUpdate+0x100>)
2000288e:	681b      	ldr	r3, [r3, #0]
20002890:	2b00      	cmp	r3, #0
20002892:	d00a      	beq.n	200028aa <DIPUpdate+0x9e>
			this->xPos += direction*3;
20002894:	687b      	ldr	r3, [r7, #4]
20002896:	6859      	ldr	r1, [r3, #4]
20002898:	4b1e      	ldr	r3, [pc, #120]	; (20002914 <DIPUpdate+0x108>)
2000289a:	681a      	ldr	r2, [r3, #0]
2000289c:	0013      	movs	r3, r2
2000289e:	005b      	lsls	r3, r3, #1
200028a0:	189b      	adds	r3, r3, r2
200028a2:	18ca      	adds	r2, r1, r3
200028a4:	687b      	ldr	r3, [r7, #4]
200028a6:	605a      	str	r2, [r3, #4]
200028a8:	e012      	b.n	200028d0 <DIPUpdate+0xc4>
		} else {
			this->xPos += (counter % 2)*direction;
200028aa:	687b      	ldr	r3, [r7, #4]
200028ac:	685a      	ldr	r2, [r3, #4]
200028ae:	4b15      	ldr	r3, [pc, #84]	; (20002904 <DIPUpdate+0xf8>)
200028b0:	681b      	ldr	r3, [r3, #0]
200028b2:	4919      	ldr	r1, [pc, #100]	; (20002918 <DIPUpdate+0x10c>)
200028b4:	400b      	ands	r3, r1
200028b6:	d504      	bpl.n	200028c2 <DIPUpdate+0xb6>
200028b8:	3b01      	subs	r3, #1
200028ba:	2102      	movs	r1, #2
200028bc:	4249      	negs	r1, r1
200028be:	430b      	orrs	r3, r1
200028c0:	3301      	adds	r3, #1
200028c2:	0019      	movs	r1, r3
200028c4:	4b13      	ldr	r3, [pc, #76]	; (20002914 <DIPUpdate+0x108>)
200028c6:	681b      	ldr	r3, [r3, #0]
200028c8:	434b      	muls	r3, r1
200028ca:	18d2      	adds	r2, r2, r3
200028cc:	687b      	ldr	r3, [r7, #4]
200028ce:	605a      	str	r2, [r3, #4]
		}
		
		if(this->xPos > RIGHT_POINT) {
200028d0:	687b      	ldr	r3, [r7, #4]
200028d2:	685b      	ldr	r3, [r3, #4]
200028d4:	2b6b      	cmp	r3, #107	; 0x6b
200028d6:	dd07      	ble.n	200028e8 <DIPUpdate+0xdc>
			isRunning = 0;
200028d8:	4b0c      	ldr	r3, [pc, #48]	; (2000290c <DIPUpdate+0x100>)
200028da:	2200      	movs	r2, #0
200028dc:	601a      	str	r2, [r3, #0]
			direction = -1;
200028de:	4b0d      	ldr	r3, [pc, #52]	; (20002914 <DIPUpdate+0x108>)
200028e0:	2201      	movs	r2, #1
200028e2:	4252      	negs	r2, r2
200028e4:	601a      	str	r2, [r3, #0]
		} else if(this->xPos < LEFT_POINT) {
			isRunning = 0;
			direction = 1;
		}
	}
}
200028e6:	e009      	b.n	200028fc <DIPUpdate+0xf0>
		} else if(this->xPos < LEFT_POINT) {
200028e8:	687b      	ldr	r3, [r7, #4]
200028ea:	685b      	ldr	r3, [r3, #4]
200028ec:	2b2d      	cmp	r3, #45	; 0x2d
200028ee:	dc05      	bgt.n	200028fc <DIPUpdate+0xf0>
			isRunning = 0;
200028f0:	4b06      	ldr	r3, [pc, #24]	; (2000290c <DIPUpdate+0x100>)
200028f2:	2200      	movs	r2, #0
200028f4:	601a      	str	r2, [r3, #0]
			direction = 1;
200028f6:	4b07      	ldr	r3, [pc, #28]	; (20002914 <DIPUpdate+0x108>)
200028f8:	2201      	movs	r2, #1
200028fa:	601a      	str	r2, [r3, #0]
}
200028fc:	46c0      	nop			; (mov r8, r8)
200028fe:	46bd      	mov	sp, r7
20002900:	b002      	add	sp, #8
20002902:	bd80      	pop	{r7, pc}
20002904:	20004f88 	andcs	r4, r0, r8, lsl #31
20002908:	20004f84 	andcs	r4, r0, r4, lsl #31
2000290c:	20004f8c 	andcs	r4, r0, ip, lsl #31
20002910:	20004f80 	andcs	r4, r0, r0, lsl #31
20002914:	20009bfc 	strdcs	r9, [r0], -ip
20002918:	80000001 	andhi	r0, r0, r1

2000291c <initSprites>:
Image flame1Image;
Image flame2Image;
Image flame3Image;
Image flame4Image;
Image flameImages[4];
static void initSprites( void ) {	
2000291c:	b580      	push	{r7, lr}
2000291e:	b08c      	sub	sp, #48	; 0x30
20002920:	af00      	add	r7, sp, #0
	
	sprite *pointer11 = &tempFlameLight;
20002922:	4b44      	ldr	r3, [pc, #272]	; (20002a34 <initSprites+0x118>)
20002924:	62fb      	str	r3, [r7, #44]	; 0x2c
	load_sprite(pointer11, flame1_light_bits, flame1_black_width, flame1_black_height);
20002926:	4944      	ldr	r1, [pc, #272]	; (20002a38 <initSprites+0x11c>)
20002928:	6af8      	ldr	r0, [r7, #44]	; 0x2c
2000292a:	2327      	movs	r3, #39	; 0x27
2000292c:	2211      	movs	r2, #17
2000292e:	f001 fb3d 	bl	20003fac <load_sprite>
	flame1Light = pointer11;
20002932:	4b42      	ldr	r3, [pc, #264]	; (20002a3c <initSprites+0x120>)
20002934:	6afa      	ldr	r2, [r7, #44]	; 0x2c
20002936:	601a      	str	r2, [r3, #0]
	sprite *pointer12 = &tempFlameGray;
20002938:	4b41      	ldr	r3, [pc, #260]	; (20002a40 <initSprites+0x124>)
2000293a:	62bb      	str	r3, [r7, #40]	; 0x28
	load_sprite(pointer12, flame1_gray_bits, flame1_black_width, flame1_black_height);
2000293c:	4941      	ldr	r1, [pc, #260]	; (20002a44 <initSprites+0x128>)
2000293e:	6ab8      	ldr	r0, [r7, #40]	; 0x28
20002940:	2327      	movs	r3, #39	; 0x27
20002942:	2211      	movs	r2, #17
20002944:	f001 fb32 	bl	20003fac <load_sprite>
	flame1Gray = pointer12;
20002948:	4b3f      	ldr	r3, [pc, #252]	; (20002a48 <initSprites+0x12c>)
2000294a:	6aba      	ldr	r2, [r7, #40]	; 0x28
2000294c:	601a      	str	r2, [r3, #0]
	sprite *pointer13 = &tempFlameBlack;
2000294e:	4b3f      	ldr	r3, [pc, #252]	; (20002a4c <initSprites+0x130>)
20002950:	627b      	str	r3, [r7, #36]	; 0x24
	load_sprite(pointer13, flame1_black_bits, flame1_black_width, flame1_black_height);
20002952:	493f      	ldr	r1, [pc, #252]	; (20002a50 <initSprites+0x134>)
20002954:	6a78      	ldr	r0, [r7, #36]	; 0x24
20002956:	2327      	movs	r3, #39	; 0x27
20002958:	2211      	movs	r2, #17
2000295a:	f001 fb27 	bl	20003fac <load_sprite>
	flame1Black = pointer13;	
2000295e:	4b3d      	ldr	r3, [pc, #244]	; (20002a54 <initSprites+0x138>)
20002960:	6a7a      	ldr	r2, [r7, #36]	; 0x24
20002962:	601a      	str	r2, [r3, #0]
	
	sprite *pointer14 = &tempFlame2Light;
20002964:	4b3c      	ldr	r3, [pc, #240]	; (20002a58 <initSprites+0x13c>)
20002966:	623b      	str	r3, [r7, #32]
	load_sprite(pointer14, flame2_light_bits, flame2_black_width, flame2_black_height);
20002968:	493c      	ldr	r1, [pc, #240]	; (20002a5c <initSprites+0x140>)
2000296a:	6a38      	ldr	r0, [r7, #32]
2000296c:	2327      	movs	r3, #39	; 0x27
2000296e:	2211      	movs	r2, #17
20002970:	f001 fb1c 	bl	20003fac <load_sprite>
	flame2Light = pointer14;
20002974:	4b3a      	ldr	r3, [pc, #232]	; (20002a60 <initSprites+0x144>)
20002976:	6a3a      	ldr	r2, [r7, #32]
20002978:	601a      	str	r2, [r3, #0]
	sprite *pointer15 = &tempFlame2Gray;
2000297a:	4b3a      	ldr	r3, [pc, #232]	; (20002a64 <initSprites+0x148>)
2000297c:	61fb      	str	r3, [r7, #28]
	load_sprite(pointer15, flame2_gray_bits, flame2_black_width, flame2_black_height);
2000297e:	493a      	ldr	r1, [pc, #232]	; (20002a68 <initSprites+0x14c>)
20002980:	69f8      	ldr	r0, [r7, #28]
20002982:	2327      	movs	r3, #39	; 0x27
20002984:	2211      	movs	r2, #17
20002986:	f001 fb11 	bl	20003fac <load_sprite>
	flame2Gray = pointer15;
2000298a:	4b38      	ldr	r3, [pc, #224]	; (20002a6c <initSprites+0x150>)
2000298c:	69fa      	ldr	r2, [r7, #28]
2000298e:	601a      	str	r2, [r3, #0]
	sprite *pointer16 = &tempFlame2Black;
20002990:	4b37      	ldr	r3, [pc, #220]	; (20002a70 <initSprites+0x154>)
20002992:	61bb      	str	r3, [r7, #24]
	load_sprite(pointer16, flame2_black_bits, flame2_black_width, flame2_black_height);
20002994:	4937      	ldr	r1, [pc, #220]	; (20002a74 <initSprites+0x158>)
20002996:	69b8      	ldr	r0, [r7, #24]
20002998:	2327      	movs	r3, #39	; 0x27
2000299a:	2211      	movs	r2, #17
2000299c:	f001 fb06 	bl	20003fac <load_sprite>
	flame2Black = pointer16;
200029a0:	4b35      	ldr	r3, [pc, #212]	; (20002a78 <initSprites+0x15c>)
200029a2:	69ba      	ldr	r2, [r7, #24]
200029a4:	601a      	str	r2, [r3, #0]
	
	
	sprite *finalPointer = &tempFlame3Light;
200029a6:	4b35      	ldr	r3, [pc, #212]	; (20002a7c <initSprites+0x160>)
200029a8:	617b      	str	r3, [r7, #20]
	load_sprite(finalPointer, flame3_light_bits, flame3_black_width, flame3_black_height);
200029aa:	4935      	ldr	r1, [pc, #212]	; (20002a80 <initSprites+0x164>)
200029ac:	6978      	ldr	r0, [r7, #20]
200029ae:	2327      	movs	r3, #39	; 0x27
200029b0:	2211      	movs	r2, #17
200029b2:	f001 fafb 	bl	20003fac <load_sprite>
	flame3Light = finalPointer;
200029b6:	4b33      	ldr	r3, [pc, #204]	; (20002a84 <initSprites+0x168>)
200029b8:	697a      	ldr	r2, [r7, #20]
200029ba:	601a      	str	r2, [r3, #0]
	sprite *pointer17 = &tempFlame3Gray;
200029bc:	4b32      	ldr	r3, [pc, #200]	; (20002a88 <initSprites+0x16c>)
200029be:	613b      	str	r3, [r7, #16]
	load_sprite(pointer17, flame3_gray_bits, flame3_black_width, flame3_black_height);
200029c0:	4932      	ldr	r1, [pc, #200]	; (20002a8c <initSprites+0x170>)
200029c2:	6938      	ldr	r0, [r7, #16]
200029c4:	2327      	movs	r3, #39	; 0x27
200029c6:	2211      	movs	r2, #17
200029c8:	f001 faf0 	bl	20003fac <load_sprite>
	flame3Gray = pointer17;
200029cc:	4b30      	ldr	r3, [pc, #192]	; (20002a90 <initSprites+0x174>)
200029ce:	693a      	ldr	r2, [r7, #16]
200029d0:	601a      	str	r2, [r3, #0]
	sprite *pointer18 = &tempFlame3Black;
200029d2:	4b30      	ldr	r3, [pc, #192]	; (20002a94 <initSprites+0x178>)
200029d4:	60fb      	str	r3, [r7, #12]
	load_sprite(pointer18, flame3_black_bits, flame3_black_width, flame3_black_height);
200029d6:	4930      	ldr	r1, [pc, #192]	; (20002a98 <initSprites+0x17c>)
200029d8:	68f8      	ldr	r0, [r7, #12]
200029da:	2327      	movs	r3, #39	; 0x27
200029dc:	2211      	movs	r2, #17
200029de:	f001 fae5 	bl	20003fac <load_sprite>
	flame3Black = pointer18;	
200029e2:	4b2e      	ldr	r3, [pc, #184]	; (20002a9c <initSprites+0x180>)
200029e4:	68fa      	ldr	r2, [r7, #12]
200029e6:	601a      	str	r2, [r3, #0]
	
	sprite *pointer19 = &tempFlame4Light;
200029e8:	4b2d      	ldr	r3, [pc, #180]	; (20002aa0 <initSprites+0x184>)
200029ea:	60bb      	str	r3, [r7, #8]
	load_sprite(pointer19, flame4_light_bits, flame4_black_width, flame4_black_height);
200029ec:	492d      	ldr	r1, [pc, #180]	; (20002aa4 <initSprites+0x188>)
200029ee:	68b8      	ldr	r0, [r7, #8]
200029f0:	2327      	movs	r3, #39	; 0x27
200029f2:	2211      	movs	r2, #17
200029f4:	f001 fada 	bl	20003fac <load_sprite>
	flame4Light = pointer19;
200029f8:	4b2b      	ldr	r3, [pc, #172]	; (20002aa8 <initSprites+0x18c>)
200029fa:	68ba      	ldr	r2, [r7, #8]
200029fc:	601a      	str	r2, [r3, #0]
	sprite *pointer20 = &tempFlame4Gray;
200029fe:	4b2b      	ldr	r3, [pc, #172]	; (20002aac <initSprites+0x190>)
20002a00:	607b      	str	r3, [r7, #4]
	load_sprite(pointer20, flame4_gray_bits, flame4_black_width, flame4_black_height);
20002a02:	492b      	ldr	r1, [pc, #172]	; (20002ab0 <initSprites+0x194>)
20002a04:	6878      	ldr	r0, [r7, #4]
20002a06:	2327      	movs	r3, #39	; 0x27
20002a08:	2211      	movs	r2, #17
20002a0a:	f001 facf 	bl	20003fac <load_sprite>
	flame4Gray = pointer20;
20002a0e:	4b29      	ldr	r3, [pc, #164]	; (20002ab4 <initSprites+0x198>)
20002a10:	687a      	ldr	r2, [r7, #4]
20002a12:	601a      	str	r2, [r3, #0]
	sprite *pointer21 = &tempFlame4Black;
20002a14:	4b28      	ldr	r3, [pc, #160]	; (20002ab8 <initSprites+0x19c>)
20002a16:	603b      	str	r3, [r7, #0]
	load_sprite(pointer21, flame4_black_bits, flame4_black_width, flame4_black_height);
20002a18:	4928      	ldr	r1, [pc, #160]	; (20002abc <initSprites+0x1a0>)
20002a1a:	6838      	ldr	r0, [r7, #0]
20002a1c:	2327      	movs	r3, #39	; 0x27
20002a1e:	2211      	movs	r2, #17
20002a20:	f001 fac4 	bl	20003fac <load_sprite>
	flame4Black = pointer21;	
20002a24:	4b26      	ldr	r3, [pc, #152]	; (20002ac0 <initSprites+0x1a4>)
20002a26:	683a      	ldr	r2, [r7, #0]
20002a28:	601a      	str	r2, [r3, #0]
	
}
20002a2a:	46c0      	nop			; (mov r8, r8)
20002a2c:	46bd      	mov	sp, r7
20002a2e:	b00c      	add	sp, #48	; 0x30
20002a30:	bd80      	pop	{r7, pc}
20002a32:	46c0      	nop			; (mov r8, r8)
20002a34:	20005828 	andcs	r5, r0, r8, lsr #16
20002a38:	20009cf0 	strdcs	r9, [r0], -r0
20002a3c:	200057a0 	andcs	r5, r0, r0, lsr #15
20002a40:	2000570c 	andcs	r5, r0, ip, lsl #14
20002a44:	20009c78 	andcs	r9, r0, r8, ror ip
20002a48:	2000579c 	mulcs	r0, ip, r7
20002a4c:	2000583c 	andcs	r5, r0, ip, lsr r8
20002a50:	20009c00 	andcs	r9, r0, r0, lsl #24
20002a54:	20005824 	andcs	r5, r0, r4, lsr #16
20002a58:	20005774 	andcs	r5, r0, r4, ror r7
20002a5c:	20009e58 	andcs	r9, r0, r8, asr lr
20002a60:	20005834 	andcs	r5, r0, r4, lsr r8
20002a64:	200057d8 	ldrdcs	r5, [r0], -r8
20002a68:	20009de0 	andcs	r9, r0, r0, ror #27
20002a6c:	20005798 	mulcs	r0, r8, r7
20002a70:	2000578c 	andcs	r5, r0, ip, lsl #15
20002a74:	20009d68 	andcs	r9, r0, r8, ror #26
20002a78:	2000584c 	andcs	r5, r0, ip, asr #16
20002a7c:	20005734 	andcs	r5, r0, r4, lsr r7
20002a80:	20009fc0 	andcs	r9, r0, r0, asr #31
20002a84:	20005730 	andcs	r5, r0, r0, lsr r7
20002a88:	20005780 	andcs	r5, r0, r0, lsl #15
20002a8c:	20009f48 	andcs	r9, r0, r8, asr #30
20002a90:	2000574c 	andcs	r5, r0, ip, asr #14
20002a94:	20005814 	andcs	r5, r0, r4, lsl r8
20002a98:	20009ed0 	ldrdcs	r9, [r0], -r0
20002a9c:	20005838 	andcs	r5, r0, r8, lsr r8
20002aa0:	20005718 	andcs	r5, r0, r8, lsl r7
20002aa4:	2000a128 	andcs	sl, r0, r8, lsr #2
20002aa8:	20005848 	andcs	r5, r0, r8, asr #16
20002aac:	200057b0 			; <UNDEFINED> instruction: 0x200057b0
20002ab0:	2000a0b0 	strhcs	sl, [r0], -r0
20002ab4:	200057bc 			; <UNDEFINED> instruction: 0x200057bc
20002ab8:	200057a4 	andcs	r5, r0, r4, lsr #15
20002abc:	2000a038 	andcs	sl, r0, r8, lsr r0
20002ac0:	20005820 	andcs	r5, r0, r0, lsr #16

20002ac4 <init_flame>:
	
void init_flame( GameObject *flameObj ) {
20002ac4:	b590      	push	{r4, r7, lr}
20002ac6:	b083      	sub	sp, #12
20002ac8:	af00      	add	r7, sp, #0
20002aca:	6078      	str	r0, [r7, #4]
	static int firstTime = 1;
	if (firstTime) {
20002acc:	4b29      	ldr	r3, [pc, #164]	; (20002b74 <init_flame+0xb0>)
20002ace:	681b      	ldr	r3, [r3, #0]
20002ad0:	2b00      	cmp	r3, #0
20002ad2:	d03b      	beq.n	20002b4c <init_flame+0x88>
		initSprites();
20002ad4:	f7ff ff22 	bl	2000291c <initSprites>
		firstTime = 0;			
20002ad8:	4b26      	ldr	r3, [pc, #152]	; (20002b74 <init_flame+0xb0>)
20002ada:	2200      	movs	r2, #0
20002adc:	601a      	str	r2, [r3, #0]

		flameImages[0] = flame1Image;
20002ade:	4b26      	ldr	r3, [pc, #152]	; (20002b78 <init_flame+0xb4>)
20002ae0:	4a26      	ldr	r2, [pc, #152]	; (20002b7c <init_flame+0xb8>)
20002ae2:	ca13      	ldmia	r2!, {r0, r1, r4}
20002ae4:	c313      	stmia	r3!, {r0, r1, r4}
		flameImages[1] = flame2Image;
20002ae6:	4b24      	ldr	r3, [pc, #144]	; (20002b78 <init_flame+0xb4>)
20002ae8:	4a25      	ldr	r2, [pc, #148]	; (20002b80 <init_flame+0xbc>)
20002aea:	330c      	adds	r3, #12
20002aec:	ca13      	ldmia	r2!, {r0, r1, r4}
20002aee:	c313      	stmia	r3!, {r0, r1, r4}
		flameImages[2] = flame3Image;
20002af0:	4b21      	ldr	r3, [pc, #132]	; (20002b78 <init_flame+0xb4>)
20002af2:	4a24      	ldr	r2, [pc, #144]	; (20002b84 <init_flame+0xc0>)
20002af4:	3318      	adds	r3, #24
20002af6:	ca13      	ldmia	r2!, {r0, r1, r4}
20002af8:	c313      	stmia	r3!, {r0, r1, r4}
		flameImages[3] = flame4Image;
20002afa:	4b1f      	ldr	r3, [pc, #124]	; (20002b78 <init_flame+0xb4>)
20002afc:	4a22      	ldr	r2, [pc, #136]	; (20002b88 <init_flame+0xc4>)
20002afe:	3324      	adds	r3, #36	; 0x24
20002b00:	ca13      	ldmia	r2!, {r0, r1, r4}
20002b02:	c313      	stmia	r3!, {r0, r1, r4}
		
		load_image(&flameImages[0], flame1Black, flame1Gray, flame1Light);
20002b04:	4b21      	ldr	r3, [pc, #132]	; (20002b8c <init_flame+0xc8>)
20002b06:	6819      	ldr	r1, [r3, #0]
20002b08:	4b21      	ldr	r3, [pc, #132]	; (20002b90 <init_flame+0xcc>)
20002b0a:	681a      	ldr	r2, [r3, #0]
20002b0c:	4b21      	ldr	r3, [pc, #132]	; (20002b94 <init_flame+0xd0>)
20002b0e:	681b      	ldr	r3, [r3, #0]
20002b10:	4819      	ldr	r0, [pc, #100]	; (20002b78 <init_flame+0xb4>)
20002b12:	f001 fa37 	bl	20003f84 <load_image>
		load_image(&flameImages[1], flame2Black, flame2Gray, flame2Light);
20002b16:	4b20      	ldr	r3, [pc, #128]	; (20002b98 <init_flame+0xd4>)
20002b18:	6819      	ldr	r1, [r3, #0]
20002b1a:	4b20      	ldr	r3, [pc, #128]	; (20002b9c <init_flame+0xd8>)
20002b1c:	681a      	ldr	r2, [r3, #0]
20002b1e:	4b20      	ldr	r3, [pc, #128]	; (20002ba0 <init_flame+0xdc>)
20002b20:	681b      	ldr	r3, [r3, #0]
20002b22:	4820      	ldr	r0, [pc, #128]	; (20002ba4 <init_flame+0xe0>)
20002b24:	f001 fa2e 	bl	20003f84 <load_image>
		load_image(&flameImages[2], flame3Black, flame3Gray, flame3Light);
20002b28:	4b1f      	ldr	r3, [pc, #124]	; (20002ba8 <init_flame+0xe4>)
20002b2a:	6819      	ldr	r1, [r3, #0]
20002b2c:	4b1f      	ldr	r3, [pc, #124]	; (20002bac <init_flame+0xe8>)
20002b2e:	681a      	ldr	r2, [r3, #0]
20002b30:	4b1f      	ldr	r3, [pc, #124]	; (20002bb0 <init_flame+0xec>)
20002b32:	681b      	ldr	r3, [r3, #0]
20002b34:	481f      	ldr	r0, [pc, #124]	; (20002bb4 <init_flame+0xf0>)
20002b36:	f001 fa25 	bl	20003f84 <load_image>
		load_image(&flameImages[3], flame4Black, flame4Gray, flame4Light);
20002b3a:	4b1f      	ldr	r3, [pc, #124]	; (20002bb8 <init_flame+0xf4>)
20002b3c:	6819      	ldr	r1, [r3, #0]
20002b3e:	4b1f      	ldr	r3, [pc, #124]	; (20002bbc <init_flame+0xf8>)
20002b40:	681a      	ldr	r2, [r3, #0]
20002b42:	4b1f      	ldr	r3, [pc, #124]	; (20002bc0 <init_flame+0xfc>)
20002b44:	681b      	ldr	r3, [r3, #0]
20002b46:	481f      	ldr	r0, [pc, #124]	; (20002bc4 <init_flame+0x100>)
20002b48:	f001 fa1c 	bl	20003f84 <load_image>
}
	
	flameObj->images = flameImages;
20002b4c:	687b      	ldr	r3, [r7, #4]
20002b4e:	4a0a      	ldr	r2, [pc, #40]	; (20002b78 <init_flame+0xb4>)
20002b50:	601a      	str	r2, [r3, #0]

	flameObj->current_frame = 0;
20002b52:	687b      	ldr	r3, [r7, #4]
20002b54:	2200      	movs	r2, #0
20002b56:	615a      	str	r2, [r3, #20]
	flameObj->n_frames = 4;
20002b58:	687b      	ldr	r3, [r7, #4]
20002b5a:	2204      	movs	r2, #4
20002b5c:	619a      	str	r2, [r3, #24]
	flameObj->animation_speed = 1;
20002b5e:	687b      	ldr	r3, [r7, #4]
20002b60:	2201      	movs	r2, #1
20002b62:	61da      	str	r2, [r3, #28]
	flameObj->animation_counter = 0;
20002b64:	687b      	ldr	r3, [r7, #4]
20002b66:	2200      	movs	r2, #0
20002b68:	621a      	str	r2, [r3, #32]
}
20002b6a:	46c0      	nop			; (mov r8, r8)
20002b6c:	46bd      	mov	sp, r7
20002b6e:	b003      	add	sp, #12
20002b70:	bd90      	pop	{r4, r7, pc}
20002b72:	46c0      	nop			; (mov r8, r8)
20002b74:	2000a1a0 	andcs	sl, r0, r0, lsr #3
20002b78:	200057e4 	andcs	r5, r0, r4, ror #15
20002b7c:	200057cc 	andcs	r5, r0, ip, asr #15
20002b80:	20005724 	andcs	r5, r0, r4, lsr #14
20002b84:	20005740 	andcs	r5, r0, r0, asr #14
20002b88:	200057c0 	andcs	r5, r0, r0, asr #15
20002b8c:	20005824 	andcs	r5, r0, r4, lsr #16
20002b90:	2000579c 	mulcs	r0, ip, r7
20002b94:	200057a0 	andcs	r5, r0, r0, lsr #15
20002b98:	2000584c 	andcs	r5, r0, ip, asr #16
20002b9c:	20005798 	mulcs	r0, r8, r7
20002ba0:	20005834 	andcs	r5, r0, r4, lsr r8
20002ba4:	200057f0 	strdcs	r5, [r0], -r0
20002ba8:	20005838 	andcs	r5, r0, r8, lsr r8
20002bac:	2000574c 	andcs	r5, r0, ip, asr #14
20002bb0:	20005730 	andcs	r5, r0, r0, lsr r7
20002bb4:	200057fc 	strdcs	r5, [r0], -ip
20002bb8:	20005820 	andcs	r5, r0, r0, lsr #16
20002bbc:	200057bc 			; <UNDEFINED> instruction: 0x200057bc
20002bc0:	20005848 	andcs	r5, r0, r8, asr #16
20002bc4:	20005808 	andcs	r5, r0, r8, lsl #16

20002bc8 <initSprites>:
Image boom12Image;
Image boom13Image;
Image boom14Image;
Image boom15Image;
Image boomImages[15];
static void initSprites( void ) {	
20002bc8:	b580      	push	{r7, lr}
20002bca:	b092      	sub	sp, #72	; 0x48
20002bcc:	af00      	add	r7, sp, #0
	
	sprite *pointer11 = &tempBoomLight;
20002bce:	4b65      	ldr	r3, [pc, #404]	; (20002d64 <initSprites+0x19c>)
20002bd0:	647b      	str	r3, [r7, #68]	; 0x44
	load_sprite(pointer11, boom1_light_bits, boom1_black_width, boom1_black_height);
20002bd2:	4965      	ldr	r1, [pc, #404]	; (20002d68 <initSprites+0x1a0>)
20002bd4:	6c78      	ldr	r0, [r7, #68]	; 0x44
20002bd6:	2337      	movs	r3, #55	; 0x37
20002bd8:	226a      	movs	r2, #106	; 0x6a
20002bda:	f001 f9e7 	bl	20003fac <load_sprite>
	boom1Light = pointer11;
20002bde:	4b63      	ldr	r3, [pc, #396]	; (20002d6c <initSprites+0x1a4>)
20002be0:	6c7a      	ldr	r2, [r7, #68]	; 0x44
20002be2:	601a      	str	r2, [r3, #0]
	sprite *pointer12 = &tempBoomGray;
20002be4:	4b62      	ldr	r3, [pc, #392]	; (20002d70 <initSprites+0x1a8>)
20002be6:	643b      	str	r3, [r7, #64]	; 0x40
	load_sprite(pointer12, boom1_gray_bits, boom1_black_width, boom1_black_height);
20002be8:	4962      	ldr	r1, [pc, #392]	; (20002d74 <initSprites+0x1ac>)
20002bea:	6c38      	ldr	r0, [r7, #64]	; 0x40
20002bec:	2337      	movs	r3, #55	; 0x37
20002bee:	226a      	movs	r2, #106	; 0x6a
20002bf0:	f001 f9dc 	bl	20003fac <load_sprite>
	boom1Gray = pointer12;
20002bf4:	4b60      	ldr	r3, [pc, #384]	; (20002d78 <initSprites+0x1b0>)
20002bf6:	6c3a      	ldr	r2, [r7, #64]	; 0x40
20002bf8:	601a      	str	r2, [r3, #0]
	sprite *pointer13 = &tempBoomBlack;
20002bfa:	4b60      	ldr	r3, [pc, #384]	; (20002d7c <initSprites+0x1b4>)
20002bfc:	63fb      	str	r3, [r7, #60]	; 0x3c
	load_sprite(pointer13, boom1_black_bits, boom1_black_width, boom1_black_height);
20002bfe:	4960      	ldr	r1, [pc, #384]	; (20002d80 <initSprites+0x1b8>)
20002c00:	6bf8      	ldr	r0, [r7, #60]	; 0x3c
20002c02:	2337      	movs	r3, #55	; 0x37
20002c04:	226a      	movs	r2, #106	; 0x6a
20002c06:	f001 f9d1 	bl	20003fac <load_sprite>
	boom1Black = pointer13;	
20002c0a:	4b5e      	ldr	r3, [pc, #376]	; (20002d84 <initSprites+0x1bc>)
20002c0c:	6bfa      	ldr	r2, [r7, #60]	; 0x3c
20002c0e:	601a      	str	r2, [r3, #0]
	
	sprite *pointer14 = &tempBoom2Light;
20002c10:	4b5d      	ldr	r3, [pc, #372]	; (20002d88 <initSprites+0x1c0>)
20002c12:	63bb      	str	r3, [r7, #56]	; 0x38
	load_sprite(pointer14, boom2_light_bits, boom2_black_width, boom2_black_height);
20002c14:	495d      	ldr	r1, [pc, #372]	; (20002d8c <initSprites+0x1c4>)
20002c16:	6bb8      	ldr	r0, [r7, #56]	; 0x38
20002c18:	2337      	movs	r3, #55	; 0x37
20002c1a:	226a      	movs	r2, #106	; 0x6a
20002c1c:	f001 f9c6 	bl	20003fac <load_sprite>
	boom2Light = pointer14;
20002c20:	4b5b      	ldr	r3, [pc, #364]	; (20002d90 <initSprites+0x1c8>)
20002c22:	6bba      	ldr	r2, [r7, #56]	; 0x38
20002c24:	601a      	str	r2, [r3, #0]
	sprite *pointer15 = &tempBoom2Gray;
20002c26:	4b5b      	ldr	r3, [pc, #364]	; (20002d94 <initSprites+0x1cc>)
20002c28:	637b      	str	r3, [r7, #52]	; 0x34
	load_sprite(pointer15, boom2_gray_bits, boom2_black_width, boom2_black_height);
20002c2a:	495b      	ldr	r1, [pc, #364]	; (20002d98 <initSprites+0x1d0>)
20002c2c:	6b78      	ldr	r0, [r7, #52]	; 0x34
20002c2e:	2337      	movs	r3, #55	; 0x37
20002c30:	226a      	movs	r2, #106	; 0x6a
20002c32:	f001 f9bb 	bl	20003fac <load_sprite>
	boom2Gray = pointer15;
20002c36:	4b59      	ldr	r3, [pc, #356]	; (20002d9c <initSprites+0x1d4>)
20002c38:	6b7a      	ldr	r2, [r7, #52]	; 0x34
20002c3a:	601a      	str	r2, [r3, #0]
	sprite *pointer16 = &tempBoom2Black;
20002c3c:	4b58      	ldr	r3, [pc, #352]	; (20002da0 <initSprites+0x1d8>)
20002c3e:	633b      	str	r3, [r7, #48]	; 0x30
	load_sprite(pointer16, boom2_black_bits, boom2_black_width, boom2_black_height);
20002c40:	4958      	ldr	r1, [pc, #352]	; (20002da4 <initSprites+0x1dc>)
20002c42:	6b38      	ldr	r0, [r7, #48]	; 0x30
20002c44:	2337      	movs	r3, #55	; 0x37
20002c46:	226a      	movs	r2, #106	; 0x6a
20002c48:	f001 f9b0 	bl	20003fac <load_sprite>
	boom2Black = pointer16;
20002c4c:	4b56      	ldr	r3, [pc, #344]	; (20002da8 <initSprites+0x1e0>)
20002c4e:	6b3a      	ldr	r2, [r7, #48]	; 0x30
20002c50:	601a      	str	r2, [r3, #0]
	
	
	sprite *finalPointer = &tempBoom3Light;
20002c52:	4b56      	ldr	r3, [pc, #344]	; (20002dac <initSprites+0x1e4>)
20002c54:	62fb      	str	r3, [r7, #44]	; 0x2c
	load_sprite(finalPointer, boom3_light_bits, boom3_black_width, boom3_black_height);
20002c56:	4956      	ldr	r1, [pc, #344]	; (20002db0 <initSprites+0x1e8>)
20002c58:	6af8      	ldr	r0, [r7, #44]	; 0x2c
20002c5a:	2337      	movs	r3, #55	; 0x37
20002c5c:	226a      	movs	r2, #106	; 0x6a
20002c5e:	f001 f9a5 	bl	20003fac <load_sprite>
	boom3Light = finalPointer;
20002c62:	4b54      	ldr	r3, [pc, #336]	; (20002db4 <initSprites+0x1ec>)
20002c64:	6afa      	ldr	r2, [r7, #44]	; 0x2c
20002c66:	601a      	str	r2, [r3, #0]
	sprite *pointer17 = &tempBoom3Gray;
20002c68:	4b53      	ldr	r3, [pc, #332]	; (20002db8 <initSprites+0x1f0>)
20002c6a:	62bb      	str	r3, [r7, #40]	; 0x28
	load_sprite(pointer17, boom3_gray_bits, boom3_black_width, boom3_black_height);
20002c6c:	4953      	ldr	r1, [pc, #332]	; (20002dbc <initSprites+0x1f4>)
20002c6e:	6ab8      	ldr	r0, [r7, #40]	; 0x28
20002c70:	2337      	movs	r3, #55	; 0x37
20002c72:	226a      	movs	r2, #106	; 0x6a
20002c74:	f001 f99a 	bl	20003fac <load_sprite>
	boom3Gray = pointer17;
20002c78:	4b51      	ldr	r3, [pc, #324]	; (20002dc0 <initSprites+0x1f8>)
20002c7a:	6aba      	ldr	r2, [r7, #40]	; 0x28
20002c7c:	601a      	str	r2, [r3, #0]
	sprite *pointer18 = &tempBoom3Black;
20002c7e:	4b51      	ldr	r3, [pc, #324]	; (20002dc4 <initSprites+0x1fc>)
20002c80:	627b      	str	r3, [r7, #36]	; 0x24
	load_sprite(pointer18, boom3_black_bits, boom3_black_width, boom3_black_height);
20002c82:	4951      	ldr	r1, [pc, #324]	; (20002dc8 <initSprites+0x200>)
20002c84:	6a78      	ldr	r0, [r7, #36]	; 0x24
20002c86:	2337      	movs	r3, #55	; 0x37
20002c88:	226a      	movs	r2, #106	; 0x6a
20002c8a:	f001 f98f 	bl	20003fac <load_sprite>
	boom3Black = pointer18;	
20002c8e:	4b4f      	ldr	r3, [pc, #316]	; (20002dcc <initSprites+0x204>)
20002c90:	6a7a      	ldr	r2, [r7, #36]	; 0x24
20002c92:	601a      	str	r2, [r3, #0]
	
	sprite *pointer19 = &tempBoom4Light;
20002c94:	4b4e      	ldr	r3, [pc, #312]	; (20002dd0 <initSprites+0x208>)
20002c96:	623b      	str	r3, [r7, #32]
	load_sprite(pointer19, boom4_light_bits, boom4_black_width, boom4_black_height);
20002c98:	494e      	ldr	r1, [pc, #312]	; (20002dd4 <initSprites+0x20c>)
20002c9a:	6a38      	ldr	r0, [r7, #32]
20002c9c:	2337      	movs	r3, #55	; 0x37
20002c9e:	226a      	movs	r2, #106	; 0x6a
20002ca0:	f001 f984 	bl	20003fac <load_sprite>
	boom4Light = pointer19;
20002ca4:	4b4c      	ldr	r3, [pc, #304]	; (20002dd8 <initSprites+0x210>)
20002ca6:	6a3a      	ldr	r2, [r7, #32]
20002ca8:	601a      	str	r2, [r3, #0]
	sprite *pointer20 = &tempBoom4Gray;
20002caa:	4b4c      	ldr	r3, [pc, #304]	; (20002ddc <initSprites+0x214>)
20002cac:	61fb      	str	r3, [r7, #28]
	load_sprite(pointer20, boom4_gray_bits, boom4_black_width, boom4_black_height);
20002cae:	494c      	ldr	r1, [pc, #304]	; (20002de0 <initSprites+0x218>)
20002cb0:	69f8      	ldr	r0, [r7, #28]
20002cb2:	2337      	movs	r3, #55	; 0x37
20002cb4:	226a      	movs	r2, #106	; 0x6a
20002cb6:	f001 f979 	bl	20003fac <load_sprite>
	boom4Gray = pointer20;
20002cba:	4b4a      	ldr	r3, [pc, #296]	; (20002de4 <initSprites+0x21c>)
20002cbc:	69fa      	ldr	r2, [r7, #28]
20002cbe:	601a      	str	r2, [r3, #0]
	sprite *pointer21 = &tempBoom4Black;
20002cc0:	4b49      	ldr	r3, [pc, #292]	; (20002de8 <initSprites+0x220>)
20002cc2:	61bb      	str	r3, [r7, #24]
	load_sprite(pointer21, boom4_black_bits, boom4_black_width, boom4_black_height);
20002cc4:	4949      	ldr	r1, [pc, #292]	; (20002dec <initSprites+0x224>)
20002cc6:	69b8      	ldr	r0, [r7, #24]
20002cc8:	2337      	movs	r3, #55	; 0x37
20002cca:	226a      	movs	r2, #106	; 0x6a
20002ccc:	f001 f96e 	bl	20003fac <load_sprite>
	boom4Black = pointer21;	
20002cd0:	4b47      	ldr	r3, [pc, #284]	; (20002df0 <initSprites+0x228>)
20002cd2:	69ba      	ldr	r2, [r7, #24]
20002cd4:	601a      	str	r2, [r3, #0]
	
	sprite *pointer22 = &tempBoom5Light;
20002cd6:	4b47      	ldr	r3, [pc, #284]	; (20002df4 <initSprites+0x22c>)
20002cd8:	617b      	str	r3, [r7, #20]
	load_sprite(pointer22, boom5_light_bits, boom5_black_width, boom5_black_height);
20002cda:	4947      	ldr	r1, [pc, #284]	; (20002df8 <initSprites+0x230>)
20002cdc:	6978      	ldr	r0, [r7, #20]
20002cde:	2337      	movs	r3, #55	; 0x37
20002ce0:	226a      	movs	r2, #106	; 0x6a
20002ce2:	f001 f963 	bl	20003fac <load_sprite>
	boom5Light = pointer22;
20002ce6:	4b45      	ldr	r3, [pc, #276]	; (20002dfc <initSprites+0x234>)
20002ce8:	697a      	ldr	r2, [r7, #20]
20002cea:	601a      	str	r2, [r3, #0]
	sprite *pointer23 = &tempBoom5Gray;
20002cec:	4b44      	ldr	r3, [pc, #272]	; (20002e00 <initSprites+0x238>)
20002cee:	613b      	str	r3, [r7, #16]
	load_sprite(pointer23, boom5_gray_bits, boom5_black_width, boom5_black_height);
20002cf0:	4944      	ldr	r1, [pc, #272]	; (20002e04 <initSprites+0x23c>)
20002cf2:	6938      	ldr	r0, [r7, #16]
20002cf4:	2337      	movs	r3, #55	; 0x37
20002cf6:	226a      	movs	r2, #106	; 0x6a
20002cf8:	f001 f958 	bl	20003fac <load_sprite>
	boom5Gray = pointer23;
20002cfc:	4b42      	ldr	r3, [pc, #264]	; (20002e08 <initSprites+0x240>)
20002cfe:	693a      	ldr	r2, [r7, #16]
20002d00:	601a      	str	r2, [r3, #0]
	sprite *pointer24 = &tempBoom5Black;
20002d02:	4b42      	ldr	r3, [pc, #264]	; (20002e0c <initSprites+0x244>)
20002d04:	60fb      	str	r3, [r7, #12]
	load_sprite(pointer24, boom5_black_bits, boom5_black_width, boom5_black_height);
20002d06:	4942      	ldr	r1, [pc, #264]	; (20002e10 <initSprites+0x248>)
20002d08:	68f8      	ldr	r0, [r7, #12]
20002d0a:	2337      	movs	r3, #55	; 0x37
20002d0c:	226a      	movs	r2, #106	; 0x6a
20002d0e:	f001 f94d 	bl	20003fac <load_sprite>
	boom5Black = pointer24;
20002d12:	4b40      	ldr	r3, [pc, #256]	; (20002e14 <initSprites+0x24c>)
20002d14:	68fa      	ldr	r2, [r7, #12]
20002d16:	601a      	str	r2, [r3, #0]

	sprite *pointer25 = &tempBoom6Light;
20002d18:	4b3f      	ldr	r3, [pc, #252]	; (20002e18 <initSprites+0x250>)
20002d1a:	60bb      	str	r3, [r7, #8]
	load_sprite(pointer25, boom6_light_bits, boom6_black_width, boom6_black_height);
20002d1c:	493f      	ldr	r1, [pc, #252]	; (20002e1c <initSprites+0x254>)
20002d1e:	68b8      	ldr	r0, [r7, #8]
20002d20:	2337      	movs	r3, #55	; 0x37
20002d22:	226a      	movs	r2, #106	; 0x6a
20002d24:	f001 f942 	bl	20003fac <load_sprite>
	boom6Light = pointer25;
20002d28:	4b3d      	ldr	r3, [pc, #244]	; (20002e20 <initSprites+0x258>)
20002d2a:	68ba      	ldr	r2, [r7, #8]
20002d2c:	601a      	str	r2, [r3, #0]
	sprite *pointer26 = &tempBoom6Gray;
20002d2e:	4b3d      	ldr	r3, [pc, #244]	; (20002e24 <initSprites+0x25c>)
20002d30:	607b      	str	r3, [r7, #4]
	load_sprite(pointer26, boom6_gray_bits, boom6_black_width, boom6_black_height);
20002d32:	493d      	ldr	r1, [pc, #244]	; (20002e28 <initSprites+0x260>)
20002d34:	6878      	ldr	r0, [r7, #4]
20002d36:	2337      	movs	r3, #55	; 0x37
20002d38:	226a      	movs	r2, #106	; 0x6a
20002d3a:	f001 f937 	bl	20003fac <load_sprite>
	boom6Gray = pointer26;
20002d3e:	4b3b      	ldr	r3, [pc, #236]	; (20002e2c <initSprites+0x264>)
20002d40:	687a      	ldr	r2, [r7, #4]
20002d42:	601a      	str	r2, [r3, #0]
	sprite *pointer27 = &tempBoom6Black;
20002d44:	4b3a      	ldr	r3, [pc, #232]	; (20002e30 <initSprites+0x268>)
20002d46:	603b      	str	r3, [r7, #0]
	load_sprite(pointer27, boom6_black_bits, boom6_black_width, boom6_black_height);
20002d48:	493a      	ldr	r1, [pc, #232]	; (20002e34 <initSprites+0x26c>)
20002d4a:	6838      	ldr	r0, [r7, #0]
20002d4c:	2337      	movs	r3, #55	; 0x37
20002d4e:	226a      	movs	r2, #106	; 0x6a
20002d50:	f001 f92c 	bl	20003fac <load_sprite>
	boom6Black = pointer27;
20002d54:	4b38      	ldr	r3, [pc, #224]	; (20002e38 <initSprites+0x270>)
20002d56:	683a      	ldr	r2, [r7, #0]
20002d58:	601a      	str	r2, [r3, #0]
}
20002d5a:	46c0      	nop			; (mov r8, r8)
20002d5c:	46bd      	mov	sp, r7
20002d5e:	b012      	add	sp, #72	; 0x48
20002d60:	bd80      	pop	{r7, pc}
20002d62:	46c0      	nop			; (mov r8, r8)
20002d64:	20005868 	andcs	r5, r0, r8, ror #16
20002d68:	2000a7ac 	andcs	sl, r0, ip, lsr #15
20002d6c:	20005ad8 	ldrdcs	r5, [r0], -r8
20002d70:	20005a28 	andcs	r5, r0, r8, lsr #20
20002d74:	2000a4a8 	andcs	sl, r0, r8, lsr #9
20002d78:	20005a74 	andcs	r5, r0, r4, ror sl
20002d7c:	20005af0 	strdcs	r5, [r0], -r0
20002d80:	2000a1a4 	andcs	sl, r0, r4, lsr #3
20002d84:	20005a38 	andcs	r5, r0, r8, lsr sl
20002d88:	20005ac0 	andcs	r5, r0, r0, asr #21
20002d8c:	2000b0b8 	strhcs	fp, [r0], -r8
20002d90:	20005aec 	andcs	r5, r0, ip, ror #21
20002d94:	20005a48 	andcs	r5, r0, r8, asr #20
20002d98:	2000adb4 			; <UNDEFINED> instruction: 0x2000adb4
20002d9c:	20005a34 	andcs	r5, r0, r4, lsr sl
20002da0:	2000585c 	andcs	r5, r0, ip, asr r8
20002da4:	2000aab0 			; <UNDEFINED> instruction: 0x2000aab0
20002da8:	20005ae8 	andcs	r5, r0, r8, ror #21
20002dac:	20005934 	andcs	r5, r0, r4, lsr r9
20002db0:	2000b9c4 	andcs	fp, r0, r4, asr #19
20002db4:	20005898 	mulcs	r0, r8, r8
20002db8:	20005a60 	andcs	r5, r0, r0, ror #20
20002dbc:	2000b6c0 	andcs	fp, r0, r0, asr #13
20002dc0:	200058f0 	strdcs	r5, [r0], -r0
20002dc4:	20005a0c 	andcs	r5, r0, ip, lsl #20
20002dc8:	2000b3bc 			; <UNDEFINED> instruction: 0x2000b3bc
20002dcc:	2000589c 	mulcs	r0, ip, r8
20002dd0:	200058f4 	strdcs	r5, [r0], -r4
20002dd4:	2000c2d0 	ldrdcs	ip, [r0], -r0
20002dd8:	200058bc 			; <UNDEFINED> instruction: 0x200058bc
20002ddc:	20005a54 	andcs	r5, r0, r4, asr sl
20002de0:	2000bfcc 	andcs	fp, r0, ip, asr #31
20002de4:	20005a6c 	andcs	r5, r0, ip, ror #20
20002de8:	20005ab4 			; <UNDEFINED> instruction: 0x20005ab4
20002dec:	2000bcc8 	andcs	fp, r0, r8, asr #25
20002df0:	20005a18 	andcs	r5, r0, r8, lsl sl
20002df4:	20005aa8 	andcs	r5, r0, r8, lsr #21
20002df8:	2000cbdc 	ldrdcs	ip, [r0], -ip	; <UNPREDICTABLE>
20002dfc:	20005a70 	andcs	r5, r0, r0, ror sl
20002e00:	20005850 	andcs	r5, r0, r0, asr r8
20002e04:	2000c8d8 	ldrdcs	ip, [r0], -r8
20002e08:	20005900 	andcs	r5, r0, r0, lsl #18
20002e0c:	20005acc 	andcs	r5, r0, ip, asr #21
20002e10:	2000c5d4 	ldrdcs	ip, [r0], -r4
20002e14:	200058b8 			; <UNDEFINED> instruction: 0x200058b8
20002e18:	20005874 	andcs	r5, r0, r4, ror r8
20002e1c:	2000d4e8 	andcs	sp, r0, r8, ror #9
20002e20:	20005950 	andcs	r5, r0, r0, asr r9
20002e24:	20005a3c 	andcs	r5, r0, ip, lsr sl
20002e28:	2000d1e4 	andcs	sp, r0, r4, ror #3
20002e2c:	20005940 	andcs	r5, r0, r0, asr #18
20002e30:	20005a1c 	andcs	r5, r0, ip, lsl sl
20002e34:	2000cee0 	andcs	ip, r0, r0, ror #29
20002e38:	20005a08 	andcs	r5, r0, r8, lsl #20

20002e3c <init_boom>:
	
void init_boom( GameObject *boomObj ) {
20002e3c:	b590      	push	{r4, r7, lr}
20002e3e:	b083      	sub	sp, #12
20002e40:	af00      	add	r7, sp, #0
20002e42:	6078      	str	r0, [r7, #4]
	static int firstTime = 1;
	if (firstTime) {
20002e44:	4b7a      	ldr	r3, [pc, #488]	; (20003030 <init_boom+0x1f4>)
20002e46:	681b      	ldr	r3, [r3, #0]
20002e48:	2b00      	cmp	r3, #0
20002e4a:	d100      	bne.n	20002e4e <init_boom+0x12>
20002e4c:	e0dd      	b.n	2000300a <init_boom+0x1ce>
		initSprites();
20002e4e:	f7ff febb 	bl	20002bc8 <initSprites>
		firstTime = 0;			
20002e52:	4b77      	ldr	r3, [pc, #476]	; (20003030 <init_boom+0x1f4>)
20002e54:	2200      	movs	r2, #0
20002e56:	601a      	str	r2, [r3, #0]

		boomImages[0] = boom1Image;
20002e58:	4b76      	ldr	r3, [pc, #472]	; (20003034 <init_boom+0x1f8>)
20002e5a:	4a77      	ldr	r2, [pc, #476]	; (20003038 <init_boom+0x1fc>)
20002e5c:	ca13      	ldmia	r2!, {r0, r1, r4}
20002e5e:	c313      	stmia	r3!, {r0, r1, r4}
		boomImages[1] = boom2Image;
20002e60:	4b74      	ldr	r3, [pc, #464]	; (20003034 <init_boom+0x1f8>)
20002e62:	4a76      	ldr	r2, [pc, #472]	; (2000303c <init_boom+0x200>)
20002e64:	330c      	adds	r3, #12
20002e66:	ca13      	ldmia	r2!, {r0, r1, r4}
20002e68:	c313      	stmia	r3!, {r0, r1, r4}
		boomImages[2] = boom3Image;
20002e6a:	4b72      	ldr	r3, [pc, #456]	; (20003034 <init_boom+0x1f8>)
20002e6c:	4a74      	ldr	r2, [pc, #464]	; (20003040 <init_boom+0x204>)
20002e6e:	3318      	adds	r3, #24
20002e70:	ca13      	ldmia	r2!, {r0, r1, r4}
20002e72:	c313      	stmia	r3!, {r0, r1, r4}
		boomImages[3] = boom4Image;
20002e74:	4b6f      	ldr	r3, [pc, #444]	; (20003034 <init_boom+0x1f8>)
20002e76:	4a73      	ldr	r2, [pc, #460]	; (20003044 <init_boom+0x208>)
20002e78:	3324      	adds	r3, #36	; 0x24
20002e7a:	ca13      	ldmia	r2!, {r0, r1, r4}
20002e7c:	c313      	stmia	r3!, {r0, r1, r4}
		boomImages[4] = boom5Image;
20002e7e:	4b6d      	ldr	r3, [pc, #436]	; (20003034 <init_boom+0x1f8>)
20002e80:	4a71      	ldr	r2, [pc, #452]	; (20003048 <init_boom+0x20c>)
20002e82:	3330      	adds	r3, #48	; 0x30
20002e84:	ca13      	ldmia	r2!, {r0, r1, r4}
20002e86:	c313      	stmia	r3!, {r0, r1, r4}
		boomImages[5] = boom6Image;
20002e88:	4b6a      	ldr	r3, [pc, #424]	; (20003034 <init_boom+0x1f8>)
20002e8a:	4a70      	ldr	r2, [pc, #448]	; (2000304c <init_boom+0x210>)
20002e8c:	333c      	adds	r3, #60	; 0x3c
20002e8e:	ca13      	ldmia	r2!, {r0, r1, r4}
20002e90:	c313      	stmia	r3!, {r0, r1, r4}
		boomImages[6] = boom7Image;
20002e92:	4b68      	ldr	r3, [pc, #416]	; (20003034 <init_boom+0x1f8>)
20002e94:	4a6e      	ldr	r2, [pc, #440]	; (20003050 <init_boom+0x214>)
20002e96:	3348      	adds	r3, #72	; 0x48
20002e98:	ca13      	ldmia	r2!, {r0, r1, r4}
20002e9a:	c313      	stmia	r3!, {r0, r1, r4}
		boomImages[7] = boom8Image;
20002e9c:	4b65      	ldr	r3, [pc, #404]	; (20003034 <init_boom+0x1f8>)
20002e9e:	4a6d      	ldr	r2, [pc, #436]	; (20003054 <init_boom+0x218>)
20002ea0:	3354      	adds	r3, #84	; 0x54
20002ea2:	ca13      	ldmia	r2!, {r0, r1, r4}
20002ea4:	c313      	stmia	r3!, {r0, r1, r4}
		boomImages[8] = boom9Image;
20002ea6:	4b63      	ldr	r3, [pc, #396]	; (20003034 <init_boom+0x1f8>)
20002ea8:	4a6b      	ldr	r2, [pc, #428]	; (20003058 <init_boom+0x21c>)
20002eaa:	3360      	adds	r3, #96	; 0x60
20002eac:	ca13      	ldmia	r2!, {r0, r1, r4}
20002eae:	c313      	stmia	r3!, {r0, r1, r4}
		boomImages[9] = boom10Image;
20002eb0:	4b60      	ldr	r3, [pc, #384]	; (20003034 <init_boom+0x1f8>)
20002eb2:	4a6a      	ldr	r2, [pc, #424]	; (2000305c <init_boom+0x220>)
20002eb4:	336c      	adds	r3, #108	; 0x6c
20002eb6:	ca13      	ldmia	r2!, {r0, r1, r4}
20002eb8:	c313      	stmia	r3!, {r0, r1, r4}
		boomImages[10] = boom11Image;
20002eba:	4b5e      	ldr	r3, [pc, #376]	; (20003034 <init_boom+0x1f8>)
20002ebc:	4a68      	ldr	r2, [pc, #416]	; (20003060 <init_boom+0x224>)
20002ebe:	3378      	adds	r3, #120	; 0x78
20002ec0:	ca13      	ldmia	r2!, {r0, r1, r4}
20002ec2:	c313      	stmia	r3!, {r0, r1, r4}
		boomImages[11] = boom12Image;
20002ec4:	4b5b      	ldr	r3, [pc, #364]	; (20003034 <init_boom+0x1f8>)
20002ec6:	2284      	movs	r2, #132	; 0x84
20002ec8:	4966      	ldr	r1, [pc, #408]	; (20003064 <init_boom+0x228>)
20002eca:	189b      	adds	r3, r3, r2
20002ecc:	000a      	movs	r2, r1
20002ece:	ca13      	ldmia	r2!, {r0, r1, r4}
20002ed0:	c313      	stmia	r3!, {r0, r1, r4}
		boomImages[12] = boom13Image;
20002ed2:	4b58      	ldr	r3, [pc, #352]	; (20003034 <init_boom+0x1f8>)
20002ed4:	2290      	movs	r2, #144	; 0x90
20002ed6:	4964      	ldr	r1, [pc, #400]	; (20003068 <init_boom+0x22c>)
20002ed8:	189b      	adds	r3, r3, r2
20002eda:	000a      	movs	r2, r1
20002edc:	ca13      	ldmia	r2!, {r0, r1, r4}
20002ede:	c313      	stmia	r3!, {r0, r1, r4}
		boomImages[13] = boom14Image;
20002ee0:	4b54      	ldr	r3, [pc, #336]	; (20003034 <init_boom+0x1f8>)
20002ee2:	229c      	movs	r2, #156	; 0x9c
20002ee4:	4961      	ldr	r1, [pc, #388]	; (2000306c <init_boom+0x230>)
20002ee6:	189b      	adds	r3, r3, r2
20002ee8:	000a      	movs	r2, r1
20002eea:	ca13      	ldmia	r2!, {r0, r1, r4}
20002eec:	c313      	stmia	r3!, {r0, r1, r4}
		boomImages[14] = boom15Image;
20002eee:	4b51      	ldr	r3, [pc, #324]	; (20003034 <init_boom+0x1f8>)
20002ef0:	22a8      	movs	r2, #168	; 0xa8
20002ef2:	495f      	ldr	r1, [pc, #380]	; (20003070 <init_boom+0x234>)
20002ef4:	189b      	adds	r3, r3, r2
20002ef6:	000a      	movs	r2, r1
20002ef8:	ca13      	ldmia	r2!, {r0, r1, r4}
20002efa:	c313      	stmia	r3!, {r0, r1, r4}
		
		load_image(&boomImages[0], boom1Black, boom1Gray, boom1Light);
20002efc:	4b5d      	ldr	r3, [pc, #372]	; (20003074 <init_boom+0x238>)
20002efe:	6819      	ldr	r1, [r3, #0]
20002f00:	4b5d      	ldr	r3, [pc, #372]	; (20003078 <init_boom+0x23c>)
20002f02:	681a      	ldr	r2, [r3, #0]
20002f04:	4b5d      	ldr	r3, [pc, #372]	; (2000307c <init_boom+0x240>)
20002f06:	681b      	ldr	r3, [r3, #0]
20002f08:	484a      	ldr	r0, [pc, #296]	; (20003034 <init_boom+0x1f8>)
20002f0a:	f001 f83b 	bl	20003f84 <load_image>
		load_image(&boomImages[1], boom2Black, boom2Gray, boom2Light);
20002f0e:	4b5c      	ldr	r3, [pc, #368]	; (20003080 <init_boom+0x244>)
20002f10:	6819      	ldr	r1, [r3, #0]
20002f12:	4b5c      	ldr	r3, [pc, #368]	; (20003084 <init_boom+0x248>)
20002f14:	681a      	ldr	r2, [r3, #0]
20002f16:	4b5c      	ldr	r3, [pc, #368]	; (20003088 <init_boom+0x24c>)
20002f18:	681b      	ldr	r3, [r3, #0]
20002f1a:	485c      	ldr	r0, [pc, #368]	; (2000308c <init_boom+0x250>)
20002f1c:	f001 f832 	bl	20003f84 <load_image>
		load_image(&boomImages[2], boom3Black, boom3Gray, boom3Light);
20002f20:	4b5b      	ldr	r3, [pc, #364]	; (20003090 <init_boom+0x254>)
20002f22:	6819      	ldr	r1, [r3, #0]
20002f24:	4b5b      	ldr	r3, [pc, #364]	; (20003094 <init_boom+0x258>)
20002f26:	681a      	ldr	r2, [r3, #0]
20002f28:	4b5b      	ldr	r3, [pc, #364]	; (20003098 <init_boom+0x25c>)
20002f2a:	681b      	ldr	r3, [r3, #0]
20002f2c:	485b      	ldr	r0, [pc, #364]	; (2000309c <init_boom+0x260>)
20002f2e:	f001 f829 	bl	20003f84 <load_image>
		load_image(&boomImages[3], boom4Black, boom4Gray, boom4Light);
20002f32:	4b5b      	ldr	r3, [pc, #364]	; (200030a0 <init_boom+0x264>)
20002f34:	6819      	ldr	r1, [r3, #0]
20002f36:	4b5b      	ldr	r3, [pc, #364]	; (200030a4 <init_boom+0x268>)
20002f38:	681a      	ldr	r2, [r3, #0]
20002f3a:	4b5b      	ldr	r3, [pc, #364]	; (200030a8 <init_boom+0x26c>)
20002f3c:	681b      	ldr	r3, [r3, #0]
20002f3e:	485b      	ldr	r0, [pc, #364]	; (200030ac <init_boom+0x270>)
20002f40:	f001 f820 	bl	20003f84 <load_image>
		load_image(&boomImages[4], boom5Black, boom5Gray, boom5Light);
20002f44:	4b5a      	ldr	r3, [pc, #360]	; (200030b0 <init_boom+0x274>)
20002f46:	6819      	ldr	r1, [r3, #0]
20002f48:	4b5a      	ldr	r3, [pc, #360]	; (200030b4 <init_boom+0x278>)
20002f4a:	681a      	ldr	r2, [r3, #0]
20002f4c:	4b5a      	ldr	r3, [pc, #360]	; (200030b8 <init_boom+0x27c>)
20002f4e:	681b      	ldr	r3, [r3, #0]
20002f50:	485a      	ldr	r0, [pc, #360]	; (200030bc <init_boom+0x280>)
20002f52:	f001 f817 	bl	20003f84 <load_image>
		load_image(&boomImages[5], boom6Black, boom6Gray, boom6Light);
20002f56:	4b5a      	ldr	r3, [pc, #360]	; (200030c0 <init_boom+0x284>)
20002f58:	6819      	ldr	r1, [r3, #0]
20002f5a:	4b5a      	ldr	r3, [pc, #360]	; (200030c4 <init_boom+0x288>)
20002f5c:	681a      	ldr	r2, [r3, #0]
20002f5e:	4b5a      	ldr	r3, [pc, #360]	; (200030c8 <init_boom+0x28c>)
20002f60:	681b      	ldr	r3, [r3, #0]
20002f62:	485a      	ldr	r0, [pc, #360]	; (200030cc <init_boom+0x290>)
20002f64:	f001 f80e 	bl	20003f84 <load_image>
		load_image(&boomImages[6], boom6Black, boom6Gray, boom6Light);
20002f68:	4b55      	ldr	r3, [pc, #340]	; (200030c0 <init_boom+0x284>)
20002f6a:	6819      	ldr	r1, [r3, #0]
20002f6c:	4b55      	ldr	r3, [pc, #340]	; (200030c4 <init_boom+0x288>)
20002f6e:	681a      	ldr	r2, [r3, #0]
20002f70:	4b55      	ldr	r3, [pc, #340]	; (200030c8 <init_boom+0x28c>)
20002f72:	681b      	ldr	r3, [r3, #0]
20002f74:	4856      	ldr	r0, [pc, #344]	; (200030d0 <init_boom+0x294>)
20002f76:	f001 f805 	bl	20003f84 <load_image>
		load_image(&boomImages[7], boom6Black, boom6Gray, boom6Light);
20002f7a:	4b51      	ldr	r3, [pc, #324]	; (200030c0 <init_boom+0x284>)
20002f7c:	6819      	ldr	r1, [r3, #0]
20002f7e:	4b51      	ldr	r3, [pc, #324]	; (200030c4 <init_boom+0x288>)
20002f80:	681a      	ldr	r2, [r3, #0]
20002f82:	4b51      	ldr	r3, [pc, #324]	; (200030c8 <init_boom+0x28c>)
20002f84:	681b      	ldr	r3, [r3, #0]
20002f86:	4853      	ldr	r0, [pc, #332]	; (200030d4 <init_boom+0x298>)
20002f88:	f000 fffc 	bl	20003f84 <load_image>
		load_image(&boomImages[8], boom6Black, boom6Gray, boom6Light);
20002f8c:	4b4c      	ldr	r3, [pc, #304]	; (200030c0 <init_boom+0x284>)
20002f8e:	6819      	ldr	r1, [r3, #0]
20002f90:	4b4c      	ldr	r3, [pc, #304]	; (200030c4 <init_boom+0x288>)
20002f92:	681a      	ldr	r2, [r3, #0]
20002f94:	4b4c      	ldr	r3, [pc, #304]	; (200030c8 <init_boom+0x28c>)
20002f96:	681b      	ldr	r3, [r3, #0]
20002f98:	484f      	ldr	r0, [pc, #316]	; (200030d8 <init_boom+0x29c>)
20002f9a:	f000 fff3 	bl	20003f84 <load_image>
		load_image(&boomImages[9], boom6Black, boom6Gray, boom6Light);
20002f9e:	4b48      	ldr	r3, [pc, #288]	; (200030c0 <init_boom+0x284>)
20002fa0:	6819      	ldr	r1, [r3, #0]
20002fa2:	4b48      	ldr	r3, [pc, #288]	; (200030c4 <init_boom+0x288>)
20002fa4:	681a      	ldr	r2, [r3, #0]
20002fa6:	4b48      	ldr	r3, [pc, #288]	; (200030c8 <init_boom+0x28c>)
20002fa8:	681b      	ldr	r3, [r3, #0]
20002faa:	484c      	ldr	r0, [pc, #304]	; (200030dc <init_boom+0x2a0>)
20002fac:	f000 ffea 	bl	20003f84 <load_image>
		load_image(&boomImages[10], boom6Black, boom6Gray, boom6Light);
20002fb0:	4b43      	ldr	r3, [pc, #268]	; (200030c0 <init_boom+0x284>)
20002fb2:	6819      	ldr	r1, [r3, #0]
20002fb4:	4b43      	ldr	r3, [pc, #268]	; (200030c4 <init_boom+0x288>)
20002fb6:	681a      	ldr	r2, [r3, #0]
20002fb8:	4b43      	ldr	r3, [pc, #268]	; (200030c8 <init_boom+0x28c>)
20002fba:	681b      	ldr	r3, [r3, #0]
20002fbc:	4848      	ldr	r0, [pc, #288]	; (200030e0 <init_boom+0x2a4>)
20002fbe:	f000 ffe1 	bl	20003f84 <load_image>
		load_image(&boomImages[11], boom6Black, boom6Gray, boom6Light);
20002fc2:	4b3f      	ldr	r3, [pc, #252]	; (200030c0 <init_boom+0x284>)
20002fc4:	6819      	ldr	r1, [r3, #0]
20002fc6:	4b3f      	ldr	r3, [pc, #252]	; (200030c4 <init_boom+0x288>)
20002fc8:	681a      	ldr	r2, [r3, #0]
20002fca:	4b3f      	ldr	r3, [pc, #252]	; (200030c8 <init_boom+0x28c>)
20002fcc:	681b      	ldr	r3, [r3, #0]
20002fce:	4845      	ldr	r0, [pc, #276]	; (200030e4 <init_boom+0x2a8>)
20002fd0:	f000 ffd8 	bl	20003f84 <load_image>
		load_image(&boomImages[12], boom6Black, boom6Gray, boom6Light);
20002fd4:	4b3a      	ldr	r3, [pc, #232]	; (200030c0 <init_boom+0x284>)
20002fd6:	6819      	ldr	r1, [r3, #0]
20002fd8:	4b3a      	ldr	r3, [pc, #232]	; (200030c4 <init_boom+0x288>)
20002fda:	681a      	ldr	r2, [r3, #0]
20002fdc:	4b3a      	ldr	r3, [pc, #232]	; (200030c8 <init_boom+0x28c>)
20002fde:	681b      	ldr	r3, [r3, #0]
20002fe0:	4841      	ldr	r0, [pc, #260]	; (200030e8 <init_boom+0x2ac>)
20002fe2:	f000 ffcf 	bl	20003f84 <load_image>
		load_image(&boomImages[13], boom6Black, boom6Gray, boom6Light);
20002fe6:	4b36      	ldr	r3, [pc, #216]	; (200030c0 <init_boom+0x284>)
20002fe8:	6819      	ldr	r1, [r3, #0]
20002fea:	4b36      	ldr	r3, [pc, #216]	; (200030c4 <init_boom+0x288>)
20002fec:	681a      	ldr	r2, [r3, #0]
20002fee:	4b36      	ldr	r3, [pc, #216]	; (200030c8 <init_boom+0x28c>)
20002ff0:	681b      	ldr	r3, [r3, #0]
20002ff2:	483e      	ldr	r0, [pc, #248]	; (200030ec <init_boom+0x2b0>)
20002ff4:	f000 ffc6 	bl	20003f84 <load_image>
		load_image(&boomImages[14], boom6Black, boom6Gray, boom6Light);
20002ff8:	4b31      	ldr	r3, [pc, #196]	; (200030c0 <init_boom+0x284>)
20002ffa:	6819      	ldr	r1, [r3, #0]
20002ffc:	4b31      	ldr	r3, [pc, #196]	; (200030c4 <init_boom+0x288>)
20002ffe:	681a      	ldr	r2, [r3, #0]
20003000:	4b31      	ldr	r3, [pc, #196]	; (200030c8 <init_boom+0x28c>)
20003002:	681b      	ldr	r3, [r3, #0]
20003004:	483a      	ldr	r0, [pc, #232]	; (200030f0 <init_boom+0x2b4>)
20003006:	f000 ffbd 	bl	20003f84 <load_image>
	}
	
	boomObj->images = boomImages;
2000300a:	687b      	ldr	r3, [r7, #4]
2000300c:	4a09      	ldr	r2, [pc, #36]	; (20003034 <init_boom+0x1f8>)
2000300e:	601a      	str	r2, [r3, #0]

	boomObj->current_frame = 0;
20003010:	687b      	ldr	r3, [r7, #4]
20003012:	2200      	movs	r2, #0
20003014:	615a      	str	r2, [r3, #20]
	boomObj->n_frames = 15;
20003016:	687b      	ldr	r3, [r7, #4]
20003018:	220f      	movs	r2, #15
2000301a:	619a      	str	r2, [r3, #24]
	boomObj->animation_speed = 1;
2000301c:	687b      	ldr	r3, [r7, #4]
2000301e:	2201      	movs	r2, #1
20003020:	61da      	str	r2, [r3, #28]
	boomObj->animation_counter = 0;
20003022:	687b      	ldr	r3, [r7, #4]
20003024:	2200      	movs	r2, #0
20003026:	621a      	str	r2, [r3, #32]
}
20003028:	46c0      	nop			; (mov r8, r8)
2000302a:	46bd      	mov	sp, r7
2000302c:	b003      	add	sp, #12
2000302e:	bd90      	pop	{r4, r7, pc}
20003030:	2000d7ec 	andcs	sp, r0, ip, ror #15
20003034:	20005954 	andcs	r5, r0, r4, asr r9
20003038:	20005a84 	andcs	r5, r0, r4, lsl #21
2000303c:	200058ac 	andcs	r5, r0, ip, lsr #17
20003040:	20005a9c 	mulcs	r0, ip, sl
20003044:	200058a0 	andcs	r5, r0, r0, lsr #17
20003048:	200058e4 	andcs	r5, r0, r4, ror #17
2000304c:	20005928 	andcs	r5, r0, r8, lsr #18
20003050:	20005a90 	mulcs	r0, r0, sl
20003054:	200058d8 	ldrdcs	r5, [r0], -r8
20003058:	20005880 	andcs	r5, r0, r0, lsl #17
2000305c:	200058c0 	andcs	r5, r0, r0, asr #17
20003060:	20005a78 	andcs	r5, r0, r8, ror sl
20003064:	2000588c 	andcs	r5, r0, ip, lsl #17
20003068:	20005944 	andcs	r5, r0, r4, asr #18
2000306c:	200058cc 	andcs	r5, r0, ip, asr #17
20003070:	20005adc 	ldrdcs	r5, [r0], -ip
20003074:	20005a38 	andcs	r5, r0, r8, lsr sl
20003078:	20005a74 	andcs	r5, r0, r4, ror sl
2000307c:	20005ad8 	ldrdcs	r5, [r0], -r8
20003080:	20005ae8 	andcs	r5, r0, r8, ror #21
20003084:	20005a34 	andcs	r5, r0, r4, lsr sl
20003088:	20005aec 	andcs	r5, r0, ip, ror #21
2000308c:	20005960 	andcs	r5, r0, r0, ror #18
20003090:	2000589c 	mulcs	r0, ip, r8
20003094:	200058f0 	strdcs	r5, [r0], -r0
20003098:	20005898 	mulcs	r0, r8, r8
2000309c:	2000596c 	andcs	r5, r0, ip, ror #18
200030a0:	20005a18 	andcs	r5, r0, r8, lsl sl
200030a4:	20005a6c 	andcs	r5, r0, ip, ror #20
200030a8:	200058bc 			; <UNDEFINED> instruction: 0x200058bc
200030ac:	20005978 	andcs	r5, r0, r8, ror r9
200030b0:	200058b8 			; <UNDEFINED> instruction: 0x200058b8
200030b4:	20005900 	andcs	r5, r0, r0, lsl #18
200030b8:	20005a70 	andcs	r5, r0, r0, ror sl
200030bc:	20005984 	andcs	r5, r0, r4, lsl #19
200030c0:	20005a08 	andcs	r5, r0, r8, lsl #20
200030c4:	20005940 	andcs	r5, r0, r0, asr #18
200030c8:	20005950 	andcs	r5, r0, r0, asr r9
200030cc:	20005990 	mulcs	r0, r0, r9
200030d0:	2000599c 	mulcs	r0, ip, r9
200030d4:	200059a8 	andcs	r5, r0, r8, lsr #19
200030d8:	200059b4 			; <UNDEFINED> instruction: 0x200059b4
200030dc:	200059c0 	andcs	r5, r0, r0, asr #19
200030e0:	200059cc 	andcs	r5, r0, ip, asr #19
200030e4:	200059d8 	ldrdcs	r5, [r0], -r8
200030e8:	200059e4 	andcs	r5, r0, r4, ror #19
200030ec:	200059f0 	strdcs	r5, [r0], -r0
200030f0:	200059fc 	strdcs	r5, [r0], -ip

200030f4 <delay_250ns>:
#include "graphics.h"


void delay_250ns(void){
200030f4:	b580      	push	{r7, lr}
200030f6:	af00      	add	r7, sp, #0
	/* SystemCoreClock = 168000000 */
	*STK_CTRL = 0;
200030f8:	4b0c      	ldr	r3, [pc, #48]	; (2000312c <delay_250ns+0x38>)
200030fa:	2200      	movs	r2, #0
200030fc:	601a      	str	r2, [r3, #0]
	*STK_LOAD = ( (168/4) -1);
200030fe:	4b0c      	ldr	r3, [pc, #48]	; (20003130 <delay_250ns+0x3c>)
20003100:	2229      	movs	r2, #41	; 0x29
20003102:	601a      	str	r2, [r3, #0]
	*STK_VAL = 0;
20003104:	4b0b      	ldr	r3, [pc, #44]	; (20003134 <delay_250ns+0x40>)
20003106:	2200      	movs	r2, #0
20003108:	601a      	str	r2, [r3, #0]
	*STK_CTRL = 5;
2000310a:	4b08      	ldr	r3, [pc, #32]	; (2000312c <delay_250ns+0x38>)
2000310c:	2205      	movs	r2, #5
2000310e:	601a      	str	r2, [r3, #0]
	while( (*STK_CTRL & 0x10000)== 0 ){}
20003110:	46c0      	nop			; (mov r8, r8)
20003112:	4b06      	ldr	r3, [pc, #24]	; (2000312c <delay_250ns+0x38>)
20003114:	681a      	ldr	r2, [r3, #0]
20003116:	2380      	movs	r3, #128	; 0x80
20003118:	025b      	lsls	r3, r3, #9
2000311a:	4013      	ands	r3, r2
2000311c:	d0f9      	beq.n	20003112 <delay_250ns+0x1e>
	*STK_CTRL = 0;
2000311e:	4b03      	ldr	r3, [pc, #12]	; (2000312c <delay_250ns+0x38>)
20003120:	2200      	movs	r2, #0
20003122:	601a      	str	r2, [r3, #0]
}
20003124:	46c0      	nop			; (mov r8, r8)
20003126:	46bd      	mov	sp, r7
20003128:	bd80      	pop	{r7, pc}
2000312a:	46c0      	nop			; (mov r8, r8)
2000312c:	e000e010 	and	lr, r0, r0, lsl r0
20003130:	e000e014 	and	lr, r0, r4, lsl r0
20003134:	e000e018 	and	lr, r0, r8, lsl r0

20003138 <delay_500ns>:

void delay_500ns(void){
20003138:	b580      	push	{r7, lr}
2000313a:	af00      	add	r7, sp, #0
	/* SystemCoreClock = 168000000 */
	*STK_CTRL = 0;
2000313c:	4b0c      	ldr	r3, [pc, #48]	; (20003170 <delay_500ns+0x38>)
2000313e:	2200      	movs	r2, #0
20003140:	601a      	str	r2, [r3, #0]
	*STK_LOAD = ( (168/2) -1);
20003142:	4b0c      	ldr	r3, [pc, #48]	; (20003174 <delay_500ns+0x3c>)
20003144:	2253      	movs	r2, #83	; 0x53
20003146:	601a      	str	r2, [r3, #0]
	*STK_VAL = 0;
20003148:	4b0b      	ldr	r3, [pc, #44]	; (20003178 <delay_500ns+0x40>)
2000314a:	2200      	movs	r2, #0
2000314c:	601a      	str	r2, [r3, #0]
	*STK_CTRL = 5;
2000314e:	4b08      	ldr	r3, [pc, #32]	; (20003170 <delay_500ns+0x38>)
20003150:	2205      	movs	r2, #5
20003152:	601a      	str	r2, [r3, #0]
	while( (*STK_CTRL & 0x10000)== 0 ){}
20003154:	46c0      	nop			; (mov r8, r8)
20003156:	4b06      	ldr	r3, [pc, #24]	; (20003170 <delay_500ns+0x38>)
20003158:	681a      	ldr	r2, [r3, #0]
2000315a:	2380      	movs	r3, #128	; 0x80
2000315c:	025b      	lsls	r3, r3, #9
2000315e:	4013      	ands	r3, r2
20003160:	d0f9      	beq.n	20003156 <delay_500ns+0x1e>
	*STK_CTRL = 0;
20003162:	4b03      	ldr	r3, [pc, #12]	; (20003170 <delay_500ns+0x38>)
20003164:	2200      	movs	r2, #0
20003166:	601a      	str	r2, [r3, #0]
}
20003168:	46c0      	nop			; (mov r8, r8)
2000316a:	46bd      	mov	sp, r7
2000316c:	bd80      	pop	{r7, pc}
2000316e:	46c0      	nop			; (mov r8, r8)
20003170:	e000e010 	and	lr, r0, r0, lsl r0
20003174:	e000e014 	and	lr, r0, r4, lsl r0
20003178:	e000e018 	and	lr, r0, r8, lsl r0

2000317c <delay_micro>:

void delay_micro(unsigned int us){
2000317c:	b580      	push	{r7, lr}
2000317e:	b082      	sub	sp, #8
20003180:	af00      	add	r7, sp, #0
20003182:	6078      	str	r0, [r7, #4]
	while(us--) {
20003184:	e007      	b.n	20003196 <delay_micro+0x1a>
		delay_250ns();
20003186:	f7ff ffb5 	bl	200030f4 <delay_250ns>
		delay_250ns();
2000318a:	f7ff ffb3 	bl	200030f4 <delay_250ns>
		delay_250ns();
2000318e:	f7ff ffb1 	bl	200030f4 <delay_250ns>
		delay_250ns();
20003192:	f7ff ffaf 	bl	200030f4 <delay_250ns>
	while(us--) {
20003196:	687b      	ldr	r3, [r7, #4]
20003198:	1e5a      	subs	r2, r3, #1
2000319a:	607a      	str	r2, [r7, #4]
2000319c:	2b00      	cmp	r3, #0
2000319e:	d1f2      	bne.n	20003186 <delay_micro+0xa>
	}
}
200031a0:	46c0      	nop			; (mov r8, r8)
200031a2:	46bd      	mov	sp, r7
200031a4:	b002      	add	sp, #8
200031a6:	bd80      	pop	{r7, pc}

200031a8 <delay_milli>:

void delay_milli(unsigned int ms){
200031a8:	b580      	push	{r7, lr}
200031aa:	b082      	sub	sp, #8
200031ac:	af00      	add	r7, sp, #0
200031ae:	6078      	str	r0, [r7, #4]
	#ifdef SIMULATOR
		while(ms--)
			delay_micro(1);
	#else
		while(ms--)
200031b0:	e004      	b.n	200031bc <delay_milli+0x14>
			delay_micro(1000);
200031b2:	23fa      	movs	r3, #250	; 0xfa
200031b4:	009b      	lsls	r3, r3, #2
200031b6:	0018      	movs	r0, r3
200031b8:	f7ff ffe0 	bl	2000317c <delay_micro>
		while(ms--)
200031bc:	687b      	ldr	r3, [r7, #4]
200031be:	1e5a      	subs	r2, r3, #1
200031c0:	607a      	str	r2, [r7, #4]
200031c2:	2b00      	cmp	r3, #0
200031c4:	d1f5      	bne.n	200031b2 <delay_milli+0xa>
	#endif
}
200031c6:	46c0      	nop			; (mov r8, r8)
200031c8:	46bd      	mov	sp, r7
200031ca:	b002      	add	sp, #8
200031cc:	bd80      	pop	{r7, pc}

200031ce <clear_thisBackBuffer>:
uint8_t draw_buffer_black_light[1024]; // 128 * 64 / 8
uint8_t draw_buffer_black_gray_light[1024]; // 128 * 64 / 8
uint8_t backBuffer[1024]; // 128 * 64 / 8
uint8_t backBufferGray[1024]; // 128 * 64 / 8
uint8_t backBufferLight[1024]; // 128 * 64 / 8
void clear_thisBackBuffer(uint8_t *buffer) {
200031ce:	b580      	push	{r7, lr}
200031d0:	b084      	sub	sp, #16
200031d2:	af00      	add	r7, sp, #0
200031d4:	6078      	str	r0, [r7, #4]
	int i;
	for (i = 0; i < 1024; i++)
200031d6:	2300      	movs	r3, #0
200031d8:	60fb      	str	r3, [r7, #12]
200031da:	e007      	b.n	200031ec <clear_thisBackBuffer+0x1e>
		buffer[i] = 0;
200031dc:	68fb      	ldr	r3, [r7, #12]
200031de:	687a      	ldr	r2, [r7, #4]
200031e0:	18d3      	adds	r3, r2, r3
200031e2:	2200      	movs	r2, #0
200031e4:	701a      	strb	r2, [r3, #0]
	for (i = 0; i < 1024; i++)
200031e6:	68fb      	ldr	r3, [r7, #12]
200031e8:	3301      	adds	r3, #1
200031ea:	60fb      	str	r3, [r7, #12]
200031ec:	68fb      	ldr	r3, [r7, #12]
200031ee:	4a03      	ldr	r2, [pc, #12]	; (200031fc <clear_thisBackBuffer+0x2e>)
200031f0:	4293      	cmp	r3, r2
200031f2:	ddf3      	ble.n	200031dc <clear_thisBackBuffer+0xe>
}
200031f4:	46c0      	nop			; (mov r8, r8)
200031f6:	46bd      	mov	sp, r7
200031f8:	b004      	add	sp, #16
200031fa:	bd80      	pop	{r7, pc}
200031fc:	000003ff 	strdeq	r0, [r0], -pc	; <UNPREDICTABLE>

20003200 <clear_backBuffer>:
void clear_backBuffer() {
20003200:	b580      	push	{r7, lr}
20003202:	af00      	add	r7, sp, #0
	clear_thisBackBuffer(backBuffer);
20003204:	4b03      	ldr	r3, [pc, #12]	; (20003214 <clear_backBuffer+0x14>)
20003206:	0018      	movs	r0, r3
20003208:	f7ff ffe1 	bl	200031ce <clear_thisBackBuffer>
}
2000320c:	46c0      	nop			; (mov r8, r8)
2000320e:	46bd      	mov	sp, r7
20003210:	bd80      	pop	{r7, pc}
20003212:	46c0      	nop			; (mov r8, r8)
20003214:	200062fc 	strdcs	r6, [r0], -ip

20003218 <clear_all_backBuffers>:
void clear_all_backBuffers() {
20003218:	b580      	push	{r7, lr}
2000321a:	af00      	add	r7, sp, #0
	clear_thisBackBuffer(backBuffer);
2000321c:	4b07      	ldr	r3, [pc, #28]	; (2000323c <clear_all_backBuffers+0x24>)
2000321e:	0018      	movs	r0, r3
20003220:	f7ff ffd5 	bl	200031ce <clear_thisBackBuffer>
	clear_thisBackBuffer(backBufferGray);
20003224:	4b06      	ldr	r3, [pc, #24]	; (20003240 <clear_all_backBuffers+0x28>)
20003226:	0018      	movs	r0, r3
20003228:	f7ff ffd1 	bl	200031ce <clear_thisBackBuffer>
	clear_thisBackBuffer(backBufferLight);
2000322c:	4b05      	ldr	r3, [pc, #20]	; (20003244 <clear_all_backBuffers+0x2c>)
2000322e:	0018      	movs	r0, r3
20003230:	f7ff ffcd 	bl	200031ce <clear_thisBackBuffer>
}
20003234:	46c0      	nop			; (mov r8, r8)
20003236:	46bd      	mov	sp, r7
20003238:	bd80      	pop	{r7, pc}
2000323a:	46c0      	nop			; (mov r8, r8)
2000323c:	200062fc 	strdcs	r6, [r0], -ip
20003240:	20005afc 	strdcs	r5, [r0], -ip
20003244:	200072fc 	strdcs	r7, [r0], -ip

20003248 <graphic_ctrl_bit_set>:

/* välj grafik-display och ettställ de bitar som är 1 i x */
static void graphic_ctrl_bit_set( uint8_t x) {
20003248:	b580      	push	{r7, lr}
2000324a:	b084      	sub	sp, #16
2000324c:	af00      	add	r7, sp, #0
2000324e:	0002      	movs	r2, r0
20003250:	1dfb      	adds	r3, r7, #7
20003252:	701a      	strb	r2, [r3, #0]
	uint8_t c;
	c = *portOdrLow;
20003254:	4a0f      	ldr	r2, [pc, #60]	; (20003294 <graphic_ctrl_bit_set+0x4c>)
20003256:	230f      	movs	r3, #15
20003258:	18fb      	adds	r3, r7, r3
2000325a:	7812      	ldrb	r2, [r2, #0]
2000325c:	701a      	strb	r2, [r3, #0]
	c |= x;
2000325e:	230f      	movs	r3, #15
20003260:	18fb      	adds	r3, r7, r3
20003262:	220f      	movs	r2, #15
20003264:	18b9      	adds	r1, r7, r2
20003266:	1dfa      	adds	r2, r7, #7
20003268:	7809      	ldrb	r1, [r1, #0]
2000326a:	7812      	ldrb	r2, [r2, #0]
2000326c:	430a      	orrs	r2, r1
2000326e:	701a      	strb	r2, [r3, #0]
	c &= ~B_SELECT; //Graphic display istället för alphanum
20003270:	230f      	movs	r3, #15
20003272:	18fb      	adds	r3, r7, r3
20003274:	220f      	movs	r2, #15
20003276:	18ba      	adds	r2, r7, r2
20003278:	7812      	ldrb	r2, [r2, #0]
2000327a:	2104      	movs	r1, #4
2000327c:	438a      	bics	r2, r1
2000327e:	701a      	strb	r2, [r3, #0]
	*portOdrLow = c;
20003280:	4a04      	ldr	r2, [pc, #16]	; (20003294 <graphic_ctrl_bit_set+0x4c>)
20003282:	230f      	movs	r3, #15
20003284:	18fb      	adds	r3, r7, r3
20003286:	781b      	ldrb	r3, [r3, #0]
20003288:	7013      	strb	r3, [r2, #0]
}
2000328a:	46c0      	nop			; (mov r8, r8)
2000328c:	46bd      	mov	sp, r7
2000328e:	b004      	add	sp, #16
20003290:	bd80      	pop	{r7, pc}
20003292:	46c0      	nop			; (mov r8, r8)
20003294:	40021014 	andmi	r1, r2, r4, lsl r0

20003298 <graphic_ctrl_bit_clear>:
/* välj grafik-display och nollställ de bitar som är 1 i x */
static void graphic_ctrl_bit_clear( uint8_t x) {
20003298:	b580      	push	{r7, lr}
2000329a:	b084      	sub	sp, #16
2000329c:	af00      	add	r7, sp, #0
2000329e:	0002      	movs	r2, r0
200032a0:	1dfb      	adds	r3, r7, #7
200032a2:	701a      	strb	r2, [r3, #0]
	uint8_t c;
	c = *portOdrLow;
200032a4:	4a11      	ldr	r2, [pc, #68]	; (200032ec <graphic_ctrl_bit_clear+0x54>)
200032a6:	230f      	movs	r3, #15
200032a8:	18fb      	adds	r3, r7, r3
200032aa:	7812      	ldrb	r2, [r2, #0]
200032ac:	701a      	strb	r2, [r3, #0]
	c &= ~x;
200032ae:	1dfb      	adds	r3, r7, #7
200032b0:	781b      	ldrb	r3, [r3, #0]
200032b2:	b25b      	sxtb	r3, r3
200032b4:	43db      	mvns	r3, r3
200032b6:	b25b      	sxtb	r3, r3
200032b8:	220f      	movs	r2, #15
200032ba:	18ba      	adds	r2, r7, r2
200032bc:	7812      	ldrb	r2, [r2, #0]
200032be:	b252      	sxtb	r2, r2
200032c0:	4013      	ands	r3, r2
200032c2:	b25a      	sxtb	r2, r3
200032c4:	230f      	movs	r3, #15
200032c6:	18fb      	adds	r3, r7, r3
200032c8:	701a      	strb	r2, [r3, #0]
	c &= ~B_SELECT; //Graphic display istället för alphanum
200032ca:	230f      	movs	r3, #15
200032cc:	18fb      	adds	r3, r7, r3
200032ce:	220f      	movs	r2, #15
200032d0:	18ba      	adds	r2, r7, r2
200032d2:	7812      	ldrb	r2, [r2, #0]
200032d4:	2104      	movs	r1, #4
200032d6:	438a      	bics	r2, r1
200032d8:	701a      	strb	r2, [r3, #0]
	*portOdrLow = c;
200032da:	4a04      	ldr	r2, [pc, #16]	; (200032ec <graphic_ctrl_bit_clear+0x54>)
200032dc:	230f      	movs	r3, #15
200032de:	18fb      	adds	r3, r7, r3
200032e0:	781b      	ldrb	r3, [r3, #0]
200032e2:	7013      	strb	r3, [r2, #0]
}
200032e4:	46c0      	nop			; (mov r8, r8)
200032e6:	46bd      	mov	sp, r7
200032e8:	b004      	add	sp, #16
200032ea:	bd80      	pop	{r7, pc}
200032ec:	40021014 	andmi	r1, r2, r4, lsl r0

200032f0 <select_controller>:
void select_controller( uint8_t controller) {
200032f0:	b580      	push	{r7, lr}
200032f2:	b082      	sub	sp, #8
200032f4:	af00      	add	r7, sp, #0
200032f6:	0002      	movs	r2, r0
200032f8:	1dfb      	adds	r3, r7, #7
200032fa:	701a      	strb	r2, [r3, #0]
	switch (controller) {
200032fc:	1dfb      	adds	r3, r7, #7
200032fe:	781b      	ldrb	r3, [r3, #0]
20003300:	2b08      	cmp	r3, #8
20003302:	d00f      	beq.n	20003324 <select_controller+0x34>
20003304:	dc02      	bgt.n	2000330c <select_controller+0x1c>
20003306:	2b00      	cmp	r3, #0
20003308:	d005      	beq.n	20003316 <select_controller+0x26>
		case (B_CS1|B_CS2): 
			graphic_ctrl_bit_set(B_CS1); 
			graphic_ctrl_bit_set(B_CS2); 
			break;
	}
}
2000330a:	e020      	b.n	2000334e <select_controller+0x5e>
	switch (controller) {
2000330c:	2b10      	cmp	r3, #16
2000330e:	d010      	beq.n	20003332 <select_controller+0x42>
20003310:	2b18      	cmp	r3, #24
20003312:	d015      	beq.n	20003340 <select_controller+0x50>
}
20003314:	e01b      	b.n	2000334e <select_controller+0x5e>
			graphic_ctrl_bit_clear(B_CS1); 
20003316:	2008      	movs	r0, #8
20003318:	f7ff ffbe 	bl	20003298 <graphic_ctrl_bit_clear>
			graphic_ctrl_bit_clear(B_CS2); 
2000331c:	2010      	movs	r0, #16
2000331e:	f7ff ffbb 	bl	20003298 <graphic_ctrl_bit_clear>
			break;
20003322:	e014      	b.n	2000334e <select_controller+0x5e>
			graphic_ctrl_bit_set(B_CS1); 
20003324:	2008      	movs	r0, #8
20003326:	f7ff ff8f 	bl	20003248 <graphic_ctrl_bit_set>
			graphic_ctrl_bit_clear(B_CS2); 
2000332a:	2010      	movs	r0, #16
2000332c:	f7ff ffb4 	bl	20003298 <graphic_ctrl_bit_clear>
			break;
20003330:	e00d      	b.n	2000334e <select_controller+0x5e>
			graphic_ctrl_bit_clear(B_CS1); 
20003332:	2008      	movs	r0, #8
20003334:	f7ff ffb0 	bl	20003298 <graphic_ctrl_bit_clear>
			graphic_ctrl_bit_set(B_CS2); 
20003338:	2010      	movs	r0, #16
2000333a:	f7ff ff85 	bl	20003248 <graphic_ctrl_bit_set>
			break;
2000333e:	e006      	b.n	2000334e <select_controller+0x5e>
			graphic_ctrl_bit_set(B_CS1); 
20003340:	2008      	movs	r0, #8
20003342:	f7ff ff81 	bl	20003248 <graphic_ctrl_bit_set>
			graphic_ctrl_bit_set(B_CS2); 
20003346:	2010      	movs	r0, #16
20003348:	f7ff ff7e 	bl	20003248 <graphic_ctrl_bit_set>
			break;
2000334c:	46c0      	nop			; (mov r8, r8)
}
2000334e:	46c0      	nop			; (mov r8, r8)
20003350:	46bd      	mov	sp, r7
20003352:	b002      	add	sp, #8
20003354:	bd80      	pop	{r7, pc}

20003356 <graphic_wait_ready>:

void graphic_wait_ready( void ) {
20003356:	b580      	push	{r7, lr}
20003358:	b082      	sub	sp, #8
2000335a:	af00      	add	r7, sp, #0
	uint8_t c;
	graphic_ctrl_bit_clear(B_E);
2000335c:	2040      	movs	r0, #64	; 0x40
2000335e:	f7ff ff9b 	bl	20003298 <graphic_ctrl_bit_clear>
	*portModer = 0x00005555;
20003362:	4b14      	ldr	r3, [pc, #80]	; (200033b4 <graphic_wait_ready+0x5e>)
20003364:	4a14      	ldr	r2, [pc, #80]	; (200033b8 <graphic_wait_ready+0x62>)
20003366:	601a      	str	r2, [r3, #0]
	graphic_ctrl_bit_clear(B_RS);
20003368:	2001      	movs	r0, #1
2000336a:	f7ff ff95 	bl	20003298 <graphic_ctrl_bit_clear>
	graphic_ctrl_bit_set(B_RW);
2000336e:	2002      	movs	r0, #2
20003370:	f7ff ff6a 	bl	20003248 <graphic_ctrl_bit_set>
	delay_500ns();
20003374:	f7ff fee0 	bl	20003138 <delay_500ns>
	
	while(1) {
		graphic_ctrl_bit_set(B_E);
20003378:	2040      	movs	r0, #64	; 0x40
2000337a:	f7ff ff65 	bl	20003248 <graphic_ctrl_bit_set>
		delay_500ns();
2000337e:	f7ff fedb 	bl	20003138 <delay_500ns>
		c = *portIdrHigh & LCD_BUSY; //...
20003382:	4b0e      	ldr	r3, [pc, #56]	; (200033bc <graphic_wait_ready+0x66>)
20003384:	781b      	ldrb	r3, [r3, #0]
20003386:	b2da      	uxtb	r2, r3
20003388:	1dfb      	adds	r3, r7, #7
2000338a:	217f      	movs	r1, #127	; 0x7f
2000338c:	438a      	bics	r2, r1
2000338e:	701a      	strb	r2, [r3, #0]
		graphic_ctrl_bit_clear(B_E);
20003390:	2040      	movs	r0, #64	; 0x40
20003392:	f7ff ff81 	bl	20003298 <graphic_ctrl_bit_clear>
		delay_500ns();
20003396:	f7ff fecf 	bl	20003138 <delay_500ns>
		/*if (*portIdrHigh & 0x80 == 0x80) {
			break; }*/
		if (c == 0) break;
2000339a:	1dfb      	adds	r3, r7, #7
2000339c:	781b      	ldrb	r3, [r3, #0]
2000339e:	2b00      	cmp	r3, #0
200033a0:	d000      	beq.n	200033a4 <graphic_wait_ready+0x4e>
		graphic_ctrl_bit_set(B_E);
200033a2:	e7e9      	b.n	20003378 <graphic_wait_ready+0x22>
		if (c == 0) break;
200033a4:	46c0      	nop			; (mov r8, r8)
	}
	//graphic_ctrl_bit_set(B_E); //<--
	*portModer = 0x55555555;	
200033a6:	4b03      	ldr	r3, [pc, #12]	; (200033b4 <graphic_wait_ready+0x5e>)
200033a8:	4a05      	ldr	r2, [pc, #20]	; (200033c0 <graphic_wait_ready+0x6a>)
200033aa:	601a      	str	r2, [r3, #0]
}
200033ac:	46c0      	nop			; (mov r8, r8)
200033ae:	46bd      	mov	sp, r7
200033b0:	b002      	add	sp, #8
200033b2:	bd80      	pop	{r7, pc}
200033b4:	40021000 	andmi	r1, r2, r0
200033b8:	00005555 	andeq	r5, r0, r5, asr r5
200033bc:	40021011 	andmi	r1, r2, r1, lsl r0
200033c0:	55555555 	ldrbpl	r5, [r5, #-1365]	; 0xfffffaab

200033c4 <graphic_read>:

static uint8_t graphic_read(uint8_t controller) {
200033c4:	b580      	push	{r7, lr}
200033c6:	b084      	sub	sp, #16
200033c8:	af00      	add	r7, sp, #0
200033ca:	0002      	movs	r2, r0
200033cc:	1dfb      	adds	r3, r7, #7
200033ce:	701a      	strb	r2, [r3, #0]
	graphic_ctrl_bit_clear(B_E);
200033d0:	2040      	movs	r0, #64	; 0x40
200033d2:	f7ff ff61 	bl	20003298 <graphic_ctrl_bit_clear>
	*portModer = 0x00005555;
200033d6:	4b1c      	ldr	r3, [pc, #112]	; (20003448 <graphic_read+0x84>)
200033d8:	4a1c      	ldr	r2, [pc, #112]	; (2000344c <graphic_read+0x88>)
200033da:	601a      	str	r2, [r3, #0]
	graphic_ctrl_bit_set(B_RS);
200033dc:	2001      	movs	r0, #1
200033de:	f7ff ff33 	bl	20003248 <graphic_ctrl_bit_set>
	graphic_ctrl_bit_set(B_RW);
200033e2:	2002      	movs	r0, #2
200033e4:	f7ff ff30 	bl	20003248 <graphic_ctrl_bit_set>
	select_controller(controller);
200033e8:	1dfb      	adds	r3, r7, #7
200033ea:	781b      	ldrb	r3, [r3, #0]
200033ec:	0018      	movs	r0, r3
200033ee:	f7ff ff7f 	bl	200032f0 <select_controller>
	delay_500ns();
200033f2:	f7ff fea1 	bl	20003138 <delay_500ns>
	graphic_ctrl_bit_set(B_E);
200033f6:	2040      	movs	r0, #64	; 0x40
200033f8:	f7ff ff26 	bl	20003248 <graphic_ctrl_bit_set>
	delay_500ns();
200033fc:	f7ff fe9c 	bl	20003138 <delay_500ns>
	unsigned char rv = *portIdrHigh;
20003400:	4a13      	ldr	r2, [pc, #76]	; (20003450 <graphic_read+0x8c>)
20003402:	230f      	movs	r3, #15
20003404:	18fb      	adds	r3, r7, r3
20003406:	7812      	ldrb	r2, [r2, #0]
20003408:	701a      	strb	r2, [r3, #0]
	graphic_ctrl_bit_clear(B_E);
2000340a:	2040      	movs	r0, #64	; 0x40
2000340c:	f7ff ff44 	bl	20003298 <graphic_ctrl_bit_clear>
	*portModer = 0x55555555;
20003410:	4b0d      	ldr	r3, [pc, #52]	; (20003448 <graphic_read+0x84>)
20003412:	4a10      	ldr	r2, [pc, #64]	; (20003454 <graphic_read+0x90>)
20003414:	601a      	str	r2, [r3, #0]
	
	if(controller == B_CS1) {
20003416:	1dfb      	adds	r3, r7, #7
20003418:	781b      	ldrb	r3, [r3, #0]
2000341a:	2b08      	cmp	r3, #8
2000341c:	d104      	bne.n	20003428 <graphic_read+0x64>
		select_controller(B_CS1);
2000341e:	2008      	movs	r0, #8
20003420:	f7ff ff66 	bl	200032f0 <select_controller>
		graphic_wait_ready();
20003424:	f7ff ff97 	bl	20003356 <graphic_wait_ready>
	}
	if(controller == B_CS2) {
20003428:	1dfb      	adds	r3, r7, #7
2000342a:	781b      	ldrb	r3, [r3, #0]
2000342c:	2b10      	cmp	r3, #16
2000342e:	d104      	bne.n	2000343a <graphic_read+0x76>
		select_controller(B_CS2);
20003430:	2010      	movs	r0, #16
20003432:	f7ff ff5d 	bl	200032f0 <select_controller>
		graphic_wait_ready();
20003436:	f7ff ff8e 	bl	20003356 <graphic_wait_ready>
	}
	
	return rv;
2000343a:	230f      	movs	r3, #15
2000343c:	18fb      	adds	r3, r7, r3
2000343e:	781b      	ldrb	r3, [r3, #0]
}
20003440:	0018      	movs	r0, r3
20003442:	46bd      	mov	sp, r7
20003444:	b004      	add	sp, #16
20003446:	bd80      	pop	{r7, pc}
20003448:	40021000 	andmi	r1, r2, r0
2000344c:	00005555 	andeq	r5, r0, r5, asr r5
20003450:	40021011 	andmi	r1, r2, r1, lsl r0
20003454:	55555555 	ldrbpl	r5, [r5, #-1365]	; 0xfffffaab

20003458 <graphic_read_data>:

graphic_read_data(uint8_t controller) {
20003458:	b580      	push	{r7, lr}
2000345a:	b082      	sub	sp, #8
2000345c:	af00      	add	r7, sp, #0
2000345e:	0002      	movs	r2, r0
20003460:	1dfb      	adds	r3, r7, #7
20003462:	701a      	strb	r2, [r3, #0]
	graphic_read(controller);
20003464:	1dfb      	adds	r3, r7, #7
20003466:	781b      	ldrb	r3, [r3, #0]
20003468:	0018      	movs	r0, r3
2000346a:	f7ff ffab 	bl	200033c4 <graphic_read>
	graphic_read(controller);
2000346e:	1dfb      	adds	r3, r7, #7
20003470:	781b      	ldrb	r3, [r3, #0]
20003472:	0018      	movs	r0, r3
20003474:	f7ff ffa6 	bl	200033c4 <graphic_read>
}
20003478:	46c0      	nop			; (mov r8, r8)
2000347a:	0018      	movs	r0, r3
2000347c:	46bd      	mov	sp, r7
2000347e:	b002      	add	sp, #8
20003480:	bd80      	pop	{r7, pc}

20003482 <graphic_write>:

void graphic_write(uint8_t value, uint8_t controller) {
20003482:	b580      	push	{r7, lr}
20003484:	b082      	sub	sp, #8
20003486:	af00      	add	r7, sp, #0
20003488:	0002      	movs	r2, r0
2000348a:	1dfb      	adds	r3, r7, #7
2000348c:	701a      	strb	r2, [r3, #0]
2000348e:	1dbb      	adds	r3, r7, #6
20003490:	1c0a      	adds	r2, r1, #0
20003492:	701a      	strb	r2, [r3, #0]
	*portOdrHigh = value; //I
20003494:	4a19      	ldr	r2, [pc, #100]	; (200034fc <graphic_write+0x7a>)
20003496:	1dfb      	adds	r3, r7, #7
20003498:	781b      	ldrb	r3, [r3, #0]
2000349a:	7013      	strb	r3, [r2, #0]
	select_controller(controller);
2000349c:	1dbb      	adds	r3, r7, #6
2000349e:	781b      	ldrb	r3, [r3, #0]
200034a0:	0018      	movs	r0, r3
200034a2:	f7ff ff25 	bl	200032f0 <select_controller>
	delay_500ns();
200034a6:	f7ff fe47 	bl	20003138 <delay_500ns>
	graphic_ctrl_bit_set(B_E);
200034aa:	2040      	movs	r0, #64	; 0x40
200034ac:	f7ff fecc 	bl	20003248 <graphic_ctrl_bit_set>
	delay_500ns();
200034b0:	f7ff fe42 	bl	20003138 <delay_500ns>
	graphic_ctrl_bit_clear(B_E);
200034b4:	2040      	movs	r0, #64	; 0x40
200034b6:	f7ff feef 	bl	20003298 <graphic_ctrl_bit_clear>
	
	if(controller & B_CS1) {
200034ba:	1dbb      	adds	r3, r7, #6
200034bc:	781b      	ldrb	r3, [r3, #0]
200034be:	2208      	movs	r2, #8
200034c0:	4013      	ands	r3, r2
200034c2:	d004      	beq.n	200034ce <graphic_write+0x4c>
		select_controller(B_CS1);
200034c4:	2008      	movs	r0, #8
200034c6:	f7ff ff13 	bl	200032f0 <select_controller>
		graphic_wait_ready();
200034ca:	f7ff ff44 	bl	20003356 <graphic_wait_ready>
	}
	if(controller & B_CS2) {
200034ce:	1dbb      	adds	r3, r7, #6
200034d0:	781b      	ldrb	r3, [r3, #0]
200034d2:	2210      	movs	r2, #16
200034d4:	4013      	ands	r3, r2
200034d6:	d004      	beq.n	200034e2 <graphic_write+0x60>
		select_controller(B_CS2);
200034d8:	2010      	movs	r0, #16
200034da:	f7ff ff09 	bl	200032f0 <select_controller>
		graphic_wait_ready();
200034de:	f7ff ff3a 	bl	20003356 <graphic_wait_ready>
	}
	
	*portOdrHigh = 0;	//I
200034e2:	4b06      	ldr	r3, [pc, #24]	; (200034fc <graphic_write+0x7a>)
200034e4:	2200      	movs	r2, #0
200034e6:	701a      	strb	r2, [r3, #0]
	graphic_ctrl_bit_set(B_E);
200034e8:	2040      	movs	r0, #64	; 0x40
200034ea:	f7ff fead 	bl	20003248 <graphic_ctrl_bit_set>
	select_controller(0);
200034ee:	2000      	movs	r0, #0
200034f0:	f7ff fefe 	bl	200032f0 <select_controller>
}
200034f4:	46c0      	nop			; (mov r8, r8)
200034f6:	46bd      	mov	sp, r7
200034f8:	b002      	add	sp, #8
200034fa:	bd80      	pop	{r7, pc}
200034fc:	40021015 	andmi	r1, r2, r5, lsl r0

20003500 <graphic_write_command>:
void graphic_write_command(uint8_t command, uint8_t controller) {
20003500:	b580      	push	{r7, lr}
20003502:	b082      	sub	sp, #8
20003504:	af00      	add	r7, sp, #0
20003506:	0002      	movs	r2, r0
20003508:	1dfb      	adds	r3, r7, #7
2000350a:	701a      	strb	r2, [r3, #0]
2000350c:	1dbb      	adds	r3, r7, #6
2000350e:	1c0a      	adds	r2, r1, #0
20003510:	701a      	strb	r2, [r3, #0]
	graphic_ctrl_bit_clear(B_E);
20003512:	2040      	movs	r0, #64	; 0x40
20003514:	f7ff fec0 	bl	20003298 <graphic_ctrl_bit_clear>
	select_controller(controller);
20003518:	1dbb      	adds	r3, r7, #6
2000351a:	781b      	ldrb	r3, [r3, #0]
2000351c:	0018      	movs	r0, r3
2000351e:	f7ff fee7 	bl	200032f0 <select_controller>
	graphic_ctrl_bit_clear(B_RS);
20003522:	2001      	movs	r0, #1
20003524:	f7ff feb8 	bl	20003298 <graphic_ctrl_bit_clear>
	graphic_ctrl_bit_clear(B_RW);
20003528:	2002      	movs	r0, #2
2000352a:	f7ff feb5 	bl	20003298 <graphic_ctrl_bit_clear>
	graphic_write(command, controller);
2000352e:	1dbb      	adds	r3, r7, #6
20003530:	781a      	ldrb	r2, [r3, #0]
20003532:	1dfb      	adds	r3, r7, #7
20003534:	781b      	ldrb	r3, [r3, #0]
20003536:	0011      	movs	r1, r2
20003538:	0018      	movs	r0, r3
2000353a:	f7ff ffa2 	bl	20003482 <graphic_write>
}
2000353e:	46c0      	nop			; (mov r8, r8)
20003540:	46bd      	mov	sp, r7
20003542:	b002      	add	sp, #8
20003544:	bd80      	pop	{r7, pc}

20003546 <graphic_write_data>:
void graphic_write_data(uint8_t command, uint8_t controller) {
20003546:	b580      	push	{r7, lr}
20003548:	b082      	sub	sp, #8
2000354a:	af00      	add	r7, sp, #0
2000354c:	0002      	movs	r2, r0
2000354e:	1dfb      	adds	r3, r7, #7
20003550:	701a      	strb	r2, [r3, #0]
20003552:	1dbb      	adds	r3, r7, #6
20003554:	1c0a      	adds	r2, r1, #0
20003556:	701a      	strb	r2, [r3, #0]
	graphic_ctrl_bit_clear(B_E);
20003558:	2040      	movs	r0, #64	; 0x40
2000355a:	f7ff fe9d 	bl	20003298 <graphic_ctrl_bit_clear>
	select_controller(controller);
2000355e:	1dbb      	adds	r3, r7, #6
20003560:	781b      	ldrb	r3, [r3, #0]
20003562:	0018      	movs	r0, r3
20003564:	f7ff fec4 	bl	200032f0 <select_controller>
	graphic_ctrl_bit_set(B_RS);
20003568:	2001      	movs	r0, #1
2000356a:	f7ff fe6d 	bl	20003248 <graphic_ctrl_bit_set>
	graphic_ctrl_bit_clear(B_RW);
2000356e:	2002      	movs	r0, #2
20003570:	f7ff fe92 	bl	20003298 <graphic_ctrl_bit_clear>
	graphic_write(command, controller);
20003574:	1dbb      	adds	r3, r7, #6
20003576:	781a      	ldrb	r2, [r3, #0]
20003578:	1dfb      	adds	r3, r7, #7
2000357a:	781b      	ldrb	r3, [r3, #0]
2000357c:	0011      	movs	r1, r2
2000357e:	0018      	movs	r0, r3
20003580:	f7ff ff7f 	bl	20003482 <graphic_write>
}
20003584:	46c0      	nop			; (mov r8, r8)
20003586:	46bd      	mov	sp, r7
20003588:	b002      	add	sp, #8
2000358a:	bd80      	pop	{r7, pc}

2000358c <graphic_initialize>:

void graphic_initialize( void ) {
2000358c:	b580      	push	{r7, lr}
2000358e:	af00      	add	r7, sp, #0
	graphic_ctrl_bit_set(B_E);
20003590:	2040      	movs	r0, #64	; 0x40
20003592:	f7ff fe59 	bl	20003248 <graphic_ctrl_bit_set>
	delay_micro(10);
20003596:	200a      	movs	r0, #10
20003598:	f7ff fdf0 	bl	2000317c <delay_micro>
	
	graphic_ctrl_bit_clear(B_CS1);
2000359c:	2008      	movs	r0, #8
2000359e:	f7ff fe7b 	bl	20003298 <graphic_ctrl_bit_clear>
	graphic_ctrl_bit_clear(B_CS2);
200035a2:	2010      	movs	r0, #16
200035a4:	f7ff fe78 	bl	20003298 <graphic_ctrl_bit_clear>
	graphic_ctrl_bit_clear(B_RST);
200035a8:	2020      	movs	r0, #32
200035aa:	f7ff fe75 	bl	20003298 <graphic_ctrl_bit_clear>
	graphic_ctrl_bit_clear(B_E);
200035ae:	2040      	movs	r0, #64	; 0x40
200035b0:	f7ff fe72 	bl	20003298 <graphic_ctrl_bit_clear>
	//#define SIMULATOR
	delay_milli(30);
200035b4:	201e      	movs	r0, #30
200035b6:	f7ff fdf7 	bl	200031a8 <delay_milli>
	graphic_ctrl_bit_set(B_RST);
200035ba:	2020      	movs	r0, #32
200035bc:	f7ff fe44 	bl	20003248 <graphic_ctrl_bit_set>
	delay_milli(100); //...
200035c0:	2064      	movs	r0, #100	; 0x64
200035c2:	f7ff fdf1 	bl	200031a8 <delay_milli>
	
	graphic_write_command(LCD_OFF, B_CS1|B_CS2);
200035c6:	2118      	movs	r1, #24
200035c8:	203e      	movs	r0, #62	; 0x3e
200035ca:	f7ff ff99 	bl	20003500 <graphic_write_command>
	graphic_write_command(LCD_ON, B_CS1|B_CS2);
200035ce:	2118      	movs	r1, #24
200035d0:	203f      	movs	r0, #63	; 0x3f
200035d2:	f7ff ff95 	bl	20003500 <graphic_write_command>
	graphic_write_command(LCD_DISP_START, B_CS1|B_CS2);
200035d6:	2118      	movs	r1, #24
200035d8:	20c0      	movs	r0, #192	; 0xc0
200035da:	f7ff ff91 	bl	20003500 <graphic_write_command>
	graphic_write_command(LCD_SET_ADD, B_CS1|B_CS2);
200035de:	2118      	movs	r1, #24
200035e0:	2040      	movs	r0, #64	; 0x40
200035e2:	f7ff ff8d 	bl	20003500 <graphic_write_command>
	graphic_write_command(LCD_SET_PAGE, B_CS1|B_CS2);
200035e6:	2118      	movs	r1, #24
200035e8:	20b8      	movs	r0, #184	; 0xb8
200035ea:	f7ff ff89 	bl	20003500 <graphic_write_command>
	select_controller(0);
200035ee:	2000      	movs	r0, #0
200035f0:	f7ff fe7e 	bl	200032f0 <select_controller>
}
200035f4:	46c0      	nop			; (mov r8, r8)
200035f6:	46bd      	mov	sp, r7
200035f8:	bd80      	pop	{r7, pc}

200035fa <graphic_clear_screen>:
void graphic_clear_screen( void ) {	//Annat i slidesen
200035fa:	b580      	push	{r7, lr}
200035fc:	b082      	sub	sp, #8
200035fe:	af00      	add	r7, sp, #0
	uint8_t page;
	for (page = 0; page < 8; page++) {
20003600:	1dfb      	adds	r3, r7, #7
20003602:	2200      	movs	r2, #0
20003604:	701a      	strb	r2, [r3, #0]
20003606:	e023      	b.n	20003650 <graphic_clear_screen+0x56>
		graphic_write_command(LCD_SET_PAGE | page, B_CS1|B_CS2);
20003608:	1dfb      	adds	r3, r7, #7
2000360a:	781b      	ldrb	r3, [r3, #0]
2000360c:	2248      	movs	r2, #72	; 0x48
2000360e:	4252      	negs	r2, r2
20003610:	4313      	orrs	r3, r2
20003612:	b2db      	uxtb	r3, r3
20003614:	2118      	movs	r1, #24
20003616:	0018      	movs	r0, r3
20003618:	f7ff ff72 	bl	20003500 <graphic_write_command>
		graphic_write_command(LCD_SET_ADD | 0, B_CS1|B_CS2);
2000361c:	2118      	movs	r1, #24
2000361e:	2040      	movs	r0, #64	; 0x40
20003620:	f7ff ff6e 	bl	20003500 <graphic_write_command>
		uint8_t add;
		for (add = 0; add < 64; add++) {
20003624:	1dbb      	adds	r3, r7, #6
20003626:	2200      	movs	r2, #0
20003628:	701a      	strb	r2, [r3, #0]
2000362a:	e008      	b.n	2000363e <graphic_clear_screen+0x44>
			graphic_write_data(0, B_CS1|B_CS2);
2000362c:	2118      	movs	r1, #24
2000362e:	2000      	movs	r0, #0
20003630:	f7ff ff89 	bl	20003546 <graphic_write_data>
		for (add = 0; add < 64; add++) {
20003634:	1dbb      	adds	r3, r7, #6
20003636:	781a      	ldrb	r2, [r3, #0]
20003638:	1dbb      	adds	r3, r7, #6
2000363a:	3201      	adds	r2, #1
2000363c:	701a      	strb	r2, [r3, #0]
2000363e:	1dbb      	adds	r3, r7, #6
20003640:	781b      	ldrb	r3, [r3, #0]
20003642:	2b3f      	cmp	r3, #63	; 0x3f
20003644:	d9f2      	bls.n	2000362c <graphic_clear_screen+0x32>
	for (page = 0; page < 8; page++) {
20003646:	1dfb      	adds	r3, r7, #7
20003648:	781a      	ldrb	r2, [r3, #0]
2000364a:	1dfb      	adds	r3, r7, #7
2000364c:	3201      	adds	r2, #1
2000364e:	701a      	strb	r2, [r3, #0]
20003650:	1dfb      	adds	r3, r7, #7
20003652:	781b      	ldrb	r3, [r3, #0]
20003654:	2b07      	cmp	r3, #7
20003656:	d9d7      	bls.n	20003608 <graphic_clear_screen+0xe>
		}
	}
}
20003658:	46c0      	nop			; (mov r8, r8)
2000365a:	46bd      	mov	sp, r7
2000365c:	b002      	add	sp, #8
2000365e:	bd80      	pop	{r7, pc}

20003660 <pixel>:

/** Color: 1=light 2=gray 3=black*/
void pixel(int x, int y, int set, int color) {
20003660:	b580      	push	{r7, lr}
20003662:	b086      	sub	sp, #24
20003664:	af00      	add	r7, sp, #0
20003666:	60f8      	str	r0, [r7, #12]
20003668:	60b9      	str	r1, [r7, #8]
2000366a:	607a      	str	r2, [r7, #4]
2000366c:	603b      	str	r3, [r7, #0]
	uint8_t mask;
	int index = 0;
2000366e:	2300      	movs	r3, #0
20003670:	613b      	str	r3, [r7, #16]
	if( (x > 128 ) || (x < 1) || (y > 64) || (y < 1) ) 
20003672:	68fb      	ldr	r3, [r7, #12]
20003674:	2b80      	cmp	r3, #128	; 0x80
20003676:	dd00      	ble.n	2000367a <pixel+0x1a>
20003678:	e0a6      	b.n	200037c8 <pixel+0x168>
2000367a:	68fb      	ldr	r3, [r7, #12]
2000367c:	2b00      	cmp	r3, #0
2000367e:	dc00      	bgt.n	20003682 <pixel+0x22>
20003680:	e0a2      	b.n	200037c8 <pixel+0x168>
20003682:	68bb      	ldr	r3, [r7, #8]
20003684:	2b40      	cmp	r3, #64	; 0x40
20003686:	dd00      	ble.n	2000368a <pixel+0x2a>
20003688:	e09e      	b.n	200037c8 <pixel+0x168>
2000368a:	68bb      	ldr	r3, [r7, #8]
2000368c:	2b00      	cmp	r3, #0
2000368e:	dc00      	bgt.n	20003692 <pixel+0x32>
20003690:	e09a      	b.n	200037c8 <pixel+0x168>
		return;
	mask = 1 << ((y-1)%8);
20003692:	68bb      	ldr	r3, [r7, #8]
20003694:	3b01      	subs	r3, #1
20003696:	4a4e      	ldr	r2, [pc, #312]	; (200037d0 <pixel+0x170>)
20003698:	4013      	ands	r3, r2
2000369a:	d504      	bpl.n	200036a6 <pixel+0x46>
2000369c:	3b01      	subs	r3, #1
2000369e:	2208      	movs	r2, #8
200036a0:	4252      	negs	r2, r2
200036a2:	4313      	orrs	r3, r2
200036a4:	3301      	adds	r3, #1
200036a6:	001a      	movs	r2, r3
200036a8:	2301      	movs	r3, #1
200036aa:	4093      	lsls	r3, r2
200036ac:	001a      	movs	r2, r3
200036ae:	2317      	movs	r3, #23
200036b0:	18fb      	adds	r3, r7, r3
200036b2:	701a      	strb	r2, [r3, #0]
	if(x > 64) {
200036b4:	68fb      	ldr	r3, [r7, #12]
200036b6:	2b40      	cmp	r3, #64	; 0x40
200036b8:	dd05      	ble.n	200036c6 <pixel+0x66>
		x -= 65;
200036ba:	68fb      	ldr	r3, [r7, #12]
200036bc:	3b41      	subs	r3, #65	; 0x41
200036be:	60fb      	str	r3, [r7, #12]
		index = 512;
200036c0:	2380      	movs	r3, #128	; 0x80
200036c2:	009b      	lsls	r3, r3, #2
200036c4:	613b      	str	r3, [r7, #16]
	}
	index += x + ((y-1)/8)*64;
200036c6:	68bb      	ldr	r3, [r7, #8]
200036c8:	3b01      	subs	r3, #1
200036ca:	2b00      	cmp	r3, #0
200036cc:	da00      	bge.n	200036d0 <pixel+0x70>
200036ce:	3307      	adds	r3, #7
200036d0:	10db      	asrs	r3, r3, #3
200036d2:	019a      	lsls	r2, r3, #6
200036d4:	68fb      	ldr	r3, [r7, #12]
200036d6:	18d3      	adds	r3, r2, r3
200036d8:	693a      	ldr	r2, [r7, #16]
200036da:	18d3      	adds	r3, r2, r3
200036dc:	613b      	str	r3, [r7, #16]

	if(set == 0)
200036de:	687b      	ldr	r3, [r7, #4]
200036e0:	2b00      	cmp	r3, #0
200036e2:	d106      	bne.n	200036f2 <pixel+0x92>
		mask = ~mask;
200036e4:	2317      	movs	r3, #23
200036e6:	18fb      	adds	r3, r7, r3
200036e8:	2217      	movs	r2, #23
200036ea:	18ba      	adds	r2, r7, r2
200036ec:	7812      	ldrb	r2, [r2, #0]
200036ee:	43d2      	mvns	r2, r2
200036f0:	701a      	strb	r2, [r3, #0]

	switch (color) {
200036f2:	683b      	ldr	r3, [r7, #0]
200036f4:	2b02      	cmp	r3, #2
200036f6:	d024      	beq.n	20003742 <pixel+0xe2>
200036f8:	2b03      	cmp	r3, #3
200036fa:	d043      	beq.n	20003784 <pixel+0x124>
200036fc:	2b01      	cmp	r3, #1
200036fe:	d164      	bne.n	200037ca <pixel+0x16a>
		case 1:	
			if(set)
20003700:	687b      	ldr	r3, [r7, #4]
20003702:	2b00      	cmp	r3, #0
20003704:	d00e      	beq.n	20003724 <pixel+0xc4>
				backBufferLight[index] |= mask;
20003706:	4a33      	ldr	r2, [pc, #204]	; (200037d4 <pixel+0x174>)
20003708:	693b      	ldr	r3, [r7, #16]
2000370a:	18d3      	adds	r3, r2, r3
2000370c:	781a      	ldrb	r2, [r3, #0]
2000370e:	2317      	movs	r3, #23
20003710:	18fb      	adds	r3, r7, r3
20003712:	781b      	ldrb	r3, [r3, #0]
20003714:	4313      	orrs	r3, r2
20003716:	b2d9      	uxtb	r1, r3
20003718:	4a2e      	ldr	r2, [pc, #184]	; (200037d4 <pixel+0x174>)
2000371a:	693b      	ldr	r3, [r7, #16]
2000371c:	18d3      	adds	r3, r2, r3
2000371e:	1c0a      	adds	r2, r1, #0
20003720:	701a      	strb	r2, [r3, #0]
			else
				backBufferLight[index] &= mask;
			break;
20003722:	e052      	b.n	200037ca <pixel+0x16a>
				backBufferLight[index] &= mask;
20003724:	4a2b      	ldr	r2, [pc, #172]	; (200037d4 <pixel+0x174>)
20003726:	693b      	ldr	r3, [r7, #16]
20003728:	18d3      	adds	r3, r2, r3
2000372a:	781b      	ldrb	r3, [r3, #0]
2000372c:	2217      	movs	r2, #23
2000372e:	18ba      	adds	r2, r7, r2
20003730:	7812      	ldrb	r2, [r2, #0]
20003732:	4013      	ands	r3, r2
20003734:	b2d9      	uxtb	r1, r3
20003736:	4a27      	ldr	r2, [pc, #156]	; (200037d4 <pixel+0x174>)
20003738:	693b      	ldr	r3, [r7, #16]
2000373a:	18d3      	adds	r3, r2, r3
2000373c:	1c0a      	adds	r2, r1, #0
2000373e:	701a      	strb	r2, [r3, #0]
			break;
20003740:	e043      	b.n	200037ca <pixel+0x16a>
		
		case 2:	
			if(set)
20003742:	687b      	ldr	r3, [r7, #4]
20003744:	2b00      	cmp	r3, #0
20003746:	d00e      	beq.n	20003766 <pixel+0x106>
				backBufferGray[index] |= mask;
20003748:	4a23      	ldr	r2, [pc, #140]	; (200037d8 <pixel+0x178>)
2000374a:	693b      	ldr	r3, [r7, #16]
2000374c:	18d3      	adds	r3, r2, r3
2000374e:	781a      	ldrb	r2, [r3, #0]
20003750:	2317      	movs	r3, #23
20003752:	18fb      	adds	r3, r7, r3
20003754:	781b      	ldrb	r3, [r3, #0]
20003756:	4313      	orrs	r3, r2
20003758:	b2d9      	uxtb	r1, r3
2000375a:	4a1f      	ldr	r2, [pc, #124]	; (200037d8 <pixel+0x178>)
2000375c:	693b      	ldr	r3, [r7, #16]
2000375e:	18d3      	adds	r3, r2, r3
20003760:	1c0a      	adds	r2, r1, #0
20003762:	701a      	strb	r2, [r3, #0]
			else
				backBufferGray[index] &= mask;
			break;
20003764:	e031      	b.n	200037ca <pixel+0x16a>
				backBufferGray[index] &= mask;
20003766:	4a1c      	ldr	r2, [pc, #112]	; (200037d8 <pixel+0x178>)
20003768:	693b      	ldr	r3, [r7, #16]
2000376a:	18d3      	adds	r3, r2, r3
2000376c:	781b      	ldrb	r3, [r3, #0]
2000376e:	2217      	movs	r2, #23
20003770:	18ba      	adds	r2, r7, r2
20003772:	7812      	ldrb	r2, [r2, #0]
20003774:	4013      	ands	r3, r2
20003776:	b2d9      	uxtb	r1, r3
20003778:	4a17      	ldr	r2, [pc, #92]	; (200037d8 <pixel+0x178>)
2000377a:	693b      	ldr	r3, [r7, #16]
2000377c:	18d3      	adds	r3, r2, r3
2000377e:	1c0a      	adds	r2, r1, #0
20003780:	701a      	strb	r2, [r3, #0]
			break;
20003782:	e022      	b.n	200037ca <pixel+0x16a>
		
		case 3:	
			if(set)
20003784:	687b      	ldr	r3, [r7, #4]
20003786:	2b00      	cmp	r3, #0
20003788:	d00e      	beq.n	200037a8 <pixel+0x148>
				backBuffer[index] |= mask;
2000378a:	4a14      	ldr	r2, [pc, #80]	; (200037dc <pixel+0x17c>)
2000378c:	693b      	ldr	r3, [r7, #16]
2000378e:	18d3      	adds	r3, r2, r3
20003790:	781a      	ldrb	r2, [r3, #0]
20003792:	2317      	movs	r3, #23
20003794:	18fb      	adds	r3, r7, r3
20003796:	781b      	ldrb	r3, [r3, #0]
20003798:	4313      	orrs	r3, r2
2000379a:	b2d9      	uxtb	r1, r3
2000379c:	4a0f      	ldr	r2, [pc, #60]	; (200037dc <pixel+0x17c>)
2000379e:	693b      	ldr	r3, [r7, #16]
200037a0:	18d3      	adds	r3, r2, r3
200037a2:	1c0a      	adds	r2, r1, #0
200037a4:	701a      	strb	r2, [r3, #0]
			else
				backBuffer[index] &= mask;
			break;
200037a6:	e010      	b.n	200037ca <pixel+0x16a>
				backBuffer[index] &= mask;
200037a8:	4a0c      	ldr	r2, [pc, #48]	; (200037dc <pixel+0x17c>)
200037aa:	693b      	ldr	r3, [r7, #16]
200037ac:	18d3      	adds	r3, r2, r3
200037ae:	781b      	ldrb	r3, [r3, #0]
200037b0:	2217      	movs	r2, #23
200037b2:	18ba      	adds	r2, r7, r2
200037b4:	7812      	ldrb	r2, [r2, #0]
200037b6:	4013      	ands	r3, r2
200037b8:	b2d9      	uxtb	r1, r3
200037ba:	4a08      	ldr	r2, [pc, #32]	; (200037dc <pixel+0x17c>)
200037bc:	693b      	ldr	r3, [r7, #16]
200037be:	18d3      	adds	r3, r2, r3
200037c0:	1c0a      	adds	r2, r1, #0
200037c2:	701a      	strb	r2, [r3, #0]
			break;
200037c4:	46c0      	nop			; (mov r8, r8)
200037c6:	e000      	b.n	200037ca <pixel+0x16a>
		return;
200037c8:	46c0      	nop			; (mov r8, r8)
			
	}

}
200037ca:	46bd      	mov	sp, r7
200037cc:	b006      	add	sp, #24
200037ce:	bd80      	pop	{r7, pc}
200037d0:	80000007 	andhi	r0, r0, r7
200037d4:	200072fc 	strdcs	r7, [r0], -ip
200037d8:	20005afc 	strdcs	r5, [r0], -ip
200037dc:	200062fc 	strdcs	r6, [r0], -ip

200037e0 <fill_screen>:

void fill_screen(int pixels) {
200037e0:	b580      	push	{r7, lr}
200037e2:	b084      	sub	sp, #16
200037e4:	af00      	add	r7, sp, #0
200037e6:	6078      	str	r0, [r7, #4]
	int row, col;
	for(row = 1; row < 65; row++) {
200037e8:	2301      	movs	r3, #1
200037ea:	60fb      	str	r3, [r7, #12]
200037ec:	e017      	b.n	2000381e <fill_screen+0x3e>
		for(col = 1; col < 129; col++) {
200037ee:	2301      	movs	r3, #1
200037f0:	60bb      	str	r3, [r7, #8]
200037f2:	e00e      	b.n	20003812 <fill_screen+0x32>
			pixel(col, row, 1, 3);
200037f4:	68f9      	ldr	r1, [r7, #12]
200037f6:	68b8      	ldr	r0, [r7, #8]
200037f8:	2303      	movs	r3, #3
200037fa:	2201      	movs	r2, #1
200037fc:	f7ff ff30 	bl	20003660 <pixel>
			if(pixels <= 0)
20003800:	687b      	ldr	r3, [r7, #4]
20003802:	2b00      	cmp	r3, #0
20003804:	dd0f      	ble.n	20003826 <fill_screen+0x46>
				return;
			pixels--;
20003806:	687b      	ldr	r3, [r7, #4]
20003808:	3b01      	subs	r3, #1
2000380a:	607b      	str	r3, [r7, #4]
		for(col = 1; col < 129; col++) {
2000380c:	68bb      	ldr	r3, [r7, #8]
2000380e:	3301      	adds	r3, #1
20003810:	60bb      	str	r3, [r7, #8]
20003812:	68bb      	ldr	r3, [r7, #8]
20003814:	2b80      	cmp	r3, #128	; 0x80
20003816:	dded      	ble.n	200037f4 <fill_screen+0x14>
	for(row = 1; row < 65; row++) {
20003818:	68fb      	ldr	r3, [r7, #12]
2000381a:	3301      	adds	r3, #1
2000381c:	60fb      	str	r3, [r7, #12]
2000381e:	68fb      	ldr	r3, [r7, #12]
20003820:	2b40      	cmp	r3, #64	; 0x40
20003822:	dde4      	ble.n	200037ee <fill_screen+0xe>
20003824:	e000      	b.n	20003828 <fill_screen+0x48>
				return;
20003826:	46c0      	nop			; (mov r8, r8)
		}
	}
}
20003828:	46bd      	mov	sp, r7
2000382a:	b004      	add	sp, #16
2000382c:	bd80      	pop	{r7, pc}

2000382e <pixel2>:

void pixel2(int x, int y, int set) {
2000382e:	b580      	push	{r7, lr}
20003830:	b088      	sub	sp, #32
20003832:	af00      	add	r7, sp, #0
20003834:	60f8      	str	r0, [r7, #12]
20003836:	60b9      	str	r1, [r7, #8]
20003838:	607a      	str	r2, [r7, #4]
	uint8_t mask, c, controller;
	int index;
	if((x < 1) || (y < 1) || (x > 128) || (y > 64)) return;
2000383a:	68fb      	ldr	r3, [r7, #12]
2000383c:	2b00      	cmp	r3, #0
2000383e:	dc00      	bgt.n	20003842 <pixel2+0x14>
20003840:	e0bc      	b.n	200039bc <pixel2+0x18e>
20003842:	68bb      	ldr	r3, [r7, #8]
20003844:	2b00      	cmp	r3, #0
20003846:	dc00      	bgt.n	2000384a <pixel2+0x1c>
20003848:	e0b8      	b.n	200039bc <pixel2+0x18e>
2000384a:	68fb      	ldr	r3, [r7, #12]
2000384c:	2b80      	cmp	r3, #128	; 0x80
2000384e:	dd00      	ble.n	20003852 <pixel2+0x24>
20003850:	e0b4      	b.n	200039bc <pixel2+0x18e>
20003852:	68bb      	ldr	r3, [r7, #8]
20003854:	2b40      	cmp	r3, #64	; 0x40
20003856:	dd00      	ble.n	2000385a <pixel2+0x2c>
20003858:	e0b0      	b.n	200039bc <pixel2+0x18e>
	index = (y-1)/8;
2000385a:	68bb      	ldr	r3, [r7, #8]
2000385c:	3b01      	subs	r3, #1
2000385e:	2b00      	cmp	r3, #0
20003860:	da00      	bge.n	20003864 <pixel2+0x36>
20003862:	3307      	adds	r3, #7
20003864:	10db      	asrs	r3, r3, #3
20003866:	61bb      	str	r3, [r7, #24]
	switch( (y-1)%8 ) {
20003868:	68bb      	ldr	r3, [r7, #8]
2000386a:	3b01      	subs	r3, #1
2000386c:	4a55      	ldr	r2, [pc, #340]	; (200039c4 <pixel2+0x196>)
2000386e:	4013      	ands	r3, r2
20003870:	d504      	bpl.n	2000387c <pixel2+0x4e>
20003872:	3b01      	subs	r3, #1
20003874:	2208      	movs	r2, #8
20003876:	4252      	negs	r2, r2
20003878:	4313      	orrs	r3, r2
2000387a:	3301      	adds	r3, #1
2000387c:	2b07      	cmp	r3, #7
2000387e:	d82c      	bhi.n	200038da <pixel2+0xac>
20003880:	009a      	lsls	r2, r3, #2
20003882:	4b51      	ldr	r3, [pc, #324]	; (200039c8 <pixel2+0x19a>)
20003884:	18d3      	adds	r3, r2, r3
20003886:	681b      	ldr	r3, [r3, #0]
20003888:	469f      	mov	pc, r3
		case 0: mask = 1; break;
2000388a:	231f      	movs	r3, #31
2000388c:	18fb      	adds	r3, r7, r3
2000388e:	2201      	movs	r2, #1
20003890:	701a      	strb	r2, [r3, #0]
20003892:	e022      	b.n	200038da <pixel2+0xac>
		case 1: mask = 2; break;
20003894:	231f      	movs	r3, #31
20003896:	18fb      	adds	r3, r7, r3
20003898:	2202      	movs	r2, #2
2000389a:	701a      	strb	r2, [r3, #0]
2000389c:	e01d      	b.n	200038da <pixel2+0xac>
		case 2: mask = 4; break;
2000389e:	231f      	movs	r3, #31
200038a0:	18fb      	adds	r3, r7, r3
200038a2:	2204      	movs	r2, #4
200038a4:	701a      	strb	r2, [r3, #0]
200038a6:	e018      	b.n	200038da <pixel2+0xac>
		case 3: mask = 8; break;
200038a8:	231f      	movs	r3, #31
200038aa:	18fb      	adds	r3, r7, r3
200038ac:	2208      	movs	r2, #8
200038ae:	701a      	strb	r2, [r3, #0]
200038b0:	e013      	b.n	200038da <pixel2+0xac>
		case 4: mask = 0x10; break;
200038b2:	231f      	movs	r3, #31
200038b4:	18fb      	adds	r3, r7, r3
200038b6:	2210      	movs	r2, #16
200038b8:	701a      	strb	r2, [r3, #0]
200038ba:	e00e      	b.n	200038da <pixel2+0xac>
		case 5: mask = 0x20; break;
200038bc:	231f      	movs	r3, #31
200038be:	18fb      	adds	r3, r7, r3
200038c0:	2220      	movs	r2, #32
200038c2:	701a      	strb	r2, [r3, #0]
200038c4:	e009      	b.n	200038da <pixel2+0xac>
		case 6: mask = 0x40; break;
200038c6:	231f      	movs	r3, #31
200038c8:	18fb      	adds	r3, r7, r3
200038ca:	2240      	movs	r2, #64	; 0x40
200038cc:	701a      	strb	r2, [r3, #0]
200038ce:	e004      	b.n	200038da <pixel2+0xac>
		case 7: mask = 0x80; break;
200038d0:	231f      	movs	r3, #31
200038d2:	18fb      	adds	r3, r7, r3
200038d4:	2280      	movs	r2, #128	; 0x80
200038d6:	701a      	strb	r2, [r3, #0]
200038d8:	46c0      	nop			; (mov r8, r8)
	}
	
	if(set == 0)
200038da:	687b      	ldr	r3, [r7, #4]
200038dc:	2b00      	cmp	r3, #0
200038de:	d106      	bne.n	200038ee <pixel2+0xc0>
		mask = ~mask;
200038e0:	231f      	movs	r3, #31
200038e2:	18fb      	adds	r3, r7, r3
200038e4:	221f      	movs	r2, #31
200038e6:	18ba      	adds	r2, r7, r2
200038e8:	7812      	ldrb	r2, [r2, #0]
200038ea:	43d2      	mvns	r2, r2
200038ec:	701a      	strb	r2, [r3, #0]
	
	if(x > 64){
200038ee:	68fb      	ldr	r3, [r7, #12]
200038f0:	2b40      	cmp	r3, #64	; 0x40
200038f2:	dd07      	ble.n	20003904 <pixel2+0xd6>
		controller = B_CS2;
200038f4:	231e      	movs	r3, #30
200038f6:	18fb      	adds	r3, r7, r3
200038f8:	2210      	movs	r2, #16
200038fa:	701a      	strb	r2, [r3, #0]
		x = x - 65;
200038fc:	68fb      	ldr	r3, [r7, #12]
200038fe:	3b41      	subs	r3, #65	; 0x41
20003900:	60fb      	str	r3, [r7, #12]
20003902:	e006      	b.n	20003912 <pixel2+0xe4>
	} else {
		controller = B_CS1;
20003904:	231e      	movs	r3, #30
20003906:	18fb      	adds	r3, r7, r3
20003908:	2208      	movs	r2, #8
2000390a:	701a      	strb	r2, [r3, #0]
		x = x-1;
2000390c:	68fb      	ldr	r3, [r7, #12]
2000390e:	3b01      	subs	r3, #1
20003910:	60fb      	str	r3, [r7, #12]
	}
	graphic_write_command(LCD_SET_ADD | x, controller );
20003912:	68fb      	ldr	r3, [r7, #12]
20003914:	b25b      	sxtb	r3, r3
20003916:	2240      	movs	r2, #64	; 0x40
20003918:	4313      	orrs	r3, r2
2000391a:	b25b      	sxtb	r3, r3
2000391c:	b2da      	uxtb	r2, r3
2000391e:	231e      	movs	r3, #30
20003920:	18fb      	adds	r3, r7, r3
20003922:	781b      	ldrb	r3, [r3, #0]
20003924:	0019      	movs	r1, r3
20003926:	0010      	movs	r0, r2
20003928:	f7ff fdea 	bl	20003500 <graphic_write_command>
	graphic_write_command(LCD_SET_PAGE | index, controller );
2000392c:	69bb      	ldr	r3, [r7, #24]
2000392e:	b25b      	sxtb	r3, r3
20003930:	2248      	movs	r2, #72	; 0x48
20003932:	4252      	negs	r2, r2
20003934:	4313      	orrs	r3, r2
20003936:	b25b      	sxtb	r3, r3
20003938:	b2da      	uxtb	r2, r3
2000393a:	231e      	movs	r3, #30
2000393c:	18fb      	adds	r3, r7, r3
2000393e:	781b      	ldrb	r3, [r3, #0]
20003940:	0019      	movs	r1, r3
20003942:	0010      	movs	r0, r2
20003944:	f7ff fddc 	bl	20003500 <graphic_write_command>
	
	c = graphic_read_data(controller);
20003948:	231e      	movs	r3, #30
2000394a:	18fb      	adds	r3, r7, r3
2000394c:	781b      	ldrb	r3, [r3, #0]
2000394e:	0018      	movs	r0, r3
20003950:	f7ff fd82 	bl	20003458 <graphic_read_data>
20003954:	0002      	movs	r2, r0
20003956:	2317      	movs	r3, #23
20003958:	18fb      	adds	r3, r7, r3
2000395a:	701a      	strb	r2, [r3, #0]
	graphic_write_command(LCD_SET_ADD | x, controller);
2000395c:	68fb      	ldr	r3, [r7, #12]
2000395e:	b25b      	sxtb	r3, r3
20003960:	2240      	movs	r2, #64	; 0x40
20003962:	4313      	orrs	r3, r2
20003964:	b25b      	sxtb	r3, r3
20003966:	b2da      	uxtb	r2, r3
20003968:	231e      	movs	r3, #30
2000396a:	18fb      	adds	r3, r7, r3
2000396c:	781b      	ldrb	r3, [r3, #0]
2000396e:	0019      	movs	r1, r3
20003970:	0010      	movs	r0, r2
20003972:	f7ff fdc5 	bl	20003500 <graphic_write_command>
	
	if(set)
20003976:	687b      	ldr	r3, [r7, #4]
20003978:	2b00      	cmp	r3, #0
2000397a:	d00a      	beq.n	20003992 <pixel2+0x164>
		mask = mask | c;
2000397c:	231f      	movs	r3, #31
2000397e:	18fb      	adds	r3, r7, r3
20003980:	221f      	movs	r2, #31
20003982:	18b9      	adds	r1, r7, r2
20003984:	2217      	movs	r2, #23
20003986:	18ba      	adds	r2, r7, r2
20003988:	7809      	ldrb	r1, [r1, #0]
2000398a:	7812      	ldrb	r2, [r2, #0]
2000398c:	430a      	orrs	r2, r1
2000398e:	701a      	strb	r2, [r3, #0]
20003990:	e009      	b.n	200039a6 <pixel2+0x178>
	else
		mask = mask & c;
20003992:	231f      	movs	r3, #31
20003994:	18fb      	adds	r3, r7, r3
20003996:	221f      	movs	r2, #31
20003998:	18ba      	adds	r2, r7, r2
2000399a:	2117      	movs	r1, #23
2000399c:	1879      	adds	r1, r7, r1
2000399e:	7812      	ldrb	r2, [r2, #0]
200039a0:	7809      	ldrb	r1, [r1, #0]
200039a2:	400a      	ands	r2, r1
200039a4:	701a      	strb	r2, [r3, #0]
	
	graphic_write_data(mask, controller);
200039a6:	231e      	movs	r3, #30
200039a8:	18fb      	adds	r3, r7, r3
200039aa:	781a      	ldrb	r2, [r3, #0]
200039ac:	231f      	movs	r3, #31
200039ae:	18fb      	adds	r3, r7, r3
200039b0:	781b      	ldrb	r3, [r3, #0]
200039b2:	0011      	movs	r1, r2
200039b4:	0018      	movs	r0, r3
200039b6:	f7ff fdc6 	bl	20003546 <graphic_write_data>
200039ba:	e000      	b.n	200039be <pixel2+0x190>
	if((x < 1) || (y < 1) || (x > 128) || (y > 64)) return;
200039bc:	46c0      	nop			; (mov r8, r8)
}
200039be:	46bd      	mov	sp, r7
200039c0:	b008      	add	sp, #32
200039c2:	bd80      	pop	{r7, pc}
200039c4:	80000007 	andhi	r0, r0, r7
200039c8:	2001476c 	andcs	r4, r1, ip, ror #14

200039cc <graphic_draw_screen>:

void graphic_draw_screen(uint8_t *buffer) {
200039cc:	b580      	push	{r7, lr}
200039ce:	b086      	sub	sp, #24
200039d0:	af00      	add	r7, sp, #0
200039d2:	6078      	str	r0, [r7, #4]
	uint8_t i, j, controller, c;
	unsigned int k = 0;
200039d4:	2300      	movs	r3, #0
200039d6:	613b      	str	r3, [r7, #16]
	for(c = 0; c < 2; c++) {
200039d8:	2315      	movs	r3, #21
200039da:	18fb      	adds	r3, r7, r3
200039dc:	2200      	movs	r2, #0
200039de:	701a      	strb	r2, [r3, #0]
200039e0:	e056      	b.n	20003a90 <graphic_draw_screen+0xc4>
		controller = (c == 0) ? B_CS1 : B_CS2;
200039e2:	2315      	movs	r3, #21
200039e4:	18fb      	adds	r3, r7, r3
200039e6:	781b      	ldrb	r3, [r3, #0]
200039e8:	2b00      	cmp	r3, #0
200039ea:	d101      	bne.n	200039f0 <graphic_draw_screen+0x24>
200039ec:	2208      	movs	r2, #8
200039ee:	e000      	b.n	200039f2 <graphic_draw_screen+0x26>
200039f0:	2210      	movs	r2, #16
200039f2:	230f      	movs	r3, #15
200039f4:	18fb      	adds	r3, r7, r3
200039f6:	701a      	strb	r2, [r3, #0]
		for(j = 0; j < 8; j++) {
200039f8:	2316      	movs	r3, #22
200039fa:	18fb      	adds	r3, r7, r3
200039fc:	2200      	movs	r2, #0
200039fe:	701a      	strb	r2, [r3, #0]
20003a00:	e03a      	b.n	20003a78 <graphic_draw_screen+0xac>
			graphic_write_command(LCD_SET_PAGE | j, controller);
20003a02:	2316      	movs	r3, #22
20003a04:	18fb      	adds	r3, r7, r3
20003a06:	781b      	ldrb	r3, [r3, #0]
20003a08:	2248      	movs	r2, #72	; 0x48
20003a0a:	4252      	negs	r2, r2
20003a0c:	4313      	orrs	r3, r2
20003a0e:	b2da      	uxtb	r2, r3
20003a10:	230f      	movs	r3, #15
20003a12:	18fb      	adds	r3, r7, r3
20003a14:	781b      	ldrb	r3, [r3, #0]
20003a16:	0019      	movs	r1, r3
20003a18:	0010      	movs	r0, r2
20003a1a:	f7ff fd71 	bl	20003500 <graphic_write_command>
			graphic_write_command(LCD_SET_ADD | 0, controller);
20003a1e:	230f      	movs	r3, #15
20003a20:	18fb      	adds	r3, r7, r3
20003a22:	781b      	ldrb	r3, [r3, #0]
20003a24:	0019      	movs	r1, r3
20003a26:	2040      	movs	r0, #64	; 0x40
20003a28:	f7ff fd6a 	bl	20003500 <graphic_write_command>
			for(i = 0; i <= 63; i++, k++) {
20003a2c:	2317      	movs	r3, #23
20003a2e:	18fb      	adds	r3, r7, r3
20003a30:	2200      	movs	r2, #0
20003a32:	701a      	strb	r2, [r3, #0]
20003a34:	e014      	b.n	20003a60 <graphic_draw_screen+0x94>
				graphic_write_data(buffer[k], controller);
20003a36:	687a      	ldr	r2, [r7, #4]
20003a38:	693b      	ldr	r3, [r7, #16]
20003a3a:	18d3      	adds	r3, r2, r3
20003a3c:	781a      	ldrb	r2, [r3, #0]
20003a3e:	230f      	movs	r3, #15
20003a40:	18fb      	adds	r3, r7, r3
20003a42:	781b      	ldrb	r3, [r3, #0]
20003a44:	0019      	movs	r1, r3
20003a46:	0010      	movs	r0, r2
20003a48:	f7ff fd7d 	bl	20003546 <graphic_write_data>
			for(i = 0; i <= 63; i++, k++) {
20003a4c:	2317      	movs	r3, #23
20003a4e:	18fb      	adds	r3, r7, r3
20003a50:	781a      	ldrb	r2, [r3, #0]
20003a52:	2317      	movs	r3, #23
20003a54:	18fb      	adds	r3, r7, r3
20003a56:	3201      	adds	r2, #1
20003a58:	701a      	strb	r2, [r3, #0]
20003a5a:	693b      	ldr	r3, [r7, #16]
20003a5c:	3301      	adds	r3, #1
20003a5e:	613b      	str	r3, [r7, #16]
20003a60:	2317      	movs	r3, #23
20003a62:	18fb      	adds	r3, r7, r3
20003a64:	781b      	ldrb	r3, [r3, #0]
20003a66:	2b3f      	cmp	r3, #63	; 0x3f
20003a68:	d9e5      	bls.n	20003a36 <graphic_draw_screen+0x6a>
		for(j = 0; j < 8; j++) {
20003a6a:	2316      	movs	r3, #22
20003a6c:	18fb      	adds	r3, r7, r3
20003a6e:	781a      	ldrb	r2, [r3, #0]
20003a70:	2316      	movs	r3, #22
20003a72:	18fb      	adds	r3, r7, r3
20003a74:	3201      	adds	r2, #1
20003a76:	701a      	strb	r2, [r3, #0]
20003a78:	2316      	movs	r3, #22
20003a7a:	18fb      	adds	r3, r7, r3
20003a7c:	781b      	ldrb	r3, [r3, #0]
20003a7e:	2b07      	cmp	r3, #7
20003a80:	d9bf      	bls.n	20003a02 <graphic_draw_screen+0x36>
	for(c = 0; c < 2; c++) {
20003a82:	2315      	movs	r3, #21
20003a84:	18fb      	adds	r3, r7, r3
20003a86:	781a      	ldrb	r2, [r3, #0]
20003a88:	2315      	movs	r3, #21
20003a8a:	18fb      	adds	r3, r7, r3
20003a8c:	3201      	adds	r2, #1
20003a8e:	701a      	strb	r2, [r3, #0]
20003a90:	2315      	movs	r3, #21
20003a92:	18fb      	adds	r3, r7, r3
20003a94:	781b      	ldrb	r3, [r3, #0]
20003a96:	2b01      	cmp	r3, #1
20003a98:	d9a3      	bls.n	200039e2 <graphic_draw_screen+0x16>
			}
		}
	}
}
20003a9a:	46c0      	nop			; (mov r8, r8)
20003a9c:	46bd      	mov	sp, r7
20003a9e:	b006      	add	sp, #24
20003aa0:	bd80      	pop	{r7, pc}

20003aa2 <draw_sprite>:


void grayScaleTest( void );


void draw_sprite(sprite* s, int x, int y, int set, int color) {
20003aa2:	b5b0      	push	{r4, r5, r7, lr}
20003aa4:	b08a      	sub	sp, #40	; 0x28
20003aa6:	af00      	add	r7, sp, #0
20003aa8:	60f8      	str	r0, [r7, #12]
20003aaa:	60b9      	str	r1, [r7, #8]
20003aac:	607a      	str	r2, [r7, #4]
20003aae:	603b      	str	r3, [r7, #0]
	int i,j,k, width_in_bytes;
	if (s->width % 8 == 0)
20003ab0:	68fb      	ldr	r3, [r7, #12]
20003ab2:	681b      	ldr	r3, [r3, #0]
20003ab4:	2207      	movs	r2, #7
20003ab6:	4013      	ands	r3, r2
20003ab8:	d104      	bne.n	20003ac4 <draw_sprite+0x22>
		width_in_bytes = s->width / 8;
20003aba:	68fb      	ldr	r3, [r7, #12]
20003abc:	681b      	ldr	r3, [r3, #0]
20003abe:	08db      	lsrs	r3, r3, #3
20003ac0:	61bb      	str	r3, [r7, #24]
20003ac2:	e004      	b.n	20003ace <draw_sprite+0x2c>
	else
		width_in_bytes = (s->width / 8) + 1;
20003ac4:	68fb      	ldr	r3, [r7, #12]
20003ac6:	681b      	ldr	r3, [r3, #0]
20003ac8:	08db      	lsrs	r3, r3, #3
20003aca:	3301      	adds	r3, #1
20003acc:	61bb      	str	r3, [r7, #24]
	for (i = 0; i < s->height; i++)
20003ace:	2300      	movs	r3, #0
20003ad0:	627b      	str	r3, [r7, #36]	; 0x24
20003ad2:	e06a      	b.n	20003baa <draw_sprite+0x108>
		for (j = 0; j < width_in_bytes; j++) {
20003ad4:	2300      	movs	r3, #0
20003ad6:	623b      	str	r3, [r7, #32]
20003ad8:	e060      	b.n	20003b9c <draw_sprite+0xfa>
			unsigned char byte = s->data[i * width_in_bytes + j];
20003ada:	68fb      	ldr	r3, [r7, #12]
20003adc:	689b      	ldr	r3, [r3, #8]
20003ade:	6a7a      	ldr	r2, [r7, #36]	; 0x24
20003ae0:	69b9      	ldr	r1, [r7, #24]
20003ae2:	4351      	muls	r1, r2
20003ae4:	6a3a      	ldr	r2, [r7, #32]
20003ae6:	188a      	adds	r2, r1, r2
20003ae8:	189a      	adds	r2, r3, r2
20003aea:	2317      	movs	r3, #23
20003aec:	18fb      	adds	r3, r7, r3
20003aee:	7812      	ldrb	r2, [r2, #0]
20003af0:	701a      	strb	r2, [r3, #0]
			for (k =0; k < 8; k++) {
20003af2:	2300      	movs	r3, #0
20003af4:	61fb      	str	r3, [r7, #28]
20003af6:	e04b      	b.n	20003b90 <draw_sprite+0xee>
				if (byte & (1 << k)){
20003af8:	2317      	movs	r3, #23
20003afa:	18fb      	adds	r3, r7, r3
20003afc:	781a      	ldrb	r2, [r3, #0]
20003afe:	69fb      	ldr	r3, [r7, #28]
20003b00:	411a      	asrs	r2, r3
20003b02:	0013      	movs	r3, r2
20003b04:	2201      	movs	r2, #1
20003b06:	4013      	ands	r3, r2
20003b08:	d03f      	beq.n	20003b8a <draw_sprite+0xe8>
					pixel(8 * j + k + x + 1, i + y + 1, set, color);
20003b0a:	6a3b      	ldr	r3, [r7, #32]
20003b0c:	00da      	lsls	r2, r3, #3
20003b0e:	69fb      	ldr	r3, [r7, #28]
20003b10:	18d2      	adds	r2, r2, r3
20003b12:	68bb      	ldr	r3, [r7, #8]
20003b14:	18d3      	adds	r3, r2, r3
20003b16:	1c58      	adds	r0, r3, #1
20003b18:	6a7a      	ldr	r2, [r7, #36]	; 0x24
20003b1a:	687b      	ldr	r3, [r7, #4]
20003b1c:	18d3      	adds	r3, r2, r3
20003b1e:	1c59      	adds	r1, r3, #1
20003b20:	6bbb      	ldr	r3, [r7, #56]	; 0x38
20003b22:	683a      	ldr	r2, [r7, #0]
20003b24:	f7ff fd9c 	bl	20003660 <pixel>
					
					if(set) {	//Remove the other colors from this pixel
20003b28:	683b      	ldr	r3, [r7, #0]
20003b2a:	2b00      	cmp	r3, #0
20003b2c:	d02d      	beq.n	20003b8a <draw_sprite+0xe8>
						pixel(8 * j + k + x + 1, i + y + 1, 0, (color+1) % 3);
20003b2e:	6a3b      	ldr	r3, [r7, #32]
20003b30:	00da      	lsls	r2, r3, #3
20003b32:	69fb      	ldr	r3, [r7, #28]
20003b34:	18d2      	adds	r2, r2, r3
20003b36:	68bb      	ldr	r3, [r7, #8]
20003b38:	18d3      	adds	r3, r2, r3
20003b3a:	1c5c      	adds	r4, r3, #1
20003b3c:	6a7a      	ldr	r2, [r7, #36]	; 0x24
20003b3e:	687b      	ldr	r3, [r7, #4]
20003b40:	18d3      	adds	r3, r2, r3
20003b42:	1c5d      	adds	r5, r3, #1
20003b44:	6bbb      	ldr	r3, [r7, #56]	; 0x38
20003b46:	3301      	adds	r3, #1
20003b48:	2103      	movs	r1, #3
20003b4a:	0018      	movs	r0, r3
20003b4c:	f001 f9f4 	bl	20004f38 <__aeabi_idivmod>
20003b50:	000b      	movs	r3, r1
20003b52:	2200      	movs	r2, #0
20003b54:	0029      	movs	r1, r5
20003b56:	0020      	movs	r0, r4
20003b58:	f7ff fd82 	bl	20003660 <pixel>
						pixel(8 * j + k + x + 1, i + y + 1, 0, (color+2) % 3);
20003b5c:	6a3b      	ldr	r3, [r7, #32]
20003b5e:	00da      	lsls	r2, r3, #3
20003b60:	69fb      	ldr	r3, [r7, #28]
20003b62:	18d2      	adds	r2, r2, r3
20003b64:	68bb      	ldr	r3, [r7, #8]
20003b66:	18d3      	adds	r3, r2, r3
20003b68:	1c5c      	adds	r4, r3, #1
20003b6a:	6a7a      	ldr	r2, [r7, #36]	; 0x24
20003b6c:	687b      	ldr	r3, [r7, #4]
20003b6e:	18d3      	adds	r3, r2, r3
20003b70:	1c5d      	adds	r5, r3, #1
20003b72:	6bbb      	ldr	r3, [r7, #56]	; 0x38
20003b74:	3302      	adds	r3, #2
20003b76:	2103      	movs	r1, #3
20003b78:	0018      	movs	r0, r3
20003b7a:	f001 f9dd 	bl	20004f38 <__aeabi_idivmod>
20003b7e:	000b      	movs	r3, r1
20003b80:	2200      	movs	r2, #0
20003b82:	0029      	movs	r1, r5
20003b84:	0020      	movs	r0, r4
20003b86:	f7ff fd6b 	bl	20003660 <pixel>
			for (k =0; k < 8; k++) {
20003b8a:	69fb      	ldr	r3, [r7, #28]
20003b8c:	3301      	adds	r3, #1
20003b8e:	61fb      	str	r3, [r7, #28]
20003b90:	69fb      	ldr	r3, [r7, #28]
20003b92:	2b07      	cmp	r3, #7
20003b94:	ddb0      	ble.n	20003af8 <draw_sprite+0x56>
		for (j = 0; j < width_in_bytes; j++) {
20003b96:	6a3b      	ldr	r3, [r7, #32]
20003b98:	3301      	adds	r3, #1
20003b9a:	623b      	str	r3, [r7, #32]
20003b9c:	6a3a      	ldr	r2, [r7, #32]
20003b9e:	69bb      	ldr	r3, [r7, #24]
20003ba0:	429a      	cmp	r2, r3
20003ba2:	db9a      	blt.n	20003ada <draw_sprite+0x38>
	for (i = 0; i < s->height; i++)
20003ba4:	6a7b      	ldr	r3, [r7, #36]	; 0x24
20003ba6:	3301      	adds	r3, #1
20003ba8:	627b      	str	r3, [r7, #36]	; 0x24
20003baa:	68fb      	ldr	r3, [r7, #12]
20003bac:	685a      	ldr	r2, [r3, #4]
20003bae:	6a7b      	ldr	r3, [r7, #36]	; 0x24
20003bb0:	429a      	cmp	r2, r3
20003bb2:	d88f      	bhi.n	20003ad4 <draw_sprite+0x32>
					}
				}
			}
		}
}
20003bb4:	46c0      	nop			; (mov r8, r8)
20003bb6:	46bd      	mov	sp, r7
20003bb8:	b00a      	add	sp, #40	; 0x28
20003bba:	bdb0      	pop	{r4, r5, r7, pc}

20003bbc <fillRectangle>:

void fillRectangle( int x, int y, int width, int height ){
20003bbc:	b580      	push	{r7, lr}
20003bbe:	b086      	sub	sp, #24
20003bc0:	af00      	add	r7, sp, #0
20003bc2:	60f8      	str	r0, [r7, #12]
20003bc4:	60b9      	str	r1, [r7, #8]
20003bc6:	607a      	str	r2, [r7, #4]
20003bc8:	603b      	str	r3, [r7, #0]
	int i;
	int j;
	for (i = x; i < x + width; i++) {
20003bca:	68fb      	ldr	r3, [r7, #12]
20003bcc:	617b      	str	r3, [r7, #20]
20003bce:	e014      	b.n	20003bfa <fillRectangle+0x3e>
		for (j = y; j < y + height; j++) {
20003bd0:	68bb      	ldr	r3, [r7, #8]
20003bd2:	613b      	str	r3, [r7, #16]
20003bd4:	e008      	b.n	20003be8 <fillRectangle+0x2c>
			pixel(i, j, 1, 3);
20003bd6:	6939      	ldr	r1, [r7, #16]
20003bd8:	6978      	ldr	r0, [r7, #20]
20003bda:	2303      	movs	r3, #3
20003bdc:	2201      	movs	r2, #1
20003bde:	f7ff fd3f 	bl	20003660 <pixel>
		for (j = y; j < y + height; j++) {
20003be2:	693b      	ldr	r3, [r7, #16]
20003be4:	3301      	adds	r3, #1
20003be6:	613b      	str	r3, [r7, #16]
20003be8:	68ba      	ldr	r2, [r7, #8]
20003bea:	683b      	ldr	r3, [r7, #0]
20003bec:	18d2      	adds	r2, r2, r3
20003bee:	693b      	ldr	r3, [r7, #16]
20003bf0:	429a      	cmp	r2, r3
20003bf2:	dcf0      	bgt.n	20003bd6 <fillRectangle+0x1a>
	for (i = x; i < x + width; i++) {
20003bf4:	697b      	ldr	r3, [r7, #20]
20003bf6:	3301      	adds	r3, #1
20003bf8:	617b      	str	r3, [r7, #20]
20003bfa:	68fa      	ldr	r2, [r7, #12]
20003bfc:	687b      	ldr	r3, [r7, #4]
20003bfe:	18d2      	adds	r2, r2, r3
20003c00:	697b      	ldr	r3, [r7, #20]
20003c02:	429a      	cmp	r2, r3
20003c04:	dce4      	bgt.n	20003bd0 <fillRectangle+0x14>
		}
	}
}
20003c06:	46c0      	nop			; (mov r8, r8)
20003c08:	46bd      	mov	sp, r7
20003c0a:	b006      	add	sp, #24
20003c0c:	bd80      	pop	{r7, pc}

20003c0e <clearRectangle>:

void clearRectangle( int x, int y, int width, int height ){
20003c0e:	b580      	push	{r7, lr}
20003c10:	b086      	sub	sp, #24
20003c12:	af00      	add	r7, sp, #0
20003c14:	60f8      	str	r0, [r7, #12]
20003c16:	60b9      	str	r1, [r7, #8]
20003c18:	607a      	str	r2, [r7, #4]
20003c1a:	603b      	str	r3, [r7, #0]
	int i;
	int j;
	for (i = x; i < x + width; i++) {
20003c1c:	68fb      	ldr	r3, [r7, #12]
20003c1e:	617b      	str	r3, [r7, #20]
20003c20:	e014      	b.n	20003c4c <clearRectangle+0x3e>
		for (j = y; j < y + height; j++) {
20003c22:	68bb      	ldr	r3, [r7, #8]
20003c24:	613b      	str	r3, [r7, #16]
20003c26:	e008      	b.n	20003c3a <clearRectangle+0x2c>
			pixel(i, j, 0, 3);
20003c28:	6939      	ldr	r1, [r7, #16]
20003c2a:	6978      	ldr	r0, [r7, #20]
20003c2c:	2303      	movs	r3, #3
20003c2e:	2200      	movs	r2, #0
20003c30:	f7ff fd16 	bl	20003660 <pixel>
		for (j = y; j < y + height; j++) {
20003c34:	693b      	ldr	r3, [r7, #16]
20003c36:	3301      	adds	r3, #1
20003c38:	613b      	str	r3, [r7, #16]
20003c3a:	68ba      	ldr	r2, [r7, #8]
20003c3c:	683b      	ldr	r3, [r7, #0]
20003c3e:	18d2      	adds	r2, r2, r3
20003c40:	693b      	ldr	r3, [r7, #16]
20003c42:	429a      	cmp	r2, r3
20003c44:	dcf0      	bgt.n	20003c28 <clearRectangle+0x1a>
	for (i = x; i < x + width; i++) {
20003c46:	697b      	ldr	r3, [r7, #20]
20003c48:	3301      	adds	r3, #1
20003c4a:	617b      	str	r3, [r7, #20]
20003c4c:	68fa      	ldr	r2, [r7, #12]
20003c4e:	687b      	ldr	r3, [r7, #4]
20003c50:	18d2      	adds	r2, r2, r3
20003c52:	697b      	ldr	r3, [r7, #20]
20003c54:	429a      	cmp	r2, r3
20003c56:	dce4      	bgt.n	20003c22 <clearRectangle+0x14>
		}
	}
}
20003c58:	46c0      	nop			; (mov r8, r8)
20003c5a:	46bd      	mov	sp, r7
20003c5c:	b006      	add	sp, #24
20003c5e:	bd80      	pop	{r7, pc}

20003c60 <grayScaleTest>:


void grayScaleTest( void ) {
20003c60:	b590      	push	{r4, r7, lr}
20003c62:	b087      	sub	sp, #28
20003c64:	af00      	add	r7, sp, #0
	int x = 10;
20003c66:	230a      	movs	r3, #10
20003c68:	617b      	str	r3, [r7, #20]
	int y = 10;
20003c6a:	230a      	movs	r3, #10
20003c6c:	613b      	str	r3, [r7, #16]
	int width = 70;
20003c6e:	2346      	movs	r3, #70	; 0x46
20003c70:	60fb      	str	r3, [r7, #12]
	int height = 50;
20003c72:	2332      	movs	r3, #50	; 0x32
20003c74:	60bb      	str	r3, [r7, #8]
	
	int x2 = 50;
20003c76:	2332      	movs	r3, #50	; 0x32
20003c78:	607b      	str	r3, [r7, #4]
	
	fillRectangle(x, y, width, height);
20003c7a:	68bb      	ldr	r3, [r7, #8]
20003c7c:	68fa      	ldr	r2, [r7, #12]
20003c7e:	6939      	ldr	r1, [r7, #16]
20003c80:	6978      	ldr	r0, [r7, #20]
20003c82:	f7ff ff9b 	bl	20003bbc <fillRectangle>
	
	int i;
	int k = 5;
20003c86:	2305      	movs	r3, #5
20003c88:	603b      	str	r3, [r7, #0]
	while(1) {
		clear_backBuffer();
20003c8a:	f7ff fab9 	bl	20003200 <clear_backBuffer>
		fillRectangle(x, y, width, height);
20003c8e:	68bb      	ldr	r3, [r7, #8]
20003c90:	68fa      	ldr	r2, [r7, #12]
20003c92:	6939      	ldr	r1, [r7, #16]
20003c94:	6978      	ldr	r0, [r7, #20]
20003c96:	f7ff ff91 	bl	20003bbc <fillRectangle>
		clearRectangle(x+2+2, y+1, width-k, height-k); //outer square
20003c9a:	697b      	ldr	r3, [r7, #20]
20003c9c:	1d18      	adds	r0, r3, #4
20003c9e:	693b      	ldr	r3, [r7, #16]
20003ca0:	1c59      	adds	r1, r3, #1
20003ca2:	68fa      	ldr	r2, [r7, #12]
20003ca4:	683b      	ldr	r3, [r7, #0]
20003ca6:	1ad4      	subs	r4, r2, r3
20003ca8:	68ba      	ldr	r2, [r7, #8]
20003caa:	683b      	ldr	r3, [r7, #0]
20003cac:	1ad3      	subs	r3, r2, r3
20003cae:	0022      	movs	r2, r4
20003cb0:	f7ff ffad 	bl	20003c0e <clearRectangle>
		clearRectangle(x+2+k, y+2, width-4-k, height-4-k); //inner square
20003cb4:	697b      	ldr	r3, [r7, #20]
20003cb6:	1c9a      	adds	r2, r3, #2
20003cb8:	683b      	ldr	r3, [r7, #0]
20003cba:	18d0      	adds	r0, r2, r3
20003cbc:	693b      	ldr	r3, [r7, #16]
20003cbe:	1c99      	adds	r1, r3, #2
20003cc0:	68fb      	ldr	r3, [r7, #12]
20003cc2:	1f1a      	subs	r2, r3, #4
20003cc4:	683b      	ldr	r3, [r7, #0]
20003cc6:	1ad4      	subs	r4, r2, r3
20003cc8:	68bb      	ldr	r3, [r7, #8]
20003cca:	1f1a      	subs	r2, r3, #4
20003ccc:	683b      	ldr	r3, [r7, #0]
20003cce:	1ad3      	subs	r3, r2, r3
20003cd0:	0022      	movs	r2, r4
20003cd2:	f7ff ff9c 	bl	20003c0e <clearRectangle>
		graphic_draw_screen(draw_buffer_black);
20003cd6:	4b2d      	ldr	r3, [pc, #180]	; (20003d8c <grayScaleTest+0x12c>)
20003cd8:	0018      	movs	r0, r3
20003cda:	f7ff fe77 	bl	200039cc <graphic_draw_screen>
		clear_backBuffer();
20003cde:	f7ff fa8f 	bl	20003200 <clear_backBuffer>
		fillRectangle(x, y, width, height);
20003ce2:	68bb      	ldr	r3, [r7, #8]
20003ce4:	68fa      	ldr	r2, [r7, #12]
20003ce6:	6939      	ldr	r1, [r7, #16]
20003ce8:	6978      	ldr	r0, [r7, #20]
20003cea:	f7ff ff67 	bl	20003bbc <fillRectangle>
		
		fillRectangle(x+2+2, y+1, width-k, height-k); //outer white square
20003cee:	697b      	ldr	r3, [r7, #20]
20003cf0:	1d18      	adds	r0, r3, #4
20003cf2:	693b      	ldr	r3, [r7, #16]
20003cf4:	1c59      	adds	r1, r3, #1
20003cf6:	68fa      	ldr	r2, [r7, #12]
20003cf8:	683b      	ldr	r3, [r7, #0]
20003cfa:	1ad4      	subs	r4, r2, r3
20003cfc:	68ba      	ldr	r2, [r7, #8]
20003cfe:	683b      	ldr	r3, [r7, #0]
20003d00:	1ad3      	subs	r3, r2, r3
20003d02:	0022      	movs	r2, r4
20003d04:	f7ff ff5a 	bl	20003bbc <fillRectangle>
		fillRectangle(x+2+k, y+2, width-4-k, height-4-k); //inner square
20003d08:	697b      	ldr	r3, [r7, #20]
20003d0a:	1c9a      	adds	r2, r3, #2
20003d0c:	683b      	ldr	r3, [r7, #0]
20003d0e:	18d0      	adds	r0, r2, r3
20003d10:	693b      	ldr	r3, [r7, #16]
20003d12:	1c99      	adds	r1, r3, #2
20003d14:	68fb      	ldr	r3, [r7, #12]
20003d16:	1f1a      	subs	r2, r3, #4
20003d18:	683b      	ldr	r3, [r7, #0]
20003d1a:	1ad4      	subs	r4, r2, r3
20003d1c:	68bb      	ldr	r3, [r7, #8]
20003d1e:	1f1a      	subs	r2, r3, #4
20003d20:	683b      	ldr	r3, [r7, #0]
20003d22:	1ad3      	subs	r3, r2, r3
20003d24:	0022      	movs	r2, r4
20003d26:	f7ff ff49 	bl	20003bbc <fillRectangle>
		clearRectangle(x+12, y+5, 5, 5);
20003d2a:	697b      	ldr	r3, [r7, #20]
20003d2c:	330c      	adds	r3, #12
20003d2e:	0018      	movs	r0, r3
20003d30:	693b      	ldr	r3, [r7, #16]
20003d32:	1d59      	adds	r1, r3, #5
20003d34:	2305      	movs	r3, #5
20003d36:	2205      	movs	r2, #5
20003d38:	f7ff ff69 	bl	20003c0e <clearRectangle>
		
		graphic_draw_screen(draw_buffer_black);
20003d3c:	4b13      	ldr	r3, [pc, #76]	; (20003d8c <grayScaleTest+0x12c>)
20003d3e:	0018      	movs	r0, r3
20003d40:	f7ff fe44 	bl	200039cc <graphic_draw_screen>
		delay_milli(20);
20003d44:	2014      	movs	r0, #20
20003d46:	f7ff fa2f 	bl	200031a8 <delay_milli>
		
		clear_backBuffer();
20003d4a:	f7ff fa59 	bl	20003200 <clear_backBuffer>
		fillRectangle(x, y, width, height);
20003d4e:	68bb      	ldr	r3, [r7, #8]
20003d50:	68fa      	ldr	r2, [r7, #12]
20003d52:	6939      	ldr	r1, [r7, #16]
20003d54:	6978      	ldr	r0, [r7, #20]
20003d56:	f7ff ff31 	bl	20003bbc <fillRectangle>
		clearRectangle(x+2+k, y+2, width-4-k, height-4-k); //inner square
20003d5a:	697b      	ldr	r3, [r7, #20]
20003d5c:	1c9a      	adds	r2, r3, #2
20003d5e:	683b      	ldr	r3, [r7, #0]
20003d60:	18d0      	adds	r0, r2, r3
20003d62:	693b      	ldr	r3, [r7, #16]
20003d64:	1c99      	adds	r1, r3, #2
20003d66:	68fb      	ldr	r3, [r7, #12]
20003d68:	1f1a      	subs	r2, r3, #4
20003d6a:	683b      	ldr	r3, [r7, #0]
20003d6c:	1ad4      	subs	r4, r2, r3
20003d6e:	68bb      	ldr	r3, [r7, #8]
20003d70:	1f1a      	subs	r2, r3, #4
20003d72:	683b      	ldr	r3, [r7, #0]
20003d74:	1ad3      	subs	r3, r2, r3
20003d76:	0022      	movs	r2, r4
20003d78:	f7ff ff49 	bl	20003c0e <clearRectangle>
		graphic_draw_screen(draw_buffer_black);
20003d7c:	4b03      	ldr	r3, [pc, #12]	; (20003d8c <grayScaleTest+0x12c>)
20003d7e:	0018      	movs	r0, r3
20003d80:	f7ff fe24 	bl	200039cc <graphic_draw_screen>
		
		delay_milli(20);
20003d84:	2014      	movs	r0, #20
20003d86:	f7ff fa0f 	bl	200031a8 <delay_milli>
		clear_backBuffer();
20003d8a:	e77e      	b.n	20003c8a <grayScaleTest+0x2a>
20003d8c:	20006afc 	strdcs	r6, [r0], -ip

20003d90 <set_up_draw_buffers>:
	}
}

/** Should prepare the different drawing buffers, before the drawing of each frame.*/
void set_up_draw_buffers( void ) {
20003d90:	b580      	push	{r7, lr}
20003d92:	b082      	sub	sp, #8
20003d94:	af00      	add	r7, sp, #0
	int i;
	for(i = 0; i < 1024; i++) {
20003d96:	2300      	movs	r3, #0
20003d98:	607b      	str	r3, [r7, #4]
20003d9a:	e065      	b.n	20003e68 <set_up_draw_buffers+0xd8>
		draw_buffer_black[i] = backBuffer[i] & (~backBufferGray[i] & ~backBufferLight[i]); //Had to work a bit on these
20003d9c:	4a36      	ldr	r2, [pc, #216]	; (20003e78 <set_up_draw_buffers+0xe8>)
20003d9e:	687b      	ldr	r3, [r7, #4]
20003da0:	18d3      	adds	r3, r2, r3
20003da2:	781b      	ldrb	r3, [r3, #0]
20003da4:	b25b      	sxtb	r3, r3
20003da6:	4935      	ldr	r1, [pc, #212]	; (20003e7c <set_up_draw_buffers+0xec>)
20003da8:	687a      	ldr	r2, [r7, #4]
20003daa:	188a      	adds	r2, r1, r2
20003dac:	7811      	ldrb	r1, [r2, #0]
20003dae:	4834      	ldr	r0, [pc, #208]	; (20003e80 <set_up_draw_buffers+0xf0>)
20003db0:	687a      	ldr	r2, [r7, #4]
20003db2:	1882      	adds	r2, r0, r2
20003db4:	7812      	ldrb	r2, [r2, #0]
20003db6:	430a      	orrs	r2, r1
20003db8:	b2d2      	uxtb	r2, r2
20003dba:	b252      	sxtb	r2, r2
20003dbc:	43d2      	mvns	r2, r2
20003dbe:	b252      	sxtb	r2, r2
20003dc0:	4013      	ands	r3, r2
20003dc2:	b25b      	sxtb	r3, r3
20003dc4:	b2d9      	uxtb	r1, r3
20003dc6:	4a2f      	ldr	r2, [pc, #188]	; (20003e84 <set_up_draw_buffers+0xf4>)
20003dc8:	687b      	ldr	r3, [r7, #4]
20003dca:	18d3      	adds	r3, r2, r3
20003dcc:	1c0a      	adds	r2, r1, #0
20003dce:	701a      	strb	r2, [r3, #0]
		draw_buffer_black_gray[i] = (backBuffer[i] | backBufferGray[i]) & ~backBufferLight[i]; //in order to make it possible
20003dd0:	4a29      	ldr	r2, [pc, #164]	; (20003e78 <set_up_draw_buffers+0xe8>)
20003dd2:	687b      	ldr	r3, [r7, #4]
20003dd4:	18d3      	adds	r3, r2, r3
20003dd6:	781a      	ldrb	r2, [r3, #0]
20003dd8:	4928      	ldr	r1, [pc, #160]	; (20003e7c <set_up_draw_buffers+0xec>)
20003dda:	687b      	ldr	r3, [r7, #4]
20003ddc:	18cb      	adds	r3, r1, r3
20003dde:	781b      	ldrb	r3, [r3, #0]
20003de0:	4313      	orrs	r3, r2
20003de2:	b2db      	uxtb	r3, r3
20003de4:	b25b      	sxtb	r3, r3
20003de6:	4926      	ldr	r1, [pc, #152]	; (20003e80 <set_up_draw_buffers+0xf0>)
20003de8:	687a      	ldr	r2, [r7, #4]
20003dea:	188a      	adds	r2, r1, r2
20003dec:	7812      	ldrb	r2, [r2, #0]
20003dee:	b252      	sxtb	r2, r2
20003df0:	43d2      	mvns	r2, r2
20003df2:	b252      	sxtb	r2, r2
20003df4:	4013      	ands	r3, r2
20003df6:	b25b      	sxtb	r3, r3
20003df8:	b2d9      	uxtb	r1, r3
20003dfa:	4a23      	ldr	r2, [pc, #140]	; (20003e88 <set_up_draw_buffers+0xf8>)
20003dfc:	687b      	ldr	r3, [r7, #4]
20003dfe:	18d3      	adds	r3, r2, r3
20003e00:	1c0a      	adds	r2, r1, #0
20003e02:	701a      	strb	r2, [r3, #0]
		draw_buffer_black_light[i] = (backBuffer[i] | backBufferLight[i]) & ~backBufferGray[i]; //to show a lighter sprite
20003e04:	4a1c      	ldr	r2, [pc, #112]	; (20003e78 <set_up_draw_buffers+0xe8>)
20003e06:	687b      	ldr	r3, [r7, #4]
20003e08:	18d3      	adds	r3, r2, r3
20003e0a:	781a      	ldrb	r2, [r3, #0]
20003e0c:	491c      	ldr	r1, [pc, #112]	; (20003e80 <set_up_draw_buffers+0xf0>)
20003e0e:	687b      	ldr	r3, [r7, #4]
20003e10:	18cb      	adds	r3, r1, r3
20003e12:	781b      	ldrb	r3, [r3, #0]
20003e14:	4313      	orrs	r3, r2
20003e16:	b2db      	uxtb	r3, r3
20003e18:	b25b      	sxtb	r3, r3
20003e1a:	4918      	ldr	r1, [pc, #96]	; (20003e7c <set_up_draw_buffers+0xec>)
20003e1c:	687a      	ldr	r2, [r7, #4]
20003e1e:	188a      	adds	r2, r1, r2
20003e20:	7812      	ldrb	r2, [r2, #0]
20003e22:	b252      	sxtb	r2, r2
20003e24:	43d2      	mvns	r2, r2
20003e26:	b252      	sxtb	r2, r2
20003e28:	4013      	ands	r3, r2
20003e2a:	b25b      	sxtb	r3, r3
20003e2c:	b2d9      	uxtb	r1, r3
20003e2e:	4a17      	ldr	r2, [pc, #92]	; (20003e8c <set_up_draw_buffers+0xfc>)
20003e30:	687b      	ldr	r3, [r7, #4]
20003e32:	18d3      	adds	r3, r2, r3
20003e34:	1c0a      	adds	r2, r1, #0
20003e36:	701a      	strb	r2, [r3, #0]
		draw_buffer_black_gray_light[i] = backBuffer[i] | backBufferGray[i] | backBufferLight[i]; //on top of a darker one.
20003e38:	4a0f      	ldr	r2, [pc, #60]	; (20003e78 <set_up_draw_buffers+0xe8>)
20003e3a:	687b      	ldr	r3, [r7, #4]
20003e3c:	18d3      	adds	r3, r2, r3
20003e3e:	781a      	ldrb	r2, [r3, #0]
20003e40:	490e      	ldr	r1, [pc, #56]	; (20003e7c <set_up_draw_buffers+0xec>)
20003e42:	687b      	ldr	r3, [r7, #4]
20003e44:	18cb      	adds	r3, r1, r3
20003e46:	781b      	ldrb	r3, [r3, #0]
20003e48:	4313      	orrs	r3, r2
20003e4a:	b2da      	uxtb	r2, r3
20003e4c:	490c      	ldr	r1, [pc, #48]	; (20003e80 <set_up_draw_buffers+0xf0>)
20003e4e:	687b      	ldr	r3, [r7, #4]
20003e50:	18cb      	adds	r3, r1, r3
20003e52:	781b      	ldrb	r3, [r3, #0]
20003e54:	4313      	orrs	r3, r2
20003e56:	b2d9      	uxtb	r1, r3
20003e58:	4a0d      	ldr	r2, [pc, #52]	; (20003e90 <set_up_draw_buffers+0x100>)
20003e5a:	687b      	ldr	r3, [r7, #4]
20003e5c:	18d3      	adds	r3, r2, r3
20003e5e:	1c0a      	adds	r2, r1, #0
20003e60:	701a      	strb	r2, [r3, #0]
	for(i = 0; i < 1024; i++) {
20003e62:	687b      	ldr	r3, [r7, #4]
20003e64:	3301      	adds	r3, #1
20003e66:	607b      	str	r3, [r7, #4]
20003e68:	687b      	ldr	r3, [r7, #4]
20003e6a:	4a0a      	ldr	r2, [pc, #40]	; (20003e94 <set_up_draw_buffers+0x104>)
20003e6c:	4293      	cmp	r3, r2
20003e6e:	dd95      	ble.n	20003d9c <set_up_draw_buffers+0xc>
	}
}
20003e70:	46c0      	nop			; (mov r8, r8)
20003e72:	46bd      	mov	sp, r7
20003e74:	b002      	add	sp, #8
20003e76:	bd80      	pop	{r7, pc}
20003e78:	200062fc 	strdcs	r6, [r0], -ip
20003e7c:	20005afc 	strdcs	r5, [r0], -ip
20003e80:	200072fc 	strdcs	r7, [r0], -ip
20003e84:	20006afc 	strdcs	r6, [r0], -ip
20003e88:	20005efc 	strdcs	r5, [r0], -ip
20003e8c:	200066fc 	strdcs	r6, [r0], -ip
20003e90:	20006efc 	strdcs	r6, [r0], -ip
20003e94:	000003ff 	strdeq	r0, [r0], -pc	; <UNPREDICTABLE>

20003e98 <draw_game_object>:

void draw_game_object(GameObject *gObj) {
20003e98:	b580      	push	{r7, lr}
20003e9a:	b086      	sub	sp, #24
20003e9c:	af02      	add	r7, sp, #8
20003e9e:	6078      	str	r0, [r7, #4]
	int frame = gObj->current_frame;
20003ea0:	687b      	ldr	r3, [r7, #4]
20003ea2:	695b      	ldr	r3, [r3, #20]
20003ea4:	60fb      	str	r3, [r7, #12]
	draw_sprite(gObj->images[frame].blackImage, gObj->xPos, gObj->yPos, 1, 3);
20003ea6:	687b      	ldr	r3, [r7, #4]
20003ea8:	6819      	ldr	r1, [r3, #0]
20003eaa:	68fa      	ldr	r2, [r7, #12]
20003eac:	0013      	movs	r3, r2
20003eae:	005b      	lsls	r3, r3, #1
20003eb0:	189b      	adds	r3, r3, r2
20003eb2:	009b      	lsls	r3, r3, #2
20003eb4:	18cb      	adds	r3, r1, r3
20003eb6:	6818      	ldr	r0, [r3, #0]
20003eb8:	687b      	ldr	r3, [r7, #4]
20003eba:	6859      	ldr	r1, [r3, #4]
20003ebc:	687b      	ldr	r3, [r7, #4]
20003ebe:	689a      	ldr	r2, [r3, #8]
20003ec0:	2303      	movs	r3, #3
20003ec2:	9300      	str	r3, [sp, #0]
20003ec4:	2301      	movs	r3, #1
20003ec6:	f7ff fdec 	bl	20003aa2 <draw_sprite>
	draw_sprite(gObj->images[frame].grayImage, gObj->xPos, gObj->yPos, 1, 2);
20003eca:	687b      	ldr	r3, [r7, #4]
20003ecc:	6819      	ldr	r1, [r3, #0]
20003ece:	68fa      	ldr	r2, [r7, #12]
20003ed0:	0013      	movs	r3, r2
20003ed2:	005b      	lsls	r3, r3, #1
20003ed4:	189b      	adds	r3, r3, r2
20003ed6:	009b      	lsls	r3, r3, #2
20003ed8:	18cb      	adds	r3, r1, r3
20003eda:	6858      	ldr	r0, [r3, #4]
20003edc:	687b      	ldr	r3, [r7, #4]
20003ede:	6859      	ldr	r1, [r3, #4]
20003ee0:	687b      	ldr	r3, [r7, #4]
20003ee2:	689a      	ldr	r2, [r3, #8]
20003ee4:	2302      	movs	r3, #2
20003ee6:	9300      	str	r3, [sp, #0]
20003ee8:	2301      	movs	r3, #1
20003eea:	f7ff fdda 	bl	20003aa2 <draw_sprite>
	draw_sprite(gObj->images[frame].lightImage, gObj->xPos, gObj->yPos, 1, 1);
20003eee:	687b      	ldr	r3, [r7, #4]
20003ef0:	6819      	ldr	r1, [r3, #0]
20003ef2:	68fa      	ldr	r2, [r7, #12]
20003ef4:	0013      	movs	r3, r2
20003ef6:	005b      	lsls	r3, r3, #1
20003ef8:	189b      	adds	r3, r3, r2
20003efa:	009b      	lsls	r3, r3, #2
20003efc:	18cb      	adds	r3, r1, r3
20003efe:	6898      	ldr	r0, [r3, #8]
20003f00:	687b      	ldr	r3, [r7, #4]
20003f02:	6859      	ldr	r1, [r3, #4]
20003f04:	687b      	ldr	r3, [r7, #4]
20003f06:	689a      	ldr	r2, [r3, #8]
20003f08:	2301      	movs	r3, #1
20003f0a:	9300      	str	r3, [sp, #0]
20003f0c:	2301      	movs	r3, #1
20003f0e:	f7ff fdc8 	bl	20003aa2 <draw_sprite>
}
20003f12:	46c0      	nop			; (mov r8, r8)
20003f14:	46bd      	mov	sp, r7
20003f16:	b004      	add	sp, #16
20003f18:	bd80      	pop	{r7, pc}

20003f1a <show_frame>:


void show_frame(int frame_length) {
20003f1a:	b580      	push	{r7, lr}
20003f1c:	b082      	sub	sp, #8
20003f1e:	af00      	add	r7, sp, #0
20003f20:	6078      	str	r0, [r7, #4]
	set_up_draw_buffers();
20003f22:	f7ff ff35 	bl	20003d90 <set_up_draw_buffers>
	
	while(frame_length--) {
20003f26:	e01b      	b.n	20003f60 <show_frame+0x46>
		graphic_draw_screen(draw_buffer_black_gray_light);
20003f28:	4b13      	ldr	r3, [pc, #76]	; (20003f78 <show_frame+0x5e>)
20003f2a:	0018      	movs	r0, r3
20003f2c:	f7ff fd4e 	bl	200039cc <graphic_draw_screen>
		delay_milli(1);
20003f30:	2001      	movs	r0, #1
20003f32:	f7ff f939 	bl	200031a8 <delay_milli>
		
		graphic_draw_screen(draw_buffer_black);
20003f36:	4b11      	ldr	r3, [pc, #68]	; (20003f7c <show_frame+0x62>)
20003f38:	0018      	movs	r0, r3
20003f3a:	f7ff fd47 	bl	200039cc <graphic_draw_screen>
		delay_milli(1);
20003f3e:	2001      	movs	r0, #1
20003f40:	f7ff f932 	bl	200031a8 <delay_milli>
		
		graphic_draw_screen(draw_buffer_black_gray);
20003f44:	4b0e      	ldr	r3, [pc, #56]	; (20003f80 <show_frame+0x66>)
20003f46:	0018      	movs	r0, r3
20003f48:	f7ff fd40 	bl	200039cc <graphic_draw_screen>
		delay_milli(1);
20003f4c:	2001      	movs	r0, #1
20003f4e:	f7ff f92b 	bl	200031a8 <delay_milli>
		
		graphic_draw_screen(draw_buffer_black);
20003f52:	4b0a      	ldr	r3, [pc, #40]	; (20003f7c <show_frame+0x62>)
20003f54:	0018      	movs	r0, r3
20003f56:	f7ff fd39 	bl	200039cc <graphic_draw_screen>
		delay_milli(1);
20003f5a:	2001      	movs	r0, #1
20003f5c:	f7ff f924 	bl	200031a8 <delay_milli>
	while(frame_length--) {
20003f60:	687b      	ldr	r3, [r7, #4]
20003f62:	1e5a      	subs	r2, r3, #1
20003f64:	607a      	str	r2, [r7, #4]
20003f66:	2b00      	cmp	r3, #0
20003f68:	d1de      	bne.n	20003f28 <show_frame+0xe>
	}
	
	clear_all_backBuffers();	//Maybe we could be more effective by only clearing the necessary stuff,
20003f6a:	f7ff f955 	bl	20003218 <clear_all_backBuffers>
								//but let's keep it like this if it works.
20003f6e:	46c0      	nop			; (mov r8, r8)
20003f70:	46bd      	mov	sp, r7
20003f72:	b002      	add	sp, #8
20003f74:	bd80      	pop	{r7, pc}
20003f76:	46c0      	nop			; (mov r8, r8)
20003f78:	20006efc 	strdcs	r6, [r0], -ip
20003f7c:	20006afc 	strdcs	r6, [r0], -ip
20003f80:	20005efc 	strdcs	r5, [r0], -ip

20003f84 <load_image>:
#include "image.h"

void load_image( Image *image, sprite *blackImage, sprite *grayImage, sprite *lightImage ) {
20003f84:	b580      	push	{r7, lr}
20003f86:	b084      	sub	sp, #16
20003f88:	af00      	add	r7, sp, #0
20003f8a:	60f8      	str	r0, [r7, #12]
20003f8c:	60b9      	str	r1, [r7, #8]
20003f8e:	607a      	str	r2, [r7, #4]
20003f90:	603b      	str	r3, [r7, #0]
	image->blackImage = blackImage;
20003f92:	68fb      	ldr	r3, [r7, #12]
20003f94:	68ba      	ldr	r2, [r7, #8]
20003f96:	601a      	str	r2, [r3, #0]
	image->grayImage = grayImage;
20003f98:	68fb      	ldr	r3, [r7, #12]
20003f9a:	687a      	ldr	r2, [r7, #4]
20003f9c:	605a      	str	r2, [r3, #4]
	image->lightImage = lightImage;
20003f9e:	68fb      	ldr	r3, [r7, #12]
20003fa0:	683a      	ldr	r2, [r7, #0]
20003fa2:	609a      	str	r2, [r3, #8]
}
20003fa4:	46c0      	nop			; (mov r8, r8)
20003fa6:	46bd      	mov	sp, r7
20003fa8:	b004      	add	sp, #16
20003faa:	bd80      	pop	{r7, pc}

20003fac <load_sprite>:
#include "sprite.h"

void load_sprite(sprite* s, unsigned char* data, int width, int height)
{
20003fac:	b580      	push	{r7, lr}
20003fae:	b084      	sub	sp, #16
20003fb0:	af00      	add	r7, sp, #0
20003fb2:	60f8      	str	r0, [r7, #12]
20003fb4:	60b9      	str	r1, [r7, #8]
20003fb6:	607a      	str	r2, [r7, #4]
20003fb8:	603b      	str	r3, [r7, #0]
	s->width = width;
20003fba:	687a      	ldr	r2, [r7, #4]
20003fbc:	68fb      	ldr	r3, [r7, #12]
20003fbe:	601a      	str	r2, [r3, #0]
	s->height = height;
20003fc0:	683a      	ldr	r2, [r7, #0]
20003fc2:	68fb      	ldr	r3, [r7, #12]
20003fc4:	605a      	str	r2, [r3, #4]
	s->data = data;
20003fc6:	68fb      	ldr	r3, [r7, #12]
20003fc8:	68ba      	ldr	r2, [r7, #8]
20003fca:	609a      	str	r2, [r3, #8]
}
20003fcc:	46c0      	nop			; (mov r8, r8)
20003fce:	46bd      	mov	sp, r7
20003fd0:	b004      	add	sp, #16
20003fd2:	bd80      	pop	{r7, pc}

20003fd4 <set_up_DIL>:
#include "gpio.h"

/** Sets up PE0-7 as inports and PE8-15 as outports. */
void set_up_DIL( void ) {
20003fd4:	b580      	push	{r7, lr}
20003fd6:	af00      	add	r7, sp, #0
	GPIO_D.Moder = 0x55550000;
20003fd8:	4b02      	ldr	r3, [pc, #8]	; (20003fe4 <set_up_DIL+0x10>)
20003fda:	4a03      	ldr	r2, [pc, #12]	; (20003fe8 <set_up_DIL+0x14>)
20003fdc:	601a      	str	r2, [r3, #0]
}
20003fde:	46c0      	nop			; (mov r8, r8)
20003fe0:	46bd      	mov	sp, r7
20003fe2:	bd80      	pop	{r7, pc}
20003fe4:	40020c00 	andmi	r0, r2, r0, lsl #24
20003fe8:	55550000 	ldrbpl	r0, [r5, #-0]

20003fec <read_DIL>:

char read_DIL( void ) {
20003fec:	b580      	push	{r7, lr}
20003fee:	af00      	add	r7, sp, #0
	GPIO_D.odrHigh = GPIO_D.idrLow; //Show on bargraph
20003ff0:	4b05      	ldr	r3, [pc, #20]	; (20004008 <read_DIL+0x1c>)
20003ff2:	4a05      	ldr	r2, [pc, #20]	; (20004008 <read_DIL+0x1c>)
20003ff4:	7c12      	ldrb	r2, [r2, #16]
20003ff6:	b2d2      	uxtb	r2, r2
20003ff8:	755a      	strb	r2, [r3, #21]
	return GPIO_D.idrLow;
20003ffa:	4b03      	ldr	r3, [pc, #12]	; (20004008 <read_DIL+0x1c>)
20003ffc:	7c1b      	ldrb	r3, [r3, #16]
20003ffe:	b2db      	uxtb	r3, r3
}
20004000:	0018      	movs	r0, r3
20004002:	46bd      	mov	sp, r7
20004004:	bd80      	pop	{r7, pc}
20004006:	46c0      	nop			; (mov r8, r8)
20004008:	40020c00 	andmi	r0, r2, r0, lsl #24

2000400c <read_DIL_single>:


int read_DIL_single( int bit ) {
2000400c:	b590      	push	{r4, r7, lr}
2000400e:	b085      	sub	sp, #20
20004010:	af00      	add	r7, sp, #0
20004012:	6078      	str	r0, [r7, #4]
	char DIL = read_DIL();
20004014:	230f      	movs	r3, #15
20004016:	18fc      	adds	r4, r7, r3
20004018:	f7ff ffe8 	bl	20003fec <read_DIL>
2000401c:	0003      	movs	r3, r0
2000401e:	7023      	strb	r3, [r4, #0]
	if (DIL & (1<<bit)) {
20004020:	230f      	movs	r3, #15
20004022:	18fb      	adds	r3, r7, r3
20004024:	781a      	ldrb	r2, [r3, #0]
20004026:	687b      	ldr	r3, [r7, #4]
20004028:	411a      	asrs	r2, r3
2000402a:	0013      	movs	r3, r2
2000402c:	2201      	movs	r2, #1
2000402e:	4013      	ands	r3, r2
20004030:	d001      	beq.n	20004036 <read_DIL_single+0x2a>
		return 1;
20004032:	2301      	movs	r3, #1
20004034:	e000      	b.n	20004038 <read_DIL_single+0x2c>
	} else {
		return 0;
20004036:	2300      	movs	r3, #0
	}
20004038:	0018      	movs	r0, r3
2000403a:	46bd      	mov	sp, r7
2000403c:	b005      	add	sp, #20
2000403e:	bd90      	pop	{r4, r7, pc}

20004040 <ascii_ctrl_bit_set>:
void ascii_write_data(unsigned char data);
unsigned char ascii_read_status(void);
unsigned char ascii_read_data(void);


void ascii_ctrl_bit_set(unsigned char x){
20004040:	b580      	push	{r7, lr}
20004042:	b084      	sub	sp, #16
20004044:	af00      	add	r7, sp, #0
20004046:	0002      	movs	r2, r0
20004048:	1dfb      	adds	r3, r7, #7
2000404a:	701a      	strb	r2, [r3, #0]
//adressera ASCii-displayen och ettstÃƒÂ¤ll de bitar som ÃƒÂ¤r 1 i x
	unsigned char c;
	c = *portOdrLow;
2000404c:	4a0c      	ldr	r2, [pc, #48]	; (20004080 <ascii_ctrl_bit_set+0x40>)
2000404e:	230f      	movs	r3, #15
20004050:	18fb      	adds	r3, r7, r3
20004052:	7812      	ldrb	r2, [r2, #0]
20004054:	701a      	strb	r2, [r3, #0]
	c |= (B_SELECT | x);
20004056:	1dfa      	adds	r2, r7, #7
20004058:	230f      	movs	r3, #15
2000405a:	18fb      	adds	r3, r7, r3
2000405c:	7812      	ldrb	r2, [r2, #0]
2000405e:	781b      	ldrb	r3, [r3, #0]
20004060:	4313      	orrs	r3, r2
20004062:	b2da      	uxtb	r2, r3
20004064:	230f      	movs	r3, #15
20004066:	18fb      	adds	r3, r7, r3
20004068:	2104      	movs	r1, #4
2000406a:	430a      	orrs	r2, r1
2000406c:	701a      	strb	r2, [r3, #0]
	*portOdrLow = c;
2000406e:	4a04      	ldr	r2, [pc, #16]	; (20004080 <ascii_ctrl_bit_set+0x40>)
20004070:	230f      	movs	r3, #15
20004072:	18fb      	adds	r3, r7, r3
20004074:	781b      	ldrb	r3, [r3, #0]
20004076:	7013      	strb	r3, [r2, #0]
}
20004078:	46c0      	nop			; (mov r8, r8)
2000407a:	46bd      	mov	sp, r7
2000407c:	b004      	add	sp, #16
2000407e:	bd80      	pop	{r7, pc}
20004080:	40021014 	andmi	r1, r2, r4, lsl r0

20004084 <ascii_ctrl_bit_clear>:

void ascii_ctrl_bit_clear(unsigned char x){
20004084:	b580      	push	{r7, lr}
20004086:	b084      	sub	sp, #16
20004088:	af00      	add	r7, sp, #0
2000408a:	0002      	movs	r2, r0
2000408c:	1dfb      	adds	r3, r7, #7
2000408e:	701a      	strb	r2, [r3, #0]
//adressera ASCii-displayen och nollstÃ¤ll de bitar som Ã¤r 1 i x
	unsigned char c;
	c = *portOdrLow;
20004090:	4a0f      	ldr	r2, [pc, #60]	; (200040d0 <ascii_ctrl_bit_clear+0x4c>)
20004092:	230f      	movs	r3, #15
20004094:	18fb      	adds	r3, r7, r3
20004096:	7812      	ldrb	r2, [r2, #0]
20004098:	701a      	strb	r2, [r3, #0]
	c = (B_SELECT | c & ~x);
2000409a:	1dfb      	adds	r3, r7, #7
2000409c:	781b      	ldrb	r3, [r3, #0]
2000409e:	b25b      	sxtb	r3, r3
200040a0:	43db      	mvns	r3, r3
200040a2:	b25b      	sxtb	r3, r3
200040a4:	220f      	movs	r2, #15
200040a6:	18ba      	adds	r2, r7, r2
200040a8:	7812      	ldrb	r2, [r2, #0]
200040aa:	b252      	sxtb	r2, r2
200040ac:	4013      	ands	r3, r2
200040ae:	b25b      	sxtb	r3, r3
200040b0:	2204      	movs	r2, #4
200040b2:	4313      	orrs	r3, r2
200040b4:	b25a      	sxtb	r2, r3
200040b6:	230f      	movs	r3, #15
200040b8:	18fb      	adds	r3, r7, r3
200040ba:	701a      	strb	r2, [r3, #0]
	*portOdrLow = c;
200040bc:	4a04      	ldr	r2, [pc, #16]	; (200040d0 <ascii_ctrl_bit_clear+0x4c>)
200040be:	230f      	movs	r3, #15
200040c0:	18fb      	adds	r3, r7, r3
200040c2:	781b      	ldrb	r3, [r3, #0]
200040c4:	7013      	strb	r3, [r2, #0]
}
200040c6:	46c0      	nop			; (mov r8, r8)
200040c8:	46bd      	mov	sp, r7
200040ca:	b004      	add	sp, #16
200040cc:	bd80      	pop	{r7, pc}
200040ce:	46c0      	nop			; (mov r8, r8)
200040d0:	40021014 	andmi	r1, r2, r4, lsl r0

200040d4 <ascii_write_cmd>:

void ascii_write_cmd(unsigned char command){
200040d4:	b580      	push	{r7, lr}
200040d6:	b082      	sub	sp, #8
200040d8:	af00      	add	r7, sp, #0
200040da:	0002      	movs	r2, r0
200040dc:	1dfb      	adds	r3, r7, #7
200040de:	701a      	strb	r2, [r3, #0]
	ascii_ctrl_bit_clear(B_RS);
200040e0:	2001      	movs	r0, #1
200040e2:	f7ff ffcf 	bl	20004084 <ascii_ctrl_bit_clear>
	ascii_ctrl_bit_clear(B_RW);
200040e6:	2002      	movs	r0, #2
200040e8:	f7ff ffcc 	bl	20004084 <ascii_ctrl_bit_clear>
	ascii_write_controller(command);
200040ec:	1dfb      	adds	r3, r7, #7
200040ee:	781b      	ldrb	r3, [r3, #0]
200040f0:	0018      	movs	r0, r3
200040f2:	f000 f86d 	bl	200041d0 <ascii_write_controller>
}
200040f6:	46c0      	nop			; (mov r8, r8)
200040f8:	46bd      	mov	sp, r7
200040fa:	b002      	add	sp, #8
200040fc:	bd80      	pop	{r7, pc}

200040fe <ascii_write_data>:

void ascii_write_data(unsigned char data){
200040fe:	b580      	push	{r7, lr}
20004100:	b082      	sub	sp, #8
20004102:	af00      	add	r7, sp, #0
20004104:	0002      	movs	r2, r0
20004106:	1dfb      	adds	r3, r7, #7
20004108:	701a      	strb	r2, [r3, #0]
	ascii_ctrl_bit_set(B_RS);
2000410a:	2001      	movs	r0, #1
2000410c:	f7ff ff98 	bl	20004040 <ascii_ctrl_bit_set>
	ascii_ctrl_bit_clear(B_RW);
20004110:	2002      	movs	r0, #2
20004112:	f7ff ffb7 	bl	20004084 <ascii_ctrl_bit_clear>
	ascii_write_controller(data);
20004116:	1dfb      	adds	r3, r7, #7
20004118:	781b      	ldrb	r3, [r3, #0]
2000411a:	0018      	movs	r0, r3
2000411c:	f000 f858 	bl	200041d0 <ascii_write_controller>
}
20004120:	46c0      	nop			; (mov r8, r8)
20004122:	46bd      	mov	sp, r7
20004124:	b002      	add	sp, #8
20004126:	bd80      	pop	{r7, pc}

20004128 <ascii_read_status>:

unsigned char ascii_read_status(void){
20004128:	b590      	push	{r4, r7, lr}
2000412a:	b083      	sub	sp, #12
2000412c:	af00      	add	r7, sp, #0
	//sÃƒÂ¤tt Port E bit15-8 som ingÃƒÂ¥ngar
	*portModer &= 0x0000FFFF;
2000412e:	4b11      	ldr	r3, [pc, #68]	; (20004174 <ascii_read_status+0x4c>)
20004130:	4a10      	ldr	r2, [pc, #64]	; (20004174 <ascii_read_status+0x4c>)
20004132:	6812      	ldr	r2, [r2, #0]
20004134:	0412      	lsls	r2, r2, #16
20004136:	0c12      	lsrs	r2, r2, #16
20004138:	601a      	str	r2, [r3, #0]
	ascii_ctrl_bit_clear(B_RS);
2000413a:	2001      	movs	r0, #1
2000413c:	f7ff ffa2 	bl	20004084 <ascii_ctrl_bit_clear>
	ascii_ctrl_bit_set(B_RW);
20004140:	2002      	movs	r0, #2
20004142:	f7ff ff7d 	bl	20004040 <ascii_ctrl_bit_set>
	unsigned char rv = ascii_read_controller();
20004146:	1dfc      	adds	r4, r7, #7
20004148:	f000 f85a 	bl	20004200 <ascii_read_controller>
2000414c:	0003      	movs	r3, r0
2000414e:	7023      	strb	r3, [r4, #0]
	//sÃƒÂ¤tt Port E bit15-8 som utgÃƒÂ¥ngar
	*portModer &= 0x0000FFFF;
20004150:	4b08      	ldr	r3, [pc, #32]	; (20004174 <ascii_read_status+0x4c>)
20004152:	4a08      	ldr	r2, [pc, #32]	; (20004174 <ascii_read_status+0x4c>)
20004154:	6812      	ldr	r2, [r2, #0]
20004156:	0412      	lsls	r2, r2, #16
20004158:	0c12      	lsrs	r2, r2, #16
2000415a:	601a      	str	r2, [r3, #0]
	*portModer |= 0x55550000;
2000415c:	4b05      	ldr	r3, [pc, #20]	; (20004174 <ascii_read_status+0x4c>)
2000415e:	4a05      	ldr	r2, [pc, #20]	; (20004174 <ascii_read_status+0x4c>)
20004160:	6812      	ldr	r2, [r2, #0]
20004162:	4905      	ldr	r1, [pc, #20]	; (20004178 <ascii_read_status+0x50>)
20004164:	430a      	orrs	r2, r1
20004166:	601a      	str	r2, [r3, #0]
	return rv;
20004168:	1dfb      	adds	r3, r7, #7
2000416a:	781b      	ldrb	r3, [r3, #0]
}
2000416c:	0018      	movs	r0, r3
2000416e:	46bd      	mov	sp, r7
20004170:	b003      	add	sp, #12
20004172:	bd90      	pop	{r4, r7, pc}
20004174:	40021000 	andmi	r1, r2, r0
20004178:	55550000 	ldrbpl	r0, [r5, #-0]

2000417c <ascii_read_data>:

unsigned char ascii_read_data(void){
2000417c:	b590      	push	{r4, r7, lr}
2000417e:	b083      	sub	sp, #12
20004180:	af00      	add	r7, sp, #0
	//sÃƒÂ¤tt Port E bit15-8 som ingÃƒÂ¥ngar
	*portModer &= 0x0000FFFF;
20004182:	4b11      	ldr	r3, [pc, #68]	; (200041c8 <ascii_read_data+0x4c>)
20004184:	4a10      	ldr	r2, [pc, #64]	; (200041c8 <ascii_read_data+0x4c>)
20004186:	6812      	ldr	r2, [r2, #0]
20004188:	0412      	lsls	r2, r2, #16
2000418a:	0c12      	lsrs	r2, r2, #16
2000418c:	601a      	str	r2, [r3, #0]
	ascii_ctrl_bit_set(B_RS);
2000418e:	2001      	movs	r0, #1
20004190:	f7ff ff56 	bl	20004040 <ascii_ctrl_bit_set>
	ascii_ctrl_bit_set(B_RW);
20004194:	2002      	movs	r0, #2
20004196:	f7ff ff53 	bl	20004040 <ascii_ctrl_bit_set>
	unsigned char rv = ascii_read_controller();
2000419a:	1dfc      	adds	r4, r7, #7
2000419c:	f000 f830 	bl	20004200 <ascii_read_controller>
200041a0:	0003      	movs	r3, r0
200041a2:	7023      	strb	r3, [r4, #0]
	//sÃƒÂ¤tt Port E bit15-8 som utgÃƒÂ¥ngar
	*portModer &= 0x0000FFFF;
200041a4:	4b08      	ldr	r3, [pc, #32]	; (200041c8 <ascii_read_data+0x4c>)
200041a6:	4a08      	ldr	r2, [pc, #32]	; (200041c8 <ascii_read_data+0x4c>)
200041a8:	6812      	ldr	r2, [r2, #0]
200041aa:	0412      	lsls	r2, r2, #16
200041ac:	0c12      	lsrs	r2, r2, #16
200041ae:	601a      	str	r2, [r3, #0]
	*portModer |= 0x55550000;
200041b0:	4b05      	ldr	r3, [pc, #20]	; (200041c8 <ascii_read_data+0x4c>)
200041b2:	4a05      	ldr	r2, [pc, #20]	; (200041c8 <ascii_read_data+0x4c>)
200041b4:	6812      	ldr	r2, [r2, #0]
200041b6:	4905      	ldr	r1, [pc, #20]	; (200041cc <ascii_read_data+0x50>)
200041b8:	430a      	orrs	r2, r1
200041ba:	601a      	str	r2, [r3, #0]
	return rv;
200041bc:	1dfb      	adds	r3, r7, #7
200041be:	781b      	ldrb	r3, [r3, #0]
}
200041c0:	0018      	movs	r0, r3
200041c2:	46bd      	mov	sp, r7
200041c4:	b003      	add	sp, #12
200041c6:	bd90      	pop	{r4, r7, pc}
200041c8:	40021000 	andmi	r1, r2, r0
200041cc:	55550000 	ldrbpl	r0, [r5, #-0]

200041d0 <ascii_write_controller>:

void ascii_write_controller(unsigned char c){
200041d0:	b580      	push	{r7, lr}
200041d2:	b082      	sub	sp, #8
200041d4:	af00      	add	r7, sp, #0
200041d6:	0002      	movs	r2, r0
200041d8:	1dfb      	adds	r3, r7, #7
200041da:	701a      	strb	r2, [r3, #0]
	ascii_ctrl_bit_set(B_E);
200041dc:	2040      	movs	r0, #64	; 0x40
200041de:	f7ff ff2f 	bl	20004040 <ascii_ctrl_bit_set>
	*portOdrHigh = c;
200041e2:	4a06      	ldr	r2, [pc, #24]	; (200041fc <ascii_write_controller+0x2c>)
200041e4:	1dfb      	adds	r3, r7, #7
200041e6:	781b      	ldrb	r3, [r3, #0]
200041e8:	7013      	strb	r3, [r2, #0]
	delay_250ns();
200041ea:	f7fe ff83 	bl	200030f4 <delay_250ns>
	ascii_ctrl_bit_clear(B_E);
200041ee:	2040      	movs	r0, #64	; 0x40
200041f0:	f7ff ff48 	bl	20004084 <ascii_ctrl_bit_clear>
}
200041f4:	46c0      	nop			; (mov r8, r8)
200041f6:	46bd      	mov	sp, r7
200041f8:	b002      	add	sp, #8
200041fa:	bd80      	pop	{r7, pc}
200041fc:	40021015 	andmi	r1, r2, r5, lsl r0

20004200 <ascii_read_controller>:

unsigned char ascii_read_controller(void){
20004200:	b580      	push	{r7, lr}
20004202:	b082      	sub	sp, #8
20004204:	af00      	add	r7, sp, #0
	unsigned char c;
	ascii_ctrl_bit_set(B_E);
20004206:	2040      	movs	r0, #64	; 0x40
20004208:	f7ff ff1a 	bl	20004040 <ascii_ctrl_bit_set>
	delay_250ns();
2000420c:	f7fe ff72 	bl	200030f4 <delay_250ns>
	delay_250ns();
20004210:	f7fe ff70 	bl	200030f4 <delay_250ns>
	c = *portIdrHigh;
20004214:	4a06      	ldr	r2, [pc, #24]	; (20004230 <ascii_read_controller+0x30>)
20004216:	1dfb      	adds	r3, r7, #7
20004218:	7812      	ldrb	r2, [r2, #0]
2000421a:	701a      	strb	r2, [r3, #0]
	ascii_ctrl_bit_clear(B_E);
2000421c:	2040      	movs	r0, #64	; 0x40
2000421e:	f7ff ff31 	bl	20004084 <ascii_ctrl_bit_clear>
	return c;
20004222:	1dfb      	adds	r3, r7, #7
20004224:	781b      	ldrb	r3, [r3, #0]
}
20004226:	0018      	movs	r0, r3
20004228:	46bd      	mov	sp, r7
2000422a:	b002      	add	sp, #8
2000422c:	bd80      	pop	{r7, pc}
2000422e:	46c0      	nop			; (mov r8, r8)
20004230:	40021011 	andmi	r1, r2, r1, lsl r0

20004234 <ascii_write_char>:

void ascii_write_char(unsigned char c){
20004234:	b580      	push	{r7, lr}
20004236:	b082      	sub	sp, #8
20004238:	af00      	add	r7, sp, #0
2000423a:	0002      	movs	r2, r0
2000423c:	1dfb      	adds	r3, r7, #7
2000423e:	701a      	strb	r2, [r3, #0]
		while((ascii_read_status() & 0x80) == 0x80){} //VÃƒÂ¤nta tills displayed ÃƒÂ¤r redo
20004240:	46c0      	nop			; (mov r8, r8)
20004242:	f7ff ff71 	bl	20004128 <ascii_read_status>
20004246:	0003      	movs	r3, r0
20004248:	001a      	movs	r2, r3
2000424a:	2380      	movs	r3, #128	; 0x80
2000424c:	4013      	ands	r3, r2
2000424e:	2b80      	cmp	r3, #128	; 0x80
20004250:	d0f7      	beq.n	20004242 <ascii_write_char+0xe>
		delay_micro(8); //latenstid
20004252:	2008      	movs	r0, #8
20004254:	f7fe ff92 	bl	2000317c <delay_micro>
		ascii_write_data(c);
20004258:	1dfb      	adds	r3, r7, #7
2000425a:	781b      	ldrb	r3, [r3, #0]
2000425c:	0018      	movs	r0, r3
2000425e:	f7ff ff4e 	bl	200040fe <ascii_write_data>
		delay_micro(50); //istÃƒÂ¤llet fÃƒÂ¶r 43us
20004262:	2032      	movs	r0, #50	; 0x32
20004264:	f7fe ff8a 	bl	2000317c <delay_micro>
}
20004268:	46c0      	nop			; (mov r8, r8)
2000426a:	46bd      	mov	sp, r7
2000426c:	b002      	add	sp, #8
2000426e:	bd80      	pop	{r7, pc}

20004270 <ascii_goToXY>:

void ascii_goToXY(unsigned char row, unsigned char column){
20004270:	b580      	push	{r7, lr}
20004272:	b084      	sub	sp, #16
20004274:	af00      	add	r7, sp, #0
20004276:	0002      	movs	r2, r0
20004278:	1dfb      	adds	r3, r7, #7
2000427a:	701a      	strb	r2, [r3, #0]
2000427c:	1dbb      	adds	r3, r7, #6
2000427e:	1c0a      	adds	r2, r1, #0
20004280:	701a      	strb	r2, [r3, #0]
	unsigned char address = row-1;
20004282:	230f      	movs	r3, #15
20004284:	18fb      	adds	r3, r7, r3
20004286:	1dfa      	adds	r2, r7, #7
20004288:	7812      	ldrb	r2, [r2, #0]
2000428a:	3a01      	subs	r2, #1
2000428c:	701a      	strb	r2, [r3, #0]
	if(column == 2){
2000428e:	1dbb      	adds	r3, r7, #6
20004290:	781b      	ldrb	r3, [r3, #0]
20004292:	2b02      	cmp	r3, #2
20004294:	d106      	bne.n	200042a4 <ascii_goToXY+0x34>
		address += 0x40;
20004296:	230f      	movs	r3, #15
20004298:	18fb      	adds	r3, r7, r3
2000429a:	220f      	movs	r2, #15
2000429c:	18ba      	adds	r2, r7, r2
2000429e:	7812      	ldrb	r2, [r2, #0]
200042a0:	3240      	adds	r2, #64	; 0x40
200042a2:	701a      	strb	r2, [r3, #0]
	}
	ascii_write_cmd(0x80 | address);
200042a4:	230f      	movs	r3, #15
200042a6:	18fb      	adds	r3, r7, r3
200042a8:	781b      	ldrb	r3, [r3, #0]
200042aa:	2280      	movs	r2, #128	; 0x80
200042ac:	4252      	negs	r2, r2
200042ae:	4313      	orrs	r3, r2
200042b0:	b2db      	uxtb	r3, r3
200042b2:	0018      	movs	r0, r3
200042b4:	f7ff ff0e 	bl	200040d4 <ascii_write_cmd>
}
200042b8:	46c0      	nop			; (mov r8, r8)
200042ba:	46bd      	mov	sp, r7
200042bc:	b004      	add	sp, #16
200042be:	bd80      	pop	{r7, pc}

200042c0 <ascii_init>:

void ascii_init(void){
200042c0:	b580      	push	{r7, lr}
200042c2:	af00      	add	r7, sp, #0
	//initiera displayen:
		while((ascii_read_status() & 0x80) == 0x80){} //VÃ¤nta tills displayed Ã¤r redo
200042c4:	46c0      	nop			; (mov r8, r8)
200042c6:	f7ff ff2f 	bl	20004128 <ascii_read_status>
200042ca:	0003      	movs	r3, r0
200042cc:	001a      	movs	r2, r3
200042ce:	2380      	movs	r3, #128	; 0x80
200042d0:	4013      	ands	r3, r2
200042d2:	2b80      	cmp	r3, #128	; 0x80
200042d4:	d0f7      	beq.n	200042c6 <ascii_init+0x6>
		delay_micro(20); //latenstid 
200042d6:	2014      	movs	r0, #20
200042d8:	f7fe ff50 	bl	2000317c <delay_micro>
		ascii_write_cmd(0x38); //Function set (39us), 000011NFXX, N = antal rader = 2, F = -->0=5x8<--, 1=5x11
200042dc:	2038      	movs	r0, #56	; 0x38
200042de:	f7ff fef9 	bl	200040d4 <ascii_write_cmd>
		delay_micro(100); //istÃƒÂ¤llet fÃƒÂ¶r 39us
200042e2:	2064      	movs	r0, #100	; 0x64
200042e4:	f7fe ff4a 	bl	2000317c <delay_micro>
		
	// clear display
		while((ascii_read_status() & 0x80) == 0x80){} //VÃƒÂ¤nta tills displayed ÃƒÂ¤r redo
200042e8:	46c0      	nop			; (mov r8, r8)
200042ea:	f7ff ff1d 	bl	20004128 <ascii_read_status>
200042ee:	0003      	movs	r3, r0
200042f0:	001a      	movs	r2, r3
200042f2:	2380      	movs	r3, #128	; 0x80
200042f4:	4013      	ands	r3, r2
200042f6:	2b80      	cmp	r3, #128	; 0x80
200042f8:	d0f7      	beq.n	200042ea <ascii_init+0x2a>
		delay_micro(20); //latenstid
200042fa:	2014      	movs	r0, #20
200042fc:	f7fe ff3e 	bl	2000317c <delay_micro>
		ascii_write_cmd(0x01); 
20004300:	2001      	movs	r0, #1
20004302:	f7ff fee7 	bl	200040d4 <ascii_write_cmd>
		delay_micro(100); //istÃƒÂ¤llet fÃƒÂ¶r 39us
20004306:	2064      	movs	r0, #100	; 0x64
20004308:	f7fe ff38 	bl	2000317c <delay_micro>

	//display control:
		while((ascii_read_status() & 0x80) == 0x80){} //VÃƒÂ¤nta tills displayed ÃƒÂ¤r redo
2000430c:	46c0      	nop			; (mov r8, r8)
2000430e:	f7ff ff0b 	bl	20004128 <ascii_read_status>
20004312:	0003      	movs	r3, r0
20004314:	001a      	movs	r2, r3
20004316:	2380      	movs	r3, #128	; 0x80
20004318:	4013      	ands	r3, r2
2000431a:	2b80      	cmp	r3, #128	; 0x80
2000431c:	d0f7      	beq.n	2000430e <ascii_init+0x4e>
		delay_micro(20); //latenstid
2000431e:	2014      	movs	r0, #20
20004320:	f7fe ff2c 	bl	2000317c <delay_micro>
		ascii_write_cmd(0x0C); //000001 + XXX. X:ena = 0:av / 1:pÃƒÂ¥ -  SkÃƒÂ¤rm/MarkÃƒÂ¶r/BlinkaMarkÃƒÂ¶ren
20004324:	200c      	movs	r0, #12
20004326:	f7ff fed5 	bl	200040d4 <ascii_write_cmd>
		delay_micro(100); //istÃƒÂ¤llet fÃƒÂ¶r 39us
2000432a:	2064      	movs	r0, #100	; 0x64
2000432c:	f7fe ff26 	bl	2000317c <delay_micro>
		
	// entry mode set
		while((ascii_read_status() & 0x80) == 0x80){} //VÃƒÂ¤nta tills displayed ÃƒÂ¤r redo
20004330:	46c0      	nop			; (mov r8, r8)
20004332:	f7ff fef9 	bl	20004128 <ascii_read_status>
20004336:	0003      	movs	r3, r0
20004338:	001a      	movs	r2, r3
2000433a:	2380      	movs	r3, #128	; 0x80
2000433c:	4013      	ands	r3, r2
2000433e:	2b80      	cmp	r3, #128	; 0x80
20004340:	d0f7      	beq.n	20004332 <ascii_init+0x72>
		delay_micro(20); //latenstid
20004342:	2014      	movs	r0, #20
20004344:	f7fe ff1a 	bl	2000317c <delay_micro>
		ascii_write_cmd(0x06); //00000001 + XY. X=0: markÃƒÂ¶ren vÃƒÂ¤nst. || X=1: marÃƒÂ¶kren hÃƒÂ¶g. - Y=0: skift av || Y=1: skift pÃƒÂ¥
20004348:	2006      	movs	r0, #6
2000434a:	f7ff fec3 	bl	200040d4 <ascii_write_cmd>
		delay_micro(100); //istÃƒÂ¤llet fÃƒÂ¶r 39us
2000434e:	2064      	movs	r0, #100	; 0x64
20004350:	f7fe ff14 	bl	2000317c <delay_micro>
		
		
}
20004354:	46c0      	nop			; (mov r8, r8)
20004356:	46bd      	mov	sp, r7
20004358:	bd80      	pop	{r7, pc}

2000435a <init_application>:

void init_application(void){
2000435a:	b580      	push	{r7, lr}
2000435c:	af00      	add	r7, sp, #0
	#ifdef USBDM
		*((unsigned long *) 0x40023830) = 0x18; //startar klockor pÃ¥ port D och E
		//__asm volatile ("LDR R0, =0x08000209\n BLX R0 \n"); //initiera PLL
	#endif
	//"initierar Port E med anvÃƒÂ¤ndning med LCD-modulen, dvs. sÃƒÂ¥vÃƒÂ¤l port E0-7 som E8-15 sÃƒÂ¤tts till utgÃƒÂ¥ngar
	* portModer = 0x55555555;
2000435e:	4b03      	ldr	r3, [pc, #12]	; (2000436c <init_application+0x12>)
20004360:	4a03      	ldr	r2, [pc, #12]	; (20004370 <init_application+0x16>)
20004362:	601a      	str	r2, [r3, #0]
}
20004364:	46c0      	nop			; (mov r8, r8)
20004366:	46bd      	mov	sp, r7
20004368:	bd80      	pop	{r7, pc}
2000436a:	46c0      	nop			; (mov r8, r8)
2000436c:	40021000 	andmi	r1, r2, r0
20004370:	55555555 	ldrbpl	r5, [r5, #-1365]	; 0xfffffaab

20004374 <set_up_ascii>:

void set_up_ascii( void ) {
20004374:	b580      	push	{r7, lr}
20004376:	af00      	add	r7, sp, #0
	init_application();
20004378:	f7ff ffef 	bl	2000435a <init_application>
	ascii_init();
2000437c:	f7ff ffa0 	bl	200042c0 <ascii_init>
}
20004380:	46c0      	nop			; (mov r8, r8)
20004382:	46bd      	mov	sp, r7
20004384:	bd80      	pop	{r7, pc}

20004386 <clear_ascii>:

void clear_ascii( void ) {
20004386:	b590      	push	{r4, r7, lr}
20004388:	b089      	sub	sp, #36	; 0x24
2000438a:	af00      	add	r7, sp, #0
	char *s;
	char clear[] = "                    ";
2000438c:	1d3b      	adds	r3, r7, #4
2000438e:	4a17      	ldr	r2, [pc, #92]	; (200043ec <clear_ascii+0x66>)
20004390:	ca13      	ldmia	r2!, {r0, r1, r4}
20004392:	c313      	stmia	r3!, {r0, r1, r4}
20004394:	ca03      	ldmia	r2!, {r0, r1}
20004396:	c303      	stmia	r3!, {r0, r1}
20004398:	7812      	ldrb	r2, [r2, #0]
2000439a:	701a      	strb	r2, [r3, #0]
	
	s = clear;
2000439c:	1d3b      	adds	r3, r7, #4
2000439e:	61fb      	str	r3, [r7, #28]
	ascii_goToXY(1,1);
200043a0:	2101      	movs	r1, #1
200043a2:	2001      	movs	r0, #1
200043a4:	f7ff ff64 	bl	20004270 <ascii_goToXY>
	while(*s){
200043a8:	e006      	b.n	200043b8 <clear_ascii+0x32>
		ascii_write_char(*s++);
200043aa:	69fb      	ldr	r3, [r7, #28]
200043ac:	1c5a      	adds	r2, r3, #1
200043ae:	61fa      	str	r2, [r7, #28]
200043b0:	781b      	ldrb	r3, [r3, #0]
200043b2:	0018      	movs	r0, r3
200043b4:	f7ff ff3e 	bl	20004234 <ascii_write_char>
	while(*s){
200043b8:	69fb      	ldr	r3, [r7, #28]
200043ba:	781b      	ldrb	r3, [r3, #0]
200043bc:	2b00      	cmp	r3, #0
200043be:	d1f4      	bne.n	200043aa <clear_ascii+0x24>
	}
	s = clear;
200043c0:	1d3b      	adds	r3, r7, #4
200043c2:	61fb      	str	r3, [r7, #28]
	ascii_goToXY(1,2);
200043c4:	2102      	movs	r1, #2
200043c6:	2001      	movs	r0, #1
200043c8:	f7ff ff52 	bl	20004270 <ascii_goToXY>
	while(*s){
200043cc:	e006      	b.n	200043dc <clear_ascii+0x56>
		ascii_write_char(*s++);
200043ce:	69fb      	ldr	r3, [r7, #28]
200043d0:	1c5a      	adds	r2, r3, #1
200043d2:	61fa      	str	r2, [r7, #28]
200043d4:	781b      	ldrb	r3, [r3, #0]
200043d6:	0018      	movs	r0, r3
200043d8:	f7ff ff2c 	bl	20004234 <ascii_write_char>
	while(*s){
200043dc:	69fb      	ldr	r3, [r7, #28]
200043de:	781b      	ldrb	r3, [r3, #0]
200043e0:	2b00      	cmp	r3, #0
200043e2:	d1f4      	bne.n	200043ce <clear_ascii+0x48>
	}
}
200043e4:	46c0      	nop			; (mov r8, r8)
200043e6:	46bd      	mov	sp, r7
200043e8:	b009      	add	sp, #36	; 0x24
200043ea:	bd90      	pop	{r4, r7, pc}
200043ec:	2001478c 	andcs	r4, r1, ip, lsl #15

200043f0 <ascii_write>:

void ascii_write(char *row1, char *row2) {
200043f0:	b580      	push	{r7, lr}
200043f2:	b082      	sub	sp, #8
200043f4:	af00      	add	r7, sp, #0
200043f6:	6078      	str	r0, [r7, #4]
200043f8:	6039      	str	r1, [r7, #0]
	clear_ascii();
200043fa:	f7ff ffc4 	bl	20004386 <clear_ascii>
	
	ascii_goToXY(1,1);
200043fe:	2101      	movs	r1, #1
20004400:	2001      	movs	r0, #1
20004402:	f7ff ff35 	bl	20004270 <ascii_goToXY>
	while(*row1){
20004406:	e006      	b.n	20004416 <ascii_write+0x26>
		ascii_write_char(*row1++);
20004408:	687b      	ldr	r3, [r7, #4]
2000440a:	1c5a      	adds	r2, r3, #1
2000440c:	607a      	str	r2, [r7, #4]
2000440e:	781b      	ldrb	r3, [r3, #0]
20004410:	0018      	movs	r0, r3
20004412:	f7ff ff0f 	bl	20004234 <ascii_write_char>
	while(*row1){
20004416:	687b      	ldr	r3, [r7, #4]
20004418:	781b      	ldrb	r3, [r3, #0]
2000441a:	2b00      	cmp	r3, #0
2000441c:	d1f4      	bne.n	20004408 <ascii_write+0x18>
	}	
	ascii_goToXY(1,2);
2000441e:	2102      	movs	r1, #2
20004420:	2001      	movs	r0, #1
20004422:	f7ff ff25 	bl	20004270 <ascii_goToXY>
	while(*row2){
20004426:	e006      	b.n	20004436 <ascii_write+0x46>
		ascii_write_char(*row2++);
20004428:	683b      	ldr	r3, [r7, #0]
2000442a:	1c5a      	adds	r2, r3, #1
2000442c:	603a      	str	r2, [r7, #0]
2000442e:	781b      	ldrb	r3, [r3, #0]
20004430:	0018      	movs	r0, r3
20004432:	f7ff feff 	bl	20004234 <ascii_write_char>
	while(*row2){
20004436:	683b      	ldr	r3, [r7, #0]
20004438:	781b      	ldrb	r3, [r3, #0]
2000443a:	2b00      	cmp	r3, #0
2000443c:	d1f4      	bne.n	20004428 <ascii_write+0x38>
	}
	
	ascii_goToXY(21,1);
2000443e:	2101      	movs	r1, #1
20004440:	2015      	movs	r0, #21
20004442:	f7ff ff15 	bl	20004270 <ascii_goToXY>
}
20004446:	46c0      	nop			; (mov r8, r8)
20004448:	46bd      	mov	sp, r7
2000444a:	b002      	add	sp, #8
2000444c:	bd80      	pop	{r7, pc}

2000444e <ascii_write_part>:

void ascii_write_part(char *row1, char *row2, int limit1, int limit2) {
2000444e:	b580      	push	{r7, lr}
20004450:	b086      	sub	sp, #24
20004452:	af00      	add	r7, sp, #0
20004454:	60f8      	str	r0, [r7, #12]
20004456:	60b9      	str	r1, [r7, #8]
20004458:	607a      	str	r2, [r7, #4]
2000445a:	603b      	str	r3, [r7, #0]
	clear_ascii();
2000445c:	f7ff ff93 	bl	20004386 <clear_ascii>
	
	ascii_goToXY(1,1);
20004460:	2101      	movs	r1, #1
20004462:	2001      	movs	r0, #1
20004464:	f7ff ff04 	bl	20004270 <ascii_goToXY>
	int i = 0;
20004468:	2300      	movs	r3, #0
2000446a:	617b      	str	r3, [r7, #20]
	if(limit1 > 0) {
2000446c:	687b      	ldr	r3, [r7, #4]
2000446e:	2b00      	cmp	r3, #0
20004470:	dd11      	ble.n	20004496 <ascii_write_part+0x48>
		while(*row1 && (i++ < limit1)){
20004472:	e006      	b.n	20004482 <ascii_write_part+0x34>
			ascii_write_char(*row1++);
20004474:	68fb      	ldr	r3, [r7, #12]
20004476:	1c5a      	adds	r2, r3, #1
20004478:	60fa      	str	r2, [r7, #12]
2000447a:	781b      	ldrb	r3, [r3, #0]
2000447c:	0018      	movs	r0, r3
2000447e:	f7ff fed9 	bl	20004234 <ascii_write_char>
		while(*row1 && (i++ < limit1)){
20004482:	68fb      	ldr	r3, [r7, #12]
20004484:	781b      	ldrb	r3, [r3, #0]
20004486:	2b00      	cmp	r3, #0
20004488:	d005      	beq.n	20004496 <ascii_write_part+0x48>
2000448a:	697b      	ldr	r3, [r7, #20]
2000448c:	1c5a      	adds	r2, r3, #1
2000448e:	617a      	str	r2, [r7, #20]
20004490:	687a      	ldr	r2, [r7, #4]
20004492:	4293      	cmp	r3, r2
20004494:	dbee      	blt.n	20004474 <ascii_write_part+0x26>
		}			
	}

	ascii_goToXY(1,2);
20004496:	2102      	movs	r1, #2
20004498:	2001      	movs	r0, #1
2000449a:	f7ff fee9 	bl	20004270 <ascii_goToXY>
	i = 0;
2000449e:	2300      	movs	r3, #0
200044a0:	617b      	str	r3, [r7, #20]
	if(limit2 > 0) {
200044a2:	683b      	ldr	r3, [r7, #0]
200044a4:	2b00      	cmp	r3, #0
200044a6:	dd11      	ble.n	200044cc <ascii_write_part+0x7e>
		while(*row2 && (i++ < limit2)){
200044a8:	e006      	b.n	200044b8 <ascii_write_part+0x6a>
			ascii_write_char(*row2++);
200044aa:	68bb      	ldr	r3, [r7, #8]
200044ac:	1c5a      	adds	r2, r3, #1
200044ae:	60ba      	str	r2, [r7, #8]
200044b0:	781b      	ldrb	r3, [r3, #0]
200044b2:	0018      	movs	r0, r3
200044b4:	f7ff febe 	bl	20004234 <ascii_write_char>
		while(*row2 && (i++ < limit2)){
200044b8:	68bb      	ldr	r3, [r7, #8]
200044ba:	781b      	ldrb	r3, [r3, #0]
200044bc:	2b00      	cmp	r3, #0
200044be:	d005      	beq.n	200044cc <ascii_write_part+0x7e>
200044c0:	697b      	ldr	r3, [r7, #20]
200044c2:	1c5a      	adds	r2, r3, #1
200044c4:	617a      	str	r2, [r7, #20]
200044c6:	683a      	ldr	r2, [r7, #0]
200044c8:	4293      	cmp	r3, r2
200044ca:	dbee      	blt.n	200044aa <ascii_write_part+0x5c>
		}
	}
	
	ascii_goToXY(21,1);
200044cc:	2101      	movs	r1, #1
200044ce:	2015      	movs	r0, #21
200044d0:	f7ff fece 	bl	20004270 <ascii_goToXY>
}
200044d4:	46c0      	nop			; (mov r8, r8)
200044d6:	46bd      	mov	sp, r7
200044d8:	b006      	add	sp, #24
200044da:	bd80      	pop	{r7, pc}

200044dc <ascii_test>:



void ascii_test(void) {
200044dc:	b590      	push	{r4, r7, lr}
200044de:	b08b      	sub	sp, #44	; 0x2c
200044e0:	af00      	add	r7, sp, #0
	char *s;
	char test1[] = "Alfanumerisk";
200044e2:	2314      	movs	r3, #20
200044e4:	18fb      	adds	r3, r7, r3
200044e6:	4a1c      	ldr	r2, [pc, #112]	; (20004558 <ascii_test+0x7c>)
200044e8:	ca13      	ldmia	r2!, {r0, r1, r4}
200044ea:	c313      	stmia	r3!, {r0, r1, r4}
200044ec:	7812      	ldrb	r2, [r2, #0]
200044ee:	701a      	strb	r2, [r3, #0]
	char test2[] = "hardåäöare suger";
200044f0:	003b      	movs	r3, r7
200044f2:	4a1a      	ldr	r2, [pc, #104]	; (2000455c <ascii_test+0x80>)
200044f4:	ca13      	ldmia	r2!, {r0, r1, r4}
200044f6:	c313      	stmia	r3!, {r0, r1, r4}
200044f8:	ca03      	ldmia	r2!, {r0, r1}
200044fa:	c303      	stmia	r3!, {r0, r1}
	
	init_application();
200044fc:	f7ff ff2d 	bl	2000435a <init_application>
	ascii_init();
20004500:	f7ff fede 	bl	200042c0 <ascii_init>
	ascii_goToXY(1,1);
20004504:	2101      	movs	r1, #1
20004506:	2001      	movs	r0, #1
20004508:	f7ff feb2 	bl	20004270 <ascii_goToXY>
	s = test1;
2000450c:	2314      	movs	r3, #20
2000450e:	18fb      	adds	r3, r7, r3
20004510:	627b      	str	r3, [r7, #36]	; 0x24
	while(*s){
20004512:	e006      	b.n	20004522 <ascii_test+0x46>
		ascii_write_char(*s++);
20004514:	6a7b      	ldr	r3, [r7, #36]	; 0x24
20004516:	1c5a      	adds	r2, r3, #1
20004518:	627a      	str	r2, [r7, #36]	; 0x24
2000451a:	781b      	ldrb	r3, [r3, #0]
2000451c:	0018      	movs	r0, r3
2000451e:	f7ff fe89 	bl	20004234 <ascii_write_char>
	while(*s){
20004522:	6a7b      	ldr	r3, [r7, #36]	; 0x24
20004524:	781b      	ldrb	r3, [r3, #0]
20004526:	2b00      	cmp	r3, #0
20004528:	d1f4      	bne.n	20004514 <ascii_test+0x38>
	}
	ascii_goToXY(1,2);
2000452a:	2102      	movs	r1, #2
2000452c:	2001      	movs	r0, #1
2000452e:	f7ff fe9f 	bl	20004270 <ascii_goToXY>
	s = test2;
20004532:	003b      	movs	r3, r7
20004534:	627b      	str	r3, [r7, #36]	; 0x24
	while(*s){
20004536:	e006      	b.n	20004546 <ascii_test+0x6a>
		ascii_write_char(*s++);
20004538:	6a7b      	ldr	r3, [r7, #36]	; 0x24
2000453a:	1c5a      	adds	r2, r3, #1
2000453c:	627a      	str	r2, [r7, #36]	; 0x24
2000453e:	781b      	ldrb	r3, [r3, #0]
20004540:	0018      	movs	r0, r3
20004542:	f7ff fe77 	bl	20004234 <ascii_write_char>
	while(*s){
20004546:	6a7b      	ldr	r3, [r7, #36]	; 0x24
20004548:	781b      	ldrb	r3, [r3, #0]
2000454a:	2b00      	cmp	r3, #0
2000454c:	d1f4      	bne.n	20004538 <ascii_test+0x5c>
	}
	return 0;
2000454e:	46c0      	nop			; (mov r8, r8)
20004550:	46bd      	mov	sp, r7
20004552:	b00b      	add	sp, #44	; 0x2c
20004554:	bd90      	pop	{r4, r7, pc}
20004556:	46c0      	nop			; (mov r8, r8)
20004558:	200147a4 	andcs	r4, r1, r4, lsr #15
2000455c:	200147b4 			; <UNDEFINED> instruction: 0x200147b4

20004560 <display>:
#include "slow_text.h"
#include "ascii_display.h"

void display(SlowText *this, int length_of_row1) {
20004560:	b580      	push	{r7, lr}
20004562:	b084      	sub	sp, #16
20004564:	af00      	add	r7, sp, #0
20004566:	6078      	str	r0, [r7, #4]
20004568:	6039      	str	r1, [r7, #0]
	int limit1 = this->counter / this->speed;
2000456a:	687b      	ldr	r3, [r7, #4]
2000456c:	689a      	ldr	r2, [r3, #8]
2000456e:	687b      	ldr	r3, [r7, #4]
20004570:	68db      	ldr	r3, [r3, #12]
20004572:	0019      	movs	r1, r3
20004574:	0010      	movs	r0, r2
20004576:	f000 fbf9 	bl	20004d6c <__divsi3>
2000457a:	0003      	movs	r3, r0
2000457c:	60fb      	str	r3, [r7, #12]
	int limit2 = this->counter / this->speed - length_of_row1;
2000457e:	687b      	ldr	r3, [r7, #4]
20004580:	689a      	ldr	r2, [r3, #8]
20004582:	687b      	ldr	r3, [r7, #4]
20004584:	68db      	ldr	r3, [r3, #12]
20004586:	0019      	movs	r1, r3
20004588:	0010      	movs	r0, r2
2000458a:	f000 fbef 	bl	20004d6c <__divsi3>
2000458e:	0003      	movs	r3, r0
20004590:	001a      	movs	r2, r3
20004592:	683b      	ldr	r3, [r7, #0]
20004594:	1ad3      	subs	r3, r2, r3
20004596:	60bb      	str	r3, [r7, #8]
	ascii_write_part(this->row1, this->row2, limit1, limit2);
20004598:	687b      	ldr	r3, [r7, #4]
2000459a:	6818      	ldr	r0, [r3, #0]
2000459c:	687b      	ldr	r3, [r7, #4]
2000459e:	6859      	ldr	r1, [r3, #4]
200045a0:	68bb      	ldr	r3, [r7, #8]
200045a2:	68fa      	ldr	r2, [r7, #12]
200045a4:	f7ff ff53 	bl	2000444e <ascii_write_part>
	
	this->counter++;
200045a8:	687b      	ldr	r3, [r7, #4]
200045aa:	689b      	ldr	r3, [r3, #8]
200045ac:	1c5a      	adds	r2, r3, #1
200045ae:	687b      	ldr	r3, [r7, #4]
200045b0:	609a      	str	r2, [r3, #8]
}
200045b2:	46c0      	nop			; (mov r8, r8)
200045b4:	46bd      	mov	sp, r7
200045b6:	b004      	add	sp, #16
200045b8:	bd80      	pop	{r7, pc}

200045ba <init_slow_text>:

void init_slow_text(SlowText *obj, char *row1, char *row2, int speed) {
200045ba:	b580      	push	{r7, lr}
200045bc:	b084      	sub	sp, #16
200045be:	af00      	add	r7, sp, #0
200045c0:	60f8      	str	r0, [r7, #12]
200045c2:	60b9      	str	r1, [r7, #8]
200045c4:	607a      	str	r2, [r7, #4]
200045c6:	603b      	str	r3, [r7, #0]
	obj->row1 = row1;
200045c8:	68fb      	ldr	r3, [r7, #12]
200045ca:	68ba      	ldr	r2, [r7, #8]
200045cc:	601a      	str	r2, [r3, #0]
	obj->row2 = row2;
200045ce:	68fb      	ldr	r3, [r7, #12]
200045d0:	687a      	ldr	r2, [r7, #4]
200045d2:	605a      	str	r2, [r3, #4]
	obj->speed = speed;
200045d4:	68fb      	ldr	r3, [r7, #12]
200045d6:	683a      	ldr	r2, [r7, #0]
200045d8:	60da      	str	r2, [r3, #12]
	obj->counter = 0;
200045da:	68fb      	ldr	r3, [r7, #12]
200045dc:	2200      	movs	r2, #0
200045de:	609a      	str	r2, [r3, #8]
	obj->display = display;
200045e0:	68fb      	ldr	r3, [r7, #12]
200045e2:	4a03      	ldr	r2, [pc, #12]	; (200045f0 <init_slow_text+0x36>)
200045e4:	611a      	str	r2, [r3, #16]
200045e6:	46c0      	nop			; (mov r8, r8)
200045e8:	46bd      	mov	sp, r7
200045ea:	b004      	add	sp, #16
200045ec:	bd80      	pop	{r7, pc}
200045ee:	46c0      	nop			; (mov r8, r8)
200045f0:	20004561 	andcs	r4, r0, r1, ror #10

200045f4 <initSprites>:


GameObject indoorsObj;
Image indoorsImage;
Image indoorsImages[1];
static void initSprites( void ) {	
200045f4:	b580      	push	{r7, lr}
200045f6:	b084      	sub	sp, #16
200045f8:	af00      	add	r7, sp, #0
	
	sprite *pointer11 = &tempIndoorsLight;
200045fa:	4b12      	ldr	r3, [pc, #72]	; (20004644 <initSprites+0x50>)
200045fc:	60fb      	str	r3, [r7, #12]
	load_sprite(pointer11, indoors_light_bits, indoors_black_width, indoors_black_height);
200045fe:	4912      	ldr	r1, [pc, #72]	; (20004648 <initSprites+0x54>)
20004600:	68f8      	ldr	r0, [r7, #12]
20004602:	2340      	movs	r3, #64	; 0x40
20004604:	2280      	movs	r2, #128	; 0x80
20004606:	f7ff fcd1 	bl	20003fac <load_sprite>
	indoorsLight = pointer11;
2000460a:	4b10      	ldr	r3, [pc, #64]	; (2000464c <initSprites+0x58>)
2000460c:	68fa      	ldr	r2, [r7, #12]
2000460e:	601a      	str	r2, [r3, #0]
	sprite *pointer12 = &tempIndoorsGray;
20004610:	4b0f      	ldr	r3, [pc, #60]	; (20004650 <initSprites+0x5c>)
20004612:	60bb      	str	r3, [r7, #8]
	load_sprite(pointer12, indoors_gray_bits, indoors_black_width, indoors_black_height);
20004614:	490f      	ldr	r1, [pc, #60]	; (20004654 <initSprites+0x60>)
20004616:	68b8      	ldr	r0, [r7, #8]
20004618:	2340      	movs	r3, #64	; 0x40
2000461a:	2280      	movs	r2, #128	; 0x80
2000461c:	f7ff fcc6 	bl	20003fac <load_sprite>
	indoorsGray = pointer12;
20004620:	4b0d      	ldr	r3, [pc, #52]	; (20004658 <initSprites+0x64>)
20004622:	68ba      	ldr	r2, [r7, #8]
20004624:	601a      	str	r2, [r3, #0]
	sprite *pointer13 = &tempIndoorsBlack;
20004626:	4b0d      	ldr	r3, [pc, #52]	; (2000465c <initSprites+0x68>)
20004628:	607b      	str	r3, [r7, #4]
	load_sprite(pointer13, indoors_black_bits, indoors_black_width, indoors_black_height);
2000462a:	490d      	ldr	r1, [pc, #52]	; (20004660 <initSprites+0x6c>)
2000462c:	6878      	ldr	r0, [r7, #4]
2000462e:	2340      	movs	r3, #64	; 0x40
20004630:	2280      	movs	r2, #128	; 0x80
20004632:	f7ff fcbb 	bl	20003fac <load_sprite>
	indoorsBlack = pointer13;	
20004636:	4b0b      	ldr	r3, [pc, #44]	; (20004664 <initSprites+0x70>)
20004638:	687a      	ldr	r2, [r7, #4]
2000463a:	601a      	str	r2, [r3, #0]
	
}
2000463c:	46c0      	nop			; (mov r8, r8)
2000463e:	46bd      	mov	sp, r7
20004640:	b004      	add	sp, #16
20004642:	bd80      	pop	{r7, pc}
20004644:	20007708 	andcs	r7, r0, r8, lsl #14
20004648:	2000dff0 	strdcs	sp, [r0], -r0
2000464c:	20007764 	andcs	r7, r0, r4, ror #14
20004650:	200076fc 	strdcs	r7, [r0], -ip
20004654:	2000dbf0 	strdcs	sp, [r0], -r0
20004658:	20007720 	andcs	r7, r0, r0, lsr #14
2000465c:	20007714 	andcs	r7, r0, r4, lsl r7
20004660:	2000d7f0 	strdcs	sp, [r0], -r0
20004664:	20007754 	andcs	r7, r0, r4, asr r7

20004668 <init_indoors>:
	
void init_indoors( GameObject *indoorsObj ) {
20004668:	b590      	push	{r4, r7, lr}
2000466a:	b083      	sub	sp, #12
2000466c:	af00      	add	r7, sp, #0
2000466e:	6078      	str	r0, [r7, #4]
	static int firstTime = 1;
	if (firstTime) {
20004670:	4b14      	ldr	r3, [pc, #80]	; (200046c4 <init_indoors+0x5c>)
20004672:	681b      	ldr	r3, [r3, #0]
20004674:	2b00      	cmp	r3, #0
20004676:	d011      	beq.n	2000469c <init_indoors+0x34>
		initSprites();
20004678:	f7ff ffbc 	bl	200045f4 <initSprites>
		firstTime = 0;			
2000467c:	4b11      	ldr	r3, [pc, #68]	; (200046c4 <init_indoors+0x5c>)
2000467e:	2200      	movs	r2, #0
20004680:	601a      	str	r2, [r3, #0]

		indoorsImages[0] = indoorsImage;
20004682:	4b11      	ldr	r3, [pc, #68]	; (200046c8 <init_indoors+0x60>)
20004684:	4a11      	ldr	r2, [pc, #68]	; (200046cc <init_indoors+0x64>)
20004686:	ca13      	ldmia	r2!, {r0, r1, r4}
20004688:	c313      	stmia	r3!, {r0, r1, r4}
		
		load_image(&indoorsImages[0], indoorsBlack, indoorsGray, indoorsLight);
2000468a:	4b11      	ldr	r3, [pc, #68]	; (200046d0 <init_indoors+0x68>)
2000468c:	6819      	ldr	r1, [r3, #0]
2000468e:	4b11      	ldr	r3, [pc, #68]	; (200046d4 <init_indoors+0x6c>)
20004690:	681a      	ldr	r2, [r3, #0]
20004692:	4b11      	ldr	r3, [pc, #68]	; (200046d8 <init_indoors+0x70>)
20004694:	681b      	ldr	r3, [r3, #0]
20004696:	480c      	ldr	r0, [pc, #48]	; (200046c8 <init_indoors+0x60>)
20004698:	f7ff fc74 	bl	20003f84 <load_image>
	}
	
	indoorsObj->images = indoorsImages;
2000469c:	687b      	ldr	r3, [r7, #4]
2000469e:	4a0a      	ldr	r2, [pc, #40]	; (200046c8 <init_indoors+0x60>)
200046a0:	601a      	str	r2, [r3, #0]

	indoorsObj->current_frame = 0;
200046a2:	687b      	ldr	r3, [r7, #4]
200046a4:	2200      	movs	r2, #0
200046a6:	615a      	str	r2, [r3, #20]
	indoorsObj->n_frames = 1;
200046a8:	687b      	ldr	r3, [r7, #4]
200046aa:	2201      	movs	r2, #1
200046ac:	619a      	str	r2, [r3, #24]
	indoorsObj->animation_speed = 1;
200046ae:	687b      	ldr	r3, [r7, #4]
200046b0:	2201      	movs	r2, #1
200046b2:	61da      	str	r2, [r3, #28]
	indoorsObj->animation_counter = 0;
200046b4:	687b      	ldr	r3, [r7, #4]
200046b6:	2200      	movs	r2, #0
200046b8:	621a      	str	r2, [r3, #32]
}
200046ba:	46c0      	nop			; (mov r8, r8)
200046bc:	46bd      	mov	sp, r7
200046be:	b003      	add	sp, #12
200046c0:	bd90      	pop	{r4, r7, pc}
200046c2:	46c0      	nop			; (mov r8, r8)
200046c4:	2000e3f0 	strdcs	lr, [r0], -r0
200046c8:	20007748 	andcs	r7, r0, r8, asr #14
200046cc:	20007758 	andcs	r7, r0, r8, asr r7
200046d0:	20007754 	andcs	r7, r0, r4, asr r7
200046d4:	20007720 	andcs	r7, r0, r0, lsr #14
200046d8:	20007764 	andcs	r7, r0, r4, ror #14

200046dc <initSprites>:


GameObject indoors2Obj;
Image indoors2Image;
Image indoors2Images[1];
static void initSprites( void ) {	
200046dc:	b580      	push	{r7, lr}
200046de:	b084      	sub	sp, #16
200046e0:	af00      	add	r7, sp, #0
	
	sprite *pointer11 = &tempIndoors2Light;
200046e2:	4b12      	ldr	r3, [pc, #72]	; (2000472c <initSprites+0x50>)
200046e4:	60fb      	str	r3, [r7, #12]
	load_sprite(pointer11, indoors2_light_bits, indoors2_black_width, indoors2_black_height);
200046e6:	4912      	ldr	r1, [pc, #72]	; (20004730 <initSprites+0x54>)
200046e8:	68f8      	ldr	r0, [r7, #12]
200046ea:	2340      	movs	r3, #64	; 0x40
200046ec:	2280      	movs	r2, #128	; 0x80
200046ee:	f7ff fc5d 	bl	20003fac <load_sprite>
	indoors2Light = pointer11;
200046f2:	4b10      	ldr	r3, [pc, #64]	; (20004734 <initSprites+0x58>)
200046f4:	68fa      	ldr	r2, [r7, #12]
200046f6:	601a      	str	r2, [r3, #0]
	sprite *pointer12 = &tempIndoors2Gray;
200046f8:	4b0f      	ldr	r3, [pc, #60]	; (20004738 <initSprites+0x5c>)
200046fa:	60bb      	str	r3, [r7, #8]
	load_sprite(pointer12, indoors2_gray_bits, indoors2_black_width, indoors2_black_height);
200046fc:	490f      	ldr	r1, [pc, #60]	; (2000473c <initSprites+0x60>)
200046fe:	68b8      	ldr	r0, [r7, #8]
20004700:	2340      	movs	r3, #64	; 0x40
20004702:	2280      	movs	r2, #128	; 0x80
20004704:	f7ff fc52 	bl	20003fac <load_sprite>
	indoors2Gray = pointer12;
20004708:	4b0d      	ldr	r3, [pc, #52]	; (20004740 <initSprites+0x64>)
2000470a:	68ba      	ldr	r2, [r7, #8]
2000470c:	601a      	str	r2, [r3, #0]
	sprite *pointer13 = &tempIndoors2Black;
2000470e:	4b0d      	ldr	r3, [pc, #52]	; (20004744 <initSprites+0x68>)
20004710:	607b      	str	r3, [r7, #4]
	load_sprite(pointer13, indoors2_black_bits, indoors2_black_width, indoors2_black_height);
20004712:	490d      	ldr	r1, [pc, #52]	; (20004748 <initSprites+0x6c>)
20004714:	6878      	ldr	r0, [r7, #4]
20004716:	2340      	movs	r3, #64	; 0x40
20004718:	2280      	movs	r2, #128	; 0x80
2000471a:	f7ff fc47 	bl	20003fac <load_sprite>
	indoors2Black = pointer13;	
2000471e:	4b0b      	ldr	r3, [pc, #44]	; (2000474c <initSprites+0x70>)
20004720:	687a      	ldr	r2, [r7, #4]
20004722:	601a      	str	r2, [r3, #0]
	
}
20004724:	46c0      	nop			; (mov r8, r8)
20004726:	46bd      	mov	sp, r7
20004728:	b004      	add	sp, #16
2000472a:	bd80      	pop	{r7, pc}
2000472c:	200077c4 	andcs	r7, r0, r4, asr #15
20004730:	2000ebf4 	strdcs	lr, [r0], -r4
20004734:	200077b4 			; <UNDEFINED> instruction: 0x200077b4
20004738:	200077a8 	andcs	r7, r0, r8, lsr #15
2000473c:	2000e7f4 	strdcs	lr, [r0], -r4
20004740:	2000778c 	andcs	r7, r0, ip, lsl #15
20004744:	200077b8 			; <UNDEFINED> instruction: 0x200077b8
20004748:	2000e3f4 	strdcs	lr, [r0], -r4
2000474c:	200077d0 	ldrdcs	r7, [r0], -r0

20004750 <init_indoors2>:
	
void init_indoors2( GameObject *indoors2Obj ) {
20004750:	b590      	push	{r4, r7, lr}
20004752:	b083      	sub	sp, #12
20004754:	af00      	add	r7, sp, #0
20004756:	6078      	str	r0, [r7, #4]
	static int firstTime = 1;
	if (firstTime) {
20004758:	4b14      	ldr	r3, [pc, #80]	; (200047ac <init_indoors2+0x5c>)
2000475a:	681b      	ldr	r3, [r3, #0]
2000475c:	2b00      	cmp	r3, #0
2000475e:	d011      	beq.n	20004784 <init_indoors2+0x34>
		initSprites();
20004760:	f7ff ffbc 	bl	200046dc <initSprites>
		firstTime = 0;			
20004764:	4b11      	ldr	r3, [pc, #68]	; (200047ac <init_indoors2+0x5c>)
20004766:	2200      	movs	r2, #0
20004768:	601a      	str	r2, [r3, #0]

		indoors2Images[0] = indoors2Image;
2000476a:	4b11      	ldr	r3, [pc, #68]	; (200047b0 <init_indoors2+0x60>)
2000476c:	4a11      	ldr	r2, [pc, #68]	; (200047b4 <init_indoors2+0x64>)
2000476e:	ca13      	ldmia	r2!, {r0, r1, r4}
20004770:	c313      	stmia	r3!, {r0, r1, r4}
		
		load_image(&indoors2Images[0], indoors2Black, indoors2Gray, indoors2Light);
20004772:	4b11      	ldr	r3, [pc, #68]	; (200047b8 <init_indoors2+0x68>)
20004774:	6819      	ldr	r1, [r3, #0]
20004776:	4b11      	ldr	r3, [pc, #68]	; (200047bc <init_indoors2+0x6c>)
20004778:	681a      	ldr	r2, [r3, #0]
2000477a:	4b11      	ldr	r3, [pc, #68]	; (200047c0 <init_indoors2+0x70>)
2000477c:	681b      	ldr	r3, [r3, #0]
2000477e:	480c      	ldr	r0, [pc, #48]	; (200047b0 <init_indoors2+0x60>)
20004780:	f7ff fc00 	bl	20003f84 <load_image>
	}
	
	indoors2Obj->images = indoors2Images;
20004784:	687b      	ldr	r3, [r7, #4]
20004786:	4a0a      	ldr	r2, [pc, #40]	; (200047b0 <init_indoors2+0x60>)
20004788:	601a      	str	r2, [r3, #0]

	indoors2Obj->current_frame = 0;
2000478a:	687b      	ldr	r3, [r7, #4]
2000478c:	2200      	movs	r2, #0
2000478e:	615a      	str	r2, [r3, #20]
	indoors2Obj->n_frames = 1;
20004790:	687b      	ldr	r3, [r7, #4]
20004792:	2201      	movs	r2, #1
20004794:	619a      	str	r2, [r3, #24]
	indoors2Obj->animation_speed = 1;
20004796:	687b      	ldr	r3, [r7, #4]
20004798:	2201      	movs	r2, #1
2000479a:	61da      	str	r2, [r3, #28]
	indoors2Obj->animation_counter = 0;
2000479c:	687b      	ldr	r3, [r7, #4]
2000479e:	2200      	movs	r2, #0
200047a0:	621a      	str	r2, [r3, #32]
}
200047a2:	46c0      	nop			; (mov r8, r8)
200047a4:	46bd      	mov	sp, r7
200047a6:	b003      	add	sp, #12
200047a8:	bd90      	pop	{r4, r7, pc}
200047aa:	46c0      	nop			; (mov r8, r8)
200047ac:	2000eff4 	strdcs	lr, [r0], -r4
200047b0:	20007790 	mulcs	r0, r0, r7
200047b4:	2000779c 	mulcs	r0, ip, r7
200047b8:	200077d0 	ldrdcs	r7, [r0], -r0
200047bc:	2000778c 	andcs	r7, r0, ip, lsl #15
200047c0:	200077b4 			; <UNDEFINED> instruction: 0x200077b4

200047c4 <initSprites>:


GameObject trophyObj;
Image trophyImage;
Image trophyImages[1];
static void initSprites( void ) {	
200047c4:	b580      	push	{r7, lr}
200047c6:	b084      	sub	sp, #16
200047c8:	af00      	add	r7, sp, #0
	
	sprite *pointer11 = &tempTrophyLight;
200047ca:	4b12      	ldr	r3, [pc, #72]	; (20004814 <initSprites+0x50>)
200047cc:	60fb      	str	r3, [r7, #12]
	load_sprite(pointer11, trophy_light_bits, trophy_black_width, trophy_black_height);
200047ce:	4912      	ldr	r1, [pc, #72]	; (20004818 <initSprites+0x54>)
200047d0:	68f8      	ldr	r0, [r7, #12]
200047d2:	2311      	movs	r3, #17
200047d4:	220b      	movs	r2, #11
200047d6:	f7ff fbe9 	bl	20003fac <load_sprite>
	trophyLight = pointer11;
200047da:	4b10      	ldr	r3, [pc, #64]	; (2000481c <initSprites+0x58>)
200047dc:	68fa      	ldr	r2, [r7, #12]
200047de:	601a      	str	r2, [r3, #0]
	sprite *pointer12 = &tempTrophyGray;
200047e0:	4b0f      	ldr	r3, [pc, #60]	; (20004820 <initSprites+0x5c>)
200047e2:	60bb      	str	r3, [r7, #8]
	load_sprite(pointer12, trophy_gray_bits, trophy_black_width, trophy_black_height);
200047e4:	490f      	ldr	r1, [pc, #60]	; (20004824 <initSprites+0x60>)
200047e6:	68b8      	ldr	r0, [r7, #8]
200047e8:	2311      	movs	r3, #17
200047ea:	220b      	movs	r2, #11
200047ec:	f7ff fbde 	bl	20003fac <load_sprite>
	trophyGray = pointer12;
200047f0:	4b0d      	ldr	r3, [pc, #52]	; (20004828 <initSprites+0x64>)
200047f2:	68ba      	ldr	r2, [r7, #8]
200047f4:	601a      	str	r2, [r3, #0]
	sprite *pointer13 = &tempTrophyBlack;
200047f6:	4b0d      	ldr	r3, [pc, #52]	; (2000482c <initSprites+0x68>)
200047f8:	607b      	str	r3, [r7, #4]
	load_sprite(pointer13, trophy_black_bits, trophy_black_width, trophy_black_height);
200047fa:	490d      	ldr	r1, [pc, #52]	; (20004830 <initSprites+0x6c>)
200047fc:	6878      	ldr	r0, [r7, #4]
200047fe:	2311      	movs	r3, #17
20004800:	220b      	movs	r2, #11
20004802:	f7ff fbd3 	bl	20003fac <load_sprite>
	trophyBlack = pointer13;	
20004806:	4b0b      	ldr	r3, [pc, #44]	; (20004834 <initSprites+0x70>)
20004808:	687a      	ldr	r2, [r7, #4]
2000480a:	601a      	str	r2, [r3, #0]
	
}
2000480c:	46c0      	nop			; (mov r8, r8)
2000480e:	46bd      	mov	sp, r7
20004810:	b004      	add	sp, #16
20004812:	bd80      	pop	{r7, pc}
20004814:	200077f0 	strdcs	r7, [r0], -r0
20004818:	2000f040 	andcs	pc, r0, r0, asr #32
2000481c:	2000783c 	andcs	r7, r0, ip, lsr r8
20004820:	20007830 	andcs	r7, r0, r0, lsr r8
20004824:	2000f01c 	andcs	pc, r0, ip, lsl r0	; <UNPREDICTABLE>
20004828:	20007820 	andcs	r7, r0, r0, lsr #16
2000482c:	20007824 	andcs	r7, r0, r4, lsr #16
20004830:	2000eff8 	strdcs	lr, [r0], -r8
20004834:	200077e0 	andcs	r7, r0, r0, ror #15

20004838 <init_trophy>:
	
void init_trophy( GameObject *trophyObj ) {
20004838:	b590      	push	{r4, r7, lr}
2000483a:	b083      	sub	sp, #12
2000483c:	af00      	add	r7, sp, #0
2000483e:	6078      	str	r0, [r7, #4]
	static int firstTime = 1;
	if (firstTime) {
20004840:	4b14      	ldr	r3, [pc, #80]	; (20004894 <init_trophy+0x5c>)
20004842:	681b      	ldr	r3, [r3, #0]
20004844:	2b00      	cmp	r3, #0
20004846:	d011      	beq.n	2000486c <init_trophy+0x34>
		initSprites();
20004848:	f7ff ffbc 	bl	200047c4 <initSprites>
		firstTime = 0;			
2000484c:	4b11      	ldr	r3, [pc, #68]	; (20004894 <init_trophy+0x5c>)
2000484e:	2200      	movs	r2, #0
20004850:	601a      	str	r2, [r3, #0]

		trophyImages[0] = trophyImage;
20004852:	4b11      	ldr	r3, [pc, #68]	; (20004898 <init_trophy+0x60>)
20004854:	4a11      	ldr	r2, [pc, #68]	; (2000489c <init_trophy+0x64>)
20004856:	ca13      	ldmia	r2!, {r0, r1, r4}
20004858:	c313      	stmia	r3!, {r0, r1, r4}
		
		load_image(&trophyImages[0], trophyBlack, trophyGray, trophyLight);
2000485a:	4b11      	ldr	r3, [pc, #68]	; (200048a0 <init_trophy+0x68>)
2000485c:	6819      	ldr	r1, [r3, #0]
2000485e:	4b11      	ldr	r3, [pc, #68]	; (200048a4 <init_trophy+0x6c>)
20004860:	681a      	ldr	r2, [r3, #0]
20004862:	4b11      	ldr	r3, [pc, #68]	; (200048a8 <init_trophy+0x70>)
20004864:	681b      	ldr	r3, [r3, #0]
20004866:	480c      	ldr	r0, [pc, #48]	; (20004898 <init_trophy+0x60>)
20004868:	f7ff fb8c 	bl	20003f84 <load_image>
	}
	
	trophyObj->images = trophyImages;
2000486c:	687b      	ldr	r3, [r7, #4]
2000486e:	4a0a      	ldr	r2, [pc, #40]	; (20004898 <init_trophy+0x60>)
20004870:	601a      	str	r2, [r3, #0]

	trophyObj->current_frame = 0;
20004872:	687b      	ldr	r3, [r7, #4]
20004874:	2200      	movs	r2, #0
20004876:	615a      	str	r2, [r3, #20]
	trophyObj->n_frames = 1;
20004878:	687b      	ldr	r3, [r7, #4]
2000487a:	2201      	movs	r2, #1
2000487c:	619a      	str	r2, [r3, #24]
	trophyObj->animation_speed = 1;
2000487e:	687b      	ldr	r3, [r7, #4]
20004880:	2201      	movs	r2, #1
20004882:	61da      	str	r2, [r3, #28]
	trophyObj->animation_counter = 0;
20004884:	687b      	ldr	r3, [r7, #4]
20004886:	2200      	movs	r2, #0
20004888:	621a      	str	r2, [r3, #32]
}
2000488a:	46c0      	nop			; (mov r8, r8)
2000488c:	46bd      	mov	sp, r7
2000488e:	b003      	add	sp, #12
20004890:	bd90      	pop	{r4, r7, pc}
20004892:	46c0      	nop			; (mov r8, r8)
20004894:	2000f064 	andcs	pc, r0, r4, rrx
20004898:	200077d4 	ldrdcs	r7, [r0], -r4
2000489c:	200077e4 	andcs	r7, r0, r4, ror #15
200048a0:	200077e0 	andcs	r7, r0, r0, ror #15
200048a4:	20007820 	andcs	r7, r0, r0, lsr #16
200048a8:	2000783c 	andcs	r7, r0, ip, lsr r8

200048ac <initSprites>:


GameObject rogerObj;
Image rogerImage;
Image rogerImages[1];
static void initSprites( void ) {	
200048ac:	b580      	push	{r7, lr}
200048ae:	b084      	sub	sp, #16
200048b0:	af00      	add	r7, sp, #0
	
	sprite *pointer11 = &tempRogerLight;
200048b2:	4b12      	ldr	r3, [pc, #72]	; (200048fc <initSprites+0x50>)
200048b4:	60fb      	str	r3, [r7, #12]
	load_sprite(pointer11, roger_light_bits, roger_black_width, roger_black_height);
200048b6:	4912      	ldr	r1, [pc, #72]	; (20004900 <initSprites+0x54>)
200048b8:	68f8      	ldr	r0, [r7, #12]
200048ba:	2340      	movs	r3, #64	; 0x40
200048bc:	2280      	movs	r2, #128	; 0x80
200048be:	f7ff fb75 	bl	20003fac <load_sprite>
	rogerLight = pointer11;
200048c2:	4b10      	ldr	r3, [pc, #64]	; (20004904 <initSprites+0x58>)
200048c4:	68fa      	ldr	r2, [r7, #12]
200048c6:	601a      	str	r2, [r3, #0]
	sprite *pointer12 = &tempRogerGray;
200048c8:	4b0f      	ldr	r3, [pc, #60]	; (20004908 <initSprites+0x5c>)
200048ca:	60bb      	str	r3, [r7, #8]
	load_sprite(pointer12, roger_gray_bits, roger_black_width, roger_black_height);
200048cc:	490f      	ldr	r1, [pc, #60]	; (2000490c <initSprites+0x60>)
200048ce:	68b8      	ldr	r0, [r7, #8]
200048d0:	2340      	movs	r3, #64	; 0x40
200048d2:	2280      	movs	r2, #128	; 0x80
200048d4:	f7ff fb6a 	bl	20003fac <load_sprite>
	rogerGray = pointer12;
200048d8:	4b0d      	ldr	r3, [pc, #52]	; (20004910 <initSprites+0x64>)
200048da:	68ba      	ldr	r2, [r7, #8]
200048dc:	601a      	str	r2, [r3, #0]
	sprite *pointer13 = &tempRogerBlack;
200048de:	4b0d      	ldr	r3, [pc, #52]	; (20004914 <initSprites+0x68>)
200048e0:	607b      	str	r3, [r7, #4]
	load_sprite(pointer13, roger_black_bits, roger_black_width, roger_black_height);
200048e2:	490d      	ldr	r1, [pc, #52]	; (20004918 <initSprites+0x6c>)
200048e4:	6878      	ldr	r0, [r7, #4]
200048e6:	2340      	movs	r3, #64	; 0x40
200048e8:	2280      	movs	r2, #128	; 0x80
200048ea:	f7ff fb5f 	bl	20003fac <load_sprite>
	rogerBlack = pointer13;	
200048ee:	4b0b      	ldr	r3, [pc, #44]	; (2000491c <initSprites+0x70>)
200048f0:	687a      	ldr	r2, [r7, #4]
200048f2:	601a      	str	r2, [r3, #0]
	
}
200048f4:	46c0      	nop			; (mov r8, r8)
200048f6:	46bd      	mov	sp, r7
200048f8:	b004      	add	sp, #16
200048fa:	bd80      	pop	{r7, pc}
200048fc:	2000785c 	andcs	r7, r0, ip, asr r8
20004900:	2000f868 	andcs	pc, r0, r8, ror #16
20004904:	20007868 	andcs	r7, r0, r8, ror #16
20004908:	20007850 	andcs	r7, r0, r0, asr r8
2000490c:	2000f468 	andcs	pc, r0, r8, ror #8
20004910:	2000784c 	andcs	r7, r0, ip, asr #16
20004914:	20007890 	mulcs	r0, r0, r8
20004918:	2000f068 	andcs	pc, r0, r8, rrx
2000491c:	2000789c 	mulcs	r0, ip, r8

20004920 <init_roger>:
	
void init_roger( GameObject *rogerObj ) {
20004920:	b590      	push	{r4, r7, lr}
20004922:	b083      	sub	sp, #12
20004924:	af00      	add	r7, sp, #0
20004926:	6078      	str	r0, [r7, #4]
	static int firstTime = 1;
	if (firstTime) {
20004928:	4b14      	ldr	r3, [pc, #80]	; (2000497c <init_roger+0x5c>)
2000492a:	681b      	ldr	r3, [r3, #0]
2000492c:	2b00      	cmp	r3, #0
2000492e:	d011      	beq.n	20004954 <init_roger+0x34>
		initSprites();
20004930:	f7ff ffbc 	bl	200048ac <initSprites>
		firstTime = 0;			
20004934:	4b11      	ldr	r3, [pc, #68]	; (2000497c <init_roger+0x5c>)
20004936:	2200      	movs	r2, #0
20004938:	601a      	str	r2, [r3, #0]

		rogerImages[0] = rogerImage;
2000493a:	4b11      	ldr	r3, [pc, #68]	; (20004980 <init_roger+0x60>)
2000493c:	4a11      	ldr	r2, [pc, #68]	; (20004984 <init_roger+0x64>)
2000493e:	ca13      	ldmia	r2!, {r0, r1, r4}
20004940:	c313      	stmia	r3!, {r0, r1, r4}
		
		load_image(&rogerImages[0], rogerBlack, rogerGray, rogerLight);
20004942:	4b11      	ldr	r3, [pc, #68]	; (20004988 <init_roger+0x68>)
20004944:	6819      	ldr	r1, [r3, #0]
20004946:	4b11      	ldr	r3, [pc, #68]	; (2000498c <init_roger+0x6c>)
20004948:	681a      	ldr	r2, [r3, #0]
2000494a:	4b11      	ldr	r3, [pc, #68]	; (20004990 <init_roger+0x70>)
2000494c:	681b      	ldr	r3, [r3, #0]
2000494e:	480c      	ldr	r0, [pc, #48]	; (20004980 <init_roger+0x60>)
20004950:	f7ff fb18 	bl	20003f84 <load_image>
	}
	
	rogerObj->images = rogerImages;
20004954:	687b      	ldr	r3, [r7, #4]
20004956:	4a0a      	ldr	r2, [pc, #40]	; (20004980 <init_roger+0x60>)
20004958:	601a      	str	r2, [r3, #0]

	rogerObj->current_frame = 0;
2000495a:	687b      	ldr	r3, [r7, #4]
2000495c:	2200      	movs	r2, #0
2000495e:	615a      	str	r2, [r3, #20]
	rogerObj->n_frames = 1;
20004960:	687b      	ldr	r3, [r7, #4]
20004962:	2201      	movs	r2, #1
20004964:	619a      	str	r2, [r3, #24]
	rogerObj->animation_speed = 1;
20004966:	687b      	ldr	r3, [r7, #4]
20004968:	2201      	movs	r2, #1
2000496a:	61da      	str	r2, [r3, #28]
	rogerObj->animation_counter = 0;
2000496c:	687b      	ldr	r3, [r7, #4]
2000496e:	2200      	movs	r2, #0
20004970:	621a      	str	r2, [r3, #32]
}
20004972:	46c0      	nop			; (mov r8, r8)
20004974:	46bd      	mov	sp, r7
20004976:	b003      	add	sp, #12
20004978:	bd90      	pop	{r4, r7, pc}
2000497a:	46c0      	nop			; (mov r8, r8)
2000497c:	2000fc68 	andcs	pc, r0, r8, ror #24
20004980:	200078a0 	andcs	r7, r0, r0, lsr #17
20004984:	20007840 	andcs	r7, r0, r0, asr #16
20004988:	2000789c 	mulcs	r0, ip, r8
2000498c:	2000784c 	andcs	r7, r0, ip, asr #16
20004990:	20007868 	andcs	r7, r0, r8, ror #16

20004994 <initSprites>:
Image game_over_witch9Image;
Image game_over_witch10Image;
Image game_over_witch11Image;
Image game_over_witch12Image;*/
Image game_over_witchImages[6];
static void initSprites( void ) {	
20004994:	b580      	push	{r7, lr}
20004996:	b092      	sub	sp, #72	; 0x48
20004998:	af00      	add	r7, sp, #0
	
	sprite *pointer11 = &tempgame_over_witchLight;
2000499a:	4b65      	ldr	r3, [pc, #404]	; (20004b30 <initSprites+0x19c>)
2000499c:	647b      	str	r3, [r7, #68]	; 0x44
	load_sprite(pointer11, game_over_witch1_light_bits, game_over_witch1_black_width, game_over_witch1_black_height);
2000499e:	4965      	ldr	r1, [pc, #404]	; (20004b34 <initSprites+0x1a0>)
200049a0:	6c78      	ldr	r0, [r7, #68]	; 0x44
200049a2:	2340      	movs	r3, #64	; 0x40
200049a4:	2280      	movs	r2, #128	; 0x80
200049a6:	f7ff fb01 	bl	20003fac <load_sprite>
	game_over_witch1Light = pointer11;
200049aa:	4b63      	ldr	r3, [pc, #396]	; (20004b38 <initSprites+0x1a4>)
200049ac:	6c7a      	ldr	r2, [r7, #68]	; 0x44
200049ae:	601a      	str	r2, [r3, #0]
	sprite *pointer12 = &tempgame_over_witchGray;
200049b0:	4b62      	ldr	r3, [pc, #392]	; (20004b3c <initSprites+0x1a8>)
200049b2:	643b      	str	r3, [r7, #64]	; 0x40
	load_sprite(pointer12, game_over_witch1_gray_bits, game_over_witch1_black_width, game_over_witch1_black_height);
200049b4:	4962      	ldr	r1, [pc, #392]	; (20004b40 <initSprites+0x1ac>)
200049b6:	6c38      	ldr	r0, [r7, #64]	; 0x40
200049b8:	2340      	movs	r3, #64	; 0x40
200049ba:	2280      	movs	r2, #128	; 0x80
200049bc:	f7ff faf6 	bl	20003fac <load_sprite>
	game_over_witch1Gray = pointer12;
200049c0:	4b60      	ldr	r3, [pc, #384]	; (20004b44 <initSprites+0x1b0>)
200049c2:	6c3a      	ldr	r2, [r7, #64]	; 0x40
200049c4:	601a      	str	r2, [r3, #0]
	sprite *pointer13 = &tempgame_over_witchBlack;
200049c6:	4b60      	ldr	r3, [pc, #384]	; (20004b48 <initSprites+0x1b4>)
200049c8:	63fb      	str	r3, [r7, #60]	; 0x3c
	load_sprite(pointer13, game_over_witch1_black_bits, game_over_witch1_black_width, game_over_witch1_black_height);
200049ca:	4960      	ldr	r1, [pc, #384]	; (20004b4c <initSprites+0x1b8>)
200049cc:	6bf8      	ldr	r0, [r7, #60]	; 0x3c
200049ce:	2340      	movs	r3, #64	; 0x40
200049d0:	2280      	movs	r2, #128	; 0x80
200049d2:	f7ff faeb 	bl	20003fac <load_sprite>
	game_over_witch1Black = pointer13;	
200049d6:	4b5e      	ldr	r3, [pc, #376]	; (20004b50 <initSprites+0x1bc>)
200049d8:	6bfa      	ldr	r2, [r7, #60]	; 0x3c
200049da:	601a      	str	r2, [r3, #0]
	
	sprite *pointer14 = &tempgame_over_witch2Light;
200049dc:	4b5d      	ldr	r3, [pc, #372]	; (20004b54 <initSprites+0x1c0>)
200049de:	63bb      	str	r3, [r7, #56]	; 0x38
	load_sprite(pointer14, game_over_witch2_light_bits, game_over_witch2_black_width, game_over_witch2_black_height);
200049e0:	495d      	ldr	r1, [pc, #372]	; (20004b58 <initSprites+0x1c4>)
200049e2:	6bb8      	ldr	r0, [r7, #56]	; 0x38
200049e4:	2340      	movs	r3, #64	; 0x40
200049e6:	2280      	movs	r2, #128	; 0x80
200049e8:	f7ff fae0 	bl	20003fac <load_sprite>
	game_over_witch2Light = pointer14;
200049ec:	4b5b      	ldr	r3, [pc, #364]	; (20004b5c <initSprites+0x1c8>)
200049ee:	6bba      	ldr	r2, [r7, #56]	; 0x38
200049f0:	601a      	str	r2, [r3, #0]
	sprite *pointer15 = &tempgame_over_witch2Gray;
200049f2:	4b5b      	ldr	r3, [pc, #364]	; (20004b60 <initSprites+0x1cc>)
200049f4:	637b      	str	r3, [r7, #52]	; 0x34
	load_sprite(pointer15, game_over_witch2_gray_bits, game_over_witch2_black_width, game_over_witch2_black_height);
200049f6:	495b      	ldr	r1, [pc, #364]	; (20004b64 <initSprites+0x1d0>)
200049f8:	6b78      	ldr	r0, [r7, #52]	; 0x34
200049fa:	2340      	movs	r3, #64	; 0x40
200049fc:	2280      	movs	r2, #128	; 0x80
200049fe:	f7ff fad5 	bl	20003fac <load_sprite>
	game_over_witch2Gray = pointer15;
20004a02:	4b59      	ldr	r3, [pc, #356]	; (20004b68 <initSprites+0x1d4>)
20004a04:	6b7a      	ldr	r2, [r7, #52]	; 0x34
20004a06:	601a      	str	r2, [r3, #0]
	sprite *pointer16 = &tempgame_over_witch2Black;
20004a08:	4b58      	ldr	r3, [pc, #352]	; (20004b6c <initSprites+0x1d8>)
20004a0a:	633b      	str	r3, [r7, #48]	; 0x30
	load_sprite(pointer16, game_over_witch2_black_bits, game_over_witch2_black_width, game_over_witch2_black_height);
20004a0c:	4958      	ldr	r1, [pc, #352]	; (20004b70 <initSprites+0x1dc>)
20004a0e:	6b38      	ldr	r0, [r7, #48]	; 0x30
20004a10:	2340      	movs	r3, #64	; 0x40
20004a12:	2280      	movs	r2, #128	; 0x80
20004a14:	f7ff faca 	bl	20003fac <load_sprite>
	game_over_witch2Black = pointer16;
20004a18:	4b56      	ldr	r3, [pc, #344]	; (20004b74 <initSprites+0x1e0>)
20004a1a:	6b3a      	ldr	r2, [r7, #48]	; 0x30
20004a1c:	601a      	str	r2, [r3, #0]
	
	
	sprite *finalPointer = &tempgame_over_witch3Light;
20004a1e:	4b56      	ldr	r3, [pc, #344]	; (20004b78 <initSprites+0x1e4>)
20004a20:	62fb      	str	r3, [r7, #44]	; 0x2c
	load_sprite(finalPointer, game_over_witch3_light_bits, game_over_witch3_black_width, game_over_witch3_black_height);
20004a22:	4956      	ldr	r1, [pc, #344]	; (20004b7c <initSprites+0x1e8>)
20004a24:	6af8      	ldr	r0, [r7, #44]	; 0x2c
20004a26:	2340      	movs	r3, #64	; 0x40
20004a28:	2280      	movs	r2, #128	; 0x80
20004a2a:	f7ff fabf 	bl	20003fac <load_sprite>
	game_over_witch3Light = finalPointer;
20004a2e:	4b54      	ldr	r3, [pc, #336]	; (20004b80 <initSprites+0x1ec>)
20004a30:	6afa      	ldr	r2, [r7, #44]	; 0x2c
20004a32:	601a      	str	r2, [r3, #0]
	sprite *pointer17 = &tempgame_over_witch3Gray;
20004a34:	4b53      	ldr	r3, [pc, #332]	; (20004b84 <initSprites+0x1f0>)
20004a36:	62bb      	str	r3, [r7, #40]	; 0x28
	load_sprite(pointer17, game_over_witch3_gray_bits, game_over_witch3_black_width, game_over_witch3_black_height);
20004a38:	4953      	ldr	r1, [pc, #332]	; (20004b88 <initSprites+0x1f4>)
20004a3a:	6ab8      	ldr	r0, [r7, #40]	; 0x28
20004a3c:	2340      	movs	r3, #64	; 0x40
20004a3e:	2280      	movs	r2, #128	; 0x80
20004a40:	f7ff fab4 	bl	20003fac <load_sprite>
	game_over_witch3Gray = pointer17;
20004a44:	4b51      	ldr	r3, [pc, #324]	; (20004b8c <initSprites+0x1f8>)
20004a46:	6aba      	ldr	r2, [r7, #40]	; 0x28
20004a48:	601a      	str	r2, [r3, #0]
	sprite *pointer18 = &tempgame_over_witch3Black;
20004a4a:	4b51      	ldr	r3, [pc, #324]	; (20004b90 <initSprites+0x1fc>)
20004a4c:	627b      	str	r3, [r7, #36]	; 0x24
	load_sprite(pointer18, game_over_witch3_black_bits, game_over_witch3_black_width, game_over_witch3_black_height);
20004a4e:	4951      	ldr	r1, [pc, #324]	; (20004b94 <initSprites+0x200>)
20004a50:	6a78      	ldr	r0, [r7, #36]	; 0x24
20004a52:	2340      	movs	r3, #64	; 0x40
20004a54:	2280      	movs	r2, #128	; 0x80
20004a56:	f7ff faa9 	bl	20003fac <load_sprite>
	game_over_witch3Black = pointer18;	
20004a5a:	4b4f      	ldr	r3, [pc, #316]	; (20004b98 <initSprites+0x204>)
20004a5c:	6a7a      	ldr	r2, [r7, #36]	; 0x24
20004a5e:	601a      	str	r2, [r3, #0]
	
	sprite *pointer19 = &tempgame_over_witch4Light;
20004a60:	4b4e      	ldr	r3, [pc, #312]	; (20004b9c <initSprites+0x208>)
20004a62:	623b      	str	r3, [r7, #32]
	load_sprite(pointer19, game_over_witch4_light_bits, game_over_witch4_black_width, game_over_witch4_black_height);
20004a64:	494e      	ldr	r1, [pc, #312]	; (20004ba0 <initSprites+0x20c>)
20004a66:	6a38      	ldr	r0, [r7, #32]
20004a68:	2340      	movs	r3, #64	; 0x40
20004a6a:	2280      	movs	r2, #128	; 0x80
20004a6c:	f7ff fa9e 	bl	20003fac <load_sprite>
	game_over_witch4Light = pointer19;
20004a70:	4b4c      	ldr	r3, [pc, #304]	; (20004ba4 <initSprites+0x210>)
20004a72:	6a3a      	ldr	r2, [r7, #32]
20004a74:	601a      	str	r2, [r3, #0]
	sprite *pointer20 = &tempgame_over_witch4Gray;
20004a76:	4b4c      	ldr	r3, [pc, #304]	; (20004ba8 <initSprites+0x214>)
20004a78:	61fb      	str	r3, [r7, #28]
	load_sprite(pointer20, game_over_witch4_gray_bits, game_over_witch4_black_width, game_over_witch4_black_height);
20004a7a:	494c      	ldr	r1, [pc, #304]	; (20004bac <initSprites+0x218>)
20004a7c:	69f8      	ldr	r0, [r7, #28]
20004a7e:	2340      	movs	r3, #64	; 0x40
20004a80:	2280      	movs	r2, #128	; 0x80
20004a82:	f7ff fa93 	bl	20003fac <load_sprite>
	game_over_witch4Gray = pointer20;
20004a86:	4b4a      	ldr	r3, [pc, #296]	; (20004bb0 <initSprites+0x21c>)
20004a88:	69fa      	ldr	r2, [r7, #28]
20004a8a:	601a      	str	r2, [r3, #0]
	sprite *pointer21 = &tempgame_over_witch4Black;
20004a8c:	4b49      	ldr	r3, [pc, #292]	; (20004bb4 <initSprites+0x220>)
20004a8e:	61bb      	str	r3, [r7, #24]
	load_sprite(pointer21, game_over_witch4_black_bits, game_over_witch4_black_width, game_over_witch4_black_height);
20004a90:	4949      	ldr	r1, [pc, #292]	; (20004bb8 <initSprites+0x224>)
20004a92:	69b8      	ldr	r0, [r7, #24]
20004a94:	2340      	movs	r3, #64	; 0x40
20004a96:	2280      	movs	r2, #128	; 0x80
20004a98:	f7ff fa88 	bl	20003fac <load_sprite>
	game_over_witch4Black = pointer21;	
20004a9c:	4b47      	ldr	r3, [pc, #284]	; (20004bbc <initSprites+0x228>)
20004a9e:	69ba      	ldr	r2, [r7, #24]
20004aa0:	601a      	str	r2, [r3, #0]
	
	sprite *pointer22 = &tempgame_over_witch5Light;
20004aa2:	4b47      	ldr	r3, [pc, #284]	; (20004bc0 <initSprites+0x22c>)
20004aa4:	617b      	str	r3, [r7, #20]
	load_sprite(pointer22, game_over_witch5_light_bits, game_over_witch5_black_width, game_over_witch5_black_height);
20004aa6:	4947      	ldr	r1, [pc, #284]	; (20004bc4 <initSprites+0x230>)
20004aa8:	6978      	ldr	r0, [r7, #20]
20004aaa:	2340      	movs	r3, #64	; 0x40
20004aac:	2280      	movs	r2, #128	; 0x80
20004aae:	f7ff fa7d 	bl	20003fac <load_sprite>
	game_over_witch5Light = pointer22;
20004ab2:	4b45      	ldr	r3, [pc, #276]	; (20004bc8 <initSprites+0x234>)
20004ab4:	697a      	ldr	r2, [r7, #20]
20004ab6:	601a      	str	r2, [r3, #0]
	sprite *pointer23 = &tempgame_over_witch5Gray;
20004ab8:	4b44      	ldr	r3, [pc, #272]	; (20004bcc <initSprites+0x238>)
20004aba:	613b      	str	r3, [r7, #16]
	load_sprite(pointer23, game_over_witch5_gray_bits, game_over_witch5_black_width, game_over_witch5_black_height);
20004abc:	4944      	ldr	r1, [pc, #272]	; (20004bd0 <initSprites+0x23c>)
20004abe:	6938      	ldr	r0, [r7, #16]
20004ac0:	2340      	movs	r3, #64	; 0x40
20004ac2:	2280      	movs	r2, #128	; 0x80
20004ac4:	f7ff fa72 	bl	20003fac <load_sprite>
	game_over_witch5Gray = pointer23;
20004ac8:	4b42      	ldr	r3, [pc, #264]	; (20004bd4 <initSprites+0x240>)
20004aca:	693a      	ldr	r2, [r7, #16]
20004acc:	601a      	str	r2, [r3, #0]
	sprite *pointer24 = &tempgame_over_witch5Black;
20004ace:	4b42      	ldr	r3, [pc, #264]	; (20004bd8 <initSprites+0x244>)
20004ad0:	60fb      	str	r3, [r7, #12]
	load_sprite(pointer24, game_over_witch5_black_bits, game_over_witch5_black_width, game_over_witch5_black_height);
20004ad2:	4942      	ldr	r1, [pc, #264]	; (20004bdc <initSprites+0x248>)
20004ad4:	68f8      	ldr	r0, [r7, #12]
20004ad6:	2340      	movs	r3, #64	; 0x40
20004ad8:	2280      	movs	r2, #128	; 0x80
20004ada:	f7ff fa67 	bl	20003fac <load_sprite>
	game_over_witch5Black = pointer24;
20004ade:	4b40      	ldr	r3, [pc, #256]	; (20004be0 <initSprites+0x24c>)
20004ae0:	68fa      	ldr	r2, [r7, #12]
20004ae2:	601a      	str	r2, [r3, #0]
	
	sprite *pointer25 = &tempgame_over_witch6Light;
20004ae4:	4b3f      	ldr	r3, [pc, #252]	; (20004be4 <initSprites+0x250>)
20004ae6:	60bb      	str	r3, [r7, #8]
	load_sprite(pointer25, game_over_witch6_light_bits, game_over_witch6_black_width, game_over_witch6_black_height);
20004ae8:	493f      	ldr	r1, [pc, #252]	; (20004be8 <initSprites+0x254>)
20004aea:	68b8      	ldr	r0, [r7, #8]
20004aec:	2340      	movs	r3, #64	; 0x40
20004aee:	2280      	movs	r2, #128	; 0x80
20004af0:	f7ff fa5c 	bl	20003fac <load_sprite>
	game_over_witch6Light = pointer25;
20004af4:	4b3d      	ldr	r3, [pc, #244]	; (20004bec <initSprites+0x258>)
20004af6:	68ba      	ldr	r2, [r7, #8]
20004af8:	601a      	str	r2, [r3, #0]
	sprite *pointer26 = &tempgame_over_witch6Gray;
20004afa:	4b3d      	ldr	r3, [pc, #244]	; (20004bf0 <initSprites+0x25c>)
20004afc:	607b      	str	r3, [r7, #4]
	load_sprite(pointer26, game_over_witch6_gray_bits, game_over_witch6_black_width, game_over_witch6_black_height);
20004afe:	493d      	ldr	r1, [pc, #244]	; (20004bf4 <initSprites+0x260>)
20004b00:	6878      	ldr	r0, [r7, #4]
20004b02:	2340      	movs	r3, #64	; 0x40
20004b04:	2280      	movs	r2, #128	; 0x80
20004b06:	f7ff fa51 	bl	20003fac <load_sprite>
	game_over_witch6Gray = pointer26;
20004b0a:	4b3b      	ldr	r3, [pc, #236]	; (20004bf8 <initSprites+0x264>)
20004b0c:	687a      	ldr	r2, [r7, #4]
20004b0e:	601a      	str	r2, [r3, #0]
	sprite *pointer27 = &tempgame_over_witch6Black;
20004b10:	4b3a      	ldr	r3, [pc, #232]	; (20004bfc <initSprites+0x268>)
20004b12:	603b      	str	r3, [r7, #0]
	load_sprite(pointer27, game_over_witch6_black_bits, game_over_witch6_black_width, game_over_witch6_black_height);
20004b14:	493a      	ldr	r1, [pc, #232]	; (20004c00 <initSprites+0x26c>)
20004b16:	6838      	ldr	r0, [r7, #0]
20004b18:	2340      	movs	r3, #64	; 0x40
20004b1a:	2280      	movs	r2, #128	; 0x80
20004b1c:	f7ff fa46 	bl	20003fac <load_sprite>
	game_over_witch6Black = pointer27;
20004b20:	4b38      	ldr	r3, [pc, #224]	; (20004c04 <initSprites+0x270>)
20004b22:	683a      	ldr	r2, [r7, #0]
20004b24:	601a      	str	r2, [r3, #0]
	load_sprite(pointer, game_over_witch12_gray_bits, game_over_witch12_black_width, game_over_witch12_black_height);
	game_over_witch12Gray = pointer;
	*pointer = &tempgame_over_witch12Black;
	load_sprite(pointer, game_over_witch12_black_bits, game_over_witch12_black_width, game_over_witch12_black_height);
	game_over_witch12Black = pointer;*/
}
20004b26:	46c0      	nop			; (mov r8, r8)
20004b28:	46bd      	mov	sp, r7
20004b2a:	b012      	add	sp, #72	; 0x48
20004b2c:	bd80      	pop	{r7, pc}
20004b2e:	46c0      	nop			; (mov r8, r8)
20004b30:	200079ac 	andcs	r7, r0, ip, lsr #19
20004b34:	2001046c 	andcs	r0, r1, ip, ror #8
20004b38:	20007910 	andcs	r7, r0, r0, lsl r9
20004b3c:	20007974 	andcs	r7, r0, r4, ror r9
20004b40:	2001006c 	andcs	r0, r1, ip, rrx
20004b44:	200079f8 	strdcs	r7, [r0], -r8
20004b48:	200078e8 	andcs	r7, r0, r8, ror #17
20004b4c:	2000fc6c 	andcs	pc, r0, ip, ror #24
20004b50:	200079d8 	ldrdcs	r7, [r0], -r8
20004b54:	20007920 	andcs	r7, r0, r0, lsr #18
20004b58:	2001106c 	andcs	r1, r1, ip, rrx
20004b5c:	200078c0 	andcs	r7, r0, r0, asr #17
20004b60:	20007914 	andcs	r7, r0, r4, lsl r9
20004b64:	20010c6c 	andcs	r0, r1, ip, ror #24
20004b68:	20007998 	mulcs	r0, r8, r9
20004b6c:	20007900 	andcs	r7, r0, r0, lsl #18
20004b70:	2001086c 	andcs	r0, r1, ip, ror #16
20004b74:	200079fc 	strdcs	r7, [r0], -ip
20004b78:	200079c0 	andcs	r7, r0, r0, asr #19
20004b7c:	20011c6c 	andcs	r1, r1, ip, ror #24
20004b80:	200078bc 			; <UNDEFINED> instruction: 0x200078bc
20004b84:	200078d0 	ldrdcs	r7, [r0], -r0
20004b88:	2001186c 	andcs	r1, r1, ip, ror #16
20004b8c:	200079a8 	andcs	r7, r0, r8, lsr #19
20004b90:	200079dc 	ldrdcs	r7, [r0], -ip
20004b94:	2001146c 	andcs	r1, r1, ip, ror #8
20004b98:	20007a2c 	andcs	r7, r0, ip, lsr #20
20004b9c:	20007980 	andcs	r7, r0, r0, lsl #19
20004ba0:	2001286c 	andcs	r2, r1, ip, ror #16
20004ba4:	20007a1c 	andcs	r7, r0, ip, lsl sl
20004ba8:	200078f4 	strdcs	r7, [r0], -r4
20004bac:	2001246c 	andcs	r2, r1, ip, ror #8
20004bb0:	2000790c 	andcs	r7, r0, ip, lsl #18
20004bb4:	20007a3c 	andcs	r7, r0, ip, lsr sl
20004bb8:	2001206c 	andcs	r2, r1, ip, rrx
20004bbc:	200079e8 	andcs	r7, r0, r8, ror #19
20004bc0:	2000799c 	mulcs	r0, ip, r9
20004bc4:	2001346c 	andcs	r3, r1, ip, ror #8
20004bc8:	20007a58 	andcs	r7, r0, r8, asr sl
20004bcc:	20007a48 	andcs	r7, r0, r8, asr #20
20004bd0:	2001306c 	andcs	r3, r1, ip, rrx
20004bd4:	20007a0c 	andcs	r7, r0, ip, lsl #20
20004bd8:	200079cc 	andcs	r7, r0, ip, asr #19
20004bdc:	20012c6c 	andcs	r2, r1, ip, ror #24
20004be0:	200079b8 			; <UNDEFINED> instruction: 0x200079b8
20004be4:	2000798c 	andcs	r7, r0, ip, lsl #19
20004be8:	2001406c 	andcs	r4, r1, ip, rrx
20004bec:	200078b8 			; <UNDEFINED> instruction: 0x200078b8
20004bf0:	20007a10 	andcs	r7, r0, r0, lsl sl
20004bf4:	20013c6c 	andcs	r3, r1, ip, ror #24
20004bf8:	20007a54 	andcs	r7, r0, r4, asr sl
20004bfc:	20007a30 	andcs	r7, r0, r0, lsr sl
20004c00:	2001386c 	andcs	r3, r1, ip, ror #16
20004c04:	200079bc 			; <UNDEFINED> instruction: 0x200079bc

20004c08 <init_game_over_witch>:
	
void init_game_over_witch( GameObject *game_over_witchObj ) {
20004c08:	b590      	push	{r4, r7, lr}
20004c0a:	b083      	sub	sp, #12
20004c0c:	af00      	add	r7, sp, #0
20004c0e:	6078      	str	r0, [r7, #4]
	static int firstTime = 1;
	if (firstTime) {
20004c10:	4b37      	ldr	r3, [pc, #220]	; (20004cf0 <init_game_over_witch+0xe8>)
20004c12:	681b      	ldr	r3, [r3, #0]
20004c14:	2b00      	cmp	r3, #0
20004c16:	d057      	beq.n	20004cc8 <init_game_over_witch+0xc0>
		initSprites();
20004c18:	f7ff febc 	bl	20004994 <initSprites>
		firstTime = 0;			
20004c1c:	4b34      	ldr	r3, [pc, #208]	; (20004cf0 <init_game_over_witch+0xe8>)
20004c1e:	2200      	movs	r2, #0
20004c20:	601a      	str	r2, [r3, #0]

		game_over_witchImages[0] = game_over_witch1Image;
20004c22:	4b34      	ldr	r3, [pc, #208]	; (20004cf4 <init_game_over_witch+0xec>)
20004c24:	4a34      	ldr	r2, [pc, #208]	; (20004cf8 <init_game_over_witch+0xf0>)
20004c26:	ca13      	ldmia	r2!, {r0, r1, r4}
20004c28:	c313      	stmia	r3!, {r0, r1, r4}
		game_over_witchImages[1] = game_over_witch2Image;
20004c2a:	4b32      	ldr	r3, [pc, #200]	; (20004cf4 <init_game_over_witch+0xec>)
20004c2c:	4a33      	ldr	r2, [pc, #204]	; (20004cfc <init_game_over_witch+0xf4>)
20004c2e:	330c      	adds	r3, #12
20004c30:	ca13      	ldmia	r2!, {r0, r1, r4}
20004c32:	c313      	stmia	r3!, {r0, r1, r4}
		game_over_witchImages[2] = game_over_witch3Image;
20004c34:	4b2f      	ldr	r3, [pc, #188]	; (20004cf4 <init_game_over_witch+0xec>)
20004c36:	4a32      	ldr	r2, [pc, #200]	; (20004d00 <init_game_over_witch+0xf8>)
20004c38:	3318      	adds	r3, #24
20004c3a:	ca13      	ldmia	r2!, {r0, r1, r4}
20004c3c:	c313      	stmia	r3!, {r0, r1, r4}
		game_over_witchImages[3] = game_over_witch4Image;
20004c3e:	4b2d      	ldr	r3, [pc, #180]	; (20004cf4 <init_game_over_witch+0xec>)
20004c40:	4a30      	ldr	r2, [pc, #192]	; (20004d04 <init_game_over_witch+0xfc>)
20004c42:	3324      	adds	r3, #36	; 0x24
20004c44:	ca13      	ldmia	r2!, {r0, r1, r4}
20004c46:	c313      	stmia	r3!, {r0, r1, r4}
		game_over_witchImages[4] = game_over_witch5Image;
20004c48:	4b2a      	ldr	r3, [pc, #168]	; (20004cf4 <init_game_over_witch+0xec>)
20004c4a:	4a2f      	ldr	r2, [pc, #188]	; (20004d08 <init_game_over_witch+0x100>)
20004c4c:	3330      	adds	r3, #48	; 0x30
20004c4e:	ca13      	ldmia	r2!, {r0, r1, r4}
20004c50:	c313      	stmia	r3!, {r0, r1, r4}
		game_over_witchImages[5] = game_over_witch6Image;
20004c52:	4b28      	ldr	r3, [pc, #160]	; (20004cf4 <init_game_over_witch+0xec>)
20004c54:	4a2d      	ldr	r2, [pc, #180]	; (20004d0c <init_game_over_witch+0x104>)
20004c56:	333c      	adds	r3, #60	; 0x3c
20004c58:	ca13      	ldmia	r2!, {r0, r1, r4}
20004c5a:	c313      	stmia	r3!, {r0, r1, r4}
		game_over_witchImages[8] = game_over_witch9Image;
		game_over_witchImages[9] = game_over_witch10Image;
		game_over_witchImages[10] = game_over_witch11Image;
		game_over_witchImages[11] = game_over_witch12Image;*/
		
		load_image(&game_over_witchImages[0], game_over_witch1Black, game_over_witch1Gray, game_over_witch1Light);
20004c5c:	4b2c      	ldr	r3, [pc, #176]	; (20004d10 <init_game_over_witch+0x108>)
20004c5e:	6819      	ldr	r1, [r3, #0]
20004c60:	4b2c      	ldr	r3, [pc, #176]	; (20004d14 <init_game_over_witch+0x10c>)
20004c62:	681a      	ldr	r2, [r3, #0]
20004c64:	4b2c      	ldr	r3, [pc, #176]	; (20004d18 <init_game_over_witch+0x110>)
20004c66:	681b      	ldr	r3, [r3, #0]
20004c68:	4822      	ldr	r0, [pc, #136]	; (20004cf4 <init_game_over_witch+0xec>)
20004c6a:	f7ff f98b 	bl	20003f84 <load_image>
		load_image(&game_over_witchImages[1], game_over_witch2Black, game_over_witch2Gray, game_over_witch2Light);
20004c6e:	4b2b      	ldr	r3, [pc, #172]	; (20004d1c <init_game_over_witch+0x114>)
20004c70:	6819      	ldr	r1, [r3, #0]
20004c72:	4b2b      	ldr	r3, [pc, #172]	; (20004d20 <init_game_over_witch+0x118>)
20004c74:	681a      	ldr	r2, [r3, #0]
20004c76:	4b2b      	ldr	r3, [pc, #172]	; (20004d24 <init_game_over_witch+0x11c>)
20004c78:	681b      	ldr	r3, [r3, #0]
20004c7a:	482b      	ldr	r0, [pc, #172]	; (20004d28 <init_game_over_witch+0x120>)
20004c7c:	f7ff f982 	bl	20003f84 <load_image>
		load_image(&game_over_witchImages[2], game_over_witch3Black, game_over_witch3Gray, game_over_witch3Light);
20004c80:	4b2a      	ldr	r3, [pc, #168]	; (20004d2c <init_game_over_witch+0x124>)
20004c82:	6819      	ldr	r1, [r3, #0]
20004c84:	4b2a      	ldr	r3, [pc, #168]	; (20004d30 <init_game_over_witch+0x128>)
20004c86:	681a      	ldr	r2, [r3, #0]
20004c88:	4b2a      	ldr	r3, [pc, #168]	; (20004d34 <init_game_over_witch+0x12c>)
20004c8a:	681b      	ldr	r3, [r3, #0]
20004c8c:	482a      	ldr	r0, [pc, #168]	; (20004d38 <init_game_over_witch+0x130>)
20004c8e:	f7ff f979 	bl	20003f84 <load_image>
		load_image(&game_over_witchImages[3], game_over_witch4Black, game_over_witch4Gray, game_over_witch4Light);
20004c92:	4b2a      	ldr	r3, [pc, #168]	; (20004d3c <init_game_over_witch+0x134>)
20004c94:	6819      	ldr	r1, [r3, #0]
20004c96:	4b2a      	ldr	r3, [pc, #168]	; (20004d40 <init_game_over_witch+0x138>)
20004c98:	681a      	ldr	r2, [r3, #0]
20004c9a:	4b2a      	ldr	r3, [pc, #168]	; (20004d44 <init_game_over_witch+0x13c>)
20004c9c:	681b      	ldr	r3, [r3, #0]
20004c9e:	482a      	ldr	r0, [pc, #168]	; (20004d48 <init_game_over_witch+0x140>)
20004ca0:	f7ff f970 	bl	20003f84 <load_image>
		load_image(&game_over_witchImages[4], game_over_witch5Black, game_over_witch5Gray, game_over_witch5Light);
20004ca4:	4b29      	ldr	r3, [pc, #164]	; (20004d4c <init_game_over_witch+0x144>)
20004ca6:	6819      	ldr	r1, [r3, #0]
20004ca8:	4b29      	ldr	r3, [pc, #164]	; (20004d50 <init_game_over_witch+0x148>)
20004caa:	681a      	ldr	r2, [r3, #0]
20004cac:	4b29      	ldr	r3, [pc, #164]	; (20004d54 <init_game_over_witch+0x14c>)
20004cae:	681b      	ldr	r3, [r3, #0]
20004cb0:	4829      	ldr	r0, [pc, #164]	; (20004d58 <init_game_over_witch+0x150>)
20004cb2:	f7ff f967 	bl	20003f84 <load_image>
		load_image(&game_over_witchImages[5], game_over_witch6Black, game_over_witch6Gray, game_over_witch6Light);
20004cb6:	4b29      	ldr	r3, [pc, #164]	; (20004d5c <init_game_over_witch+0x154>)
20004cb8:	6819      	ldr	r1, [r3, #0]
20004cba:	4b29      	ldr	r3, [pc, #164]	; (20004d60 <init_game_over_witch+0x158>)
20004cbc:	681a      	ldr	r2, [r3, #0]
20004cbe:	4b29      	ldr	r3, [pc, #164]	; (20004d64 <init_game_over_witch+0x15c>)
20004cc0:	681b      	ldr	r3, [r3, #0]
20004cc2:	4829      	ldr	r0, [pc, #164]	; (20004d68 <init_game_over_witch+0x160>)
20004cc4:	f7ff f95e 	bl	20003f84 <load_image>
		load_image(&game_over_witchImages[9], game_over_witch10Black, game_over_witch10Gray, game_over_witch10Light);
		load_image(&game_over_witchImages[10], game_over_witch11Black, game_over_witch11Gray, game_over_witch11Light);
		load_image(&game_over_witchImages[11], game_over_witch12Black, game_over_witch12Gray, game_over_witch12Light);*/
	}
	
	game_over_witchObj->images = game_over_witchImages;
20004cc8:	687b      	ldr	r3, [r7, #4]
20004cca:	4a0a      	ldr	r2, [pc, #40]	; (20004cf4 <init_game_over_witch+0xec>)
20004ccc:	601a      	str	r2, [r3, #0]

	game_over_witchObj->current_frame = 0;
20004cce:	687b      	ldr	r3, [r7, #4]
20004cd0:	2200      	movs	r2, #0
20004cd2:	615a      	str	r2, [r3, #20]
	game_over_witchObj->n_frames = 6;
20004cd4:	687b      	ldr	r3, [r7, #4]
20004cd6:	2206      	movs	r2, #6
20004cd8:	619a      	str	r2, [r3, #24]
	game_over_witchObj->animation_speed = 1;
20004cda:	687b      	ldr	r3, [r7, #4]
20004cdc:	2201      	movs	r2, #1
20004cde:	61da      	str	r2, [r3, #28]
	game_over_witchObj->animation_counter = 0;
20004ce0:	687b      	ldr	r3, [r7, #4]
20004ce2:	2200      	movs	r2, #0
20004ce4:	621a      	str	r2, [r3, #32]
}
20004ce6:	46c0      	nop			; (mov r8, r8)
20004ce8:	46bd      	mov	sp, r7
20004cea:	b003      	add	sp, #12
20004cec:	bd90      	pop	{r4, r7, pc}
20004cee:	46c0      	nop			; (mov r8, r8)
20004cf0:	2001446c 	andcs	r4, r1, ip, ror #8
20004cf4:	2000792c 	andcs	r7, r0, ip, lsr #18
20004cf8:	20007a00 	andcs	r7, r0, r0, lsl #20
20004cfc:	200078dc 	ldrdcs	r7, [r0], -ip
20004d00:	20007a20 	andcs	r7, r0, r0, lsr #20
20004d04:	200079ec 	andcs	r7, r0, ip, ror #19
20004d08:	200078c4 	andcs	r7, r0, r4, asr #17
20004d0c:	200078ac 	andcs	r7, r0, ip, lsr #17
20004d10:	200079d8 	ldrdcs	r7, [r0], -r8
20004d14:	200079f8 	strdcs	r7, [r0], -r8
20004d18:	20007910 	andcs	r7, r0, r0, lsl r9
20004d1c:	200079fc 	strdcs	r7, [r0], -ip
20004d20:	20007998 	mulcs	r0, r8, r9
20004d24:	200078c0 	andcs	r7, r0, r0, asr #17
20004d28:	20007938 	andcs	r7, r0, r8, lsr r9
20004d2c:	20007a2c 	andcs	r7, r0, ip, lsr #20
20004d30:	200079a8 	andcs	r7, r0, r8, lsr #19
20004d34:	200078bc 			; <UNDEFINED> instruction: 0x200078bc
20004d38:	20007944 	andcs	r7, r0, r4, asr #18
20004d3c:	200079e8 	andcs	r7, r0, r8, ror #19
20004d40:	2000790c 	andcs	r7, r0, ip, lsl #18
20004d44:	20007a1c 	andcs	r7, r0, ip, lsl sl
20004d48:	20007950 	andcs	r7, r0, r0, asr r9
20004d4c:	200079b8 			; <UNDEFINED> instruction: 0x200079b8
20004d50:	20007a0c 	andcs	r7, r0, ip, lsl #20
20004d54:	20007a58 	andcs	r7, r0, r8, asr sl
20004d58:	2000795c 	andcs	r7, r0, ip, asr r9
20004d5c:	200079bc 			; <UNDEFINED> instruction: 0x200079bc
20004d60:	20007a54 	andcs	r7, r0, r4, asr sl
20004d64:	200078b8 			; <UNDEFINED> instruction: 0x200078b8
20004d68:	20007968 	andcs	r7, r0, r8, ror #18

20004d6c <__divsi3>:
20004d6c:	4603      	mov	r3, r0
20004d6e:	430b      	orrs	r3, r1
20004d70:	d47f      	bmi.n	20004e72 <__divsi3+0x106>
20004d72:	2200      	movs	r2, #0
20004d74:	0843      	lsrs	r3, r0, #1
20004d76:	428b      	cmp	r3, r1
20004d78:	d374      	bcc.n	20004e64 <__divsi3+0xf8>
20004d7a:	0903      	lsrs	r3, r0, #4
20004d7c:	428b      	cmp	r3, r1
20004d7e:	d35f      	bcc.n	20004e40 <__divsi3+0xd4>
20004d80:	0a03      	lsrs	r3, r0, #8
20004d82:	428b      	cmp	r3, r1
20004d84:	d344      	bcc.n	20004e10 <__divsi3+0xa4>
20004d86:	0b03      	lsrs	r3, r0, #12
20004d88:	428b      	cmp	r3, r1
20004d8a:	d328      	bcc.n	20004dde <__divsi3+0x72>
20004d8c:	0c03      	lsrs	r3, r0, #16
20004d8e:	428b      	cmp	r3, r1
20004d90:	d30d      	bcc.n	20004dae <__divsi3+0x42>
20004d92:	22ff      	movs	r2, #255	; 0xff
20004d94:	0209      	lsls	r1, r1, #8
20004d96:	ba12      	rev	r2, r2
20004d98:	0c03      	lsrs	r3, r0, #16
20004d9a:	428b      	cmp	r3, r1
20004d9c:	d302      	bcc.n	20004da4 <__divsi3+0x38>
20004d9e:	1212      	asrs	r2, r2, #8
20004da0:	0209      	lsls	r1, r1, #8
20004da2:	d065      	beq.n	20004e70 <__divsi3+0x104>
20004da4:	0b03      	lsrs	r3, r0, #12
20004da6:	428b      	cmp	r3, r1
20004da8:	d319      	bcc.n	20004dde <__divsi3+0x72>
20004daa:	e000      	b.n	20004dae <__divsi3+0x42>
20004dac:	0a09      	lsrs	r1, r1, #8
20004dae:	0bc3      	lsrs	r3, r0, #15
20004db0:	428b      	cmp	r3, r1
20004db2:	d301      	bcc.n	20004db8 <__divsi3+0x4c>
20004db4:	03cb      	lsls	r3, r1, #15
20004db6:	1ac0      	subs	r0, r0, r3
20004db8:	4152      	adcs	r2, r2
20004dba:	0b83      	lsrs	r3, r0, #14
20004dbc:	428b      	cmp	r3, r1
20004dbe:	d301      	bcc.n	20004dc4 <__divsi3+0x58>
20004dc0:	038b      	lsls	r3, r1, #14
20004dc2:	1ac0      	subs	r0, r0, r3
20004dc4:	4152      	adcs	r2, r2
20004dc6:	0b43      	lsrs	r3, r0, #13
20004dc8:	428b      	cmp	r3, r1
20004dca:	d301      	bcc.n	20004dd0 <__divsi3+0x64>
20004dcc:	034b      	lsls	r3, r1, #13
20004dce:	1ac0      	subs	r0, r0, r3
20004dd0:	4152      	adcs	r2, r2
20004dd2:	0b03      	lsrs	r3, r0, #12
20004dd4:	428b      	cmp	r3, r1
20004dd6:	d301      	bcc.n	20004ddc <__divsi3+0x70>
20004dd8:	030b      	lsls	r3, r1, #12
20004dda:	1ac0      	subs	r0, r0, r3
20004ddc:	4152      	adcs	r2, r2
20004dde:	0ac3      	lsrs	r3, r0, #11
20004de0:	428b      	cmp	r3, r1
20004de2:	d301      	bcc.n	20004de8 <__divsi3+0x7c>
20004de4:	02cb      	lsls	r3, r1, #11
20004de6:	1ac0      	subs	r0, r0, r3
20004de8:	4152      	adcs	r2, r2
20004dea:	0a83      	lsrs	r3, r0, #10
20004dec:	428b      	cmp	r3, r1
20004dee:	d301      	bcc.n	20004df4 <__divsi3+0x88>
20004df0:	028b      	lsls	r3, r1, #10
20004df2:	1ac0      	subs	r0, r0, r3
20004df4:	4152      	adcs	r2, r2
20004df6:	0a43      	lsrs	r3, r0, #9
20004df8:	428b      	cmp	r3, r1
20004dfa:	d301      	bcc.n	20004e00 <__divsi3+0x94>
20004dfc:	024b      	lsls	r3, r1, #9
20004dfe:	1ac0      	subs	r0, r0, r3
20004e00:	4152      	adcs	r2, r2
20004e02:	0a03      	lsrs	r3, r0, #8
20004e04:	428b      	cmp	r3, r1
20004e06:	d301      	bcc.n	20004e0c <__divsi3+0xa0>
20004e08:	020b      	lsls	r3, r1, #8
20004e0a:	1ac0      	subs	r0, r0, r3
20004e0c:	4152      	adcs	r2, r2
20004e0e:	d2cd      	bcs.n	20004dac <__divsi3+0x40>
20004e10:	09c3      	lsrs	r3, r0, #7
20004e12:	428b      	cmp	r3, r1
20004e14:	d301      	bcc.n	20004e1a <__divsi3+0xae>
20004e16:	01cb      	lsls	r3, r1, #7
20004e18:	1ac0      	subs	r0, r0, r3
20004e1a:	4152      	adcs	r2, r2
20004e1c:	0983      	lsrs	r3, r0, #6
20004e1e:	428b      	cmp	r3, r1
20004e20:	d301      	bcc.n	20004e26 <__divsi3+0xba>
20004e22:	018b      	lsls	r3, r1, #6
20004e24:	1ac0      	subs	r0, r0, r3
20004e26:	4152      	adcs	r2, r2
20004e28:	0943      	lsrs	r3, r0, #5
20004e2a:	428b      	cmp	r3, r1
20004e2c:	d301      	bcc.n	20004e32 <__divsi3+0xc6>
20004e2e:	014b      	lsls	r3, r1, #5
20004e30:	1ac0      	subs	r0, r0, r3
20004e32:	4152      	adcs	r2, r2
20004e34:	0903      	lsrs	r3, r0, #4
20004e36:	428b      	cmp	r3, r1
20004e38:	d301      	bcc.n	20004e3e <__divsi3+0xd2>
20004e3a:	010b      	lsls	r3, r1, #4
20004e3c:	1ac0      	subs	r0, r0, r3
20004e3e:	4152      	adcs	r2, r2
20004e40:	08c3      	lsrs	r3, r0, #3
20004e42:	428b      	cmp	r3, r1
20004e44:	d301      	bcc.n	20004e4a <__divsi3+0xde>
20004e46:	00cb      	lsls	r3, r1, #3
20004e48:	1ac0      	subs	r0, r0, r3
20004e4a:	4152      	adcs	r2, r2
20004e4c:	0883      	lsrs	r3, r0, #2
20004e4e:	428b      	cmp	r3, r1
20004e50:	d301      	bcc.n	20004e56 <__divsi3+0xea>
20004e52:	008b      	lsls	r3, r1, #2
20004e54:	1ac0      	subs	r0, r0, r3
20004e56:	4152      	adcs	r2, r2
20004e58:	0843      	lsrs	r3, r0, #1
20004e5a:	428b      	cmp	r3, r1
20004e5c:	d301      	bcc.n	20004e62 <__divsi3+0xf6>
20004e5e:	004b      	lsls	r3, r1, #1
20004e60:	1ac0      	subs	r0, r0, r3
20004e62:	4152      	adcs	r2, r2
20004e64:	1a41      	subs	r1, r0, r1
20004e66:	d200      	bcs.n	20004e6a <__divsi3+0xfe>
20004e68:	4601      	mov	r1, r0
20004e6a:	4152      	adcs	r2, r2
20004e6c:	4610      	mov	r0, r2
20004e6e:	4770      	bx	lr
20004e70:	e05d      	b.n	20004f2e <__divsi3+0x1c2>
20004e72:	0fca      	lsrs	r2, r1, #31
20004e74:	d000      	beq.n	20004e78 <__divsi3+0x10c>
20004e76:	4249      	negs	r1, r1
20004e78:	1003      	asrs	r3, r0, #32
20004e7a:	d300      	bcc.n	20004e7e <__divsi3+0x112>
20004e7c:	4240      	negs	r0, r0
20004e7e:	4053      	eors	r3, r2
20004e80:	2200      	movs	r2, #0
20004e82:	469c      	mov	ip, r3
20004e84:	0903      	lsrs	r3, r0, #4
20004e86:	428b      	cmp	r3, r1
20004e88:	d32d      	bcc.n	20004ee6 <__divsi3+0x17a>
20004e8a:	0a03      	lsrs	r3, r0, #8
20004e8c:	428b      	cmp	r3, r1
20004e8e:	d312      	bcc.n	20004eb6 <__divsi3+0x14a>
20004e90:	22fc      	movs	r2, #252	; 0xfc
20004e92:	0189      	lsls	r1, r1, #6
20004e94:	ba12      	rev	r2, r2
20004e96:	0a03      	lsrs	r3, r0, #8
20004e98:	428b      	cmp	r3, r1
20004e9a:	d30c      	bcc.n	20004eb6 <__divsi3+0x14a>
20004e9c:	0189      	lsls	r1, r1, #6
20004e9e:	1192      	asrs	r2, r2, #6
20004ea0:	428b      	cmp	r3, r1
20004ea2:	d308      	bcc.n	20004eb6 <__divsi3+0x14a>
20004ea4:	0189      	lsls	r1, r1, #6
20004ea6:	1192      	asrs	r2, r2, #6
20004ea8:	428b      	cmp	r3, r1
20004eaa:	d304      	bcc.n	20004eb6 <__divsi3+0x14a>
20004eac:	0189      	lsls	r1, r1, #6
20004eae:	d03a      	beq.n	20004f26 <__divsi3+0x1ba>
20004eb0:	1192      	asrs	r2, r2, #6
20004eb2:	e000      	b.n	20004eb6 <__divsi3+0x14a>
20004eb4:	0989      	lsrs	r1, r1, #6
20004eb6:	09c3      	lsrs	r3, r0, #7
20004eb8:	428b      	cmp	r3, r1
20004eba:	d301      	bcc.n	20004ec0 <__divsi3+0x154>
20004ebc:	01cb      	lsls	r3, r1, #7
20004ebe:	1ac0      	subs	r0, r0, r3
20004ec0:	4152      	adcs	r2, r2
20004ec2:	0983      	lsrs	r3, r0, #6
20004ec4:	428b      	cmp	r3, r1
20004ec6:	d301      	bcc.n	20004ecc <__divsi3+0x160>
20004ec8:	018b      	lsls	r3, r1, #6
20004eca:	1ac0      	subs	r0, r0, r3
20004ecc:	4152      	adcs	r2, r2
20004ece:	0943      	lsrs	r3, r0, #5
20004ed0:	428b      	cmp	r3, r1
20004ed2:	d301      	bcc.n	20004ed8 <__divsi3+0x16c>
20004ed4:	014b      	lsls	r3, r1, #5
20004ed6:	1ac0      	subs	r0, r0, r3
20004ed8:	4152      	adcs	r2, r2
20004eda:	0903      	lsrs	r3, r0, #4
20004edc:	428b      	cmp	r3, r1
20004ede:	d301      	bcc.n	20004ee4 <__divsi3+0x178>
20004ee0:	010b      	lsls	r3, r1, #4
20004ee2:	1ac0      	subs	r0, r0, r3
20004ee4:	4152      	adcs	r2, r2
20004ee6:	08c3      	lsrs	r3, r0, #3
20004ee8:	428b      	cmp	r3, r1
20004eea:	d301      	bcc.n	20004ef0 <__divsi3+0x184>
20004eec:	00cb      	lsls	r3, r1, #3
20004eee:	1ac0      	subs	r0, r0, r3
20004ef0:	4152      	adcs	r2, r2
20004ef2:	0883      	lsrs	r3, r0, #2
20004ef4:	428b      	cmp	r3, r1
20004ef6:	d301      	bcc.n	20004efc <__divsi3+0x190>
20004ef8:	008b      	lsls	r3, r1, #2
20004efa:	1ac0      	subs	r0, r0, r3
20004efc:	4152      	adcs	r2, r2
20004efe:	d2d9      	bcs.n	20004eb4 <__divsi3+0x148>
20004f00:	0843      	lsrs	r3, r0, #1
20004f02:	428b      	cmp	r3, r1
20004f04:	d301      	bcc.n	20004f0a <__divsi3+0x19e>
20004f06:	004b      	lsls	r3, r1, #1
20004f08:	1ac0      	subs	r0, r0, r3
20004f0a:	4152      	adcs	r2, r2
20004f0c:	1a41      	subs	r1, r0, r1
20004f0e:	d200      	bcs.n	20004f12 <__divsi3+0x1a6>
20004f10:	4601      	mov	r1, r0
20004f12:	4663      	mov	r3, ip
20004f14:	4152      	adcs	r2, r2
20004f16:	105b      	asrs	r3, r3, #1
20004f18:	4610      	mov	r0, r2
20004f1a:	d301      	bcc.n	20004f20 <__divsi3+0x1b4>
20004f1c:	4240      	negs	r0, r0
20004f1e:	2b00      	cmp	r3, #0
20004f20:	d500      	bpl.n	20004f24 <__divsi3+0x1b8>
20004f22:	4249      	negs	r1, r1
20004f24:	4770      	bx	lr
20004f26:	4663      	mov	r3, ip
20004f28:	105b      	asrs	r3, r3, #1
20004f2a:	d300      	bcc.n	20004f2e <__divsi3+0x1c2>
20004f2c:	4240      	negs	r0, r0
20004f2e:	b501      	push	{r0, lr}
20004f30:	2000      	movs	r0, #0
20004f32:	f000 f805 	bl	20004f40 <__aeabi_idiv0>
20004f36:	bd02      	pop	{r1, pc}

20004f38 <__aeabi_idivmod>:
20004f38:	2900      	cmp	r1, #0
20004f3a:	d0f8      	beq.n	20004f2e <__divsi3+0x1c2>
20004f3c:	e716      	b.n	20004d6c <__divsi3>
20004f3e:	4770      	bx	lr

20004f40 <__aeabi_idiv0>:
20004f40:	4770      	bx	lr
20004f42:	46c0      	nop			; (mov r8, r8)

20004f44 <counter>:
20004f44:	00000000 	andeq	r0, r0, r0

20004f48 <i.4324>:
20004f48:	00000000 	andeq	r0, r0, r0

20004f4c <j.4330>:
20004f4c:	00000000 	andeq	r0, r0, r0

20004f50 <distance_player_fire.4329>:
20004f50:	00000000 	andeq	r0, r0, r0

20004f54 <distance_hair_trophy.4335>:
20004f54:	00000000 	andeq	r0, r0, r0

20004f58 <trophy_burned.4334>:
20004f58:	00000000 	andeq	r0, r0, r0

20004f5c <distance_hair_DIP.4337>:
20004f5c:	00000000 	andeq	r0, r0, r0

20004f60 <DIP_burned.4336>:
20004f60:	00000000 	andeq	r0, r0, r0

20004f64 <test.4339>:
20004f64:	00000000 	andeq	r0, r0, r0

20004f68 <nGameObjects>:
20004f68:	00000000 	andeq	r0, r0, r0

20004f6c <lastJumpValue>:
20004f6c:	00000000 	andeq	r0, r0, r0

20004f70 <lastRightValue>:
20004f70:	00000000 	andeq	r0, r0, r0

20004f74 <lastLeftValue>:
20004f74:	00000000 	andeq	r0, r0, r0

20004f78 <xSpeed>:
20004f78:	00000000 	andeq	r0, r0, r0

20004f7c <ySpeed>:
20004f7c:	00000000 	andeq	r0, r0, r0

20004f80 <playerPositionX>:
20004f80:	00000000 	andeq	r0, r0, r0

20004f84 <playerPositionY>:
20004f84:	00000000 	andeq	r0, r0, r0

20004f88 <counter.4152>:
20004f88:	00000000 	andeq	r0, r0, r0

20004f8c <isRunning.4154>:
20004f8c:	00000000 	andeq	r0, r0, r0

20004f90 <monster>:
20004f90:	00000000 	andeq	r0, r0, r0

20004f94 <tempCastleBlack>:
	...

20004fa0 <tempPressGray>:
	...

20004fac <tempTitleGray>:
	...

20004fb8 <castleBlack>:
20004fb8:	00000000 	andeq	r0, r0, r0

20004fbc <tempMonster>:
	...

20004fc8 <pressLight>:
20004fc8:	00000000 	andeq	r0, r0, r0

20004fcc <tempTitleBlack>:
	...

20004fd8 <bg>:
20004fd8:	00000000 	andeq	r0, r0, r0

20004fdc <tempMonsterGray>:
	...

20004fe8 <tempTitleLight>:
	...

20004ff4 <castleLight>:
20004ff4:	00000000 	andeq	r0, r0, r0

20004ff8 <tempPressLight>:
	...

20005004 <tempCastleLight>:
	...

20005010 <pressGray>:
20005010:	00000000 	andeq	r0, r0, r0

20005014 <tempMonsterLight>:
	...

20005020 <tempPressBlack>:
	...

2000502c <titleGray>:
2000502c:	00000000 	andeq	r0, r0, r0

20005030 <tempCastleGray>:
	...

2000503c <monsterLight>:
2000503c:	00000000 	andeq	r0, r0, r0

20005040 <titleLight>:
20005040:	00000000 	andeq	r0, r0, r0

20005044 <castleGray>:
20005044:	00000000 	andeq	r0, r0, r0

20005048 <random_seed>:
20005048:	00000000 	andeq	r0, r0, r0

2000504c <pressBlack>:
2000504c:	00000000 	andeq	r0, r0, r0

20005050 <monsterGray>:
20005050:	00000000 	andeq	r0, r0, r0

20005054 <tempBg>:
	...

20005060 <titleBlack>:
20005060:	00000000 	andeq	r0, r0, r0

20005064 <gameObjects>:
	...

200051f4 <fire1Light>:
200051f4:	00000000 	andeq	r0, r0, r0

200051f8 <tempFire3Light>:
	...

20005204 <fire3Gray>:
20005204:	00000000 	andeq	r0, r0, r0

20005208 <tempFire4Gray>:
	...

20005214 <fire2Image>:
	...

20005220 <tempFire2Gray>:
	...

2000522c <tempFireBlack>:
	...

20005238 <fire3Image>:
	...

20005244 <tempFire4Light>:
	...

20005250 <fire1Image>:
	...

2000525c <fire4Light>:
2000525c:	00000000 	andeq	r0, r0, r0

20005260 <fireObj>:
	...

20005284 <fire5Image>:
	...

20005290 <fireImages>:
	...

200052cc <tempFire5Gray>:
	...

200052d8 <tempFire3Gray>:
	...

200052e4 <fire4Image>:
	...

200052f0 <fire4Gray>:
200052f0:	00000000 	andeq	r0, r0, r0

200052f4 <tempFire1Light>:
	...

20005300 <tempFire5Light>:
	...

2000530c <fire5Gray>:
2000530c:	00000000 	andeq	r0, r0, r0

20005310 <fire2Light>:
20005310:	00000000 	andeq	r0, r0, r0

20005314 <fire5Light>:
20005314:	00000000 	andeq	r0, r0, r0

20005318 <tempFire1Gray>:
	...

20005324 <fireBlack>:
20005324:	00000000 	andeq	r0, r0, r0

20005328 <tempFire2Light>:
	...

20005334 <fire3Light>:
20005334:	00000000 	andeq	r0, r0, r0

20005338 <fire2Gray>:
20005338:	00000000 	andeq	r0, r0, r0

2000533c <fire1Gray>:
2000533c:	00000000 	andeq	r0, r0, r0

20005340 <bird4Light>:
20005340:	00000000 	andeq	r0, r0, r0

20005344 <bird1Gray>:
20005344:	00000000 	andeq	r0, r0, r0

20005348 <bird6Image>:
	...

20005354 <bird5Black>:
20005354:	00000000 	andeq	r0, r0, r0

20005358 <tempBird4Black>:
	...

20005364 <bird2Image>:
	...

20005370 <birdObj>:
	...

20005394 <bird1Image>:
	...

200053a0 <bird3Black>:
200053a0:	00000000 	andeq	r0, r0, r0

200053a4 <bird4Gray>:
200053a4:	00000000 	andeq	r0, r0, r0

200053a8 <bird2Black>:
200053a8:	00000000 	andeq	r0, r0, r0

200053ac <bird1Black>:
200053ac:	00000000 	andeq	r0, r0, r0

200053b0 <bird4Image>:
	...

200053bc <tempBirdBlack>:
	...

200053c8 <bird3Gray>:
200053c8:	00000000 	andeq	r0, r0, r0

200053cc <tempBirdGray>:
	...

200053d8 <bird5Gray>:
200053d8:	00000000 	andeq	r0, r0, r0

200053dc <tempBird5Light>:
	...

200053e8 <tempBird2Gray>:
	...

200053f4 <bird3Light>:
200053f4:	00000000 	andeq	r0, r0, r0

200053f8 <tempBird5Gray>:
	...

20005404 <tempBird5Black>:
	...

20005410 <bird5Image>:
	...

2000541c <bird5Light>:
2000541c:	00000000 	andeq	r0, r0, r0

20005420 <tempBird3Black>:
	...

2000542c <bird2Gray>:
2000542c:	00000000 	andeq	r0, r0, r0

20005430 <tempBirdLight>:
	...

2000543c <bird1Light>:
2000543c:	00000000 	andeq	r0, r0, r0

20005440 <tempBird2Light>:
	...

2000544c <bird3Image>:
	...

20005458 <tempBird4Light>:
	...

20005464 <tempBird3Light>:
	...

20005470 <tempBird3Gray>:
	...

2000547c <birdImages>:
	...

200054c4 <bird4Black>:
200054c4:	00000000 	andeq	r0, r0, r0

200054c8 <tempBird2Black>:
	...

200054d4 <tempBird4Gray>:
	...

200054e0 <bird2Light>:
200054e0:	00000000 	andeq	r0, r0, r0

200054e4 <witch1Gray>:
200054e4:	00000000 	andeq	r0, r0, r0

200054e8 <witch2Light>:
200054e8:	00000000 	andeq	r0, r0, r0

200054ec <witchImages>:
	...

2000551c <witch2Image>:
	...

20005528 <tempWitch2Black>:
	...

20005534 <tempWitchBlack>:
	...

20005540 <tempWitch3Light>:
	...

2000554c <witch4Image>:
	...

20005558 <witch2Gray>:
20005558:	00000000 	andeq	r0, r0, r0

2000555c <tempWitchGray>:
	...

20005568 <tempWitch3Black>:
	...

20005574 <tempWitch2Gray>:
	...

20005580 <witch3Black>:
20005580:	00000000 	andeq	r0, r0, r0

20005584 <witchObj>:
	...

200055a8 <witch3Light>:
200055a8:	00000000 	andeq	r0, r0, r0

200055ac <tempWitch3Gray>:
	...

200055b8 <witch1Black>:
200055b8:	00000000 	andeq	r0, r0, r0

200055bc <witch3Gray>:
200055bc:	00000000 	andeq	r0, r0, r0

200055c0 <witch1Image>:
	...

200055cc <tempWitchLight>:
	...

200055d8 <tempWitch2Light>:
	...

200055e4 <witch1Light>:
200055e4:	00000000 	andeq	r0, r0, r0

200055e8 <witch3Image>:
	...

200055f4 <witch2Black>:
200055f4:	00000000 	andeq	r0, r0, r0

200055f8 <DIPObj>:
	...

2000561c <DIP2Image>:
	...

20005628 <DIP2Gray>:
20005628:	00000000 	andeq	r0, r0, r0

2000562c <tempDIP2Gray>:
	...

20005638 <DIP3Black>:
20005638:	00000000 	andeq	r0, r0, r0

2000563c <DIP1Black>:
2000563c:	00000000 	andeq	r0, r0, r0

20005640 <tempDIPLight>:
	...

2000564c <tempDIP3Light>:
	...

20005658 <DIPImages>:
	...

20005688 <tempDIP2Black>:
	...

20005694 <DIP3Image>:
	...

200056a0 <DIP1Image>:
	...

200056ac <DIP1Light>:
200056ac:	00000000 	andeq	r0, r0, r0

200056b0 <DIP2Light>:
200056b0:	00000000 	andeq	r0, r0, r0

200056b4 <DIP3Light>:
200056b4:	00000000 	andeq	r0, r0, r0

200056b8 <DIP2Black>:
200056b8:	00000000 	andeq	r0, r0, r0

200056bc <tempDIP3Gray>:
	...

200056c8 <tempDIPBlack>:
	...

200056d4 <DIP1Gray>:
200056d4:	00000000 	andeq	r0, r0, r0

200056d8 <tempDIP3Black>:
	...

200056e4 <DIP3Gray>:
200056e4:	00000000 	andeq	r0, r0, r0

200056e8 <DIP4Image>:
	...

200056f4 <tempDIP2Light>:
	...

20005700 <tempDIPGray>:
	...

2000570c <tempFlameGray>:
	...

20005718 <tempFlame4Light>:
	...

20005724 <flame2Image>:
	...

20005730 <flame3Light>:
20005730:	00000000 	andeq	r0, r0, r0

20005734 <tempFlame3Light>:
	...

20005740 <flame3Image>:
	...

2000574c <flame3Gray>:
2000574c:	00000000 	andeq	r0, r0, r0

20005750 <flameObj>:
	...

20005774 <tempFlame2Light>:
	...

20005780 <tempFlame3Gray>:
	...

2000578c <tempFlame2Black>:
	...

20005798 <flame2Gray>:
20005798:	00000000 	andeq	r0, r0, r0

2000579c <flame1Gray>:
2000579c:	00000000 	andeq	r0, r0, r0

200057a0 <flame1Light>:
200057a0:	00000000 	andeq	r0, r0, r0

200057a4 <tempFlame4Black>:
	...

200057b0 <tempFlame4Gray>:
	...

200057bc <flame4Gray>:
200057bc:	00000000 	andeq	r0, r0, r0

200057c0 <flame4Image>:
	...

200057cc <flame1Image>:
	...

200057d8 <tempFlame2Gray>:
	...

200057e4 <flameImages>:
	...

20005814 <tempFlame3Black>:
	...

20005820 <flame4Black>:
20005820:	00000000 	andeq	r0, r0, r0

20005824 <flame1Black>:
20005824:	00000000 	andeq	r0, r0, r0

20005828 <tempFlameLight>:
	...

20005834 <flame2Light>:
20005834:	00000000 	andeq	r0, r0, r0

20005838 <flame3Black>:
20005838:	00000000 	andeq	r0, r0, r0

2000583c <tempFlameBlack>:
	...

20005848 <flame4Light>:
20005848:	00000000 	andeq	r0, r0, r0

2000584c <flame2Black>:
2000584c:	00000000 	andeq	r0, r0, r0

20005850 <tempBoom5Gray>:
	...

2000585c <tempBoom2Black>:
	...

20005868 <tempBoomLight>:
	...

20005874 <tempBoom6Light>:
	...

20005880 <boom9Image>:
	...

2000588c <boom12Image>:
	...

20005898 <boom3Light>:
20005898:	00000000 	andeq	r0, r0, r0

2000589c <boom3Black>:
2000589c:	00000000 	andeq	r0, r0, r0

200058a0 <boom4Image>:
	...

200058ac <boom2Image>:
	...

200058b8 <boom5Black>:
200058b8:	00000000 	andeq	r0, r0, r0

200058bc <boom4Light>:
200058bc:	00000000 	andeq	r0, r0, r0

200058c0 <boom10Image>:
	...

200058cc <boom14Image>:
	...

200058d8 <boom8Image>:
	...

200058e4 <boom5Image>:
	...

200058f0 <boom3Gray>:
200058f0:	00000000 	andeq	r0, r0, r0

200058f4 <tempBoom4Light>:
	...

20005900 <boom5Gray>:
20005900:	00000000 	andeq	r0, r0, r0

20005904 <boomObj>:
	...

20005928 <boom6Image>:
	...

20005934 <tempBoom3Light>:
	...

20005940 <boom6Gray>:
20005940:	00000000 	andeq	r0, r0, r0

20005944 <boom13Image>:
	...

20005950 <boom6Light>:
20005950:	00000000 	andeq	r0, r0, r0

20005954 <boomImages>:
	...

20005a08 <boom6Black>:
20005a08:	00000000 	andeq	r0, r0, r0

20005a0c <tempBoom3Black>:
	...

20005a18 <boom4Black>:
20005a18:	00000000 	andeq	r0, r0, r0

20005a1c <tempBoom6Black>:
	...

20005a28 <tempBoomGray>:
	...

20005a34 <boom2Gray>:
20005a34:	00000000 	andeq	r0, r0, r0

20005a38 <boom1Black>:
20005a38:	00000000 	andeq	r0, r0, r0

20005a3c <tempBoom6Gray>:
	...

20005a48 <tempBoom2Gray>:
	...

20005a54 <tempBoom4Gray>:
	...

20005a60 <tempBoom3Gray>:
	...

20005a6c <boom4Gray>:
20005a6c:	00000000 	andeq	r0, r0, r0

20005a70 <boom5Light>:
20005a70:	00000000 	andeq	r0, r0, r0

20005a74 <boom1Gray>:
20005a74:	00000000 	andeq	r0, r0, r0

20005a78 <boom11Image>:
	...

20005a84 <boom1Image>:
	...

20005a90 <boom7Image>:
	...

20005a9c <boom3Image>:
	...

20005aa8 <tempBoom5Light>:
	...

20005ab4 <tempBoom4Black>:
	...

20005ac0 <tempBoom2Light>:
	...

20005acc <tempBoom5Black>:
	...

20005ad8 <boom1Light>:
20005ad8:	00000000 	andeq	r0, r0, r0

20005adc <boom15Image>:
	...

20005ae8 <boom2Black>:
20005ae8:	00000000 	andeq	r0, r0, r0

20005aec <boom2Light>:
20005aec:	00000000 	andeq	r0, r0, r0

20005af0 <tempBoomBlack>:
	...

20005afc <backBufferGray>:
	...

20005efc <draw_buffer_black_gray>:
	...

200062fc <backBuffer>:
	...

200066fc <draw_buffer_black_light>:
	...

20006afc <draw_buffer_black>:
	...

20006efc <draw_buffer_black_gray_light>:
	...

200072fc <backBufferLight>:
	...

200076fc <tempIndoorsGray>:
	...

20007708 <tempIndoorsLight>:
	...

20007714 <tempIndoorsBlack>:
	...

20007720 <indoorsGray>:
20007720:	00000000 	andeq	r0, r0, r0

20007724 <indoorsObj>:
	...

20007748 <indoorsImages>:
	...

20007754 <indoorsBlack>:
20007754:	00000000 	andeq	r0, r0, r0

20007758 <indoorsImage>:
	...

20007764 <indoorsLight>:
20007764:	00000000 	andeq	r0, r0, r0

20007768 <indoors2Obj>:
	...

2000778c <indoors2Gray>:
2000778c:	00000000 	andeq	r0, r0, r0

20007790 <indoors2Images>:
	...

2000779c <indoors2Image>:
	...

200077a8 <tempIndoors2Gray>:
	...

200077b4 <indoors2Light>:
200077b4:	00000000 	andeq	r0, r0, r0

200077b8 <tempIndoors2Black>:
	...

200077c4 <tempIndoors2Light>:
	...

200077d0 <indoors2Black>:
200077d0:	00000000 	andeq	r0, r0, r0

200077d4 <trophyImages>:
	...

200077e0 <trophyBlack>:
200077e0:	00000000 	andeq	r0, r0, r0

200077e4 <trophyImage>:
	...

200077f0 <tempTrophyLight>:
	...

200077fc <trophyObj>:
	...

20007820 <trophyGray>:
20007820:	00000000 	andeq	r0, r0, r0

20007824 <tempTrophyBlack>:
	...

20007830 <tempTrophyGray>:
	...

2000783c <trophyLight>:
2000783c:	00000000 	andeq	r0, r0, r0

20007840 <rogerImage>:
	...

2000784c <rogerGray>:
2000784c:	00000000 	andeq	r0, r0, r0

20007850 <tempRogerGray>:
	...

2000785c <tempRogerLight>:
	...

20007868 <rogerLight>:
20007868:	00000000 	andeq	r0, r0, r0

2000786c <rogerObj>:
	...

20007890 <tempRogerBlack>:
	...

2000789c <rogerBlack>:
2000789c:	00000000 	andeq	r0, r0, r0

200078a0 <rogerImages>:
	...

200078ac <game_over_witch6Image>:
	...

200078b8 <game_over_witch6Light>:
200078b8:	00000000 	andeq	r0, r0, r0

200078bc <game_over_witch3Light>:
200078bc:	00000000 	andeq	r0, r0, r0

200078c0 <game_over_witch2Light>:
200078c0:	00000000 	andeq	r0, r0, r0

200078c4 <game_over_witch5Image>:
	...

200078d0 <tempgame_over_witch3Gray>:
	...

200078dc <game_over_witch2Image>:
	...

200078e8 <tempgame_over_witchBlack>:
	...

200078f4 <tempgame_over_witch4Gray>:
	...

20007900 <tempgame_over_witch2Black>:
	...

2000790c <game_over_witch4Gray>:
2000790c:	00000000 	andeq	r0, r0, r0

20007910 <game_over_witch1Light>:
20007910:	00000000 	andeq	r0, r0, r0

20007914 <tempgame_over_witch2Gray>:
	...

20007920 <tempgame_over_witch2Light>:
	...

2000792c <game_over_witchImages>:
	...

20007974 <tempgame_over_witchGray>:
	...

20007980 <tempgame_over_witch4Light>:
	...

2000798c <tempgame_over_witch6Light>:
	...

20007998 <game_over_witch2Gray>:
20007998:	00000000 	andeq	r0, r0, r0

2000799c <tempgame_over_witch5Light>:
	...

200079a8 <game_over_witch3Gray>:
200079a8:	00000000 	andeq	r0, r0, r0

200079ac <tempgame_over_witchLight>:
	...

200079b8 <game_over_witch5Black>:
200079b8:	00000000 	andeq	r0, r0, r0

200079bc <game_over_witch6Black>:
200079bc:	00000000 	andeq	r0, r0, r0

200079c0 <tempgame_over_witch3Light>:
	...

200079cc <tempgame_over_witch5Black>:
	...

200079d8 <game_over_witch1Black>:
200079d8:	00000000 	andeq	r0, r0, r0

200079dc <tempgame_over_witch3Black>:
	...

200079e8 <game_over_witch4Black>:
200079e8:	00000000 	andeq	r0, r0, r0

200079ec <game_over_witch4Image>:
	...

200079f8 <game_over_witch1Gray>:
200079f8:	00000000 	andeq	r0, r0, r0

200079fc <game_over_witch2Black>:
200079fc:	00000000 	andeq	r0, r0, r0

20007a00 <game_over_witch1Image>:
	...

20007a0c <game_over_witch5Gray>:
20007a0c:	00000000 	andeq	r0, r0, r0

20007a10 <tempgame_over_witch6Gray>:
	...

20007a1c <game_over_witch4Light>:
20007a1c:	00000000 	andeq	r0, r0, r0

20007a20 <game_over_witch3Image>:
	...

20007a2c <game_over_witch3Black>:
20007a2c:	00000000 	andeq	r0, r0, r0

20007a30 <tempgame_over_witch6Black>:
	...

20007a3c <tempgame_over_witch4Black>:
	...

20007a48 <tempgame_over_witch5Gray>:
	...

20007a54 <game_over_witch6Gray>:
20007a54:	00000000 	andeq	r0, r0, r0

20007a58 <game_over_witch5Light>:
20007a58:	00000000 	andeq	r0, r0, r0

20007a5c <monster_black_bits>:
	...
20007a6c:	0001c000 	andeq	ip, r1, r0
20007a70:	00023000 	andeq	r3, r2, r0
20007a74:	00021000 	andeq	r1, r2, r0
20007a78:	00060800 	andeq	r0, r6, r0, lsl #16
20007a7c:	00040800 	andeq	r0, r4, r0, lsl #16
20007a80:	00040800 	andeq	r0, r4, r0, lsl #16
20007a84:	00092800 	andeq	r2, r9, r0, lsl #16
20007a88:	00092800 	andeq	r2, r9, r0, lsl #16
20007a8c:	00100400 	andseq	r0, r0, r0, lsl #8
20007a90:	00100400 	andseq	r0, r0, r0, lsl #8
20007a94:	00200200 	eoreq	r0, r0, r0, lsl #4
20007a98:	00661b00 	rsbeq	r1, r6, r0, lsl #22
20007a9c:	0043b100 	subeq	fp, r3, r0, lsl #2
20007aa0:	0080e080 	addeq	lr, r0, r0, lsl #1
20007aa4:	01800080 	orreq	r0, r0, r0, lsl #1
20007aa8:	01000040 	tsteq	r0, r0, asr #32
20007aac:	02000040 	andeq	r0, r0, #64	; 0x40
20007ab0:	02000060 	andeq	r0, r0, #96	; 0x60
20007ab4:	02000020 	andeq	r0, r0, #32
20007ab8:	03ff03e0 	mvnseq	r0, #224, 6	; 0x80000003
20007abc:	0001fc00 	andeq	pc, r1, r0, lsl #24
	...

20007ad4 <monster_light_bits>:
	...
20007ae8:	00010000 	andeq	r0, r1, r0
20007aec:	00018000 	andeq	r8, r1, r0
20007af0:	0001f000 	andeq	pc, r1, r0
20007af4:	0001f000 	andeq	pc, r1, r0
20007af8:	00009000 	andeq	r9, r0, r0
20007afc:	00009000 	andeq	r9, r0, r0
20007b00:	0000d000 	andeq	sp, r0, r0
20007b04:	0001f800 	andeq	pc, r1, r0, lsl #16
20007b08:	0003f800 	andeq	pc, r3, r0, lsl #16
20007b0c:	0003fc00 	andeq	pc, r3, r0, lsl #24
20007b10:	0001e400 	andeq	lr, r1, r0, lsl #8
20007b14:	00044c00 	andeq	r4, r4, r0, lsl #24
20007b18:	00060c00 	andeq	r0, r6, r0, lsl #24
20007b1c:	0006ee00 	andeq	lr, r6, r0, lsl #28
20007b20:	000ffe00 	andeq	pc, pc, r0, lsl #28
20007b24:	000f3f00 	andeq	r3, pc, r0, lsl #30
20007b28:	00000780 	andeq	r0, r0, r0, lsl #15
20007b2c:	000003c0 	andeq	r0, r0, r0, asr #7
	...

20007b4c <monster_gray_bits>:
	...
20007b6c:	00020000 	andeq	r0, r2, r0
20007b70:	00000000 	andeq	r0, r0, r0
20007b74:	00040000 	andeq	r0, r4, r0
20007b78:	00060000 	andeq	r0, r6, r0
20007b7c:	000e0000 	andeq	r0, lr, r0
20007b80:	000c0000 	andeq	r0, ip, r0
20007b84:	001c0000 	andseq	r0, ip, r0
20007b88:	00180000 	andseq	r0, r8, r0
20007b8c:	00380000 	eorseq	r0, r8, r0
20007b90:	00780000 	rsbseq	r0, r8, r0
20007b94:	00780000 	rsbseq	r0, r8, r0
20007b98:	00f00000 	rscseq	r0, r0, r0
20007b9c:	01f0c000 	mvnseq	ip, r0
20007ba0:	01fff800 	mvnseq	pc, r0, lsl #16
20007ba4:	01fffc00 	mvnseq	pc, r0, lsl #24
20007ba8:	0000fc00 	andeq	pc, r0, r0, lsl #24
	...

20007bc4 <press_black_bits>:
	...
20007bfc:	001c0000 	andseq	r0, ip, r0
20007c00:	00000000 	andeq	r0, r0, r0
20007c04:	00240000 	eoreq	r0, r4, r0
20007c08:	00000000 	andeq	r0, r0, r0
20007c0c:	00440000 	subeq	r0, r4, r0
20007c10:	00000000 	andeq	r0, r0, r0
20007c14:	c5240000 	strgt	r0, [r4, #-0]!
20007c18:	00000198 	muleq	r0, r8, r1
20007c1c:	2b1c0000 	blcs	20707c24 <firstTime.4104+0x6f37b8>
20007c20:	00000045 	andeq	r0, r0, r5, asr #32
20007c24:	e1040000 	mrs	r0, (UNDEF: 4)
20007c28:	000000cd 	andeq	r0, r0, sp, asr #1
20007c2c:	21040000 	mrscs	r0, (UNDEF: 4)
20007c30:	00000110 	andeq	r0, r0, r0, lsl r1
20007c34:	c1040000 	mrsgt	r0, (UNDEF: 4)
20007c38:	000000cc 	andeq	r0, r0, ip, asr #1
	...
20007c68:	00000004 	andeq	r0, r0, r4
20007c6c:	00000000 	andeq	r0, r0, r0
20007c70:	00000004 	andeq	r0, r0, r4
20007c74:	00000000 	andeq	r0, r0, r0
20007c78:	00000004 	andeq	r0, r0, r4
20007c7c:	0494e000 	ldreq	lr, [r4], #0
20007c80:	00009334 	andeq	r9, r0, r4, lsr r3
20007c84:	04ac9000 	strteq	r9, [ip], #0
20007c88:	00009494 	muleq	r0, r4, r4
20007c8c:	04a49000 	strteq	r9, [r4], #0
20007c90:	0000978c 	andeq	r9, r0, ip, lsl #15
20007c94:	04a49000 	strteq	r9, [r4], #0
20007c98:	00009094 	muleq	r0, r4, r0
20007c9c:	07256000 	streq	r6, [r5, -r0]!
20007ca0:	0000e324 	andeq	lr, r0, r4, lsr #6
20007ca4:	04000000 	streq	r0, [r0], #-0
20007ca8:	00008000 	andeq	r8, r0, r0
20007cac:	04000000 	streq	r0, [r0], #-0
20007cb0:	00008000 	andeq	r8, r0, r0
20007cb4:	03000000 	movweq	r0, #0
20007cb8:	00006000 	andeq	r6, r0, r0
	...

20007cdc <press_light_bits>:
	...
20007d1c:	00000200 	andeq	r0, r0, r0, lsl #4
20007d20:	00000000 	andeq	r0, r0, r0
20007d24:	00000700 	andeq	r0, r0, r0, lsl #14
20007d28:	00000000 	andeq	r0, r0, r0
20007d2c:	00000200 	andeq	r0, r0, r0, lsl #4
	...
20007d70:	00800000 	addeq	r0, r0, r0
20007d74:	00000000 	andeq	r0, r0, r0
20007d78:	01c00000 	biceq	r0, r0, r0
20007d7c:	00000000 	andeq	r0, r0, r0
20007d80:	00800000 	addeq	r0, r0, r0
20007d84:	00000010 	andeq	r0, r0, r0, lsl r0
20007d88:	00000000 	andeq	r0, r0, r0
20007d8c:	00000038 	andeq	r0, r0, r8, lsr r0
20007d90:	00000000 	andeq	r0, r0, r0
20007d94:	00000010 	andeq	r0, r0, r0, lsl r0
	...

20007df4 <press_gray_bits>:
	...
20007e34:	00180000 	andseq	r0, r8, r0
20007e38:	00000000 	andeq	r0, r0, r0
20007e3c:	00380000 	eorseq	r0, r8, r0
20007e40:	00000000 	andeq	r0, r0, r0
20007e44:	00580000 	subseq	r0, r8, r0
20007e48:	00000020 	andeq	r0, r0, r0, lsr #32
20007e4c:	d4200000 	strtle	r0, [r0], #-0
20007e50:	0000039a 	muleq	r0, sl, r3
20007e54:	0a380000 	beq	20e07e5c <firstTime.4104+0xdf39f0>
20007e58:	00000102 	andeq	r0, r0, r2, lsl #2
20007e5c:	c2080000 	andgt	r0, r8, #0
20007e60:	00000223 	andeq	r0, r0, r3, lsr #4
20007e64:	02080000 	andeq	r0, r8, #0
20007e68:	00000311 	andeq	r0, r0, r1, lsl r3
20007e6c:	c1080000 	mrsgt	r0, (UNDEF: 8)
20007e70:	000001dd 	ldrdeq	r0, [r0], -sp
	...
20007ea0:	00000008 	andeq	r0, r0, r8
20007ea4:	00000000 	andeq	r0, r0, r0
20007ea8:	00000008 	andeq	r0, r0, r8
20007eac:	00000000 	andeq	r0, r0, r0
20007eb0:	00000008 	andeq	r0, r0, r8
20007eb4:	09116000 	ldmdbeq	r1, {sp, lr}
20007eb8:	00012328 	andeq	r2, r1, r8, lsr #6
20007ebc:	09596000 	ldmdbeq	r9, {sp, lr}^
20007ec0:	00012810 	andeq	r2, r1, r0, lsl r8
20007ec4:	0b492000 	bleq	2124fecc <firstTime.4104+0x123ba60>
20007ec8:	00012f08 	andeq	r2, r1, r8, lsl #30
20007ecc:	08488000 	stmdaeq	r8, {pc}^
20007ed0:	00010458 	andeq	r0, r1, r8, asr r4
20007ed4:	0b6be000 	bleq	21affedc <firstTime.4104+0x1aeba70>
20007ed8:	00016768 	andeq	r6, r1, r8, ror #14
20007edc:	08000000 	stmdaeq	r0, {}	; <UNPREDICTABLE>
20007ee0:	00010000 	andeq	r0, r1, r0
20007ee4:	0c000000 	stceq	0, cr0, [r0], {-0}
20007ee8:	00018000 	andeq	r8, r1, r0
20007eec:	06000000 	streq	r0, [r0], -r0
20007ef0:	0000c000 	andeq	ip, r0, r0
	...

20007f0c <castle_black_bits>:
20007f0c:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
20007f10:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
20007f14:	000007ff 	strdeq	r0, [r0], -pc	; <UNPREDICTABLE>
20007f18:	00000000 	andeq	r0, r0, r0
20007f1c:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
20007f20:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
20007f24:	000001ff 	strdeq	r0, [r0], -pc	; <UNPREDICTABLE>
20007f28:	00000000 	andeq	r0, r0, r0
20007f2c:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
20007f30:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
20007f34:	00000001 	andeq	r0, r0, r1
20007f38:	00000000 	andeq	r0, r0, r0
20007f3c:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
20007f40:	7fffffff 	svcvc	0x00ffffff
	...
20007f4c:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
20007f50:	3fffffff 	svccc	0x00ffffff
	...
20007f5c:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
20007f60:	1fffffff 	svcne	0x00ffffff
	...
20007f6c:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
20007f70:	07ffffff 			; <UNDEFINED> instruction: 0x07ffffff
	...
20007f7c:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
20007f80:	03ffffff 	mvnseq	pc, #1020	; 0x3fc
	...
20007f8c:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
20007f90:	01ffffff 	ldrsheq	pc, [pc, #255]	; 20008097 <castle_black_bits+0x18b>	; <UNPREDICTABLE>
	...
20007f9c:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
20007fa0:	00ffffff 	ldrshteq	pc, [pc], #255	; <UNPREDICTABLE>
	...
20007fac:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
20007fb0:	007fffff 	ldrshteq	pc, [pc], #-255	; <UNPREDICTABLE>
	...
20007fbc:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
20007fc0:	003fffff 	ldrshteq	pc, [pc], -pc	; <UNPREDICTABLE>
	...
20007fcc:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
20007fd0:	003fffff 	ldrshteq	pc, [pc], -pc	; <UNPREDICTABLE>
	...
20007fdc:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
20007fe0:	003fffff 	ldrshteq	pc, [pc], -pc	; <UNPREDICTABLE>
	...
20007fec:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
20007ff0:	001fffff 			; <UNDEFINED> instruction: 0x001fffff
	...
20007ffc:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
20008000:	001fffff 			; <UNDEFINED> instruction: 0x001fffff
	...
2000800c:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
20008010:	000fffff 	strdeq	pc, [pc], -pc	; <UNPREDICTABLE>
	...
2000801c:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
20008020:	000fffff 	strdeq	pc, [pc], -pc	; <UNPREDICTABLE>
	...
2000802c:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
20008030:	0007ffff 	strdeq	pc, [r7], -pc	; <UNPREDICTABLE>
	...
2000803c:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
20008040:	0003ffff 	strdeq	pc, [r3], -pc	; <UNPREDICTABLE>
	...
2000804c:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
20008050:	0003ffff 	strdeq	pc, [r3], -pc	; <UNPREDICTABLE>
	...
2000805c:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
20008060:	0003ffff 	strdeq	pc, [r3], -pc	; <UNPREDICTABLE>
	...
2000806c:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
20008070:	0003ffff 	strdeq	pc, [r3], -pc	; <UNPREDICTABLE>
20008074:	04900000 	ldreq	r0, [r0], #0
20008078:	00000000 	andeq	r0, r0, r0
2000807c:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
20008080:	0003ffff 	strdeq	pc, [r3], -pc	; <UNPREDICTABLE>
20008084:	0b680000 	bleq	21a0808c <firstTime.4104+0x19f3c20>
20008088:	00000000 	andeq	r0, r0, r0
2000808c:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
20008090:	0001ffff 	strdeq	pc, [r1], -pc	; <UNPREDICTABLE>
20008094:	08080000 	stmdaeq	r8, {}	; <UNPREDICTABLE>
20008098:	00000000 	andeq	r0, r0, r0
2000809c:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
200080a0:	0001ffff 	strdeq	pc, [r1], -pc	; <UNPREDICTABLE>
200080a4:	08080000 	stmdaeq	r8, {}	; <UNPREDICTABLE>
200080a8:	00000092 	muleq	r0, r2, r0
200080ac:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
200080b0:	0001ffff 	strdeq	pc, [r1], -pc	; <UNPREDICTABLE>
200080b4:	04100000 	ldreq	r0, [r0], #-0
200080b8:	0000016d 	andeq	r0, r0, sp, ror #2
200080bc:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
200080c0:	0001ffff 	strdeq	pc, [r1], -pc	; <UNPREDICTABLE>
200080c4:	04101240 	ldreq	r1, [r0], #-576	; 0xfffffdc0
200080c8:	00000101 	andeq	r0, r0, r1, lsl #2
200080cc:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
200080d0:	0000ffff 	strdeq	pc, [r0], -pc	; <UNPREDICTABLE>
200080d4:	04102da0 	ldreq	r2, [r0], #-3488	; 0xfffff260
200080d8:	00000101 	andeq	r0, r0, r1, lsl #2
200080dc:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
200080e0:	0000ffff 	strdeq	pc, [r0], -pc	; <UNPREDICTABLE>
200080e4:	04102020 	ldreq	r2, [r0], #-32	; 0xffffffe0
200080e8:	00000101 	andeq	r0, r0, r1, lsl #2
200080ec:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
200080f0:	0000ffff 	strdeq	pc, [r0], -pc	; <UNPREDICTABLE>
200080f4:	04102020 	ldreq	r2, [r0], #-32	; 0xffffffe0
200080f8:	00000101 	andeq	r0, r0, r1, lsl #2
200080fc:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
20008100:	0000ffff 	strdeq	pc, [r0], -pc	; <UNPREDICTABLE>
20008104:	04101040 	ldreq	r1, [r0], #-64	; 0xffffffc0
20008108:	00000082 	andeq	r0, r0, r2, lsl #1
2000810c:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
20008110:	0000ffff 	strdeq	pc, [r0], -pc	; <UNPREDICTABLE>
20008114:	04101040 	ldreq	r1, [r0], #-64	; 0xffffffc0
20008118:	00000092 	muleq	r0, r2, r0
2000811c:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
20008120:	0000ffff 	strdeq	pc, [r0], -pc	; <UNPREDICTABLE>
20008124:	04101040 	ldreq	r1, [r0], #-64	; 0xffffffc0
20008128:	012400a2 	smulwbeq	r4, r2, r0
2000812c:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
20008130:	00007fff 	strdeq	r7, [r0], -pc	; <UNPREDICTABLE>
20008134:	04101040 	ldreq	r1, [r0], #-64	; 0xffffffc0
20008138:	02da00a2 	sbcseq	r0, sl, #162	; 0xa2
2000813c:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
20008140:	00004fff 	strdeq	r4, [r0], -pc	; <UNPREDICTABLE>
20008144:	04101040 	ldreq	r1, [r0], #-64	; 0xffffffc0
20008148:	020200a2 	andeq	r0, r2, #162	; 0xa2
2000814c:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
20008150:	000007ff 	strdeq	r0, [r0], -pc	; <UNPREDICTABLE>
20008154:	08081040 	stmdaeq	r8, {r6, ip}
20008158:	0202009a 	andeq	r0, r2, #154	; 0x9a
2000815c:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
20008160:	000003ff 	strdeq	r0, [r0], -pc	; <UNPREDICTABLE>
20008164:	08082020 	stmdaeq	r8, {r5, sp}
20008168:	01040082 	smlabbeq	r4, r2, r0, r0
2000816c:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
20008170:	000003ff 	strdeq	r0, [r0], -pc	; <UNPREDICTABLE>
20008174:	48082020 	stmdami	r8, {r5, sp}
20008178:	01040102 	tsteq	r4, r2, lsl #2
2000817c:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
20008180:	000003ff 	strdeq	r0, [r0], -pc	; <UNPREDICTABLE>
20008184:	b0082020 	andlt	r2, r8, r0, lsr #32
20008188:	01040101 	tsteq	r4, r1, lsl #2
2000818c:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
20008190:	000001ff 	strdeq	r0, [r0], -pc	; <UNPREDICTABLE>
20008194:	00082220 	andeq	r2, r8, r0, lsr #4
20008198:	01040100 	mrseq	r0, (UNDEF: 20)
2000819c:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
200081a0:	000001ff 	strdeq	r0, [r0], -pc	; <UNPREDICTABLE>
200081a4:	00882420 	addeq	r2, r8, r0, lsr #8
200081a8:	01040100 	mrseq	r0, (UNDEF: 20)
200081ac:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
200081b0:	000000ff 	strdeq	r0, [r0], -pc	; <UNPREDICTABLE>
200081b4:	01082420 	tsteq	r8, r0, lsr #8
200081b8:	01045a00 	tsteq	r4, r0, lsl #20
200081bc:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
200081c0:	0000007f 	andeq	r0, r0, pc, ror r0
200081c4:	01082420 	tsteq	r8, r0, lsr #8
200081c8:	0104a400 	tsteq	r4, r0, lsl #8
200081cc:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
200081d0:	00000001 	andeq	r0, r0, r1
200081d4:	010b2320 	tsteq	fp, r0, lsr #6
200081d8:	01030001 	tsteq	r3, r1
200081dc:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
200081e0:	00000000 	andeq	r0, r0, r0
200081e4:	00c4c020 	sbceq	ip, r4, r0, lsr #32
200081e8:	02000002 	andeq	r0, r0, #2
200081ec:	3fffffff 	svccc	0x00ffffff
200081f0:	00000000 	andeq	r0, r0, r0
200081f4:	00000020 	andeq	r0, r0, r0, lsr #32
200081f8:	02200002 	eoreq	r0, r0, #2
200081fc:	3fffffff 	svccc	0x00ffffff
20008200:	00000000 	andeq	r0, r0, r0
20008204:	00000020 	andeq	r0, r0, r0, lsr #32
20008208:	02400002 	subeq	r0, r0, #2
2000820c:	1fffffff 	svcne	0x00ffffff
20008210:	00000000 	andeq	r0, r0, r0
20008214:	80000020 	andhi	r0, r0, r0, lsr #32
20008218:	02400001 	subeq	r0, r0, #1
2000821c:	1fffffff 	svcne	0x00ffffff
20008220:	00000000 	andeq	r0, r0, r0
20008224:	00000010 	andeq	r0, r0, r0, lsl r0
20008228:	02400000 	subeq	r0, r0, #0
2000822c:	0fffffff 	svceq	0x00ffffff
20008230:	00000000 	andeq	r0, r0, r0
20008234:	00000010 	andeq	r0, r0, r0, lsl r0
20008238:	02300000 	eorseq	r0, r0, #0
2000823c:	0fffffff 	svceq	0x00ffffff
20008240:	00000000 	andeq	r0, r0, r0
20008244:	00000010 	andeq	r0, r0, r0, lsl r0
20008248:	02000000 	andeq	r0, r0, #0
2000824c:	07ffffff 			; <UNDEFINED> instruction: 0x07ffffff
20008250:	00000000 	andeq	r0, r0, r0
20008254:	00000010 	andeq	r0, r0, r0, lsl r0
20008258:	04000000 	streq	r0, [r0], #-0
2000825c:	03ffffff 	mvnseq	pc, #1020	; 0x3fc
20008260:	00000000 	andeq	r0, r0, r0
20008264:	00000010 	andeq	r0, r0, r0, lsl r0
20008268:	04000000 	streq	r0, [r0], #-0
2000826c:	01ffffff 	ldrsheq	pc, [pc, #255]	; 20008373 <castle_gray_bits+0x67>	; <UNPREDICTABLE>
20008270:	00000000 	andeq	r0, r0, r0
20008274:	00000008 	andeq	r0, r0, r8
20008278:	04000000 	streq	r0, [r0], #-0
2000827c:	01ffffff 	ldrsheq	pc, [pc, #255]	; 20008383 <castle_gray_bits+0x77>	; <UNPREDICTABLE>
20008280:	00000000 	andeq	r0, r0, r0
20008284:	00000008 	andeq	r0, r0, r8
20008288:	04000000 	streq	r0, [r0], #-0
2000828c:	00ffffff 	ldrshteq	pc, [pc], #255	; <UNPREDICTABLE>
20008290:	00000000 	andeq	r0, r0, r0
20008294:	00000008 	andeq	r0, r0, r8
20008298:	060001c0 	streq	r0, [r0], -r0, asr #3
2000829c:	00ffffff 	ldrshteq	pc, [pc], #255	; <UNPREDICTABLE>
200082a0:	00000000 	andeq	r0, r0, r0
200082a4:	00000008 	andeq	r0, r0, r8
200082a8:	04000220 	streq	r0, [r0], #-544	; 0xfffffde0
200082ac:	007fffff 	ldrshteq	pc, [pc], #-255	; <UNPREDICTABLE>
200082b0:	00000000 	andeq	r0, r0, r0
200082b4:	00000008 	andeq	r0, r0, r8
200082b8:	04100400 	ldreq	r0, [r0], #-1024	; 0xfffffc00
200082bc:	003fffff 	ldrshteq	pc, [pc], -pc	; <UNPREDICTABLE>
200082c0:	00000000 	andeq	r0, r0, r0
200082c4:	00000008 	andeq	r0, r0, r8
200082c8:	04a00400 	strteq	r0, [r0], #1024	; 0x400
200082cc:	001fffff 			; <UNDEFINED> instruction: 0x001fffff
200082d0:	00000000 	andeq	r0, r0, r0
200082d4:	00000008 	andeq	r0, r0, r8
200082d8:	04000400 	streq	r0, [r0], #-1024	; 0xfffffc00
200082dc:	0007ffff 	strdeq	pc, [r7], -pc	; <UNPREDICTABLE>
200082e0:	00000000 	andeq	r0, r0, r0
200082e4:	00000008 	andeq	r0, r0, r8
200082e8:	07400400 	strbeq	r0, [r0, -r0, lsl #8]
200082ec:	0001ffff 	strdeq	pc, [r1], -pc	; <UNPREDICTABLE>
200082f0:	00000000 	andeq	r0, r0, r0
200082f4:	00000008 	andeq	r0, r0, r8
200082f8:	04000400 	streq	r0, [r0], #-1024	; 0xfffffc00
200082fc:	0000ffff 	strdeq	pc, [r0], -pc	; <UNPREDICTABLE>
20008300:	00000000 	andeq	r0, r0, r0
20008304:	00000008 	andeq	r0, r0, r8
20008308:	04000400 	streq	r0, [r0], #-1024	; 0xfffffc00

2000830c <castle_gray_bits>:
	...
20008314:	fffff800 	vcmla.f32	d31, d15, d0[0], #270
20008318:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
	...
20008324:	fffffe00 			; <UNDEFINED> instruction: 0xfffffe00
20008328:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
	...
20008334:	fffffffe 			; <UNDEFINED> instruction: 0xfffffffe
20008338:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
2000833c:	00000000 	andeq	r0, r0, r0
20008340:	80000000 	andhi	r0, r0, r0
20008344:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
20008348:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
2000834c:	00000000 	andeq	r0, r0, r0
20008350:	c0000000 	andgt	r0, r0, r0
20008354:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
20008358:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
2000835c:	00000000 	andeq	r0, r0, r0
20008360:	e0000000 	and	r0, r0, r0
20008364:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
20008368:	ffffffbf 			; <UNDEFINED> instruction: 0xffffffbf
2000836c:	00000000 	andeq	r0, r0, r0
20008370:	f8000000 			; <UNDEFINED> instruction: 0xf8000000
20008374:	f3ffcfff 			; <UNDEFINED> instruction: 0xf3ffcfff
20008378:	ffffffbf 			; <UNDEFINED> instruction: 0xffffffbf
2000837c:	00000000 	andeq	r0, r0, r0
20008380:	fc000000 	stc2	0, cr0, [r0], {-0}
20008384:	f1ff8fff 			; <UNDEFINED> instruction: 0xf1ff8fff
20008388:	fff9ff3f 			; <UNDEFINED> instruction: 0xfff9ff3f
2000838c:	00000000 	andeq	r0, r0, r0
20008390:	fe000000 	cdp2	0, 0, cr0, cr0, cr0, {0}
20008394:	f0ff8fef 			; <UNDEFINED> instruction: 0xf0ff8fef
20008398:	fff9fe1f 			; <UNDEFINED> instruction: 0xfff9fe1f
2000839c:	00000000 	andeq	r0, r0, r0
200083a0:	ff000000 			; <UNDEFINED> instruction: 0xff000000
200083a4:	e0ff87ef 	rscs	r8, pc, pc, ror #15
200083a8:	fff9fe1f 			; <UNDEFINED> instruction: 0xfff9fe1f
200083ac:	00000000 	andeq	r0, r0, r0
200083b0:	ff800000 			; <UNDEFINED> instruction: 0xff800000
200083b4:	c07e07e7 	rsbsgt	r0, lr, r7, ror #15
200083b8:	ffe0fc1f 			; <UNDEFINED> instruction: 0xffe0fc1f
200083bc:	00000000 	andeq	r0, r0, r0
200083c0:	ffc00000 			; <UNDEFINED> instruction: 0xffc00000
200083c4:	001c07e7 	andseq	r0, ip, r7, ror #15
200083c8:	ffe0380e 	vcmla.f32	d19, d0, d14[0], #170
200083cc:	00000000 	andeq	r0, r0, r0
200083d0:	ffc00000 			; <UNDEFINED> instruction: 0xffc00000
200083d4:	000003e3 	andeq	r0, r0, r3, ror #7
200083d8:	f7c00000 			; <UNDEFINED> instruction: 0xf7c00000
200083dc:	00000000 	andeq	r0, r0, r0
200083e0:	ffc00000 			; <UNDEFINED> instruction: 0xffc00000
200083e4:	000001c3 	andeq	r0, r0, r3, asr #3
200083e8:	e7800000 	str	r0, [r0, r0]
200083ec:	00000000 	andeq	r0, r0, r0
200083f0:	ffe00000 			; <UNDEFINED> instruction: 0xffe00000
200083f4:	00000003 	andeq	r0, r0, r3
200083f8:	c3800000 	orrgt	r0, r0, #0
200083fc:	00000000 	andeq	r0, r0, r0
20008400:	ffe00000 			; <UNDEFINED> instruction: 0xffe00000
20008404:	00000001 	andeq	r0, r0, r1
20008408:	c0000000 	andgt	r0, r0, r0
2000840c:	00000000 	andeq	r0, r0, r0
20008410:	9ff00000 	svcls	0x00f00000	; IMB
20008414:	00000001 	andeq	r0, r0, r1
20008418:	80000000 	andhi	r0, r0, r0
2000841c:	00000000 	andeq	r0, r0, r0
20008420:	8ff00000 	svchi	0x00f00000	; IMB
20008424:	00000000 	andeq	r0, r0, r0
20008428:	80000000 	andhi	r0, r0, r0
2000842c:	00000000 	andeq	r0, r0, r0
20008430:	8ff80000 	svchi	0x00f80000
	...
20008440:	0ffc0000 	svceq	0x00fc0000
	...
20008450:	0ffc0000 	svceq	0x00fc0000
	...
20008460:	0ffc0000 	svceq	0x00fc0000
	...
20008470:	0ffc0000 	svceq	0x00fc0000
	...
20008480:	0ffc0000 	svceq	0x00fc0000
	...
20008490:	07fe0000 	ldrbeq	r0, [lr, r0]!
	...
200084a0:	07fe0000 	ldrbeq	r0, [lr, r0]!
	...
200084b0:	07fe0000 	ldrbeq	r0, [lr, r0]!
200084b4:	03800000 	orreq	r0, r0, #0
	...
200084c0:	03fe0000 	mvnseq	r0, #0
200084c4:	02000000 	andeq	r0, r0, #0
	...
200084d0:	03ff0000 	mvnseq	r0, #0
200084d4:	02000000 	andeq	r0, r0, #0
	...
200084e0:	03ff0000 	mvnseq	r0, #0
200084e4:	02000000 	andeq	r0, r0, #0
	...
200084f0:	03ff0000 	mvnseq	r0, #0
200084f4:	02000000 	andeq	r0, r0, #0
	...
20008500:	03ff0000 	mvnseq	r0, #0
20008504:	02800c00 	addeq	r0, r0, #0, 24
20008508:	00000060 	andeq	r0, r0, r0, rrx
2000850c:	00000000 	andeq	r0, r0, r0
20008510:	03ff0000 	mvnseq	r0, #0
20008514:	03000800 	movweq	r0, #2048	; 0x800
20008518:	00000040 	andeq	r0, r0, r0, asr #32
2000851c:	00000000 	andeq	r0, r0, r0
20008520:	03ff0000 	mvnseq	r0, #0
20008524:	03000800 	movweq	r0, #2048	; 0x800
20008528:	00000040 	andeq	r0, r0, r0, asr #32
2000852c:	00000000 	andeq	r0, r0, r0
20008530:	03ff8000 	mvnseq	r8, #0
20008534:	03000a00 	movweq	r0, #2560	; 0xa00
20008538:	00000040 	andeq	r0, r0, r0, asr #32
2000853c:	00000000 	andeq	r0, r0, r0
20008540:	01ffb000 	mvnseq	fp, r0
20008544:	03000c00 	movweq	r0, #3072	; 0xc00
20008548:	00000040 	andeq	r0, r0, r0, asr #32
2000854c:	00000000 	andeq	r0, r0, r0
20008550:	01fff800 	mvnseq	pc, r0, lsl #16
20008554:	07800c00 	streq	r0, [r0, r0, lsl #24]
20008558:	00000060 	andeq	r0, r0, r0, rrx
2000855c:	00000000 	andeq	r0, r0, r0
20008560:	01fffc00 	mvnseq	pc, r0, lsl #24
20008564:	04001800 	streq	r1, [r0], #-2048	; 0xfffff800
20008568:	00c00058 	sbceq	r0, r0, r8, asr r0
2000856c:	00000000 	andeq	r0, r0, r0
20008570:	00fffc00 	rscseq	pc, pc, r0, lsl #24
20008574:	06001400 	streq	r1, [r0], -r0, lsl #8
20008578:	00c000c0 	sbceq	r0, r0, r0, asr #1
2000857c:	00000000 	andeq	r0, r0, r0
20008580:	007ffc00 	rsbseq	pc, pc, r0, lsl #24
20008584:	45001000 	strmi	r1, [r0, #-0]
20008588:	008000a0 	addeq	r0, r0, r0, lsr #1
2000858c:	00000000 	andeq	r0, r0, r0
20008590:	007ffe00 	rsbseq	pc, pc, r0, lsl #28
20008594:	80001000 	andhi	r1, r0, r0
20008598:	008000c1 	addeq	r0, r0, r1, asr #1
2000859c:	00000000 	andeq	r0, r0, r0
200085a0:	003ffe00 	eorseq	pc, pc, r0, lsl #28
200085a4:	00001000 	andeq	r1, r0, r0
200085a8:	00a000f0 	strdeq	r0, [r0], r0	; <UNPREDICTABLE>
200085ac:	00000000 	andeq	r0, r0, r0
200085b0:	003fff00 	eorseq	pc, pc, r0, lsl #30
200085b4:	00001000 	andeq	r1, r0, r0
200085b8:	00c000e0 	sbceq	r0, r0, r0, ror #1
200085bc:	00000000 	andeq	r0, r0, r0
200085c0:	001fff80 	andseq	pc, pc, r0, lsl #31
200085c4:	02001800 	andeq	r1, r0, #0, 16
200085c8:	00c000c0 	sbceq	r0, r0, r0, asr #1
200085cc:	00000000 	andeq	r0, r0, r0
200085d0:	0019fffe 			; <UNDEFINED> instruction: 0x0019fffe
200085d4:	02001400 	andeq	r1, r0, #0, 8
200085d8:	00803000 	addeq	r3, r0, r0
200085dc:	00000000 	andeq	r0, r0, r0
200085e0:	0018ffff 			; <UNDEFINED> instruction: 0x0018ffff
200085e4:	05033f00 	streq	r3, [r3, #-3840]	; 0xfffff100
200085e8:	01000000 	mrseq	r0, (UNDEF: 0)
200085ec:	c0000000 	andgt	r0, r0, r0
200085f0:	0008ffff 	strdeq	pc, [r8], -pc	; <UNPREDICTABLE>
200085f4:	00c0e400 	sbceq	lr, r0, r0, lsl #8
200085f8:	01000004 	tsteq	r0, r4
200085fc:	c0000000 	andgt	r0, r0, r0
20008600:	00007fff 	strdeq	r7, [r0], -pc	; <UNPREDICTABLE>
20008604:	00002000 	andeq	r2, r0, r0
20008608:	01000008 	tsteq	r0, r8
2000860c:	e0000000 	and	r0, r0, r0
20008610:	00007fff 	strdeq	r7, [r0], -pc	; <UNPREDICTABLE>
20008614:	00001000 	andeq	r1, r0, r0
20008618:	01000006 	tsteq	r0, r6
2000861c:	e0000000 	and	r0, r0, r0
20008620:	00003fff 	strdeq	r3, [r0], -pc	; <UNPREDICTABLE>
20008624:	80000000 	andhi	r0, r0, r0
20008628:	01800001 	orreq	r0, r0, r1
2000862c:	f0000000 			; <UNDEFINED> instruction: 0xf0000000
20008630:	00003fff 	strdeq	r3, [r0], -pc	; <UNPREDICTABLE>
20008634:	00400000 	subeq	r0, r0, r0
20008638:	01400000 	mrseq	r0, (UNDEF: 64)
2000863c:	f0000000 			; <UNDEFINED> instruction: 0xf0000000
20008640:	00001fff 	strdeq	r1, [r0], -pc	; <UNPREDICTABLE>
20008644:	03800000 	orreq	r0, r0, #0
20008648:	01300000 	teqeq	r0, r0
2000864c:	f8000000 			; <UNDEFINED> instruction: 0xf8000000
20008650:	00001bff 	strdeq	r1, [r0], -pc	; <UNPREDICTABLE>
20008654:	10e00000 	rscne	r0, r0, r0
20008658:	03000000 	movweq	r0, #0
2000865c:	fc000000 	stc2	0, cr0, [r0], {-0}
20008660:	000001ff 	strdeq	r0, [r0], -pc	; <UNPREDICTABLE>
20008664:	0f800000 	svceq	0x00800000
20008668:	03900000 	orrseq	r0, r0, #0
2000866c:	fe000000 	cdp2	0, 0, cr0, cr0, cr0, {0}
20008670:	000001ff 	strdeq	r0, [r0], -pc	; <UNPREDICTABLE>
20008674:	00000000 	andeq	r0, r0, r0
20008678:	03e00000 	mvneq	r0, #0
2000867c:	fe000000 	cdp2	0, 0, cr0, cr0, cr0, {0}
20008680:	000000ff 	strdeq	r0, [r0], -pc	; <UNPREDICTABLE>
20008684:	00000000 	andeq	r0, r0, r0
20008688:	03f40000 	mvnseq	r0, #0
2000868c:	ff000000 			; <UNDEFINED> instruction: 0xff000000
20008690:	000000ff 	strdeq	r0, [r0], -pc	; <UNPREDICTABLE>
20008694:	00002000 	andeq	r2, r0, r0
20008698:	01f80000 	mvnseq	r0, r0
2000869c:	ff000000 			; <UNDEFINED> instruction: 0xff000000
200086a0:	0000007f 	andeq	r0, r0, pc, ror r0
200086a4:	0010c000 	andseq	ip, r0, r0
200086a8:	03f80000 	mvnseq	r0, #0
200086ac:	ff800000 			; <UNDEFINED> instruction: 0xff800000
200086b0:	0000003f 	andeq	r0, r0, pc, lsr r0
200086b4:	000f0000 	andeq	r0, pc, r0
200086b8:	03e000e0 	mvneq	r0, #224	; 0xe0
200086bc:	ffc00000 			; <UNDEFINED> instruction: 0xffc00000
200086c0:	0000001f 	andeq	r0, r0, pc, lsl r0
200086c4:	00026000 	andeq	r6, r2, r0
200086c8:	035001f0 	cmpeq	r0, #240, 2	; 0x3c
200086cc:	ffe00000 			; <UNDEFINED> instruction: 0xffe00000
200086d0:	0000001f 	andeq	r0, r0, pc, lsl r0
200086d4:	00118000 	andseq	r8, r1, r0
200086d8:	03ec01f0 	mvneq	r0, #240, 2	; 0x3c
200086dc:	fff80000 			; <UNDEFINED> instruction: 0xfff80000
200086e0:	0000000f 	andeq	r0, r0, pc
200086e4:	200e0000 	andcs	r0, lr, r0
200086e8:	00a022f0 	strdeq	r2, [r0], r0	; <UNPREDICTABLE>
200086ec:	fffe0000 			; <UNDEFINED> instruction: 0xfffe0000
200086f0:	00000007 	andeq	r0, r0, r7
200086f4:	18000000 	stmdane	r0, {}	; <UNPREDICTABLE>
200086f8:	03c0c170 	biceq	ip, r0, #112, 2
200086fc:	ffff0000 			; <UNDEFINED> instruction: 0xffff0000
20008700:	00000003 	andeq	r0, r0, r3
20008704:	e4000000 	str	r0, [r0], #-0
20008708:	03c270f3 	biceq	r7, r2, #243	; 0xf3

2000870c <castle_light_bits>:
	...
20008768:	00000040 	andeq	r0, r0, r0, asr #32
	...
20008774:	0c003000 	stceq	0, cr3, [r0], {-0}
20008778:	00000040 	andeq	r0, r0, r0, asr #32
	...
20008784:	0e007000 	cdpeq	0, 0, cr7, cr0, cr0, {0}
20008788:	000600c0 	andeq	r0, r6, r0, asr #1
	...
20008794:	0f007010 	svceq	0x00007010
20008798:	000601e0 	andeq	r0, r6, r0, ror #3
	...
200087a4:	1f007810 	svcne	0x00007810
200087a8:	000601e0 	andeq	r0, r6, r0, ror #3
	...
200087b4:	3f81f818 	svccc	0x0081f818
200087b8:	001f03e0 	andseq	r0, pc, r0, ror #7
	...
200087c4:	ffe3f818 			; <UNDEFINED> instruction: 0xffe3f818
200087c8:	001fc7f1 			; <UNDEFINED> instruction: 0x001fc7f1
	...
200087d4:	fffffc1c 			; <UNDEFINED> instruction: 0xfffffc1c
200087d8:	083fffff 	ldmdaeq	pc!, {r0, r1, r2, r3, r4, r5, r6, r7, r8, r9, sl, fp, ip, sp, lr, pc}	; <UNPREDICTABLE>
	...
200087e4:	fffffe3c 			; <UNDEFINED> instruction: 0xfffffe3c
200087e8:	187fffff 	ldmdane	pc!, {r0, r1, r2, r3, r4, r5, r6, r7, r8, r9, sl, fp, ip, sp, lr, pc}^	; <UNPREDICTABLE>
	...
200087f4:	fffffffc 			; <UNDEFINED> instruction: 0xfffffffc
200087f8:	3c7fffff 	ldclcc	15, cr15, [pc], #-1020	; 20008404 <castle_gray_bits+0xf8>
	...
20008804:	fffffffe 			; <UNDEFINED> instruction: 0xfffffffe
20008808:	3fffffff 	svccc	0x00ffffff
2000880c:	00000000 	andeq	r0, r0, r0
20008810:	60000000 	andvs	r0, r0, r0
20008814:	fffffffe 			; <UNDEFINED> instruction: 0xfffffffe
20008818:	7fffffff 	svcvc	0x00ffffff
2000881c:	00000000 	andeq	r0, r0, r0
20008820:	70000000 	andvc	r0, r0, r0
20008824:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
20008828:	7fffffff 	svcvc	0x00ffffff
2000882c:	00000000 	andeq	r0, r0, r0
20008830:	70000000 	andvc	r0, r0, r0
20008834:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
20008838:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
2000883c:	00000000 	andeq	r0, r0, r0
20008840:	f0000000 			; <UNDEFINED> instruction: 0xf0000000
20008844:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
20008848:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
2000884c:	00000000 	andeq	r0, r0, r0
20008850:	f0000000 			; <UNDEFINED> instruction: 0xf0000000
20008854:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
20008858:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
2000885c:	00000000 	andeq	r0, r0, r0
20008860:	f0000000 			; <UNDEFINED> instruction: 0xf0000000
20008864:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
20008868:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
2000886c:	00000000 	andeq	r0, r0, r0
20008870:	f0000000 			; <UNDEFINED> instruction: 0xf0000000
20008874:	fb6fffff 	blx	21c0887a <firstTime.4104+0x1bf440e>
20008878:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
2000887c:	00000000 	andeq	r0, r0, r0
20008880:	f0000000 			; <UNDEFINED> instruction: 0xf0000000
20008884:	f007ffff 			; <UNDEFINED> instruction: 0xf007ffff
20008888:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
2000888c:	00000000 	andeq	r0, r0, r0
20008890:	f8000000 			; <UNDEFINED> instruction: 0xf8000000
20008894:	f407ffff 			; <UNDEFINED> instruction: 0xf407ffff
20008898:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
2000889c:	00000000 	andeq	r0, r0, r0
200088a0:	f8000000 			; <UNDEFINED> instruction: 0xf8000000
200088a4:	f007ffff 			; <UNDEFINED> instruction: 0xf007ffff
200088a8:	ffffff6d 			; <UNDEFINED> instruction: 0xffffff6d
200088ac:	00000000 	andeq	r0, r0, r0
200088b0:	f8000000 			; <UNDEFINED> instruction: 0xf8000000
200088b4:	f80fffff 			; <UNDEFINED> instruction: 0xf80fffff
200088b8:	fffffe00 			; <UNDEFINED> instruction: 0xfffffe00
200088bc:	00000000 	andeq	r0, r0, r0
200088c0:	fc000000 	stc2	0, cr0, [r0], {-0}
200088c4:	f80fedbf 			; <UNDEFINED> instruction: 0xf80fedbf
200088c8:	fffffe00 			; <UNDEFINED> instruction: 0xfffffe00
200088cc:	00000000 	andeq	r0, r0, r0
200088d0:	fc000000 	stc2	0, cr0, [r0], {-0}
200088d4:	f80fc01f 			; <UNDEFINED> instruction: 0xf80fc01f
200088d8:	fffffe80 			; <UNDEFINED> instruction: 0xfffffe80
200088dc:	00000000 	andeq	r0, r0, r0
200088e0:	fc000000 	stc2	0, cr0, [r0], {-0}
200088e4:	f90fc81f 			; <UNDEFINED> instruction: 0xf90fc81f
200088e8:	fffffe80 			; <UNDEFINED> instruction: 0xfffffe80
200088ec:	00000000 	andeq	r0, r0, r0
200088f0:	fc000000 	stc2	0, cr0, [r0], {-0}
200088f4:	f90fd41f 			; <UNDEFINED> instruction: 0xf90fd41f
200088f8:	fffffe00 			; <UNDEFINED> instruction: 0xfffffe00
200088fc:	00000000 	andeq	r0, r0, r0
20008900:	fc000000 	stc2	0, cr0, [r0], {-0}
20008904:	f90fe03f 			; <UNDEFINED> instruction: 0xf90fe03f
20008908:	ffffff01 			; <UNDEFINED> instruction: 0xffffff01
2000890c:	00000000 	andeq	r0, r0, r0
20008910:	fc000000 	stc2	0, cr0, [r0], {-0}
20008914:	f88fe03f 			; <UNDEFINED> instruction: 0xf88fe03f
20008918:	ffffff01 			; <UNDEFINED> instruction: 0xffffff01
2000891c:	00000000 	andeq	r0, r0, r0
20008920:	fc000000 	stc2	0, cr0, [r0], {-0}
20008924:	f88fe03f 			; <UNDEFINED> instruction: 0xf88fe03f
20008928:	fedbff19 	mrc2	15, 6, pc, cr11, cr9, {0}
2000892c:	00000000 	andeq	r0, r0, r0
20008930:	fc000000 	stc2	0, cr0, [r0], {-0}
20008934:	f80fe03f 			; <UNDEFINED> instruction: 0xf80fe03f
20008938:	fd01ff11 	stc2	15, cr15, [r1, #-68]	; 0xffffffbc
2000893c:	00000000 	andeq	r0, r0, r0
20008940:	fe000000 	cdp2	0, 0, cr0, cr0, cr0, {0}
20008944:	f80fe03f 			; <UNDEFINED> instruction: 0xf80fe03f
20008948:	fd01ff19 	stc2	15, cr15, [r1, #-100]	; 0xffffff9c
2000894c:	00000000 	andeq	r0, r0, r0
20008950:	fe000000 	cdp2	0, 0, cr0, cr0, cr0, {0}
20008954:	f007e03f 			; <UNDEFINED> instruction: 0xf007e03f
20008958:	fc01ff01 	stc2	15, cr15, [r1], {1}
2000895c:	00000000 	andeq	r0, r0, r0
20008960:	fe000000 	cdp2	0, 0, cr0, cr0, cr0, {0}
20008964:	f007c01f 			; <UNDEFINED> instruction: 0xf007c01f
20008968:	fe03ff01 	cdp2	15, 0, cr15, cr3, cr1, {0}
2000896c:	00000000 	andeq	r0, r0, r0
20008970:	ff000000 			; <UNDEFINED> instruction: 0xff000000
20008974:	b007c01f 	andlt	ip, r7, pc, lsl r0
20008978:	fe03fe01 	cdp2	14, 0, cr15, cr3, cr1, {0}
2000897c:	00000000 	andeq	r0, r0, r0
20008980:	ff800000 			; <UNDEFINED> instruction: 0xff800000
20008984:	0007c01f 	andeq	ip, r7, pc, lsl r0
20008988:	fe03fe00 	cdp2	14, 0, cr15, cr3, cr0, {0}
2000898c:	00000000 	andeq	r0, r0, r0
20008990:	ff800000 			; <UNDEFINED> instruction: 0xff800000
20008994:	0007c01f 	andeq	ip, r7, pc, lsl r0
20008998:	fe03fe10 	mcr2	14, 0, pc, cr3, cr0, {0}	; <UNPREDICTABLE>
2000899c:	00000000 	andeq	r0, r0, r0
200089a0:	ffc00000 			; <UNDEFINED> instruction: 0xffc00000
200089a4:	0007c21f 	andeq	ip, r7, pc, lsl r2
200089a8:	fe03fe00 	cdp2	14, 0, cr15, cr3, cr0, {0}
200089ac:	00000000 	andeq	r0, r0, r0
200089b0:	ffc00000 			; <UNDEFINED> instruction: 0xffc00000
200089b4:	0087c31f 	addeq	ip, r7, pc, lsl r3
200089b8:	fe03a400 	cdp2	4, 0, cr10, cr3, cr0, {0}
200089bc:	00000000 	andeq	r0, r0, r0
200089c0:	ffe00000 			; <UNDEFINED> instruction: 0xffe00000
200089c4:	00c7c31f 	sbceq	ip, r7, pc, lsl r3
200089c8:	fe030000 	cdp2	0, 0, cr0, cr3, cr0, {0}
200089cc:	00000000 	andeq	r0, r0, r0
200089d0:	ffe60000 			; <UNDEFINED> instruction: 0xffe60000
200089d4:	00c4c01f 	sbceq	ip, r4, pc, lsl r0
200089d8:	fe000000 	cdp2	0, 0, cr0, cr0, cr0, {0}
200089dc:	00000000 	andeq	r0, r0, r0
200089e0:	ffe70000 			; <UNDEFINED> instruction: 0xffe70000
200089e4:	8000001f 	andhi	r0, r0, pc, lsl r0
200089e8:	fc000001 	stc2	0, cr0, [r0], {1}
200089ec:	00000000 	andeq	r0, r0, r0
200089f0:	fff70000 			; <UNDEFINED> instruction: 0xfff70000
200089f4:	8000001f 	andhi	r0, r0, pc, lsl r0
200089f8:	fc000009 	stc2	0, cr0, [r0], {9}
200089fc:	00000000 	andeq	r0, r0, r0
20008a00:	ffff8000 			; <UNDEFINED> instruction: 0xffff8000
20008a04:	8000001f 	andhi	r0, r0, pc, lsl r0
20008a08:	fc200001 	stc2	0, cr0, [r0], #-4
20008a0c:	00000000 	andeq	r0, r0, r0
20008a10:	ffff8000 			; <UNDEFINED> instruction: 0xffff8000
20008a14:	0000001f 	andeq	r0, r0, pc, lsl r0
20008a18:	fc300000 	ldc2	0, cr0, [r0], #-0
20008a1c:	00000000 	andeq	r0, r0, r0
20008a20:	ffffc000 			; <UNDEFINED> instruction: 0xffffc000
20008a24:	0000000f 	andeq	r0, r0, pc
20008a28:	fc300000 	ldc2	0, cr0, [r0], #-0
20008a2c:	00000000 	andeq	r0, r0, r0
20008a30:	ffffc000 			; <UNDEFINED> instruction: 0xffffc000
20008a34:	0000000f 	andeq	r0, r0, pc
20008a38:	fc000000 	stc2	0, cr0, [r0], {-0}
20008a3c:	00000000 	andeq	r0, r0, r0
20008a40:	ffffe000 			; <UNDEFINED> instruction: 0xffffe000
20008a44:	1000000f 	andne	r0, r0, pc
20008a48:	fc000000 	stc2	0, cr0, [r0], {-0}
20008a4c:	00000000 	andeq	r0, r0, r0
20008a50:	ffffe400 			; <UNDEFINED> instruction: 0xffffe400
20008a54:	0800000f 	stmdaeq	r0, {r0, r1, r2, r3}
20008a58:	f8080000 			; <UNDEFINED> instruction: 0xf8080000
20008a5c:	00000000 	andeq	r0, r0, r0
20008a60:	fffffe00 			; <UNDEFINED> instruction: 0xfffffe00
20008a64:	0000000f 	andeq	r0, r0, pc
20008a68:	f8000000 			; <UNDEFINED> instruction: 0xf8000000
20008a6c:	00000000 	andeq	r0, r0, r0
20008a70:	fffffe00 			; <UNDEFINED> instruction: 0xfffffe00
20008a74:	00000007 	andeq	r0, r0, r7
20008a78:	f8020000 			; <UNDEFINED> instruction: 0xf8020000
20008a7c:	00000000 	andeq	r0, r0, r0
20008a80:	ffffff00 			; <UNDEFINED> instruction: 0xffffff00
20008a84:	00000007 	andeq	r0, r0, r7
20008a88:	f8020000 			; <UNDEFINED> instruction: 0xf8020000
20008a8c:	00000000 	andeq	r0, r0, r0
20008a90:	ffffff00 			; <UNDEFINED> instruction: 0xffffff00
20008a94:	00100007 	andseq	r0, r0, r7
20008a98:	f8040000 			; <UNDEFINED> instruction: 0xf8040000
20008a9c:	00000000 	andeq	r0, r0, r0
20008aa0:	ffffff80 			; <UNDEFINED> instruction: 0xffffff80
20008aa4:	00080007 	andeq	r0, r8, r7
20008aa8:	f80001c0 			; <UNDEFINED> instruction: 0xf80001c0
20008aac:	00000000 	andeq	r0, r0, r0
20008ab0:	ffffffc0 			; <UNDEFINED> instruction: 0xffffffc0
20008ab4:	00000007 	andeq	r0, r0, r7
20008ab8:	f8080300 			; <UNDEFINED> instruction: 0xf8080300
20008abc:	00000000 	andeq	r0, r0, r0
20008ac0:	ffffffe0 			; <UNDEFINED> instruction: 0xffffffe0
20008ac4:	00200007 	eoreq	r0, r0, r7
20008ac8:	f8080200 			; <UNDEFINED> instruction: 0xf8080200
20008acc:	00000000 	andeq	r0, r0, r0
20008ad0:	ffffffe0 			; <UNDEFINED> instruction: 0xffffffe0
20008ad4:	00000007 	andeq	r0, r0, r7
20008ad8:	f8000200 			; <UNDEFINED> instruction: 0xf8000200
20008adc:	00000000 	andeq	r0, r0, r0
20008ae0:	fffffff0 			; <UNDEFINED> instruction: 0xfffffff0
20008ae4:	00000007 	andeq	r0, r0, r7
20008ae8:	f8000100 			; <UNDEFINED> instruction: 0xf8000100
20008aec:	00000000 	andeq	r0, r0, r0
20008af0:	fffffff8 			; <UNDEFINED> instruction: 0xfffffff8
20008af4:	01000007 	tsteq	r0, r7
20008af8:	f8100280 			; <UNDEFINED> instruction: 0xf8100280
20008afc:	00000000 	andeq	r0, r0, r0
20008b00:	fffffffc 			; <UNDEFINED> instruction: 0xfffffffc
20008b04:	02000007 	andeq	r0, r0, #7
20008b08:	f8000300 			; <UNDEFINED> instruction: 0xf8000300

20008b0c <title_light_bits>:
	...
20008b28:	00000400 	andeq	r0, r0, r0, lsl #8
20008b2c:	30000000 	andcc	r0, r0, r0
20008b30:	f80f9e06 			; <UNDEFINED> instruction: 0xf80f9e06
20008b34:	06300000 	ldrteq	r0, [r0], -r0
20008b38:	00cb8cba 	strheq	r8, [fp], #202	; 0xca
20008b3c:	ba033000 	blt	200d4b44 <firstTime.4104+0xc06d8>
20008b40:	0000eb4f 	andeq	lr, r0, pc, asr #22
20008b44:	439ef3f0 	orrsmi	pc, lr, #240, 6	; 0xc0000003
20008b48:	f000003a 			; <UNDEFINED> instruction: 0xf000003a
20008b4c:	5a478e9b 	bpl	211ec5c0 <firstTime.4104+0x11d8154>
20008b50:	9b300000 	blls	20c08b58 <firstTime.4104+0xbf46ec>
20008b54:	019bcd36 	orrseq	ip, fp, r6, lsr sp
20008b58:	66db3000 	ldrbvs	r3, [fp], r0
20008b5c:	000319d9 	ldrdeq	r1, [r3], -r9
20008b60:	19667330 	stmdbne	r6!, {r4, r5, r8, r9, ip, sp, lr}^
20008b64:	30000310 	andcc	r0, r0, r0, lsl r3
20008b68:	00000001 	andeq	r0, r0, r1
20008b6c:	80000000 	andhi	r0, r0, r0
20008b70:	001d3e7b 	andseq	r3, sp, fp, ror lr
20008b74:	0ac00000 	beq	1f008b7c <startup-0xff7484>
20008b78:	00000528 	andeq	r0, r0, r8, lsr #10
20008b7c:	ec3a4000 	ldc	0, cr4, [sl], #-0
20008b80:	0000000d 	andeq	r0, r0, sp
20008b84:	05240bc0 	streq	r0, [r4, #-3008]!	; 0xfffff440
20008b88:	00f00000 	rscseq	r0, r0, r0
20008b8c:	001c0000 	andseq	r0, ip, r0
20008b90:	03ebb000 	mvneq	fp, #0
20008b94:	00000000 	andeq	r0, r0, r0
20008b98:	0c032330 	stceq	3, cr2, [r3], {48}	; 0x30
20008b9c:	300123e4 	andcc	r2, r1, r4, ror #7
20008ba0:	940c1b2a 	strls	r1, [ip], #-2858	; 0xfffff4d6
20008ba4:	ea300120 	b	20c0902c <firstTime.4104+0xbf4bc0>
20008ba8:	ec860c3d 	stc	12, cr0, [r6], {61}	; 0x3d
20008bac:	06ea3001 	strbteq	r3, [sl], r1
20008bb0:	01e69648 	mvneq	r9, r8, asr #12
20008bb4:	4b9e6b30 	blmi	1e7a387c <startup-0x185c784>
20008bb8:	30012696 	mulcc	r1, r6, r6
20008bbc:	92bbb06b 	adcsls	fp, fp, #107	; 0x6b
20008bc0:	69f00126 	ldmibvs	r0!, {r1, r2, r5, r8}^
20008bc4:	2691b832 			; <UNDEFINED> instruction: 0x2691b832
20008bc8:	1e687001 	cdpne	0, 6, cr7, cr8, cr1, {0}
20008bcc:	010e9110 	tsteq	lr, r0, lsl r1
	...

20008be0 <title_gray_bits>:
	...
20008be8:	40000000 	andmi	r0, r0, r0
20008bec:	0f840000 	svceq	0x00840000
20008bf0:	00b0c3fe 	ldrshteq	ip, [r0], lr
20008bf4:	fffff800 	vcmla.f32	d31, d15, d0[0], #270
20008bf8:	001f8f1f 	andseq	r8, pc, pc, lsl pc	; <UNPREDICTABLE>
20008bfc:	fffffbf8 			; <UNDEFINED> instruction: 0xfffffbf8
20008c00:	c8001fff 	stmdagt	r0, {r0, r1, r2, r3, r4, r5, r6, r7, r8, r9, sl, fp, ip}
20008c04:	07f061f9 			; <UNDEFINED> instruction: 0x07f061f9
20008c08:	f1cc001f 			; <UNDEFINED> instruction: 0xf1cc001f
20008c0c:	be347305 	cdplt	3, 3, cr7, cr4, cr5, {0}
20008c10:	05f0ce00 	ldrbeq	ip, [r0, #3584]!	; 0xe00
20008c14:	007e1430 	rsbseq	r1, lr, r0, lsr r4
20008c18:	2041080f 	subcs	r0, r1, pc, lsl #16
20008c1c:	0e003e01 	cdpeq	14, 0, cr3, cr0, cr1, {0}
20008c20:	01384060 	teqeq	r8, r0, rrx
20008c24:	600c001e 	andvs	r0, ip, lr, lsl r0
20008c28:	1c4030c0 	mcrrne	0, 12, r3, r0, cr0
20008c2c:	10208c00 	eorne	r8, r0, r0, lsl #24
20008c30:	0038c024 	eorseq	ip, r8, r4, lsr #32
20008c34:	0411088c 	ldreq	r0, [r1], #-2188	; 0xfffff774
20008c38:	c800f8ce 	stmdagt	r0, {r1, r2, r3, r6, r7, fp, ip, sp, lr, pc}
20008c3c:	ffe6990c 			; <UNDEFINED> instruction: 0xffe6990c
20008c40:	7cfa0178 	ldfvce	f0, [sl], #480	; 0x1e0
20008c44:	3fe0c184 	svccc	0x00e0c184
20008c48:	013ff400 	teqeq	pc, r0, lsl #8	; <UNPREDICTABLE>
20008c4c:	001fc0c7 	andseq	ip, pc, r7, asr #1
20008c50:	03c03ff0 	biceq	r3, r0, #240, 30	; 0x3c0
20008c54:	fc0007e0 	stc2	7, cr0, [r0], {224}	; 0xe0
20008c58:	e003803f 	and	r8, r3, pc, lsr r0
20008c5c:	7f0c009f 	svcvc	0x000c009f
20008c60:	ffc1fbe4 			; <UNDEFINED> instruction: 0xffc1fbe4
20008c64:	fc140c03 	ldc2	12, cr0, [r4], {3}
20008c68:	03ffc7ff 	mvnseq	ip, #66846720	; 0x3fc0000
20008c6c:	f3fc1c0c 	vdup.32	d17, d12[1]
20008c70:	0e02dc1b 	mcreq	12, 0, sp, cr2, cr11, {0}
20008c74:	63f3e490 	mvnsvs	lr, #144, 8	; 0x90000000
20008c78:	018e0218 	orreq	r0, lr, r8, lsl r2
20008c7c:	1251e382 	subsne	lr, r1, #134217730	; 0x8000002
20008c80:	88018e02 	stmdahi	r1, {r1, r9, sl, fp, pc}
20008c84:	020061a7 	andeq	r6, r0, #-1073741783	; 0xc0000029
20008c88:	2460008e 	strbtcs	r0, [r0], #-142	; 0xffffff72
20008c8c:	8e021041 	cdphi	0, 0, cr1, cr2, cr1, {2}
20008c90:	41000300 	mrsmi	r0, LR_irq
20008c94:	000e0290 	muleq	lr, r0, r2
20008c98:	9048008d 	subls	r0, r8, sp, lsl #1
20008c9c:	81040c02 	tsthi	r4, r2, lsl #24
20008ca0:	02a04c87 	adceq	r4, r0, #34560	; 0x8700
20008ca4:	cffffffc 	svcgt	0x00fffffc
20008ca8:	8203e2fc 	andhi	lr, r3, #252, 4	; 0xc000000f
20008cac:	e3f81c07 	mvns	r1, #1792	; 0x700
20008cb0:	000001ff 	strdeq	r0, [r0], -pc	; <UNPREDICTABLE>

20008cb4 <title_black_bits>:
	...
20008cdc:	08000000 	stmdaeq	r0, {}	; <UNPREDICTABLE>
20008ce0:	01000040 	tsteq	r0, r0, asr #32
20008ce4:	400c0000 	andmi	r0, ip, r0
20008ce8:	00010080 	andeq	r0, r1, r0, lsl #1
20008cec:	9c200400 	cfstrsls	mvf0, [r0], #-0
20008cf0:	000001c4 	andeq	r0, r0, r4, asr #3
20008cf4:	a4803104 	strge	r3, [r0], #260	; 0x104
20008cf8:	04c00001 	strbeq	r0, [r0], #1
20008cfc:	02240209 	eoreq	r0, r4, #-1879048192	; 0x90000000
20008d00:	89044000 	stmdbhi	r4, {lr}
20008d04:	00042602 	andeq	r2, r4, r2, lsl #12
20008d08:	e2888440 	add	r8, r8, #64, 8	; 0x40000000
20008d0c:	00000421 	andeq	r0, r0, r1, lsr #8
20008d10:	001966f2 			; <UNDEFINED> instruction: 0x001966f2
20008d14:	03000007 	movweq	r0, #7
20008d18:	00020000 	andeq	r0, r2, r0
20008d1c:	f4000000 	vst4.8	{d0-d3}, [r0], r0
20008d20:	00003a10 	andeq	r3, r0, r0, lsl sl
20008d24:	10058000 	andne	r8, r5, r0
20008d28:	00000012 	andeq	r0, r0, r2, lsl r0
20008d2c:	1ad87400 	bne	1f625d34 <startup-0x9da2cc>
20008d30:	80000000 	andhi	r0, r0, r0
20008d34:	0022041b 	eoreq	r0, r2, fp, lsl r4
20008d38:	00004000 	andeq	r4, r0, r0
20008d3c:	00003800 	andeq	r3, r0, r0, lsl #16
20008d40:	0000c0c0 	andeq	ip, r0, r0, asr #1
20008d44:	c0000000 	andgt	r0, r0, r0
20008d48:	08000045 	stmdaeq	r0, {r0, r2, r6}
20008d4c:	144000c7 	strbne	r0, [r0], #-199	; 0xffffff39
20008d50:	01281040 			; <UNDEFINED> instruction: 0x01281040
20008d54:	71144000 	tstvc	r4, r0
20008d58:	00190810 	andseq	r0, r9, r0, lsl r8
20008d5c:	90019440 	andls	r9, r1, r0, asr #8
20008d60:	4000c928 	andmi	ip, r0, r8, lsr #18
20008d64:	2c444c94 	mcrrcs	12, 9, r4, r4, cr4
20008d68:	96000049 	strls	r0, [r0], -r9, asr #32
20008d6c:	49264740 	stmdbmi	r6!, {r6, r8, r9, sl, lr}
20008d70:	60938000 	addsvs	r8, r3, r0
20008d74:	00512268 	subseq	r2, r1, r8, ror #4
20008d78:	30000000 	andcc	r0, r0, r0
20008d7c:	00001d03 	andeq	r1, r0, r3, lsl #26
	...

20008d88 <bg_bits>:
	...
20008d98:	fff80000 			; <UNDEFINED> instruction: 0xfff80000
20008d9c:	0000001f 	andeq	r0, r0, pc, lsl r0
	...
20008da8:	fffe0000 			; <UNDEFINED> instruction: 0xfffe0000
20008dac:	000003ff 	strdeq	r0, [r0], -pc	; <UNPREDICTABLE>
	...
20008db8:	ffff0000 			; <UNDEFINED> instruction: 0xffff0000
20008dbc:	00001fff 	strdeq	r1, [r0], -pc	; <UNPREDICTABLE>
	...
20008dc8:	ffff8000 			; <UNDEFINED> instruction: 0xffff8000
20008dcc:	0000ffff 	strdeq	pc, [r0], -pc	; <UNPREDICTABLE>
	...
20008dd8:	ffff8000 			; <UNDEFINED> instruction: 0xffff8000
20008ddc:	0007ffff 	strdeq	pc, [r7], -pc	; <UNPREDICTABLE>
	...
20008de8:	ffffc000 			; <UNDEFINED> instruction: 0xffffc000
20008dec:	003fffff 	ldrshteq	pc, [pc], -pc	; <UNPREDICTABLE>
	...
20008df8:	ffffe000 			; <UNDEFINED> instruction: 0xffffe000
20008dfc:	01ffffff 	ldrsheq	pc, [pc, #255]	; 20008f03 <bg_bits+0x17b>	; <UNPREDICTABLE>
20008e00:	0001f000 	andeq	pc, r1, r0
20008e04:	00000000 	andeq	r0, r0, r0
20008e08:	007fe000 	rsbseq	lr, pc, r0
20008e0c:	0ffffffe 	svceq	0x00fffffe
20008e10:	0003f800 	andeq	pc, r3, r0, lsl #16
20008e14:	00000000 	andeq	r0, r0, r0
20008e18:	003fe000 	eorseq	lr, pc, r0
20008e1c:	7fffffc0 	svcvc	0x00ffffc0
20008e20:	0003f800 	andeq	pc, r3, r0, lsl #16
20008e24:	001f8000 	andseq	r8, pc, r0
20008e28:	001fe000 	andseq	lr, pc, r0
20008e2c:	fffffe00 			; <UNDEFINED> instruction: 0xfffffe00
20008e30:	0003f801 	andeq	pc, r3, r1, lsl #16
20008e34:	003fc000 	eorseq	ip, pc, r0
20008e38:	003fe000 	eorseq	lr, pc, r0
20008e3c:	fffff000 			; <UNDEFINED> instruction: 0xfffff000
20008e40:	3f83f807 	svccc	0x0083f807
20008e44:	003fe000 	eorseq	lr, pc, r0
20008e48:	01ffe000 	mvnseq	lr, r0
20008e4c:	ffff8000 			; <UNDEFINED> instruction: 0xffff8000
20008e50:	7fc3f80f 	svcvc	0x00c3f80f
20008e54:	003fe7f8 	ldrshteq	lr, [pc], -r8
20008e58:	07ffe000 	ldrbeq	lr, [pc, r0]!
20008e5c:	fffc0000 			; <UNDEFINED> instruction: 0xfffc0000
20008e60:	7fe1f01f 	svcvc	0x00e1f01f
20008e64:	003ffffc 	ldrshteq	pc, [pc], -ip	; <UNPREDICTABLE>
20008e68:	3fffc000 	svccc	0x00ffc000
20008e6c:	ffe00000 			; <UNDEFINED> instruction: 0xffe00000
20008e70:	7ff0003f 	svcvc	0x00f0003f
20008e74:	007ffffc 	ldrshteq	pc, [pc], #-252	; <UNPREDICTABLE>
20008e78:	ffffc000 			; <UNDEFINED> instruction: 0xffffc000
20008e7c:	ff000000 			; <UNDEFINED> instruction: 0xff000000
20008e80:	7ff8007f 	svcvc	0x00f8007f
20008e84:	3ffffffc 	svccc	0x00fffffc
20008e88:	ffffc000 			; <UNDEFINED> instruction: 0xffffc000
20008e8c:	f8000003 			; <UNDEFINED> instruction: 0xf8000003
20008e90:	7ffc00ff 	svcvc	0x00fc00ff
20008e94:	7ffffffc 	svcvc	0x00fffffc
20008e98:	ffff8000 			; <UNDEFINED> instruction: 0xffff8000
20008e9c:	e000000f 	and	r0, r0, pc
20008ea0:	7ffe01ff 	svcvc	0x00fe01ff
20008ea4:	fffffffc 			; <UNDEFINED> instruction: 0xfffffffc
20008ea8:	fffc0000 			; <UNDEFINED> instruction: 0xfffc0000
20008eac:	8000001f 	andhi	r0, r0, pc, lsl r0
20008eb0:	7fff01ff 	svcvc	0x00ff01ff
20008eb4:	fffffffc 			; <UNDEFINED> instruction: 0xfffffffc
20008eb8:	ffe00000 			; <UNDEFINED> instruction: 0xffe00000
20008ebc:	0000007f 	andeq	r0, r0, pc, ror r0
20008ec0:	7fff83ff 	svcvc	0x00ff83ff
20008ec4:	fffffff8 			; <UNDEFINED> instruction: 0xfffffff8
20008ec8:	ff800000 			; <UNDEFINED> instruction: 0xff800000
20008ecc:	000000ff 	strdeq	r0, [r0], -pc	; <UNPREDICTABLE>
20008ed0:	7fffc3fe 	svcvc	0x00ffc3fe
20008ed4:	ffffffe0 			; <UNDEFINED> instruction: 0xffffffe0
20008ed8:	fc7ffff0 	ldc2l	15, cr15, [pc], #-960	; 20008b20 <title_light_bits+0x14>
20008edc:	07c001ff 			; <UNDEFINED> instruction: 0x07c001ff
20008ee0:	7fffe7fc 	svcvc	0x00ffe7fc
20008ee4:	ffffffc0 			; <UNDEFINED> instruction: 0xffffffc0
20008ee8:	f0fffffe 			; <UNDEFINED> instruction: 0xf0fffffe
20008eec:	0fe007ff 	svceq	0x00e007ff
20008ef0:	7ffff7fc 	svcvc	0x00fff7fc
20008ef4:	ffffff80 			; <UNDEFINED> instruction: 0xffffff80
20008ef8:	c0ffffff 	ldrshtgt	pc, [pc], #255	; <UNPREDICTABLE>
20008efc:	0fe00fff 	svceq	0x00e00fff
20008f00:	7ffffff8 	svcvc	0x00fffff8
20008f04:	ffffff00 			; <UNDEFINED> instruction: 0xffffff00
20008f08:	01ffffff 	ldrsheq	pc, [pc, #255]	; 2000900f <bg_bits+0x287>	; <UNPREDICTABLE>
20008f0c:	0fe01fff 	svceq	0x00e01fff
20008f10:	7ffffff8 	svcvc	0x00fffff8
20008f14:	7ffffc00 	svcvc	0x00fffc00
20008f18:	01ffffff 	ldrsheq	pc, [pc, #255]	; 2000901f <bg_bits+0x297>	; <UNPREDICTABLE>
20008f1c:	0fe03ffe 	svceq	0x00e03ffe
20008f20:	3fdffff0 	svccc	0x00dffff0
20008f24:	3ffffe00 	svccc	0x00fffe00
20008f28:	01ffffff 	ldrsheq	pc, [pc, #255]	; 2000902f <bg_bits+0x2a7>	; <UNPREDICTABLE>
20008f2c:	0fe03ff8 	svceq	0x00e03ff8
20008f30:	3fe7fff0 	svccc	0x00e7fff0
20008f34:	07fffe00 	ldrbeq	pc, [pc, r0, lsl #28]!	; <UNPREDICTABLE>
20008f38:	03ffffff 	mvnseq	pc, #1020	; 0x3fc
20008f3c:	07c07ff0 			; <UNDEFINED> instruction: 0x07c07ff0
20008f40:	1fe7fff0 	svcne	0x00e7fff0
20008f44:	0ffffe00 	svceq	0x00fffe00
20008f48:	03fc00ff 	mvnseq	r0, #255	; 0xff
20008f4c:	0000ffe0 	andeq	pc, r0, r0, ror #31
20008f50:	1ff3ffe0 	svcne	0x00f3ffe0
20008f54:	1ffffe00 	svcne	0x00fffe00
20008f58:	03fc001f 	mvnseq	r0, #31
20008f5c:	0001ff80 	andeq	pc, r1, r0, lsl #31
20008f60:	1ff9ffe0 	svcne	0x00f9ffe0
20008f64:	3ffffe00 	svccc	0x00fffe00
20008f68:	03fc0007 	mvnseq	r0, #7
20008f6c:	0001ff80 	andeq	pc, r1, r0, lsl #31
20008f70:	0ffcffe0 	svceq	0x00fcffe0
20008f74:	3ffdfe00 	svccc	0x00fdfe00
20008f78:	07f80007 	ldrbeq	r0, [r8, r7]!
20008f7c:	0003ff00 	andeq	pc, r3, r0, lsl #30
20008f80:	0ffe7ff0 	svceq	0x00fe7ff0
20008f84:	3ffcfe00 	svccc	0x00fcfe00
20008f88:	07f80003 	ldrbeq	r0, [r8, r3]!
20008f8c:	0007fe00 	andeq	pc, r7, r0, lsl #28
20008f90:	07fe7ff8 			; <UNDEFINED> instruction: 0x07fe7ff8
20008f94:	3ff8fe00 	svccc	0x00f8fe00
20008f98:	0ff80003 	svceq	0x00f80003
20008f9c:	0007fc00 	andeq	pc, r7, r0, lsl #24
20008fa0:	03fffffc 	mvnseq	pc, #252, 30	; 0x3f0
20008fa4:	3ff87c00 	svccc	0x00f87c00
20008fa8:	0ff80003 	svceq	0x00f80003
20008fac:	0007fc00 	andeq	pc, r7, r0, lsl #24
20008fb0:	01fffffe 	ldrsheq	pc, [pc, #254]	; 200090b6 <bg_bits+0x32e>	; <UNPREDICTABLE>
20008fb4:	1ff00000 	svcne	0x00f00000	; IMB
20008fb8:	0ff00007 	svceq	0x00f00007
20008fbc:	000ff800 	andeq	pc, pc, r0, lsl #16
20008fc0:	01ffffff 	ldrsheq	pc, [pc, #255]	; 200090c7 <bg_bits+0x33f>	; <UNPREDICTABLE>
20008fc4:	07f0003e 			; <UNDEFINED> instruction: 0x07f0003e
20008fc8:	0ff00007 	svceq	0x00f00007
20008fcc:	800ff000 	andhi	pc, pc, r0
20008fd0:	00ffffff 	ldrshteq	pc, [pc], #255	; <UNPREDICTABLE>
20008fd4:	03e0007f 	mvneq	r0, #127	; 0x7f
20008fd8:	0fe00007 	svceq	0x00e00007
20008fdc:	c00ff000 	andgt	pc, pc, r0
20008fe0:	007fffff 	ldrshteq	pc, [pc], #-255	; <UNPREDICTABLE>
20008fe4:	0000007f 	andeq	r0, r0, pc, ror r0
20008fe8:	0fe00007 	svceq	0x00e00007
20008fec:	e00ff000 	and	pc, pc, r0
20008ff0:	007ffeff 	ldrshteq	pc, [pc], #-239	; <UNPREDICTABLE>
20008ff4:	0000007f 	andeq	r0, r0, pc, ror r0
20008ff8:	0fe00007 	svceq	0x00e00007
20008ffc:	f00ff000 			; <UNDEFINED> instruction: 0xf00ff000
20009000:	003ffe7f 	eorseq	pc, pc, pc, ror lr	; <UNPREDICTABLE>
20009004:	0000007f 	andeq	r0, r0, pc, ror r0
20009008:	0fe00007 	svceq	0x00e00007
2000900c:	f80ff000 			; <UNDEFINED> instruction: 0xf80ff000
20009010:	001ffc3f 	andseq	pc, pc, pc, lsr ip	; <UNPREDICTABLE>
20009014:	0000007f 	andeq	r0, r0, pc, ror r0
20009018:	1fe0000f 	svcne	0x00e0000f
2000901c:	fc0ff000 	stc2	0, cr15, [pc], {-0}
20009020:	000ff81f 	andeq	pc, pc, pc, lsl r8	; <UNPREDICTABLE>
20009024:	0000003e 	andeq	r0, r0, lr, lsr r0
20009028:	1fe0000f 	svcne	0x00e0000f
2000902c:	fc07f000 	stc2	0, cr15, [r7], {-0}
20009030:	0007f00f 	andeq	pc, r7, pc
20009034:	00000000 	andeq	r0, r0, r0
20009038:	1fe0000f 	svcne	0x00e0000f
2000903c:	fc07f000 	stc2	0, cr15, [r7], {-0}
20009040:	00000007 	andeq	r0, r0, r7
20009044:	00000000 	andeq	r0, r0, r0
20009048:	1fe0000f 	svcne	0x00e0000f
2000904c:	fc07f800 	stc2	8, cr15, [r7], {-0}
20009050:	00000003 	andeq	r0, r0, r3
20009054:	000ff800 	andeq	pc, pc, r0, lsl #16
20009058:	1fc0001f 	svcne	0x00c0001f
2000905c:	fc07fc00 	stc2	12, cr15, [r7], {-0}
20009060:	00000001 	andeq	r0, r0, r1
20009064:	001ffc00 	andseq	pc, pc, r0, lsl #24
20009068:	1fc0003f 	svcne	0x00c0003f
2000906c:	fc07ff80 	stc2	15, cr15, [r7], {128}	; 0x80
20009070:	00000001 	andeq	r0, r0, r1
20009074:	003fff00 	eorseq	pc, pc, r0, lsl #30
20009078:	3fc0003f 	svccc	0x00c0003f
2000907c:	fc07fffc 	stc2	15, cr15, [r7], {252}	; 0xfc
20009080:	00000001 	andeq	r0, r0, r1
20009084:	007fff80 	rsbseq	pc, pc, r0, lsl #31
20009088:	ffc0003f 			; <UNDEFINED> instruction: 0xffc0003f
2000908c:	fc03ffff 	stc2	15, cr15, [r3], {255}	; 0xff
20009090:	00000001 	andeq	r0, r0, r1
20009094:	00ffffe0 	rscseq	pc, pc, r0, ror #31
20009098:	ffc0007f 			; <UNDEFINED> instruction: 0xffc0007f
2000909c:	fc01ffff 	stc2	15, cr15, [r1], {255}	; 0xff
200090a0:	00000007 	andeq	r0, r0, r7
200090a4:	03fffff0 	mvnseq	pc, #240, 30	; 0x3c0
200090a8:	ffc0007f 			; <UNDEFINED> instruction: 0xffc0007f
200090ac:	fc00ffff 	stc2	15, cr15, [r0], {255}	; 0xff
200090b0:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
200090b4:	07fffff8 			; <UNDEFINED> instruction: 0x07fffff8
200090b8:	ffc0007f 			; <UNDEFINED> instruction: 0xffc0007f
200090bc:	fc007fff 	stc2	15, cr7, [r0], {255}	; 0xff
200090c0:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
200090c4:	07ff7ffd 			; <UNDEFINED> instruction: 0x07ff7ffd
200090c8:	ff80007f 			; <UNDEFINED> instruction: 0xff80007f
200090cc:	fc003fff 	stc2	15, cr3, [r0], {255}	; 0xff
200090d0:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
200090d4:	0ffe3fff 	svceq	0x00fe3fff
200090d8:	ff1f007f 			; <UNDEFINED> instruction: 0xff1f007f
200090dc:	f80007ff 			; <UNDEFINED> instruction: 0xf80007ff
200090e0:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
200090e4:	1ffc3fff 	svcne	0x00fc3fff
200090e8:	fc3f807f 	ldc2	0, cr8, [pc], #-508	; 20008ef4 <bg_bits+0x16c>
200090ec:	f800003f 			; <UNDEFINED> instruction: 0xf800003f
200090f0:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
200090f4:	1ff83fff 	svcne	0x00f83fff
200090f8:	003f807f 	eorseq	r8, pc, pc, ror r0	; <UNPREDICTABLE>
200090fc:	f0000000 			; <UNDEFINED> instruction: 0xf0000000
20009100:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
20009104:	3ff03fff 	svccc	0x00f03fff
20009108:	003f807f 	eorseq	r8, pc, pc, ror r0	; <UNPREDICTABLE>
2000910c:	c0000000 	andgt	r0, r0, r0
20009110:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
20009114:	7fe03fff 	svcvc	0x00e03fff
20009118:	003f803f 	eorseq	r8, pc, pc, lsr r0	; <UNPREDICTABLE>
2000911c:	00000000 	andeq	r0, r0, r0
20009120:	f8000000 			; <UNDEFINED> instruction: 0xf8000000
20009124:	7fc03fff 	svcvc	0x00c03fff
20009128:	003f803f 	eorseq	r8, pc, pc, lsr r0	; <UNPREDICTABLE>
2000912c:	fffff000 			; <UNDEFINED> instruction: 0xfffff000
20009130:	f800000f 			; <UNDEFINED> instruction: 0xf800000f
20009134:	ffc01fff 			; <UNDEFINED> instruction: 0xffc01fff
20009138:	001f003f 	andseq	r0, pc, pc, lsr r0	; <UNPREDICTABLE>
2000913c:	fffff800 	vcmla.f32	d31, d15, d0[0], #270
20009140:	f8007fff 			; <UNDEFINED> instruction: 0xf8007fff
20009144:	ff801fff 			; <UNDEFINED> instruction: 0xff801fff
20009148:	0000003f 	andeq	r0, r0, pc, lsr r0
2000914c:	fffff800 	vcmla.f32	d31, d15, d0[0], #270
20009150:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
20009154:	ff801fff 			; <UNDEFINED> instruction: 0xff801fff
20009158:	0000003f 	andeq	r0, r0, pc, lsr r0
2000915c:	fffff800 	vcmla.f32	d31, d15, d0[0], #270
20009160:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
20009164:	ff001fff 			; <UNDEFINED> instruction: 0xff001fff
20009168:	0000003f 	andeq	r0, r0, pc, lsr r0
2000916c:	fffff800 	vcmla.f32	d31, d15, d0[0], #270
20009170:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
20009174:	fe001fff 	mcr2	15, 0, r1, cr0, cr15, {7}
20009178:	0000003f 	andeq	r0, r0, pc, lsr r0
2000917c:	fffff800 	vcmla.f32	d31, d15, d0[0], #270
20009180:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
20009184:	fe001fff 	mcr2	15, 0, r1, cr0, cr15, {7}

20009188 <current_screen>:
20009188:	00000001 	andeq	r0, r0, r1

2000918c <delay_until_text.4322>:
2000918c:	00000082 	andeq	r0, r0, r2, lsl #1

20009190 <long_text.4320>:
20009190:	00000028 	andeq	r0, r0, r8, lsr #32

20009194 <short_text.4321>:
20009194:	00000014 	andeq	r0, r0, r4, lsl r0

20009198 <last_climb_value.4328>:
20009198:	00000064 	andeq	r0, r0, r4, rrx

2000919c <fire_black_2_bits>:
	...
200091a4:	18000000 	stmdane	r0, {}	; <UNPREDICTABLE>

200091a8 <fire1_gray_bits>:
200091a8:	00000000 	andeq	r0, r0, r0
200091ac:	06000804 	streq	r0, [r0], -r4, lsl #16
200091b0:	02494204 	subeq	r4, r9, #4, 4	; 0x40000000

200091b4 <fire1_light_bits>:
200091b4:	00002000 	andeq	r2, r0, r0
200091b8:	48000010 	stmdami	r0, {r4}
200091bc:	2c243020 	stccs	0, cr3, [r4], #-128	; 0xffffff80

200091c0 <fire2_gray_bits>:
200091c0:	00000000 	andeq	r0, r0, r0
200091c4:	10220000 	eorne	r0, r2, r0
200091c8:	00420444 	subeq	r0, r2, r4, asr #8

200091cc <fire2_light_bits>:
200091cc:	04200000 	strteq	r0, [r0], #-0
200091d0:	240c0010 	strcs	r0, [ip], #-16
200091d4:	123c6008 	eorsne	r6, ip, #8

200091d8 <fire3_gray_bits>:
200091d8:	00000000 	andeq	r0, r0, r0
200091dc:	24100802 	ldrcs	r0, [r0], #-2050	; 0xfffff7fe
200091e0:	00020260 	andeq	r0, r2, r0, ror #4

200091e4 <fire3_light_bits>:
200091e4:	10200000 	eorne	r0, r0, r0
200091e8:	18040400 	stmdane	r4, {sl}
200091ec:	143c5812 	ldrtne	r5, [ip], #-2066	; 0xfffff7ee

200091f0 <fire4_gray_bits>:
200091f0:	08000000 	stmdaeq	r0, {}	; <UNPREDICTABLE>
200091f4:	10320000 	eorsne	r0, r2, r0
200091f8:	02400012 	subeq	r0, r0, #18

200091fc <fire4_light_bits>:
200091fc:	00001000 	andeq	r1, r0, r0
20009200:	04082000 	streq	r2, [r8], #-0
20009204:	24283a0c 	strtcs	r3, [r8], #-2572	; 0xfffff5f4

20009208 <fire5_gray_bits>:
20009208:	00000000 	andeq	r0, r0, r0
2000920c:	22001020 	andcs	r1, r0, #32
20009210:	04044206 	streq	r4, [r4], #-518	; 0xfffffdfa

20009214 <fire5_light_bits>:
20009214:	00040000 	andeq	r0, r4, r0
20009218:	04240800 	strteq	r0, [r4], #-2048	; 0xfffff800
2000921c:	502a1810 	eorpl	r1, sl, r0, lsl r8

20009220 <firstTime.4076>:
20009220:	00000001 	andeq	r0, r0, r1

20009224 <bird1_black_bits>:
	...
20009234:	00010040 	andeq	r0, r1, r0, asr #32
20009238:	00118060 	andseq	r8, r1, r0, rrx
2000923c:	00118060 	andseq	r8, r1, r0, rrx
20009240:	001b80ec 	andseq	r8, fp, ip, ror #1
20009244:	003f81fc 	ldrshteq	r8, [pc], -ip
20009248:	007fe1f8 	ldrshteq	lr, [pc], #-24
2000924c:	007ff3f8 	ldrshteq	pc, [pc], #-56	; <UNPREDICTABLE>
20009250:	003ffff8 	ldrshteq	pc, [pc], -r8	; <UNPREDICTABLE>
20009254:	003fedf8 	ldrshteq	lr, [pc], -r8
20009258:	001ff1f0 			; <UNDEFINED> instruction: 0x001ff1f0
2000925c:	000ff0e0 	andeq	pc, pc, r0, ror #1
20009260:	0007ff80 	andeq	pc, r7, r0, lsl #31
20009264:	00007c00 	andeq	r7, r0, r0, lsl #24
20009268:	00008800 	andeq	r8, r0, r0, lsl #16
2000926c:	00033000 	andeq	r3, r3, r0
20009270:	00011000 	andeq	r1, r1, r0
	...

20009288 <bird1_gray_bits>:
	...
200092bc:	00000e00 	andeq	r0, r0, r0, lsl #28
200092c0:	00000f00 	andeq	r0, r0, r0, lsl #30
	...

200092ec <bird1_light_bits>:
	...
2000931c:	00001200 	andeq	r1, r0, r0, lsl #4
	...

20009350 <bird2_black_bits>:
	...
20009368:	000b0000 	andeq	r0, fp, r0
2000936c:	001e0028 	andseq	r0, lr, r8, lsr #32
20009370:	003e0068 	eorseq	r0, lr, r8, rrx
20009374:	003e007c 	eorseq	r0, lr, ip, ror r0
20009378:	003e007c 	eorseq	r0, lr, ip, ror r0
2000937c:	007e007c 	rsbseq	r0, lr, ip, ror r0
20009380:	007e7cfc 	ldrshteq	r7, [lr], #-204	; 0xffffff34
20009384:	007ffff8 	ldrshteq	pc, [pc], #-248	; <UNPREDICTABLE>
20009388:	003fd7f0 	ldrshteq	sp, [pc], -r0
2000938c:	003fc3c0 	eorseq	ip, pc, r0, asr #7
20009390:	000fc100 	andeq	ip, pc, r0, lsl #2
20009394:	00007000 	andeq	r7, r0, r0
20009398:	0000a000 	andeq	sl, r0, r0
2000939c:	0001e000 	andeq	lr, r1, r0
200093a0:	0000a000 	andeq	sl, r0, r0
200093a4:	00008000 	andeq	r8, r0, r0
	...

200093b4 <bird2_gray_bits>:
	...
200093f0:	00003c00 	andeq	r3, r0, r0, lsl #24
200093f4:	00003e00 	andeq	r3, r0, r0, lsl #28
	...

20009418 <bird2_light_bits>:
	...
20009450:	00002800 	andeq	r2, r0, r0, lsl #16
	...

2000947c <bird3_black_bits>:
	...
2000949c:	00280000 	eoreq	r0, r8, r0
200094a0:	00680020 	rsbeq	r0, r8, r0, lsr #32
200094a4:	00f80038 	rscseq	r0, r8, r8, lsr r0
200094a8:	00fc0038 	rscseq	r0, ip, r8, lsr r0
200094ac:	00fc007c 	rscseq	r0, ip, ip, ror r0
200094b0:	00fe3dfe 	ldrshteq	r3, [lr], #222	; 0xde
200094b4:	00fffffe 	ldrshteq	pc, [pc], #254	; <UNPREDICTABLE>
200094b8:	007febfc 	ldrshteq	lr, [pc], #-188
200094bc:	003ff1f0 	ldrshteq	pc, [pc], -r0	; <UNPREDICTABLE>
200094c0:	001ff0c0 	andseq	pc, pc, r0, asr #1
200094c4:	0001e800 	andeq	lr, r1, r0, lsl #16
200094c8:	00005000 	andeq	r5, r0, r0
200094cc:	0000f000 	andeq	pc, r0, r0
200094d0:	00009000 	andeq	r9, r0, r0
	...

200094e0 <bird3_gray_bits>:
	...
20009520:	00000e00 	andeq	r0, r0, r0, lsl #28
20009524:	00000f00 	andeq	r0, r0, r0, lsl #30
	...

20009544 <bird3_light_bits>:
	...
20009580:	00001400 	andeq	r1, r0, r0, lsl #8
	...

200095a8 <bird4_black_bits>:
	...
200095dc:	00007800 	andeq	r7, r0, r0, lsl #16
200095e0:	0000ff80 	andeq	pc, r0, r0, lsl #31
200095e4:	0003d7f4 	strdeq	sp, [r3], -r4
200095e8:	008fe3fc 	strdeq	lr, [pc], ip
200095ec:	01ffc1fc 	ldrsheq	ip, [pc, #28]	; 20009610 <bird4_gray_bits+0x4>
200095f0:	00ffd9f8 	ldrshteq	sp, [pc], #152
200095f4:	007fb0f0 	ldrshteq	fp, [pc], #-0
200095f8:	007ea000 	rsbseq	sl, lr, r0
200095fc:	00792000 	rsbseq	r2, r9, r0
20009600:	00300000 	eorseq	r0, r0, r0
	...

2000960c <bird4_gray_bits>:
	...
2000964c:	00001c00 	andeq	r1, r0, r0, lsl #24
20009650:	00003e00 	andeq	r3, r0, r0, lsl #28
	...

20009670 <bird4_light_bits>:
	...
200096ac:	00002800 	andeq	r2, r0, r0, lsl #16
	...

200096d4 <bird5_black_bits>:
	...
20009700:	00001c00 	andeq	r1, r0, r0, lsl #24
20009704:	0000ff00 	andeq	pc, r0, r0, lsl #30
20009708:	0003eb00 	andeq	lr, r3, r0, lsl #22
2000970c:	0007f180 	andeq	pc, r7, r0, lsl #3
20009710:	000ff080 	andeq	pc, pc, r0, lsl #1
20009714:	000fff80 	andeq	pc, pc, r0, lsl #31
20009718:	001fd3c0 	andseq	sp, pc, r0, asr #7
2000971c:	003fa3c0 	eorseq	sl, pc, r0, asr #7
20009720:	003fa3c0 	eorseq	sl, pc, r0, asr #7
20009724:	003fd3c0 	eorseq	sp, pc, r0, asr #7
20009728:	003e8380 	eorseq	r8, lr, r0, lsl #7
2000972c:	00778580 	rsbseq	r8, r7, r0, lsl #11
20009730:	00610000 	rsbeq	r0, r1, r0
20009734:	00000000 	andeq	r0, r0, r0

20009738 <bird5_gray_bits>:
	...
20009770:	00000e00 	andeq	r0, r0, r0, lsl #28
20009774:	00000f00 	andeq	r0, r0, r0, lsl #30
	...

2000979c <bird5_light_bits>:
	...
200097d0:	00001400 	andeq	r1, r0, r0, lsl #8
	...

20009800 <firstTime.4093>:
20009800:	00000001 	andeq	r0, r0, r1

20009804 <witch1_black_bits>:
20009804:	200001f8 	strdcs	r0, [r0], -r8
20009808:	03400001 	movteq	r0, #1
2000980c:	00074000 	andeq	r4, r7, r0
20009810:	20000720 	andcs	r0, r0, r0, lsr #14
20009814:	3ff80066 	svccc	0x00f80066
20009818:	00044000 	andeq	r4, r4, r0
2000981c:	40000440 	andmi	r0, r0, r0, asr #8
20009820:	03800004 	orreq	r0, r0, #4
20009824:	00064000 	andeq	r4, r6, r0
20009828:	20000640 	andcs	r0, r0, r0, asr #12
2000982c:	0e200006 	cdpeq	0, 2, cr0, cr0, cr6, {0}
20009830:	000e1000 	andeq	r1, lr, r0
20009834:	f8000c10 			; <UNDEFINED> instruction: 0xf8000c10
20009838:	0000001f 	andeq	r0, r0, pc, lsl r0

2000983c <witch1_gray_bits>:
2000983c:	c0000000 	andgt	r0, r0, r0
20009840:	00800000 	addeq	r0, r0, r0
20009844:	00008000 	andeq	r8, r0, r0
20009848:	c00000c0 	andgt	r0, r0, r0, asr #1
2000984c:	00000001 	andeq	r0, r0, r1
	...
2000985c:	00018000 	andeq	r8, r1, r0
20009860:	c0000180 	andgt	r0, r0, r0, lsl #3
20009864:	01c00001 	biceq	r0, r0, r1
20009868:	0001e000 	andeq	lr, r1, r0
2000986c:	000003e0 	andeq	r0, r0, r0, ror #7
20009870:	00000000 	andeq	r0, r0, r0

20009874 <witch1_light_bits>:
	...
20009888:	00038000 	andeq	r8, r3, r0
2000988c:	80000380 	andhi	r0, r0, r0, lsl #7
20009890:	00000003 	andeq	r0, r0, r3
	...

200098ac <witch2_black_bits>:
200098ac:	f8000000 			; <UNDEFINED> instruction: 0xf8000000
200098b0:	01200001 			; <UNDEFINED> instruction: 0x01200001
200098b4:	00034000 	andeq	r4, r3, r0
200098b8:	20000740 	andcs	r0, r0, r0, asr #14
200098bc:	66200007 	strtvs	r0, [r0], -r7
200098c0:	003ff800 	eorseq	pc, pc, r0, lsl #16
200098c4:	40000440 	andmi	r0, r0, r0, asr #8
200098c8:	04400004 	strbeq	r0, [r0], #-4
200098cc:	00038000 	andeq	r8, r3, r0
200098d0:	20000660 	andcs	r0, r0, r0, ror #12
200098d4:	0e100006 	cdpeq	0, 1, cr0, cr0, cr6, {0}
200098d8:	001c0800 	andseq	r0, ip, r0, lsl #16
200098dc:	fc001c08 	stc2	12, cr1, [r0], {8}
200098e0:	0000003f 	andeq	r0, r0, pc, lsr r0

200098e4 <witch2_gray_bits>:
200098e4:	00000000 	andeq	r0, r0, r0
200098e8:	00c00000 	sbceq	r0, r0, r0
200098ec:	00008000 	andeq	r8, r0, r0
200098f0:	c0000080 	andgt	r0, r0, r0, lsl #1
200098f4:	01c00000 	biceq	r0, r0, r0
	...
20009908:	c0000180 	andgt	r0, r0, r0, lsl #3
2000990c:	01e00001 	mvneq	r0, r1
20009910:	0003f000 	andeq	pc, r3, r0
20009914:	000003f0 	strdeq	r0, [r0], -r0	; <UNPREDICTABLE>
20009918:	00000000 	andeq	r0, r0, r0

2000991c <witch2_light_bits>:
	...
20009934:	80000380 	andhi	r0, r0, r0, lsl #7
20009938:	03800003 	orreq	r0, r0, #3
	...

20009954 <witch3_black_bits>:
20009954:	f8000000 			; <UNDEFINED> instruction: 0xf8000000
20009958:	01200001 			; <UNDEFINED> instruction: 0x01200001
2000995c:	00034000 	andeq	r4, r3, r0
20009960:	20000740 	andcs	r0, r0, r0, asr #14
20009964:	66200007 	strtvs	r0, [r0], -r7
20009968:	003ff800 	eorseq	pc, pc, r0, lsl #16
2000996c:	40000440 	andmi	r0, r0, r0, asr #8
20009970:	04400004 	strbeq	r0, [r0], #-4
20009974:	00038000 	andeq	r8, r3, r0
20009978:	10000660 	andne	r0, r0, r0, ror #12
2000997c:	1c08000e 	stcne	0, cr0, [r8], {14}
20009980:	00380800 	eorseq	r0, r8, r0, lsl #16
20009984:	fe003804 	vcmla.f16	d3, d0, d4[0], #0
20009988:	0000007f 	andeq	r0, r0, pc, ror r0

2000998c <witch3_gray_bits>:
2000998c:	00000000 	andeq	r0, r0, r0
20009990:	00c00000 	sbceq	r0, r0, r0
20009994:	00008000 	andeq	r8, r0, r0
20009998:	c0000080 	andgt	r0, r0, r0, lsl #1
2000999c:	01c00000 	biceq	r0, r0, r0
	...
200099b0:	e0000180 	and	r0, r0, r0, lsl #3
200099b4:	03f00001 	mvnseq	r0, #1
200099b8:	0007f000 	andeq	pc, r7, r0
200099bc:	000007f8 	strdeq	r0, [r0], -r8
200099c0:	00000000 	andeq	r0, r0, r0

200099c4 <witch3_light_bits>:
	...
200099dc:	80000380 	andhi	r0, r0, r0, lsl #7
200099e0:	03800003 	orreq	r0, r0, #3
	...

200099fc <firstTime.4067>:
200099fc:	00000001 	andeq	r0, r0, r1

20009a00 <witch1_black_bits>:
20009a00:	200001f8 	strdcs	r0, [r0], -r8
20009a04:	03400001 	movteq	r0, #1
20009a08:	00074000 	andeq	r4, r7, r0
20009a0c:	20000720 	andcs	r0, r0, r0, lsr #14
20009a10:	3ff80066 	svccc	0x00f80066
20009a14:	00044000 	andeq	r4, r4, r0
20009a18:	40000440 	andmi	r0, r0, r0, asr #8
20009a1c:	03800004 	orreq	r0, r0, #4
20009a20:	00064000 	andeq	r4, r6, r0
20009a24:	20000640 	andcs	r0, r0, r0, asr #12
20009a28:	0e200006 	cdpeq	0, 2, cr0, cr0, cr6, {0}
20009a2c:	000e1000 	andeq	r1, lr, r0
20009a30:	f8000c10 			; <UNDEFINED> instruction: 0xf8000c10
20009a34:	0000001f 	andeq	r0, r0, pc, lsl r0

20009a38 <witch1_gray_bits>:
20009a38:	c0000000 	andgt	r0, r0, r0
20009a3c:	00800000 	addeq	r0, r0, r0
20009a40:	00008000 	andeq	r8, r0, r0
20009a44:	c00000c0 	andgt	r0, r0, r0, asr #1
20009a48:	00000001 	andeq	r0, r0, r1
	...
20009a58:	00018000 	andeq	r8, r1, r0
20009a5c:	c0000180 	andgt	r0, r0, r0, lsl #3
20009a60:	01c00001 	biceq	r0, r0, r1
20009a64:	0001e000 	andeq	lr, r1, r0
20009a68:	000003e0 	andeq	r0, r0, r0, ror #7
20009a6c:	00000000 	andeq	r0, r0, r0

20009a70 <witch1_light_bits>:
	...
20009a84:	00038000 	andeq	r8, r3, r0
20009a88:	80000380 	andhi	r0, r0, r0, lsl #7
20009a8c:	00000003 	andeq	r0, r0, r3
	...

20009aa8 <witch2_black_bits>:
20009aa8:	f8000000 			; <UNDEFINED> instruction: 0xf8000000
20009aac:	01200001 			; <UNDEFINED> instruction: 0x01200001
20009ab0:	00034000 	andeq	r4, r3, r0
20009ab4:	20000740 	andcs	r0, r0, r0, asr #14
20009ab8:	66200007 	strtvs	r0, [r0], -r7
20009abc:	003ff800 	eorseq	pc, pc, r0, lsl #16
20009ac0:	40000440 	andmi	r0, r0, r0, asr #8
20009ac4:	04400004 	strbeq	r0, [r0], #-4
20009ac8:	00038000 	andeq	r8, r3, r0
20009acc:	20000660 	andcs	r0, r0, r0, ror #12
20009ad0:	0e100006 	cdpeq	0, 1, cr0, cr0, cr6, {0}
20009ad4:	001c0800 	andseq	r0, ip, r0, lsl #16
20009ad8:	fc001c08 	stc2	12, cr1, [r0], {8}
20009adc:	0000003f 	andeq	r0, r0, pc, lsr r0

20009ae0 <witch2_gray_bits>:
20009ae0:	00000000 	andeq	r0, r0, r0
20009ae4:	00c00000 	sbceq	r0, r0, r0
20009ae8:	00008000 	andeq	r8, r0, r0
20009aec:	c0000080 	andgt	r0, r0, r0, lsl #1
20009af0:	01c00000 	biceq	r0, r0, r0
	...
20009b04:	c0000180 	andgt	r0, r0, r0, lsl #3
20009b08:	01e00001 	mvneq	r0, r1
20009b0c:	0003f000 	andeq	pc, r3, r0
20009b10:	000003f0 	strdeq	r0, [r0], -r0	; <UNPREDICTABLE>
20009b14:	00000000 	andeq	r0, r0, r0

20009b18 <witch2_light_bits>:
	...
20009b30:	80000380 	andhi	r0, r0, r0, lsl #7
20009b34:	03800003 	orreq	r0, r0, #3
	...

20009b50 <witch3_black_bits>:
20009b50:	f8000000 			; <UNDEFINED> instruction: 0xf8000000
20009b54:	01200001 			; <UNDEFINED> instruction: 0x01200001
20009b58:	00034000 	andeq	r4, r3, r0
20009b5c:	20000740 	andcs	r0, r0, r0, asr #14
20009b60:	66200007 	strtvs	r0, [r0], -r7
20009b64:	003ff800 	eorseq	pc, pc, r0, lsl #16
20009b68:	40000440 	andmi	r0, r0, r0, asr #8
20009b6c:	04400004 	strbeq	r0, [r0], #-4
20009b70:	00038000 	andeq	r8, r3, r0
20009b74:	10000660 	andne	r0, r0, r0, ror #12
20009b78:	1c08000e 	stcne	0, cr0, [r8], {14}
20009b7c:	00380800 	eorseq	r0, r8, r0, lsl #16
20009b80:	fe003804 	vcmla.f16	d3, d0, d4[0], #0
20009b84:	0000007f 	andeq	r0, r0, pc, ror r0

20009b88 <witch3_gray_bits>:
20009b88:	00000000 	andeq	r0, r0, r0
20009b8c:	00c00000 	sbceq	r0, r0, r0
20009b90:	00008000 	andeq	r8, r0, r0
20009b94:	c0000080 	andgt	r0, r0, r0, lsl #1
20009b98:	01c00000 	biceq	r0, r0, r0
	...
20009bac:	e0000180 	and	r0, r0, r0, lsl #3
20009bb0:	03f00001 	mvnseq	r0, #1
20009bb4:	0007f000 	andeq	pc, r7, r0
20009bb8:	000007f8 	strdeq	r0, [r0], -r8
20009bbc:	00000000 	andeq	r0, r0, r0

20009bc0 <witch3_light_bits>:
	...
20009bd8:	80000380 	andhi	r0, r0, r0, lsl #7
20009bdc:	03800003 	orreq	r0, r0, #3
	...

20009bf8 <firstTime.4142>:
20009bf8:	00000001 	andeq	r0, r0, r1

20009bfc <direction.4153>:
20009bfc:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff

20009c00 <flame1_black_bits>:
20009c00:	80000000 	andhi	r0, r0, r0
20009c04:	00000008 	andeq	r0, r0, r8
20009c08:	00004800 	andeq	r4, r0, r0, lsl #16
20009c0c:	48004a08 	stmdami	r0, {r3, r9, fp, lr}
20009c10:	02400002 	subeq	r0, r0, #2
20009c14:	00541400 	subseq	r1, r4, r0, lsl #8
20009c18:	22005040 	andcs	r5, r0, #64	; 0x40
20009c1c:	a01200b0 	ldrhge	r0, [r2], -r0	; <UNPREDICTABLE>
20009c20:	00011200 	andeq	r1, r1, r0, lsl #4
20009c24:	01001000 	mrseq	r1, (UNDEF: 0)
20009c28:	01000000 	mrseq	r0, (UNDEF: 0)
20009c2c:	00210001 	eoreq	r0, r1, r1
20009c30:	40000042 	andmi	r0, r0, r2, asr #32
20009c34:	20410000 	subcs	r0, r1, r0
20009c38:	01200101 			; <UNDEFINED> instruction: 0x01200101
20009c3c:	12012001 	andne	r2, r1, #1
20009c40:	90400000 	subls	r0, r0, r0
20009c44:	00800200 	addeq	r0, r0, r0, lsl #4
20009c48:	04008000 	streq	r8, [r0], #-0
20009c4c:	20080001 	andcs	r0, r8, r1
20009c50:	00080800 	andeq	r0, r8, r0, lsl #16
	...
20009c5c:	00001000 	andeq	r1, r0, r0
20009c60:	3200001c 	andcc	r0, r0, #28
20009c64:	002f0000 	eoreq	r0, pc, r0
20009c68:	00003f00 	andeq	r3, r0, r0, lsl #30
20009c6c:	01000007 	tsteq	r0, r7
20009c70:	00010000 	andeq	r0, r1, r0
20009c74:	00000000 	andeq	r0, r0, r0

20009c78 <flame1_gray_bits>:
	...
20009c98:	00080000 	andeq	r0, r8, r0
20009c9c:	00000000 	andeq	r0, r0, r0
20009ca0:	00900008 	addseq	r0, r0, r8
20009ca4:	0002a000 	andeq	sl, r2, r0
20009ca8:	b0001bb0 			; <UNDEFINED> instruction: 0xb0001bb0
20009cac:	0fb0001f 	svceq	0x00b0001f
20009cb0:	000fe000 	andeq	lr, pc, r0
20009cb4:	e0000fe0 	and	r0, r0, r0, ror #31
20009cb8:	0fa0000f 	svceq	0x00a0000f
20009cbc:	0007e000 	andeq	lr, r7, r0
20009cc0:	800003c0 	andhi	r0, r0, r0, asr #7
20009cc4:	07c00002 	strbeq	r0, [r0, r2]
20009cc8:	00078000 	andeq	r8, r7, r0
20009ccc:	80000380 	andhi	r0, r0, r0, lsl #7
20009cd0:	09800003 	stmibeq	r0, {r0, r1}
20009cd4:	00018000 	andeq	r8, r1, r0
20009cd8:	0c000000 	stceq	0, cr0, [r0], {-0}
20009cdc:	00100000 	andseq	r0, r0, r0
	...

20009cf0 <flame1_light_bits>:
	...
20009cf8:	00080000 	andeq	r0, r8, r0
20009cfc:	80000080 	andhi	r0, r0, r0, lsl #1
20009d00:	0c88000c 	stceq	0, cr0, [r8], {12}
20009d04:	00098800 	andeq	r8, r9, r0, lsl #16
20009d08:	c8000db8 	stmdagt	r0, {r3, r4, r5, r7, r8, sl, fp}
20009d0c:	5fe8004d 	svcpl	0x00e8004d
20009d10:	00f6e800 	rscseq	lr, r6, r0, lsl #16
20009d14:	fc00eff8 	stc2	15, cr14, [r0], {248}	; 0xf8
20009d18:	fe6c00f7 	mcr2	0, 3, r0, cr12, cr7, {7}
20009d1c:	00dc5c00 	sbcseq	r5, ip, r0, lsl #24
20009d20:	0c00e40c 	cfstrseq	mvf14, [r0], {12}
20009d24:	d00e01e0 	andle	r0, lr, r0, ror #3
20009d28:	00d01e00 	sbcseq	r1, r0, r0, lsl #28
20009d2c:	0c00d01a 	stceq	0, cr13, [r0], {26}
20009d30:	600e00f0 	strdvs	r0, [lr], -r0	; <UNPREDICTABLE>
20009d34:	00681c00 	rsbeq	r1, r8, r0, lsl #24
20009d38:	70003c3c 	andvc	r3, r0, ip, lsr ip
20009d3c:	1830003c 	ldmdane	r0!, {r2, r3, r4, r5}
20009d40:	00307000 	eorseq	r7, r0, r0
20009d44:	78003c78 	stmdavc	r0, {r3, r4, r5, r6, sl, fp, ip, sp}
20009d48:	16700038 			; <UNDEFINED> instruction: 0x16700038
20009d4c:	001e6000 	andseq	r6, lr, r0
20009d50:	c0000fe0 	andgt	r0, r0, r0, ror #31
20009d54:	0fc0000f 	svceq	0x00c0000f
	...

20009d68 <flame2_black_bits>:
20009d68:	00000000 	andeq	r0, r0, r0
20009d6c:	40040042 	andmi	r0, r4, r2, asr #32
20009d70:	00044400 	andeq	r4, r4, r0, lsl #8
20009d74:	04000440 	streq	r0, [r0], #-1088	; 0xfffffbc0
20009d78:	22a00022 	adccs	r0, r0, #34	; 0x22
20009d7c:	00aaa800 	adceq	sl, sl, r0, lsl #16
20009d80:	00009108 	andeq	r9, r0, r8, lsl #2
20009d84:	84800090 	strhi	r0, [r0], #144	; 0x90
20009d88:	00040400 	andeq	r0, r4, r0, lsl #8
20009d8c:	20008004 	andcs	r8, r0, r4
20009d90:	00850090 	umulleq	r0, r5, r0, r0
20009d94:	01000000 	mrseq	r0, (UNDEF: 0)
20009d98:	20000002 	andcs	r0, r0, r2
20009d9c:	84200084 	strthi	r0, [r0], #-132	; 0xffffff7c
20009da0:	00000200 	andeq	r0, r0, r0, lsl #4
20009da4:	02004004 	andeq	r4, r0, #4
20009da8:	a00a0080 	andge	r0, sl, r0, lsl #1
20009dac:	00240800 	eoreq	r0, r4, r0, lsl #16
20009db0:	08002048 	stmdaeq	r0, {r3, r6, sp}
20009db4:	00000000 	andeq	r0, r0, r0
20009db8:	00101000 	andseq	r1, r0, r0
20009dbc:	00004050 	andeq	r4, r0, r0, asr r0
20009dc0:	10000040 	andne	r0, r0, r0, asr #32
20009dc4:	00001000 	andeq	r1, r0, r0
20009dc8:	3200001c 	andcc	r0, r0, #28
20009dcc:	002f0000 	eoreq	r0, pc, r0
20009dd0:	00003f00 	andeq	r3, r0, r0, lsl #30
20009dd4:	01000007 	tsteq	r0, r7
20009dd8:	00010000 	andeq	r0, r1, r0
20009ddc:	00000000 	andeq	r0, r0, r0

20009de0 <flame2_gray_bits>:
	...
20009e00:	00002000 	andeq	r2, r0, r0
20009e04:	40000010 	andmi	r0, r0, r0, lsl r0
20009e08:	27600002 	strbcs	r0, [r0, -r2]!
20009e0c:	001fe000 	andseq	lr, pc, r0
20009e10:	c0000fe0 	andgt	r0, r0, r0, ror #31
20009e14:	0bc00003 	bleq	1f009e28 <startup-0xff61d8>
20009e18:	000fe000 	andeq	lr, pc, r0
20009e1c:	c0000fd0 	ldrdgt	r0, [r0], -r0	; <UNPREDICTABLE>
20009e20:	0fc0000f 	svceq	0x00c0000f
20009e24:	0003e000 	andeq	lr, r3, r0
20009e28:	c00007a0 	andgt	r0, r0, r0, lsr #15
20009e2c:	0b800007 	bleq	1e009e50 <startup-0x1ff61b0>
20009e30:	0003c000 	andeq	ip, r3, r0
20009e34:	80000380 	andhi	r0, r0, r0, lsl #7
20009e38:	03800003 	orreq	r0, r0, #3
20009e3c:	00000000 	andeq	r0, r0, r0
20009e40:	0c000000 	stceq	0, cr0, [r0], {-0}
20009e44:	00100000 	andseq	r0, r0, r0
	...

20009e58 <flame2_light_bits>:
	...
20009e60:	00020000 	andeq	r0, r2, r0
20009e64:	20000220 	andcs	r0, r0, r0, lsr #4
20009e68:	05400005 	strbeq	r0, [r0, #-5]
20009e6c:	00054000 	andeq	r4, r5, r0
20009e70:	fc0026f4 	stc2	6, cr2, [r0], {244}	; 0xf4
20009e74:	137c0027 	cmnne	ip, #39	; 0x27
20009e78:	00fbda00 	rscseq	sp, fp, r0, lsl #20
20009e7c:	9e007fea 	cdpls	15, 0, cr7, cr0, cr10, {7}
20009e80:	d818006d 	ldmdale	r8, {r0, r2, r3, r5, r6}
20009e84:	00e01c00 	rsceq	r1, r0, r0, lsl #24
20009e88:	1e00f01c 	mcrne	0, 0, pc, cr0, cr12, {0}	; <UNPREDICTABLE>
20009e8c:	701e0078 	andsvc	r0, lr, r8, ror r0
20009e90:	00f01c00 	rscseq	r1, r0, r0, lsl #24
20009e94:	3c003028 	stccc	0, cr3, [r0], {40}	; 0x28
20009e98:	50240070 	eorpl	r0, r4, r0, ror r0
20009e9c:	01d81001 	bicseq	r1, r8, r1
20009ea0:	30004810 	andcc	r4, r0, r0, lsl r8
20009ea4:	34780038 	ldrbtcc	r0, [r8], #-56	; 0xffffffc8
20009ea8:	002c2000 	eoreq	r2, ip, r0
20009eac:	50003c20 	andpl	r3, r0, r0, lsr #24
20009eb0:	0c700038 	ldcleq	0, cr0, [r0], #-224	; 0xffffff20
20009eb4:	001fe000 	andseq	lr, pc, r0
20009eb8:	c0000fe0 	andgt	r0, r0, r0, ror #31
20009ebc:	0fc0000f 	svceq	0x00c0000f
	...

20009ed0 <flame3_black_bits>:
20009ed0:	02000400 	andeq	r0, r0, #0, 8
20009ed4:	04000000 	streq	r0, [r0], #-0
20009ed8:	00044000 	andeq	r4, r4, r0
20009edc:	a4000404 	strge	r0, [r0], #-1028	; 0xfffffbfc
20009ee0:	52a00098 	adcpl	r0, r0, #152	; 0x98
20009ee4:	01028a00 	tsteq	r2, r0, lsl #20
20009ee8:	00012028 	andeq	r2, r1, r8, lsr #32
20009eec:	00020100 	andeq	r0, r2, r0, lsl #2
20009ef0:	01028200 	mrseq	r8, R10_usr
20009ef4:	80000092 	mulhi	r0, r2, r0
20009ef8:	00810000 	addeq	r0, r1, r0
20009efc:	01400901 	cmpeq	r0, r1, lsl #18
20009f00:	01004008 	tsteq	r0, r8
20009f04:	02000002 	andeq	r0, r0, #2
20009f08:	01004001 	tsteq	r0, r1
20009f0c:	02000002 	andeq	r0, r0, #2
20009f10:	a1000000 	mrsge	r0, (UNDEF: 0)
20009f14:	00002400 	andeq	r2, r0, r0, lsl #8
20009f18:	10004000 	andne	r4, r0, r0
20009f1c:	40000044 	andmi	r0, r0, r4, asr #32
20009f20:	00400800 	subeq	r0, r0, r0, lsl #16
20009f24:	00000808 	andeq	r0, r0, r8, lsl #16
20009f28:	00000000 	andeq	r0, r0, r0
20009f2c:	00001000 	andeq	r1, r0, r0
20009f30:	3200001c 	andcc	r0, r0, #28
20009f34:	002f0000 	eoreq	r0, pc, r0
20009f38:	00003f00 	andeq	r3, r0, r0, lsl #30
20009f3c:	01000007 	tsteq	r0, r7
20009f40:	00010000 	andeq	r0, r1, r0
20009f44:	00000000 	andeq	r0, r0, r0

20009f48 <flame3_gray_bits>:
	...
20009f68:	00002000 	andeq	r2, r0, r0
20009f6c:	00000040 	andeq	r0, r0, r0, asr #32
20009f70:	17600023 	strbne	r0, [r0, -r3, lsr #32]!
20009f74:	0017e000 	andseq	lr, r7, r0
20009f78:	e0000fe0 	and	r0, r0, r0, ror #31
20009f7c:	3de0003d 	stclcc	0, cr0, [r0, #244]!	; 0xf4
20009f80:	001fa000 	andseq	sl, pc, r0
20009f84:	f0001fe8 			; <UNDEFINED> instruction: 0xf0001fe8
20009f88:	0ee0000f 	cdpeq	0, 14, cr0, cr0, cr15, {0}
20009f8c:	000fc000 	andeq	ip, pc, r0
20009f90:	c0000fe0 	andgt	r0, r0, r0, ror #31
20009f94:	17c0000b 	strbne	r0, [r0, fp]
20009f98:	00078000 	andeq	r8, r7, r0
20009f9c:	80000780 	andhi	r0, r0, r0, lsl #15
20009fa0:	03400003 	movteq	r0, #3
20009fa4:	00030000 	andeq	r0, r3, r0
20009fa8:	0c000000 	stceq	0, cr0, [r0], {-0}
20009fac:	00100000 	andseq	r0, r0, r0
	...

20009fc0 <flame3_light_bits>:
20009fc0:	00000000 	andeq	r0, r0, r0
20009fc4:	00400000 	subeq	r0, r0, r0
20009fc8:	00020000 	andeq	r0, r2, r0
20009fcc:	40000240 	andmi	r0, r0, r0, asr #4
20009fd0:	014c0002 	cmpeq	ip, r2
20009fd4:	00317400 	eorseq	r7, r1, r0, lsl #8
20009fd8:	fc0017d4 	stc2	7, cr1, [r0], {212}	; 0xd4
20009fdc:	bff8003f 	svclt	0x00f8003f
20009fe0:	00fd5800 	rscseq	r5, sp, r0, lsl #16
20009fe4:	7800ff28 	stmdavc	r0, {r3, r5, r8, r9, sl, fp, ip, sp, lr, pc}
20009fe8:	e81c00dc 	ldmda	ip, {r2, r3, r4, r6, r7}
20009fec:	00a81600 	adceq	r1, r8, r0, lsl #12
20009ff0:	1e00b016 	mcrne	0, 0, fp, cr0, cr6, {0}
20009ff4:	c01e00c0 	andsgt	r0, lr, r0, asr #1
20009ff8:	00e01c00 	rsceq	r1, r0, r0, lsl #24
20009ffc:	0c00c014 	stceq	0, cr12, [r0], {20}
2000a000:	401c00f0 	ldrshmi	r0, [ip], -r0	; <UNPREDICTABLE>
2000a004:	00f01800 	rscseq	r1, r0, r0, lsl #16
2000a008:	2800b01c 	stmdacs	r0, {r2, r3, r4, ip, sp, pc}
2000a00c:	283c0030 	ldmdacs	ip!, {r4, r5}
2000a010:	00385400 	eorseq	r5, r8, r0, lsl #8
2000a014:	70003070 	andvc	r3, r0, r0, ror r0
2000a018:	3cb0001c 	ldccc	0, cr0, [r0], #112	; 0x70
2000a01c:	003ce000 	eorseq	lr, ip, r0
2000a020:	c0001fe0 	andgt	r1, r0, r0, ror #31
2000a024:	0fc0000f 	svceq	0x00c0000f
	...

2000a038 <flame4_black_bits>:
2000a038:	00000100 	andeq	r0, r0, r0, lsl #2
2000a03c:	10820000 	addne	r0, r2, r0
2000a040:	00008000 	andeq	r8, r0, r0
2000a044:	000028c8 	andeq	r2, r0, r8, asr #17
2000a048:	05540004 	ldrbeq	r0, [r4, #-4]
2000a04c:	00a55400 	adceq	r5, r5, r0, lsl #8
2000a050:	08002420 	stmdaeq	r0, {r5, sl, sp}
2000a054:	50000082 	andpl	r0, r0, r2, lsl #1
2000a058:	01000400 	tsteq	r0, r0, lsl #8
2000a05c:	00010444 	andeq	r0, r1, r4, asr #8
2000a060:	84120124 	ldrhi	r0, [r2], #-292	; 0xfffffedc
2000a064:	00841000 	addeq	r1, r4, r0
2000a068:	01008001 	tsteq	r0, r1
2000a06c:	200100a0 	andcs	r0, r1, r0, lsr #1
2000a070:	01000000 	mrseq	r0, (UNDEF: 0)
2000a074:	00000022 	andeq	r0, r0, r2, lsr #32
2000a078:	80020000 	andhi	r0, r2, r0
2000a07c:	00808a00 	addeq	r8, r0, r0, lsl #20
2000a080:	04004000 	streq	r4, [r0], #-0
2000a084:	20440000 	subcs	r0, r4, r0
2000a088:	00200000 	eoreq	r0, r0, r0
2000a08c:	00000008 	andeq	r0, r0, r8
2000a090:	00000010 	andeq	r0, r0, r0, lsl r0
2000a094:	00001000 	andeq	r1, r0, r0
2000a098:	3200001c 	andcc	r0, r0, #28
2000a09c:	002f0000 	eoreq	r0, pc, r0
2000a0a0:	00003f00 	andeq	r3, r0, r0, lsl #30
2000a0a4:	01000007 	tsteq	r0, r7
2000a0a8:	00010000 	andeq	r0, r1, r0
2000a0ac:	00000000 	andeq	r0, r0, r0

2000a0b0 <flame4_gray_bits>:
	...
2000a0d4:	40000000 	andmi	r0, r0, r0
2000a0d8:	08200010 	stmdaeq	r0!, {r4}
2000a0dc:	0008c000 	andeq	ip, r8, r0
2000a0e0:	f0000fc4 			; <UNDEFINED> instruction: 0xf0000fc4
2000a0e4:	1ff80007 	svcne	0x00f80007
2000a0e8:	001ff000 	andseq	pc, pc, r0
2000a0ec:	f0001fd0 			; <UNDEFINED> instruction: 0xf0001fd0
2000a0f0:	1fc0001f 	svcne	0x00c0001f
2000a0f4:	001f5000 	andseq	r5, pc, r0
2000a0f8:	e0000fe0 	and	r0, r0, r0, ror #31
2000a0fc:	07800007 	streq	r0, [r0, r7]
2000a100:	00078000 	andeq	r8, r7, r0
2000a104:	00000780 	andeq	r0, r0, r0, lsl #15
2000a108:	0300000b 	movweq	r0, #11
2000a10c:	00010000 	andeq	r0, r1, r0
2000a110:	0c000000 	stceq	0, cr0, [r0], {-0}
2000a114:	00100000 	andseq	r0, r0, r0
	...

2000a128 <flame4_light_bits>:
	...
2000a130:	00040000 	andeq	r0, r4, r0
2000a134:	40000400 	andmi	r0, r0, r0, lsl #8
2000a138:	c8800048 	stmgt	r0, {r3, r6}
2000a13c:	00488000 	subeq	r8, r8, r0
2000a140:	e4004ac4 	str	r4, [r0], #-2756	; 0xfffff53c
2000a144:	2fec007d 	svccs	0x00ec007d
2000a148:	00fff800 	rscseq	pc, pc, r0, lsl #16
2000a14c:	be00fbb8 	vmovlt.16	d16[0], pc
2000a150:	73cc00cb 	bicvc	r0, ip, #203	; 0xcb
2000a154:	00732e00 	rsbseq	r2, r3, r0, lsl #28
2000a158:	0e00703a 	mcreq	0, 0, r7, cr0, cr10, {1}
2000a15c:	c0060050 	andgt	r0, r6, r0, asr r0
2000a160:	00e00e00 	rsceq	r0, r0, r0, lsl #28
2000a164:	0e00a00c 	cdpeq	0, 0, cr10, cr0, cr12, {0}
2000a168:	601c00e0 	andsvs	r0, ip, r0, ror #1
2000a16c:	00602400 	rsbeq	r2, r0, r0, lsl #8
2000a170:	1800301c 	stmdane	r0, {r2, r3, r4, ip, sp}
2000a174:	50380078 	eorspl	r0, r8, r8, ror r0
2000a178:	00587000 	subseq	r7, r8, r0
2000a17c:	f0003830 			; <UNDEFINED> instruction: 0xf0003830
2000a180:	1cf00024 	ldclne	0, cr0, [r0], #144	; 0x90
2000a184:	001ee000 	andseq	lr, lr, r0
2000a188:	c0001fe0 	andgt	r1, r0, r0, ror #31
2000a18c:	0fc0000f 	svceq	0x00c0000f
	...

2000a1a0 <firstTime.4079>:
2000a1a0:	00000001 	andeq	r0, r0, r1

2000a1a4 <boom1_black_bits>:
	...
2000a308:	0000003e 	andeq	r0, r0, lr, lsr r0
	...
2000a314:	00630000 	rsbeq	r0, r3, r0
	...
2000a320:	80000000 	andhi	r0, r0, r0
2000a324:	00000043 	andeq	r0, r0, r3, asr #32
	...
2000a330:	00638000 	rsbeq	r8, r3, r0
	...
2000a33c:	80000000 	andhi	r0, r0, r0
2000a340:	0000003f 	andeq	r0, r0, pc, lsr r0
	...
2000a34c:	001f0000 	andseq	r0, pc, r0
	...

2000a4a8 <boom1_gray_bits>:
	...
2000a618:	00040000 	andeq	r0, r4, r0
	...
2000a628:	00000024 	andeq	r0, r0, r4, lsr #32
	...
2000a634:	001c0000 	andseq	r0, ip, r0
	...

2000a7ac <boom1_light_bits>:
	...
2000a91c:	00180000 	andseq	r0, r8, r0
	...
2000a92c:	00000018 	andeq	r0, r0, r8, lsl r0
	...

2000aab0 <boom2_black_bits>:
	...
2000abcc:	00007c00 	andeq	r7, r0, r0, lsl #24
	...
2000abd8:	fe000000 	cdp2	0, 0, cr0, cr0, cr0, {0}
2000abdc:	00000038 	andeq	r0, r0, r8, lsr r0
	...
2000abe8:	0fffff00 	svceq	0x00ffff00
	...
2000abf4:	ff800000 			; <UNDEFINED> instruction: 0xff800000
2000abf8:	00001fff 	strdeq	r1, [r0], -pc	; <UNPREDICTABLE>
	...
2000ac04:	3ffeff80 	svccc	0x00feff80
	...
2000ac10:	ffc00000 			; <UNDEFINED> instruction: 0xffc00000
2000ac14:	00007f00 	andeq	r7, r0, r0, lsl #30
	...
2000ac20:	7c01ffc0 	stcvc	15, cr15, [r1], {192}	; 0xc0
	...
2000ac2c:	ff800000 			; <UNDEFINED> instruction: 0xff800000
2000ac30:	0000ff01 	andeq	pc, r0, r1, lsl #30
	...
2000ac3c:	fff1f800 	vcmla.f32	d31, d1, d0[0], #270
	...
2000ac48:	f8000000 			; <UNDEFINED> instruction: 0xf8000000
2000ac4c:	0000ffff 	strdeq	pc, [r0], -pc	; <UNPREDICTABLE>
	...
2000ac58:	fffff000 			; <UNDEFINED> instruction: 0xfffff000
	...
2000ac64:	f8000000 			; <UNDEFINED> instruction: 0xf8000000
2000ac68:	0000603f 	andeq	r6, r0, pc, lsr r0
	...
2000ac74:	001ffc00 	andseq	pc, pc, r0, lsl #24
	...
2000ac80:	fc000000 	stc2	0, cr0, [r0], {-0}
2000ac84:	0000000f 	andeq	r0, r0, pc
	...
2000ac90:	0003fc00 	andeq	pc, r3, r0, lsl #24
	...
2000ac9c:	f8000000 			; <UNDEFINED> instruction: 0xf8000000
2000aca0:	00000001 	andeq	r0, r0, r1
	...

2000adb4 <boom2_gray_bits>:
	...
2000af08:	00010000 	andeq	r0, r1, r0
	...
2000af18:	0000000f 	andeq	r0, r0, pc
	...
2000af24:	03020000 	movweq	r0, #8192	; 0x2000
	...
2000af34:	000000fe 	strdeq	r0, [r0], -lr
	...
2000af40:	000e0000 	andeq	r0, lr, r0
	...

2000b0b8 <boom2_light_bits>:
	...
2000b21c:	000000f0 	strdeq	r0, [r0], -r0	; <UNPREDICTABLE>
	...
2000b228:	00fc0000 	rscseq	r0, ip, r0
	...

2000b3bc <boom3_black_bits>:
	...
2000b490:	000e0000 	andeq	r0, lr, r0
	...
2000b49c:	80000000 	andhi	r0, r0, r0
2000b4a0:	000001ff 	strdeq	r0, [r0], -pc	; <UNPREDICTABLE>
	...
2000b4ac:	03ffc000 	mvnseq	ip, #0
	...
2000b4b8:	e0000000 	and	r0, r0, r0
2000b4bc:	000007ff 	strdeq	r0, [r0], -pc	; <UNPREDICTABLE>
2000b4c0:	000001fc 	strdeq	r0, [r0], -ip
2000b4c4:	00000000 	andeq	r0, r0, r0
2000b4c8:	1f8ff000 	svcne	0x008ff000
2000b4cc:	03ff0000 	mvnseq	r0, #0
2000b4d0:	00000000 	andeq	r0, r0, r0
2000b4d4:	f0000000 			; <UNDEFINED> instruction: 0xf0000000
2000b4d8:	e0003e1f 	and	r3, r0, pc, lsl lr
2000b4dc:	000007ff 	strdeq	r0, [r0], -pc	; <UNPREDICTABLE>
2000b4e0:	00000000 	andeq	r0, r0, r0
2000b4e4:	783ff000 	ldmdavc	pc!, {ip, sp, lr, pc}	; <UNPREDICTABLE>
2000b4e8:	07fff800 	ldrbeq	pc, [pc, r0, lsl #16]!	; <UNPREDICTABLE>
2000b4ec:	00000000 	andeq	r0, r0, r0
2000b4f0:	f0000000 			; <UNDEFINED> instruction: 0xf0000000
2000b4f4:	fc00f8ff 	stc2	8, cr15, [r0], {255}	; 0xff
2000b4f8:	000007ff 	strdeq	r0, [r0], -pc	; <UNPREDICTABLE>
2000b4fc:	00000000 	andeq	r0, r0, r0
2000b500:	ffffe000 			; <UNDEFINED> instruction: 0xffffe000
2000b504:	0fe03e00 	svceq	0x00e03e00
2000b508:	00000000 	andeq	r0, r0, r0
2000b50c:	c0000000 	andgt	r0, r0, r0
2000b510:	0700ffff 			; <UNDEFINED> instruction: 0x0700ffff
2000b514:	00001fe0 	andeq	r1, r0, r0, ror #31
2000b518:	00000000 	andeq	r0, r0, r0
2000b51c:	3fffc000 	svccc	0x00ffc000
2000b520:	3fe00300 	svccc	0x00e00300
2000b524:	00000000 	andeq	r0, r0, r0
2000b528:	e0000000 	and	r0, r0, r0
2000b52c:	ff1c07ff 			; <UNDEFINED> instruction: 0xff1c07ff
2000b530:	00003fff 	strdeq	r3, [r0], -pc	; <UNPREDICTABLE>
2000b534:	00000000 	andeq	r0, r0, r0
2000b538:	81ffc000 	mvnshi	ip, r0
2000b53c:	3fffff3f 	svccc	0x00ffff3f
	...
2000b548:	fe7fc07f 	mrc2	0, 3, ip, cr15, cr15, {3}
2000b54c:	00003fff 	strdeq	r3, [r0], -pc	; <UNPREDICTABLE>
2000b550:	00000000 	andeq	r0, r0, r0
2000b554:	e0000000 	and	r0, r0, r0
2000b558:	0ffff87f 	svceq	0x00fff87f
	...
2000b564:	007df800 	rsbseq	pc, sp, r0, lsl #16
2000b568:	000007fe 	strdeq	r0, [r0], -lr
2000b56c:	00000000 	andeq	r0, r0, r0
2000b570:	fc000000 	stc2	0, cr0, [r0], {-0}
2000b574:	03fc00f8 	mvnseq	r0, #248	; 0xf8
	...
2000b580:	01f87e00 	mvnseq	r7, r0, lsl #28
2000b584:	00000030 	andeq	r0, r0, r0, lsr r0
2000b588:	00000000 	andeq	r0, r0, r0
2000b58c:	7f800000 	svcvc	0x00800000
2000b590:	000003f8 	strdeq	r0, [r0], -r8
	...
2000b59c:	07fc7fc0 	ldrbeq	r7, [ip, r0, asr #31]!
	...
2000b5a8:	fff00000 			; <UNDEFINED> instruction: 0xfff00000	; IMB
2000b5ac:	000007ff 	strdeq	r0, [r0], -pc	; <UNPREDICTABLE>
	...
2000b5b8:	07fffff0 			; <UNDEFINED> instruction: 0x07fffff0
	...
2000b5c4:	ffc00000 			; <UNDEFINED> instruction: 0xffc00000
2000b5c8:	000007ff 	strdeq	r0, [r0], -pc	; <UNPREDICTABLE>
	...
2000b5d4:	03ffbe00 	mvnseq	fp, #0, 28
	...
2000b5e4:	000003fe 	strdeq	r0, [r0], -lr
	...
2000b5f0:	01f00000 	mvnseq	r0, r0
	...

2000b6c0 <boom3_gray_bits>:
	...
2000b7cc:	00700000 	rsbseq	r0, r0, r0
	...
2000b7dc:	00000020 	andeq	r0, r0, r0, lsr #32
	...
2000b7e8:	04c00000 	strbeq	r0, [r0], #0
	...
2000b7f8:	00000700 	andeq	r0, r0, r0, lsl #14
	...
2000b808:	0010c000 	andseq	ip, r0, r0
	...
2000b814:	78000000 	stmdavc	r0, {}	; <UNPREDICTABLE>
2000b818:	00000010 	andeq	r0, r0, r0, lsl r0
	...
2000b824:	001ffc00 	andseq	pc, pc, r0, lsl #24
	...
2000b868:	00020000 	andeq	r0, r2, r0
	...
2000b878:	00000001 	andeq	r0, r0, r1
	...
2000b884:	00018000 	andeq	r8, r1, r0
	...
2000b890:	80000000 	andhi	r0, r0, r0
2000b894:	00000007 	andeq	r0, r0, r7
	...
2000b8a0:	00038000 	andeq	r8, r3, r0
	...

2000b9c4 <boom3_light_bits>:
	...
2000bae0:	000001c0 	andeq	r0, r0, r0, asr #3
	...
2000baec:	03000000 	movweq	r0, #0
	...
2000bb0c:	000f0000 	andeq	r0, pc, r0
	...
2000bb18:	80000000 	andhi	r0, r0, r0
2000bb1c:	0000000f 	andeq	r0, r0, pc
	...
2000bb7c:	00000006 	andeq	r0, r0, r6
	...
2000bb88:	00060000 	andeq	r0, r6, r0
	...

2000bcc8 <boom4_black_bits>:
	...
2000bd24:	00000060 	andeq	r0, r0, r0, rrx
2000bd28:	00000000 	andeq	r0, r0, r0
2000bd2c:	7c000000 	stcvc	0, cr0, [r0], {-0}
2000bd30:	00200000 	eoreq	r0, r0, r0
	...
2000bd3c:	0001fc00 	andeq	pc, r1, r0, lsl #24
	...
2000bd48:	f8000000 			; <UNDEFINED> instruction: 0xf8000000
2000bd4c:	00000003 	andeq	r0, r0, r3
	...
2000bd58:	0003f000 	andeq	pc, r3, r0
	...
2000bd64:	607ff000 	rsbsvs	pc, pc, r0
2000bd68:	f8000007 			; <UNDEFINED> instruction: 0xf8000007
2000bd6c:	00000001 	andeq	r0, r0, r1
2000bd70:	ff81c000 			; <UNDEFINED> instruction: 0xff81c000
2000bd74:	0007e1ff 	strdeq	lr, [r7], -pc	; <UNPREDICTABLE>
2000bd78:	0783ff80 	streq	pc, [r3, r0, lsl #31]
2000bd7c:	c0000000 	andgt	r0, r0, r0
2000bd80:	f3ffff81 			; <UNDEFINED> instruction: 0xf3ffff81
2000bd84:	ffffe003 			; <UNDEFINED> instruction: 0xffffe003
2000bd88:	00000783 	andeq	r0, r0, r3, lsl #15
2000bd8c:	ff80c000 			; <UNDEFINED> instruction: 0xff80c000
2000bd90:	f003f7ff 			; <UNDEFINED> instruction: 0xf003f7ff
2000bd94:	0787ffff 			; <UNDEFINED> instruction: 0x0787ffff
2000bd98:	00000000 	andeq	r0, r0, r0
2000bd9c:	f7c3ff80 			; <UNDEFINED> instruction: 0xf7c3ff80
2000bda0:	cffff003 	svcgt	0x00fff003
2000bda4:	00000787 	andeq	r0, r0, r7, lsl #15
2000bda8:	ff800000 			; <UNDEFINED> instruction: 0xff800000
2000bdac:	f001efe3 			; <UNDEFINED> instruction: 0xf001efe3
2000bdb0:	030787ff 	movweq	r8, #30719	; 0x77ff
2000bdb4:	00000000 	andeq	r0, r0, r0
2000bdb8:	8ff0ff80 	svchi	0x00f0ff80
2000bdbc:	87fff001 	ldrbhi	pc, [pc, r1]!	; <UNPREDICTABLE>
2000bdc0:	00000003 	andeq	r0, r0, r3
2000bdc4:	7f800000 	svcvc	0x00800000
2000bdc8:	e0000ff8 	strd	r0, [r0], -r8
2000bdcc:	00c387ff 	strdeq	r8, [r3], #127	; 0x7f
2000bdd0:	00000000 	andeq	r0, r0, r0
2000bdd4:	07ffff80 	ldrbeq	pc, [pc, r0, lsl #31]!	; <UNPREDICTABLE>
2000bdd8:	c7fff800 	ldrbgt	pc, [pc, r0, lsl #16]!	; <UNPREDICTABLE>
2000bddc:	000000c3 	andeq	r0, r0, r3, asr #1
2000bde0:	ffc00000 			; <UNDEFINED> instruction: 0xffc00000
2000bde4:	fc0003ff 	stc2	3, cr0, [r0], {255}	; 0xff
2000bde8:	0001e3ff 	strdeq	lr, [r1], -pc	; <UNPREDICTABLE>
2000bdec:	c0000000 	andgt	r0, r0, r0
2000bdf0:	039fffc0 	orrseq	pc, pc, #192, 30	; 0x300
2000bdf4:	f9fffc00 			; <UNDEFINED> instruction: 0xf9fffc00
2000bdf8:	00000000 	andeq	r0, r0, r0
2000bdfc:	ffe0c000 			; <UNDEFINED> instruction: 0xffe0c000
2000be00:	fc007807 	stc2	8, cr7, [r0], {7}
2000be04:	00007fff 	strdeq	r7, [r0], -pc	; <UNPREDICTABLE>
2000be08:	00000000 	andeq	r0, r0, r0
2000be0c:	7e03ffe0 	cdpvc	15, 0, cr15, cr3, cr0, {7}
2000be10:	3ffffc00 	svccc	0x00fffc00
2000be14:	0000001c 	andeq	r0, r0, ip, lsl r0
2000be18:	ffc00000 			; <UNDEFINED> instruction: 0xffc00000
2000be1c:	fc00ff00 	stc2	15, cr15, [r0], {-0}
2000be20:	007e1fff 	ldrshteq	r1, [lr], #-255	; 0xffffff01
2000be24:	00000000 	andeq	r0, r0, r0
2000be28:	7f803f00 	svcvc	0x00803f00
2000be2c:	3ffe3800 	svccc	0x00fe3800
2000be30:	000000fe 	strdeq	r0, [r0], -lr
2000be34:	00000000 	andeq	r0, r0, r0
2000be38:	02007f80 	andeq	r7, r0, #128, 30	; 0x200
2000be3c:	00fe1ff8 	ldrshteq	r1, [lr], #248	; 0xf8
2000be40:	00000000 	andeq	r0, r0, r0
2000be44:	7f800000 	svcvc	0x00800000
2000be48:	1ff00700 	svcne	0x00f00700
2000be4c:	000000ee 	andeq	r0, r0, lr, ror #1
2000be50:	00000000 	andeq	r0, r0, r0
2000be54:	0787ff80 	streq	pc, [r7, r0, lsl #31]
2000be58:	006607e0 	rsbeq	r0, r6, r0, ror #15
2000be5c:	00000000 	andeq	r0, r0, r0
2000be60:	ff83c000 			; <UNDEFINED> instruction: 0xff83c000
2000be64:	00000fc3 	andeq	r0, r0, r3, asr #31
2000be68:	00000076 	andeq	r0, r0, r6, ror r0
2000be6c:	e0000000 	and	r0, r0, r0
2000be70:	0fffffc3 	svceq	0x00ffffc3
2000be74:	003f0000 	eorseq	r0, pc, r0
2000be78:	00000000 	andeq	r0, r0, r0
2000be7c:	ffe3f000 			; <UNDEFINED> instruction: 0xffe3f000
2000be80:	80000fff 	strdhi	r0, [r0], -pc	; <UNPREDICTABLE>
2000be84:	0000003f 	andeq	r0, r0, pc, lsr r0
2000be88:	f0000000 			; <UNDEFINED> instruction: 0xf0000000
2000be8c:	0ffffff3 	svceq	0x00fffff3
2000be90:	003f81fe 	ldrshteq	r8, [pc], -lr
2000be94:	00000000 	andeq	r0, r0, r0
2000be98:	9ffbe000 	svcls	0x00fbe000
2000be9c:	81ff03ff 	ldrshhi	r0, [pc, #63]	; 2000bee3 <boom4_black_bits+0x21b>
2000bea0:	0000001f 	andeq	r0, r0, pc, lsl r0
2000bea4:	00000000 	andeq	r0, r0, r0
2000bea8:	00ff1ff8 	ldrshteq	r1, [pc], #248
2000beac:	000001ff 	strdeq	r0, [r0], -pc	; <UNPREDICTABLE>
2000beb0:	00000000 	andeq	r0, r0, r0
2000beb4:	3ff80000 	svccc	0x00f80000
2000beb8:	00fe001f 	rscseq	r0, lr, pc, lsl r0
	...
2000bec4:	001e7ff8 			; <UNDEFINED> instruction: 0x001e7ff8
2000bec8:	000000fc 	strdeq	r0, [r0], -ip
2000becc:	00000000 	andeq	r0, r0, r0
2000bed0:	fffc0000 			; <UNDEFINED> instruction: 0xfffc0000
2000bed4:	0078003f 	rsbseq	r0, r8, pc, lsr r0
	...
2000bee0:	007ffffc 	ldrshteq	pc, [pc], #-252	; <UNPREDICTABLE>
	...
2000beec:	fffe0000 			; <UNDEFINED> instruction: 0xfffe0000
2000bef0:	0000007f 	andeq	r0, r0, pc, ror r0
2000bef4:	00000000 	andeq	r0, r0, r0
2000bef8:	04000000 	streq	r0, [r0], #-0
2000befc:	007fc07e 	rsbseq	ip, pc, lr, ror r0	; <UNPREDICTABLE>
	...
2000bf08:	001e0000 	andseq	r0, lr, r0
2000bf0c:	0000007f 	andeq	r0, r0, pc, ror r0
	...
2000bf18:	1c3c1e0c 	ldcne	14, cr1, [ip], #-48	; 0xffffffd0
	...
2000bf24:	ff000000 			; <UNDEFINED> instruction: 0xff000000
2000bf28:	00007c00 	andeq	r7, r0, r0, lsl #24
	...
2000bf34:	fc01ff00 	stc2	15, cr15, [r1], {-0}
	...
2000bf40:	ff000000 			; <UNDEFINED> instruction: 0xff000000
2000bf44:	0000fc01 	andeq	pc, r0, r1, lsl #24
	...
2000bf50:	fc01fc00 	stc2	12, cr15, [r1], {-0}
2000bf54:	00000001 	andeq	r0, r0, r1
2000bf58:	00000000 	andeq	r0, r0, r0
2000bf5c:	e0000000 	and	r0, r0, r0
2000bf60:	0000f801 	andeq	pc, r0, r1, lsl #16
	...

2000bfcc <boom4_gray_bits>:
	...
2000c068:	80000000 	andhi	r0, r0, r0
	...
2000c0a0:	002c0000 	eoreq	r0, ip, r0
2000c0a4:	30000000 	andcc	r0, r0, r0
	...
2000c0b0:	00000004 	andeq	r0, r0, r4
2000c0b4:	00001800 	andeq	r1, r0, r0, lsl #16
2000c0b8:	00000000 	andeq	r0, r0, r0
2000c0bc:	000f0000 	andeq	r0, pc, r0
2000c0c0:	58000000 	stmdapl	r0, {}	; <UNPREDICTABLE>
2000c0c4:	00000000 	andeq	r0, r0, r0
2000c0c8:	80000000 	andhi	r0, r0, r0
2000c0cc:	00000007 	andeq	r0, r0, r7
2000c0d0:	00005800 	andeq	r5, r0, r0, lsl #16
	...
2000c0dc:	38000000 	stmdacc	r0, {}	; <UNPREDICTABLE>
	...
2000c0ec:	00001c00 	andeq	r1, r0, r0, lsl #24
	...
2000c0f8:	06000000 	streq	r0, [r0], -r0
	...
2000c13c:	01c00000 	biceq	r0, r0, r0
	...
2000c14c:	00000020 	andeq	r0, r0, r0, lsr #32
2000c150:	00000010 	andeq	r0, r0, r0, lsl r0
2000c154:	00000000 	andeq	r0, r0, r0
2000c158:	00380000 	eorseq	r0, r8, r0
2000c15c:	00180000 	andseq	r0, r8, r0
	...
2000c168:	0000003c 	andeq	r0, r0, ip, lsr r0
2000c16c:	00000008 	andeq	r0, r0, r8
	...
2000c19c:	60000000 	andvs	r0, r0, r0
	...
2000c1ac:	00006000 	andeq	r6, r0, r0
	...
2000c1b8:	c0000000 	andgt	r0, r0, r0
	...
2000c1c8:	00018000 	andeq	r8, r1, r0
	...

2000c2d0 <boom4_light_bits>:
	...
2000c3a4:	00100000 	andseq	r0, r0, r0
	...
2000c3b4:	00000018 	andeq	r0, r0, r8, lsl r0
2000c3b8:	00006000 	andeq	r6, r0, r0
	...
2000c3c4:	20000000 	andcs	r0, r0, r0
	...
2000c3d4:	00002000 	andeq	r2, r0, r0
	...
2000c450:	000000c0 	andeq	r0, r0, r0, asr #1
	...
2000c45c:	00400000 	subeq	r0, r0, r0
	...
2000c4b0:	00008000 	andeq	r8, r0, r0
	...

2000c5d4 <boom5_black_bits>:
	...
2000c630:	00000060 	andeq	r0, r0, r0, rrx
2000c634:	00000000 	andeq	r0, r0, r0
2000c638:	7c000000 	stcvc	0, cr0, [r0], {-0}
2000c63c:	00200000 	eoreq	r0, r0, r0
	...
2000c648:	0001fc00 	andeq	pc, r1, r0, lsl #24
2000c64c:	00000020 	andeq	r0, r0, r0, lsr #32
2000c650:	00000000 	andeq	r0, r0, r0
2000c654:	f8000000 			; <UNDEFINED> instruction: 0xf8000000
2000c658:	00000003 	andeq	r0, r0, r3
	...
2000c664:	0003f000 	andeq	pc, r3, r0
	...
2000c670:	607ff000 	rsbsvs	pc, pc, r0
2000c674:	f8000006 			; <UNDEFINED> instruction: 0xf8000006
2000c678:	00000001 	andeq	r0, r0, r1
2000c67c:	ff81c000 			; <UNDEFINED> instruction: 0xff81c000
2000c680:	0006e1ff 	strdeq	lr, [r6], -pc	; <UNPREDICTABLE>
2000c684:	0783ff80 	streq	pc, [r3, r0, lsl #31]
2000c688:	c0000000 	andgt	r0, r0, r0
2000c68c:	f3ffff81 			; <UNDEFINED> instruction: 0xf3ffff81
2000c690:	ffffe00e 			; <UNDEFINED> instruction: 0xffffe00e
2000c694:	00000783 	andeq	r0, r0, r3, lsl #15
2000c698:	ff80c000 			; <UNDEFINED> instruction: 0xff80c000
2000c69c:	f007f7ff 			; <UNDEFINED> instruction: 0xf007f7ff
2000c6a0:	0787ffff 			; <UNDEFINED> instruction: 0x0787ffff
2000c6a4:	00000000 	andeq	r0, r0, r0
2000c6a8:	f7f1ff80 			; <UNDEFINED> instruction: 0xf7f1ff80
2000c6ac:	cffff007 	svcgt	0x00fff007
2000c6b0:	00000787 	andeq	r0, r0, r7, lsl #15
2000c6b4:	ff800000 			; <UNDEFINED> instruction: 0xff800000
2000c6b8:	f003eff0 			; <UNDEFINED> instruction: 0xf003eff0
2000c6bc:	0707c3ff 			; <UNDEFINED> instruction: 0x0707c3ff
2000c6c0:	00000000 	andeq	r0, r0, r0
2000c6c4:	cff0ff80 	svcgt	0x00f0ff80
2000c6c8:	c3fff003 	mvnsgt	pc, #3
2000c6cc:	00000603 	andeq	r0, r0, r3, lsl #12
2000c6d0:	7f800000 	svcvc	0x00800000
2000c6d4:	e0038ff8 	strd	r8, [r3], -r8	; <UNPREDICTABLE>
2000c6d8:	04c3e3ff 	strbeq	lr, [r3], #1023	; 0x3ff
2000c6dc:	00000000 	andeq	r0, r0, r0
2000c6e0:	07f87f80 	ldrbeq	r7, [r8, r0, lsl #31]!
2000c6e4:	e3fff803 	mvns	pc, #196608	; 0x30000
2000c6e8:	000004c3 	andeq	r0, r0, r3, asr #9
2000c6ec:	3fc00000 	svccc	0x00c00000
2000c6f0:	fc0003ff 	stc2	3, cr0, [r0], {255}	; 0xff
2000c6f4:	0481f3ff 	streq	pc, [r1], #1023	; 0x3ff
2000c6f8:	c0000000 	andgt	r0, r0, r0
2000c6fc:	03bfffc0 			; <UNDEFINED> instruction: 0x03bfffc0
2000c700:	f9fffc00 			; <UNDEFINED> instruction: 0xf9fffc00
2000c704:	00000081 	andeq	r0, r0, r1, lsl #1
2000c708:	ffe0c000 			; <UNDEFINED> instruction: 0xffe0c000
2000c70c:	fc00781f 	stc2	8, cr7, [r0], {31}
2000c710:	0001fcff 	strdeq	pc, [r1], -pc	; <UNPREDICTABLE>
2000c714:	40000000 	andmi	r0, r0, r0
2000c718:	7e07ffe0 	cdpvc	15, 0, cr15, cr7, cr0, {7}
2000c71c:	3ffffc00 	svccc	0x00fffc00
2000c720:	0000001c 	andeq	r0, r0, ip, lsl r0
2000c724:	ffc04000 			; <UNDEFINED> instruction: 0xffc04000
2000c728:	fc00ff07 	stc2	15, cr15, [r0], {7}
2000c72c:	007e1fff 	ldrshteq	r1, [lr], #-255	; 0xffffff01
2000c730:	00000000 	andeq	r0, r0, r0
2000c734:	7f83ffc0 	svcvc	0x0083ffc0
2000c738:	3ffe7800 	svccc	0x00fe7800
2000c73c:	000000fe 	strdeq	r0, [r0], -lr
2000c740:	ff800000 			; <UNDEFINED> instruction: 0xff800000
2000c744:	63007f81 	movwvs	r7, #3969	; 0xf81
2000c748:	00fe1ff8 	ldrshteq	r1, [lr], #248	; 0xf8
2000c74c:	00000000 	andeq	r0, r0, r0
2000c750:	7f803f00 	svcvc	0x00803f00
2000c754:	1ff06700 	svcne	0x00f06700
2000c758:	000000f6 	strdeq	r0, [r0], -r6
2000c75c:	02000000 	andeq	r0, r0, #0
2000c760:	4781ff80 	strmi	pc, [r1, r0, lsl #31]
2000c764:	00660fe0 	rsbeq	r0, r6, r0, ror #31
2000c768:	00000000 	andeq	r0, r0, r0
2000c76c:	ff83c000 			; <UNDEFINED> instruction: 0xff83c000
2000c770:	0e004fc0 	cdpeq	15, 0, cr4, cr0, cr0, {6}
2000c774:	00000066 	andeq	r0, r0, r6, rrx
2000c778:	e0000000 	and	r0, r0, r0
2000c77c:	0ff07fc3 	svceq	0x00f07fc3
2000c780:	00770c00 	rsbseq	r0, r7, r0, lsl #24
2000c784:	00000000 	andeq	r0, r0, r0
2000c788:	7fe3f000 	svcvc	0x00e3f000
2000c78c:	8c000fff 	stchi	15, cr0, [r0], {255}	; 0xff
2000c790:	0000007f 	andeq	r0, r0, pc, ror r0
2000c794:	f0000000 			; <UNDEFINED> instruction: 0xf0000000
2000c798:	0ffffff3 	svceq	0x00fffff3
2000c79c:	007f81fe 	ldrshteq	r8, [pc], #-30
2000c7a0:	00000000 	andeq	r0, r0, r0
2000c7a4:	fffbe000 			; <UNDEFINED> instruction: 0xfffbe000
2000c7a8:	81ff03ff 	ldrshhi	r0, [pc, #63]	; 2000c7ef <boom5_black_bits+0x21b>
2000c7ac:	0000007f 	andeq	r0, r0, pc, ror r0
2000c7b0:	00000000 	andeq	r0, r0, r0
2000c7b4:	00ff1ff8 	ldrshteq	r1, [pc], #248
2000c7b8:	006f01ff 	strdeq	r0, [pc], #-31	; <UNPREDICTABLE>
2000c7bc:	00000000 	andeq	r0, r0, r0
2000c7c0:	0ff80000 	svceq	0x00f80000
2000c7c4:	00fe001e 	rscseq	r0, lr, lr, lsl r0
2000c7c8:	00000042 	andeq	r0, r0, r2, asr #32
2000c7cc:	00000000 	andeq	r0, r0, r0
2000c7d0:	001e7ff8 			; <UNDEFINED> instruction: 0x001e7ff8
2000c7d4:	004200fe 	strdeq	r0, [r2], #-14
2000c7d8:	00000000 	andeq	r0, r0, r0
2000c7dc:	fffc0000 			; <UNDEFINED> instruction: 0xfffc0000
2000c7e0:	007c003c 	rsbseq	r0, ip, ip, lsr r0
	...
2000c7ec:	007ffffc 	ldrshteq	pc, [pc], #-252	; <UNPREDICTABLE>
2000c7f0:	0000001c 	andeq	r0, r0, ip, lsl r0
2000c7f4:	00000000 	andeq	r0, r0, r0
2000c7f8:	fffe0000 			; <UNDEFINED> instruction: 0xfffe0000
2000c7fc:	000c007f 	andeq	r0, ip, pc, ror r0
2000c800:	00000000 	andeq	r0, r0, r0
2000c804:	04000000 	streq	r0, [r0], #-0
2000c808:	007fc07e 	rsbseq	ip, pc, lr, ror r0	; <UNPREDICTABLE>
2000c80c:	0000000c 	andeq	r0, r0, ip
2000c810:	00000000 	andeq	r0, r0, r0
2000c814:	001e0000 	andseq	r0, lr, r0
2000c818:	0000007f 	andeq	r0, r0, pc, ror r0
	...
2000c824:	1c3c1e0e 	ldcne	14, cr1, [ip], #-56	; 0xffffffc8
	...
2000c830:	ff0c0000 			; <UNDEFINED> instruction: 0xff0c0000
2000c834:	00007c00 	andeq	r7, r0, r0, lsl #24
	...
2000c840:	fc01ff0c 	stc2	15, cr15, [r1], {12}
	...
2000c84c:	ff040000 			; <UNDEFINED> instruction: 0xff040000
2000c850:	0000fc01 	andeq	pc, r0, r1, lsl #24
	...
2000c85c:	fc01fc00 	stc2	12, cr15, [r1], {-0}
2000c860:	00000001 	andeq	r0, r0, r1
2000c864:	00000000 	andeq	r0, r0, r0
2000c868:	f0000000 			; <UNDEFINED> instruction: 0xf0000000
2000c86c:	0000f801 	andeq	pc, r0, r1, lsl #16
	...
2000c878:	9801f000 	stmdals	r1, {ip, sp, lr, pc}
	...
2000c884:	c0000000 	andgt	r0, r0, r0
2000c888:	00001000 	andeq	r1, r0, r0
	...
2000c894:	10000000 	andne	r0, r0, r0
	...

2000c8d8 <boom5_gray_bits>:
	...
2000c974:	80000000 	andhi	r0, r0, r0
	...
2000c984:	00010000 	andeq	r0, r1, r0
	...
2000c994:	00000001 	andeq	r0, r0, r1
	...
2000c9ac:	000e0000 	andeq	r0, lr, r0
2000c9b0:	20000000 	andcs	r0, r0, r0
	...
2000c9bc:	00000007 	andeq	r0, r0, r7
2000c9c0:	00000c00 	andeq	r0, r0, r0, lsl #24
2000c9c4:	00000000 	andeq	r0, r0, r0
2000c9c8:	00030000 	andeq	r0, r3, r0
2000c9cc:	0c000000 	stceq	0, cr0, [r0], {-0}
2000c9d0:	00000000 	andeq	r0, r0, r0
2000c9d4:	80000000 	andhi	r0, r0, r0
2000c9d8:	00000001 	andeq	r0, r0, r1
2000c9dc:	00000400 	andeq	r0, r0, r0, lsl #8
2000c9e0:	00000000 	andeq	r0, r0, r0
2000c9e4:	00058000 	andeq	r8, r5, r0
2000c9e8:	14000000 	strne	r0, [r0], #-0
2000c9ec:	00000000 	andeq	r0, r0, r0
2000c9f0:	c0000000 	andgt	r0, r0, r0
2000c9f4:	00000000 	andeq	r0, r0, r0
2000c9f8:	00000c00 	andeq	r0, r0, r0, lsl #24
	...
2000ca04:	06000000 	streq	r0, [r0], -r0
	...
2000ca14:	00000300 	andeq	r0, r0, r0, lsl #6
	...
2000ca48:	00e80000 	rsceq	r0, r8, r0
	...
2000ca58:	0000008c 	andeq	r0, r0, ip, lsl #1
2000ca5c:	00000008 	andeq	r0, r0, r8
2000ca60:	00000000 	andeq	r0, r0, r0
2000ca64:	00060000 	andeq	r0, r6, r0
2000ca68:	00080000 	andeq	r0, r8, r0
	...
2000ca74:	0000003f 	andeq	r0, r0, pc, lsr r0
2000ca78:	00000018 	andeq	r0, r0, r8, lsl r0
2000ca7c:	00000000 	andeq	r0, r0, r0
2000ca80:	000f8000 	andeq	r8, pc, r0
2000ca84:	00080000 	andeq	r0, r8, r0
2000ca88:	00000000 	andeq	r0, r0, r0
2000ca8c:	80000000 	andhi	r0, r0, r0
	...
2000cab8:	00002000 	andeq	r2, r0, r0
	...
2000cac4:	f0000000 			; <UNDEFINED> instruction: 0xf0000000
2000cac8:	00000001 	andeq	r0, r0, r1
	...
2000cad4:	00018000 	andeq	r8, r1, r0
	...
2000cae4:	00000003 	andeq	r0, r0, r3
	...

2000cbdc <boom5_light_bits>:
	...
2000cc7c:	00000001 	andeq	r0, r0, r1
	...
2000ccb4:	10000000 	andne	r0, r0, r0
	...
2000ccc0:	00000008 	andeq	r0, r0, r8
2000ccc4:	00003000 	andeq	r3, r0, r0
2000ccc8:	00000000 	andeq	r0, r0, r0
2000cccc:	000c0000 	andeq	r0, ip, r0
2000ccd0:	30000000 	andcc	r0, r0, r0
	...
2000ccdc:	00000006 	andeq	r0, r0, r6
2000cce0:	00001800 	andeq	r1, r0, r0, lsl #16
2000cce4:	00000000 	andeq	r0, r0, r0
2000cce8:	00020000 	andeq	r0, r2, r0
2000ccec:	08000000 	stmdaeq	r0, {}	; <UNPREDICTABLE>
	...
2000cd5c:	00000070 	andeq	r0, r0, r0, ror r0
	...
2000cd68:	00780000 	rsbseq	r0, r8, r0
2000cd6c:	00100000 	andseq	r0, r0, r0
	...
2000cdbc:	0000c000 	andeq	ip, r0, r0
	...

2000cee0 <boom6_black_bits>:
	...
2000cf3c:	00000060 	andeq	r0, r0, r0, rrx
2000cf40:	00000000 	andeq	r0, r0, r0
2000cf44:	7c000000 	stcvc	0, cr0, [r0], {-0}
2000cf48:	00200000 	eoreq	r0, r0, r0
	...
2000cf54:	0001fc00 	andeq	pc, r1, r0, lsl #24
2000cf58:	00000020 	andeq	r0, r0, r0, lsr #32
2000cf5c:	00000000 	andeq	r0, r0, r0
2000cf60:	f8000000 			; <UNDEFINED> instruction: 0xf8000000
2000cf64:	00200003 	eoreq	r0, r0, r3
	...
2000cf70:	0003f000 	andeq	pc, r3, r0
	...
2000cf7c:	607ff000 	rsbsvs	pc, pc, r0
2000cf80:	f8000006 			; <UNDEFINED> instruction: 0xf8000006
2000cf84:	00000001 	andeq	r0, r0, r1
2000cf88:	ff81c000 			; <UNDEFINED> instruction: 0xff81c000
2000cf8c:	000661ff 	strdeq	r6, [r6], -pc	; <UNPREDICTABLE>
2000cf90:	0783ff80 	streq	pc, [r3, r0, lsl #31]
2000cf94:	c0000000 	andgt	r0, r0, r0
2000cf98:	73ffff81 	mvnsvc	pc, #516	; 0x204
2000cf9c:	ffffe00e 			; <UNDEFINED> instruction: 0xffffe00e
2000cfa0:	00000783 	andeq	r0, r0, r3, lsl #15
2000cfa4:	ff80c000 			; <UNDEFINED> instruction: 0xff80c000
2000cfa8:	f00ef7f8 			; <UNDEFINED> instruction: 0xf00ef7f8
2000cfac:	0787ffff 			; <UNDEFINED> instruction: 0x0787ffff
2000cfb0:	40000000 	andmi	r0, r0, r0
2000cfb4:	f7f03f80 			; <UNDEFINED> instruction: 0xf7f03f80
2000cfb8:	e3fff007 	mvns	pc, #7
2000cfbc:	00000787 	andeq	r0, r0, r7, lsl #15
2000cfc0:	1f800000 	svcne	0x00800000
2000cfc4:	f007efe0 			; <UNDEFINED> instruction: 0xf007efe0
2000cfc8:	0707c1ff 			; <UNDEFINED> instruction: 0x0707c1ff
2000cfcc:	00000000 	andeq	r0, r0, r0
2000cfd0:	cfe01f80 	svcgt	0x00e01f80
2000cfd4:	c1fff003 	mvnsgt	pc, r3
2000cfd8:	00000603 	andeq	r0, r0, r3, lsl #12
2000cfdc:	1f800000 	svcne	0x00800000
2000cfe0:	f0038ff0 			; <UNDEFINED> instruction: 0xf0038ff0
2000cfe4:	04c3c1ff 	strbeq	ip, [r3], #511	; 0x1ff
2000cfe8:	00000000 	andeq	r0, r0, r0
2000cfec:	07fc1f80 	ldrbeq	r1, [ip, r0, lsl #31]!
2000cff0:	c1fff803 	mvnsgt	pc, r3, lsl #16
2000cff4:	000004c3 	andeq	r0, r0, r3, asr #9
2000cff8:	1fc00000 	svcne	0x00c00000
2000cffc:	fc0203ff 	stc2	3, cr0, [r2], {255}	; 0xff
2000d000:	04c1c0ff 	strbeq	ip, [r1], #255	; 0xff
2000d004:	c0000000 	andgt	r0, r0, r0
2000d008:	03bfffc0 			; <UNDEFINED> instruction: 0x03bfffc0
2000d00c:	f07ffc00 			; <UNDEFINED> instruction: 0xf07ffc00
2000d010:	00000481 	andeq	r0, r0, r1, lsl #9
2000d014:	ffe0c000 			; <UNDEFINED> instruction: 0xffe0c000
2000d018:	fc00799f 	stc2	9, cr7, [r0], {159}	; 0x9f	; <UNPREDICTABLE>
2000d01c:	0081f87f 	addeq	pc, r1, pc, ror r8	; <UNPREDICTABLE>
2000d020:	40000000 	andmi	r0, r0, r0
2000d024:	7e87ffe0 	cdpvc	15, 8, cr15, cr7, cr0, {7}
2000d028:	387ffc00 	ldmdacc	pc!, {sl, fp, ip, sp, lr, pc}^	; <UNPREDICTABLE>
2000d02c:	0000001c 	andeq	r0, r0, ip, lsl r0
2000d030:	ffc04000 			; <UNDEFINED> instruction: 0xffc04000
2000d034:	fc00ff07 	stc2	15, cr15, [r0], {7}
2000d038:	007e1fff 	ldrshteq	r1, [lr], #-255	; 0xffffff01
2000d03c:	40000000 	andmi	r0, r0, r0
2000d040:	7f83ffc0 	svcvc	0x0083ffc0
2000d044:	3ffe7800 	svccc	0x00fe7800
2000d048:	000000fe 	strdeq	r0, [r0], -lr
2000d04c:	ff800000 			; <UNDEFINED> instruction: 0xff800000
2000d050:	63007f81 	movwvs	r7, #3969	; 0xf81
2000d054:	00ee1ff8 	strdeq	r1, [lr], #248	; 0xf8	; <UNPREDICTABLE>
2000d058:	00000000 	andeq	r0, r0, r0
2000d05c:	7f803f00 	svcvc	0x00803f00
2000d060:	1ff06600 	svcne	0x00f06600
2000d064:	000000e6 	andeq	r0, r0, r6, ror #1
2000d068:	07000000 	streq	r0, [r0, -r0]
2000d06c:	4600ff80 	strmi	pc, [r0], -r0, lsl #31
2000d070:	00660fe0 	rsbeq	r0, r6, r0, ror #31
2000d074:	00000000 	andeq	r0, r0, r0
2000d078:	3f83c300 	svccc	0x0083c300
2000d07c:	0e004f80 	cdpeq	15, 0, cr4, cr0, cr0, {4}
2000d080:	00000066 	andeq	r0, r0, r6, rrx
2000d084:	e3000000 	movw	r0, #0
2000d088:	0ff03fc3 	svceq	0x00f03fc3
2000d08c:	007f0c00 	rsbseq	r0, pc, r0, lsl #24
2000d090:	00000000 	andeq	r0, r0, r0
2000d094:	ffe3f300 			; <UNDEFINED> instruction: 0xffe3f300
2000d098:	8c000fff 	stchi	15, cr0, [r0], {255}	; 0xff
2000d09c:	0000007f 	andeq	r0, r0, pc, ror r0
2000d0a0:	f1000000 	cps	#0
2000d0a4:	0ffffff3 	svceq	0x00fffff3
2000d0a8:	007f89fe 	ldrshteq	r8, [pc], #-158
2000d0ac:	00000000 	andeq	r0, r0, r0
2000d0b0:	3ffbe000 	svccc	0x00fbe000
2000d0b4:	89ff03ff 	ldmibhi	pc!, {r0, r1, r2, r3, r4, r5, r6, r7, r8, r9}^	; <UNPREDICTABLE>
2000d0b8:	0000007f 	andeq	r0, r0, pc, ror r0
2000d0bc:	80000000 	andhi	r0, r0, r0
2000d0c0:	00ff1ffb 	ldrshteq	r1, [pc], #251
2000d0c4:	006f01ff 	strdeq	r0, [pc], #-31	; <UNPREDICTABLE>
2000d0c8:	00000000 	andeq	r0, r0, r0
2000d0cc:	0ff98000 	svceq	0x00f98000
2000d0d0:	00fe001e 	rscseq	r0, lr, lr, lsl r0
2000d0d4:	00000066 	andeq	r0, r0, r6, rrx
2000d0d8:	80000000 	andhi	r0, r0, r0
2000d0dc:	001e3ff8 			; <UNDEFINED> instruction: 0x001e3ff8
2000d0e0:	004200fe 	strdeq	r0, [r2], #-14
2000d0e4:	00000000 	andeq	r0, r0, r0
2000d0e8:	fffc0000 			; <UNDEFINED> instruction: 0xfffc0000
2000d0ec:	007c003c 	rsbseq	r0, ip, ip, lsr r0
2000d0f0:	00000042 	andeq	r0, r0, r2, asr #32
2000d0f4:	00000000 	andeq	r0, r0, r0
2000d0f8:	0079fffc 	ldrshteq	pc, [r9], #-252	; 0xffffff04	; <UNPREDICTABLE>
2000d0fc:	0002001c 	andeq	r0, r2, ip, lsl r0
2000d100:	00000000 	andeq	r0, r0, r0
2000d104:	fffe0000 			; <UNDEFINED> instruction: 0xfffe0000
2000d108:	000c007f 	andeq	r0, ip, pc, ror r0
2000d10c:	00000002 	andeq	r0, r0, r2
2000d110:	04000000 	streq	r0, [r0], #-0
2000d114:	007fc07e 	rsbseq	ip, pc, lr, ror r0	; <UNPREDICTABLE>
2000d118:	0000000c 	andeq	r0, r0, ip
2000d11c:	00000000 	andeq	r0, r0, r0
2000d120:	003e0400 	eorseq	r0, lr, r0, lsl #8
2000d124:	0004007f 	andeq	r0, r4, pc, ror r0
	...
2000d130:	1c3c1e1e 	ldcne	14, cr1, [ip], #-120	; 0xffffff88
2000d134:	00000004 	andeq	r0, r0, r4
2000d138:	00000000 	andeq	r0, r0, r0
2000d13c:	ff1c0000 			; <UNDEFINED> instruction: 0xff1c0000
2000d140:	00007c00 	andeq	r7, r0, r0, lsl #24
	...
2000d14c:	fc01ff1c 	stc2	15, cr15, [r1], {28}
	...
2000d158:	ff0c0000 			; <UNDEFINED> instruction: 0xff0c0000
2000d15c:	0000fc01 	andeq	pc, r0, r1, lsl #24
	...
2000d168:	fc01fc08 	stc2	12, cr15, [r1], {8}
2000d16c:	00000001 	andeq	r0, r0, r1
2000d170:	00000000 	andeq	r0, r0, r0
2000d174:	f0080000 			; <UNDEFINED> instruction: 0xf0080000
2000d178:	0000f801 	andeq	pc, r0, r1, lsl #16
	...
2000d184:	d801f008 	stmdale	r1, {r3, ip, sp, lr, pc}
	...
2000d190:	e0000000 	and	r0, r0, r0
2000d194:	00009000 	andeq	r9, r0, r0
	...
2000d1a0:	90006000 	andls	r6, r0, r0
	...
2000d1ac:	40000000 	andmi	r0, r0, r0
2000d1b0:	00001000 	andeq	r1, r0, r0
	...
2000d1bc:	00004000 	andeq	r4, r0, r0
	...

2000d1e4 <boom6_gray_bits>:
	...
2000d280:	80000000 	andhi	r0, r0, r0
	...
2000d290:	00008000 	andeq	r8, r0, r0
	...
2000d29c:	80000000 	andhi	r0, r0, r0
2000d2a0:	00000001 	andeq	r0, r0, r1
	...
2000d2ac:	00010007 	andeq	r0, r1, r7
	...
2000d2b8:	0008c000 	andeq	ip, r8, r0
2000d2bc:	1c000000 	stcne	0, cr0, [r0], {-0}
2000d2c0:	00000000 	andeq	r0, r0, r0
2000d2c4:	e0000000 	and	r0, r0, r0
2000d2c8:	00000018 	andeq	r0, r0, r8, lsl r0
2000d2cc:	00002600 	andeq	r2, r0, r0, lsl #12
2000d2d0:	00000000 	andeq	r0, r0, r0
2000d2d4:	00136000 	andseq	r6, r3, r0
2000d2d8:	2e000000 	cdpcs	0, 0, cr0, cr0, cr0, {0}
2000d2dc:	00000000 	andeq	r0, r0, r0
2000d2e0:	e0000000 	and	r0, r0, r0
2000d2e4:	0000000f 	andeq	r0, r0, pc
2000d2e8:	00002600 	andeq	r2, r0, r0, lsl #12
2000d2ec:	00000000 	andeq	r0, r0, r0
2000d2f0:	0003e000 	andeq	lr, r3, r0
2000d2f4:	26000000 	strcs	r0, [r0], -r0
2000d2f8:	00000000 	andeq	r0, r0, r0
2000d2fc:	e0000000 	and	r0, r0, r0
2000d300:	00000000 	andeq	r0, r0, r0
2000d304:	00003300 	andeq	r3, r0, r0, lsl #6
	...
2000d310:	09800000 	stmibeq	r0, {}	; <UNPREDICTABLE>
	...
2000d320:	00000780 	andeq	r0, r0, r0, lsl #15
	...
2000d32c:	07800000 	streq	r0, [r0, r0]
	...
2000d348:	000000f0 	strdeq	r0, [r0], -r0	; <UNPREDICTABLE>
	...
2000d354:	008c0000 	addeq	r0, ip, r0
2000d358:	00100000 	andseq	r0, r0, r0
	...
2000d364:	00000106 	andeq	r0, r0, r6, lsl #2
2000d368:	00000008 	andeq	r0, r0, r8
2000d36c:	00000000 	andeq	r0, r0, r0
2000d370:	01630000 	cmneq	r3, r0
2000d374:	00080000 	andeq	r0, r8, r0
2000d378:	00000000 	andeq	r0, r0, r0
2000d37c:	c0000000 	andgt	r0, r0, r0
2000d380:	0000007f 	andeq	r0, r0, pc, ror r0
2000d384:	00000018 	andeq	r0, r0, r8, lsl r0
2000d388:	00000000 	andeq	r0, r0, r0
2000d38c:	000fc000 	andeq	ip, pc, r0
	...
2000d3b4:	c0000000 	andgt	r0, r0, r0
	...
2000d3c4:	00002000 	andeq	r2, r0, r0
	...
2000d3d0:	70000000 	andvc	r0, r0, r0
	...
2000d3e0:	0001c000 	andeq	ip, r1, r0
	...
2000d3f0:	00000003 	andeq	r0, r0, r3
	...
2000d3fc:	00060000 	andeq	r0, r6, r0
	...

2000d4e8 <boom6_light_bits>:
	...
2000d588:	00000001 	andeq	r0, r0, r1
	...
2000d594:	00010000 	andeq	r0, r1, r0
	...
2000d5bc:	00070000 	andeq	r0, r7, r0
	...
2000d5cc:	00000007 	andeq	r0, r0, r7
2000d5d0:	00001800 	andeq	r1, r0, r0, lsl #16
2000d5d4:	00000000 	andeq	r0, r0, r0
2000d5d8:	000c8000 	andeq	r8, ip, r0
2000d5dc:	10000000 	andne	r0, r0, r0
	...
2000d5ec:	00001800 	andeq	r1, r0, r0, lsl #16
	...
2000d5f8:	18000000 	stmdane	r0, {}	; <UNPREDICTABLE>
	...
2000d608:	00000c00 	andeq	r0, r0, r0, lsl #24
	...
2000d614:	06000000 	streq	r0, [r0], -r0
	...
2000d658:	00700000 	rsbseq	r0, r0, r0
	...
2000d668:	000000f8 	strdeq	r0, [r0], -r8
2000d66c:	00000010 	andeq	r0, r0, r0, lsl r0
2000d670:	00000000 	andeq	r0, r0, r0
2000d674:	009c0000 	addseq	r0, ip, r0
2000d678:	00100000 	andseq	r0, r0, r0
	...
2000d6c8:	0000c000 	andeq	ip, r0, r0
	...
2000d6d4:	80000000 	andhi	r0, r0, r0
2000d6d8:	00000001 	andeq	r0, r0, r1
	...

2000d7ec <firstTime.4114>:
2000d7ec:	00000001 	andeq	r0, r0, r1

2000d7f0 <indoors_black_bits>:
2000d7f0:	00000100 	andeq	r0, r0, r0, lsl #2
	...
2000d800:	00000100 	andeq	r0, r0, r0, lsl #2
	...
2000d810:	00000100 	andeq	r0, r0, r0, lsl #2
	...
2000d820:	00000100 	andeq	r0, r0, r0, lsl #2
	...
2000d830:	00000100 	andeq	r0, r0, r0, lsl #2
	...
2000d840:	00000100 	andeq	r0, r0, r0, lsl #2
	...
2000d850:	00000280 	andeq	r0, r0, r0, lsl #5
	...
2000d860:	00000440 	andeq	r0, r0, r0, asr #8
	...
2000d870:	00002aa8 	andeq	r2, r0, r8, lsr #21
	...
2000d880:	00001290 	muleq	r0, r0, r2
	...
2000d890:	00002c68 	andeq	r2, r0, r8, ror #24
	...
2000d8a0:	00002008 	andeq	r2, r0, r8
	...
2000d8b0:	000027c8 	andeq	r2, r0, r8, asr #15
	...
2000d8c0:	00001ff0 	strdeq	r1, [r0], -r0
	...
2000d8d0:	00000d60 	andeq	r0, r0, r0, ror #26
	...
2000d940:	f7fbfe00 			; <UNDEFINED> instruction: 0xf7fbfe00
2000d944:	7fbfdfef 	svcvc	0x00bfdfef
2000d948:	fbfdfeff 	blx	1ff8d54e <startup-0x72ab2>
2000d94c:	00ff703f 	rscseq	r7, pc, pc, lsr r0	; <UNPREDICTABLE>
2000d950:	0c060200 	sfmeq	f0, 4, [r6], {-0}
2000d954:	c0603018 	rsbgt	r3, r0, r8, lsl r0
2000d958:	06030180 	streq	r0, [r3], -r0, lsl #3
2000d95c:	0080d02c 	addeq	sp, r0, ip, lsr #32
2000d960:	0c060200 	sfmeq	f0, 4, [r6], {-0}
2000d964:	c0603018 	rsbgt	r3, r0, r8, lsl r0
2000d968:	06030180 	streq	r0, [r3], -r0, lsl #3
2000d96c:	0080d02c 	addeq	sp, r0, ip, lsr #32
2000d970:	fffffe00 			; <UNDEFINED> instruction: 0xfffffe00
2000d974:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
2000d978:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
2000d97c:	00ffdfef 	rscseq	sp, pc, pc, ror #31
	...
2000d98c:	000050e8 	andeq	r5, r0, r8, ror #1
	...
2000d99c:	00005fe8 	andeq	r5, r0, r8, ror #31
	...
2000d9ac:	00005028 	andeq	r5, r0, r8, lsr #32
	...
2000d9bc:	00005028 	andeq	r5, r0, r8, lsr #32
	...
2000d9cc:	00005fe8 	andeq	r5, r0, r8, ror #31
	...
2000d9dc:	03f050e8 	mvnseq	r5, #232	; 0xe8
	...
2000d9ec:	0c0c5fe8 	stceq	15, cr5, [ip], {232}	; 0xe8
	...
2000d9fc:	10025028 	andne	r5, r2, r8, lsr #32
	...
2000da0c:	13fa5028 	mvnsne	r5, #40	; 0x28
	...
2000da1c:	100a5fe8 	andne	r5, sl, r8, ror #31
	...
2000da2c:	100a50e8 	andne	r5, sl, r8, ror #1
	...
2000da3c:	100a5fe8 	andne	r5, sl, r8, ror #31
	...
2000da4c:	100a5028 	andne	r5, sl, r8, lsr #32
	...
2000da5c:	100a5028 	andne	r5, sl, r8, lsr #32
	...
2000da6c:	100a5fe8 	andne	r5, sl, r8, ror #31
	...
2000da7c:	100a50e8 	andne	r5, sl, r8, ror #1
	...
2000da8c:	100a5ee8 	andne	r5, sl, r8, ror #29
	...
2000da9c:	100a5028 	andne	r5, sl, r8, lsr #32
	...
2000daac:	100a5028 	andne	r5, sl, r8, lsr #32
	...
2000dabc:	10025fe8 	andne	r5, r2, r8, ror #31
	...
2000dacc:	0ffc50e8 	svceq	0x00fc50e8
	...
2000dadc:	00005fe8 	andeq	r5, r0, r8, ror #31
	...
2000daec:	00005028 	andeq	r5, r0, r8, lsr #32
	...
2000dafc:	00005028 	andeq	r5, r0, r8, lsr #32
	...
2000db0c:	00005fe8 	andeq	r5, r0, r8, ror #31
	...
2000db1c:	000050e8 	andeq	r5, r0, r8, ror #1
	...
2000db2c:	00005fe8 	andeq	r5, r0, r8, ror #31
	...
2000db3c:	00007028 	andeq	r7, r0, r8, lsr #32
	...
2000db4c:	00007028 	andeq	r7, r0, r8, lsr #32
	...
2000db5c:	00007038 	andeq	r7, r0, r8, lsr r0
2000db60:	f7fbfdfe 			; <UNDEFINED> instruction: 0xf7fbfdfe
2000db64:	7fbfdfef 	svcvc	0x00bfdfef
2000db68:	fbfdfeff 	blx	1ff8d76e <startup-0x72892>
2000db6c:	bfbfeff7 	svclt	0x00bfeff7
2000db70:	0c060301 	stceq	3, cr0, [r6], {1}
2000db74:	c0603018 	rsbgt	r3, r0, r8, lsl r0
2000db78:	06030180 	streq	r0, [r3], -r0, lsl #3
2000db7c:	6030180c 	eorsvs	r1, r0, ip, lsl #16
2000db80:	0c060301 	stceq	3, cr0, [r6], {1}
2000db84:	c0603018 	rsbgt	r3, r0, r8, lsl r0
2000db88:	06030180 	streq	r0, [r3], -r0, lsl #3
2000db8c:	6030180c 	eorsvs	r1, r0, ip, lsl #16
2000db90:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
2000db94:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
2000db98:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
2000db9c:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
2000dba0:	c0603018 	rsbgt	r3, r0, r8, lsl r0
2000dba4:	06030180 	streq	r0, [r3], -r0, lsl #3
2000dba8:	6030180c 	eorsvs	r1, r0, ip, lsl #16
2000dbac:	030180c0 	movweq	r8, #4288	; 0x10c0
2000dbb0:	c0603018 	rsbgt	r3, r0, r8, lsl r0
2000dbb4:	06030180 	streq	r0, [r3], -r0, lsl #3
2000dbb8:	6030180c 	eorsvs	r1, r0, ip, lsl #16
2000dbbc:	030180c0 	movweq	r8, #4288	; 0x10c0
2000dbc0:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
2000dbc4:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
2000dbc8:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
2000dbcc:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
2000dbd0:	030180c0 	movweq	r8, #4288	; 0x10c0
2000dbd4:	30180c06 	andscc	r0, r8, r6, lsl #24
2000dbd8:	0180c060 	orreq	ip, r0, r0, rrx
2000dbdc:	180c0603 	stmdane	ip, {r0, r1, r9, sl}
2000dbe0:	030180c0 	movweq	r8, #4288	; 0x10c0
2000dbe4:	30180c06 	andscc	r0, r8, r6, lsl #24
2000dbe8:	0180c060 	orreq	ip, r0, r0, rrx
2000dbec:	180c0603 	stmdane	ip, {r0, r1, r9, sl}

2000dbf0 <indoors_gray_bits>:
	...
2000dc50:	00001110 	andeq	r1, r0, r0, lsl r1
	...
2000dc60:	00001090 	muleq	r0, r0, r0
	...
2000dc90:	00000390 	muleq	r0, r0, r3
	...
2000dca0:	00001340 	andeq	r1, r0, r0, asr #6
	...
2000dcb0:	00000830 	andeq	r0, r0, r0, lsr r8
	...
2000dd40:	08040000 	stmdaeq	r4, {}	; <UNPREDICTABLE>
2000dd44:	80402010 	subhi	r2, r0, r0, lsl r0
2000dd48:	04020100 	streq	r0, [r2], #-256	; 0xffffff00
2000dd4c:	00008000 	andeq	r8, r0, r0
2000dd50:	b0582c00 	subslt	r2, r8, r0, lsl #24
2000dd54:	0582c160 	streq	ip, [r2, #352]	; 0x160
2000dd58:	582c160b 	stmdapl	ip!, {r0, r1, r3, r9, sl, ip}
2000dd5c:	010b0000 	mrseq	r0, (UNDEF: 11)
2000dd60:	71b8dc00 			; <UNDEFINED> instruction: 0x71b8dc00
2000dd64:	1b8dc6e3 	blne	1e37f8f8 <startup-0x1c80708>
2000dd68:	b8dc6e37 	ldmlt	ip, {r0, r1, r2, r4, r5, r9, sl, fp, sp, lr}^
2000dd6c:	01370001 	teqeq	r7, r1
	...
2000dd7c:	01000000 	mrseq	r0, (UNDEF: 0)
2000dd80:	fffff000 			; <UNDEFINED> instruction: 0xfffff000
2000dd84:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
2000dd88:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
2000dd8c:	01ff8007 	mvnseq	r8, r7
	...
2000dd9c:	00008000 	andeq	r8, r0, r0
	...
2000ddac:	00008180 	andeq	r8, r0, r0, lsl #3
	...
2000ddbc:	00008180 	andeq	r8, r0, r0, lsl #3
	...
2000ddcc:	00008000 	andeq	r8, r0, r0
	...
2000dddc:	00008000 	andeq	r8, r0, r0
	...
2000ddec:	00008000 	andeq	r8, r0, r0
	...
2000ddfc:	00008180 	andeq	r8, r0, r0, lsl #3
	...
2000de0c:	20008180 	andcs	r8, r0, r0, lsl #3
	...
2000de1c:	20808000 	addcs	r8, r0, r0
	...
2000de2c:	20c08100 	sbccs	r8, r0, r0, lsl #2
	...
2000de3c:	21e08000 	mvncs	r8, r0
	...
2000de4c:	2bf08180 	blcs	1fc2e454 <startup-0x3d1bac>
	...
2000de5c:	25c08180 	strbcs	r8, [r0, #384]	; 0x180
	...
2000de6c:	29e08000 	stmibcs	r0!, {pc}^
	...
2000de7c:	2bc08100 	blcs	1f02e284 <startup-0xfd1d7c>
	...
2000de8c:	20c08110 	sbccs	r8, r0, r0, lsl r1
	...
2000de9c:	28e0a190 	stmiacs	r0!, {r4, r7, r8, sp, pc}^
	...
2000deac:	2bf08180 	blcs	1fc2e4b4 <startup-0x3d1b4c>
	...
2000debc:	28008000 	stmdacs	r0, {pc}
	...
2000decc:	3000a010 	andcc	sl, r0, r0, lsl r0
	...
2000dedc:	1fc0a000 	svcne	0x00c0a000
	...
2000deec:	0000a180 	andeq	sl, r0, r0, lsl #3
	...
2000defc:	00008190 	muleq	r0, r0, r1
	...
2000df0c:	00008010 	andeq	r8, r0, r0, lsl r0
	...
2000df1c:	00008110 	andeq	r8, r0, r0, lsl r1
	...
2000df2c:	0000a010 	andeq	sl, r0, r0, lsl r0
	...
2000df3c:	00008190 	muleq	r0, r0, r1
	...
2000df4c:	00008190 	muleq	r0, r0, r1
	...
2000df5c:	00008180 	andeq	r8, r0, r0, lsl #3
2000df60:	08040201 	stmdaeq	r4, {r0, r9}
2000df64:	80402010 	subhi	r2, r0, r0, lsl r0
2000df68:	04020100 	streq	r0, [r2], #-256	; 0xffffff00
2000df6c:	40401008 	submi	r1, r0, r8
2000df70:	b0582c16 	subslt	r2, r8, r6, lsl ip
2000df74:	0582c160 	streq	ip, [r2, #352]	; 0x160
2000df78:	582c160b 	stmdapl	ip!, {r0, r1, r3, r9, sl, ip}
2000df7c:	82c160b0 	sbchi	r6, r1, #176	; 0xb0
2000df80:	71b8dc6e 			; <UNDEFINED> instruction: 0x71b8dc6e
2000df84:	1b8dc6e3 	blne	1e37fb18 <startup-0x1c804e8>
2000df88:	b8dc6e37 	ldmlt	ip, {r0, r1, r2, r4, r5, r9, sl, fp, sp, lr}^
2000df8c:	8dc6e371 	stclhi	3, cr14, [r6, #452]	; 0x1c4
	...
2000dfa0:	0582c160 	streq	ip, [r2, #352]	; 0x160
2000dfa4:	582c160b 	stmdapl	ip!, {r0, r1, r3, r9, sl, ip}
2000dfa8:	82c160b0 	sbchi	r6, r1, #176	; 0xb0
2000dfac:	2c160b05 			; <UNDEFINED> instruction: 0x2c160b05
2000dfb0:	1b8dc6e3 	blne	1e37fb44 <startup-0x1c804bc>
2000dfb4:	b8dc6e37 	ldmlt	ip, {r0, r1, r2, r4, r5, r9, sl, fp, sp, lr}^
2000dfb8:	8dc6e371 	stclhi	3, cr14, [r6, #452]	; 0x1c4
2000dfbc:	dc6e371b 	stclle	7, cr3, [lr], #-108	; 0xffffff94
	...
2000dfd0:	2c160b05 			; <UNDEFINED> instruction: 0x2c160b05
2000dfd4:	c160b058 	qdsubgt	fp, r8, r0
2000dfd8:	160b0582 	strne	r0, [fp], -r2, lsl #11
2000dfdc:	60b0582c 	adcsvs	r5, r0, ip, lsr #16
2000dfe0:	dc6e371b 	stclle	7, cr3, [lr], #-108	; 0xffffff94
2000dfe4:	c6e371b8 			; <UNDEFINED> instruction: 0xc6e371b8
2000dfe8:	6e371b8d 	vaddvs.f64	d1, d23, d13
2000dfec:	e371b8dc 	cmn	r1, #220, 16	; 0xdc0000

2000dff0 <indoors_light_bits>:
	...
2000e030:	00001010 	andeq	r1, r0, r0, lsl r0
	...
2000e060:	00000300 	andeq	r0, r0, r0, lsl #6
	...
2000e070:	00001110 	andeq	r1, r0, r0, lsl r1
	...
2000e080:	00000100 	andeq	r0, r0, r0, lsl #2
	...
2000e090:	00001000 	andeq	r1, r0, r0
	...
2000e0a0:	00000cb0 			; <UNDEFINED> instruction: 0x00000cb0
	...
2000e0b0:	00001000 	andeq	r1, r0, r0
	...
2000e150:	43a1d000 			; <UNDEFINED> instruction: 0x43a1d000
2000e154:	3a1d0e87 	bcc	20751b78 <firstTime.4104+0x73d70c>
2000e158:	a1d0e874 	bicsge	lr, r0, r4, ror r8
2000e15c:	00742013 	rsbseq	r2, r4, r3, lsl r0
2000e160:	82412000 	subhi	r2, r1, #0
2000e164:	24120904 	ldrcs	r0, [r2], #-2308	; 0xfffff6fc
2000e168:	41209048 			; <UNDEFINED> instruction: 0x41209048
2000e16c:	00482012 	subeq	r2, r8, r2, lsl r0
	...
2000e17c:	00002010 	andeq	r2, r0, r0, lsl r0
	...
2000e18c:	00002f10 	andeq	r2, r0, r0, lsl pc
	...
2000e19c:	00002010 	andeq	r2, r0, r0, lsl r0
	...
2000e1ac:	00002010 	andeq	r2, r0, r0, lsl r0
	...
2000e1bc:	00002010 	andeq	r2, r0, r0, lsl r0
	...
2000e1cc:	00002010 	andeq	r2, r0, r0, lsl r0
	...
2000e1dc:	00002f10 	andeq	r2, r0, r0, lsl pc
	...
2000e1ec:	00002010 	andeq	r2, r0, r0, lsl r0
	...
2000e1fc:	00002010 	andeq	r2, r0, r0, lsl r0
	...
2000e20c:	00002010 	andeq	r2, r0, r0, lsl r0
	...
2000e21c:	03702010 	cmneq	r0, #16
	...
2000e22c:	03302e10 	teqeq	r0, #16, 28	; 0x100
	...
2000e23c:	02102010 	andseq	r2, r0, #16
	...
2000e24c:	00002010 	andeq	r2, r0, r0, lsl r0
	...
2000e25c:	02302010 	eorseq	r2, r0, #16
	...
2000e26c:	02102010 	andseq	r2, r0, #16
	...
2000e27c:	00302e10 	eorseq	r2, r0, r0, lsl lr
	...
2000e28c:	03302000 	teqeq	r0, #0
	...
2000e29c:	03100000 	tsteq	r0, #0
	...
2000e2ac:	00002010 	andeq	r2, r0, r0, lsl r0
	...
2000e2bc:	00002010 	andeq	r2, r0, r0, lsl r0
	...
2000e2cc:	00000f00 	andeq	r0, r0, r0, lsl #30
	...
2000e2dc:	00000010 	andeq	r0, r0, r0, lsl r0
	...
2000e2ec:	00000010 	andeq	r0, r0, r0, lsl r0
	...
2000e2fc:	00002000 	andeq	r2, r0, r0
	...
2000e30c:	00002000 	andeq	r2, r0, r0
	...
2000e31c:	00002e00 	andeq	r2, r0, r0, lsl #28
	...
2000e370:	43a1d0e8 			; <UNDEFINED> instruction: 0x43a1d0e8
2000e374:	3a1d0e87 	bcc	20751d98 <firstTime.4104+0x73d92c>
2000e378:	a1d0e874 	bicsge	lr, r0, r4, ror r8
2000e37c:	1d0e8743 	stcne	7, cr8, [lr, #-268]	; 0xfffffef4
2000e380:	82412090 	subhi	r2, r1, #144	; 0x90
2000e384:	24120904 	ldrcs	r0, [r2], #-2308	; 0xfffff6fc
2000e388:	41209048 			; <UNDEFINED> instruction: 0x41209048
2000e38c:	12090482 	andne	r0, r9, #-2113929216	; 0x82000000
	...
2000e3a0:	3a1d0e87 	bcc	20751dc4 <firstTime.4104+0x73d958>
2000e3a4:	a1d0e874 	bicsge	lr, r0, r4, ror r8
2000e3a8:	1d0e8743 	stcne	7, cr8, [lr, #-268]	; 0xfffffef4
2000e3ac:	d0e8743a 	rscle	r7, r8, sl, lsr r4
2000e3b0:	24120904 	ldrcs	r0, [r2], #-2308	; 0xfffff6fc
2000e3b4:	41209048 			; <UNDEFINED> instruction: 0x41209048
2000e3b8:	12090482 	andne	r0, r9, #-2113929216	; 0x82000000
2000e3bc:	20904824 	addscs	r4, r0, r4, lsr #16
	...
2000e3d0:	d0e8743a 	rscle	r7, r8, sl, lsr r4
2000e3d4:	0e8743a1 	cdpeq	3, 8, cr4, cr7, cr1, {5}
2000e3d8:	e8743a1d 	ldmda	r4!, {r0, r2, r3, r4, r9, fp, ip, sp}^
2000e3dc:	8743a1d0 			; <UNDEFINED> instruction: 0x8743a1d0
2000e3e0:	20904824 	addscs	r4, r0, r4, lsr #16
2000e3e4:	09048241 	stmdbeq	r4, {r0, r6, r9, pc}
2000e3e8:	90482412 	subls	r2, r8, r2, lsl r4
2000e3ec:	04824120 	streq	r4, [r2], #288	; 0x120

2000e3f0 <firstTime.4040>:
2000e3f0:	00000001 	andeq	r0, r0, r1

2000e3f4 <indoors2_black_bits>:
2000e3f4:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
2000e3f8:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
2000e3fc:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
2000e400:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
2000e404:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
2000e408:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
2000e40c:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
2000e410:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
2000e414:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
2000e418:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
2000e41c:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
2000e420:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
2000e424:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
2000e428:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
2000e42c:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
2000e430:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
2000e434:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
2000e438:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
2000e43c:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
2000e440:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
2000e444:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
2000e448:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
2000e44c:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
2000e450:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
2000e454:	ffffeeef 			; <UNDEFINED> instruction: 0xffffeeef
2000e458:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
2000e45c:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
2000e460:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
2000e464:	ffffec6f 			; <UNDEFINED> instruction: 0xffffec6f
2000e468:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
2000e46c:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
2000e470:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
2000e474:	ffffeaaf 			; <UNDEFINED> instruction: 0xffffeaaf
2000e478:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
2000e47c:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
2000e480:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
2000e484:	fffff29f 			; <UNDEFINED> instruction: 0xfffff29f
2000e488:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
2000e48c:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
2000e490:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
2000e494:	ffffec6f 			; <UNDEFINED> instruction: 0xffffec6f
2000e498:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
2000e49c:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
2000e4a0:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
2000e4a4:	ffffe00f 			; <UNDEFINED> instruction: 0xffffe00f
2000e4a8:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
2000e4ac:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
2000e4b0:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
2000e4b4:	ffffe7cf 			; <UNDEFINED> instruction: 0xffffe7cf
2000e4b8:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
2000e4bc:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
2000e4c0:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
2000e4c4:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
2000e4c8:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
2000e4cc:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
2000e4d0:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
2000e4d4:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
2000e4d8:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
2000e4dc:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
2000e4e0:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
2000e4e4:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
2000e4e8:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
2000e4ec:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
2000e4f0:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
2000e4f4:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
2000e4f8:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
2000e4fc:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
2000e500:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
2000e504:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
2000e508:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
2000e50c:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
2000e510:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
2000e514:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
2000e518:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
2000e51c:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
2000e520:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
2000e524:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
2000e528:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
2000e52c:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
2000e530:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
2000e534:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
2000e538:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
2000e53c:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
2000e540:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
2000e544:	f7fbffff 			; <UNDEFINED> instruction: 0xf7fbffff
2000e548:	7fbfdfef 	svcvc	0x00bfdfef
2000e54c:	fbfdfeff 	blx	1ff8e152 <startup-0x71eae>
2000e550:	ffff7fff 			; <UNDEFINED> instruction: 0xffff7fff
2000e554:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
2000e558:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
2000e55c:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
2000e560:	feffdfef 	cdp2	15, 15, cr13, cr15, cr15, {7}
2000e564:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
2000e568:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
2000e56c:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
2000e570:	feffdfef 	cdp2	15, 15, cr13, cr15, cr15, {7}
2000e574:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
2000e578:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
2000e57c:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
2000e580:	feffdfef 	cdp2	15, 15, cr13, cr15, cr15, {7}
2000e584:	00000fff 	strdeq	r0, [r0], -pc	; <UNPREDICTABLE>
	...
2000e590:	fe0050e8 	cdp2	0, 0, cr5, cr0, cr8, {7}
2000e594:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
2000e598:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
2000e59c:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
2000e5a0:	ffff5fef 			; <UNDEFINED> instruction: 0xffff5fef
2000e5a4:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
2000e5a8:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
2000e5ac:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
2000e5b0:	ffff502f 			; <UNDEFINED> instruction: 0xffff502f
2000e5b4:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
2000e5b8:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
2000e5bc:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
2000e5c0:	ffff502f 			; <UNDEFINED> instruction: 0xffff502f
2000e5c4:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
2000e5c8:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
2000e5cc:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
2000e5d0:	ffff5fef 			; <UNDEFINED> instruction: 0xffff5fef
2000e5d4:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
2000e5d8:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
2000e5dc:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
2000e5e0:	ffff50ef 			; <UNDEFINED> instruction: 0xffff50ef
2000e5e4:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
2000e5e8:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
2000e5ec:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
2000e5f0:	ec0d5fef 	stc	15, cr5, [sp], {239}	; 0xef
2000e5f4:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
2000e5f8:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
2000e5fc:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
2000e600:	f003502f 			; <UNDEFINED> instruction: 0xf003502f
2000e604:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
2000e608:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
2000e60c:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
2000e610:	d3fb502f 	mvnsle	r5, #47	; 0x2f
2000e614:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
2000e618:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
2000e61c:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
2000e620:	d00b5fef 	andle	r5, fp, pc, ror #31
2000e624:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
2000e628:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
2000e62c:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
2000e630:	d00b50ef 	andle	r5, fp, pc, ror #1
2000e634:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
2000e638:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
2000e63c:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
2000e640:	d00b5fef 	andle	r5, fp, pc, ror #31
2000e644:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
2000e648:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
2000e64c:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
2000e650:	d00b502f 	andle	r5, fp, pc, lsr #32
2000e654:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
2000e658:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
2000e65c:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
2000e660:	d00b502f 	andle	r5, fp, pc, lsr #32
2000e664:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
2000e668:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
2000e66c:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
2000e670:	d00b5fef 	andle	r5, fp, pc, ror #31
2000e674:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
2000e678:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
2000e67c:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
2000e680:	d00b50ef 	andle	r5, fp, pc, ror #1
2000e684:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
2000e688:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
2000e68c:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
2000e690:	d00b5eef 	andle	r5, fp, pc, ror #29
2000e694:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
2000e698:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
2000e69c:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
2000e6a0:	d00b502f 	andle	r5, fp, pc, lsr #32
2000e6a4:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
2000e6a8:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
2000e6ac:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
2000e6b0:	d00b502f 	andle	r5, fp, pc, lsr #32
2000e6b4:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
2000e6b8:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
2000e6bc:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
2000e6c0:	d0035fef 	andle	r5, r3, pc, ror #31
2000e6c4:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
2000e6c8:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
2000e6cc:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
2000e6d0:	cffd50ef 	svcgt	0x00fd50ef
2000e6d4:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
2000e6d8:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
2000e6dc:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
2000e6e0:	e03f5fef 	eors	r5, pc, pc, ror #31
2000e6e4:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
2000e6e8:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
2000e6ec:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
2000e6f0:	ffff502f 			; <UNDEFINED> instruction: 0xffff502f
2000e6f4:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
2000e6f8:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
2000e6fc:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
2000e700:	ffff502f 			; <UNDEFINED> instruction: 0xffff502f
2000e704:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
2000e708:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
2000e70c:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
2000e710:	ffff5fef 			; <UNDEFINED> instruction: 0xffff5fef
2000e714:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
2000e718:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
2000e71c:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
2000e720:	ffff50ef 			; <UNDEFINED> instruction: 0xffff50ef
2000e724:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
2000e728:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
2000e72c:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
2000e730:	ffff5fef 			; <UNDEFINED> instruction: 0xffff5fef
2000e734:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
2000e738:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
2000e73c:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
2000e740:	ffff7e6f 			; <UNDEFINED> instruction: 0xffff7e6f
2000e744:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
2000e748:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
2000e74c:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
2000e750:	ffff7e6f 			; <UNDEFINED> instruction: 0xffff7e6f
2000e754:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
2000e758:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
2000e75c:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
2000e760:	ffff7e7f 			; <UNDEFINED> instruction: 0xffff7e7f
2000e764:	f7fbfdfe 			; <UNDEFINED> instruction: 0xf7fbfdfe
2000e768:	7fbfdfef 	svcvc	0x00bfdfef
2000e76c:	fbfdfeff 	blx	1ff8e372 <startup-0x71c8e>
2000e770:	bfbfeff7 	svclt	0x00bfeff7
2000e774:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
2000e778:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
2000e77c:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
2000e780:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
2000e784:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
2000e788:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
2000e78c:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
2000e790:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
2000e794:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
2000e798:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
2000e79c:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
2000e7a0:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
2000e7a4:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
2000e7a8:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
2000e7ac:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
2000e7b0:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
2000e7b4:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
2000e7b8:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
2000e7bc:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
2000e7c0:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
2000e7c4:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
2000e7c8:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
2000e7cc:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
2000e7d0:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
2000e7d4:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
2000e7d8:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
2000e7dc:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
2000e7e0:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
2000e7e4:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
2000e7e8:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
2000e7ec:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
2000e7f0:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff

2000e7f4 <indoors2_gray_bits>:
	...
2000e854:	00001110 	andeq	r1, r0, r0, lsl r1
	...
2000e864:	00001090 	muleq	r0, r0, r0
	...
2000e894:	00000390 	muleq	r0, r0, r3
	...
2000e8a4:	00001340 	andeq	r1, r0, r0, asr #6
	...
2000e8b4:	00000830 	andeq	r0, r0, r0, lsr r8
	...
2000e944:	08040000 	stmdaeq	r4, {}	; <UNPREDICTABLE>
2000e948:	80402010 	subhi	r2, r0, r0, lsl r0
2000e94c:	04020100 	streq	r0, [r2], #-256	; 0xffffff00
2000e950:	00008000 	andeq	r8, r0, r0
	...
2000e960:	01000000 	mrseq	r0, (UNDEF: 0)
	...
2000e970:	01000000 	mrseq	r0, (UNDEF: 0)
	...
2000e980:	01000000 	mrseq	r0, (UNDEF: 0)
2000e984:	fffff000 			; <UNDEFINED> instruction: 0xfffff000
2000e988:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
2000e98c:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
2000e990:	01ff8007 	mvnseq	r8, r7
	...
2000e9a0:	00008000 	andeq	r8, r0, r0
	...
2000e9b0:	00008180 	andeq	r8, r0, r0, lsl #3
	...
2000e9c0:	00008180 	andeq	r8, r0, r0, lsl #3
	...
2000e9d0:	00008000 	andeq	r8, r0, r0
	...
2000e9e0:	00008000 	andeq	r8, r0, r0
	...
2000e9f0:	00008000 	andeq	r8, r0, r0
	...
2000ea00:	00008180 	andeq	r8, r0, r0, lsl #3
	...
2000ea10:	20008180 	andcs	r8, r0, r0, lsl #3
	...
2000ea20:	20808000 	addcs	r8, r0, r0
	...
2000ea30:	20c08100 	sbccs	r8, r0, r0, lsl #2
	...
2000ea40:	21e08000 	mvncs	r8, r0
	...
2000ea50:	2bf08180 	blcs	1fc2f058 <startup-0x3d0fa8>
	...
2000ea60:	25c08180 	strbcs	r8, [r0, #384]	; 0x180
	...
2000ea70:	29e08000 	stmibcs	r0!, {pc}^
	...
2000ea80:	2bc08100 	blcs	1f02ee88 <startup-0xfd1178>
	...
2000ea90:	20c08110 	sbccs	r8, r0, r0, lsl r1
	...
2000eaa0:	28e0a190 	stmiacs	r0!, {r4, r7, r8, sp, pc}^
	...
2000eab0:	2bf08180 	blcs	1fc2f0b8 <startup-0x3d0f48>
	...
2000eac0:	28008000 	stmdacs	r0, {pc}
	...
2000ead0:	3000a010 	andcc	sl, r0, r0, lsl r0
	...
2000eae0:	1fc0a000 	svcne	0x00c0a000
	...
2000eaf0:	0000a180 	andeq	sl, r0, r0, lsl #3
	...
2000eb00:	00008190 	muleq	r0, r0, r1
	...
2000eb10:	00008010 	andeq	r8, r0, r0, lsl r0
	...
2000eb20:	00008110 	andeq	r8, r0, r0, lsl r1
	...
2000eb30:	0000a010 	andeq	sl, r0, r0, lsl r0
	...
2000eb40:	00008190 	muleq	r0, r0, r1
	...
2000eb50:	00008190 	muleq	r0, r0, r1
	...
2000eb60:	00008180 	andeq	r8, r0, r0, lsl #3
2000eb64:	08040201 	stmdaeq	r4, {r0, r9}
2000eb68:	80402010 	subhi	r2, r0, r0, lsl r0
2000eb6c:	04020100 	streq	r0, [r2], #-256	; 0xffffff00
2000eb70:	40401008 	submi	r1, r0, r8
	...

2000ebf4 <indoors2_light_bits>:
	...
2000ec64:	00000300 	andeq	r0, r0, r0, lsl #6
	...
2000ec74:	00001110 	andeq	r1, r0, r0, lsl r1
	...
2000ec84:	00000100 	andeq	r0, r0, r0, lsl #2
	...
2000ec94:	00001000 	andeq	r1, r0, r0
	...
2000eca4:	00000cb0 			; <UNDEFINED> instruction: 0x00000cb0
	...
2000ecb4:	00001000 	andeq	r1, r0, r0
	...
2000ed60:	00002010 	andeq	r2, r0, r0, lsl r0
	...
2000ed70:	00002010 	andeq	r2, r0, r0, lsl r0
	...
2000ed80:	00002010 	andeq	r2, r0, r0, lsl r0
	...
2000ed90:	00002f10 	andeq	r2, r0, r0, lsl pc
	...
2000eda0:	00002010 	andeq	r2, r0, r0, lsl r0
	...
2000edb0:	00002010 	andeq	r2, r0, r0, lsl r0
	...
2000edc0:	00002010 	andeq	r2, r0, r0, lsl r0
	...
2000edd0:	00002010 	andeq	r2, r0, r0, lsl r0
	...
2000ede0:	00002f10 	andeq	r2, r0, r0, lsl pc
	...
2000edf0:	00002010 	andeq	r2, r0, r0, lsl r0
	...
2000ee00:	00002010 	andeq	r2, r0, r0, lsl r0
	...
2000ee10:	00002010 	andeq	r2, r0, r0, lsl r0
	...
2000ee20:	03702010 	cmneq	r0, #16
	...
2000ee30:	03302e10 	teqeq	r0, #16, 28	; 0x100
	...
2000ee40:	02102010 	andseq	r2, r0, #16
	...
2000ee50:	00002010 	andeq	r2, r0, r0, lsl r0
	...
2000ee60:	02302010 	eorseq	r2, r0, #16
	...
2000ee70:	02102010 	andseq	r2, r0, #16
	...
2000ee80:	00302e10 	eorseq	r2, r0, r0, lsl lr
	...
2000ee90:	03302000 	teqeq	r0, #0
	...
2000eea0:	03100000 	tsteq	r0, #0
	...
2000eeb0:	00002010 	andeq	r2, r0, r0, lsl r0
	...
2000eec0:	00002010 	andeq	r2, r0, r0, lsl r0
	...
2000eed0:	00000f00 	andeq	r0, r0, r0, lsl #30
	...
2000eee0:	00000010 	andeq	r0, r0, r0, lsl r0
	...
2000eef0:	00000010 	andeq	r0, r0, r0, lsl r0
	...
2000ef00:	00002000 	andeq	r2, r0, r0
	...
2000ef10:	00002000 	andeq	r2, r0, r0
	...
2000ef20:	00002e00 	andeq	r2, r0, r0, lsl #28
	...

2000eff4 <firstTime.4040>:
2000eff4:	00000001 	andeq	r0, r0, r1

2000eff8 <trophy_black_bits>:
2000eff8:	00d40028 	sbcseq	r0, r4, r8, lsr #32
2000effc:	03fe01aa 	mvnseq	r0, #-2147483606	; 0x8000002a
2000f000:	02220401 	eoreq	r0, r2, #16777216	; 0x1000000
2000f004:	02220232 	eoreq	r0, r2, #536870915	; 0x20000003
2000f008:	00880124 	addeq	r0, r8, r4, lsr #2
2000f00c:	00500088 	subseq	r0, r0, r8, lsl #1
2000f010:	00880088 	addeq	r0, r8, r8, lsl #1
2000f014:	020201fc 	andeq	r0, r2, #252, 2	; 0x3f
2000f018:	00000202 	andeq	r0, r0, r2, lsl #4

2000f01c <trophy_gray_bits>:
	...
2000f024:	01000300 	mrseq	r0, LR_irq
2000f028:	01000100 	mrseq	r0, (UNDEF: 16)
2000f02c:	00000080 	andeq	r0, r0, r0, lsl #1
2000f030:	00000000 	andeq	r0, r0, r0
2000f034:	00400040 	subeq	r0, r0, r0, asr #32
2000f038:	01f00000 	mvnseq	r0, r0
2000f03c:	000001e8 	andeq	r0, r0, r8, ror #3

2000f040 <trophy_light_bits>:
2000f040:	00000000 	andeq	r0, r0, r0
2000f044:	00000050 	andeq	r0, r0, r0, asr r0
2000f048:	008800ec 	addeq	r0, r8, ip, ror #1
2000f04c:	008800c0 	addeq	r0, r8, r0, asr #1
2000f050:	00600048 	rsbeq	r0, r0, r8, asr #32
2000f054:	00200060 	eoreq	r0, r0, r0, rrx
2000f058:	00200020 	eoreq	r0, r0, r0, lsr #32
2000f05c:	000c0000 	andeq	r0, ip, r0
2000f060:	00000014 	andeq	r0, r0, r4, lsl r0

2000f064 <firstTime.4040>:
2000f064:	00000001 	andeq	r0, r0, r1

2000f068 <roger_black_bits>:
2000f068:	00000000 	andeq	r0, r0, r0
2000f06c:	0e000000 	cdpeq	0, 0, cr0, cr0, cr0, {0}
	...
2000f07c:	8fc00000 	svchi	0x00c00000
2000f080:	000000ff 	strdeq	r0, [r0], -pc	; <UNPREDICTABLE>
	...
2000f08c:	fff00000 			; <UNDEFINED> instruction: 0xfff00000	; IMB
2000f090:	000003ff 	strdeq	r0, [r0], -pc	; <UNPREDICTABLE>
	...
2000f09c:	ffbe0000 			; <UNDEFINED> instruction: 0xffbe0000
2000f0a0:	00000fff 	strdeq	r0, [r0], -pc	; <UNPREDICTABLE>
	...
2000f0ac:	c3fe0000 	mvnsgt	r0, #0
2000f0b0:	00001fff 	strdeq	r1, [r0], -pc	; <UNPREDICTABLE>
	...
2000f0bc:	00cf0000 	sbceq	r0, pc, r0
2000f0c0:	00002fff 	strdeq	r2, [r0], -pc	; <UNPREDICTABLE>
	...
2000f0cc:	800f0000 	andhi	r0, pc, r0
2000f0d0:	00007fff 	strdeq	r7, [r0], -pc	; <UNPREDICTABLE>
	...
2000f0dc:	80000000 	andhi	r0, r0, r0
2000f0e0:	00007fff 	strdeq	r7, [r0], -pc	; <UNPREDICTABLE>
	...
2000f0ec:	c0000000 	andgt	r0, r0, r0
2000f0f0:	00006fff 	strdeq	r6, [r0], -pc	; <UNPREDICTABLE>
	...
2000f100:	00007ffc 	strdeq	r7, [r0], -ip
	...
2000f110:	0000fff0 	strdeq	pc, [r0], -r0
	...
2000f120:	0001ffd0 	ldrdeq	pc, [r1], -r0
	...
2000f130:	0001ffd0 	ldrdeq	pc, [r1], -r0
	...
2000f140:	0003fff2 	strdeq	pc, [r3], -r2
2000f144:	07000000 	streq	r0, [r0, -r0]
	...
2000f150:	00037fa4 	andeq	r7, r3, r4, lsr #31
2000f154:	07800000 	streq	r0, [r0, r0]
2000f158:	00078f00 	andeq	r8, r7, r0, lsl #30
2000f15c:	00000000 	andeq	r0, r0, r0
2000f160:	00073f08 	andeq	r3, r7, r8, lsl #30
2000f164:	07800000 	streq	r0, [r0, r0]
2000f168:	00078f00 	andeq	r8, r7, r0, lsl #30
2000f16c:	00000000 	andeq	r0, r0, r0
2000f170:	000e0f00 	andeq	r0, lr, r0, lsl #30
2000f174:	038000c0 	orreq	r0, r0, #192	; 0xc0
2000f178:	00038e00 	andeq	r8, r3, r0, lsl #28
2000f17c:	00000000 	andeq	r0, r0, r0
2000f180:	000c0700 	andeq	r0, ip, r0, lsl #14
2000f184:	038001e0 	orreq	r0, r0, #224, 2	; 0x38
2000f188:	0003de00 	andeq	sp, r3, r0, lsl #28
2000f18c:	00000000 	andeq	r0, r0, r0
2000f190:	000c0000 	andeq	r0, ip, r0
2000f194:	038000c0 	orreq	r0, r0, #192	; 0xc0
2000f198:	38e1fc00 	stmiacc	r1!, {sl, fp, ip, sp, lr, pc}^
2000f19c:	00000006 	andeq	r0, r0, r6
2000f1a0:	0e0c0000 	cdpeq	0, 0, cr0, cr12, cr0, {0}
2000f1a4:	0381d80e 	orreq	sp, r1, #917504	; 0xe0000
2000f1a8:	79f0f800 	ldmibvc	r0!, {fp, ip, sp, lr, pc}^
2000f1ac:	00000007 	andeq	r0, r0, r7
2000f1b0:	1e040000 	cdpne	0, 0, cr0, cr4, cr0, {0}
2000f1b4:	0383f9cf 	orreq	pc, r3, #3391488	; 0x33c000
2000f1b8:	73f87000 	mvnsvc	r7, #0
2000f1bc:	00000007 	andeq	r0, r0, r7
2000f1c0:	5c000000 	stcpl	0, cr0, [r0], {-0}
2000f1c4:	0387f9e7 	orreq	pc, r7, #3784704	; 0x39c000
2000f1c8:	73b87000 			; <UNDEFINED> instruction: 0x73b87000
2000f1cc:	00000007 	andeq	r0, r0, r7
2000f1d0:	fc000000 	stc2	0, cr0, [r0], {-0}
2000f1d4:	018771e7 	orreq	r7, r7, r7, ror #3
2000f1d8:	73b87000 			; <UNDEFINED> instruction: 0x73b87000
2000f1dc:	00000007 	andeq	r0, r0, r7
2000f1e0:	fc000000 	stc2	0, cr0, [r0], {-0}
2000f1e4:	000771c7 	andeq	r7, r7, r7, asr #3
2000f1e8:	73b87000 			; <UNDEFINED> instruction: 0x73b87000
2000f1ec:	00000007 	andeq	r0, r0, r7
2000f1f0:	fc000000 	stc2	0, cr0, [r0], {-0}
2000f1f4:	000771c7 	andeq	r7, r7, r7, asr #3
2000f1f8:	f3f87000 	vrev64.32	d23, d0
2000f1fc:	0000000f 	andeq	r0, r0, pc
2000f200:	b8000000 	stmdalt	r0, {}	; <UNPREDICTABLE>
2000f204:	018771c3 	orreq	r7, r7, r3, asr #3
2000f208:	e1f0f800 	mvns	pc, r0, lsl #16
2000f20c:	0000000f 	andeq	r0, r0, pc
2000f210:	b8000000 	stmdalt	r0, {}	; <UNPREDICTABLE>
2000f214:	03cf73c3 	biceq	r7, pc, #201326595	; 0xc000003
2000f218:	c0e0f800 	rscgt	pc, r0, r0, lsl #16
2000f21c:	0000000d 	andeq	r0, r0, sp
2000f220:	10000000 	andne	r0, r0, r0
2000f224:	018e3381 	orreq	r3, lr, r1, lsl #7
	...
2000f2a0:	00000780 	andeq	r0, r0, r0, lsl #15
	...
2000f2b0:	00000020 	andeq	r0, r0, r0, lsr #32
	...
2000f2c0:	00000020 	andeq	r0, r0, r0, lsr #32
	...
2000f2dc:	00000c00 	andeq	r0, r0, r0, lsl #24
	...
2000f2ec:	00003f80 	andeq	r3, r0, r0, lsl #31
	...
2000f2fc:	00003f80 	andeq	r3, r0, r0, lsl #31
	...
2000f308:	c0000000 	andgt	r0, r0, r0
2000f30c:	00003fff 	strdeq	r3, [r0], -pc	; <UNPREDICTABLE>
	...
2000f318:	c0000000 	andgt	r0, r0, r0
2000f31c:	00003fff 	strdeq	r3, [r0], -pc	; <UNPREDICTABLE>
	...
2000f328:	f0000000 			; <UNDEFINED> instruction: 0xf0000000
2000f32c:	00003fff 	strdeq	r3, [r0], -pc	; <UNPREDICTABLE>
	...
2000f338:	f0000000 			; <UNDEFINED> instruction: 0xf0000000
2000f33c:	00003fff 	strdeq	r3, [r0], -pc	; <UNPREDICTABLE>
	...
2000f348:	fc000000 	stc2	0, cr0, [r0], {-0}
2000f34c:	00003fff 	strdeq	r3, [r0], -pc	; <UNPREDICTABLE>
	...
2000f358:	ff000000 			; <UNDEFINED> instruction: 0xff000000
2000f35c:	00003fff 	strdeq	r3, [r0], -pc	; <UNPREDICTABLE>
	...
2000f368:	ffc00000 			; <UNDEFINED> instruction: 0xffc00000
2000f36c:	00003fff 	strdeq	r3, [r0], -pc	; <UNPREDICTABLE>
2000f370:	003fe000 	eorseq	lr, pc, r0
2000f374:	00000000 	andeq	r0, r0, r0
2000f378:	ffe00000 			; <UNDEFINED> instruction: 0xffe00000
2000f37c:	00003fff 	strdeq	r3, [r0], -pc	; <UNPREDICTABLE>
2000f380:	00ffe000 	rscseq	lr, pc, r0
2000f384:	00000000 	andeq	r0, r0, r0
2000f388:	fff00000 			; <UNDEFINED> instruction: 0xfff00000	; IMB
2000f38c:	00003fff 	strdeq	r3, [r0], -pc	; <UNPREDICTABLE>
2000f390:	03ffe000 	mvnseq	lr, #0
2000f394:	00000000 	andeq	r0, r0, r0
2000f398:	fffc0000 			; <UNDEFINED> instruction: 0xfffc0000
2000f39c:	00003fff 	strdeq	r3, [r0], -pc	; <UNPREDICTABLE>
2000f3a0:	0ffff000 	svceq	0x00fff000
2000f3a4:	00000000 	andeq	r0, r0, r0
2000f3a8:	fffe0000 			; <UNDEFINED> instruction: 0xfffe0000
2000f3ac:	00007fff 	strdeq	r7, [r0], -pc	; <UNPREDICTABLE>
2000f3b0:	3ffff000 	svccc	0x00fff000
2000f3b4:	00000000 	andeq	r0, r0, r0
2000f3b8:	ffff0000 			; <UNDEFINED> instruction: 0xffff0000
2000f3bc:	00007fff 	strdeq	r7, [r0], -pc	; <UNPREDICTABLE>
2000f3c0:	fffff038 			; <UNDEFINED> instruction: 0xfffff038
2000f3c4:	00000000 	andeq	r0, r0, r0
2000f3c8:	ffffc000 			; <UNDEFINED> instruction: 0xffffc000
2000f3cc:	00007fff 	strdeq	r7, [r0], -pc	; <UNPREDICTABLE>
2000f3d0:	fffff800 	vcmla.f32	d31, d15, d0[0], #270
2000f3d4:	00000001 	andeq	r0, r0, r1
2000f3d8:	ffffc000 			; <UNDEFINED> instruction: 0xffffc000
2000f3dc:	00007fff 	strdeq	r7, [r0], -pc	; <UNPREDICTABLE>
2000f3e0:	fffffc00 			; <UNDEFINED> instruction: 0xfffffc00
2000f3e4:	00000001 	andeq	r0, r0, r1
2000f3e8:	fffff000 			; <UNDEFINED> instruction: 0xfffff000
2000f3ec:	00007fff 	strdeq	r7, [r0], -pc	; <UNPREDICTABLE>
2000f3f0:	fffffe00 			; <UNDEFINED> instruction: 0xfffffe00
2000f3f4:	0000007f 	andeq	r0, r0, pc, ror r0
2000f3f8:	fffff000 			; <UNDEFINED> instruction: 0xfffff000
2000f3fc:	00003fff 	strdeq	r3, [r0], -pc	; <UNPREDICTABLE>
2000f400:	ffffff00 			; <UNDEFINED> instruction: 0xffffff00
2000f404:	0000007f 	andeq	r0, r0, pc, ror r0
2000f408:	fffff000 			; <UNDEFINED> instruction: 0xfffff000
2000f40c:	00003fff 	strdeq	r3, [r0], -pc	; <UNPREDICTABLE>
2000f410:	ffffff00 			; <UNDEFINED> instruction: 0xffffff00
2000f414:	0000007f 	andeq	r0, r0, pc, ror r0
2000f418:	fffff000 			; <UNDEFINED> instruction: 0xfffff000
2000f41c:	00003fff 	strdeq	r3, [r0], -pc	; <UNPREDICTABLE>
2000f420:	ffffff00 			; <UNDEFINED> instruction: 0xffffff00
2000f424:	000000ff 	strdeq	r0, [r0], -pc	; <UNPREDICTABLE>
2000f428:	fffff000 			; <UNDEFINED> instruction: 0xfffff000
2000f42c:	00003fff 	strdeq	r3, [r0], -pc	; <UNPREDICTABLE>
2000f430:	ffffff20 			; <UNDEFINED> instruction: 0xffffff20
2000f434:	000000ff 	strdeq	r0, [r0], -pc	; <UNPREDICTABLE>
2000f438:	fffff800 	vcmla.f32	d31, d15, d0[0], #270
2000f43c:	00007fff 	strdeq	r7, [r0], -pc	; <UNPREDICTABLE>
2000f440:	ffffff00 			; <UNDEFINED> instruction: 0xffffff00
2000f444:	000001ff 	strdeq	r0, [r0], -pc	; <UNPREDICTABLE>
2000f448:	fffff800 	vcmla.f32	d31, d15, d0[0], #270
2000f44c:	00407fff 	strdeq	r7, [r0], #-255	; 0xffffff01
2000f450:	ffffff00 			; <UNDEFINED> instruction: 0xffffff00
2000f454:	000001ff 	strdeq	r0, [r0], -pc	; <UNPREDICTABLE>
2000f458:	fffff800 	vcmla.f32	d31, d15, d0[0], #270
2000f45c:	00007fff 	strdeq	r7, [r0], -pc	; <UNPREDICTABLE>
2000f460:	ffffff00 			; <UNDEFINED> instruction: 0xffffff00
2000f464:	000001ff 	strdeq	r0, [r0], -pc	; <UNPREDICTABLE>

2000f468 <roger_gray_bits>:
2000f468:	00000000 	andeq	r0, r0, r0
2000f46c:	f0000000 			; <UNDEFINED> instruction: 0xf0000000
2000f470:	0000003f 	andeq	r0, r0, pc, lsr r0
	...
2000f47c:	70000000 	andvc	r0, r0, r0
	...
2000f49c:	00400000 	subeq	r0, r0, r0
	...
2000f4ac:	3c000000 	stccc	0, cr0, [r0], {-0}
	...
2000f4bc:	ff300000 			; <UNDEFINED> instruction: 0xff300000
2000f4c0:	00001000 	andeq	r1, r0, r0
	...
2000f4cc:	7ff00000 	svcvc	0x00f00000	; IMB
	...
2000f4dc:	7fff8000 	svcvc	0x00ff8000
2000f4e0:	00008000 	andeq	r8, r0, r0
	...
2000f4ec:	3effc000 	cdpcc	0, 15, cr12, cr15, cr0, {0}
2000f4f0:	00009000 	andeq	r9, r0, r0
	...
2000f4fc:	ffff8000 			; <UNDEFINED> instruction: 0xffff8000
2000f500:	00038003 	andeq	r8, r3, r3
	...
2000f50c:	fff7c000 			; <UNDEFINED> instruction: 0xfff7c000
2000f510:	0003000f 	andeq	r0, r3, pc
	...
2000f51c:	fcf3c000 	ldc2l	0, cr12, [r3]
2000f520:	0002002f 	andeq	r0, r2, pc, lsr #32
	...
2000f52c:	fc71c000 	ldc2l	0, cr12, [r1], #-0
2000f530:	0006002f 	andeq	r0, r6, pc, lsr #32
	...
2000f53c:	f031c000 			; <UNDEFINED> instruction: 0xf031c000
2000f540:	0004000d 	andeq	r0, r4, sp
	...
2000f54c:	e003c000 	and	ip, r3, r0
2000f550:	000c805b 	andeq	r8, ip, fp, asr r0
	...
2000f55c:	0003e000 	andeq	lr, r3, r0
2000f560:	0008c0f7 	strdeq	ip, [r8], -r7
	...
2000f56c:	0001e000 	andeq	lr, r1, r0
2000f570:	0001f0fc 	strdeq	pc, [r1], -ip
	...
2000f57c:	0001e000 	andeq	lr, r1, r0
2000f580:	0003f8f0 	strdeq	pc, [r3], -r0
	...
2000f58c:	0001e000 	andeq	lr, r1, r0
2000f590:	0003ffe0 	andeq	pc, r3, r0, ror #31
	...
2000f59c:	0000e000 	andeq	lr, r0, r0
2000f5a0:	0003ff80 	andeq	pc, r3, r0, lsl #31
	...
2000f5ac:	00006000 	andeq	r6, r0, r0
2000f5b0:	000bff00 	andeq	pc, fp, r0, lsl #30
	...
2000f5bc:	00006000 	andeq	r6, r0, r0
2000f5c0:	000ffe00 	andeq	pc, pc, r0, lsl #28
	...
2000f5cc:	00002000 	andeq	r2, r0, r0
2000f5d0:	000ff000 	andeq	pc, pc, r0
	...
2000f5dc:	00002000 	andeq	r2, r0, r0
2000f5e0:	000ff800 	andeq	pc, pc, r0, lsl #16
	...
2000f5f0:	0007f800 	andeq	pc, r7, r0, lsl #16
	...
2000f600:	0007f800 	andeq	pc, r7, r0, lsl #16
	...
2000f610:	0007f800 	andeq	pc, r7, r0, lsl #16
	...
2000f620:	0007f800 	andeq	pc, r7, r0, lsl #16
	...
2000f630:	0007f800 	andeq	pc, r7, r0, lsl #16
	...
2000f640:	0007f000 	andeq	pc, r7, r0
	...
2000f650:	0007f800 	andeq	pc, r7, r0, lsl #16
	...
2000f660:	0003fc00 	andeq	pc, r3, r0, lsl #24
	...
2000f670:	0003fc00 	andeq	pc, r3, r0, lsl #24
	...
2000f67c:	3e000000 	cdpcc	0, 0, cr0, cr0, cr0, {0}
2000f680:	0003fc00 	andeq	pc, r3, r0, lsl #24
	...
2000f68c:	7c000800 	stcvc	8, cr0, [r0], {-0}
2000f690:	0003ff80 	andeq	pc, r3, r0, lsl #31
	...
2000f69c:	60000800 	andvs	r0, r0, r0, lsl #16
2000f6a0:	0003f870 	andeq	pc, r3, r0, ror r8	; <UNPREDICTABLE>
	...
2000f6ac:	70000800 	andvc	r0, r0, r0, lsl #16
2000f6b0:	0003ffd0 	ldrdeq	pc, [r3], -r0
	...
2000f6bc:	00000800 	andeq	r0, r0, r0, lsl #16
2000f6c0:	0003ffd0 	ldrdeq	pc, [r3], -r0
	...
2000f6d0:	0003fff0 	strdeq	pc, [r3], -r0
	...
2000f6dc:	00003000 	andeq	r3, r0, r0
2000f6e0:	0003fff0 	strdeq	pc, [r3], -r0
	...
2000f6f0:	0003fff0 	strdeq	pc, [r3], -r0
	...
2000f700:	0003f3f0 	strdeq	pc, [r3], -r0
	...
2000f710:	0003fff0 	strdeq	pc, [r3], -r0
	...
2000f720:	0003fee0 	andeq	pc, r3, r0, ror #29
	...
2000f730:	0001ffe0 	andeq	pc, r1, r0, ror #31
	...
2000f740:	0001ffe0 	andeq	pc, r1, r0, ror #31
	...
2000f750:	0002fff0 	strdeq	pc, [r2], -r0
	...
2000f760:	0003fff8 	strdeq	pc, [r3], -r8
	...
2000f770:	00001ffc 	strdeq	r1, [r0], -ip
	...
2000f780:	00001ff8 	strdeq	r1, [r0], -r8
	...
2000f790:	00001ff0 	strdeq	r1, [r0], -r0
	...
2000f7a0:	00000ff8 	strdeq	r0, [r0], -r8
	...
2000f7ac:	40000000 	andmi	r0, r0, r0
2000f7b0:	00000ff8 	strdeq	r0, [r0], -r8
	...
2000f7bc:	c0000000 	andgt	r0, r0, r0
2000f7c0:	00000fc7 	andeq	r0, r0, r7, asr #31
	...
2000f7d0:	000007fe 	strdeq	r0, [r0], -lr
	...
2000f7e0:	000003ff 	strdeq	r0, [r0], -pc	; <UNPREDICTABLE>
	...
2000f7f0:	000001ff 	strdeq	r0, [r0], -pc	; <UNPREDICTABLE>
	...
2000f7fc:	80000000 	andhi	r0, r0, r0
2000f800:	000000ff 	strdeq	r0, [r0], -pc	; <UNPREDICTABLE>
	...
2000f810:	000000ff 	strdeq	r0, [r0], -pc	; <UNPREDICTABLE>
	...
2000f81c:	00004000 	andeq	r4, r0, r0
2000f820:	000000bf 	strheq	r0, [r0], -pc	; <UNPREDICTABLE>
	...
2000f82c:	00304000 	eorseq	r4, r0, r0
2000f830:	000000df 	ldrdeq	r0, [r0], -pc	; <UNPREDICTABLE>
	...
2000f83c:	80e00000 	rschi	r0, r0, r0
2000f840:	000000bf 	strheq	r0, [r0], -pc	; <UNPREDICTABLE>
	...
2000f84c:	f0a08000 			; <UNDEFINED> instruction: 0xf0a08000
2000f850:	000000bf 	strheq	r0, [r0], -pc	; <UNPREDICTABLE>
	...
2000f85c:	f3c08000 	vaddl.u8	q12, d0, d0
2000f860:	000000bf 	strheq	r0, [r0], -pc	; <UNPREDICTABLE>
2000f864:	00000000 	andeq	r0, r0, r0

2000f868 <roger_light_bits>:
	...
2000f8ec:	01000000 	mrseq	r0, (UNDEF: 0)
	...
2000f8fc:	00004000 	andeq	r4, r0, r0
	...
2000f90c:	00080000 	andeq	r0, r8, r0
	...
2000f91c:	030c0000 	movweq	r0, #49152	; 0xc000
	...
2000f92c:	038e0000 	orreq	r0, lr, #0
	...
2000f93c:	0fce0000 	svceq	0x00ce0000
	...
2000f94c:	1ffc0000 	svcne	0x00fc0000
	...
2000f95c:	ff9c0000 			; <UNDEFINED> instruction: 0xff9c0000
2000f960:	00000000 	andeq	r0, r0, r0
2000f964:	00400000 	subeq	r0, r0, r0
2000f968:	00081000 	andeq	r1, r8, r0
2000f96c:	008e0000 	addeq	r0, lr, r0
2000f970:	00000003 	andeq	r0, r0, r3
2000f974:	00400000 	subeq	r0, r0, r0
2000f978:	000c1000 	andeq	r1, ip, r0
2000f97c:	008e0000 	addeq	r0, lr, r0
2000f980:	0000000e 	andeq	r0, r0, lr
2000f984:	00400000 	subeq	r0, r0, r0
2000f988:	00042000 	andeq	r2, r4, r0
2000f98c:	00c60000 	sbceq	r0, r6, r0
2000f990:	00000011 	andeq	r0, r0, r1, lsl r0
2000f994:	00400030 	subeq	r0, r0, r0, lsr r0
2000f998:	00060000 	andeq	r0, r6, r0
2000f99c:	00e70000 	rsceq	r0, r7, r0
2000f9a0:	00000070 	andeq	r0, r0, r0, ror r0
2000f9a4:	004000e0 	subeq	r0, r0, r0, ror #1
2000f9a8:	82030000 	andhi	r0, r3, #0
2000f9ac:	00838008 	addeq	r8, r3, r8
2000f9b0:	810000f8 	strdhi	r0, [r0, -r8]
2000f9b4:	00400000 	subeq	r0, r0, r0
2000f9b8:	84018000 	strhi	r8, [r1], #-0
2000f9bc:	00038008 	andeq	r8, r3, r8
2000f9c0:	830001f8 	movwhi	r0, #504	; 0x1f8
2000f9c4:	00400410 	subeq	r0, r0, r0, lsl r4
2000f9c8:	84408000 	strbhi	r8, [r0], #-0
2000f9cc:	0007c008 	andeq	ip, r7, r8
2000f9d0:	02000ff0 	andeq	r0, r0, #240, 30	; 0x3c0
2000f9d4:	00408c10 	subeq	r8, r0, r0, lsl ip
2000f9d8:	84408000 	strbhi	r8, [r0], #-0
2000f9dc:	0003c008 	andeq	ip, r3, r8
2000f9e0:	020007e0 	andeq	r0, r0, #224, 14	; 0x3800000
2000f9e4:	01c08830 	biceq	r8, r0, r0, lsr r8
2000f9e8:	84408000 	strbhi	r8, [r0], #-0
2000f9ec:	0081e018 	addeq	lr, r1, r8, lsl r0
2000f9f0:	020007f8 	andeq	r0, r0, #248, 14	; 0x3e00000
2000f9f4:	00008820 	andeq	r8, r0, r0, lsr #16
2000f9f8:	04018000 	streq	r8, [r1], #-0
2000f9fc:	0021e010 	eoreq	lr, r1, r0, lsl r0
2000fa00:	460007fc 			; <UNDEFINED> instruction: 0x460007fc
2000fa04:	00008820 	andeq	r8, r0, r0, lsr #16
2000fa08:	06010000 	streq	r0, [r1], -r0
2000fa0c:	0001e010 	andeq	lr, r1, r0, lsl r0
2000fa10:	440007f8 	strmi	r0, [r0], #-2040	; 0xfffff808
2000fa14:	00008820 	andeq	r8, r0, r0, lsr #16
2000fa18:	03010000 	movweq	r0, #4096	; 0x1000
2000fa1c:	0000e012 	andeq	lr, r0, r2, lsl r0
2000fa20:	ec0007dd 	stc	7, cr0, [r0], {221}	; 0xdd
2000fa24:	00418860 	subeq	r8, r1, r0, ror #16
2000fa28:	c1e1e000 	mvngt	lr, r0
2000fa2c:	0300e01f 	movweq	lr, #31
2000fa30:	880007ff 	stmdahi	r0, {r0, r1, r2, r3, r4, r5, r6, r7, r8, r9, sl}
2000fa34:	01c719c0 	biceq	r1, r7, r0, asr #19
2000fa38:	00000000 	andeq	r0, r0, r0
2000fa3c:	0f80d000 	svceq	0x0080d000
2000fa40:	00000fd9 	ldrdeq	r0, [r0], -r9
	...
2000fa4c:	3d808000 	stccc	0, cr8, [r0]
2000fa50:	000007d8 	ldrdeq	r0, [r0], -r8
	...
2000fa5c:	ffc08000 			; <UNDEFINED> instruction: 0xffc08000
2000fa60:	000003f8 	strdeq	r0, [r0], -r8
	...
2000fa6c:	f3c18000 	vaddl.u8	q12, d1, d0
2000fa70:	000003fb 	strdeq	r0, [r0], -fp
	...
2000fa7c:	c1e10800 	mvngt	r0, r0, lsl #16
2000fa80:	000003f9 	strdeq	r0, [r0], -r9
	...
2000fa8c:	83c00000 	bichi	r0, r0, #0
2000fa90:	00000059 	andeq	r0, r0, r9, asr r0
	...
2000fa9c:	9d008000 	stcls	0, cr8, [r0, #-0]
2000faa0:	00000008 	andeq	r0, r0, r8
	...
2000faac:	8c014000 	stchi	0, cr4, [r1], {-0}
	...
2000fabc:	7f005000 	svcvc	0x00005000
2000fac0:	00000008 	andeq	r0, r0, r8
	...
2000facc:	3e001000 	cdpcc	0, 0, cr1, cr0, cr0, {0}
2000fad0:	00000008 	andeq	r0, r0, r8
	...
2000fae0:	00000008 	andeq	r0, r0, r8
	...
2000faf0:	00000008 	andeq	r0, r0, r8
	...
2000fafc:	18000000 	stmdane	r0, {}	; <UNPREDICTABLE>
2000fb00:	00000c08 	andeq	r0, r0, r8, lsl #24
	...
2000fb0c:	3c00c000 	stccc	0, cr12, [r0], {-0}
2000fb10:	00000008 	andeq	r0, r0, r8
	...
2000fb1c:	1c000000 	stcne	0, cr0, [r0], {-0}
2000fb20:	00000118 	andeq	r0, r0, r8, lsl r1
	...
2000fb2c:	06008000 	streq	r8, [r0], -r0
2000fb30:	00000018 	andeq	r0, r0, r8, lsl r0
	...
2000fb3c:	0300c000 	movweq	ip, #0
2000fb40:	00000018 	andeq	r0, r0, r8, lsl r0
	...
2000fb4c:	e380c000 	orr	ip, r0, #0
2000fb50:	00010008 	andeq	r0, r1, r8
	...
2000fb5c:	e180c000 	orr	ip, r0, r0
2000fb60:	00000007 	andeq	r0, r0, r7
	...
2000fb6c:	00418000 	subeq	r8, r1, r0
2000fb70:	00000003 	andeq	r0, r0, r3
	...
2000fb7c:	00218000 	eoreq	r8, r1, r0
2000fb80:	00000007 	andeq	r0, r0, r7
	...
2000fb8c:	00130000 	andseq	r0, r3, r0
2000fb90:	0000000f 	andeq	r0, r0, pc
	...
2000fb9c:	87810000 	strhi	r0, [r1, r0]
2000fba0:	00000007 	andeq	r0, r0, r7
	...
2000fbac:	bfc70000 	svclt	0x00c70000
2000fbb0:	00000007 	andeq	r0, r0, r7
	...
2000fbbc:	38e70000 	stmiacc	r7!, {}^	; <UNPREDICTABLE>
	...
2000fbcc:	800e0000 	andhi	r0, lr, r0
2000fbd0:	00000001 	andeq	r0, r0, r1
	...
2000fbdc:	f49c0000 			; <UNDEFINED> instruction: 0xf49c0000
	...
2000fbec:	fff00000 			; <UNDEFINED> instruction: 0xfff00000	; IMB
	...
2000fbfc:	63b80000 			; <UNDEFINED> instruction: 0x63b80000
	...
2000fc0c:	e3704000 	cmn	r0, #0
	...
2000fc1c:	f0700000 			; <UNDEFINED> instruction: 0xf0700000
2000fc20:	00000040 	andeq	r0, r0, r0, asr #32
	...
2000fc2c:	f3c00000 	vaddl.u8	q8, d0, d0
	...
2000fc3c:	7f108000 	svcvc	0x00108000
2000fc40:	00000040 	andeq	r0, r0, r0, asr #32
	...
2000fc4c:	0f100000 	svceq	0x00100000
2000fc50:	00000040 	andeq	r0, r0, r0, asr #32
	...
2000fc5c:	0c280000 	stceq	0, cr0, [r8], #-0
2000fc60:	00000040 	andeq	r0, r0, r0, asr #32
2000fc64:	00000000 	andeq	r0, r0, r0

2000fc68 <firstTime.4040>:
2000fc68:	00000001 	andeq	r0, r0, r1

2000fc6c <game_over_witch1_black_bits>:
2000fc6c:	80000000 	andhi	r0, r0, r0
2000fc70:	fe000001 	cdp2	0, 0, cr0, cr0, cr1, {0}
2000fc74:	0000000f 	andeq	r0, r0, pc
2000fc78:	00000000 	andeq	r0, r0, r0
2000fc7c:	60000000 	andvs	r0, r0, r0
2000fc80:	f8000000 			; <UNDEFINED> instruction: 0xf8000000
2000fc84:	0000001f 	andeq	r0, r0, pc, lsl r0
2000fc88:	00000000 	andeq	r0, r0, r0
2000fc8c:	18000000 	stmdane	r0, {}	; <UNPREDICTABLE>
2000fc90:	30000000 	andcc	r0, r0, r0
2000fc94:	0000003f 	andeq	r0, r0, pc, lsr r0
2000fc98:	00000000 	andeq	r0, r0, r0
2000fc9c:	06000000 	streq	r0, [r0], -r0
2000fca0:	00000000 	andeq	r0, r0, r0
2000fca4:	0000007f 	andeq	r0, r0, pc, ror r0
2000fca8:	00000000 	andeq	r0, r0, r0
2000fcac:	01800000 	orreq	r0, r0, r0
2000fcb0:	00000000 	andeq	r0, r0, r0
2000fcb4:	000001fe 	strdeq	r0, [r0], -lr
2000fcb8:	00000000 	andeq	r0, r0, r0
2000fcbc:	00700000 	rsbseq	r0, r0, r0
2000fcc0:	00000000 	andeq	r0, r0, r0
2000fcc4:	000007ff 	strdeq	r0, [r0], -pc	; <UNPREDICTABLE>
2000fcc8:	00000000 	andeq	r0, r0, r0
2000fccc:	000e0000 	andeq	r0, lr, r0
2000fcd0:	00000060 	andeq	r0, r0, r0, rrx
2000fcd4:	00000fff 	strdeq	r0, [r0], -pc	; <UNPREDICTABLE>
2000fcd8:	00000000 	andeq	r0, r0, r0
2000fcdc:	0001e000 	andeq	lr, r1, r0
2000fce0:	000001f8 	strdeq	r0, [r0], -r8
2000fce4:	00001ffe 	strdeq	r1, [r0], -lr
2000fce8:	00000000 	andeq	r0, r0, r0
2000fcec:	00001c00 	andeq	r1, r0, r0, lsl #24
2000fcf0:	000001ff 	strdeq	r0, [r0], -pc	; <UNPREDICTABLE>
2000fcf4:	00003ffe 	strdeq	r3, [r0], -lr
2000fcf8:	00000000 	andeq	r0, r0, r0
2000fcfc:	f8000380 			; <UNDEFINED> instruction: 0xf8000380
2000fd00:	000000ff 	strdeq	r0, [r0], -pc	; <UNPREDICTABLE>
2000fd04:	00007fff 	strdeq	r7, [r0], -pc	; <UNPREDICTABLE>
2000fd08:	00000000 	andeq	r0, r0, r0
2000fd0c:	ff800070 			; <UNDEFINED> instruction: 0xff800070
2000fd10:	000000ff 	strdeq	r0, [r0], -pc	; <UNPREDICTABLE>
2000fd14:	0000ffff 	strdeq	pc, [r0], -pc	; <UNPREDICTABLE>
2000fd18:	00000000 	andeq	r0, r0, r0
2000fd1c:	ffe00010 			; <UNDEFINED> instruction: 0xffe00010
2000fd20:	0000007f 	andeq	r0, r0, pc, ror r0
2000fd24:	0001fffe 	strdeq	pc, [r1], -lr
2000fd28:	00000000 	andeq	r0, r0, r0
2000fd2c:	fff80010 			; <UNDEFINED> instruction: 0xfff80010
2000fd30:	00000047 	andeq	r0, r0, r7, asr #32
2000fd34:	0003fff0 	strdeq	pc, [r3], -r0
2000fd38:	00000000 	andeq	r0, r0, r0
2000fd3c:	007e00e0 	rsbseq	r0, lr, r0, ror #1
2000fd40:	00000040 	andeq	r0, r0, r0, asr #32
2000fd44:	0003fff0 	strdeq	pc, [r3], -r0
2000fd48:	00000000 	andeq	r0, r0, r0
2000fd4c:	0001ff00 	andeq	pc, r1, r0, lsl #30
2000fd50:	00000020 	andeq	r0, r0, r0, lsr #32
2000fd54:	0007ffe0 	andeq	pc, r7, r0, ror #31
	...
2000fd60:	00000020 	andeq	r0, r0, r0, lsr #32
2000fd64:	000fffc0 	andeq	pc, pc, r0, asr #31
	...
2000fd70:	ff800010 			; <UNDEFINED> instruction: 0xff800010
2000fd74:	001fff8f 	andseq	pc, pc, pc, lsl #31
	...
2000fd80:	ffffe010 			; <UNDEFINED> instruction: 0xffffe010
2000fd84:	001fffff 			; <UNDEFINED> instruction: 0x001fffff
	...
2000fd90:	ffffff88 			; <UNDEFINED> instruction: 0xffffff88
2000fd94:	003fffff 	ldrshteq	pc, [pc], -pc	; <UNPREDICTABLE>
	...
2000fda0:	fffffffc 			; <UNDEFINED> instruction: 0xfffffffc
2000fda4:	003fffff 	ldrshteq	pc, [pc], -pc	; <UNPREDICTABLE>
2000fda8:	00000000 	andeq	r0, r0, r0
2000fdac:	80000000 	andhi	r0, r0, r0
2000fdb0:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
2000fdb4:	07ffffff 			; <UNDEFINED> instruction: 0x07ffffff
2000fdb8:	00000000 	andeq	r0, r0, r0
2000fdbc:	f0000000 			; <UNDEFINED> instruction: 0xf0000000
2000fdc0:	00301fff 	ldrshteq	r1, [r0], -pc
2000fdc4:	7ffff018 	svcvc	0x00fff018
2000fdc8:	00000000 	andeq	r0, r0, r0
2000fdcc:	fe000000 	cdp2	0, 0, cr0, cr0, cr0, {0}
2000fdd0:	0463fc7f 	strbteq	pc, [r3], #-3199	; 0xfffff381	; <UNPREDICTABLE>
2000fdd4:	ffff07c4 			; <UNDEFINED> instruction: 0xffff07c4
2000fdd8:	00000003 	andeq	r0, r0, r3
2000fddc:	ffc00000 			; <UNDEFINED> instruction: 0xffc00000
2000fde0:	1486041f 	strne	r0, [r6], #1055	; 0x41f
2000fde4:	fffc0863 	vcmla.f32	q8, q6, d19[0], #270
2000fde8:	0000003f 	andeq	r0, r0, pc, lsr r0
2000fdec:	fffc0000 			; <UNDEFINED> instruction: 0xfffc0000
2000fdf0:	910cc607 	tstls	ip, r7, lsl #12
2000fdf4:	fff81ba1 			; <UNDEFINED> instruction: 0xfff81ba1
2000fdf8:	000000ff 	strdeq	r0, [r0], -pc	; <UNPREDICTABLE>
2000fdfc:	ffff8000 			; <UNDEFINED> instruction: 0xffff8000
2000fe00:	081b7303 	ldmdaeq	fp, {r0, r1, r8, r9, ip, sp, lr}
2000fe04:	ffe016f0 			; <UNDEFINED> instruction: 0xffe016f0
2000fe08:	000007ff 	strdeq	r0, [r0], -pc	; <UNPREDICTABLE>
2000fe0c:	ffffe000 			; <UNDEFINED> instruction: 0xffffe000
2000fe10:	0036d903 	eorseq	sp, r6, r3, lsl #18
2000fe14:	ffc03da8 			; <UNDEFINED> instruction: 0xffc03da8
2000fe18:	00001fff 	strdeq	r1, [r0], -pc	; <UNPREDICTABLE>
2000fe1c:	fffff000 			; <UNDEFINED> instruction: 0xfffff000
2000fe20:	0064c983 	rsbeq	ip, r4, r3, lsl #19
2000fe24:	ffc06dac 			; <UNDEFINED> instruction: 0xffc06dac
2000fe28:	00007fff 	strdeq	r7, [r0], -pc	; <UNPREDICTABLE>
2000fe2c:	fffff000 			; <UNDEFINED> instruction: 0xfffff000
2000fe30:	0086d8c3 	addeq	sp, r6, r3, asr #17
2000fe34:	ffc0c426 			; <UNDEFINED> instruction: 0xffc0c426
2000fe38:	00007fff 	strdeq	r7, [r0], -pc	; <UNPREDICTABLE>
2000fe3c:	fffff800 	vcmla.f32	d31, d15, d0[0], #270
2000fe40:	e1f331c3 	mvns	r3, r3, asr #3
2000fe44:	ffc087fb 			; <UNDEFINED> instruction: 0xffc087fb
2000fe48:	00007fff 	strdeq	r7, [r0], -pc	; <UNPREDICTABLE>
2000fe4c:	fffff000 			; <UNDEFINED> instruction: 0xfffff000
2000fe50:	c08ffe01 	addgt	pc, pc, r1, lsl #28
2000fe54:	ffc07ff0 			; <UNDEFINED> instruction: 0xffc07ff0
2000fe58:	00003fff 	strdeq	r3, [r0], -pc	; <UNPREDICTABLE>
2000fe5c:	00000000 	andeq	r0, r0, r0
2000fe60:	80800041 	addhi	r0, r0, r1, asr #32
2000fe64:	00221800 	eoreq	r1, r2, r0, lsl #16
2000fe68:	0000007f 	andeq	r0, r0, pc, ror r0
2000fe6c:	00000000 	andeq	r0, r0, r0
2000fe70:	808000c2 	addhi	r0, r0, r2, asr #1
2000fe74:	00220000 	eoreq	r0, r2, r0
	...
2000fe80:	00c801b2 	strheq	r0, [r8], #18
2000fe84:	00270011 	eoreq	r0, r7, r1, lsl r0
	...
2000fe90:	00080304 	andeq	r0, r8, r4, lsl #6
2000fe94:	002b8010 	eoreq	r8, fp, r0, lsl r0
	...
2000fea0:	20080604 	andcs	r0, r8, r4, lsl #12
2000fea4:	0021c010 	eoreq	ip, r1, r0, lsl r0
	...
2000feb0:	20080e04 	andcs	r0, r8, r4, lsl #28
2000feb4:	0010e018 	andseq	lr, r0, r8, lsl r0
	...
2000fec0:	28183c08 	ldmdacs	r8, {r3, sl, fp, ip, sp}
2000fec4:	00107808 	andseq	r7, r0, r8, lsl #16
	...
2000fed0:	4870ec08 	ldmdami	r0!, {r3, sl, fp, sp, lr, pc}^
2000fed4:	00102c06 	andseq	r2, r0, r6, lsl #24
	...
2000fee0:	00c38810 	sbceq	r8, r3, r0, lsl r8
2000fee4:	00083603 	andeq	r3, r8, r3, lsl #12
2000fee8:	00000000 	andeq	r0, r0, r0
2000feec:	ffe00000 			; <UNDEFINED> instruction: 0xffe00000
2000fef0:	818e181f 	orrhi	r1, lr, pc, lsl r8
2000fef4:	fff813e1 			; <UNDEFINED> instruction: 0xfff813e1
2000fef8:	00000003 	andeq	r0, r0, r3
2000fefc:	003c0000 	eorseq	r0, ip, r0
2000ff00:	83f81020 	mvnshi	r1, #32
2000ff04:	fff8183f 			; <UNDEFINED> instruction: 0xfff8183f
2000ff08:	0000001f 	andeq	r0, r0, pc, lsl r0
2000ff0c:	00030000 	andeq	r0, r3, r0
2000ff10:	c6883020 	strgt	r3, [r8], r0, lsr #32
2000ff14:	fffc0822 	vcmla.f32	d16, d12, d18[0], #270
2000ff18:	000003ff 	strdeq	r0, [r0], -pc	; <UNPREDICTABLE>
2000ff1c:	0000c000 	andeq	ip, r0, r0
2000ff20:	7c886060 	stcvc	0, cr6, [r8], {96}	; 0x60
2000ff24:	fffc0c22 			; <UNDEFINED> instruction: 0xfffc0c22
2000ff28:	00001fff 	strdeq	r1, [r0], -pc	; <UNPREDICTABLE>
2000ff2c:	00007000 	andeq	r7, r0, r0
2000ff30:	0078c060 	rsbseq	ip, r8, r0, rrx
2000ff34:	fffe0424 			; <UNDEFINED> instruction: 0xfffe0424
2000ff38:	00007fff 	strdeq	r7, [r0], -pc	; <UNPREDICTABLE>
2000ff3c:	00001800 	andeq	r1, r0, r0, lsl #16
2000ff40:	000080c0 	andeq	r8, r0, r0, asr #1
2000ff44:	ffdf0614 			; <UNDEFINED> instruction: 0xffdf0614
2000ff48:	0000ffff 	strdeq	pc, [r0], -pc	; <UNPREDICTABLE>
2000ff4c:	00000c00 	andeq	r0, r0, r0, lsl #24
2000ff50:	000101c0 	andeq	r0, r1, r0, asr #3
2000ff54:	ffcf8318 			; <UNDEFINED> instruction: 0xffcf8318
2000ff58:	0001ffff 	strdeq	pc, [r1], -pc	; <UNPREDICTABLE>
2000ff5c:	00000600 	andeq	r0, r0, r0, lsl #12
2000ff60:	00032780 	andeq	r2, r3, r0, lsl #15
2000ff64:	ffcfc180 			; <UNDEFINED> instruction: 0xffcfc180
2000ff68:	0003ffff 	strdeq	pc, [r3], -pc	; <UNPREDICTABLE>
2000ff6c:	00000100 	andeq	r0, r0, r0, lsl #2
2000ff70:	00064700 	andeq	r4, r6, r0, lsl #14
2000ff74:	ffc7c0c0 			; <UNDEFINED> instruction: 0xffc7c0c0
2000ff78:	0007ffff 	strdeq	pc, [r7], -pc	; <UNPREDICTABLE>
2000ff7c:	00000180 	andeq	r0, r0, r0, lsl #3
2000ff80:	00044e00 	andeq	r4, r4, r0, lsl #28
2000ff84:	ffc7e460 			; <UNDEFINED> instruction: 0xffc7e460
2000ff88:	000fffff 	strdeq	pc, [pc], -pc	; <UNPREDICTABLE>
2000ff8c:	000000c0 	andeq	r0, r0, r0, asr #1
2000ff90:	030c9c00 	movweq	r9, #52224	; 0xcc00
2000ff94:	ffc3e230 			; <UNDEFINED> instruction: 0xffc3e230
2000ff98:	003fffff 	ldrshteq	pc, [pc], -pc	; <UNPREDICTABLE>
2000ff9c:	00000040 	andeq	r0, r0, r0, asr #32
2000ffa0:	04983800 	ldreq	r3, [r8], #2048	; 0x800
2000ffa4:	ffc3f11c 			; <UNDEFINED> instruction: 0xffc3f11c
2000ffa8:	00ffffff 	ldrshteq	pc, [pc], #255	; <UNPREDICTABLE>
2000ffac:	00000060 	andeq	r0, r0, r0, rrx
2000ffb0:	04f27800 	ldrbteq	r7, [r2], #2048	; 0x800
2000ffb4:	ff81f807 	vcmla.f32	d15, d1, d7[0], #0
2000ffb8:	01ffffff 	ldrsheq	pc, [pc, #255]	; 200100bf <game_over_witch1_gray_bits+0x53>	; <UNPREDICTABLE>
2000ffbc:	00000020 	andeq	r0, r0, r0, lsr #32
2000ffc0:	ffc0f000 			; <UNDEFINED> instruction: 0xffc0f000
2000ffc4:	ff007c01 			; <UNDEFINED> instruction: 0xff007c01
2000ffc8:	07ffffff 			; <UNDEFINED> instruction: 0x07ffffff
2000ffcc:	00000030 	andeq	r0, r0, r0, lsr r0
2000ffd0:	0001e000 	andeq	lr, r1, r0
2000ffd4:	fe003f00 	cdp2	15, 0, cr3, cr0, cr0, {0}
2000ffd8:	0fffffff 	svceq	0x00ffffff
2000ffdc:	00000018 	andeq	r0, r0, r8, lsl r0
2000ffe0:	0c03c000 	stceq	0, cr12, [r3], {-0}
2000ffe4:	fc001f80 	stc2	15, cr1, [r0], {128}	; 0x80
2000ffe8:	1fffffff 	svcne	0x00ffffff
2000ffec:	0000000c 	andeq	r0, r0, ip
2000fff0:	12078000 	andne	r8, r7, #0
2000fff4:	f8000fe0 			; <UNDEFINED> instruction: 0xf8000fe0
2000fff8:	3fffffff 	svccc	0x00ffffff
2000fffc:	00000006 	andeq	r0, r0, r6
20010000:	020e0000 	andeq	r0, lr, #0
20010004:	f00003f8 			; <UNDEFINED> instruction: 0xf00003f8
20010008:	3fffffff 	svccc	0x00ffffff
2001000c:	00000001 	andeq	r0, r0, r1
20010010:	003e0000 	eorseq	r0, lr, r0
20010014:	e00001fe 	strd	r0, [r0], -lr
20010018:	7fffffff 	svcvc	0x00ffffff
2001001c:	00000001 	andeq	r0, r0, r1
20010020:	007c0000 	rsbseq	r0, ip, r0
20010024:	c00000ff 	strdgt	r0, [r0], -pc	; <UNPREDICTABLE>
20010028:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
2001002c:	00000000 	andeq	r0, r0, r0
20010030:	fff80000 			; <UNDEFINED> instruction: 0xfff80000
20010034:	8000007f 	andhi	r0, r0, pc, ror r0
20010038:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
2001003c:	00000000 	andeq	r0, r0, r0
20010040:	ffe00000 			; <UNDEFINED> instruction: 0xffe00000
20010044:	8000003f 	andhi	r0, r0, pc, lsr r0
20010048:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
2001004c:	00000000 	andeq	r0, r0, r0
20010050:	ff800000 			; <UNDEFINED> instruction: 0xff800000
20010054:	8000001f 	andhi	r0, r0, pc, lsl r0
20010058:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
2001005c:	00000000 	andeq	r0, r0, r0
20010060:	f0000000 			; <UNDEFINED> instruction: 0xf0000000
20010064:	80000001 	andhi	r0, r0, r1
20010068:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff

2001006c <game_over_witch1_gray_bits>:
2001006c:	00000000 	andeq	r0, r0, r0
20010070:	01fffffe 	ldrsheq	pc, [pc, #254]	; 20010176 <game_over_witch1_gray_bits+0x10a>	; <UNPREDICTABLE>
	...
2001007c:	80000000 	andhi	r0, r0, r0
20010080:	07ffffff 			; <UNDEFINED> instruction: 0x07ffffff
	...
2001008c:	e0000000 	and	r0, r0, r0
20010090:	cfffffff 	svcgt	0x00ffffff
	...
2001009c:	f8000000 			; <UNDEFINED> instruction: 0xf8000000
200100a0:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
	...
200100ac:	fe000000 	cdp2	0, 0, cr0, cr0, cr0, {0}
200100b0:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
200100b4:	00000001 	andeq	r0, r0, r1
200100b8:	00000000 	andeq	r0, r0, r0
200100bc:	ff800000 			; <UNDEFINED> instruction: 0xff800000
200100c0:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
	...
200100cc:	fff00000 			; <UNDEFINED> instruction: 0xfff00000	; IMB
200100d0:	ffffff9f 			; <UNDEFINED> instruction: 0xffffff9f
	...
200100dc:	fffe0000 			; <UNDEFINED> instruction: 0xfffe0000
200100e0:	fffffe07 			; <UNDEFINED> instruction: 0xfffffe07
200100e4:	00000001 	andeq	r0, r0, r1
200100e8:	00000000 	andeq	r0, r0, r0
200100ec:	ffffe000 			; <UNDEFINED> instruction: 0xffffe000
200100f0:	fffffe00 			; <UNDEFINED> instruction: 0xfffffe00
200100f4:	00000001 	andeq	r0, r0, r1
200100f8:	00000000 	andeq	r0, r0, r0
200100fc:	07fffc00 	ldrbeq	pc, [pc, r0, lsl #24]!	; <UNPREDICTABLE>
20010100:	ffffff00 			; <UNDEFINED> instruction: 0xffffff00
	...
2001010c:	007fff80 	rsbseq	pc, pc, r0, lsl #31
20010110:	ffffff00 			; <UNDEFINED> instruction: 0xffffff00
	...
2001011c:	001fffe0 	andseq	pc, pc, r0, ror #31
20010120:	ffffff80 			; <UNDEFINED> instruction: 0xffffff80
20010124:	00000001 	andeq	r0, r0, r1
20010128:	00000000 	andeq	r0, r0, r0
2001012c:	0007ffe0 	andeq	pc, r7, r0, ror #31
20010130:	ffffff80 			; <UNDEFINED> instruction: 0xffffff80
20010134:	0000000f 	andeq	r0, r0, pc
20010138:	00000000 	andeq	r0, r0, r0
2001013c:	0001ff00 	andeq	pc, r1, r0, lsl #30
20010140:	ffffff80 			; <UNDEFINED> instruction: 0xffffff80
20010144:	0000000f 	andeq	r0, r0, pc
	...
20010150:	ffffffc0 			; <UNDEFINED> instruction: 0xffffffc0
20010154:	0000001f 	andeq	r0, r0, pc, lsl r0
	...
20010160:	ffffffc0 			; <UNDEFINED> instruction: 0xffffffc0
20010164:	0000003f 	andeq	r0, r0, pc, lsr r0
	...
20010170:	007fffe0 	rsbseq	pc, pc, r0, ror #31
20010174:	00000070 	andeq	r0, r0, r0, ror r0
	...
20010180:	00001fe0 	andeq	r1, r0, r0, ror #31
	...
20010190:	00000070 	andeq	r0, r0, r0, ror r0
	...
20010210:	00012000 	andeq	r2, r1, r0
20010214:	00000240 	andeq	r0, r0, r0, asr #4
	...
20010220:	00033000 	andeq	r3, r3, r0
20010224:	00000240 	andeq	r0, r0, r0, asr #4
	...
20010230:	00012000 	andeq	r2, r1, r0
20010234:	000003c0 	andeq	r0, r0, r0, asr #7
	...
20010240:	0000c000 	andeq	ip, r0, r0
	...
200102d0:	00001000 	andeq	r1, r0, r0
200102d4:	00001000 	andeq	r1, r0, r0
	...
200102e0:	00007000 	andeq	r7, r0, r0
200102e4:	00000800 	andeq	r0, r0, r0, lsl #16
	...
200102f0:	0001e000 	andeq	lr, r1, r0
200102f4:	00000c00 	andeq	r0, r0, r0, lsl #24
200102f8:	00000000 	andeq	r0, r0, r0
200102fc:	ffc00000 			; <UNDEFINED> instruction: 0xffc00000
20010300:	0007e01f 	andeq	lr, r7, pc, lsl r0
20010304:	000007c0 	andeq	r0, r0, r0, asr #15
20010308:	00000000 	andeq	r0, r0, r0
2001030c:	fffc0000 			; <UNDEFINED> instruction: 0xfffc0000
20010310:	0107c01f 	tsteq	r7, pc, lsl r0
20010314:	000007c1 	andeq	r0, r0, r1, asr #15
20010318:	00000000 	andeq	r0, r0, r0
2001031c:	ffff0000 			; <UNDEFINED> instruction: 0xffff0000
20010320:	8307801f 	movwhi	r8, #28703	; 0x701f
20010324:	000003c1 	andeq	r0, r0, r1, asr #7
20010328:	00000000 	andeq	r0, r0, r0
2001032c:	ffff8000 			; <UNDEFINED> instruction: 0xffff8000
20010330:	ff87001f 			; <UNDEFINED> instruction: 0xff87001f
20010334:	000003c3 	andeq	r0, r0, r3, asr #7
20010338:	00000000 	andeq	r0, r0, r0
2001033c:	ffffe000 			; <UNDEFINED> instruction: 0xffffe000
20010340:	ffff003f 			; <UNDEFINED> instruction: 0xffff003f
20010344:	002001e3 	eoreq	r0, r0, r3, ror #3
20010348:	00000000 	andeq	r0, r0, r0
2001034c:	fffff000 			; <UNDEFINED> instruction: 0xfffff000
20010350:	fffe003f 			; <UNDEFINED> instruction: 0xfffe003f
20010354:	003000e7 	eorseq	r0, r0, r7, ror #1
20010358:	00000000 	andeq	r0, r0, r0
2001035c:	fffff800 	vcmla.f32	d31, d15, d0[0], #270
20010360:	fffc007f 			; <UNDEFINED> instruction: 0xfffc007f
20010364:	0030007f 	eorseq	r0, r0, pc, ror r0
20010368:	00000000 	andeq	r0, r0, r0
2001036c:	fffffe00 			; <UNDEFINED> instruction: 0xfffffe00
20010370:	fff800ff 			; <UNDEFINED> instruction: 0xfff800ff
20010374:	0038003f 	eorseq	r0, r8, pc, lsr r0
20010378:	00000000 	andeq	r0, r0, r0
2001037c:	fffffe00 			; <UNDEFINED> instruction: 0xfffffe00
20010380:	fff801ff 			; <UNDEFINED> instruction: 0xfff801ff
20010384:	0038001f 	eorseq	r0, r8, pc, lsl r0
20010388:	00000000 	andeq	r0, r0, r0
2001038c:	ffffff00 			; <UNDEFINED> instruction: 0xffffff00
20010390:	fcf003ff 	ldc2l	3, cr0, [r0], #1020	; 0x3fc
20010394:	003c000f 	eorseq	r0, ip, pc
20010398:	00000000 	andeq	r0, r0, r0
2001039c:	ffffff80 			; <UNDEFINED> instruction: 0xffffff80
200103a0:	f86007ff 			; <UNDEFINED> instruction: 0xf86007ff
200103a4:	003c0003 	eorseq	r0, ip, r3
200103a8:	00000000 	andeq	r0, r0, r0
200103ac:	ffffff80 			; <UNDEFINED> instruction: 0xffffff80
200103b0:	f80007ff 			; <UNDEFINED> instruction: 0xf80007ff
200103b4:	007e0000 	rsbseq	r0, lr, r0
200103b8:	00000000 	andeq	r0, r0, r0
200103bc:	ffffffc0 			; <UNDEFINED> instruction: 0xffffffc0
200103c0:	00000fff 	strdeq	r0, [r0], -pc	; <UNPREDICTABLE>
200103c4:	00ff8000 	rscseq	r8, pc, r0
200103c8:	00000000 	andeq	r0, r0, r0
200103cc:	ffffffc0 			; <UNDEFINED> instruction: 0xffffffc0
200103d0:	00001fff 	strdeq	r1, [r0], -pc	; <UNPREDICTABLE>
200103d4:	01ffc000 	mvnseq	ip, r0
200103d8:	00000000 	andeq	r0, r0, r0
200103dc:	ffffffe0 			; <UNDEFINED> instruction: 0xffffffe0
200103e0:	00003fff 	strdeq	r3, [r0], -pc	; <UNPREDICTABLE>
200103e4:	03ffe000 	mvnseq	lr, #0
200103e8:	00000000 	andeq	r0, r0, r0
200103ec:	fffffff0 			; <UNDEFINED> instruction: 0xfffffff0
200103f0:	00007fff 	strdeq	r7, [r0], -pc	; <UNPREDICTABLE>
200103f4:	07fff000 	ldrbeq	pc, [pc, r0]!	; <UNPREDICTABLE>
200103f8:	00000000 	andeq	r0, r0, r0
200103fc:	fffffff8 			; <UNDEFINED> instruction: 0xfffffff8
20010400:	0001ffff 	strdeq	pc, [r1], -pc	; <UNPREDICTABLE>
20010404:	0ffffc00 	svceq	0x00fffc00
20010408:	00000000 	andeq	r0, r0, r0
2001040c:	fffffffe 			; <UNDEFINED> instruction: 0xfffffffe
20010410:	0001ffff 	strdeq	pc, [r1], -pc	; <UNPREDICTABLE>
20010414:	1ffffe00 	svcne	0x00fffe00
20010418:	00000000 	andeq	r0, r0, r0
2001041c:	fffffffe 			; <UNDEFINED> instruction: 0xfffffffe
20010420:	0003ffff 	strdeq	pc, [r3], -pc	; <UNPREDICTABLE>
20010424:	3fffff00 	svccc	0x00ffff00
20010428:	00000000 	andeq	r0, r0, r0
2001042c:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
20010430:	0007ffff 	strdeq	pc, [r7], -pc	; <UNPREDICTABLE>
20010434:	7fffff80 	svcvc	0x00ffff80
20010438:	00000000 	andeq	r0, r0, r0
2001043c:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
20010440:	001fffff 			; <UNDEFINED> instruction: 0x001fffff
20010444:	7fffffc0 	svcvc	0x00ffffc0
20010448:	00000000 	andeq	r0, r0, r0
2001044c:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
20010450:	007fffff 	ldrshteq	pc, [pc], #-255	; <UNPREDICTABLE>
20010454:	7fffffe0 	svcvc	0x00ffffe0
20010458:	00000000 	andeq	r0, r0, r0
2001045c:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
20010460:	0fffffff 	svceq	0x00ffffff
20010464:	7ffffffe 	svcvc	0x00fffffe
20010468:	00000000 	andeq	r0, r0, r0

2001046c <game_over_witch1_light_bits>:
	...
200105c0:	ffcfe000 			; <UNDEFINED> instruction: 0xffcfe000
200105c4:	00000fe7 	andeq	r0, r0, r7, ror #31
	...
200105d0:	fb9c0380 	blx	1e7113da <startup-0x18eec26>
200105d4:	0000f83b 	andeq	pc, r0, fp, lsr r8	; <UNPREDICTABLE>
	...
200105e0:	eb7803e0 	bl	21e11568 <firstTime.4104+0x1dfd0fc>
200105e4:	0003f01c 	andeq	pc, r3, ip, lsl r0	; <UNPREDICTABLE>
	...
200105f0:	6ef001f8 	mrcvs	1, 7, r0, cr0, cr8, {7}
200105f4:	0007e01e 	andeq	lr, r7, lr, lsl r0
	...
20010600:	f7e000fc 			; <UNDEFINED> instruction: 0xf7e000fc
20010604:	001fe00f 	andseq	lr, pc, pc
	...
20010610:	ffc000fc 			; <UNDEFINED> instruction: 0xffc000fc
20010614:	003fc007 	eorseq	ip, pc, r7
	...
20010620:	ff80007c 			; <UNDEFINED> instruction: 0xff80007c
20010624:	003f8003 	eorseq	r8, pc, r3
	...
20010630:	ff00003c 			; <UNDEFINED> instruction: 0xff00003c
20010634:	003f0001 	eorseq	r0, pc, r1
	...
20010640:	1e00003c 	mcrne	0, 0, r0, cr0, cr12, {1}
20010644:	003f0004 	eorseq	r0, pc, r4
	...
20010650:	3f7001fe 	svccc	0x007001fe
20010654:	003f800f 	eorseq	r8, pc, pc
	...
20010660:	7f7fffbe 	svcvc	0x007fffbe
20010664:	001de7ff 			; <UNDEFINED> instruction: 0x001de7ff
	...
20010670:	7f7fff3c 	svcvc	0x007fff3c
20010674:	001dffff 			; <UNDEFINED> instruction: 0x001dffff
	...
20010680:	ff37fe4c 			; <UNDEFINED> instruction: 0xff37fe4c
20010684:	0018ffee 	andseq	pc, r8, lr, ror #31
	...
20010690:	fff7fcf8 			; <UNDEFINED> instruction: 0xfff7fcf8
20010694:	00147fef 	andseq	r7, r4, pc, ror #31
	...
200106a0:	dff7f9f8 	svcle	0x00f7f9f8
200106a4:	001e3fef 	andseq	r3, lr, pc, ror #31
	...
200106b0:	dff7f1f8 	svcle	0x00f7f1f8
200106b4:	000f1fe7 	andeq	r1, pc, r7, ror #31
	...
200106c0:	d7e7c3f0 			; <UNDEFINED> instruction: 0xd7e7c3f0
200106c4:	000f87f7 	strdeq	r8, [pc], -r7
	...
200106d0:	b78f03f0 			; <UNDEFINED> instruction: 0xb78f03f0
200106d4:	000fc3f9 	strdeq	ip, [pc], -r9
	...
200106e0:	ff3c07e0 			; <UNDEFINED> instruction: 0xff3c07e0
200106e4:	0007c1fc 	strdeq	ip, [r7], -ip	; <UNPREDICTABLE>
	...
200106f0:	7e7007e0 	cdpvc	7, 7, cr0, cr0, cr0, {7}
200106f4:	0007e01e 	andeq	lr, r7, lr, lsl r0
	...
20010700:	7c000fc0 	stcvc	15, cr0, [r0], {192}	; 0xc0
20010704:	0007e000 	andeq	lr, r7, r0
	...
20010710:	38000fc0 	stmdacc	r0, {r6, r7, r8, r9, sl, fp}
20010714:	0003f000 	andeq	pc, r3, r0
	...
20010720:	00001f80 	andeq	r1, r0, r0, lsl #31
20010724:	0003f000 	andeq	pc, r3, r0
	...
20010730:	00003f80 	andeq	r3, r0, r0, lsl #31
20010734:	0001f800 	andeq	pc, r1, r0, lsl #16
	...
20010740:	00007f00 	andeq	r7, r0, r0, lsl #30
20010744:	0000f800 	andeq	pc, r0, r0, lsl #16
	...
20010750:	0000fe00 	andeq	pc, r0, r0, lsl #28
20010754:	00007c00 	andeq	r7, r0, r0, lsl #24
	...
20010760:	0000d800 	andeq	sp, r0, r0, lsl #16
20010764:	00003e00 	andeq	r3, r0, r0, lsl #28
	...
20010770:	0001b800 	andeq	fp, r1, r0, lsl #16
20010774:	00003f00 	andeq	r3, r0, r0, lsl #30
	...
20010780:	0003b000 	andeq	fp, r3, r0
20010784:	00001b80 	andeq	r1, r0, r0, lsl #23
	...
20010790:	00036000 	andeq	r6, r3, r0
20010794:	00001dc0 	andeq	r1, r0, r0, asr #27
	...
200107a0:	0007c000 	andeq	ip, r7, r0
200107a4:	00000ee0 	andeq	r0, r0, r0, ror #29
	...
200107b0:	000d8000 	andeq	r8, sp, r0
200107b4:	000007f8 	strdeq	r0, [r0], -r8
	...
200107c0:	003f0000 	eorseq	r0, pc, r0
200107c4:	000003fe 	strdeq	r0, [r0], -lr
	...
200107d0:	fffe0000 			; <UNDEFINED> instruction: 0xfffe0000
200107d4:	000000ff 	strdeq	r0, [r0], -pc	; <UNPREDICTABLE>
	...
200107e0:	f3fc0000 	vrev64.<illegal width 64>	d16, d0
200107e4:	0000007f 	andeq	r0, r0, pc, ror r0
	...
200107f0:	edf80000 	ldcl	0, cr0, [r8]
200107f4:	0000001f 	andeq	r0, r0, pc, lsl r0
	...
20010800:	fdf00000 	ldc2l	0, cr0, [r0]
20010804:	00000007 	andeq	r0, r0, r7
	...
20010810:	ffc00000 			; <UNDEFINED> instruction: 0xffc00000
20010814:	00000001 	andeq	r0, r0, r1
	...
20010820:	ff800000 			; <UNDEFINED> instruction: 0xff800000
	...

2001086c <game_over_witch2_black_bits>:
2001086c:	30000000 	andcc	r0, r0, r0
20010870:	fc000000 	stc2	0, cr0, [r0], {-0}
20010874:	00000003 	andeq	r0, r0, r3
20010878:	00000000 	andeq	r0, r0, r0
2001087c:	0c000000 	stceq	0, cr0, [r0], {-0}
20010880:	f8000000 			; <UNDEFINED> instruction: 0xf8000000
20010884:	00000007 	andeq	r0, r0, r7
20010888:	00000000 	andeq	r0, r0, r0
2001088c:	02000000 	andeq	r0, r0, #0
20010890:	e0000000 	and	r0, r0, r0
20010894:	0000000f 	andeq	r0, r0, pc
20010898:	00000000 	andeq	r0, r0, r0
2001089c:	01800000 	orreq	r0, r0, r0
200108a0:	c0000000 	andgt	r0, r0, r0
200108a4:	0000003f 	andeq	r0, r0, pc, lsr r0
200108a8:	00000000 	andeq	r0, r0, r0
200108ac:	00600000 	rsbeq	r0, r0, r0
200108b0:	80000000 	andhi	r0, r0, r0
200108b4:	0000007f 	andeq	r0, r0, pc, ror r0
200108b8:	00000000 	andeq	r0, r0, r0
200108bc:	00100000 	andseq	r0, r0, r0
200108c0:	00000000 	andeq	r0, r0, r0
200108c4:	000000ff 	strdeq	r0, [r0], -pc	; <UNPREDICTABLE>
200108c8:	00000000 	andeq	r0, r0, r0
200108cc:	00080000 	andeq	r0, r8, r0
200108d0:	00000000 	andeq	r0, r0, r0
200108d4:	000003fe 	strdeq	r0, [r0], -lr
200108d8:	00000000 	andeq	r0, r0, r0
200108dc:	00040000 	andeq	r0, r4, r0
200108e0:	00000000 	andeq	r0, r0, r0
200108e4:	000007f8 	strdeq	r0, [r0], -r8
200108e8:	00000000 	andeq	r0, r0, r0
200108ec:	00020000 	andeq	r0, r2, r0
200108f0:	00000000 	andeq	r0, r0, r0
200108f4:	00000ff8 	strdeq	r0, [r0], -r8
200108f8:	00000000 	andeq	r0, r0, r0
200108fc:	00010000 	andeq	r0, r1, r0
20010900:	00000000 	andeq	r0, r0, r0
20010904:	00003ff8 	strdeq	r3, [r0], -r8
20010908:	00000000 	andeq	r0, r0, r0
2001090c:	0000c000 	andeq	ip, r0, r0
20010910:	00000000 	andeq	r0, r0, r0
20010914:	00007ff0 	strdeq	r7, [r0], -r0
20010918:	00000000 	andeq	r0, r0, r0
2001091c:	80002000 	andhi	r2, r0, r0
20010920:	0000027f 	andeq	r0, r0, pc, ror r2
20010924:	0000ffe0 	andeq	pc, r0, r0, ror #31
20010928:	00000000 	andeq	r0, r0, r0
2001092c:	e0002000 	and	r2, r0, r0
20010930:	000003ff 	strdeq	r0, [r0], -pc	; <UNPREDICTABLE>
20010934:	0000ffc0 	andeq	pc, r0, r0, asr #31
20010938:	00000000 	andeq	r0, r0, r0
2001093c:	f8002000 			; <UNDEFINED> instruction: 0xf8002000
20010940:	ffe00707 			; <UNDEFINED> instruction: 0xffe00707
20010944:	0001ffff 	strdeq	pc, [r1], -pc	; <UNPREDICTABLE>
20010948:	00000000 	andeq	r0, r0, r0
2001094c:	fc001000 	stc2	0, cr1, [r0], {-0}
20010950:	fff80700 			; <UNDEFINED> instruction: 0xfff80700
20010954:	0001ffff 	strdeq	pc, [r1], -pc	; <UNPREDICTABLE>
20010958:	00000000 	andeq	r0, r0, r0
2001095c:	1e001000 	cdpne	0, 0, cr1, cr0, cr0, {0}
20010960:	ffff0780 			; <UNDEFINED> instruction: 0xffff0780
20010964:	0007ffff 	strdeq	pc, [r7], -pc	; <UNPREDICTABLE>
20010968:	00000000 	andeq	r0, r0, r0
2001096c:	07001000 	streq	r1, [r0, -r0]
20010970:	ffffc780 			; <UNDEFINED> instruction: 0xffffc780
20010974:	001fffff 			; <UNDEFINED> instruction: 0x001fffff
20010978:	00000000 	andeq	r0, r0, r0
2001097c:	03801000 	orreq	r1, r0, #0
20010980:	fffff7c0 			; <UNDEFINED> instruction: 0xfffff7c0
20010984:	007fffff 	ldrshteq	pc, [pc], #-255	; <UNPREDICTABLE>
20010988:	00000000 	andeq	r0, r0, r0
2001098c:	03802000 	orreq	r2, r0, #0
20010990:	ffffffc0 			; <UNDEFINED> instruction: 0xffffffc0
20010994:	03ffffff 	mvnseq	pc, #1020	; 0x3fc
20010998:	00000000 	andeq	r0, r0, r0
2001099c:	07c02000 	strbeq	r2, [r0, r0]
200109a0:	ffffffe0 			; <UNDEFINED> instruction: 0xffffffe0
200109a4:	1fffff83 	svcne	0x00ffff83
200109a8:	00000000 	andeq	r0, r0, r0
200109ac:	0fe04000 	svceq	0x00e04000
200109b0:	03ffffe0 	mvnseq	pc, #224, 30	; 0x380
200109b4:	fffffe60 			; <UNDEFINED> instruction: 0xfffffe60
200109b8:	00000001 	andeq	r0, r0, r1
200109bc:	07e04000 	strbeq	r4, [r0, r0]!
200109c0:	03fffff0 	mvnseq	pc, #240, 30	; 0x3c0
200109c4:	ffffe7d8 			; <UNDEFINED> instruction: 0xffffe7d8
200109c8:	00000007 	andeq	r0, r0, r7
200109cc:	03c0c000 	biceq	ip, r0, #0
200109d0:	020ffffc 	andeq	pc, pc, #252, 30	; 0x3f0
200109d4:	ffff88c8 	vcmla.f32	q12, <illegal reg q15.5>, d8[0], #270
200109d8:	0000001f 	andeq	r0, r0, pc, lsl r0
200109dc:	01e30000 	mvneq	r0, r0
200109e0:	8ff2ffff 	svchi	0x00f2ffff
200109e4:	fffc93a6 			; <UNDEFINED> instruction: 0xfffc93a6
200109e8:	0000003f 	andeq	r0, r0, pc, lsr r0
200109ec:	c01c0000 	andsgt	r0, ip, r0
200109f0:	3e71bfff 	mrccc	15, 3, fp, cr1, cr15, {7}
200109f4:	fff853a3 			; <UNDEFINED> instruction: 0xfff853a3
200109f8:	0000007f 	andeq	r0, r0, pc, ror r0
200109fc:	f0000000 			; <UNDEFINED> instruction: 0xf0000000
20010a00:	118c4fff 	strdne	r4, [ip, pc]
20010a04:	fff84824 	vcmla.f32	d20, d8, d20[0], #270
20010a08:	000000ff 	strdeq	r0, [r0], -pc	; <UNPREDICTABLE>
20010a0c:	fc000000 	stc2	0, cr0, [r0], {-0}
20010a10:	113a47ff 	teqne	sl, pc	; <illegal shifter operand>
20010a14:	fff0bf48 			; <UNDEFINED> instruction: 0xfff0bf48
20010a18:	000001ff 	strdeq	r0, [r0], -pc	; <UNPREDICTABLE>
20010a1c:	ff000000 			; <UNDEFINED> instruction: 0xff000000
20010a20:	113923ff 	teqne	r9, pc	; <illegal shifter operand>
20010a24:	fff0cfd0 			; <UNDEFINED> instruction: 0xfff0cfd0
20010a28:	000003ff 	strdeq	r0, [r0], -pc	; <UNPREDICTABLE>
20010a2c:	ffc00000 			; <UNDEFINED> instruction: 0xffc00000
20010a30:	093a20ff 	ldmdbeq	sl!, {r0, r1, r2, r3, r4, r5, r6, r7, sp}
20010a34:	ffe0c020 			; <UNDEFINED> instruction: 0xffe0c020
20010a38:	000003ff 	strdeq	r0, [r0], -pc	; <UNPREDICTABLE>
20010a3c:	ffe00000 			; <UNDEFINED> instruction: 0xffe00000
20010a40:	08c2107f 	stmiaeq	r2, {r0, r1, r2, r3, r4, r5, r6, ip}^
20010a44:	ffe0a441 			; <UNDEFINED> instruction: 0xffe0a441
20010a48:	000003ff 	strdeq	r0, [r0], -pc	; <UNPREDICTABLE>
20010a4c:	ffe00000 			; <UNDEFINED> instruction: 0xffe00000
20010a50:	0c3c603f 	ldceq	0, cr6, [ip], #-252	; 0xffffff04
20010a54:	ffe0a880 	vcmla.f32	d26, d16, d0[0], #170
20010a58:	000000ff 	strdeq	r0, [r0], -pc	; <UNPREDICTABLE>
20010a5c:	fff00000 			; <UNDEFINED> instruction: 0xfff00000	; IMB
20010a60:	03e1800f 	mvneq	r8, #15
20010a64:	00205080 	eoreq	r5, r0, r0, lsl #1
20010a68:	00000000 	andeq	r0, r0, r0
20010a6c:	fff00000 			; <UNDEFINED> instruction: 0xfff00000	; IMB
20010a70:	801e080f 	andshi	r0, lr, pc, lsl #16
20010a74:	00105100 	andseq	r5, r0, r0, lsl #2
20010a78:	00000000 	andeq	r0, r0, r0
20010a7c:	fff80000 			; <UNDEFINED> instruction: 0xfff80000
20010a80:	8000100f 	andhi	r1, r0, pc
20010a84:	00104900 	andseq	r4, r0, r0, lsl #18
20010a88:	00000000 	andeq	r0, r0, r0
20010a8c:	fffc0000 			; <UNDEFINED> instruction: 0xfffc0000
20010a90:	8000300f 	andhi	r3, r0, pc
20010a94:	00124a00 	andseq	r4, r2, r0, lsl #20
20010a98:	00000000 	andeq	r0, r0, r0
20010a9c:	fffc0000 			; <UNDEFINED> instruction: 0xfffc0000
20010aa0:	02006009 	andeq	r6, r0, #9
20010aa4:	000a4601 	andeq	r4, sl, r1, lsl #12
20010aa8:	00000000 	andeq	r0, r0, r0
20010aac:	1ffe0000 	svcne	0x00fe0000
20010ab0:	0400a008 	streq	sl, [r0], #-8
20010ab4:	00094200 	andeq	r4, r9, r0, lsl #4
20010ab8:	00000000 	andeq	r0, r0, r0
20010abc:	07fe0000 	ldrbeq	r0, [lr, r0]!
20010ac0:	04034010 	streq	r4, [r3], #-16
20010ac4:	00054200 	andeq	r4, r5, r0, lsl #4
20010ac8:	00000000 	andeq	r0, r0, r0
20010acc:	00ff0000 	rscseq	r0, pc, r0
20010ad0:	180c4010 	stmdane	ip, {r4, lr}
20010ad4:	000443fc 	strdeq	r4, [r4], -ip
20010ad8:	00000000 	andeq	r0, r0, r0
20010adc:	000e0000 	andeq	r0, lr, r0
20010ae0:	e0308020 	eors	r8, r0, r0, lsr #32
20010ae4:	fffc4003 			; <UNDEFINED> instruction: 0xfffc4003
	...
20010af0:	7fc0803e 	svcvc	0x00c0803e
20010af4:	fffe2000 			; <UNDEFINED> instruction: 0xfffe2000
20010af8:	00000007 	andeq	r0, r0, r7
20010afc:	f8000000 			; <UNDEFINED> instruction: 0xf8000000
20010b00:	44010021 	strmi	r0, [r1], #-33	; 0xffffffdf
20010b04:	fffe2000 			; <UNDEFINED> instruction: 0xfffe2000
20010b08:	0000003f 	andeq	r0, r0, pc, lsr r0
20010b0c:	07000000 	streq	r0, [r0, -r0]
20010b10:	44010040 	strmi	r0, [r1], #-64	; 0xffffffc0
20010b14:	fffe2000 			; <UNDEFINED> instruction: 0xfffe2000
20010b18:	000001ff 	strdeq	r0, [r0], -pc	; <UNPREDICTABLE>
20010b1c:	00c00000 	sbceq	r0, r0, r0
20010b20:	44020040 	strmi	r0, [r2], #-64	; 0xffffffc0
20010b24:	fffe2000 			; <UNDEFINED> instruction: 0xfffe2000
20010b28:	00001fff 	strdeq	r1, [r0], -pc	; <UNPREDICTABLE>
20010b2c:	00300000 	eorseq	r0, r0, r0
20010b30:	38040080 	stmdacc	r4, {r7}
20010b34:	fffe2000 			; <UNDEFINED> instruction: 0xfffe2000
20010b38:	0001ffff 	strdeq	pc, [r1], -pc	; <UNPREDICTABLE>
20010b3c:	000c0000 	andeq	r0, ip, r0
20010b40:	00080080 	andeq	r0, r8, r0, lsl #1
20010b44:	ffee1000 			; <UNDEFINED> instruction: 0xffee1000
20010b48:	000fffff 	strdeq	pc, [pc], -pc	; <UNPREDICTABLE>
20010b4c:	00020000 	andeq	r0, r2, r0
20010b50:	00101100 	andseq	r1, r0, r0, lsl #2
20010b54:	ff8e5000 			; <UNDEFINED> instruction: 0xff8e5000
20010b58:	007fffff 	ldrshteq	pc, [pc], #-255	; <UNPREDICTABLE>
20010b5c:	00010000 	andeq	r0, r1, r0
20010b60:	00202100 	eoreq	r2, r0, r0, lsl #2
20010b64:	e00e4800 	and	r4, lr, r0, lsl #16
20010b68:	03ffffff 	mvnseq	pc, #1020	; 0x3fc
20010b6c:	0000c000 	andeq	ip, r0, r0
20010b70:	00404200 	subeq	r4, r0, r0, lsl #4
20010b74:	c00e4800 	andgt	r4, lr, r0, lsl #16
20010b78:	0fffffff 	svceq	0x00ffffff
20010b7c:	00002000 	andeq	r2, r0, r0
20010b80:	00408400 	subeq	r8, r0, r0, lsl #8
20010b84:	000e441c 	andeq	r4, lr, ip, lsl r4
20010b88:	1fffffff 	svcne	0x00ffffff
20010b8c:	00001000 	andeq	r1, r0, r0
20010b90:	00810800 	addeq	r0, r1, r0, lsl #16
20010b94:	00074213 	andeq	r4, r7, r3, lsl r2
20010b98:	3ffffffc 	svccc	0x00fffffc
20010b9c:	00000800 	andeq	r0, r0, r0, lsl #16
20010ba0:	03001000 	movweq	r1, #0
20010ba4:	00070111 	andeq	r0, r7, r1, lsl r1
20010ba8:	7fffffe0 	svcvc	0x00ffffe0
20010bac:	00000400 	andeq	r0, r0, r0, lsl #8
20010bb0:	9c002000 	stcls	0, cr2, [r0], {-0}
20010bb4:	000700d0 	ldrdeq	r0, [r7], -r0	; <UNPREDICTABLE>
20010bb8:	ffffffc0 			; <UNDEFINED> instruction: 0xffffffc0
20010bbc:	00000400 	andeq	r0, r0, r0, lsl #8
20010bc0:	e0006000 	and	r6, r0, r0
20010bc4:	00070038 	andeq	r0, r7, r8, lsr r0
20010bc8:	ffffff80 			; <UNDEFINED> instruction: 0xffffff80
20010bcc:	00000200 	andeq	r0, r0, r0, lsl #4
20010bd0:	0020c000 	eoreq	ip, r0, r0
20010bd4:	00070607 	andeq	r0, r7, r7, lsl #12
20010bd8:	ffffff00 			; <UNDEFINED> instruction: 0xffffff00
20010bdc:	00000100 	andeq	r0, r0, r0, lsl #2
20010be0:	0041c000 	subeq	ip, r1, r0
20010be4:	00030800 	andeq	r0, r3, r0, lsl #16
20010be8:	fffff800 	vcmla.f32	d31, d15, d0[0], #270
20010bec:	00000100 	andeq	r0, r0, r0, lsl #2
20010bf0:	01878060 	orreq	r8, r7, r0, rrx
20010bf4:	00038800 	andeq	r8, r3, r0, lsl #16
20010bf8:	fffff800 	vcmla.f32	d31, d15, d0[0], #270
20010bfc:	00000080 	andeq	r0, r0, r0, lsl #1
20010c00:	1e1e00f0 	mrcne	0, 0, r0, cr14, cr0, {7}
20010c04:	00038800 	andeq	r8, r3, r0, lsl #16
20010c08:	fffff800 	vcmla.f32	d31, d15, d0[0], #270
20010c0c:	00000080 	andeq	r0, r0, r0, lsl #1
20010c10:	e07c01f8 	ldrsht	r0, [ip], #-24	; 0xffffffe8
20010c14:	00038400 	andeq	r8, r3, r0, lsl #8
20010c18:	fffff800 	vcmla.f32	d31, d15, d0[0], #270
20010c1c:	00000040 	andeq	r0, r0, r0, asr #32
20010c20:	01f801f8 	ldrsheq	r0, [r8, #24]!
20010c24:	00018000 	andeq	r8, r1, r0
20010c28:	fffff800 	vcmla.f32	d31, d15, d0[0], #270
20010c2c:	00000040 	andeq	r0, r0, r0, asr #32
20010c30:	07f007f8 			; <UNDEFINED> instruction: 0x07f007f8
20010c34:	0001e000 	andeq	lr, r1, r0
20010c38:	fffff000 			; <UNDEFINED> instruction: 0xfffff000
20010c3c:	00000020 	andeq	r0, r0, r0, lsr #32
20010c40:	1fc03ffc 	svcne	0x00c03ffc
20010c44:	0000f800 	andeq	pc, r0, r0, lsl #16
20010c48:	fffff000 			; <UNDEFINED> instruction: 0xfffff000
20010c4c:	00000020 	andeq	r0, r0, r0, lsr #32
20010c50:	ff81fffc 			; <UNDEFINED> instruction: 0xff81fffc
20010c54:	00007e00 	andeq	r7, r0, r0, lsl #28
20010c58:	ffffe000 			; <UNDEFINED> instruction: 0xffffe000
20010c5c:	00000010 	andeq	r0, r0, r0, lsl r0
20010c60:	fe07fffe 	mcr2	15, 0, pc, cr7, cr14, {7}	; <UNPREDICTABLE>
20010c64:	00003f8f 	andeq	r3, r0, pc, lsl #31
20010c68:	fffff000 			; <UNDEFINED> instruction: 0xfffff000

20010c6c <game_over_witch2_gray_bits>:
20010c6c:	c0000000 	andgt	r0, r0, r0
20010c70:	03ffffff 	mvnseq	pc, #1020	; 0x3fc
	...
20010c7c:	f0000000 			; <UNDEFINED> instruction: 0xf0000000
20010c80:	07ffffff 			; <UNDEFINED> instruction: 0x07ffffff
	...
20010c8c:	fc000000 	stc2	0, cr0, [r0], {-0}
20010c90:	1fffffff 	svcne	0x00ffffff
	...
20010c9c:	fe000000 	cdp2	0, 0, cr0, cr0, cr0, {0}
20010ca0:	3fffffff 	svccc	0x00ffffff
	...
20010cac:	ff800000 			; <UNDEFINED> instruction: 0xff800000
20010cb0:	7fffffff 	svcvc	0x00ffffff
	...
20010cbc:	ffe00000 			; <UNDEFINED> instruction: 0xffe00000
20010cc0:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
	...
20010ccc:	fff00000 			; <UNDEFINED> instruction: 0xfff00000	; IMB
20010cd0:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
20010cd4:	00000001 	andeq	r0, r0, r1
20010cd8:	00000000 	andeq	r0, r0, r0
20010cdc:	fff80000 			; <UNDEFINED> instruction: 0xfff80000
20010ce0:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
20010ce4:	00000007 	andeq	r0, r0, r7
20010ce8:	00000000 	andeq	r0, r0, r0
20010cec:	fffc0000 			; <UNDEFINED> instruction: 0xfffc0000
20010cf0:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
20010cf4:	00000007 	andeq	r0, r0, r7
20010cf8:	00000000 	andeq	r0, r0, r0
20010cfc:	fffe0000 			; <UNDEFINED> instruction: 0xfffe0000
20010d00:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
20010d04:	00000007 	andeq	r0, r0, r7
20010d08:	00000000 	andeq	r0, r0, r0
20010d0c:	ffff0000 			; <UNDEFINED> instruction: 0xffff0000
20010d10:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
20010d14:	0000000f 	andeq	r0, r0, pc
20010d18:	00000000 	andeq	r0, r0, r0
20010d1c:	7fffc000 	svcvc	0x00ffc000
20010d20:	fffffd80 			; <UNDEFINED> instruction: 0xfffffd80
20010d24:	0000001f 	andeq	r0, r0, pc, lsl r0
20010d28:	00000000 	andeq	r0, r0, r0
20010d2c:	1fffc000 	svcne	0x00ffc000
20010d30:	fffffc00 			; <UNDEFINED> instruction: 0xfffffc00
20010d34:	0000003f 	andeq	r0, r0, pc, lsr r0
20010d38:	00000000 	andeq	r0, r0, r0
20010d3c:	07ffc000 	ldrbeq	ip, [pc, r0]!
20010d40:	001ff800 	andseq	pc, pc, r0, lsl #16
	...
20010d4c:	03ffe000 	mvnseq	lr, #0
20010d50:	0007f800 	andeq	pc, r7, r0, lsl #16
	...
20010d5c:	01ffe000 	mvnseq	lr, r0
20010d60:	0000f800 	andeq	pc, r0, r0, lsl #16
	...
20010d6c:	00ffe000 	rscseq	lr, pc, r0
20010d70:	00003800 	andeq	r3, r0, r0, lsl #16
	...
20010d7c:	007fe000 	rsbseq	lr, pc, r0
20010d80:	00000800 	andeq	r0, r0, r0, lsl #16
	...
20010d8c:	007fc000 	rsbseq	ip, pc, r0
	...
20010d9c:	003fc000 	eorseq	ip, pc, r0
	...
20010dac:	001f8000 	andseq	r8, pc, r0
	...
20010dbc:	001f8000 	andseq	r8, pc, r0
	...
20010dcc:	003f0000 	eorseq	r0, pc, r0
	...
20010ddc:	001c0000 	andseq	r0, ip, r0
20010de0:	00000000 	andeq	r0, r0, r0
20010de4:	00000c40 	andeq	r0, r0, r0, asr #24
	...
20010df4:	00000c40 	andeq	r0, r0, r0, asr #24
	...
20010e04:	000007c0 	andeq	r0, r0, r0, asr #15
	...
20010e10:	00c40000 	sbceq	r0, r4, r0
20010e14:	00000080 	andeq	r0, r0, r0, lsl #1
	...
20010e20:	00c60000 	sbceq	r0, r6, r0
	...
20010e30:	00c40000 	sbceq	r0, r4, r0
	...
20010e40:	003c0000 	eorseq	r0, ip, r0
20010e44:	00004000 	andeq	r4, r0, r0
	...
20010e54:	00004000 	andeq	r4, r0, r0
	...
20010e64:	00002000 	andeq	r2, r0, r0
	...
20010e74:	00002000 	andeq	r2, r0, r0
	...
20010e84:	00003000 	andeq	r3, r0, r0
	...
20010e94:	00003000 	andeq	r3, r0, r0
	...
20010ea4:	00003800 	andeq	r3, r0, r0, lsl #16
	...
20010eb0:	00004000 	andeq	r4, r0, r0
20010eb4:	00003c00 	andeq	r3, r0, r0, lsl #24
	...
20010ec0:	00008000 	andeq	r8, r0, r0
20010ec4:	00003c00 	andeq	r3, r0, r0, lsl #24
	...
20010ed0:	00038000 	andeq	r8, r3, r0
20010ed4:	00003c00 	andeq	r3, r0, r0, lsl #24
	...
20010ee0:	000f0000 	andeq	r0, pc, r0
20010ee4:	00003ffc 	strdeq	r3, [r0], -ip
	...
20010ef0:	803f0000 	eorshi	r0, pc, r0
20010ef4:	00001fff 	strdeq	r1, [r0], -pc	; <UNPREDICTABLE>
	...
20010f00:	83fe001e 	mvnshi	r0, #30
20010f04:	00001fff 	strdeq	r1, [r0], -pc	; <UNPREDICTABLE>
20010f08:	00000000 	andeq	r0, r0, r0
20010f0c:	f8000000 			; <UNDEFINED> instruction: 0xf8000000
20010f10:	83fe003f 	mvnshi	r0, #63	; 0x3f
20010f14:	00001fff 	strdeq	r1, [r0], -pc	; <UNPREDICTABLE>
20010f18:	00000000 	andeq	r0, r0, r0
20010f1c:	ff000000 			; <UNDEFINED> instruction: 0xff000000
20010f20:	83fc003f 	mvnshi	r0, #63	; 0x3f
20010f24:	00001fff 	strdeq	r1, [r0], -pc	; <UNPREDICTABLE>
20010f28:	00000000 	andeq	r0, r0, r0
20010f2c:	ffc00000 			; <UNDEFINED> instruction: 0xffc00000
20010f30:	c7f8007f 			; <UNDEFINED> instruction: 0xc7f8007f
20010f34:	00001fff 	strdeq	r1, [r0], -pc	; <UNPREDICTABLE>
20010f38:	00000000 	andeq	r0, r0, r0
20010f3c:	fff00000 			; <UNDEFINED> instruction: 0xfff00000	; IMB
20010f40:	fff0007f 			; <UNDEFINED> instruction: 0xfff0007f
20010f44:	00100fff 			; <UNDEFINED> instruction: 0x00100fff
20010f48:	00000000 	andeq	r0, r0, r0
20010f4c:	fffc0000 			; <UNDEFINED> instruction: 0xfffc0000
20010f50:	ffe000ff 			; <UNDEFINED> instruction: 0xffe000ff
20010f54:	00700fff 	ldrshteq	r0, [r0], #-255	; 0xffffff01
20010f58:	00000000 	andeq	r0, r0, r0
20010f5c:	fffe0000 			; <UNDEFINED> instruction: 0xfffe0000
20010f60:	ffc000ff 			; <UNDEFINED> instruction: 0xffc000ff
20010f64:	1ff007ff 	svcne	0x00f007ff
20010f68:	00000000 	andeq	r0, r0, r0
20010f6c:	ffff0000 			; <UNDEFINED> instruction: 0xffff0000
20010f70:	ff8001ff 			; <UNDEFINED> instruction: 0xff8001ff
20010f74:	3ff007ff 	svccc	0x00f007ff
20010f78:	00000000 	andeq	r0, r0, r0
20010f7c:	ffffc000 			; <UNDEFINED> instruction: 0xffffc000
20010f80:	ff8003ff 			; <UNDEFINED> instruction: 0xff8003ff
20010f84:	fff003e3 			; <UNDEFINED> instruction: 0xfff003e3
20010f88:	00000000 	andeq	r0, r0, r0
20010f8c:	ffffe000 			; <UNDEFINED> instruction: 0xffffe000
20010f90:	ff0007ff 			; <UNDEFINED> instruction: 0xff0007ff
20010f94:	fff801e0 			; <UNDEFINED> instruction: 0xfff801e0
20010f98:	00000003 	andeq	r0, r0, r3
20010f9c:	fffff000 			; <UNDEFINED> instruction: 0xfffff000
20010fa0:	fc000fff 	stc2	15, cr0, [r0], {255}	; 0xff
20010fa4:	fff800e0 			; <UNDEFINED> instruction: 0xfff800e0
20010fa8:	0000001f 	andeq	r0, r0, pc, lsl r0
20010fac:	fffff800 	vcmla.f32	d31, d15, d0[0], #270
20010fb0:	60001fff 	strdvs	r1, [r0], -pc	; <UNPREDICTABLE>
20010fb4:	fff80020 			; <UNDEFINED> instruction: 0xfff80020
20010fb8:	0000003f 	andeq	r0, r0, pc, lsr r0
20010fbc:	fffff800 	vcmla.f32	d31, d15, d0[0], #270
20010fc0:	00001fff 	strdeq	r1, [r0], -pc	; <UNPREDICTABLE>
20010fc4:	fff80000 			; <UNDEFINED> instruction: 0xfff80000
20010fc8:	0000007f 	andeq	r0, r0, pc, ror r0
20010fcc:	fffffc00 			; <UNDEFINED> instruction: 0xfffffc00
20010fd0:	00003fff 	strdeq	r3, [r0], -pc	; <UNPREDICTABLE>
20010fd4:	fff80000 			; <UNDEFINED> instruction: 0xfff80000
20010fd8:	000000ff 	strdeq	r0, [r0], -pc	; <UNPREDICTABLE>
20010fdc:	fffffe00 			; <UNDEFINED> instruction: 0xfffffe00
20010fe0:	00003fff 	strdeq	r3, [r0], -pc	; <UNPREDICTABLE>
20010fe4:	fffc0000 			; <UNDEFINED> instruction: 0xfffc0000
20010fe8:	000007ff 	strdeq	r0, [r0], -pc	; <UNPREDICTABLE>
20010fec:	fffffe00 			; <UNDEFINED> instruction: 0xfffffe00
20010ff0:	00007f9f 	muleq	r0, pc, pc	; <UNPREDICTABLE>
20010ff4:	fffc0000 			; <UNDEFINED> instruction: 0xfffc0000
20010ff8:	000007ff 	strdeq	r0, [r0], -pc	; <UNPREDICTABLE>
20010ffc:	ffffff00 			; <UNDEFINED> instruction: 0xffffff00
20011000:	0001ff0f 	andeq	pc, r1, pc, lsl #30
20011004:	fffc0000 			; <UNDEFINED> instruction: 0xfffc0000
20011008:	000007ff 	strdeq	r0, [r0], -pc	; <UNPREDICTABLE>
2001100c:	ffffff00 			; <UNDEFINED> instruction: 0xffffff00
20011010:	0003fe07 	andeq	pc, r3, r7, lsl #28
20011014:	fffc0000 			; <UNDEFINED> instruction: 0xfffc0000
20011018:	000007ff 	strdeq	r0, [r0], -pc	; <UNPREDICTABLE>
2001101c:	ffffff80 			; <UNDEFINED> instruction: 0xffffff80
20011020:	0007fe07 	andeq	pc, r7, r7, lsl #28
20011024:	fffe0000 			; <UNDEFINED> instruction: 0xfffe0000
20011028:	000007ff 	strdeq	r0, [r0], -pc	; <UNPREDICTABLE>
2001102c:	ffffff80 			; <UNDEFINED> instruction: 0xffffff80
20011030:	000ff807 	andeq	pc, pc, r7, lsl #16
20011034:	fffe0000 			; <UNDEFINED> instruction: 0xfffe0000
20011038:	00000fff 	strdeq	r0, [r0], -pc	; <UNPREDICTABLE>
2001103c:	ffffffc0 			; <UNDEFINED> instruction: 0xffffffc0
20011040:	003fc003 	eorseq	ip, pc, r3
20011044:	ffff0000 			; <UNDEFINED> instruction: 0xffff0000
20011048:	00000fff 	strdeq	r0, [r0], -pc	; <UNPREDICTABLE>
2001104c:	ffffffc0 			; <UNDEFINED> instruction: 0xffffffc0
20011050:	007e0003 	rsbseq	r0, lr, r3
20011054:	ffff8000 			; <UNDEFINED> instruction: 0xffff8000
20011058:	00001fff 	strdeq	r1, [r0], -pc	; <UNPREDICTABLE>
2001105c:	ffffffe0 			; <UNDEFINED> instruction: 0xffffffe0
20011060:	01f80001 	mvnseq	r0, r1
20011064:	ffffc000 			; <UNDEFINED> instruction: 0xffffc000
20011068:	00000fff 	strdeq	r0, [r0], -pc	; <UNPREDICTABLE>

2001106c <game_over_witch2_light_bits>:
	...
200111a4:	0000007c 	andeq	r0, r0, ip, ror r0
	...
200111b0:	fc000000 	stc2	0, cr0, [r0], {-0}
200111b4:	0000001f 	andeq	r0, r0, pc, lsl r0
	...
200111c0:	fc000000 	stc2	0, cr0, [r0], {-0}
200111c4:	00000007 	andeq	r0, r0, r7
	...
200111d0:	fc000000 	stc2	0, cr0, [r0], {-0}
200111d4:	00000007 	andeq	r0, r0, r7
	...
200111e0:	70000000 	andvc	r0, r0, r0
200111e4:	00030001 	andeq	r0, r3, r1
	...
200111f0:	c0000000 	andgt	r0, r0, r0
200111f4:	00078000 	andeq	r8, r7, r0
	...
20011200:	e0003000 	and	r3, r0, r0
20011204:	00078003 	andeq	r8, r7, r3
	...
20011210:	e0003800 	and	r3, r0, r0, lsl #16
20011214:	000f4007 	andeq	r4, pc, r7
	...
20011220:	e0001c00 	and	r1, r0, r0, lsl #24
20011224:	000f300f 	andeq	r3, pc, pc
	...
20011230:	f0001f00 			; <UNDEFINED> instruction: 0xf0001f00
20011234:	001f3fdf 			; <UNDEFINED> instruction: 0x001f3fdf
	...
20011240:	f0000f80 			; <UNDEFINED> instruction: 0xf0000f80
20011244:	001f1bbe 			; <UNDEFINED> instruction: 0x001f1bbe
	...
20011250:	f0001fc0 			; <UNDEFINED> instruction: 0xf0001fc0
20011254:	001f177f 	andseq	r1, pc, pc, ror r7	; <UNPREDICTABLE>
	...
20011260:	fc007ff0 	stc2	15, cr7, [r0], {240}	; 0xf0
20011264:	001f8f7f 	andseq	r8, pc, pc, ror pc	; <UNPREDICTABLE>
	...
20011270:	7fe1f7f0 	svcvc	0x00e1f7f0
20011274:	000f8eff 	strdeq	r8, [pc], -pc	; <UNPREDICTABLE>
	...
20011280:	7fffeff0 	svcvc	0x00ffeff0
20011284:	000f86ff 	strdeq	r8, [pc], -pc	; <UNPREDICTABLE>
	...
20011290:	7fffcff0 	svcvc	0x00ffcff0
20011294:	000d85ff 	strdeq	r8, [sp], -pc	; <UNPREDICTABLE>
	...
200112a0:	fdff9ff0 	ldc2l	15, cr9, [pc, #960]!	; 20011668 <game_over_witch3_black_bits+0x1fc>
200112a4:	000581fe 	strdeq	r8, [r5], -lr
	...
200112b0:	fbff1ff0 	blx	1ffd927a <startup-0x26d86>
200112b4:	000681ff 	strdeq	r8, [r6], -pc	; <UNPREDICTABLE>
	...
200112c0:	fbfc3fe0 	blx	1ff2124a <startup-0xdedb6>
200112c4:	000281ff 	strdeq	r8, [r2], -pc	; <UNPREDICTABLE>
	...
200112d0:	e7f03fe0 	ldrb	r3, [r0, r0, ror #31]!
200112d4:	00038003 	andeq	r8, r3, r3
	...
200112e0:	1fc07fc0 	svcne	0x00c07fc0
200112e4:	00038000 	andeq	r8, r3, r0
	...
200112f0:	00007fc0 	andeq	r7, r0, r0, asr #31
200112f4:	0001c000 	andeq	ip, r1, r0
	...
20011300:	0000ffc0 	andeq	pc, r0, r0, asr #31
20011304:	0001c000 	andeq	ip, r1, r0
	...
20011310:	0000ff80 	andeq	pc, r0, r0, lsl #31
20011314:	0001c000 	andeq	ip, r1, r0
	...
20011320:	0001ff80 	andeq	pc, r1, r0, lsl #31
20011324:	0001c000 	andeq	ip, r1, r0
	...
20011330:	0003ff00 	andeq	pc, r3, r0, lsl #30
20011334:	0001c000 	andeq	ip, r1, r0
	...
20011340:	0007ff00 	andeq	pc, r7, r0, lsl #30
20011344:	0001e000 	andeq	lr, r1, r0
	...
20011350:	000fee00 	andeq	lr, pc, r0, lsl #28
20011354:	0001a000 	andeq	sl, r1, r0
	...
20011360:	001fde00 	andseq	sp, pc, r0, lsl #28
20011364:	0001b000 	andeq	fp, r1, r0
	...
20011370:	003fbc00 	eorseq	fp, pc, r0, lsl #24
20011374:	0001b000 	andeq	fp, r1, r0
	...
20011380:	003f7800 	eorseq	r7, pc, r0, lsl #16
20011384:	0001b800 	andeq	fp, r1, r0, lsl #16
	...
20011390:	007ef000 	rsbseq	pc, lr, r0
20011394:	0000bc00 	andeq	fp, r0, r0, lsl #24
	...
200113a0:	00ffe000 	rscseq	lr, pc, r0
200113a4:	0000fe00 	andeq	pc, r0, r0, lsl #28
	...
200113b0:	03ffc000 	mvnseq	ip, #0
200113b4:	0000ff00 	andeq	pc, r0, r0, lsl #30
	...
200113c0:	1fff8000 	svcne	0x00ff8000
200113c4:	0000ffc0 	andeq	pc, r0, r0, asr #31
	...
200113d0:	ffdf0000 			; <UNDEFINED> instruction: 0xffdf0000
200113d4:	0000f9f8 	strdeq	pc, [r0], -r8
	...
200113e0:	ffbe0000 			; <UNDEFINED> instruction: 0xffbe0000
200113e4:	0000f7ff 	strdeq	pc, [r0], -pc	; <UNPREDICTABLE>
	...
200113f0:	fe780000 	cdp2	0, 7, cr0, cr8, cr0, {0}
200113f4:	000077ff 	strdeq	r7, [r0], -pc	; <UNPREDICTABLE>
	...
20011400:	e1e00000 	mvn	r0, r0
20011404:	000077ff 	strdeq	r7, [r0], -pc	; <UNPREDICTABLE>
	...
20011410:	1f800000 	svcne	0x00800000
20011414:	00007bff 	strdeq	r7, [r0], -pc	; <UNPREDICTABLE>
	...
20011420:	fe000000 	cdp2	0, 0, cr0, cr0, cr0, {0}
20011424:	00007fff 	strdeq	r7, [r0], -pc	; <UNPREDICTABLE>
	...
20011430:	f8000000 			; <UNDEFINED> instruction: 0xf8000000
20011434:	00001fff 	strdeq	r1, [r0], -pc	; <UNPREDICTABLE>
	...
20011440:	e0000000 	and	r0, r0, r0
20011444:	000007ff 	strdeq	r0, [r0], -pc	; <UNPREDICTABLE>
	...
20011454:	000001ff 	strdeq	r0, [r0], -pc	; <UNPREDICTABLE>
	...
20011464:	00000070 	andeq	r0, r0, r0, ror r0
20011468:	00000000 	andeq	r0, r0, r0

2001146c <game_over_witch3_black_bits>:
2001146c:	00000000 	andeq	r0, r0, r0
20011470:	1f800018 	svcne	0x00800018
	...
20011480:	7e000004 	cdpvc	0, 0, cr0, cr0, cr4, {0}
	...
20011490:	f8000002 			; <UNDEFINED> instruction: 0xf8000002
20011494:	00000001 	andeq	r0, r0, r1
20011498:	00000000 	andeq	r0, r0, r0
2001149c:	80000000 	andhi	r0, r0, r0
200114a0:	f0000001 			; <UNDEFINED> instruction: 0xf0000001
200114a4:	00000007 	andeq	r0, r0, r7
200114a8:	00000000 	andeq	r0, r0, r0
200114ac:	40000000 	andmi	r0, r0, r0
200114b0:	e0000000 	and	r0, r0, r0
200114b4:	0000001f 	andeq	r0, r0, pc, lsl r0
200114b8:	00000000 	andeq	r0, r0, r0
200114bc:	30000000 	andcc	r0, r0, r0
200114c0:	c0000000 	andgt	r0, r0, r0
200114c4:	0000007f 	andeq	r0, r0, pc, ror r0
200114c8:	00000000 	andeq	r0, r0, r0
200114cc:	08000000 	stmdaeq	r0, {}	; <UNPREDICTABLE>
200114d0:	80000000 	andhi	r0, r0, r0
200114d4:	000001ff 	strdeq	r0, [r0], -pc	; <UNPREDICTABLE>
200114d8:	00000000 	andeq	r0, r0, r0
200114dc:	04000000 	streq	r0, [r0], #-0
200114e0:	80000000 	andhi	r0, r0, r0
200114e4:	000003ff 	strdeq	r0, [r0], -pc	; <UNPREDICTABLE>
200114e8:	00000000 	andeq	r0, r0, r0
200114ec:	02000000 	andeq	r0, r0, #0
200114f0:	000003f8 	strdeq	r0, [r0], -r8
200114f4:	00000fff 	strdeq	r0, [r0], -pc	; <UNPREDICTABLE>
200114f8:	00000000 	andeq	r0, r0, r0
200114fc:	01000000 	mrseq	r0, (UNDEF: 0)
20011500:	000007fc 	strdeq	r0, [r0], -ip
20011504:	00001fff 	strdeq	r1, [r0], -pc	; <UNPREDICTABLE>
20011508:	00000000 	andeq	r0, r0, r0
2001150c:	00800000 	addeq	r0, r0, r0
20011510:	00000ffc 	strdeq	r0, [r0], -ip
20011514:	00003ffe 	strdeq	r3, [r0], -lr
20011518:	00000000 	andeq	r0, r0, r0
2001151c:	00400000 	subeq	r0, r0, r0
20011520:	00000ffe 	strdeq	r0, [r0], -lr
20011524:	00007ffc 	strdeq	r7, [r0], -ip
20011528:	00000000 	andeq	r0, r0, r0
2001152c:	80400000 	subhi	r0, r0, r0
20011530:	e0001fff 	strd	r1, [r0], -pc	; <UNPREDICTABLE>
20011534:	0000ffff 	strdeq	pc, [r0], -pc	; <UNPREDICTABLE>
20011538:	00000000 	andeq	r0, r0, r0
2001153c:	c0200000 	eorgt	r0, r0, r0
20011540:	f8003c1f 			; <UNDEFINED> instruction: 0xf8003c1f
20011544:	000fffff 	strdeq	pc, [pc], -pc	; <UNPREDICTABLE>
20011548:	00000000 	andeq	r0, r0, r0
2001154c:	e0100000 	ands	r0, r0, r0
20011550:	ff003c07 			; <UNDEFINED> instruction: 0xff003c07
20011554:	01ffffff 	ldrsheq	pc, [pc, #255]	; 2001165b <game_over_witch3_black_bits+0x1ef>	; <UNPREDICTABLE>
20011558:	00000000 	andeq	r0, r0, r0
2001155c:	e0100000 	ands	r0, r0, r0
20011560:	ffc01c01 			; <UNDEFINED> instruction: 0xffc01c01
20011564:	07ffffff 			; <UNDEFINED> instruction: 0x07ffffff
20011568:	00000000 	andeq	r0, r0, r0
2001156c:	f0080000 			; <UNDEFINED> instruction: 0xf0080000
20011570:	fff81e00 			; <UNDEFINED> instruction: 0xfff81e00
20011574:	0fffffff 	svceq	0x00ffffff
20011578:	00000000 	andeq	r0, r0, r0
2001157c:	f0080000 			; <UNDEFINED> instruction: 0xf0080000
20011580:	fffe0e00 			; <UNDEFINED> instruction: 0xfffe0e00
20011584:	1ffffe3f 	svcne	0x00fffe3f
20011588:	00000000 	andeq	r0, r0, r0
2001158c:	78080000 	stmdavc	r8, {}	; <UNPREDICTABLE>
20011590:	ffff8f00 			; <UNDEFINED> instruction: 0xffff8f00
20011594:	3ffe0310 	svccc	0x00fe0310
20011598:	00000000 	andeq	r0, r0, r0
2001159c:	3c100000 	ldccc	0, cr0, [r0], {-0}
200115a0:	3fffff00 	svccc	0x00ffff00
200115a4:	7ff23994 	svcvc	0x00f23994
200115a8:	00000000 	andeq	r0, r0, r0
200115ac:	1c100000 	ldcne	0, cr0, [r0], {-0}
200115b0:	fc3fff80 	ldc2	15, cr15, [pc], #-512	; 200113b8 <game_over_witch2_light_bits+0x34c>
200115b4:	fff247fe 			; <UNDEFINED> instruction: 0xfff247fe
200115b8:	00000000 	andeq	r0, r0, r0
200115bc:	1c100000 	ldcne	0, cr0, [r0], {-0}
200115c0:	ffcfffc0 			; <UNDEFINED> instruction: 0xffcfffc0
200115c4:	ffe15c01 			; <UNDEFINED> instruction: 0xffe15c01
200115c8:	00000000 	andeq	r0, r0, r0
200115cc:	0c100000 	ldceq	0, cr0, [r0], {-0}
200115d0:	8023ffc0 	eorhi	pc, r3, r0, asr #31
200115d4:	ffe0f000 			; <UNDEFINED> instruction: 0xffe0f000
200115d8:	00000001 	andeq	r0, r0, r1
200115dc:	06100000 	ldreq	r0, [r0], -r0
200115e0:	8790ffe0 	ldrhi	pc, [r0, r0, ror #31]
200115e4:	ffe0c000 			; <UNDEFINED> instruction: 0xffe0c000
200115e8:	00000003 	andeq	r0, r0, r3
200115ec:	06200000 	strteq	r0, [r0], -r0
200115f0:	88687fd0 	stmdahi	r8!, {r4, r6, r7, r8, r9, sl, fp, ip, sp, lr}^
200115f4:	ffe30000 			; <UNDEFINED> instruction: 0xffe30000
200115f8:	00000007 	andeq	r0, r0, r7
200115fc:	02200000 	eoreq	r0, r0, #0
20011600:	90283fe8 	eorls	r3, r8, r8, ror #31
20011604:	ffe40000 			; <UNDEFINED> instruction: 0xffe40000
20011608:	0000000f 	andeq	r0, r0, pc
2001160c:	03e00000 	mvneq	r0, #0
20011610:	91940ff8 			; <UNDEFINED> instruction: 0x91940ff8
20011614:	ffe82000 			; <UNDEFINED> instruction: 0xffe82000
20011618:	0000001f 	andeq	r0, r0, pc, lsl r0
2001161c:	00000000 	andeq	r0, r0, r0
20011620:	939407fc 	orrsls	r0, r4, #252, 14	; 0x3f00000
20011624:	fff04020 			; <UNDEFINED> instruction: 0xfff04020
20011628:	0000003f 	andeq	r0, r0, pc, lsr r0
2001162c:	00000000 	andeq	r0, r0, r0
20011630:	931403fe 	tstls	r4, #-134217725	; 0xf8000003
20011634:	ffe000c0 			; <UNDEFINED> instruction: 0xffe000c0
20011638:	0000007f 	andeq	r0, r0, pc, ror r0
2001163c:	00000000 	andeq	r0, r0, r0
20011640:	983401ff 	ldmdals	r4!, {r0, r1, r2, r3, r4, r5, r6, r7, r8}
20011644:	ffe00100 			; <UNDEFINED> instruction: 0xffe00100
20011648:	0000007f 	andeq	r0, r0, pc, ror r0
2001164c:	80000000 	andhi	r0, r0, r0
20011650:	67c200ff 			; <UNDEFINED> instruction: 0x67c200ff
20011654:	ffe00000 			; <UNDEFINED> instruction: 0xffe00000
20011658:	000000ff 	strdeq	r0, [r0], -pc	; <UNPREDICTABLE>
2001165c:	c0000000 	andgt	r0, r0, r0
20011660:	180200ff 	stmdane	r2, {r0, r1, r2, r3, r4, r5, r6, r7}
20011664:	ffe3e000 			; <UNDEFINED> instruction: 0xffe3e000
20011668:	00000003 	andeq	r0, r0, r3
2001166c:	e0000000 	and	r0, r0, r0
20011670:	0782007f 			; <UNDEFINED> instruction: 0x0782007f
20011674:	181c5c00 	ldmdane	ip, {sl, fp, ip, lr}
20011678:	00000000 	andeq	r0, r0, r0
2001167c:	f0000000 			; <UNDEFINED> instruction: 0xf0000000
20011680:	007a003f 	rsbseq	r0, sl, pc, lsr r0
20011684:	00106302 	andseq	r6, r0, r2, lsl #6
20011688:	00000000 	andeq	r0, r0, r0
2001168c:	f8000000 			; <UNDEFINED> instruction: 0xf8000000
20011690:	0007001f 	andeq	r0, r7, pc, lsl r0
20011694:	0010b084 	andseq	fp, r0, r4, lsl #1
20011698:	00000000 	andeq	r0, r0, r0
2001169c:	f8000000 			; <UNDEFINED> instruction: 0xf8000000
200116a0:	0000000f 	andeq	r0, r0, pc
200116a4:	0008bc44 	andeq	fp, r8, r4, asr #24
200116a8:	00000000 	andeq	r0, r0, r0
200116ac:	fc000000 	stc2	0, cr0, [r0], {-0}
200116b0:	00030013 	andeq	r0, r3, r3, lsl r0
200116b4:	0008b238 	andeq	fp, r8, r8, lsr r2
200116b8:	00000000 	andeq	r0, r0, r0
200116bc:	fc000000 	stc2	0, cr0, [r0], {-0}
200116c0:	001c8011 	andseq	r8, ip, r1, lsl r0
200116c4:	00086980 	andeq	r6, r8, r0, lsl #19
200116c8:	00000000 	andeq	r0, r0, r0
200116cc:	fe000000 	cdp2	0, 0, cr0, cr0, cr0, {0}
200116d0:	03e88021 	mvneq	r8, #33	; 0x21
200116d4:	3ffc0860 	svccc	0x00fc0860
200116d8:	00000000 	andeq	r0, r0, r0
200116dc:	fe000000 	cdp2	0, 0, cr0, cr0, cr0, {0}
200116e0:	fc104060 	ldc2	0, cr4, [r0], {96}	; 0x60
200116e4:	c004085f 	andgt	r0, r4, pc, asr r8
200116e8:	00000003 	andeq	r0, r0, r3
200116ec:	7f000000 	svcvc	0x00000000
200116f0:	002000f8 	strdeq	r0, [r0], -r8	; <UNPREDICTABLE>
200116f4:	00040444 	andeq	r0, r4, r4, asr #8
200116f8:	0000003c 	andeq	r0, r0, ip, lsr r0
200116fc:	3f000000 	svccc	0x00000000
20011700:	004000f6 	strdeq	r0, [r0], #-6
20011704:	00040424 	andeq	r0, r4, r4, lsr #8
20011708:	000007c0 	andeq	r0, r0, r0, asr #15
2001170c:	df000000 	svcle	0x00000000
20011710:	008001e1 	addeq	r0, r0, r1, ror #3
20011714:	00020434 	andeq	r0, r2, r4, lsr r4
20011718:	0000f800 	andeq	pc, r0, r0, lsl #16
2001171c:	3f800000 	svccc	0x00800000
20011720:	010001e0 	smlatteq	r0, r0, r1, r0
20011724:	00020418 	andeq	r0, r2, r8, lsl r4
20011728:	007f0000 	rsbseq	r0, pc, r0
2001172c:	0f800000 	svceq	0x00800000
20011730:	010003c0 	smlabteq	r0, r0, r3, r0
20011734:	e0024400 	and	r4, r2, r0, lsl #8
20011738:	ff800001 			; <UNDEFINED> instruction: 0xff800001
2001173c:	07800000 	streq	r0, [r0, r0]
20011740:	020803c0 	andeq	r0, r8, #192, 6
20011744:	fffa4800 	vcmla.f32	d20, d10, d0[0], #270
20011748:	000007ff 	strdeq	r0, [r0], -pc	; <UNPREDICTABLE>
2001174c:	03800000 	orreq	r0, r0, #0
20011750:	02100780 	andseq	r0, r0, #128, 14	; 0x2000000
20011754:	fffe8800 	vcmla.f32	d24, d14, d0[0], #270
20011758:	00001fff 	strdeq	r1, [r0], -pc	; <UNPREDICTABLE>
2001175c:	01c00000 	biceq	r0, r0, r0
20011760:	04100780 	ldreq	r0, [r0], #-1920	; 0xfffff880
20011764:	fffc9000 			; <UNDEFINED> instruction: 0xfffc9000
20011768:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
2001176c:	00c00000 	sbceq	r0, r0, r0
20011770:	04200700 	strteq	r0, [r0], #-1792	; 0xfffff900
20011774:	fffc9000 			; <UNDEFINED> instruction: 0xfffc9000
20011778:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
2001177c:	00200000 	eoreq	r0, r0, r0
20011780:	08200e00 	stmdaeq	r0!, {r9, sl, fp}
20011784:	fffc1000 			; <UNDEFINED> instruction: 0xfffc1000
20011788:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
2001178c:	00100000 	andseq	r0, r0, r0
20011790:	10400e00 	subne	r0, r0, r0, lsl #28
20011794:	fffc1000 			; <UNDEFINED> instruction: 0xfffc1000
20011798:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
2001179c:	00080000 	andeq	r0, r8, r0
200117a0:	20c01c00 	sbccs	r1, r0, r0, lsl #24
200117a4:	fffc1000 			; <UNDEFINED> instruction: 0xfffc1000
200117a8:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
200117ac:	00040000 	andeq	r0, r4, r0
200117b0:	20003800 	andcs	r3, r0, r0, lsl #16
200117b4:	fffc1000 			; <UNDEFINED> instruction: 0xfffc1000
200117b8:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
200117bc:	00020000 	andeq	r0, r2, r0
200117c0:	4000f800 	andmi	pc, r0, r0, lsl #16
200117c4:	fffc1000 			; <UNDEFINED> instruction: 0xfffc1000
200117c8:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
200117cc:	00010000 	andeq	r0, r1, r0
200117d0:	8001f000 	andhi	pc, r1, r0
200117d4:	fffc9000 			; <UNDEFINED> instruction: 0xfffc9000
200117d8:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
200117dc:	00008000 	andeq	r8, r0, r0
200117e0:	8403e000 	strhi	lr, [r3], #-0
200117e4:	fffc90c0 			; <UNDEFINED> instruction: 0xfffc90c0
200117e8:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
200117ec:	00008000 	andeq	r8, r0, r0
200117f0:	1807e000 	stmdane	r7, {sp, lr, pc}
200117f4:	fff88921 			; <UNDEFINED> instruction: 0xfff88921
200117f8:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
200117fc:	00008000 	andeq	r8, r0, r0
20011800:	001fc000 	andseq	ip, pc, r0
20011804:	fff80921 			; <UNDEFINED> instruction: 0xfff80921
20011808:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
2001180c:	00004000 	andeq	r4, r0, r0
20011810:	007fc000 	rsbseq	ip, pc, r0
20011814:	fff81726 			; <UNDEFINED> instruction: 0xfff81726
20011818:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
2001181c:	00004000 	andeq	r4, r0, r0
20011820:	01ff8000 	mvnseq	r8, r0
20011824:	fff86df8 			; <UNDEFINED> instruction: 0xfff86df8
20011828:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
2001182c:	00004000 	andeq	r4, r0, r0
20011830:	07ff0000 	ldrbeq	r0, [pc, r0]!
20011834:	fff84000 			; <UNDEFINED> instruction: 0xfff84000
20011838:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
2001183c:	00004000 	andeq	r4, r0, r0
20011840:	1fff0000 	svcne	0x00ff0000
20011844:	fffc2000 			; <UNDEFINED> instruction: 0xfffc2000
20011848:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
2001184c:	00002000 	andeq	r2, r0, r0
20011850:	7fff8000 	svcvc	0x00ff8000
20011854:	fffc0000 			; <UNDEFINED> instruction: 0xfffc0000
20011858:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
2001185c:	00002000 	andeq	r2, r0, r0
20011860:	ffff8000 			; <UNDEFINED> instruction: 0xffff8000
20011864:	fffc0001 			; <UNDEFINED> instruction: 0xfffc0001
20011868:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff

2001186c <game_over_witch3_gray_bits>:
2001186c:	00000000 	andeq	r0, r0, r0
20011870:	007fffe0 	rsbseq	pc, pc, r0, ror #31
	...
20011880:	01fffff8 	ldrsheq	pc, [pc, #248]	; 20011980 <game_over_witch3_gray_bits+0x114>	; <UNPREDICTABLE>
	...
20011890:	07fffffc 			; <UNDEFINED> instruction: 0x07fffffc
	...
200118a0:	0ffffffe 	svceq	0x00fffffe
	...
200118ac:	80000000 	andhi	r0, r0, r0
200118b0:	1fffffff 	svcne	0x00ffffff
	...
200118bc:	c0000000 	andgt	r0, r0, r0
200118c0:	3fffffff 	svccc	0x00ffffff
	...
200118cc:	f0000000 			; <UNDEFINED> instruction: 0xf0000000
200118d0:	7fffffff 	svcvc	0x00ffffff
	...
200118dc:	f8000000 			; <UNDEFINED> instruction: 0xf8000000
200118e0:	7fffffff 	svcvc	0x00ffffff
	...
200118ec:	fc000000 	stc2	0, cr0, [r0], {-0}
200118f0:	fffffc07 			; <UNDEFINED> instruction: 0xfffffc07
	...
200118fc:	fe000000 	cdp2	0, 0, cr0, cr0, cr0, {0}
20011900:	fffff803 	vcmla.f32	d31, d15, d3[0], #270
	...
2001190c:	ff000000 			; <UNDEFINED> instruction: 0xff000000
20011910:	fffff003 			; <UNDEFINED> instruction: 0xfffff003
20011914:	00000001 	andeq	r0, r0, r1
20011918:	00000000 	andeq	r0, r0, r0
2001191c:	ff800000 			; <UNDEFINED> instruction: 0xff800000
20011920:	fffff001 			; <UNDEFINED> instruction: 0xfffff001
20011924:	00000003 	andeq	r0, r0, r3
20011928:	00000000 	andeq	r0, r0, r0
2001192c:	7f800000 	svcvc	0x00800000
20011930:	1fffe000 	svcne	0x00ffe000
	...
2001193c:	3fc00000 	svccc	0x00c00000
20011940:	07ffc000 	ldrbeq	ip, [pc, r0]!
	...
2001194c:	1fe00000 	svcne	0x00e00000
20011950:	00ffc000 	rscseq	ip, pc, r0
	...
2001195c:	1fe00000 	svcne	0x00e00000
20011960:	003fe000 	eorseq	lr, pc, r0
	...
2001196c:	0ff00000 	svceq	0x00f00000	; IMB
20011970:	0007e000 	andeq	lr, r7, r0
	...
2001197c:	0ff00000 	svceq	0x00f00000	; IMB
20011980:	0001f000 	andeq	pc, r1, r0
	...
2001198c:	07f00000 	ldrbeq	r0, [r0, r0]!
20011990:	00007000 	andeq	r7, r0, r0
	...
2001199c:	03e00000 	mvneq	r0, #0
	...
200119ac:	03e00000 	mvneq	r0, #0
200119b0:	00000000 	andeq	r0, r0, r0
200119b4:	00002800 	andeq	r2, r0, r0, lsl #16
200119b8:	00000000 	andeq	r0, r0, r0
200119bc:	03e00000 	mvneq	r0, #0
200119c0:	00000000 	andeq	r0, r0, r0
200119c4:	00002000 	andeq	r2, r0, r0
200119c8:	00000000 	andeq	r0, r0, r0
200119cc:	03e00000 	mvneq	r0, #0
	...
200119dc:	01e00000 	mvneq	r0, r0
	...
200119ec:	01c00000 	biceq	r0, r0, r0
200119f0:	07800020 	streq	r0, [r0, r0, lsr #32]
	...
200119fc:	01c00000 	biceq	r0, r0, r0
20011a00:	0cc00010 	stcleq	0, cr0, [r0], {16}
	...
20011a10:	0c600000 	stcleq	0, cr0, [r0], #-0
	...
20011a20:	0c600000 	stcleq	0, cr0, [r0], #-0
	...
20011a30:	0ce00000 	stcleq	0, cr0, [r0]
	...
20011a40:	07c00000 	strbeq	r0, [r0, r0]
	...
20011a74:	00002000 	andeq	r2, r0, r0
	...
20011ab4:	00000c00 	andeq	r0, r0, r0, lsl #24
	...
20011ac4:	00000600 	andeq	r0, r0, r0, lsl #12
	...
20011ad0:	00100000 	andseq	r0, r0, r0
20011ad4:	00000780 	andeq	r0, r0, r0, lsl #15
	...
20011ae0:	03e00000 	mvneq	r0, #0
20011ae4:	3ff80780 	svccc	0x00f80780
	...
20011af0:	ffc00000 			; <UNDEFINED> instruction: 0xffc00000
20011af4:	fff80383 			; <UNDEFINED> instruction: 0xfff80383
20011af8:	00000003 	andeq	r0, r0, r3
20011afc:	00000000 	andeq	r0, r0, r0
20011b00:	ff800008 			; <UNDEFINED> instruction: 0xff800008
20011b04:	fff803c3 			; <UNDEFINED> instruction: 0xfff803c3
20011b08:	0000003f 	andeq	r0, r0, pc, lsr r0
20011b0c:	00000000 	andeq	r0, r0, r0
20011b10:	ff00001e 			; <UNDEFINED> instruction: 0xff00001e
20011b14:	fffc03c3 			; <UNDEFINED> instruction: 0xfffc03c3
20011b18:	000007ff 	strdeq	r0, [r0], -pc	; <UNPREDICTABLE>
20011b1c:	c0000000 	andgt	r0, r0, r0
20011b20:	fe00001f 	mcr2	0, 0, r0, cr0, cr15, {0}
20011b24:	fffc03e7 			; <UNDEFINED> instruction: 0xfffc03e7
20011b28:	0000ffff 	strdeq	pc, [r0], -pc	; <UNPREDICTABLE>
20011b2c:	f0000000 			; <UNDEFINED> instruction: 0xf0000000
20011b30:	fe00003f 	mcr2	0, 0, r0, cr0, cr15, {1}
20011b34:	1ffc03ff 	svcne	0x00fc03ff
20011b38:	007ffffe 	ldrshteq	pc, [pc], #-254	; <UNPREDICTABLE>
20011b3c:	f8000000 			; <UNDEFINED> instruction: 0xf8000000
20011b40:	fc00003f 	stc2	0, cr0, [r0], {63}	; 0x3f
20011b44:	000407ff 	strdeq	r0, [r4], -pc	; <UNPREDICTABLE>
20011b48:	fffff800 	vcmla.f32	d31, d15, d0[0], #270
20011b4c:	fc000000 	stc2	0, cr0, [r0], {-0}
20011b50:	fc00007f 	stc2	0, cr0, [r0], {127}	; 0x7f
20011b54:	000007ff 	strdeq	r0, [r0], -pc	; <UNPREDICTABLE>
20011b58:	ffffe000 			; <UNDEFINED> instruction: 0xffffe000
20011b5c:	fe000000 	cdp2	0, 0, cr0, cr0, cr0, {0}
20011b60:	f800007f 			; <UNDEFINED> instruction: 0xf800007f
20011b64:	00000fff 	strdeq	r0, [r0], -pc	; <UNPREDICTABLE>
20011b68:	00000000 	andeq	r0, r0, r0
20011b6c:	ff000000 			; <UNDEFINED> instruction: 0xff000000
20011b70:	f80000ff 			; <UNDEFINED> instruction: 0xf80000ff
20011b74:	00000fff 	strdeq	r0, [r0], -pc	; <UNPREDICTABLE>
20011b78:	00000000 	andeq	r0, r0, r0
20011b7c:	ffc00000 			; <UNDEFINED> instruction: 0xffc00000
20011b80:	f00001ff 			; <UNDEFINED> instruction: 0xf00001ff
20011b84:	00000fff 	strdeq	r0, [r0], -pc	; <UNPREDICTABLE>
20011b88:	00000000 	andeq	r0, r0, r0
20011b8c:	ffe00000 			; <UNDEFINED> instruction: 0xffe00000
20011b90:	e00001ff 	strd	r0, [r0], -pc	; <UNPREDICTABLE>
20011b94:	00000fff 	strdeq	r0, [r0], -pc	; <UNPREDICTABLE>
20011b98:	00000000 	andeq	r0, r0, r0
20011b9c:	fff00000 			; <UNDEFINED> instruction: 0xfff00000	; IMB
20011ba0:	c00003ff 	strdgt	r0, [r0], -pc	; <UNPREDICTABLE>
20011ba4:	00000fff 	strdeq	r0, [r0], -pc	; <UNPREDICTABLE>
20011ba8:	00000000 	andeq	r0, r0, r0
20011bac:	fff80000 			; <UNDEFINED> instruction: 0xfff80000
20011bb0:	c00007ff 	strdgt	r0, [r0], -pc	; <UNPREDICTABLE>
20011bb4:	00000fff 	strdeq	r0, [r0], -pc	; <UNPREDICTABLE>
20011bb8:	00000000 	andeq	r0, r0, r0
20011bbc:	fffc0000 			; <UNDEFINED> instruction: 0xfffc0000
20011bc0:	800007ff 	strdhi	r0, [r0], -pc	; <UNPREDICTABLE>
20011bc4:	00000fff 	strdeq	r0, [r0], -pc	; <UNPREDICTABLE>
20011bc8:	00000000 	andeq	r0, r0, r0
20011bcc:	fffe0000 			; <UNDEFINED> instruction: 0xfffe0000
20011bd0:	00000fff 	strdeq	r0, [r0], -pc	; <UNPREDICTABLE>
20011bd4:	00000fff 	strdeq	r0, [r0], -pc	; <UNPREDICTABLE>
20011bd8:	00000000 	andeq	r0, r0, r0
20011bdc:	ffff0000 			; <UNDEFINED> instruction: 0xffff0000
20011be0:	00001fff 	strdeq	r1, [r0], -pc	; <UNPREDICTABLE>
20011be4:	00000f3f 	andeq	r0, r0, pc, lsr pc
20011be8:	00000000 	andeq	r0, r0, r0
20011bec:	ffff0000 			; <UNDEFINED> instruction: 0xffff0000
20011bf0:	00001fff 	strdeq	r1, [r0], -pc	; <UNPREDICTABLE>
20011bf4:	0000061e 	andeq	r0, r0, lr, lsl r6
20011bf8:	00000000 	andeq	r0, r0, r0
20011bfc:	ffff0000 			; <UNDEFINED> instruction: 0xffff0000
20011c00:	00003fff 	strdeq	r3, [r0], -pc	; <UNPREDICTABLE>
20011c04:	0000061e 	andeq	r0, r0, lr, lsl r6
20011c08:	00000000 	andeq	r0, r0, r0
20011c0c:	ffff8000 			; <UNDEFINED> instruction: 0xffff8000
20011c10:	00003fff 	strdeq	r3, [r0], -pc	; <UNPREDICTABLE>
20011c14:	00000018 	andeq	r0, r0, r8, lsl r0
20011c18:	00000000 	andeq	r0, r0, r0
20011c1c:	ffff8000 			; <UNDEFINED> instruction: 0xffff8000
20011c20:	00007fff 	strdeq	r7, [r0], -pc	; <UNPREDICTABLE>
	...
20011c2c:	ffff8000 			; <UNDEFINED> instruction: 0xffff8000
20011c30:	0000ffff 	strdeq	pc, [r0], -pc	; <UNPREDICTABLE>
	...
20011c3c:	ffff8000 			; <UNDEFINED> instruction: 0xffff8000
20011c40:	0000ffff 	strdeq	pc, [r0], -pc	; <UNPREDICTABLE>
	...
20011c4c:	ffffc000 			; <UNDEFINED> instruction: 0xffffc000
20011c50:	00007fff 	strdeq	r7, [r0], -pc	; <UNPREDICTABLE>
	...
20011c5c:	ffffc000 			; <UNDEFINED> instruction: 0xffffc000
20011c60:	00007fff 	strdeq	r7, [r0], -pc	; <UNPREDICTABLE>
	...

20011c6c <game_over_witch3_light_bits>:
	...
20011d84:	000001c0 	andeq	r0, r0, r0, asr #3
	...
20011d94:	000000ef 	andeq	r0, r0, pc, ror #1
	...
20011da0:	c0000000 	andgt	r0, r0, r0
20011da4:	000c006b 	andeq	r0, ip, fp, rrx
	...
20011db0:	03c00000 	biceq	r0, r0, #0
20011db4:	000c0001 	andeq	r0, ip, r1
	...
20011dc0:	00300000 	eorseq	r0, r0, r0
20011dc4:	001e03fe 			; <UNDEFINED> instruction: 0x001e03fe
	...
20011dd0:	001c0000 	andseq	r0, ip, r0
20011dd4:	001f0fff 			; <UNDEFINED> instruction: 0x001f0fff
	...
20011de0:	000f0000 	andeq	r0, pc, r0
20011de4:	001f3fff 			; <UNDEFINED> instruction: 0x001f3fff
	...
20011df0:	00078000 	andeq	r8, r7, r0
20011df4:	001cffff 			; <UNDEFINED> instruction: 0x001cffff
	...
20011e00:	0007c000 	andeq	ip, r7, r0
20011e04:	001bffff 			; <UNDEFINED> instruction: 0x001bffff
	...
20011e10:	0003f000 	andeq	pc, r3, r0
20011e14:	0017dfff 			; <UNDEFINED> instruction: 0x0017dfff
	...
20011e20:	0003f800 	andeq	pc, r3, r0, lsl #16
20011e24:	000fbfdf 	ldrdeq	fp, [pc], -pc	; <UNPREDICTABLE>
	...
20011e30:	0003fc00 	andeq	pc, r3, r0, lsl #24
20011e34:	001fff3f 	andseq	pc, pc, pc, lsr pc	; <UNPREDICTABLE>
	...
20011e40:	0003fe00 	andeq	pc, r3, r0, lsl #28
20011e44:	001ffeff 			; <UNDEFINED> instruction: 0x001ffeff
	...
20011e50:	8001ff00 	andhi	pc, r1, r0, lsl #30
20011e54:	001fffff 			; <UNDEFINED> instruction: 0x001fffff
	...
20011e60:	e001ff00 	and	pc, r1, r0, lsl #30
20011e64:	001c1fff 			; <UNDEFINED> instruction: 0x001c1fff
	...
20011e70:	f801ff80 			; <UNDEFINED> instruction: 0xf801ff80
20011e74:	000383ff 	strdeq	r8, [r3], -pc	; <UNPREDICTABLE>
	...
20011e80:	ff81ffc0 			; <UNDEFINED> instruction: 0xff81ffc0
20011e84:	000f9cfd 	strdeq	r9, [pc], -sp
	...
20011e90:	fff8ffe0 			; <UNDEFINED> instruction: 0xfff8ffe0
20011e94:	000f0f7b 	andeq	r0, pc, fp, ror pc	; <UNPREDICTABLE>
	...
20011ea0:	fffffff0 			; <UNDEFINED> instruction: 0xfffffff0
20011ea4:	000703bb 			; <UNDEFINED> instruction: 0x000703bb
	...
20011eb0:	fffcffe0 			; <UNDEFINED> instruction: 0xfffcffe0
20011eb4:	000701c7 	andeq	r0, r7, r7, asr #3
	...
20011ec0:	ffe37fe0 			; <UNDEFINED> instruction: 0xffe37fe0
20011ec4:	0007907f 	andeq	r9, r7, pc, ror r0
	...
20011ed0:	fc077fc0 	stc2	15, cr7, [r7], {192}	; 0xc0
20011ed4:	0003f01f 	andeq	pc, r3, pc, lsl r0	; <UNPREDICTABLE>
	...
20011ee0:	000fbf80 	andeq	fp, pc, r0, lsl #31
20011ee4:	0003f000 	andeq	pc, r3, r0
	...
20011ef0:	001fff00 	andseq	pc, pc, r0, lsl #30
20011ef4:	0003f800 	andeq	pc, r3, r0, lsl #16
	...
20011f00:	003fff00 	eorseq	pc, pc, r0, lsl #30
20011f04:	0003f800 	andeq	pc, r3, r0, lsl #16
	...
20011f10:	007ffe00 	rsbseq	pc, pc, r0, lsl #28
20011f14:	0001f800 	andeq	pc, r1, r0, lsl #16
	...
20011f20:	00fffe00 	rscseq	pc, pc, r0, lsl #28
20011f24:	0001f800 	andeq	pc, r1, r0, lsl #16
	...
20011f30:	00fffc00 	rscseq	pc, pc, r0, lsl #24
20011f34:	0001b800 	andeq	fp, r1, r0, lsl #16
	...
20011f40:	01f7fc00 	mvnseq	pc, r0, lsl #24
20011f44:	0001b000 	andeq	fp, r1, r0
	...
20011f50:	01eff800 	mvneq	pc, r0, lsl #16
20011f54:	00017000 	andeq	r7, r1, r0
	...
20011f60:	03eff800 	mvneq	pc, #0, 16
20011f64:	00036000 	andeq	r6, r3, r0
	...
20011f70:	03dff800 	bicseq	pc, pc, #0, 16
20011f74:	00036000 	andeq	r6, r3, r0
	...
20011f80:	07dff000 	ldrbeq	pc, [pc, r0]	; <UNPREDICTABLE>
20011f84:	0003e000 	andeq	lr, r3, r0
	...
20011f90:	0fbff000 	svceq	0x00bff000
20011f94:	0003e000 	andeq	lr, r3, r0
	...
20011fa0:	1f3fe000 	svcne	0x003fe000
20011fa4:	0003e000 	andeq	lr, r3, r0
	...
20011fb0:	1fffc000 	svcne	0x00ffc000
20011fb4:	0003e000 	andeq	lr, r3, r0
	...
20011fc0:	3fff0000 	svccc	0x00ff0000
20011fc4:	0003e000 	andeq	lr, r3, r0
	...
20011fd0:	7ffe0000 	svcvc	0x00fe0000
20011fd4:	00036000 	andeq	r6, r3, r0
	...
20011fe0:	7bfc0000 	blvc	1ff11fe8 <startup-0xee018>
20011fe4:	00036000 	andeq	r6, r3, r0
	...
20011ff0:	e7f80000 	ldrb	r0, [r8, r0]!
20011ff4:	00077000 	andeq	r7, r7, r0
	...
20012000:	ffe00000 			; <UNDEFINED> instruction: 0xffe00000
20012004:	0007f000 	andeq	pc, r7, r0
	...
20012010:	ff800000 			; <UNDEFINED> instruction: 0xff800000
20012014:	0007e801 	andeq	lr, r7, r1, lsl #16
	...
20012020:	fe000000 	cdp2	0, 0, cr0, cr0, cr0, {0}
20012024:	00079207 	andeq	r9, r7, r7, lsl #4
	...
20012030:	f8000000 			; <UNDEFINED> instruction: 0xf8000000
20012034:	0007bfff 	strdeq	fp, [r7], -pc	; <UNPREDICTABLE>
	...
20012040:	e0000000 	and	r0, r0, r0
20012044:	0003dfff 	strdeq	sp, [r3], -pc	; <UNPREDICTABLE>
	...
20012050:	80000000 	andhi	r0, r0, r0
20012054:	0003ffff 	strdeq	pc, [r3], -pc	; <UNPREDICTABLE>
	...
20012064:	0003fffe 	strdeq	pc, [r3], -lr
20012068:	00000000 	andeq	r0, r0, r0

2001206c <game_over_witch4_black_bits>:
2001206c:	00000000 	andeq	r0, r0, r0
20012070:	ffc0001c 			; <UNDEFINED> instruction: 0xffc0001c
20012074:	00000007 	andeq	r0, r0, r7
	...
20012080:	fe000007 	cdp2	0, 0, cr0, cr0, cr7, {0}
20012084:	0000001f 	andeq	r0, r0, pc, lsl r0
20012088:	00000000 	andeq	r0, r0, r0
2001208c:	e0000000 	and	r0, r0, r0
20012090:	fc000000 	stc2	0, cr0, [r0], {-0}
20012094:	0000003f 	andeq	r0, r0, pc, lsr r0
20012098:	00000000 	andeq	r0, r0, r0
2001209c:	3fe00000 	svccc	0x00e00000
200120a0:	f8000000 			; <UNDEFINED> instruction: 0xf8000000
200120a4:	000000ff 	strdeq	r0, [r0], -pc	; <UNPREDICTABLE>
200120a8:	00000000 	andeq	r0, r0, r0
200120ac:	003ff000 	eorseq	pc, pc, r0
200120b0:	e0000000 	and	r0, r0, r0
200120b4:	000003ff 	strdeq	r0, [r0], -pc	; <UNPREDICTABLE>
200120b8:	00000000 	andeq	r0, r0, r0
200120bc:	00001c00 	andeq	r1, r0, r0, lsl #24
200120c0:	80000000 	andhi	r0, r0, r0
200120c4:	000007ff 	strdeq	r0, [r0], -pc	; <UNPREDICTABLE>
200120c8:	00000000 	andeq	r0, r0, r0
200120cc:	00000600 	andeq	r0, r0, r0, lsl #12
200120d0:	00000000 	andeq	r0, r0, r0
200120d4:	00000fff 	strdeq	r0, [r0], -pc	; <UNPREDICTABLE>
200120d8:	00000000 	andeq	r0, r0, r0
200120dc:	00000200 	andeq	r0, r0, r0, lsl #4
200120e0:	00000000 	andeq	r0, r0, r0
200120e4:	00001ffe 	strdeq	r1, [r0], -lr
200120e8:	00000000 	andeq	r0, r0, r0
200120ec:	00000200 	andeq	r0, r0, r0, lsl #4
200120f0:	00000000 	andeq	r0, r0, r0
200120f4:	00003ffc 	strdeq	r3, [r0], -ip
200120f8:	00000000 	andeq	r0, r0, r0
200120fc:	00000200 	andeq	r0, r0, r0, lsl #4
20012100:	00000000 	andeq	r0, r0, r0
20012104:	00003ff8 	strdeq	r3, [r0], -r8
20012108:	00000000 	andeq	r0, r0, r0
2001210c:	00000200 	andeq	r0, r0, r0, lsl #4
20012110:	0000003f 	andeq	r0, r0, pc, lsr r0
20012114:	0000fff0 	strdeq	pc, [r0], -r0
20012118:	00000000 	andeq	r0, r0, r0
2001211c:	fffc0600 			; <UNDEFINED> instruction: 0xfffc0600
20012120:	000001ff 	strdeq	r0, [r0], -pc	; <UNPREDICTABLE>
20012124:	0001fff0 	strdeq	pc, [r1], -r0
20012128:	00000000 	andeq	r0, r0, r0
2001212c:	fffffc00 			; <UNDEFINED> instruction: 0xfffffc00
20012130:	000003ff 	strdeq	r0, [r0], -pc	; <UNPREDICTABLE>
20012134:	0001ffe0 	andeq	pc, r1, r0, ror #31
20012138:	00000000 	andeq	r0, r0, r0
2001213c:	fffff000 			; <UNDEFINED> instruction: 0xfffff000
20012140:	f8003fff 			; <UNDEFINED> instruction: 0xf8003fff
20012144:	0001ffff 	strdeq	pc, [r1], -pc	; <UNPREDICTABLE>
20012148:	00000000 	andeq	r0, r0, r0
2001214c:	ffffc000 			; <UNDEFINED> instruction: 0xffffc000
20012150:	fffcffff 			; <UNDEFINED> instruction: 0xfffcffff
20012154:	0007ffff 	strdeq	pc, [r7], -pc	; <UNPREDICTABLE>
20012158:	00000000 	andeq	r0, r0, r0
2001215c:	ffff8000 			; <UNDEFINED> instruction: 0xffff8000
20012160:	ffffffbf 			; <UNDEFINED> instruction: 0xffffffbf
20012164:	007fffff 	ldrshteq	pc, [pc], #-255	; <UNPREDICTABLE>
20012168:	00000000 	andeq	r0, r0, r0
2001216c:	ffff8000 			; <UNDEFINED> instruction: 0xffff8000
20012170:	ffffff83 			; <UNDEFINED> instruction: 0xffffff83
20012174:	01ffffff 	ldrsheq	pc, [pc, #255]	; 2001227b <game_over_witch4_black_bits+0x20f>	; <UNPREDICTABLE>
20012178:	00000000 	andeq	r0, r0, r0
2001217c:	01ff0000 	mvnseq	r0, r0
20012180:	fffffff0 			; <UNDEFINED> instruction: 0xfffffff0
20012184:	07ffffff 			; <UNDEFINED> instruction: 0x07ffffff
	...
20012190:	3ffffffe 	svccc	0x00fffffe
20012194:	0fffffe0 	svceq	0x00ffffe0
20012198:	00000000 	andeq	r0, r0, r0
2001219c:	80000000 	andhi	r0, r0, r0
200121a0:	007fffff 	ldrshteq	pc, [pc], #-255	; <UNPREDICTABLE>
200121a4:	1fffffc0 	svcne	0x00ffffc0
200121a8:	00000000 	andeq	r0, r0, r0
200121ac:	f8000000 			; <UNDEFINED> instruction: 0xf8000000
200121b0:	01cfffff 	strdeq	pc, [pc, #255]	; 200122b7 <game_over_witch4_black_bits+0x24b>
200121b4:	3ffffe70 	svccc	0x00fffe70
200121b8:	00000000 	andeq	r0, r0, r0
200121bc:	ff000000 			; <UNDEFINED> instruction: 0xff000000
200121c0:	0f03ffff 	svceq	0x0003ffff
200121c4:	7fffffb0 	svcvc	0x00ffffb0
200121c8:	00000000 	andeq	r0, r0, r0
200121cc:	ffe00000 			; <UNDEFINED> instruction: 0xffe00000
200121d0:	1e00ffff 	mcrne	15, 0, pc, cr0, cr15, {7}	; <UNPREDICTABLE>
200121d4:	ffffe0fc 			; <UNDEFINED> instruction: 0xffffe0fc
200121d8:	00000000 	andeq	r0, r0, r0
200121dc:	fff80000 			; <UNDEFINED> instruction: 0xfff80000
200121e0:	3ff03fff 	svccc	0x00f03fff
200121e4:	ffffc2f0 			; <UNDEFINED> instruction: 0xffffc2f0
200121e8:	00000001 	andeq	r0, r0, r1
200121ec:	ffff0000 			; <UNDEFINED> instruction: 0xffff0000
200121f0:	7ffc0fff 	svcvc	0x00fc0fff
200121f4:	ffffc780 			; <UNDEFINED> instruction: 0xffffc780
200121f8:	00000007 	andeq	r0, r0, r7
200121fc:	ffff8000 			; <UNDEFINED> instruction: 0xffff8000
20012200:	603701ff 	ldrshtvs	r0, [r7], -pc
20012204:	fffe9c00 			; <UNDEFINED> instruction: 0xfffe9c00
20012208:	0000000f 	andeq	r0, r0, pc
2001220c:	ffffc000 			; <UNDEFINED> instruction: 0xffffc000
20012210:	f019c07f 			; <UNDEFINED> instruction: 0xf019c07f
20012214:	fffeb000 			; <UNDEFINED> instruction: 0xfffeb000
20012218:	0000001f 	andeq	r0, r0, pc, lsl r0
2001221c:	ffffc000 			; <UNDEFINED> instruction: 0xffffc000
20012220:	9188603f 	orrls	r6, r8, pc, lsr r0
20012224:	fffcc000 			; <UNDEFINED> instruction: 0xfffcc000
20012228:	0000003f 	andeq	r0, r0, pc, lsr r0
2001222c:	ffffc000 			; <UNDEFINED> instruction: 0xffffc000
20012230:	91ec300f 	mvnls	r3, pc
20012234:	fffc8000 			; <UNDEFINED> instruction: 0xfffc8000
20012238:	0000003f 	andeq	r0, r0, pc, lsr r0
2001223c:	ffffc000 			; <UNDEFINED> instruction: 0xffffc000
20012240:	98e41807 	stmials	r4!, {r0, r1, r2, fp, ip}^
20012244:	fff88030 			; <UNDEFINED> instruction: 0xfff88030
20012248:	0000007f 	andeq	r0, r0, pc, ror r0
2001224c:	ffffc000 			; <UNDEFINED> instruction: 0xffffc000
20012250:	cce47907 			; <UNDEFINED> instruction: 0xcce47907
20012254:	fff98010 			; <UNDEFINED> instruction: 0xfff98010
20012258:	0000007f 	andeq	r0, r0, pc, ror r0
2001225c:	ffffc000 			; <UNDEFINED> instruction: 0xffffc000
20012260:	6704c187 	strvs	ip, [r4, -r7, lsl #3]
20012264:	fff90018 			; <UNDEFINED> instruction: 0xfff90018
20012268:	0000007f 	andeq	r0, r0, pc, ror r0
2001226c:	ffff8000 			; <UNDEFINED> instruction: 0xffff8000
20012270:	31ff86c7 	mvnscc	r8, r7, asr #13
20012274:	fffb0008 			; <UNDEFINED> instruction: 0xfffb0008
20012278:	0000007f 	andeq	r0, r0, pc, ror r0
2001227c:	ffff8000 			; <UNDEFINED> instruction: 0xffff8000
20012280:	1c0e0207 	sfmne	f0, 4, [lr], {7}
20012284:	fffa000c 			; <UNDEFINED> instruction: 0xfffa000c
20012288:	0000007f 	andeq	r0, r0, pc, ror r0
2001228c:	ffff8000 			; <UNDEFINED> instruction: 0xffff8000
20012290:	04380605 	ldrteq	r0, [r8], #-1541	; 0xfffff9fb
20012294:	fffa0006 			; <UNDEFINED> instruction: 0xfffa0006
20012298:	0000007f 	andeq	r0, r0, pc, ror r0
2001229c:	3fff0000 	svccc	0x00ff0000
200122a0:	03e00c04 	mvneq	r0, #4, 24	; 0x400
200122a4:	ffea0002 			; <UNDEFINED> instruction: 0xffea0002
200122a8:	0000007f 	andeq	r0, r0, pc, ror r0
200122ac:	9fff0000 	svcls	0x00ff0000
200122b0:	0180180f 	orreq	r1, r0, pc, lsl #16
200122b4:	ff0b0003 			; <UNDEFINED> instruction: 0xff0b0003
200122b8:	0000007f 	andeq	r0, r0, pc, ror r0
200122bc:	f7fe0000 			; <UNDEFINED> instruction: 0xf7fe0000
200122c0:	00007808 	andeq	r7, r0, r8, lsl #16
200122c4:	fc090001 	stc2	0, cr0, [r9], {1}
200122c8:	0000007f 	andeq	r0, r0, pc, ror r0
200122cc:	1ffc0000 	svcne	0x00fc0000
200122d0:	0001d008 	andeq	sp, r1, r8
200122d4:	e00d0001 	and	r0, sp, r1
200122d8:	0000007f 	andeq	r0, r0, pc, ror r0
200122dc:	07f80000 	ldrbeq	r0, [r8, r0]!
200122e0:	00033008 	andeq	r3, r3, r8
200122e4:	00058001 	andeq	r8, r5, r1
200122e8:	000003c0 	andeq	r0, r0, r0, asr #7
200122ec:	01f80000 	mvnseq	r0, r0
200122f0:	00062018 	andeq	r2, r6, r8, lsl r0
200122f4:	0004c001 	andeq	ip, r4, r1
200122f8:	00001e00 	andeq	r1, r0, r0, lsl #28
200122fc:	00700000 	rsbseq	r0, r0, r0
20012300:	007c6010 	rsbseq	r6, ip, r0, lsl r0
20012304:	00064001 	andeq	r4, r6, r1
20012308:	0001f000 	andeq	pc, r1, r0
2001230c:	001c0000 	andseq	r0, ip, r0
20012310:	00784010 	rsbseq	r4, r8, r0, lsl r0
20012314:	01fe6000 	mvnseq	r6, r0
20012318:	000f0000 	andeq	r0, pc, r0
2001231c:	00070000 	andeq	r0, r7, r0
20012320:	0050c020 	subseq	ip, r0, r0, lsr #32
20012324:	7ffe1800 	svcvc	0x00fe1800
20012328:	01f00000 	mvnseq	r0, r0
2001232c:	00018000 	andeq	r8, r1, r0
20012330:	00508020 	subseq	r8, r0, r0, lsr #32
20012334:	ffff0c00 			; <UNDEFINED> instruction: 0xffff0c00
20012338:	0f00003f 	svceq	0x0000003f
2001233c:	0000c000 	andeq	ip, r0, r0
20012340:	01d18440 	bicseq	r8, r1, r0, asr #8
20012344:	ffff0600 			; <UNDEFINED> instruction: 0xffff0600
20012348:	f80007ff 			; <UNDEFINED> instruction: 0xf80007ff
2001234c:	00006000 	andeq	r6, r0, r0
20012350:	03910440 	orrseq	r0, r1, #64, 8	; 0x40000000
20012354:	ffff0300 			; <UNDEFINED> instruction: 0xffff0300
20012358:	00007fff 	strdeq	r7, [r0], -pc	; <UNPREDICTABLE>
2001235c:	00002000 	andeq	r2, r0, r0
20012360:	06f60cc0 	ldrbteq	r0, [r6], r0, asr #25
20012364:	ffff4180 			; <UNDEFINED> instruction: 0xffff4180
20012368:	007fffff 	ldrshteq	pc, [pc], #-255	; <UNPREDICTABLE>
2001236c:	00001000 	andeq	r1, r0, r0
20012370:	04641880 	strbteq	r1, [r4], #-2176	; 0xfffff780
20012374:	ffff60c0 			; <UNDEFINED> instruction: 0xffff60c0
20012378:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
2001237c:	00000800 	andeq	r0, r0, r0, lsl #16
20012380:	0c083180 	stfeqs	f3, [r8], {128}	; 0x80
20012384:	ffff2060 			; <UNDEFINED> instruction: 0xffff2060
20012388:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
2001238c:	00000c00 	andeq	r0, r0, r0, lsl #24
20012390:	0818c3c0 	ldmdaeq	r8, {r6, r7, r8, r9, lr, pc}
20012394:	ffffb078 			; <UNDEFINED> instruction: 0xffffb078
20012398:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
2001239c:	00000600 	andeq	r0, r0, r0, lsl #12
200123a0:	083307e0 	ldmdaeq	r3!, {r5, r6, r7, r8, r9, sl}
200123a4:	ffff806c 			; <UNDEFINED> instruction: 0xffff806c
200123a8:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
200123ac:	00000300 	andeq	r0, r0, r0, lsl #6
200123b0:	d8e61fe0 	stmiale	r6!, {r5, r6, r7, r8, r9, sl, fp, ip}^
200123b4:	ffff803f 			; <UNDEFINED> instruction: 0xffff803f
200123b8:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
200123bc:	00000100 	andeq	r0, r0, r0, lsl #2
200123c0:	71803fe0 	orrvc	r3, r0, r0, ror #31
200123c4:	ffffc60c 			; <UNDEFINED> instruction: 0xffffc60c
200123c8:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
200123cc:	00000100 	andeq	r0, r0, r0, lsl #2
200123d0:	9e00ffc0 	cdpls	15, 0, cr15, cr0, cr0, {6}
200123d4:	ffffc5c7 			; <UNDEFINED> instruction: 0xffffc5c7
200123d8:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
200123dc:	00000080 	andeq	r0, r0, r0, lsl #1
200123e0:	f003ffe0 			; <UNDEFINED> instruction: 0xf003ffe0
200123e4:	ffffc160 			; <UNDEFINED> instruction: 0xffffc160
200123e8:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
200123ec:	00000080 	andeq	r0, r0, r0, lsl #1
200123f0:	000ffff0 	strdeq	pc, [pc], -r0
200123f4:	ffffc180 			; <UNDEFINED> instruction: 0xffffc180
200123f8:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
200123fc:	000000c0 	andeq	r0, r0, r0, asr #1
20012400:	041ffff8 	ldreq	pc, [pc], #-4088	; 20012408 <game_over_witch4_black_bits+0x39c>
20012404:	ffffc180 			; <UNDEFINED> instruction: 0xffffc180
20012408:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
2001240c:	00000040 	andeq	r0, r0, r0, asr #32
20012410:	7c7ffffc 	ldclvc	15, cr15, [pc], #-1008	; 20012028 <game_over_witch3_light_bits+0x3bc>
20012414:	ffffe100 			; <UNDEFINED> instruction: 0xffffe100
20012418:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
2001241c:	00000040 	andeq	r0, r0, r0, asr #32
20012420:	01fffffc 	ldrsheq	pc, [pc, #252]	; 20012524 <game_over_witch4_gray_bits+0xb8>	; <UNPREDICTABLE>
20012424:	fffff000 			; <UNDEFINED> instruction: 0xfffff000
20012428:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
2001242c:	00000060 	andeq	r0, r0, r0, rrx
20012430:	07fffffc 			; <UNDEFINED> instruction: 0x07fffffc
20012434:	fffff800 	vcmla.f32	d31, d15, d0[0], #270
20012438:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
2001243c:	00000020 	andeq	r0, r0, r0, lsr #32
20012440:	1ffffff8 	svcne	0x00fffff8
20012444:	fffffc00 			; <UNDEFINED> instruction: 0xfffffc00
20012448:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
2001244c:	00000020 	andeq	r0, r0, r0, lsr #32
20012450:	fffffff0 			; <UNDEFINED> instruction: 0xfffffff0
20012454:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
20012458:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
2001245c:	00000020 	andeq	r0, r0, r0, lsr #32
20012460:	fffffff0 			; <UNDEFINED> instruction: 0xfffffff0
20012464:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
20012468:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff

2001246c <game_over_witch4_gray_bits>:
2001246c:	00000000 	andeq	r0, r0, r0
20012470:	003fffe0 	eorseq	pc, pc, r0, ror #31
	...
20012480:	01fffff8 	ldrsheq	pc, [pc, #248]	; 20012580 <game_over_witch4_gray_bits+0x114>	; <UNPREDICTABLE>
	...
20012490:	03ffffff 	mvnseq	pc, #1020	; 0x3fc
	...
2001249c:	c0000000 	andgt	r0, r0, r0
200124a0:	07ffffff 			; <UNDEFINED> instruction: 0x07ffffff
	...
200124ac:	ffc00000 			; <UNDEFINED> instruction: 0xffc00000
200124b0:	1fffffff 	svcne	0x00ffffff
	...
200124bc:	ffffe000 			; <UNDEFINED> instruction: 0xffffe000
200124c0:	7fffffff 	svcvc	0x00ffffff
	...
200124cc:	fffff800 	vcmla.f32	d31, d15, d0[0], #270
200124d0:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
	...
200124dc:	fffffc00 			; <UNDEFINED> instruction: 0xfffffc00
200124e0:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
200124e4:	00000001 	andeq	r0, r0, r1
200124e8:	00000000 	andeq	r0, r0, r0
200124ec:	fffffc00 			; <UNDEFINED> instruction: 0xfffffc00
200124f0:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
200124f4:	00000003 	andeq	r0, r0, r3
200124f8:	00000000 	andeq	r0, r0, r0
200124fc:	fffffc00 			; <UNDEFINED> instruction: 0xfffffc00
20012500:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
20012504:	00000007 	andeq	r0, r0, r7
20012508:	00000000 	andeq	r0, r0, r0
2001250c:	fffffc00 			; <UNDEFINED> instruction: 0xfffffc00
20012510:	ffffffc0 			; <UNDEFINED> instruction: 0xffffffc0
20012514:	0000000f 	andeq	r0, r0, pc
20012518:	00000000 	andeq	r0, r0, r0
2001251c:	0003f800 	andeq	pc, r3, r0, lsl #16
20012520:	fffffe00 			; <UNDEFINED> instruction: 0xfffffe00
20012524:	0000000f 	andeq	r0, r0, pc
	...
20012530:	fffffc00 			; <UNDEFINED> instruction: 0xfffffc00
20012534:	0000001f 	andeq	r0, r0, pc, lsl r0
	...
20012540:	07ffc000 	ldrbeq	ip, [pc, r0]!
	...
20012550:	00030000 	andeq	r0, r3, r0
	...
200125d4:	00001f00 	andeq	r1, r0, r0, lsl #30
	...
200125e4:	00003100 	andeq	r3, r0, r0, lsl #2
	...
200125f4:	00003000 	andeq	r3, r0, r0
	...
20012600:	1fc00000 	svcne	0x00c00000
20012604:	00006000 	andeq	r6, r0, r0
	...
20012610:	0c600000 	stcleq	0, cr0, [r0], #-0
20012614:	00004000 	andeq	r4, r0, r0
	...
20012620:	0c700000 	ldcleq	0, cr0, [r0], #-0
	...
20012630:	0e100000 	cdpeq	0, 1, cr0, cr0, cr0, {0}
	...
20012640:	07180000 	ldreq	r0, [r8, -r0]
	...
20012650:	03180000 	tsteq	r8, #0
	...
20012660:	00f80000 	rscseq	r0, r8, r0
	...
200126a4:	00100000 	andseq	r0, r0, r0
	...
200126b4:	00f00000 	rscseq	r0, r0, r0
	...
200126c0:	00000007 	andeq	r0, r0, r7
200126c4:	03f00000 	mvnseq	r0, #0
200126c8:	00000000 	andeq	r0, r0, r0
200126cc:	e0000000 	and	r0, r0, r0
200126d0:	00002007 	andeq	r2, r0, r7
200126d4:	1ff00000 	svcne	0x00f00000	; IMB
200126d8:	00000000 	andeq	r0, r0, r0
200126dc:	f8000000 			; <UNDEFINED> instruction: 0xf8000000
200126e0:	0000c007 	andeq	ip, r0, r7
200126e4:	fff80000 			; <UNDEFINED> instruction: 0xfff80000
200126e8:	0000003f 	andeq	r0, r0, pc, lsr r0
200126ec:	fe000000 	cdp2	0, 0, cr0, cr0, cr0, {0}
200126f0:	0001c007 	andeq	ip, r1, r7
200126f4:	fff80000 			; <UNDEFINED> instruction: 0xfff80000
200126f8:	000001ff 	strdeq	r0, [r0], -pc	; <UNPREDICTABLE>
200126fc:	ff800000 			; <UNDEFINED> instruction: 0xff800000
20012700:	0003800f 	andeq	r8, r3, pc
20012704:	fff80000 			; <UNDEFINED> instruction: 0xfff80000
20012708:	00000fff 	strdeq	r0, [r0], -pc	; <UNPREDICTABLE>
2001270c:	ffe00000 			; <UNDEFINED> instruction: 0xffe00000
20012710:	0007800f 	andeq	r8, r7, pc
20012714:	fe000000 	cdp2	0, 0, cr0, cr0, cr0, {0}
20012718:	0000ffff 	strdeq	pc, [r0], -pc	; <UNPREDICTABLE>
2001271c:	fff80000 			; <UNDEFINED> instruction: 0xfff80000
20012720:	000f001f 	andeq	r0, pc, pc, lsl r0	; <UNPREDICTABLE>
20012724:	80000000 	andhi	r0, r0, r0
20012728:	000fffff 	strdeq	pc, [pc], -pc	; <UNPREDICTABLE>
2001272c:	fffe0000 			; <UNDEFINED> instruction: 0xfffe0000
20012730:	000f001f 	andeq	r0, pc, pc, lsl r0	; <UNPREDICTABLE>
20012734:	00000000 	andeq	r0, r0, r0
20012738:	00ffffc0 	rscseq	pc, pc, r0, asr #31
2001273c:	ffff0000 			; <UNDEFINED> instruction: 0xffff0000
20012740:	000e003f 	andeq	r0, lr, pc, lsr r0
20012744:	00000000 	andeq	r0, r0, r0
20012748:	07fff800 	ldrbeq	pc, [pc, r0, lsl #16]!	; <UNPREDICTABLE>
2001274c:	ffff8000 			; <UNDEFINED> instruction: 0xffff8000
20012750:	000e003f 	andeq	r0, lr, pc, lsr r0
20012754:	00000000 	andeq	r0, r0, r0
20012758:	ffff8000 			; <UNDEFINED> instruction: 0xffff8000
2001275c:	ffffc000 			; <UNDEFINED> instruction: 0xffffc000
20012760:	0108003f 	tsteq	r8, pc, lsr r0
20012764:	00000000 	andeq	r0, r0, r0
20012768:	ff800000 			; <UNDEFINED> instruction: 0xff800000
2001276c:	ffffe000 			; <UNDEFINED> instruction: 0xffffe000
20012770:	0398007f 	orrseq	r0, r8, #127	; 0x7f
	...
2001277c:	fffff000 			; <UNDEFINED> instruction: 0xfffff000
20012780:	03f0007f 	mvnseq	r0, #127	; 0x7f
	...
2001278c:	fffff000 			; <UNDEFINED> instruction: 0xfffff000
20012790:	07e0003f 			; <UNDEFINED> instruction: 0x07e0003f
	...
2001279c:	fffff800 	vcmla.f32	d31, d15, d0[0], #270
200127a0:	07c0001f 	bfceq	r0, #0, #1
	...
200127ac:	fffffc00 			; <UNDEFINED> instruction: 0xfffffc00
200127b0:	0700001f 	smladeq	r0, pc, r0, r0	; <UNPREDICTABLE>
	...
200127bc:	fffffe00 			; <UNDEFINED> instruction: 0xfffffe00
200127c0:	8e00001f 	mcrhi	0, 0, r0, cr0, cr15, {0}
200127c4:	00000003 	andeq	r0, r0, r3
200127c8:	00000000 	andeq	r0, r0, r0
200127cc:	fffffe00 			; <UNDEFINED> instruction: 0xfffffe00
200127d0:	6000003f 	andvs	r0, r0, pc, lsr r0
	...
200127dc:	ffffff00 			; <UNDEFINED> instruction: 0xffffff00
200127e0:	0000001f 	andeq	r0, r0, pc, lsl r0
	...
200127ec:	ffffff00 			; <UNDEFINED> instruction: 0xffffff00
200127f0:	0000000f 	andeq	r0, r0, pc
	...
200127fc:	ffffff00 			; <UNDEFINED> instruction: 0xffffff00
20012800:	00000007 	andeq	r0, r0, r7
	...
2001280c:	ffffff80 			; <UNDEFINED> instruction: 0xffffff80
20012810:	00000003 	andeq	r0, r0, r3
	...
2001281c:	ffffff80 			; <UNDEFINED> instruction: 0xffffff80
20012820:	00000003 	andeq	r0, r0, r3
	...
2001282c:	ffffff80 			; <UNDEFINED> instruction: 0xffffff80
20012830:	00000003 	andeq	r0, r0, r3
	...
2001283c:	ffffffc0 			; <UNDEFINED> instruction: 0xffffffc0
20012840:	00000007 	andeq	r0, r0, r7
	...
2001284c:	ffffffc0 			; <UNDEFINED> instruction: 0xffffffc0
20012850:	0000000f 	andeq	r0, r0, pc
	...
2001285c:	ffffffc0 			; <UNDEFINED> instruction: 0xffffffc0
20012860:	0000000f 	andeq	r0, r0, pc
	...

2001286c <game_over_witch4_light_bits>:
	...
20012990:	c0000000 	andgt	r0, r0, r0
20012994:	0000001f 	andeq	r0, r0, pc, lsl r0
	...
200129a0:	ff800000 			; <UNDEFINED> instruction: 0xff800000
200129a4:	0000003f 	andeq	r0, r0, pc, lsr r0
	...
200129b0:	fe300000 	cdp2	0, 3, cr0, cr0, cr0, {0}
200129b4:	0000018f 	andeq	r0, r0, pc, lsl #3
	...
200129c0:	f0fc0000 			; <UNDEFINED> instruction: 0xf0fc0000
200129c4:	0000004f 	andeq	r0, r0, pc, asr #32
	...
200129d0:	e1ff0000 	mvns	r0, r0
200129d4:	00000003 	andeq	r0, r0, r3
	...
200129e0:	c00fc000 	andgt	ip, pc, r0
200129e4:	0000000f 	andeq	r0, r0, pc
	...
200129f0:	8003f000 	andhi	pc, r3, r0
200129f4:	0000007f 	andeq	r0, r0, pc, ror r0
	...
20012a00:	8000fe00 	andhi	pc, r0, r0, lsl #28
20012a04:	000103ff 	strdeq	r0, [r1], -pc	; <UNPREDICTABLE>
	...
20012a10:	00003f80 	andeq	r3, r0, r0, lsl #31
20012a14:	00010fff 	strdeq	r0, [r1], -pc	; <UNPREDICTABLE>
	...
20012a20:	00001fc0 	andeq	r1, r0, r0, asr #31
20012a24:	00033fff 	strdeq	r3, [r3], -pc	; <UNPREDICTABLE>
	...
20012a30:	00000ff0 	strdeq	r0, [r0], -r0	; <UNPREDICTABLE>
20012a34:	00037fff 	strdeq	r7, [r3], -pc	; <UNPREDICTABLE>
	...
20012a40:	000007f8 	strdeq	r0, [r0], -r8
20012a44:	00077fcf 	andeq	r7, r7, pc, asr #31
	...
20012a50:	000006f8 	strdeq	r0, [r0], -r8
20012a54:	00067fef 	andeq	r7, r6, pc, ror #31
	...
20012a60:	80003e78 	andhi	r3, r0, r8, ror lr
20012a64:	0006ffe7 	andeq	pc, r6, r7, ror #31
	...
20012a70:	c0007938 	andgt	r7, r0, r8, lsr r9
20012a74:	0004fff7 	strdeq	pc, [r4], -r7
	...
20012a80:	e001fdf8 	strd	pc, [r1], -r8
20012a84:	0005fff3 	strdeq	pc, [r5], -r3
	...
20012a90:	f807f9f8 			; <UNDEFINED> instruction: 0xf807f9f8
20012a94:	0005fff9 	strdeq	pc, [r5], -r9
	...
20012aa0:	fc1ff3f8 	ldc2	3, cr15, [pc], {248}	; 0xf8
20012aa4:	0005fffd 	strdeq	pc, [r5], -sp
	...
20012ab0:	fe7fe7f0 	mrc2	7, 3, lr, cr15, cr0, {7}
20012ab4:	0004fffc 	strdeq	pc, [r4], -ip
	...
20012ac0:	ffff87f0 			; <UNDEFINED> instruction: 0xffff87f0
20012ac4:	0006fffe 	strdeq	pc, [r6], -lr
	...
20012ad0:	fffe0ff0 			; <UNDEFINED> instruction: 0xfffe0ff0
20012ad4:	0002fffe 	strdeq	pc, [r2], -lr
	...
20012ae0:	fffc0ff0 			; <UNDEFINED> instruction: 0xfffc0ff0
20012ae4:	00027ffe 	strdeq	r7, [r2], -lr
	...
20012af0:	fff81fe0 			; <UNDEFINED> instruction: 0xfff81fe0
20012af4:	00033ffe 	strdeq	r3, [r3], -lr
	...
20012b00:	ff801fe0 			; <UNDEFINED> instruction: 0xff801fe0
20012b04:	0001bffe 	strdeq	fp, [r1], -lr
	...
20012b10:	ff803fe0 			; <UNDEFINED> instruction: 0xff803fe0
20012b14:	00019fff 	strdeq	r9, [r1], -pc	; <UNPREDICTABLE>
	...
20012b20:	ff803fc0 			; <UNDEFINED> instruction: 0xff803fc0
20012b24:	0001e7ff 	strdeq	lr, [r1], -pc	; <UNPREDICTABLE>
	...
20012b30:	ff807fc0 			; <UNDEFINED> instruction: 0xff807fc0
20012b34:	0000f3ff 	strdeq	pc, [r0], -pc	; <UNPREDICTABLE>
	...
20012b40:	fe007b80 	vseleq.f64	d7, d16, d0
20012b44:	0000f9ff 	strdeq	pc, [r0], -pc	; <UNPREDICTABLE>
	...
20012b50:	fc00fb80 	stc2	11, cr15, [r0], {128}	; 0x80	; <UNPREDICTABLE>
20012b54:	0000fcff 	strdeq	pc, [r0], -pc	; <UNPREDICTABLE>
	...
20012b60:	f801f300 			; <UNDEFINED> instruction: 0xf801f300
20012b64:	0000be7f 	andeq	fp, r0, pc, ror lr
	...
20012b70:	f803e700 			; <UNDEFINED> instruction: 0xf803e700
20012b74:	00009f3f 	andeq	r9, r0, pc, lsr pc
	...
20012b80:	f007ce00 			; <UNDEFINED> instruction: 0xf007ce00
20012b84:	0000df9f 	muleq	r0, pc, pc	; <UNPREDICTABLE>
	...
20012b90:	f0073c00 			; <UNDEFINED> instruction: 0xf0073c00
20012b94:	00004f87 	andeq	r4, r0, r7, lsl #31
	...
20012ba0:	f00cf800 			; <UNDEFINED> instruction: 0xf00cf800
20012ba4:	00007f83 	andeq	r7, r0, r3, lsl #31
	...
20012bb0:	2019e000 	andscs	lr, r9, r0
20012bb4:	00007fc0 	andeq	r7, r0, r0, asr #31
	...
20012bc0:	007fc000 	rsbseq	ip, pc, r0
20012bc4:	000039f0 	strdeq	r3, [r0], -r0
	...
20012bd0:	01ff0000 	mvnseq	r0, r0
20012bd4:	00003a38 	andeq	r3, r0, r8, lsr sl
	...
20012be0:	0ffc0000 	svceq	0x00fc0000
20012be4:	00003e9f 	muleq	r0, pc, lr	; <UNPREDICTABLE>
	...
20012bf0:	fff00000 			; <UNDEFINED> instruction: 0xfff00000	; IMB
20012bf4:	00003e7f 	andeq	r3, r0, pc, ror lr
	...
20012c00:	fbe00000 	blx	1f812c0a <startup-0x7ed3f6>
20012c04:	00003e7f 	andeq	r3, r0, pc, ror lr
	...
20012c10:	83800000 	orrhi	r0, r0, #0
20012c14:	00001eff 	strdeq	r1, [r0], -pc	; <UNPREDICTABLE>
	...
20012c20:	fe000000 	cdp2	0, 0, cr0, cr0, cr0, {0}
20012c24:	00000fff 	strdeq	r0, [r0], -pc	; <UNPREDICTABLE>
	...
20012c30:	f8000000 			; <UNDEFINED> instruction: 0xf8000000
20012c34:	000007ff 	strdeq	r0, [r0], -pc	; <UNPREDICTABLE>
	...
20012c40:	e0000000 	and	r0, r0, r0
20012c44:	000003ff 	strdeq	r0, [r0], -pc	; <UNPREDICTABLE>
	...

20012c6c <game_over_witch5_black_bits>:
20012c6c:	f0010f00 			; <UNDEFINED> instruction: 0xf0010f00
20012c70:	00000003 	andeq	r0, r0, r3
20012c74:	0000001c 	andeq	r0, r0, ip, lsl r0
20012c78:	00000000 	andeq	r0, r0, r0
20012c7c:	0ffe0100 	svceq	0x00fe0100
20012c80:	00000000 	andeq	r0, r0, r0
20012c84:	0000003c 	andeq	r0, r0, ip, lsr r0
20012c88:	00000000 	andeq	r0, r0, r0
20012c8c:	00000080 	andeq	r0, r0, r0, lsl #1
20012c90:	00000000 	andeq	r0, r0, r0
20012c94:	00000038 	andeq	r0, r0, r8, lsr r0
20012c98:	00000000 	andeq	r0, r0, r0
20012c9c:	00000080 	andeq	r0, r0, r0, lsl #1
20012ca0:	00000000 	andeq	r0, r0, r0
20012ca4:	00000070 	andeq	r0, r0, r0, ror r0
20012ca8:	00000000 	andeq	r0, r0, r0
20012cac:	00000100 	andeq	r0, r0, r0, lsl #2
20012cb0:	00000000 	andeq	r0, r0, r0
20012cb4:	000001e0 	andeq	r0, r0, r0, ror #3
20012cb8:	00000000 	andeq	r0, r0, r0
20012cbc:	00000100 	andeq	r0, r0, r0, lsl #2
20012cc0:	00000000 	andeq	r0, r0, r0
20012cc4:	000003c0 	andeq	r0, r0, r0, asr #7
20012cc8:	00000000 	andeq	r0, r0, r0
20012ccc:	00000200 	andeq	r0, r0, r0, lsl #4
20012cd0:	00000000 	andeq	r0, r0, r0
20012cd4:	00000780 	andeq	r0, r0, r0, lsl #15
20012cd8:	00000000 	andeq	r0, r0, r0
20012cdc:	00000200 	andeq	r0, r0, r0, lsl #4
20012ce0:	00000000 	andeq	r0, r0, r0
20012ce4:	00000f80 	andeq	r0, r0, r0, lsl #31
20012ce8:	00000000 	andeq	r0, r0, r0
20012cec:	00003c00 	andeq	r3, r0, r0, lsl #24
20012cf0:	00000000 	andeq	r0, r0, r0
20012cf4:	00001f00 	andeq	r1, r0, r0, lsl #30
20012cf8:	00000000 	andeq	r0, r0, r0
20012cfc:	000ff000 	andeq	pc, pc, r0
20012d00:	00000000 	andeq	r0, r0, r0
20012d04:	00001f00 	andeq	r1, r0, r0, lsl #30
20012d08:	00000000 	andeq	r0, r0, r0
20012d0c:	007f8000 	rsbseq	r8, pc, r0
20012d10:	0000007c 	andeq	r0, r0, ip, ror r0
20012d14:	00003f00 	andeq	r3, r0, r0, lsl #30
20012d18:	00000000 	andeq	r0, r0, r0
20012d1c:	fffe0000 			; <UNDEFINED> instruction: 0xfffe0000
20012d20:	0000007f 	andeq	r0, r0, pc, ror r0
20012d24:	00007f00 	andeq	r7, r0, r0, lsl #30
20012d28:	00000000 	andeq	r0, r0, r0
20012d2c:	fff00000 			; <UNDEFINED> instruction: 0xfff00000	; IMB
20012d30:	0000007f 	andeq	r0, r0, pc, ror r0
20012d34:	0000ff00 	andeq	pc, r0, r0, lsl #30
20012d38:	00000000 	andeq	r0, r0, r0
20012d3c:	ffc00000 			; <UNDEFINED> instruction: 0xffc00000
20012d40:	0000007f 	andeq	r0, r0, pc, ror r0
20012d44:	0001fe00 	andeq	pc, r1, r0, lsl #28
20012d48:	00000000 	andeq	r0, r0, r0
20012d4c:	fc000000 	stc2	0, cr0, [r0], {-0}
20012d50:	0000007f 	andeq	r0, r0, pc, ror r0
20012d54:	0001fe00 	andeq	pc, r1, r0, lsl #28
	...
20012d60:	00000030 	andeq	r0, r0, r0, lsr r0
20012d64:	0003fc00 	andeq	pc, r3, r0, lsl #24
	...
20012d70:	00000020 	andeq	r0, r0, r0, lsr #32
20012d74:	0007fc00 	andeq	pc, r7, r0, lsl #24
	...
20012d80:	00000010 	andeq	r0, r0, r0, lsl r0
20012d84:	000ffc00 	andeq	pc, pc, r0, lsl #24
	...
20012d90:	0fffff90 	svceq	0x00ffff90
20012d94:	000ff800 	andeq	pc, pc, r0, lsl #16
	...
20012da0:	fffffffe 			; <UNDEFINED> instruction: 0xfffffffe
20012da4:	001ff803 	andseq	pc, pc, r3, lsl #16
20012da8:	00000000 	andeq	r0, r0, r0
20012dac:	e0000000 	and	r0, r0, r0
20012db0:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
20012db4:	001ffbff 			; <UNDEFINED> instruction: 0x001ffbff
20012db8:	00000000 	andeq	r0, r0, r0
20012dbc:	fffe0000 			; <UNDEFINED> instruction: 0xfffe0000
20012dc0:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
20012dc4:	003fffff 	ldrshteq	pc, [pc], -pc	; <UNPREDICTABLE>
20012dc8:	00000000 	andeq	r0, r0, r0
20012dcc:	ffffe000 			; <UNDEFINED> instruction: 0xffffe000
20012dd0:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
20012dd4:	003fffff 	ldrshteq	pc, [pc], -pc	; <UNPREDICTABLE>
20012dd8:	00000000 	andeq	r0, r0, r0
20012ddc:	fffff000 			; <UNDEFINED> instruction: 0xfffff000
20012de0:	001fffff 			; <UNDEFINED> instruction: 0x001fffff
20012de4:	005fffc0 	subseq	pc, pc, r0, asr #31
20012de8:	00000000 	andeq	r0, r0, r0
20012dec:	fffff800 	vcmla.f32	d31, d15, d0[0], #270
20012df0:	00083fff 	strdeq	r3, [r8], -pc	; <UNPREDICTABLE>
20012df4:	007ffc20 	rsbseq	pc, pc, r0, lsr #24
20012df8:	00000000 	andeq	r0, r0, r0
20012dfc:	fffff000 			; <UNDEFINED> instruction: 0xfffff000
20012e00:	001007ff 			; <UNDEFINED> instruction: 0x001007ff
20012e04:	01fff010 	mvnseq	pc, r0, lsl r0	; <UNPREDICTABLE>
20012e08:	00000000 	andeq	r0, r0, r0
20012e0c:	fffff000 			; <UNDEFINED> instruction: 0xfffff000
20012e10:	0060007f 	rsbeq	r0, r0, pc, ror r0
20012e14:	07ffc010 			; <UNDEFINED> instruction: 0x07ffc010
20012e18:	00000000 	andeq	r0, r0, r0
20012e1c:	fff80000 			; <UNDEFINED> instruction: 0xfff80000
20012e20:	2183801f 	orrcs	r8, r3, pc, lsl r0
20012e24:	0fff81c9 	svceq	0x00ff81c9
20012e28:	00000000 	andeq	r0, r0, r0
20012e2c:	ffe00000 			; <UNDEFINED> instruction: 0xffe00000
20012e30:	231d600f 	tstcs	sp, #15
20012e34:	3ffe0139 	svccc	0x00fe0139
20012e38:	00000000 	andeq	r0, r0, r0
20012e3c:	f0000000 			; <UNDEFINED> instruction: 0xf0000000
20012e40:	46611f07 	strbtmi	r1, [r1], -r7, lsl #30
20012e44:	fffc011d 			; <UNDEFINED> instruction: 0xfffc011d
20012e48:	00000000 	andeq	r0, r0, r0
20012e4c:	c0000000 	andgt	r0, r0, r0
20012e50:	4ec08601 	cdpmi	6, 12, cr8, cr0, cr1, {0}
20012e54:	fff8017c 			; <UNDEFINED> instruction: 0xfff8017c
20012e58:	00000001 	andeq	r0, r0, r1
20012e5c:	80000000 	andhi	r0, r0, r0
20012e60:	0d4c8880 	stcleq	8, cr8, [ip, #-512]	; 0xfffffe00
20012e64:	fff0019c 			; <UNDEFINED> instruction: 0xfff0019c
20012e68:	00000007 	andeq	r0, r0, r7
20012e6c:	80000000 	andhi	r0, r0, r0
20012e70:	024cb080 	subeq	fp, ip, #128	; 0x80
20012e74:	fff000a8 			; <UNDEFINED> instruction: 0xfff000a8
20012e78:	0000000f 	andeq	r0, r0, pc
20012e7c:	80000000 	andhi	r0, r0, r0
20012e80:	0240c100 	subeq	ip, r0, #0, 2
20012e84:	fff040a8 			; <UNDEFINED> instruction: 0xfff040a8
20012e88:	0000003f 	andeq	r0, r0, pc, lsr r0
20012e8c:	80000000 	andhi	r0, r0, r0
20012e90:	02330100 	eorseq	r0, r3, #0, 2
20012e94:	ffe02048 			; <UNDEFINED> instruction: 0xffe02048
20012e98:	0000007f 	andeq	r0, r0, pc, ror r0
20012e9c:	00000000 	andeq	r0, r0, r0
20012ea0:	023c0101 	eorseq	r0, ip, #1073741824	; 0x40000000
20012ea4:	ffe01078 			; <UNDEFINED> instruction: 0xffe01078
20012ea8:	000001ff 	strdeq	r0, [r0], -pc	; <UNPREDICTABLE>
20012eac:	7fc00000 	svcvc	0x00c00000
20012eb0:	03c00201 	biceq	r0, r0, #268435456	; 0x10000000
20012eb4:	ffe01030 			; <UNDEFINED> instruction: 0xffe01030
20012eb8:	000003ff 	strdeq	r0, [r0], -pc	; <UNPREDICTABLE>
20012ebc:	803c0000 	eorshi	r0, ip, r0
20012ec0:	00000201 	andeq	r0, r0, r1, lsl #4
20012ec4:	ff200810 			; <UNDEFINED> instruction: 0xff200810
20012ec8:	000007ff 	strdeq	r0, [r0], -pc	; <UNPREDICTABLE>
20012ecc:	80030000 	andhi	r0, r3, r0
20012ed0:	02000401 	andeq	r0, r0, #16777216	; 0x1000000
20012ed4:	f8200810 			; <UNDEFINED> instruction: 0xf8200810
20012ed8:	000007ff 	strdeq	r0, [r0], -pc	; <UNPREDICTABLE>
20012edc:	80008000 	andhi	r8, r0, r0
20012ee0:	01000401 	tsteq	r0, r1, lsl #8
20012ee4:	ffd00810 			; <UNDEFINED> instruction: 0xffd00810
20012ee8:	0000ffff 	strdeq	pc, [r0], -pc	; <UNPREDICTABLE>
20012eec:	80006000 	andhi	r6, r0, r0
20012ef0:	00800c03 	addeq	r0, r0, r3, lsl #24
20012ef4:	fff00c20 			; <UNDEFINED> instruction: 0xfff00c20
20012ef8:	0003ffff 	strdeq	pc, [r3], -pc	; <UNPREDICTABLE>
20012efc:	80001000 	andhi	r1, r0, r0
20012f00:	00880843 	addeq	r0, r8, r3, asr #16
20012f04:	fff20c20 			; <UNDEFINED> instruction: 0xfff20c20
20012f08:	000fffff 	strdeq	pc, [pc], -pc	; <UNPREDICTABLE>
20012f0c:	80000800 	andhi	r0, r0, r0, lsl #16
20012f10:	00081887 	andeq	r1, r8, r7, lsl #17
20012f14:	fff10620 			; <UNDEFINED> instruction: 0xfff10620
20012f18:	003fffff 	ldrshteq	pc, [pc], -pc	; <UNPREDICTABLE>
20012f1c:	80000800 	andhi	r0, r0, r0, lsl #16
20012f20:	10082907 	andne	r2, r8, r7, lsl #18
20012f24:	fff90620 			; <UNDEFINED> instruction: 0xfff90620
20012f28:	00ffffff 	ldrshteq	pc, [pc], #255	; <UNPREDICTABLE>
20012f2c:	00000400 	andeq	r0, r0, r0, lsl #8
20012f30:	0810d10f 	ldmdaeq	r0, {r0, r1, r2, r3, r8, ip, lr, pc}
20012f34:	fffc8520 			; <UNDEFINED> instruction: 0xfffc8520
20012f38:	03ffffff 	mvnseq	pc, #1020	; 0x3fc
20012f3c:	00000400 	andeq	r0, r0, r0, lsl #8
20012f40:	0811110f 	ldmdaeq	r1, {r0, r1, r2, r3, r8, ip}
20012f44:	fffc84d0 			; <UNDEFINED> instruction: 0xfffc84d0
20012f48:	0fffffff 	svceq	0x00ffffff
20012f4c:	00000200 	andeq	r0, r0, r0, lsl #4
20012f50:	08e6201f 	stmiaeq	r6!, {r0, r1, r2, r3, r4, sp}^
20012f54:	ff3e4230 			; <UNDEFINED> instruction: 0xff3e4230
20012f58:	3fffffff 	svccc	0x00ffffff
20012f5c:	00000200 	andeq	r0, r0, r0, lsl #4
20012f60:	0378201e 	cmneq	r8, #30
20012f64:	fe1f0208 	cdp2	2, 1, cr0, cr15, cr8, {0}
20012f68:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
20012f6c:	00000100 	andeq	r0, r0, r0, lsl #2
20012f70:	03a0c03e 	moveq	ip, #62	; 0x3e
20012f74:	fe038188 	cdp2	1, 0, cr8, cr3, cr8, {4}
20012f78:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
20012f7c:	00000080 	andeq	r0, r0, r0, lsl #1
20012f80:	0223003c 	eoreq	r0, r3, #60	; 0x3c
20012f84:	fe01c074 	mcr2	0, 0, ip, cr1, cr4, {3}
20012f88:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
20012f8c:	00000080 	andeq	r0, r0, r0, lsl #1
20012f90:	036c007c 	cmneq	ip, #124	; 0x7c
20012f94:	fc00c00e 	stc2	0, cr12, [r0], {14}
20012f98:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
20012f9c:	00000040 	andeq	r0, r0, r0, asr #32
20012fa0:	03f0107c 	mvnseq	r1, #124	; 0x7c
20012fa4:	fc006002 	stc2	0, cr6, [r0], {2}
20012fa8:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
20012fac:	00000040 	andeq	r0, r0, r0, asr #32
20012fb0:	018060f8 	strdeq	r6, [r0, r8]
20012fb4:	f8001101 			; <UNDEFINED> instruction: 0xf8001101
20012fb8:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
20012fbc:	00000020 	andeq	r0, r0, r0, lsr #32
20012fc0:	810081f0 	strdhi	r8, [r0, -r0]
20012fc4:	f0000cc0 			; <UNDEFINED> instruction: 0xf0000cc0
20012fc8:	fffffdff 			; <UNDEFINED> instruction: 0xfffffdff
20012fcc:	00000010 	andeq	r0, r0, r0, lsl r0
20012fd0:	6f0107f0 	svcvs	0x000107f0
20012fd4:	e0000f30 	and	r0, r0, r0, lsr pc
20012fd8:	fffff8ff 			; <UNDEFINED> instruction: 0xfffff8ff
20012fdc:	00000008 	andeq	r0, r0, r8
20012fe0:	18000fe0 	stmdane	r0, {r5, r6, r7, r8, r9, sl, fp}
20012fe4:	c000078c 	andgt	r0, r0, ip, lsl #15
20012fe8:	fffff0ff 			; <UNDEFINED> instruction: 0xfffff0ff
20012fec:	00000004 	andeq	r0, r0, r4
20012ff0:	08003fc0 	stmdaeq	r0, {r6, r7, r8, r9, sl, fp, ip, sp}
20012ff4:	c00003e0 	andgt	r0, r0, r0, ror #7
20012ff8:	ffffe0ff 			; <UNDEFINED> instruction: 0xffffe0ff
20012ffc:	00000004 	andeq	r0, r0, r4
20013000:	3000ff80 	andcc	pc, r0, r0, lsl #31
20013004:	800001f8 	strdhi	r0, [r0], -r8
20013008:	ffffc0ff 			; <UNDEFINED> instruction: 0xffffc0ff
2001300c:	00000002 	andeq	r0, r0, r2
20013010:	2001ff00 	andcs	pc, r1, r0, lsl #30
20013014:	000000fc 	strdeq	r0, [r0], -ip
20013018:	ffff80ff 			; <UNDEFINED> instruction: 0xffff80ff
2001301c:	00000001 	andeq	r0, r0, r1
20013020:	3007fc00 	andcc	pc, r7, r0, lsl #24
20013024:	0000007e 	andeq	r0, r0, lr, ror r0
20013028:	ffff00fe 			; <UNDEFINED> instruction: 0xffff00fe
2001302c:	ff000000 			; <UNDEFINED> instruction: 0xff000000
20013030:	181ff801 	ldmdane	pc, {r0, fp, ip, sp, lr, pc}	; <UNPREDICTABLE>
20013034:	0000001e 	andeq	r0, r0, lr, lsl r0
20013038:	fffe00f8 			; <UNDEFINED> instruction: 0xfffe00f8
2001303c:	ff800000 			; <UNDEFINED> instruction: 0xff800000
20013040:	003fc03f 	eorseq	ip, pc, pc, lsr r0	; <UNPREDICTABLE>
20013044:	00000007 	andeq	r0, r0, r7
20013048:	fffc0060 			; <UNDEFINED> instruction: 0xfffc0060
2001304c:	ffc00000 			; <UNDEFINED> instruction: 0xffc00000
20013050:	807f1fff 	ldrshthi	r1, [pc], #-255
20013054:	00000003 	andeq	r0, r0, r3
20013058:	fff80000 			; <UNDEFINED> instruction: 0xfff80000
2001305c:	ffe00000 			; <UNDEFINED> instruction: 0xffe00000
20013060:	7ffc3fff 	svcvc	0x00fc3fff
20013064:	00000000 	andeq	r0, r0, r0
20013068:	fff00000 			; <UNDEFINED> instruction: 0xfff00000	; IMB

2001306c <game_over_witch5_gray_bits>:
2001306c:	0000f000 	andeq	pc, r0, r0
20013070:	fffffffc 			; <UNDEFINED> instruction: 0xfffffffc
20013074:	00000003 	andeq	r0, r0, r3
20013078:	00000000 	andeq	r0, r0, r0
2001307c:	f001fe00 			; <UNDEFINED> instruction: 0xf001fe00
20013080:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
20013084:	00000003 	andeq	r0, r0, r3
20013088:	00000000 	andeq	r0, r0, r0
2001308c:	ffffff00 			; <UNDEFINED> instruction: 0xffffff00
20013090:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
20013094:	00000007 	andeq	r0, r0, r7
20013098:	00000000 	andeq	r0, r0, r0
2001309c:	ffffff00 			; <UNDEFINED> instruction: 0xffffff00
200130a0:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
200130a4:	0000000f 	andeq	r0, r0, pc
200130a8:	00000000 	andeq	r0, r0, r0
200130ac:	fffffe00 			; <UNDEFINED> instruction: 0xfffffe00
200130b0:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
200130b4:	0000001f 	andeq	r0, r0, pc, lsl r0
200130b8:	00000000 	andeq	r0, r0, r0
200130bc:	fffffe00 			; <UNDEFINED> instruction: 0xfffffe00
200130c0:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
200130c4:	0000003f 	andeq	r0, r0, pc, lsr r0
200130c8:	00000000 	andeq	r0, r0, r0
200130cc:	fffffc00 			; <UNDEFINED> instruction: 0xfffffc00
200130d0:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
200130d4:	0000007f 	andeq	r0, r0, pc, ror r0
200130d8:	00000000 	andeq	r0, r0, r0
200130dc:	fffffc00 			; <UNDEFINED> instruction: 0xfffffc00
200130e0:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
200130e4:	0000007f 	andeq	r0, r0, pc, ror r0
200130e8:	00000000 	andeq	r0, r0, r0
200130ec:	ffffc000 			; <UNDEFINED> instruction: 0xffffc000
200130f0:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
200130f4:	000000ff 	strdeq	r0, [r0], -pc	; <UNPREDICTABLE>
200130f8:	00000000 	andeq	r0, r0, r0
200130fc:	fff00000 			; <UNDEFINED> instruction: 0xfff00000	; IMB
20013100:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
20013104:	000000ff 	strdeq	r0, [r0], -pc	; <UNPREDICTABLE>
20013108:	00000000 	andeq	r0, r0, r0
2001310c:	ff800000 			; <UNDEFINED> instruction: 0xff800000
20013110:	ffffff83 			; <UNDEFINED> instruction: 0xffffff83
20013114:	000000ff 	strdeq	r0, [r0], -pc	; <UNPREDICTABLE>
	...
20013120:	ffffff80 			; <UNDEFINED> instruction: 0xffffff80
20013124:	000000ff 	strdeq	r0, [r0], -pc	; <UNPREDICTABLE>
	...
20013130:	ffffff80 			; <UNDEFINED> instruction: 0xffffff80
20013134:	000000ff 	strdeq	r0, [r0], -pc	; <UNPREDICTABLE>
	...
20013140:	ffffff80 			; <UNDEFINED> instruction: 0xffffff80
20013144:	000001ff 	strdeq	r0, [r0], -pc	; <UNPREDICTABLE>
	...
20013150:	ffffff80 			; <UNDEFINED> instruction: 0xffffff80
20013154:	000001ff 	strdeq	r0, [r0], -pc	; <UNPREDICTABLE>
	...
20013160:	ffffffc0 			; <UNDEFINED> instruction: 0xffffffc0
20013164:	000003ff 	strdeq	r0, [r0], -pc	; <UNPREDICTABLE>
	...
20013170:	ffffffc0 			; <UNDEFINED> instruction: 0xffffffc0
20013174:	000003ff 	strdeq	r0, [r0], -pc	; <UNPREDICTABLE>
	...
20013180:	ffffffe0 			; <UNDEFINED> instruction: 0xffffffe0
20013184:	000003ff 	strdeq	r0, [r0], -pc	; <UNPREDICTABLE>
	...
20013190:	f0000060 			; <UNDEFINED> instruction: 0xf0000060
20013194:	000007ff 	strdeq	r0, [r0], -pc	; <UNPREDICTABLE>
	...
200131a4:	000007fc 	strdeq	r0, [r0], -ip
	...
200131b4:	00000400 	andeq	r0, r0, r0, lsl #8
	...
20013230:	00020000 	andeq	r0, r2, r0
	...
20013240:	001e0000 	andseq	r0, lr, r0
	...
20013250:	00270000 	eoreq	r0, r7, r0
	...
20013260:	00230000 	eoreq	r0, r3, r0
20013264:	00000020 	andeq	r0, r0, r0, lsr #32
	...
20013270:	00330000 	eorseq	r0, r3, r0
20013274:	00000010 	andeq	r0, r0, r0, lsl r0
	...
20013280:	003f0000 	eorseq	r0, pc, r0
20013284:	00000050 	andeq	r0, r0, r0, asr r0
	...
20013290:	000c0000 	andeq	r0, ip, r0
20013294:	00000030 	andeq	r0, r0, r0, lsr r0
	...
200132bc:	7fc00000 	svcvc	0x00c00000
	...
200132cc:	7ffc0000 	svcvc	0x00fc0000
	...
200132dc:	7fff0000 	svcvc	0x00ff0000
	...
200132ec:	7fff8000 	svcvc	0x00ff8000
	...
200132fc:	7fffe000 	svcvc	0x00ffe000
	...
2001330c:	7ffff000 	svcvc	0x00fff000
	...
2001331c:	7ffff000 	svcvc	0x00fff000
20013320:	00001000 	andeq	r1, r0, r0
	...
2001332c:	fffff800 	vcmla.f32	d31, d15, d0[0], #270
20013330:	00002000 	andeq	r2, r0, r0
20013334:	00000200 	andeq	r0, r0, r0, lsl #4
20013338:	00000000 	andeq	r0, r0, r0
2001333c:	fffff800 	vcmla.f32	d31, d15, d0[0], #270
20013340:	0000e000 	andeq	lr, r0, r0
20013344:	00000300 	andeq	r0, r0, r0, lsl #6
20013348:	00000000 	andeq	r0, r0, r0
2001334c:	fffffc00 			; <UNDEFINED> instruction: 0xfffffc00
20013350:	0001c000 	andeq	ip, r1, r0
20013354:	00c001c0 	sbceq	r0, r0, r0, asr #3
20013358:	00000000 	andeq	r0, r0, r0
2001335c:	fffffc00 			; <UNDEFINED> instruction: 0xfffffc00
20013360:	0007c001 	andeq	ip, r7, r1
20013364:	01e001f0 	strdeq	r0, [r0, #16]!
20013368:	00000000 	andeq	r0, r0, r0
2001336c:	fffffe00 			; <UNDEFINED> instruction: 0xfffffe00
20013370:	001f0001 	andseq	r0, pc, r1
20013374:	01fc0070 	mvnseq	r0, r0, ror r0
20013378:	00000000 	andeq	r0, r0, r0
2001337c:	ffffff00 			; <UNDEFINED> instruction: 0xffffff00
20013380:	001c0003 	andseq	r0, ip, r3
20013384:	01fe0008 	mvnseq	r0, r8
20013388:	00000000 	andeq	r0, r0, r0
2001338c:	ffffff00 			; <UNDEFINED> instruction: 0xffffff00
20013390:	00100003 	andseq	r0, r0, r3
20013394:	03ff0000 	mvnseq	r0, #0
20013398:	00000000 	andeq	r0, r0, r0
2001339c:	ffffff80 			; <UNDEFINED> instruction: 0xffffff80
200133a0:	00000003 	andeq	r0, r0, r3
200133a4:	03ff8000 	mvnseq	r8, #0
200133a8:	00000000 	andeq	r0, r0, r0
200133ac:	ffffff80 			; <UNDEFINED> instruction: 0xffffff80
200133b0:	00000007 	andeq	r0, r0, r7
200133b4:	07ffe000 	ldrbeq	lr, [pc, r0]!
200133b8:	00000000 	andeq	r0, r0, r0
200133bc:	ffffffc0 			; <UNDEFINED> instruction: 0xffffffc0
200133c0:	0000000f 	andeq	r0, r0, pc
200133c4:	0ffff000 	svceq	0x00fff000
200133c8:	00000200 	andeq	r0, r0, r0, lsl #4
200133cc:	ffffffe0 			; <UNDEFINED> instruction: 0xffffffe0
200133d0:	0000000f 	andeq	r0, r0, pc
200133d4:	1ffff000 	svcne	0x00fff000
200133d8:	00000700 	andeq	r0, r0, r0, lsl #14
200133dc:	fffffff0 			; <UNDEFINED> instruction: 0xfffffff0
200133e0:	0000001f 	andeq	r0, r0, pc, lsl r0
200133e4:	3ffff800 	svccc	0x00fff800
200133e8:	00000f00 	andeq	r0, r0, r0, lsl #30
200133ec:	fffffff8 			; <UNDEFINED> instruction: 0xfffffff8
200133f0:	0000003f 	andeq	r0, r0, pc, lsr r0
200133f4:	3ffffc00 	svccc	0x00fffc00
200133f8:	00001f00 	andeq	r1, r0, r0, lsl #30
200133fc:	fffffff8 			; <UNDEFINED> instruction: 0xfffffff8
20013400:	0000007f 	andeq	r0, r0, pc, ror r0
20013404:	7ffffe00 	svcvc	0x00fffe00
20013408:	00003f00 	andeq	r3, r0, r0, lsl #30
2001340c:	fffffffc 			; <UNDEFINED> instruction: 0xfffffffc
20013410:	000000ff 	strdeq	r0, [r0], -pc	; <UNPREDICTABLE>
20013414:	ffffff00 			; <UNDEFINED> instruction: 0xffffff00
20013418:	00007f00 	andeq	r7, r0, r0, lsl #30
2001341c:	fffffffe 			; <UNDEFINED> instruction: 0xfffffffe
20013420:	000003ff 	strdeq	r0, [r0], -pc	; <UNPREDICTABLE>
20013424:	ffffff80 			; <UNDEFINED> instruction: 0xffffff80
20013428:	0000ff01 	andeq	pc, r0, r1, lsl #30
2001342c:	00ffffff 	ldrshteq	pc, [pc], #255	; <UNPREDICTABLE>
20013430:	000007fe 	strdeq	r0, [r0], -lr
20013434:	ffffffe0 			; <UNDEFINED> instruction: 0xffffffe0
20013438:	0001ff07 	andeq	pc, r1, r7, lsl #30
2001343c:	007fffff 	ldrshteq	pc, [pc], #-255	; <UNPREDICTABLE>
20013440:	00003fc0 	andeq	r3, r0, r0, asr #31
20013444:	fffffff8 			; <UNDEFINED> instruction: 0xfffffff8
20013448:	0003ff9f 	muleq	r3, pc, pc	; <UNPREDICTABLE>
2001344c:	003fffff 	ldrshteq	pc, [pc], -pc	; <UNPREDICTABLE>
20013450:	0000e000 	andeq	lr, r0, r0
20013454:	fffffffc 			; <UNDEFINED> instruction: 0xfffffffc
20013458:	0007ffff 	strdeq	pc, [r7], -pc	; <UNPREDICTABLE>
2001345c:	001fffff 			; <UNDEFINED> instruction: 0x001fffff
20013460:	8003c000 	andhi	ip, r3, r0
20013464:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
20013468:	000fffff 	strdeq	pc, [pc], -pc	; <UNPREDICTABLE>

2001346c <game_over_witch5_light_bits>:
	...
200135e0:	ffe00000 			; <UNDEFINED> instruction: 0xffe00000
200135e4:	0000003f 	andeq	r0, r0, pc, lsr r0
	...
200135f0:	fff7c000 			; <UNDEFINED> instruction: 0xfff7c000
200135f4:	000003df 	ldrdeq	r0, [r0], -pc	; <UNPREDICTABLE>
	...
20013600:	ffeff800 	vcmla.f32	d31, d15, d0[0], #170
20013604:	00000fef 	andeq	r0, r0, pc, ror #31
	...
20013610:	ff9fff80 			; <UNDEFINED> instruction: 0xff9fff80
20013614:	00003fef 	andeq	r3, r0, pc, ror #31
	...
20013620:	de7c7fe0 	cdple	15, 7, cr7, cr12, cr0, {7}
20013624:	00007e36 	andeq	r7, r0, r6, lsr lr
	...
20013630:	dce01ff0 	stclle	15, cr1, [r0], #960	; 0x3c0
20013634:	0001fe06 	andeq	pc, r1, r6, lsl #28
	...
20013640:	b98000f8 	stmiblt	r0, {r3, r4, r5, r6, r7}
20013644:	0003fe02 	andeq	pc, r3, r2, lsl #28
	...
20013650:	b10001fe 	strdlt	r0, [r0, -lr]
20013654:	0007fe03 	andeq	pc, r7, r3, lsl #28
	...
20013660:	f200077f 	vaba.s8	q0, q0, <illegal reg q15.5>
20013664:	000ffe03 	andeq	pc, pc, r3, lsl #28
	...
20013670:	fc000f7f 	stc2	15, cr0, [r0], {127}	; 0x7f
20013674:	000fff07 	andeq	pc, pc, r7, lsl #30
	...
20013680:	fc003eff 	stc2	14, cr3, [r0], {255}	; 0xff
20013684:	000fbf07 	andeq	fp, pc, r7, lsl #30
	...
20013690:	fc00feff 	stc2	14, cr15, [r0], {255}	; 0xff
20013694:	001fdf87 	andseq	sp, pc, r7, lsl #31
	...
200136a0:	fc03fefe 	stc2	14, cr15, [r3], {254}	; 0xfe
200136a4:	001fef87 	andseq	lr, pc, r7, lsl #31
	...
200136b0:	fc3ffdfe 	ldc2	13, cr15, [pc], #-1016	; 200132c0 <game_over_witch5_gray_bits+0x254>
200136b4:	001fefcf 	andseq	lr, pc, pc, asr #31
	...
200136c0:	fffffdfe 			; <UNDEFINED> instruction: 0xfffffdfe
200136c4:	001ff7ef 	andseq	pc, pc, pc, ror #15
	...
200136d0:	fdfffbfe 	ldc2l	11, cr15, [pc, #1016]!	; 20013ad0 <game_over_witch6_black_bits+0x264>	; <UNPREDICTABLE>
200136d4:	001ff7ef 	andseq	pc, pc, pc, ror #15
	...
200136e0:	fefffbfe 	mrc2	11, 7, pc, cr15, cr14, {7}	; <UNPREDICTABLE>
200136e4:	000ff7ef 	andeq	pc, pc, pc, ror #15
	...
200136f0:	ff7ff3fc 			; <UNDEFINED> instruction: 0xff7ff3fc
200136f4:	000ff3df 	ldrdeq	pc, [pc], -pc	; <UNPREDICTABLE>
	...
20013700:	ff77f7bc 			; <UNDEFINED> instruction: 0xff77f7bc
20013704:	000df3df 	ldrdeq	pc, [sp], -pc	; <UNPREDICTABLE>
	...
20013710:	fff7e778 			; <UNDEFINED> instruction: 0xfff7e778
20013714:	000ef9df 	ldrdeq	pc, [lr], -pc	; <UNPREDICTABLE>
	...
20013720:	eff7c6f8 	svc	0x00f7c6f8
20013724:	0006f9df 	ldrdeq	pc, [r6], -pc	; <UNPREDICTABLE>
	...
20013730:	f7ef0ef0 			; <UNDEFINED> instruction: 0xf7ef0ef0
20013734:	000378df 	ldrdeq	r7, [r3], -pc	; <UNPREDICTABLE>
	...
20013740:	f7ee0ef0 			; <UNDEFINED> instruction: 0xf7ee0ef0
20013744:	0003782f 	andeq	r7, r3, pc, lsr #16
	...
20013750:	f7181fe0 			; <UNDEFINED> instruction: 0xf7181fe0
20013754:	0001bc0f 	andeq	fp, r1, pc, lsl #24
	...
20013760:	fc001fe0 	stc2	15, cr1, [r0], {224}	; 0xe0
20013764:	0000fc07 	andeq	pc, r0, r7, lsl #24
	...
20013770:	fc003fc0 	stc2	15, cr3, [r0], {192}	; 0xc0
20013774:	00007e07 	andeq	r7, r0, r7, lsl #28
	...
20013780:	fc00ffc0 	stc2	15, cr15, [r0], {192}	; 0xc0
20013784:	00003f83 	andeq	r3, r0, r3, lsl #31
	...
20013790:	fc03ff80 	stc2	15, cr15, [r3], {128}	; 0x80
20013794:	00003ff1 	strdeq	r3, [r0], -r1
	...
200137a0:	fc0fef80 	stc2	15, cr14, [pc], {128}	; 0x80
200137a4:	00001ffd 	strdeq	r1, [r0], -sp
	...
200137b0:	fe7f9f00 	cdp2	15, 7, cr9, cr15, cr0, {0}
200137b4:	00000efe 	strdeq	r0, [r0], -lr
	...
200137c0:	7eff7e00 	cdpvc	14, 15, cr7, cr15, cr0, {0}
200137c4:	0000033f 	andeq	r0, r0, pc, lsr r3
	...
200137d0:	90fef800 	rscsls	pc, lr, r0, lsl #16
200137d4:	000000cf 	andeq	r0, r0, pc, asr #1
	...
200137e0:	e7fff000 	ldrb	pc, [pc, r0]!	; <UNPREDICTABLE>
200137e4:	00000073 	andeq	r0, r0, r3, ror r0
	...
200137f0:	f7ffc000 			; <UNDEFINED> instruction: 0xf7ffc000
200137f4:	0000001f 	andeq	r0, r0, pc, lsl r0
	...
20013800:	cfff0000 	svcgt	0x00ff0000
20013804:	00000007 	andeq	r0, r0, r7
	...
20013810:	dffe0000 	svcle	0x00fe0000
20013814:	00000003 	andeq	r0, r0, r3
	...
20013820:	cff80000 	svcgt	0x00f80000
20013824:	00000001 	andeq	r0, r0, r1
	...
20013830:	e7e00000 	strb	r0, [r0, r0]!
20013834:	00000001 	andeq	r0, r0, r1
	...
20013840:	ffc00000 			; <UNDEFINED> instruction: 0xffc00000
	...
20013850:	7f800000 	svcvc	0x00800000
	...

2001386c <game_over_witch6_black_bits>:
2001386c:	01c00000 	biceq	r0, r0, r0
20013870:	00000000 	andeq	r0, r0, r0
20013874:	0000001c 	andeq	r0, r0, ip, lsl r0
20013878:	00000000 	andeq	r0, r0, r0
2001387c:	00780000 	rsbseq	r0, r8, r0
20013880:	00000000 	andeq	r0, r0, r0
20013884:	0000003c 	andeq	r0, r0, ip, lsr r0
20013888:	00000000 	andeq	r0, r0, r0
2001388c:	000f8000 	andeq	r8, pc, r0
20013890:	00000000 	andeq	r0, r0, r0
20013894:	0000003c 	andeq	r0, r0, ip, lsr r0
20013898:	00000000 	andeq	r0, r0, r0
2001389c:	0000f000 	andeq	pc, r0, r0
200138a0:	00000000 	andeq	r0, r0, r0
200138a4:	000000f8 	strdeq	r0, [r0], -r8
200138a8:	00000000 	andeq	r0, r0, r0
200138ac:	00001c00 	andeq	r1, r0, r0, lsl #24
200138b0:	00000000 	andeq	r0, r0, r0
200138b4:	000001f8 	strdeq	r0, [r0], -r8
200138b8:	00000000 	andeq	r0, r0, r0
200138bc:	00000700 	andeq	r0, r0, r0, lsl #14
200138c0:	00000000 	andeq	r0, r0, r0
200138c4:	000007f0 	strdeq	r0, [r0], -r0	; <UNPREDICTABLE>
200138c8:	00000000 	andeq	r0, r0, r0
200138cc:	00000180 	andeq	r0, r0, r0, lsl #3
200138d0:	00000000 	andeq	r0, r0, r0
200138d4:	000007e0 	andeq	r0, r0, r0, ror #15
200138d8:	00000000 	andeq	r0, r0, r0
200138dc:	000000e0 	andeq	r0, r0, r0, ror #1
200138e0:	00000000 	andeq	r0, r0, r0
200138e4:	00000fe0 	andeq	r0, r0, r0, ror #31
200138e8:	00000000 	andeq	r0, r0, r0
200138ec:	00000030 	andeq	r0, r0, r0, lsr r0
200138f0:	00000000 	andeq	r0, r0, r0
200138f4:	00001fe0 	andeq	r1, r0, r0, ror #31
200138f8:	00000000 	andeq	r0, r0, r0
200138fc:	f8000010 			; <UNDEFINED> instruction: 0xf8000010
20013900:	0000007f 	andeq	r0, r0, pc, ror r0
20013904:	00003fc0 	andeq	r3, r0, r0, asr #31
20013908:	00000000 	andeq	r0, r0, r0
2001390c:	ffffc010 			; <UNDEFINED> instruction: 0xffffc010
20013910:	000000ff 	strdeq	r0, [r0], -pc	; <UNPREDICTABLE>
20013914:	00007fc0 	andeq	r7, r0, r0, asr #31
20013918:	00000000 	andeq	r0, r0, r0
2001391c:	fffff830 			; <UNDEFINED> instruction: 0xfffff830
20013920:	000000ff 	strdeq	r0, [r0], -pc	; <UNPREDICTABLE>
20013924:	00007fc0 	andeq	r7, r0, r0, asr #31
20013928:	00000000 	andeq	r0, r0, r0
2001392c:	ff800fc0 			; <UNDEFINED> instruction: 0xff800fc0
20013930:	000000ff 	strdeq	r0, [r0], -pc	; <UNPREDICTABLE>
20013934:	0001ffc0 	andeq	pc, r1, r0, asr #31
	...
20013940:	00000040 	andeq	r0, r0, r0, asr #32
20013944:	0007ff80 	andeq	pc, r7, r0, lsl #31
	...
20013950:	00000040 	andeq	r0, r0, r0, asr #32
20013954:	000fff80 	andeq	pc, pc, r0, lsl #31
	...
20013960:	00000060 	andeq	r0, r0, r0, rrx
20013964:	001fff00 	andseq	pc, pc, r0, lsl #30
	...
20013970:	00000030 	andeq	r0, r0, r0, lsr r0
20013974:	001ffe00 	andseq	pc, pc, r0, lsl #28
	...
20013980:	fffff810 			; <UNDEFINED> instruction: 0xfffff810
20013984:	001ffc07 	andseq	pc, pc, r7, lsl #24
	...
20013990:	ffffff18 			; <UNDEFINED> instruction: 0xffffff18
20013994:	003fffff 	ldrshteq	pc, [pc], -pc	; <UNPREDICTABLE>
	...
200139a0:	ffffffcc 			; <UNDEFINED> instruction: 0xffffffcc
200139a4:	003fffff 	ldrshteq	pc, [pc], -pc	; <UNPREDICTABLE>
200139a8:	00000000 	andeq	r0, r0, r0
200139ac:	c0000000 	andgt	r0, r0, r0
200139b0:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
200139b4:	00ffffff 	ldrshteq	pc, [pc], #255	; <UNPREDICTABLE>
200139b8:	00000000 	andeq	r0, r0, r0
200139bc:	ff000000 			; <UNDEFINED> instruction: 0xff000000
200139c0:	0007ffff 	strdeq	pc, [r7], -pc	; <UNPREDICTABLE>
200139c4:	07ffffc0 	ldrbeq	pc, [pc, r0, asr #31]!	; <UNPREDICTABLE>
200139c8:	00000000 	andeq	r0, r0, r0
200139cc:	ffff0000 			; <UNDEFINED> instruction: 0xffff0000
200139d0:	000c07ff 	strdeq	r0, [ip], -pc	; <UNPREDICTABLE>
200139d4:	1ffff1c0 	svcne	0x00fff1c0
200139d8:	00000000 	andeq	r0, r0, r0
200139dc:	ffffc000 			; <UNDEFINED> instruction: 0xffffc000
200139e0:	000800ff 	strdeq	r0, [r8], -pc	; <UNPREDICTABLE>
200139e4:	7fff0060 	svcvc	0x00ff0060
200139e8:	00000000 	andeq	r0, r0, r0
200139ec:	ffffe000 			; <UNDEFINED> instruction: 0xffffe000
200139f0:	0033fe3f 	eorseq	pc, r3, pc, lsr lr	; <UNPREDICTABLE>
200139f4:	fffc0030 			; <UNDEFINED> instruction: 0xfffc0030
200139f8:	00000001 	andeq	r0, r0, r1
200139fc:	fffff800 	vcmla.f32	d31, d15, d0[0], #270
20013a00:	007e031f 	rsbseq	r0, lr, pc, lsl r3
20013a04:	fff03f10 			; <UNDEFINED> instruction: 0xfff03f10
20013a08:	00000007 	andeq	r0, r0, r7
20013a0c:	fffff800 	vcmla.f32	d31, d15, d0[0], #270
20013a10:	00f3c187 	rscseq	ip, r3, r7, lsl #3
20013a14:	ffc061e8 			; <UNDEFINED> instruction: 0xffc061e8
20013a18:	0000000f 	andeq	r0, r0, pc
20013a1c:	fffff000 			; <UNDEFINED> instruction: 0xfffff000
20013a20:	01c46187 	biceq	r6, r4, r7, lsl #3
20013a24:	ffc087bc 			; <UNDEFINED> instruction: 0xffc087bc
20013a28:	0000003f 	andeq	r0, r0, pc, lsr r0
20013a2c:	ffffc000 			; <UNDEFINED> instruction: 0xffffc000
20013a30:	0385b107 	orreq	fp, r5, #-1073741823	; 0xc0000001
20013a34:	ffc084ee 			; <UNDEFINED> instruction: 0xffc084ee
20013a38:	000000ff 	strdeq	r0, [r0], -pc	; <UNPREDICTABLE>
20013a3c:	f8000000 			; <UNDEFINED> instruction: 0xf8000000
20013a40:	00879103 	addeq	r9, r7, r3, lsl #2
20013a44:	ffc0c5a4 			; <UNDEFINED> instruction: 0xffc0c5a4
20013a48:	000003ff 	strdeq	r0, [r0], -pc	; <UNPREDICTABLE>
20013a4c:	80000000 	andhi	r0, r0, r0
20013a50:	00827303 	addeq	r7, r2, r3, lsl #6
20013a54:	ffc265b2 			; <UNDEFINED> instruction: 0xffc265b2
20013a58:	000007ff 	strdeq	r0, [r0], -pc	; <UNPREDICTABLE>
20013a5c:	00000000 	andeq	r0, r0, r0
20013a60:	00c3c202 	sbceq	ip, r3, r2, lsl #4
20013a64:	ffe63670 			; <UNDEFINED> instruction: 0xffe63670
20013a68:	00000fff 	strdeq	r0, [r0], -pc	; <UNPREDICTABLE>
20013a6c:	00000000 	andeq	r0, r0, r0
20013a70:	00700e32 	rsbseq	r0, r0, r2, lsr lr
20013a74:	ffef1be0 			; <UNDEFINED> instruction: 0xffef1be0
20013a78:	00001fff 	strdeq	r1, [r0], -pc	; <UNPREDICTABLE>
20013a7c:	00000000 	andeq	r0, r0, r0
20013a80:	001ff81a 	andseq	pc, pc, sl, lsl r8	; <UNPREDICTABLE>
20013a84:	ffea8fe0 			; <UNDEFINED> instruction: 0xffea8fe0
20013a88:	00001fff 	strdeq	r1, [r0], -pc	; <UNPREDICTABLE>
20013a8c:	00000000 	andeq	r0, r0, r0
20013a90:	0800001a 	stmdaeq	r0, {r1, r3, r4}
20013a94:	ffe141a0 			; <UNDEFINED> instruction: 0xffe141a0
20013a98:	00001fff 	strdeq	r1, [r0], -pc	; <UNPREDICTABLE>
20013a9c:	00000000 	andeq	r0, r0, r0
20013aa0:	0c0000e2 	stceq	0, cr0, [r0], {226}	; 0xe2
20013aa4:	ffa14020 			; <UNDEFINED> instruction: 0xffa14020
20013aa8:	00000fff 	strdeq	r0, [r0], -pc	; <UNPREDICTABLE>
20013aac:	00000000 	andeq	r0, r0, r0
20013ab0:	040800a4 	streq	r0, [r8], #-164	; 0xffffff5c
20013ab4:	fc20a020 	stc2	0, cr10, [r0], #-128	; 0xffffff80
20013ab8:	00000fff 	strdeq	r0, [r0], -pc	; <UNPREDICTABLE>
20013abc:	78000000 	stmdavc	r0, {}	; <UNPREDICTABLE>
20013ac0:	040803c7 	streq	r0, [r8], #-967	; 0xfffffc39
20013ac4:	c0109030 	andsgt	r9, r0, r0, lsr r0
20013ac8:	000007ff 	strdeq	r0, [r0], -pc	; <UNPREDICTABLE>
20013acc:	cff80000 	svcgt	0x00f80000
20013ad0:	06080649 	streq	r0, [r8], -r9, asr #12
20013ad4:	fff04810 			; <UNDEFINED> instruction: 0xfff04810
20013ad8:	000003fc 	strdeq	r0, [r0], -ip
20013adc:	000f0000 	andeq	r0, pc, r0
20013ae0:	02081c88 	andeq	r1, r8, #136, 24	; 0x8800
20013ae4:	fff82610 			; <UNDEFINED> instruction: 0xfff82610
20013ae8:	0000000f 	andeq	r0, r0, pc
20013aec:	00018000 	andeq	r8, r1, r0
20013af0:	0018f110 	andseq	pc, r8, r0, lsl r1	; <UNPREDICTABLE>
20013af4:	fff821f8 			; <UNDEFINED> instruction: 0xfff821f8
20013af8:	000000ff 	strdeq	r0, [r0], -pc	; <UNPREDICTABLE>
20013afc:	00008000 	andeq	r8, r0, r0
20013b00:	003f8110 	eorseq	r8, pc, r0, lsl r1	; <UNPREDICTABLE>
20013b04:	807c1048 	rsbshi	r1, ip, r8, asr #32
20013b08:	00000fff 	strdeq	r0, [r0], -pc	; <UNPREDICTABLE>
20013b0c:	0000c000 	andeq	ip, r0, r0
20013b10:	00680230 	rsbeq	r0, r8, r0, lsr r2
20013b14:	003c904e 	eorseq	r9, ip, lr, asr #32
20013b18:	00007fff 	strdeq	r7, [r0], -pc	; <UNPREDICTABLE>
20013b1c:	00007000 	andeq	r7, r0, r0
20013b20:	00c80260 	sbceq	r0, r8, r0, ror #4
20013b24:	001e8823 	andseq	r8, lr, r3, lsr #16
20013b28:	0003fffe 	strdeq	pc, [r3], -lr
20013b2c:	00001800 	andeq	r1, r0, r0, lsl #16
20013b30:	83f80460 	mvnshi	r0, #96, 8	; 0x60000000
20013b34:	000f0425 	andeq	r0, pc, r5, lsr #8
20013b38:	000ffffc 	strdeq	pc, [pc], -ip
20013b3c:	00000c00 	andeq	r0, r0, r0, lsl #24
20013b40:	7e6018c0 	cdpvc	8, 6, cr1, cr0, cr0, {6}
20013b44:	000f8224 	andeq	r8, pc, r4, lsr #4
20013b48:	003ffff8 	ldrshteq	pc, [pc], -r8	; <UNPREDICTABLE>
20013b4c:	00000600 	andeq	r0, r0, r0, lsl #12
20013b50:	1f0063c0 	svcne	0x000063c0
20013b54:	00079918 	andeq	r9, r7, r8, lsl r9
20013b58:	007ffff0 	ldrshteq	pc, [pc], #-240	; <UNPREDICTABLE>
20013b5c:	00000300 	andeq	r0, r0, r0, lsl #6
20013b60:	09008f80 	stmdbeq	r0, {r7, r8, r9, sl, fp, pc}
20013b64:	0003c880 	andeq	ip, r3, r0, lsl #17
20013b68:	00ffffc0 	rscseq	pc, pc, r0, asr #31
20013b6c:	00000180 	andeq	r0, r0, r0, lsl #3
20013b70:	10830700 	addne	r0, r3, r0, lsl #14
20013b74:	0001e640 	andeq	lr, r1, r0, asr #12
20013b78:	03ffff80 	mvnseq	pc, #128, 30	; 0x200
20013b7c:	000000c0 	andeq	r0, r0, r0, asr #1
20013b80:	108c0700 	addne	r0, ip, r0, lsl #14
20013b84:	0001f320 	andeq	pc, r1, r0, lsr #6
20013b88:	07ffff00 	ldrbeq	pc, [pc, r0, lsl #30]!	; <UNPREDICTABLE>
20013b8c:	00000040 	andeq	r0, r0, r0, asr #32
20013b90:	fff00e00 			; <UNDEFINED> instruction: 0xfff00e00
20013b94:	0000f99f 	muleq	r0, pc, r9	; <UNPREDICTABLE>
20013b98:	0ffffe00 	svceq	0x00fffe00
20013b9c:	00000060 	andeq	r0, r0, r0, rrx
20013ba0:	00061c00 	andeq	r1, r6, r0, lsl #24
20013ba4:	00007c80 	andeq	r7, r0, r0, lsl #25
20013ba8:	3ffffc00 	svccc	0x00fffc00
20013bac:	00000030 	andeq	r0, r0, r0, lsr r0
20013bb0:	000c3800 	andeq	r3, ip, r0, lsl #16
20013bb4:	00007c00 	andeq	r7, r0, r0, lsl #24
20013bb8:	7ffff800 	svcvc	0x00fff800
20013bbc:	00000010 	andeq	r0, r0, r0, lsl r0
20013bc0:	70187000 	andsvc	r7, r8, r0
20013bc4:	00003e00 	andeq	r3, r0, r0, lsl #28
20013bc8:	fffff000 			; <UNDEFINED> instruction: 0xfffff000
20013bcc:	00000018 	andeq	r0, r0, r8, lsl r0
20013bd0:	8030c000 	eorshi	ip, r0, r0
20013bd4:	00001e00 	andeq	r1, r0, r0, lsl #28
20013bd8:	ffffe000 			; <UNDEFINED> instruction: 0xffffe000
20013bdc:	0000000c 	andeq	r0, r0, ip
20013be0:	8001c000 	andhi	ip, r1, r0
20013be4:	00001f00 	andeq	r1, r0, r0, lsl #30
20013be8:	ffffc000 			; <UNDEFINED> instruction: 0xffffc000
20013bec:	00000006 	andeq	r0, r0, r6
20013bf0:	80038000 	andhi	r8, r3, r0
20013bf4:	00000f00 	andeq	r0, r0, r0, lsl #30
20013bf8:	ffffc000 			; <UNDEFINED> instruction: 0xffffc000
20013bfc:	00000002 	andeq	r0, r0, r2
20013c00:	00060000 	andeq	r0, r6, r0
20013c04:	00000f80 	andeq	r0, r0, r0, lsl #31
20013c08:	ffff8000 			; <UNDEFINED> instruction: 0xffff8000
20013c0c:	00000001 	andeq	r0, r0, r1
20013c10:	000c0000 	andeq	r0, ip, r0
20013c14:	000007c0 	andeq	r0, r0, r0, asr #15
20013c18:	ffff0000 			; <UNDEFINED> instruction: 0xffff0000
20013c1c:	00000001 	andeq	r0, r0, r1
20013c20:	00380000 	eorseq	r0, r8, r0
20013c24:	000003e0 	andeq	r0, r0, r0, ror #7
20013c28:	fffe0000 			; <UNDEFINED> instruction: 0xfffe0000
20013c2c:	00000000 	andeq	r0, r0, r0
20013c30:	03f80000 	mvnseq	r0, #0
20013c34:	000001f0 	strdeq	r0, [r0], -r0	; <UNPREDICTABLE>
20013c38:	fffe0000 			; <UNDEFINED> instruction: 0xfffe0000
20013c3c:	00000000 	andeq	r0, r0, r0
20013c40:	7ff00000 	svcvc	0x00f00000	; IMB
20013c44:	00000078 	andeq	r0, r0, r8, ror r0
20013c48:	fffc0000 			; <UNDEFINED> instruction: 0xfffc0000
20013c4c:	30000000 	andcc	r0, r0, r0
20013c50:	ffe00000 			; <UNDEFINED> instruction: 0xffe00000
20013c54:	0000003f 	andeq	r0, r0, pc, lsr r0
20013c58:	fffc0000 			; <UNDEFINED> instruction: 0xfffc0000
20013c5c:	78000000 	stmdavc	r0, {}	; <UNPREDICTABLE>
20013c60:	ff000000 			; <UNDEFINED> instruction: 0xff000000
20013c64:	0000001f 	andeq	r0, r0, pc, lsl r0
20013c68:	fff80000 			; <UNDEFINED> instruction: 0xfff80000

20013c6c <game_over_witch6_gray_bits>:
20013c6c:	fe000000 	cdp2	0, 0, cr0, cr0, cr0, {0}
20013c70:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
20013c74:	00000003 	andeq	r0, r0, r3
20013c78:	00000000 	andeq	r0, r0, r0
20013c7c:	ff800000 			; <UNDEFINED> instruction: 0xff800000
20013c80:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
20013c84:	00000003 	andeq	r0, r0, r3
20013c88:	00000000 	andeq	r0, r0, r0
20013c8c:	fff00000 			; <UNDEFINED> instruction: 0xfff00000	; IMB
20013c90:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
20013c94:	00000003 	andeq	r0, r0, r3
20013c98:	00000000 	andeq	r0, r0, r0
20013c9c:	ffff0000 			; <UNDEFINED> instruction: 0xffff0000
20013ca0:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
20013ca4:	00000007 	andeq	r0, r0, r7
20013ca8:	00000000 	andeq	r0, r0, r0
20013cac:	ffffe000 			; <UNDEFINED> instruction: 0xffffe000
20013cb0:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
20013cb4:	00000007 	andeq	r0, r0, r7
20013cb8:	00000000 	andeq	r0, r0, r0
20013cbc:	fffff800 	vcmla.f32	d31, d15, d0[0], #270
20013cc0:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
20013cc4:	0000000f 	andeq	r0, r0, pc
20013cc8:	00000000 	andeq	r0, r0, r0
20013ccc:	fffffe00 			; <UNDEFINED> instruction: 0xfffffe00
20013cd0:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
20013cd4:	0000001f 	andeq	r0, r0, pc, lsl r0
20013cd8:	00000000 	andeq	r0, r0, r0
20013cdc:	ffffff00 			; <UNDEFINED> instruction: 0xffffff00
20013ce0:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
20013ce4:	0000001f 	andeq	r0, r0, pc, lsl r0
20013ce8:	00000000 	andeq	r0, r0, r0
20013cec:	ffffffc0 			; <UNDEFINED> instruction: 0xffffffc0
20013cf0:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
20013cf4:	0000001f 	andeq	r0, r0, pc, lsl r0
20013cf8:	00000000 	andeq	r0, r0, r0
20013cfc:	07ffffe0 	ldrbeq	pc, [pc, r0, ror #31]!	; <UNPREDICTABLE>
20013d00:	ffffff80 			; <UNDEFINED> instruction: 0xffffff80
20013d04:	0000003f 	andeq	r0, r0, pc, lsr r0
20013d08:	00000000 	andeq	r0, r0, r0
20013d0c:	00003fe0 	andeq	r3, r0, r0, ror #31
20013d10:	ffffff00 			; <UNDEFINED> instruction: 0xffffff00
20013d14:	0000003f 	andeq	r0, r0, pc, lsr r0
20013d18:	00000000 	andeq	r0, r0, r0
20013d1c:	000007c0 	andeq	r0, r0, r0, asr #15
20013d20:	ffffff00 			; <UNDEFINED> instruction: 0xffffff00
20013d24:	0000003f 	andeq	r0, r0, pc, lsr r0
	...
20013d30:	ffffff00 			; <UNDEFINED> instruction: 0xffffff00
20013d34:	0000003f 	andeq	r0, r0, pc, lsr r0
	...
20013d40:	ffffff80 			; <UNDEFINED> instruction: 0xffffff80
20013d44:	0000007f 	andeq	r0, r0, pc, ror r0
	...
20013d50:	ffffff80 			; <UNDEFINED> instruction: 0xffffff80
20013d54:	0000007f 	andeq	r0, r0, pc, ror r0
	...
20013d60:	ffffff80 			; <UNDEFINED> instruction: 0xffffff80
20013d64:	000000ff 	strdeq	r0, [r0], -pc	; <UNPREDICTABLE>
	...
20013d70:	ffffffc0 			; <UNDEFINED> instruction: 0xffffffc0
20013d74:	000001ff 	strdeq	r0, [r0], -pc	; <UNPREDICTABLE>
	...
20013d80:	000007e0 	andeq	r0, r0, r0, ror #15
20013d84:	000003f8 	strdeq	r0, [r0], -r8
	...
20013d90:	000000e0 	andeq	r0, r0, r0, ror #1
	...
20013da0:	00000030 	andeq	r0, r0, r0, lsr r0
	...
20013e20:	00008000 	andeq	r8, r0, r0
	...
20013e30:	00024000 	andeq	r4, r2, r0
	...
20013e40:	00006000 	andeq	r6, r0, r0
20013e44:	00000040 	andeq	r0, r0, r0, asr #32
	...
20013e50:	00018000 	andeq	r8, r1, r0
20013e54:	00000240 	andeq	r0, r0, r0, asr #4
	...
20013e64:	00000180 	andeq	r0, r0, r0, lsl #3
	...
20013e84:	00010000 	andeq	r0, r1, r0
	...
20013e94:	00008000 	andeq	r8, r0, r0
	...
20013ea4:	00008000 	andeq	r8, r0, r0
	...
20013eb0:	00000040 	andeq	r0, r0, r0, asr #32
20013eb4:	00004000 	andeq	r4, r0, r0
	...
20013ec4:	00006000 	andeq	r6, r0, r0
20013ec8:	00000000 	andeq	r0, r0, r0
20013ecc:	30000000 	andcc	r0, r0, r0
20013ed0:	00000186 	andeq	r0, r0, r6, lsl #3
20013ed4:	00003000 	andeq	r3, r0, r0
20013ed8:	00000000 	andeq	r0, r0, r0
20013edc:	fff00000 			; <UNDEFINED> instruction: 0xfff00000	; IMB
20013ee0:	00000307 	andeq	r0, r0, r7, lsl #6
20013ee4:	00001800 	andeq	r1, r0, r0, lsl #16
20013ee8:	00000000 	andeq	r0, r0, r0
20013eec:	fffe0000 			; <UNDEFINED> instruction: 0xfffe0000
20013ef0:	00000e0f 	andeq	r0, r0, pc, lsl #28
20013ef4:	00001e00 	andeq	r1, r0, r0, lsl #28
20013ef8:	00000000 	andeq	r0, r0, r0
20013efc:	ffff0000 			; <UNDEFINED> instruction: 0xffff0000
20013f00:	00007e0f 	andeq	r7, r0, pc, lsl #28
20013f04:	7f800f80 	svcvc	0x00800f80
20013f08:	00000000 	andeq	r0, r0, r0
20013f0c:	ffff0000 			; <UNDEFINED> instruction: 0xffff0000
20013f10:	0007fc0f 	andeq	pc, r7, pc, lsl #24
20013f14:	ffc00f80 			; <UNDEFINED> instruction: 0xffc00f80
20013f18:	00000000 	andeq	r0, r0, r0
20013f1c:	ffff8000 			; <UNDEFINED> instruction: 0xffff8000
20013f20:	0007fc1f 	andeq	pc, r7, pc, lsl ip	; <UNPREDICTABLE>
20013f24:	ffe007c0 			; <UNDEFINED> instruction: 0xffe007c0
20013f28:	00000001 	andeq	r0, r0, r1
20013f2c:	ffffe000 			; <UNDEFINED> instruction: 0xffffe000
20013f30:	0007f81f 	andeq	pc, r7, pc, lsl r8	; <UNPREDICTABLE>
20013f34:	fff003c2 			; <UNDEFINED> instruction: 0xfff003c2
20013f38:	00000003 	andeq	r0, r0, r3
20013f3c:	fffff000 			; <UNDEFINED> instruction: 0xfffff000
20013f40:	819fe03f 	orrshi	lr, pc, pc, lsr r0	; <UNPREDICTABLE>
20013f44:	fff001c3 			; <UNDEFINED> instruction: 0xfff001c3
20013f48:	00000007 	andeq	r0, r0, r7
20013f4c:	fffff800 	vcmla.f32	d31, d15, d0[0], #270
20013f50:	e0ff803f 	rscs	r8, pc, pc, lsr r0	; <UNPREDICTABLE>
20013f54:	fff800e7 			; <UNDEFINED> instruction: 0xfff800e7
20013f58:	0000000f 	andeq	r0, r0, pc
20013f5c:	fffffc00 			; <UNDEFINED> instruction: 0xfffffc00
20013f60:	f0ff007f 			; <UNDEFINED> instruction: 0xf0ff007f
20013f64:	fffc007f 			; <UNDEFINED> instruction: 0xfffc007f
20013f68:	0000003f 	andeq	r0, r0, pc, lsr r0
20013f6c:	fffffe00 			; <UNDEFINED> instruction: 0xfffffe00
20013f70:	e07c00ff 	ldrsht	r0, [ip], #-15
20013f74:	fffe003f 			; <UNDEFINED> instruction: 0xfffe003f
20013f78:	0000007f 	andeq	r0, r0, pc, ror r0
20013f7c:	ffffff00 			; <UNDEFINED> instruction: 0xffffff00
20013f80:	e07000ff 	ldrsht	r0, [r0], #-15
20013f84:	fffe001f 			; <UNDEFINED> instruction: 0xfffe001f
20013f88:	000000ff 	strdeq	r0, [r0], -pc	; <UNPREDICTABLE>
20013f8c:	ffffff80 			; <UNDEFINED> instruction: 0xffffff80
20013f90:	000001ff 	strdeq	r0, [r0], -pc	; <UNPREDICTABLE>
20013f94:	ffff0000 			; <UNDEFINED> instruction: 0xffff0000
20013f98:	000001ff 	strdeq	r0, [r0], -pc	; <UNPREDICTABLE>
20013f9c:	ffffff80 			; <UNDEFINED> instruction: 0xffffff80
20013fa0:	000003ff 	strdeq	r0, [r0], -pc	; <UNPREDICTABLE>
20013fa4:	ffff8000 			; <UNDEFINED> instruction: 0xffff8000
20013fa8:	000003ff 	strdeq	r0, [r0], -pc	; <UNPREDICTABLE>
20013fac:	ffffffc0 			; <UNDEFINED> instruction: 0xffffffc0
20013fb0:	000007ff 	strdeq	r0, [r0], -pc	; <UNPREDICTABLE>
20013fb4:	ffff8000 			; <UNDEFINED> instruction: 0xffff8000
20013fb8:	000007ff 	strdeq	r0, [r0], -pc	; <UNPREDICTABLE>
20013fbc:	ffffffe0 			; <UNDEFINED> instruction: 0xffffffe0
20013fc0:	00000fff 	strdeq	r0, [r0], -pc	; <UNPREDICTABLE>
20013fc4:	ffffc000 			; <UNDEFINED> instruction: 0xffffc000
20013fc8:	00000fff 	strdeq	r0, [r0], -pc	; <UNPREDICTABLE>
20013fcc:	ffffffe0 			; <UNDEFINED> instruction: 0xffffffe0
20013fd0:	00003fff 	strdeq	r3, [r0], -pc	; <UNPREDICTABLE>
20013fd4:	ffffe000 			; <UNDEFINED> instruction: 0xffffe000
20013fd8:	00001fff 	strdeq	r1, [r0], -pc	; <UNPREDICTABLE>
20013fdc:	fffffff0 			; <UNDEFINED> instruction: 0xfffffff0
20013fe0:	00003fff 	strdeq	r3, [r0], -pc	; <UNPREDICTABLE>
20013fe4:	ffffe000 			; <UNDEFINED> instruction: 0xffffe000
20013fe8:	00003fff 	strdeq	r3, [r0], -pc	; <UNPREDICTABLE>
20013fec:	fffffff8 			; <UNDEFINED> instruction: 0xfffffff8
20013ff0:	00007fff 	strdeq	r7, [r0], -pc	; <UNPREDICTABLE>
20013ff4:	fffff000 			; <UNDEFINED> instruction: 0xfffff000
20013ff8:	00003fff 	strdeq	r3, [r0], -pc	; <UNPREDICTABLE>
20013ffc:	fffffffc 			; <UNDEFINED> instruction: 0xfffffffc
20014000:	0001ffff 	strdeq	pc, [r1], -pc	; <UNPREDICTABLE>
20014004:	fffff000 			; <UNDEFINED> instruction: 0xfffff000
20014008:	00007fff 	strdeq	r7, [r0], -pc	; <UNPREDICTABLE>
2001400c:	fffffffe 			; <UNDEFINED> instruction: 0xfffffffe
20014010:	0003ffff 	strdeq	pc, [r3], -pc	; <UNPREDICTABLE>
20014014:	fffff800 	vcmla.f32	d31, d15, d0[0], #270
20014018:	0000ffff 	strdeq	pc, [r0], -pc	; <UNPREDICTABLE>
2001401c:	fffffffe 			; <UNDEFINED> instruction: 0xfffffffe
20014020:	0007ffff 	strdeq	pc, [r7], -pc	; <UNPREDICTABLE>
20014024:	fffffc00 			; <UNDEFINED> instruction: 0xfffffc00
20014028:	0001ffff 	strdeq	pc, [r1], -pc	; <UNPREDICTABLE>
2001402c:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
20014030:	0007ffff 	strdeq	pc, [r7], -pc	; <UNPREDICTABLE>
20014034:	fffffe00 			; <UNDEFINED> instruction: 0xfffffe00
20014038:	0001ffff 	strdeq	pc, [r1], -pc	; <UNPREDICTABLE>
2001403c:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
20014040:	000fffff 	strdeq	pc, [pc], -pc	; <UNPREDICTABLE>
20014044:	ffffff80 			; <UNDEFINED> instruction: 0xffffff80
20014048:	0003ffff 	strdeq	pc, [r3], -pc	; <UNPREDICTABLE>
2001404c:	cfffffff 	svcgt	0x00ffffff
20014050:	001fffff 			; <UNDEFINED> instruction: 0x001fffff
20014054:	ffffffc0 			; <UNDEFINED> instruction: 0xffffffc0
20014058:	0003ffff 	strdeq	pc, [r3], -pc	; <UNPREDICTABLE>
2001405c:	87ffffff 			; <UNDEFINED> instruction: 0x87ffffff
20014060:	00ffffff 	ldrshteq	pc, [pc], #255	; <UNPREDICTABLE>
20014064:	ffffffe0 			; <UNDEFINED> instruction: 0xffffffe0
20014068:	0007ffff 	strdeq	pc, [r7], -pc	; <UNPREDICTABLE>

2001406c <game_over_witch6_light_bits>:
	...
200141c0:	fff80000 			; <UNDEFINED> instruction: 0xfff80000
200141c4:	0000003f 	andeq	r0, r0, pc, lsr r0
	...
200141d0:	fff3f800 	vcmla.f32	d31, d3, d0[0], #270
200141d4:	00000e3f 	andeq	r0, r0, pc, lsr lr
	...
200141e0:	fff7ff00 			; <UNDEFINED> instruction: 0xfff7ff00
200141e4:	0000ff9f 	muleq	r0, pc, pc	; <UNPREDICTABLE>
	...
200141f0:	ffcc01c0 			; <UNDEFINED> instruction: 0xffcc01c0
200141f4:	0003ffcf 	andeq	pc, r3, pc, asr #31
	...
20014200:	ff8000e0 			; <UNDEFINED> instruction: 0xff8000e0
20014204:	000fc0ef 	andeq	ip, pc, pc, ror #1
	...
20014210:	ff000078 			; <UNDEFINED> instruction: 0xff000078
20014214:	003f8017 	eorseq	r8, pc, r7, lsl r0	; <UNPREDICTABLE>
	...
20014220:	fe000078 	mcr2	0, 0, r0, cr0, cr8, {3}
20014224:	003f0003 	eorseq	r0, pc, r3
	...
20014230:	fc0000f8 	stc2	0, cr0, [r0], {248}	; 0xf8
20014234:	003f0011 	eorseq	r0, pc, r1, lsl r0	; <UNPREDICTABLE>
	...
20014240:	ff0000fc 			; <UNDEFINED> instruction: 0xff0000fc
20014244:	003f001b 	eorseq	r0, pc, fp, lsl r0	; <UNPREDICTABLE>
	...
20014250:	ff0000fc 			; <UNDEFINED> instruction: 0xff0000fc
20014254:	003d800d 	eorseq	r8, sp, sp
	...
20014260:	ff0001fc 			; <UNDEFINED> instruction: 0xff0001fc
20014264:	0019c00f 	andseq	ip, r9, pc
	...
20014270:	ff8001cc 			; <UNDEFINED> instruction: 0xff8001cc
20014274:	0010e01f 	andseq	lr, r0, pc, lsl r0
	...
20014280:	ffe007e4 			; <UNDEFINED> instruction: 0xffe007e4
20014284:	0014701f 	andseq	r7, r4, pc, lsl r0
	...
20014290:	f7ffffe4 			; <UNDEFINED> instruction: 0xf7ffffe4
20014294:	001e3e5f 	andseq	r3, lr, pc, asr lr
	...
200142a0:	f3ffff1c 	vcvt.u32.f32	d31, d12, #1
200142a4:	001e3fdf 			; <UNDEFINED> instruction: 0x001e3fdf
	...
200142b0:	fbf7ff18 	blx	1fe13f1a <startup-0x1ec0e6>
200142b4:	001f1fdf 			; <UNDEFINED> instruction: 0x001f1fdf
	...
200142c0:	fbf7fc38 	blx	1fe133aa <startup-0x1ecc56>
200142c4:	000f0fcf 	andeq	r0, pc, pc, asr #31
	...
200142d0:	f9f7f830 			; <UNDEFINED> instruction: 0xf9f7f830
200142d4:	000f87ef 	andeq	r8, pc, pc, ror #15
	...
200142e0:	fdf7e070 	ldc2l	0, cr14, [r7, #448]!	; 0x1c0
200142e4:	0007c1ef 	andeq	ip, r7, pc, ror #3
	...
200142f0:	ffe700e0 			; <UNDEFINED> instruction: 0xffe700e0
200142f4:	0007c007 	andeq	ip, r7, r7
	...
20014300:	ffc000e0 			; <UNDEFINED> instruction: 0xffc000e0
20014304:	0003e007 	andeq	lr, r3, r7
	...
20014310:	ff8001c0 			; <UNDEFINED> instruction: 0xff8001c0
20014314:	00036001 	andeq	r6, r3, r1
	...
20014320:	ff000180 			; <UNDEFINED> instruction: 0xff000180
20014324:	00017000 	andeq	r7, r1, r0
	...
20014330:	7c000380 	stcvc	3, cr0, [r0], {128}	; 0x80
20014334:	0000f800 	andeq	pc, r0, r0, lsl #16
	...
20014340:	00000700 	andeq	r0, r0, r0, lsl #14
20014344:	00007c00 	andeq	r7, r0, r0, lsl #24
	...
20014350:	00001c00 	andeq	r1, r0, r0, lsl #24
20014354:	00006600 	andeq	r6, r0, r0, lsl #12
	...
20014360:	00007000 	andeq	r7, r0, r0
20014364:	00003700 	andeq	r3, r0, r0, lsl #14
	...
20014370:	0000f800 	andeq	pc, r0, r0, lsl #16
20014374:	00001980 	andeq	r1, r0, r0, lsl #19
	...
20014380:	0003f800 	andeq	pc, r3, r0, lsl #16
20014384:	00000cc0 	andeq	r0, r0, r0, asr #25
	...
20014390:	000ff000 	andeq	pc, pc, r0
20014394:	00000660 	andeq	r0, r0, r0, ror #12
	...
200143a0:	fff9e000 			; <UNDEFINED> instruction: 0xfff9e000
200143a4:	0000037f 	andeq	r0, r0, pc, ror r3
	...
200143b0:	fff3c000 			; <UNDEFINED> instruction: 0xfff3c000
200143b4:	000003ff 	strdeq	r0, [r0], -pc	; <UNPREDICTABLE>
	...
200143c0:	8fe78000 	svchi	0x00e78000
200143c4:	000001ff 	strdeq	r0, [r0], -pc	; <UNPREDICTABLE>
	...
200143d0:	7fcf0000 	svcvc	0x00cf0000
200143d4:	000001ff 	strdeq	r0, [r0], -pc	; <UNPREDICTABLE>
	...
200143e0:	7ffe0000 	svcvc	0x00fe0000
200143e4:	000000ff 	strdeq	r0, [r0], -pc	; <UNPREDICTABLE>
	...
200143f0:	7ffc0000 	svcvc	0x00fc0000
200143f4:	000000ff 	strdeq	r0, [r0], -pc	; <UNPREDICTABLE>
	...
20014400:	fff80000 			; <UNDEFINED> instruction: 0xfff80000
20014404:	0000007f 	andeq	r0, r0, pc, ror r0
	...
20014410:	fff00000 			; <UNDEFINED> instruction: 0xfff00000	; IMB
20014414:	0000003f 	andeq	r0, r0, pc, lsr r0
	...
20014420:	ffc00000 			; <UNDEFINED> instruction: 0xffc00000
20014424:	0000001f 	andeq	r0, r0, pc, lsl r0
	...
20014430:	fc000000 	stc2	0, cr0, [r0], {-0}
20014434:	0000000f 	andeq	r0, r0, pc
	...
20014440:	80000000 	andhi	r0, r0, r0
20014444:	00000007 	andeq	r0, r0, r7
	...

2001446c <firstTime.4104>:
2001446c:	00000001 	andeq	r0, r0, r1
20014470:	00202020 	eoreq	r2, r0, r0, lsr #32
20014474:	41524b2a 	cmpmi	r2, sl, lsr #22
20014478:	2a202a21 	bcs	2081ed04 <firstTime.4104+0x80a898>
2001447c:	2141524b 	cmpcs	r1, fp, asr #4
20014480:	0000002a 	andeq	r0, r0, sl, lsr #32
20014484:	734c4944 	movtvc	r4, #51524	; 0xc944
20014488:	7469772d 	strbtvc	r7, [r9], #-1837	; 0xfffff8d3
2001448c:	73656863 	cmnvc	r5, #6488064	; 0x630000
20014490:	76616820 	strbtvc	r6, [r1], -r0, lsr #16
20014494:	00000065 	andeq	r0, r0, r5, rrx
20014498:	20726f46 	rsbscs	r6, r2, r6, asr #30
2001449c:	746e6563 	strbtvc	r6, [lr], #-1379	; 0xfffffa9d
200144a0:	65697275 	strbvs	r7, [r9, #-629]!	; 0xfffffd8b
200144a4:	68742073 	ldmdavs	r4!, {r0, r1, r4, r5, r6, sp}^
200144a8:	00000065 	andeq	r0, r0, r5, rrx
200144ac:	20202020 	eorcs	r2, r0, r0, lsr #32
200144b0:	00000000 	andeq	r0, r0, r0
200144b4:	6c696f63 	stclvs	15, cr6, [r9], #-396	; 0xfffffe74
200144b8:	69206465 	stmdbvs	r0!, {r0, r2, r5, r6, sl, sp, lr}
200144bc:	6566206e 	strbvs	r2, [r6, #-110]!	; 0xffffff92
200144c0:	002c7261 	eoreq	r7, ip, r1, ror #4
200144c4:	74616874 	strbtvc	r6, [r1], #-2164	; 0xfffff78c
200144c8:	44206120 	strtmi	r6, [r0], #-288	; 0xfffffee0
200144cc:	2d735049 	ldclcs	0, cr5, [r3, #-292]!	; 0xfffffedc
200144d0:	63746977 	cmnvs	r4, #1949696	; 0x1dc000
200144d4:	00000068 	andeq	r0, r0, r8, rrx
200144d8:	6e656877 	mcrvs	8, 3, r6, cr5, cr7, {3}
200144dc:	72657665 	rsbvc	r7, r5, #105906176	; 0x6500000
200144e0:	65687420 	strbvs	r7, [r8, #-1056]!	; 0xfffffbe0
200144e4:	65682079 	strbvs	r2, [r8, #-121]!	; 0xffffff87
200144e8:	00007261 	andeq	r7, r0, r1, ror #4
200144ec:	6e207369 	cdpvs	3, 2, cr7, cr0, cr9, {3}
200144f0:	2e726165 	rpwcssz	f6, f2, f5
200144f4:	00000000 	andeq	r0, r0, r0
200144f8:	70727573 	rsbsvc	r7, r2, r3, ror r5
200144fc:	69736972 	ldmdbvs	r3!, {r1, r4, r5, r6, r8, fp, sp, lr}^
20014500:	202c676e 	eorcs	r6, ip, lr, ror #14
20014504:	646e6966 	strbtvs	r6, [lr], #-2406	; 0xfffff69a
20014508:	00676e69 	rsbeq	r6, r7, r9, ror #28
2001450c:	69206f53 	stmdbvs	r0!, {r0, r1, r4, r6, r8, r9, sl, fp, sp, lr}
20014510:	73692074 	cmnvc	r9, #116	; 0x74
20014514:	69757120 	ldmdbvs	r5!, {r5, r8, ip, sp, lr}^
20014518:	00006574 	andeq	r6, r0, r4, ror r5
2001451c:	20756f79 	rsbscs	r6, r5, r9, ror pc
20014520:	65726568 	ldrbvs	r6, [r2, #-1384]!	; 0xfffffa98
20014524:	0000002c 	andeq	r0, r0, ip, lsr #32
20014528:	72696568 	rsbvc	r6, r9, #104, 10	; 0x1a000000
2001452c:	206f7420 	rsbcs	r7, pc, r0, lsr #8
20014530:	676e696b 	strbvs	r6, [lr, -fp, ror #18]!
20014534:	61654c20 	cmnvs	r5, r0, lsr #24
20014538:	00002e72 	andeq	r2, r0, r2, ror lr
2001453c:	65657571 	strbvs	r7, [r5, #-1393]!	; 0xfffffa8f
20014540:	6144206e 	cmpvs	r4, lr, rrx
20014544:	206f6666 	rsbcs	r6, pc, r6, ror #12
20014548:	4420666f 	strtmi	r6, [r0], #-1647	; 0xfffff991
2001454c:	2c734c49 	ldclcs	12, cr4, [r3], #-292	; 0xfffffedc
20014550:	00000000 	andeq	r0, r0, r0
20014554:	706d6574 	rsbvc	r6, sp, r4, ror r5
20014558:	2c646574 	cfstr64cs	mvdx6, [r4], #-464	; 0xfffffe30
2001455c:	206f7420 	rsbcs	r7, pc, r0, lsr #8
20014560:	746f6f6c 	strbtvc	r6, [pc], #-3948	; 20014568 <firstTime.4104+0xfc>
20014564:	00000000 	andeq	r0, r0, r0
20014568:	20747542 	rsbscs	r7, r4, r2, asr #10
2001456c:	6279616d 	rsbsvs	r6, r9, #1073741851	; 0x4000001b
20014570:	6f792065 	svcvs	0x00792065
20014574:	65722775 	ldrbvs	r2, [r2, #-1909]!	; 0xfffff88b
20014578:	00000000 	andeq	r0, r0, r0
2001457c:	6d6f7266 	sfmvs	f7, 2, [pc, #-408]!	; 200143ec <game_over_witch6_light_bits+0x380>
20014580:	65687420 	strbvs	r7, [r8, #-1056]!	; 0xfffffbe0
20014584:	63697220 	cmnvs	r9, #32, 4
20014588:	2c736568 	cfldr64cs	mvdx6, [r3], #-416	; 0xfffffe60
2001458c:	00000000 	andeq	r0, r0, r0
20014590:	6b636977 	blvs	218eeb74 <firstTime.4104+0x18da708>
20014594:	44206465 	strtmi	r6, [r0], #-1125	; 0xfffffb9b
20014598:	2d735049 	ldclcs	0, cr5, [r3, #-292]!	; 0xfffffedc
2001459c:	63746977 	cmnvs	r4, #1949696	; 0x1dc000
200145a0:	2e736568 	cdpcs	5, 7, cr6, cr3, cr8, {3}
200145a4:	00000000 	andeq	r0, r0, r0
200145a8:	65727573 	ldrbvs	r7, [r2, #-1395]!	; 0xfffffa8d
200145ac:	79622064 	stmdbvc	r2!, {r2, r5, r6, sp}^
200145b0:	00000000 	andeq	r0, r0, r0
200145b4:	67206f73 			; <UNDEFINED> instruction: 0x67206f73
200145b8:	70706972 	rsbsvc	r6, r0, r2, ror r9
200145bc:	20796c69 	rsbscs	r6, r9, r9, ror #24
200145c0:	61657274 	smcvs	22308	; 0x5724
200145c4:	0000002d 	andeq	r0, r0, sp, lsr #32
200145c8:	6572202d 	ldrbvs	r2, [r2, #-45]!	; 0xffffffd3
200145cc:	20746573 	rsbscs	r6, r4, r3, ror r5
200145d0:	20656874 	rsbcs	r6, r5, r4, ror r8
200145d4:	74697773 	strbtvc	r7, [r9], #-1907	; 0xfffff88d
200145d8:	00216863 	eoreq	r6, r1, r3, ror #16
200145dc:	65746e45 	ldrbvs	r6, [r4, #-3653]!	; 0xfffff1bb
200145e0:	62202c72 	eorvs	r2, r0, #29184	; 0x7200
200145e4:	65766172 	ldrbvs	r6, [r6, #-370]!	; 0xfffffe8e
200145e8:	74697720 	strbtvc	r7, [r9], #-1824	; 0xfffff8e0
200145ec:	002c6863 	eoreq	r6, ip, r3, ror #16
200145f0:	41484148 	cmpmi	r8, r8, asr #2
200145f4:	41484148 	cmpmi	r8, r8, asr #2
200145f8:	41414148 	cmpmi	r1, r8, asr #2
200145fc:	41414141 	cmpmi	r1, r1, asr #2
20014600:	21212141 			; <UNDEFINED> instruction: 0x21212141
20014604:	00000000 	andeq	r0, r0, r0
20014608:	73504944 	cmpvc	r0, #68, 18	; 0x110000
2001460c:	5449572d 	strbpl	r5, [r9], #-1837	; 0xfffff8d3
20014610:	003a4843 	eorseq	r4, sl, r3, asr #16
20014614:	6d612049 	stclvs	0, cr2, [r1, #-292]!	; 0xfffffedc
20014618:	6f727020 	svcvs	0x00727020
2001461c:	6f206475 	svcvs	0x00206475
20014620:	6f792066 	svcvs	0x00792066
20014624:	00002175 	andeq	r2, r0, r5, ror r1
20014628:	65676f52 	strbvs	r6, [r7, #-3922]!	; 0xfffff0ae
2001462c:	4b282072 	blmi	20a1c7fc <firstTime.4104+0xa08390>
20014630:	20676e69 	rsbcs	r6, r7, r9, ror #28
20014634:	7261654c 	rsbvc	r6, r1, #76, 10	; 0x13000000
20014638:	00203a29 	eoreq	r3, r0, r9, lsr #20
2001463c:	69622061 	stmdbvs	r2!, {r0, r5, r6, sp}^
20014640:	70732074 	rsbsvc	r2, r3, r4, ror r0
20014644:	656b6f6f 	strbvs	r6, [fp, #-3951]!	; 0xfffff091
20014648:	756f2064 	strbvc	r2, [pc, #-100]!	; 200145ec <firstTime.4104+0x180>
2001464c:	2e2e2e74 	mcrcs	14, 1, r2, cr14, cr4, {3}
20014650:	00000000 	andeq	r0, r0, r0
20014654:	66666144 	strbtvs	r6, [r6], -r4, asr #2
20014658:	49203a6f 	stmdbmi	r0!, {r0, r1, r2, r3, r5, r6, r9, fp, ip, sp}
2001465c:	66206d27 	strtvs	r6, [r0], -r7, lsr #26
20014660:	696c6565 	stmdbvs	ip!, {r0, r2, r5, r6, r8, sl, sp, lr}^
20014664:	0020676e 	eoreq	r6, r0, lr, ror #14
20014668:	00000000 	andeq	r0, r0, r0
2001466c:	696c632a 	stmdbvs	ip!, {r1, r3, r5, r8, r9, sp, lr}^
20014670:	002a6b63 	eoreq	r6, sl, r3, ror #22
20014674:	7069742a 	rsbvc	r7, r9, sl, lsr #8
20014678:	00002a70 	andeq	r2, r0, r0, ror sl
2001467c:	7061742a 	rsbvc	r7, r1, sl, lsr #8
20014680:	00002a70 	andeq	r2, r0, r0, ror sl
20014684:	67206f74 			; <UNDEFINED> instruction: 0x67206f74
20014688:	20626172 	rsbcs	r6, r2, r2, ror r1
2001468c:	20656874 	rsbcs	r6, r5, r4, ror r8
20014690:	706f7274 	rsbvc	r7, pc, r4, ror r2	; <UNPREDICTABLE>
20014694:	00217968 	eoreq	r7, r1, r8, ror #18
20014698:	66666144 	strbtvs	r6, [r6], -r4, asr #2
2001469c:	49203a6f 	stmdbmi	r0!, {r0, r1, r2, r3, r5, r6, r9, fp, ip, sp}
200146a0:	65656e20 	strbvs	r6, [r5, #-3616]!	; 0xfffff1e0
200146a4:	616d2064 	cmnvs	sp, r4, rrx
200146a8:	20636967 	rsbcs	r6, r3, r7, ror #18
200146ac:	00000000 	andeq	r0, r0, r0
200146b0:	42414b2a 	submi	r4, r1, #43008	; 0xa800
200146b4:	4f4f4f4f 	svcmi	0x004f4f4f
200146b8:	00002a4d 	andeq	r2, r0, sp, asr #20
200146bc:	4f77462a 	svcmi	0x0077462a
200146c0:	2a6f4f4f 	bcs	21be8404 <firstTime.4104+0x1bd3f98>
200146c4:	00000000 	andeq	r0, r0, r0
200146c8:	20202020 	eorcs	r2, r0, r0, lsr #32
200146cc:	794e2020 	stmdbvc	lr, {r5, sp}^
200146d0:	48414841 	stmdami	r1, {r0, r6, fp, lr}^
200146d4:	48414841 	stmdami	r1, {r0, r6, fp, lr}^
200146d8:	00000021 	andeq	r0, r0, r1, lsr #32
200146dc:	4f57462a 	svcmi	0x0057462a
200146e0:	2a48534f 	bcs	21229424 <firstTime.4104+0x1214fb8>
200146e4:	00000000 	andeq	r0, r0, r0
200146e8:	20202020 	eorcs	r2, r0, r0, lsr #32
200146ec:	20202020 	eorcs	r2, r0, r0, lsr #32
200146f0:	73706f4f 	cmnvc	r0, #316	; 0x13c
200146f4:	212e2e2e 			; <UNDEFINED> instruction: 0x212e2e2e
200146f8:	00000000 	andeq	r0, r0, r0
200146fc:	46464144 	strbmi	r4, [r6], -r4, asr #2
20014700:	20203a4f 	eorcs	r3, r0, pc, asr #20
20014704:	00000000 	andeq	r0, r0, r0
20014708:	20202020 	eorcs	r2, r0, r0, lsr #32
2001470c:	20202020 	eorcs	r2, r0, r0, lsr #32
20014710:	48524120 	ldmdami	r2, {r5, r8, lr}^
20014714:	48475247 	stmdami	r7, {r0, r1, r2, r6, r9, ip, lr}^
20014718:	00002152 	andeq	r2, r0, r2, asr r1
2001471c:	20202020 	eorcs	r2, r0, r0, lsr #32
20014720:	20202020 	eorcs	r2, r0, r0, lsr #32
20014724:	20202020 	eorcs	r2, r0, r0, lsr #32
20014728:	20202020 	eorcs	r2, r0, r0, lsr #32
2001472c:	20202020 	eorcs	r2, r0, r0, lsr #32
20014730:	00000000 	andeq	r0, r0, r0
20014734:	20000944 	andcs	r0, r0, r4, asr #18
20014738:	2000095c 	andcs	r0, r0, ip, asr r9
2001473c:	20000f30 	andcs	r0, r0, r0, lsr pc
20014740:	200019da 	ldrdcs	r1, [r0], -sl
20014744:	2000197a 	andcs	r1, r0, sl, ror r9
20014748:	20000922 	andcs	r0, r0, r2, lsr #18
2001474c:	20000922 	andcs	r0, r0, r2, lsr #18
20014750:	20000922 	andcs	r0, r0, r2, lsr #18
20014754:	20000922 	andcs	r0, r0, r2, lsr #18
20014758:	20000922 	andcs	r0, r0, r2, lsr #18
2001475c:	200017d4 	ldrdcs	r1, [r0], -r4
20014760:	00000000 	andeq	r0, r0, r0
20014764:	5548542a 	strbpl	r5, [r8, #-1066]	; 0xfffffbd6
20014768:	002a504d 	eoreq	r5, sl, sp, asr #32
2001476c:	2000388a 	andcs	r3, r0, sl, lsl #17
20014770:	20003894 	mulcs	r0, r4, r8
20014774:	2000389e 	mulcs	r0, lr, r8
20014778:	200038a8 	andcs	r3, r0, r8, lsr #17
2001477c:	200038b2 			; <UNDEFINED> instruction: 0x200038b2
20014780:	200038bc 			; <UNDEFINED> instruction: 0x200038bc
20014784:	200038c6 	andcs	r3, r0, r6, asr #17
20014788:	200038d0 	ldrdcs	r3, [r0], -r0
2001478c:	20202020 	eorcs	r2, r0, r0, lsr #32
20014790:	20202020 	eorcs	r2, r0, r0, lsr #32
20014794:	20202020 	eorcs	r2, r0, r0, lsr #32
20014798:	20202020 	eorcs	r2, r0, r0, lsr #32
2001479c:	20202020 	eorcs	r2, r0, r0, lsr #32
200147a0:	00000000 	andeq	r0, r0, r0
200147a4:	61666c41 	cmnvs	r6, r1, asr #24
200147a8:	656d756e 	strbvs	r7, [sp, #-1390]!	; 0xfffffa92
200147ac:	6b736972 	blvs	21ceed7c <firstTime.4104+0x1cda910>
200147b0:	00000000 	andeq	r0, r0, r0
200147b4:	64726168 	ldrbtvs	r6, [r2], #-360	; 0xfffffe98
200147b8:	a4c3a5c3 	strbge	sl, [r3], #1475	; 0x5c3
200147bc:	7261b6c3 	rsbvc	fp, r1, #204472320	; 0xc300000
200147c0:	75732065 	ldrbvc	r2, [r3, #-101]!	; 0xffffff9b
200147c4:	00726567 	rsbseq	r6, r2, r7, ror #10

Disassembly of section .debug_info:

00000000 <.debug_info>:
       0:	00000af9 	strdeq	r0, [r0], -r9
       4:	00000004 	andeq	r0, r0, r4
       8:	01040000 	mrseq	r0, (UNDEF: 4)
       c:	0000009f 	muleq	r0, pc, r0	; <UNPREDICTABLE>
      10:	0005440c 	andeq	r4, r5, ip, lsl #8
	...
      20:	020c0200 	andeq	r0, ip, #0, 4
      24:	00004e05 	andeq	r4, r0, r5, lsl #28
      28:	036b0300 	cmneq	fp, #0, 6
      2c:	07020000 	streq	r0, [r2, -r0]
      30:	0000004e 	andeq	r0, r0, lr, asr #32
      34:	07390300 	ldreq	r0, [r9, -r0, lsl #6]!
      38:	08020000 	stmdaeq	r2, {}	; <UNPREDICTABLE>
      3c:	0000004e 	andeq	r0, r0, lr, asr #32
      40:	17ff0304 	ldrbne	r0, [pc, r4, lsl #6]!
      44:	09020000 	stmdbeq	r2, {}	; <UNPREDICTABLE>
      48:	00000055 	andeq	r0, r0, r5, asr r0
      4c:	04040008 	streq	r0, [r4], #-8
      50:	00039907 	andeq	r9, r3, r7, lsl #18
      54:	5b040500 	blpl	10145c <startup-0x1fefeba4>
      58:	04000000 	streq	r0, [r0], #-0
      5c:	04f10801 	ldrbteq	r0, [r1], #2049	; 0x801
      60:	69060000 	stmdbvs	r6, {}	; <UNPREDICTABLE>
      64:	02000019 	andeq	r0, r0, #25
      68:	0000210a 	andeq	r2, r0, sl, lsl #2
      6c:	00340700 	eorseq	r0, r4, r0, lsl #14
      70:	030c0000 	movweq	r0, #49152	; 0xc000
      74:	00009e06 	andeq	r9, r0, r6, lsl #28
      78:	05e70300 	strbeq	r0, [r7, #768]!	; 0x300
      7c:	07030000 	streq	r0, [r3, -r0]
      80:	0000009e 	muleq	r0, lr, r0
      84:	003b0300 	eorseq	r0, fp, r0, lsl #6
      88:	08030000 	stmdaeq	r3, {}	; <UNPREDICTABLE>
      8c:	0000009e 	muleq	r0, lr, r0
      90:	00300304 	eorseq	r0, r0, r4, lsl #6
      94:	09030000 	stmdbeq	r3, {}	; <UNPREDICTABLE>
      98:	0000009e 	muleq	r0, lr, r0
      9c:	04050008 	streq	r0, [r5], #-8
      a0:	00000062 	andeq	r0, r0, r2, rrx
      a4:	00151406 	andseq	r1, r5, r6, lsl #8
      a8:	6d0a0300 	stcvs	3, cr0, [sl, #-0]
      ac:	07000000 	streq	r0, [r0, -r0]
      b0:	000006fc 	strdeq	r0, [r0], -ip
      b4:	28060424 	stmdacs	r6, {r2, r5, sl}
      b8:	03000001 	movweq	r0, #1
      bc:	0000047f 	andeq	r0, r0, pc, ror r4
      c0:	01280704 			; <UNDEFINED> instruction: 0x01280704
      c4:	03000000 	movweq	r0, #0
      c8:	00000708 	andeq	r0, r0, r8, lsl #14
      cc:	012e0804 			; <UNDEFINED> instruction: 0x012e0804
      d0:	03040000 	movweq	r0, #16384	; 0x4000
      d4:	00000658 	andeq	r0, r0, r8, asr r6
      d8:	012e0904 			; <UNDEFINED> instruction: 0x012e0904
      dc:	03080000 	movweq	r0, #32768	; 0x8000
      e0:	00000684 	andeq	r0, r0, r4, lsl #13
      e4:	01460c04 	cmpeq	r6, r4, lsl #24
      e8:	030c0000 	movweq	r0, #49152	; 0xc000
      ec:	00000352 	andeq	r0, r0, r2, asr r3
      f0:	01460d04 	cmpeq	r6, r4, lsl #26
      f4:	03100000 	tsteq	r0, #0
      f8:	00000491 	muleq	r0, r1, r4
      fc:	012e1004 			; <UNDEFINED> instruction: 0x012e1004
     100:	03140000 	tsteq	r4, #0
     104:	00000070 	andeq	r0, r0, r0, ror r0
     108:	012e1104 			; <UNDEFINED> instruction: 0x012e1104
     10c:	03180000 	tsteq	r8, #0
     110:	000003fa 	strdeq	r0, [r0], -sl
     114:	012e1204 			; <UNDEFINED> instruction: 0x012e1204
     118:	031c0000 	tsteq	ip, #0
     11c:	0000040a 	andeq	r0, r0, sl, lsl #8
     120:	012e1304 			; <UNDEFINED> instruction: 0x012e1304
     124:	00200000 	eoreq	r0, r0, r0
     128:	00a40405 	adceq	r0, r4, r5, lsl #8
     12c:	04080000 	streq	r0, [r8], #-0
     130:	746e6905 	strbtvc	r6, [lr], #-2309	; 0xfffff6fb
     134:	01400900 	cmpeq	r0, r0, lsl #18
     138:	400a0000 	andmi	r0, sl, r0
     13c:	00000001 	andeq	r0, r0, r1
     140:	00af0405 	adceq	r0, pc, r5, lsl #8
     144:	04050000 	streq	r0, [r5], #-0
     148:	00000135 	andeq	r0, r0, r5, lsr r1
     14c:	0006fd06 	andeq	pc, r6, r6, lsl #26
     150:	af150400 	svcge	0x00150400
     154:	0b000000 	bleq	15c <startup-0x1ffffea4>
     158:	00000162 	andeq	r0, r0, r2, ror #2
     15c:	00000162 	andeq	r0, r0, r2, ror #2
     160:	0405000c 	streq	r0, [r5], #-12
     164:	0000014c 	andeq	r0, r0, ip, asr #2
     168:	0005740d 	andeq	r7, r5, sp, lsl #8
     16c:	571c0400 	ldrpl	r0, [ip, -r0, lsl #8]
     170:	0d000001 	stceq	0, cr0, [r0, #-4]
     174:	00000445 	andeq	r0, r0, r5, asr #8
     178:	012e1d04 			; <UNDEFINED> instruction: 0x012e1d04
     17c:	c0060000 	andgt	r0, r6, r0
     180:	05000006 	streq	r0, [r0, #-6]
     184:	00005b24 	andeq	r5, r0, r4, lsr #22
     188:	017e0b00 	cmneq	lr, r0, lsl #22
     18c:	019a0000 	orrseq	r0, sl, r0
     190:	9a0e0000 	bls	380198 <startup-0x1fc7fe68>
     194:	ff000001 			; <UNDEFINED> instruction: 0xff000001
     198:	04040003 	streq	r0, [r4], #-3
     19c:	00042707 	andeq	r2, r4, r7, lsl #14
     1a0:	172e0d00 	strne	r0, [lr, -r0, lsl #26]!
     1a4:	2d050000 	stccs	0, cr0, [r5, #-0]
     1a8:	00000189 	andeq	r0, r0, r9, lsl #3
     1ac:	0002580d 	andeq	r5, r2, sp, lsl #16
     1b0:	892e0500 	stmdbhi	lr!, {r8, sl}
     1b4:	0d000001 	stceq	0, cr0, [r0, #-4]
     1b8:	000004ff 	strdeq	r0, [r0], -pc	; <UNPREDICTABLE>
     1bc:	01892f05 	orreq	r2, r9, r5, lsl #30
     1c0:	7b0d0000 	blvc	3401c8 <startup-0x1fcbfe38>
     1c4:	05000003 	streq	r0, [r0, #-3]
     1c8:	00018930 	andeq	r8, r1, r0, lsr r9
     1cc:	02e00d00 	rsceq	r0, r0, #0, 26
     1d0:	31050000 	mrscc	r0, (UNDEF: 5)
     1d4:	00000189 	andeq	r0, r0, r9, lsl #3
     1d8:	0006de0d 	andeq	sp, r6, sp, lsl #28
     1dc:	89320500 	ldmdbhi	r2!, {r8, sl}
     1e0:	0d000001 	stceq	0, cr0, [r0, #-4]
     1e4:	000006ce 	andeq	r0, r0, lr, asr #13
     1e8:	01893305 	orreq	r3, r9, r5, lsl #6
     1ec:	5b0b0000 	blpl	2c01f4 <startup-0x1fd3fe0c>
     1f0:	fe000000 	cdp2	0, 0, cr0, cr0, cr0, {0}
     1f4:	0f000001 	svceq	0x00000001
     1f8:	0000019a 	muleq	r0, sl, r1
     1fc:	a3100077 	tstge	r0, #119	; 0x77
     200:	06000002 	streq	r0, [r0], -r2
     204:	0001ee03 	andeq	lr, r1, r3, lsl #28
     208:	5c030500 	cfstr32pl	mvfx0, [r3], {-0}
     20c:	1120007a 			; <UNDEFINED> instruction: 0x1120007a
     210:	00000516 	andeq	r0, r0, r6, lsl r5
     214:	01ee0307 	mvneq	r0, r7, lsl #6
     218:	03050000 	movweq	r0, #20480	; 0x5000
     21c:	20007ad4 	ldrdcs	r7, [r0], -r4
     220:	0005f211 	andeq	pc, r5, r1, lsl r2	; <UNPREDICTABLE>
     224:	ee030800 	cdp	8, 0, cr0, cr3, cr0, {0}
     228:	05000001 	streq	r0, [r0, #-1]
     22c:	007b4c03 	rsbseq	r4, fp, r3, lsl #24
     230:	005b0b20 	subseq	r0, fp, r0, lsr #22
     234:	02420000 	subeq	r0, r2, #0
     238:	9a0e0000 	bls	380240 <startup-0x1fc7fdc0>
     23c:	17000001 	strne	r0, [r0, -r1]
     240:	6c110001 	ldcvs	0, cr0, [r1], {1}
     244:	09000001 	stmdbeq	r0, {r0}
     248:	00023103 	andeq	r3, r2, r3, lsl #2
     24c:	c4030500 	strgt	r0, [r3], #-1280	; 0xfffffb00
     250:	1120007b 			; <UNDEFINED> instruction: 0x1120007b
     254:	00000452 	andeq	r0, r0, r2, asr r4
     258:	0231030a 	eorseq	r0, r1, #671088640	; 0x28000000
     25c:	03050000 	movweq	r0, #20480	; 0x5000
     260:	20007cdc 	ldrdcs	r7, [r0], -ip
     264:	0003df11 	andeq	sp, r3, r1, lsl pc
     268:	31030b00 	tstcc	r3, r0, lsl #22
     26c:	05000002 	streq	r0, [r0, #-2]
     270:	007df403 	rsbseq	pc, sp, r3, lsl #8
     274:	005b0b20 	subseq	r0, fp, r0, lsr #22
     278:	02860000 	addeq	r0, r6, #0
     27c:	9a0e0000 	bls	380284 <startup-0x1fc7fd7c>
     280:	ff000001 			; <UNDEFINED> instruction: 0xff000001
     284:	29110003 	ldmdbcs	r1, {r0, r1}
     288:	0c000005 	stceq	0, cr0, [r0], {5}
     28c:	00027503 	andeq	r7, r2, r3, lsl #10
     290:	0c030500 	cfstr32eq	mvfx0, [r3], {-0}
     294:	1120007f 			; <UNDEFINED> instruction: 0x1120007f
     298:	00000045 	andeq	r0, r0, r5, asr #32
     29c:	0275030d 	rsbseq	r0, r5, #872415232	; 0x34000000
     2a0:	03050000 	movweq	r0, #20480	; 0x5000
     2a4:	2000830c 	andcs	r8, r0, ip, lsl #6
     2a8:	00001011 	andeq	r1, r0, r1, lsl r0
     2ac:	75030e00 	strvc	r0, [r3, #-3584]	; 0xfffff200
     2b0:	05000002 	streq	r0, [r0, #-2]
     2b4:	00870c03 	addeq	r0, r7, r3, lsl #24
     2b8:	005b0b20 	subseq	r0, fp, r0, lsr #22
     2bc:	02c90000 	sbceq	r0, r9, #0
     2c0:	9a0f0000 	bls	3c02c8 <startup-0x1fc3fd38>
     2c4:	d1000001 	tstle	r0, r1
     2c8:	01ce1100 	biceq	r1, lr, r0, lsl #2
     2cc:	030f0000 	movweq	r0, #61440	; 0xf000
     2d0:	000002b9 			; <UNDEFINED> instruction: 0x000002b9
     2d4:	8b0c0305 	blhi	300ef0 <startup-0x1fcff110>
     2d8:	30112000 	andscc	r2, r1, r0
     2dc:	10000004 	andne	r0, r0, r4
     2e0:	0002b903 	andeq	fp, r2, r3, lsl #18
     2e4:	e0030500 	and	r0, r3, r0, lsl #10
     2e8:	1120008b 	smlawbne	r0, fp, r0, r0
     2ec:	00000230 	andeq	r0, r0, r0, lsr r2
     2f0:	02b90311 	adcseq	r0, r9, #1140850688	; 0x44000000
     2f4:	03050000 	movweq	r0, #20480	; 0x5000
     2f8:	20008cb4 			; <UNDEFINED> instruction: 0x20008cb4
     2fc:	0006b607 	andeq	fp, r6, r7, lsl #12
     300:	04121400 	ldreq	r1, [r2], #-1024	; 0xfffffc00
     304:	00000345 	andeq	r0, r0, r5, asr #6
     308:	001bdc03 	andseq	sp, fp, r3, lsl #24
     30c:	45051200 	strmi	r1, [r5, #-512]	; 0xfffffe00
     310:	00000003 	andeq	r0, r0, r3
     314:	00029603 	andeq	r9, r2, r3, lsl #12
     318:	45061200 	strmi	r1, [r6, #-512]	; 0xfffffe00
     31c:	04000003 	streq	r0, [r0], #-3
     320:	00041403 	andeq	r1, r4, r3, lsl #8
     324:	2e081200 	cdpcs	2, 0, cr1, cr8, cr0, {0}
     328:	08000001 	stmdaeq	r0, {r0}
     32c:	00040403 	andeq	r0, r4, r3, lsl #8
     330:	2e091200 	cdpcs	2, 0, cr1, cr9, cr0, {0}
     334:	0c000001 	stceq	0, cr0, [r0], {1}
     338:	00029b03 	andeq	r9, r2, r3, lsl #22
     33c:	680c1200 	stmdavs	ip, {r9, ip}
     340:	10000003 	andne	r0, r0, r3
     344:	4b040500 	blmi	10174c <startup-0x1fefe8b4>
     348:	04000003 	streq	r0, [r0], #-3
     34c:	04fa0801 	ldrbteq	r0, [sl], #2049	; 0x801
     350:	62090000 	andvs	r0, r9, #0
     354:	0a000003 	beq	368 <startup-0x1ffffc98>
     358:	00000362 	andeq	r0, r0, r2, ror #6
     35c:	00012e0a 	andeq	r2, r1, sl, lsl #28
     360:	04050000 	streq	r0, [r5], #-0
     364:	000002fc 	strdeq	r0, [r0], -ip
     368:	03520405 	cmpeq	r2, #83886080	; 0x5000000
     36c:	b7060000 	strlt	r0, [r6, -r0]
     370:	12000006 	andne	r0, r0, #6
     374:	0002fc0d 	andeq	pc, r2, sp, lsl #24
     378:	05df1100 	ldrbeq	r1, [pc, #256]	; 480 <startup-0x1ffffb80>
     37c:	03130000 	tsteq	r3, #0
     380:	00000275 	andeq	r0, r0, r5, ror r2
     384:	8d880305 	stchi	3, cr0, [r8, #20]
     388:	02042000 	andeq	r2, r4, #0
     38c:	00039307 	andeq	r9, r3, r7, lsl #6
     390:	06221000 	strteq	r1, [r2], -r0
     394:	24010000 	strcs	r0, [r1], #-0
     398:	0000012e 	andeq	r0, r0, lr, lsr #2
     39c:	50480305 	subpl	r0, r8, r5, lsl #6
     3a0:	37102000 	ldrcc	r2, [r0, -r0]
     3a4:	01000001 	tsteq	r0, r1
     3a8:	00009e3c 	andeq	r9, r0, ip, lsr lr
     3ac:	90030500 	andls	r0, r3, r0, lsl #10
     3b0:	1020004f 	eorne	r0, r0, pc, asr #32
     3b4:	000001c1 	andeq	r0, r0, r1, asr #3
     3b8:	009e3d01 	addseq	r3, lr, r1, lsl #26
     3bc:	03050000 	movweq	r0, #20480	; 0x5000
     3c0:	2000503c 	andcs	r5, r0, ip, lsr r0
     3c4:	00058b10 	andeq	r8, r5, r0, lsl fp
     3c8:	9e3e0100 	rsflse	f0, f6, f0
     3cc:	05000000 	streq	r0, [r0, #-0]
     3d0:	00505003 	subseq	r5, r0, r3
     3d4:	67621220 	strbvs	r1, [r2, -r0, lsr #4]!
     3d8:	9e3f0100 	rsflse	f0, f7, f0
     3dc:	05000000 	streq	r0, [r0, #-0]
     3e0:	004fd803 	subeq	sp, pc, r3, lsl #16
     3e4:	070d1020 	streq	r1, [sp, -r0, lsr #32]
     3e8:	42010000 	andmi	r0, r1, #0
     3ec:	0000009e 	muleq	r0, lr, r0
     3f0:	4fb80305 	svcmi	0x00b80305
     3f4:	80102000 	andshi	r2, r0, r0
     3f8:	01000005 	tsteq	r0, r5
     3fc:	00009e43 	andeq	r9, r0, r3, asr #28
     400:	44030500 	strmi	r0, [r3], #-1280	; 0xfffffb00
     404:	10200050 	eorne	r0, r0, r0, asr r0
     408:	00000079 	andeq	r0, r0, r9, ror r0
     40c:	009e4401 	addseq	r4, lr, r1, lsl #8
     410:	03050000 	movweq	r0, #20480	; 0x5000
     414:	20004ff4 	strdcs	r4, [r0], -r4	; <UNPREDICTABLE>
     418:	0003c310 	andeq	ip, r3, r0, lsl r3
     41c:	9e450100 	dvflss	f0, f5, f0
     420:	05000000 	streq	r0, [r0, #-0]
     424:	00506003 	subseq	r6, r0, r3
     428:	05971020 	ldreq	r1, [r7, #32]
     42c:	46010000 	strmi	r0, [r1], -r0
     430:	0000009e 	muleq	r0, lr, r0
     434:	502c0305 	eorpl	r0, ip, r5, lsl #6
     438:	9f102000 	svcls	0x00102000
     43c:	01000004 	tsteq	r0, r4
     440:	00009e47 	andeq	r9, r0, r7, asr #28
     444:	40030500 	andmi	r0, r3, r0, lsl #10
     448:	10200050 	eorne	r0, r0, r0, asr r0
     44c:	00000640 	andeq	r0, r0, r0, asr #12
     450:	009e4801 	addseq	r4, lr, r1, lsl #16
     454:	03050000 	movweq	r0, #20480	; 0x5000
     458:	2000504c 	andcs	r5, r0, ip, asr #32
     45c:	0001f510 	andeq	pc, r1, r0, lsl r5	; <UNPREDICTABLE>
     460:	9e490100 	dvflse	f0, f1, f0
     464:	05000000 	streq	r0, [r0, #-0]
     468:	00501003 	subseq	r1, r0, r3
     46c:	07521020 	ldrbeq	r1, [r2, -r0, lsr #32]
     470:	4a010000 	bmi	40478 <startup-0x1ffbfb88>
     474:	0000009e 	muleq	r0, lr, r0
     478:	4fc80305 	svcmi	0x00c80305
     47c:	b7102000 	ldrlt	r2, [r0, -r0]
     480:	01000003 	tsteq	r0, r3
     484:	0000624c 	andeq	r6, r0, ip, asr #4
     488:	bc030500 	cfstr32lt	mvfx0, [r3], {-0}
     48c:	1020004f 	eorne	r0, r0, pc, asr #32
     490:	00000241 	andeq	r0, r0, r1, asr #4
     494:	00624d01 	rsbeq	r4, r2, r1, lsl #26
     498:	03050000 	movweq	r0, #20480	; 0x5000
     49c:	20005014 	andcs	r5, r0, r4, lsl r0
     4a0:	0001df10 	andeq	sp, r1, r0, lsl pc
     4a4:	624e0100 	subvs	r0, lr, #0, 2
     4a8:	05000000 	streq	r0, [r0, #-0]
     4ac:	004fdc03 	subeq	sp, pc, r3, lsl #24
     4b0:	021d1020 	andseq	r1, sp, #32
     4b4:	50010000 	andpl	r0, r1, r0
     4b8:	00000062 	andeq	r0, r0, r2, rrx
     4bc:	50540305 	subspl	r0, r4, r5, lsl #6
     4c0:	8f102000 	svchi	0x00102000
     4c4:	01000000 	mrseq	r0, (UNDEF: 0)
     4c8:	00006252 	andeq	r6, r0, r2, asr r2
     4cc:	94030500 	strls	r0, [r3], #-1280	; 0xfffffb00
     4d0:	1020004f 	eorne	r0, r0, pc, asr #32
     4d4:	000004d3 	ldrdeq	r0, [r0], -r3
     4d8:	00625301 	rsbeq	r5, r2, r1, lsl #6
     4dc:	03050000 	movweq	r0, #20480	; 0x5000
     4e0:	20005030 	andcs	r5, r0, r0, lsr r0
     4e4:	00034210 	andeq	r4, r3, r0, lsl r2
     4e8:	62540100 	subsvs	r0, r4, #0, 2
     4ec:	05000000 	streq	r0, [r0, #-0]
     4f0:	00500403 	subseq	r0, r0, r3, lsl #8
     4f4:	04e21020 	strbteq	r1, [r2], #32
     4f8:	55010000 	strpl	r0, [r1, #-0]
     4fc:	00000062 	andeq	r0, r0, r2, rrx
     500:	4fcc0305 	svcmi	0x00cc0305
     504:	a8102000 	ldmdage	r0, {sp}
     508:	01000006 	tsteq	r0, r6
     50c:	00006256 	andeq	r6, r0, r6, asr r2
     510:	ac030500 	cfstr32ge	mvfx0, [r3], {-0}
     514:	1020004f 	eorne	r0, r0, pc, asr #32
     518:	00000675 	andeq	r0, r0, r5, ror r6
     51c:	00625701 	rsbeq	r5, r2, r1, lsl #14
     520:	03050000 	movweq	r0, #20480	; 0x5000
     524:	20004fe8 	andcs	r4, r0, r8, ror #31
     528:	0005d010 	andeq	sp, r5, r0, lsl r0
     52c:	62580100 	subsvs	r0, r8, #0, 2
     530:	05000000 	streq	r0, [r0, #-0]
     534:	00502003 	subseq	r2, r0, r3
     538:	04aa1020 	strteq	r1, [sl], #32
     53c:	59010000 	stmdbpl	r1, {}	; <UNPREDICTABLE>
     540:	00000062 	andeq	r0, r0, r2, rrx
     544:	4fa00305 	svcmi	0x00a00305
     548:	ed102000 	ldc	0, cr2, [r0, #-0]
     54c:	01000006 	tsteq	r0, r6
     550:	0000625a 	andeq	r6, r0, sl, asr r2
     554:	f8030500 			; <UNDEFINED> instruction: 0xf8030500
     558:	1020004f 	eorne	r0, r0, pc, asr #32
     55c:	00000414 	andeq	r0, r0, r4, lsl r4
     560:	012e9001 			; <UNDEFINED> instruction: 0x012e9001
     564:	03050000 	movweq	r0, #20480	; 0x5000
     568:	20004f44 	andcs	r4, r0, r4, asr #30
     56c:	0005ac10 	andeq	sl, r5, r0, lsl ip
     570:	2e910100 	fmlcss	f0, f1, f0
     574:	05000001 	streq	r0, [r0, #-1]
     578:	00918803 	addseq	r8, r1, r3, lsl #16
     57c:	62611320 	rsbvs	r1, r1, #32, 6	; 0x80000000
     580:	99010073 	stmdbls	r1, {r0, r1, r4, r5, r6}
     584:	00012e02 	andeq	r2, r1, r2, lsl #28
     588:	001ab000 	andseq	fp, sl, r0
     58c:	00001e20 	andeq	r1, r0, r0, lsr #28
     590:	a79c0100 	ldrge	r0, [ip, r0, lsl #2]
     594:	14000005 	strne	r0, [r0], #-5
     598:	00000668 	andeq	r0, r0, r8, ror #12
     59c:	2e029901 	vmlacs.f16	s18, s4, s2	; <UNPREDICTABLE>
     5a0:	02000001 	andeq	r0, r0, #1
     5a4:	15007491 	strne	r7, [r0, #-1169]	; 0xfffffb6f
     5a8:	0000074d 	andeq	r0, r0, sp, asr #14
     5ac:	01fc9201 	mvnseq	r9, r1, lsl #4
     5b0:	18b42000 	ldmne	r4!, {sp}
     5b4:	9c010000 	stcls	0, cr0, [r1], {-0}
     5b8:	00000a18 	andeq	r0, r0, r8, lsl sl
     5bc:	00041c11 	andeq	r1, r4, r1, lsl ip
     5c0:	4c980100 	ldfmis	f0, [r8], {0}
     5c4:	03000001 	movweq	r0, #1
     5c8:	117fa491 			; <UNDEFINED> instruction: 0x117fa491
     5cc:	0000064b 	andeq	r0, r0, fp, asr #12
     5d0:	00a49901 	adceq	r9, r4, r1, lsl #18
     5d4:	91030000 	mrsls	r0, (UNDEF: 3)
     5d8:	5d117f98 	ldcpl	15, cr7, [r1, #-608]	; 0xfffffda0
     5dc:	01000007 	tsteq	r0, r7
     5e0:	000a189a 	muleq	sl, sl, r8
     5e4:	8c910300 	ldchi	3, cr0, [r1], {0}
     5e8:	053b117f 	ldreq	r1, [fp, #-383]!	; 0xfffffe81
     5ec:	a2010000 	andge	r0, r1, #0
     5f0:	0000014c 	andeq	r0, r0, ip, asr #2
     5f4:	7ee89103 	urdvce	f1, f3
     5f8:	0001a811 	andeq	sl, r1, r1, lsl r8
     5fc:	a4a30100 	strtge	r0, [r3], #256	; 0x100
     600:	03000000 	movweq	r0, #0
     604:	117edc91 			; <UNDEFINED> instruction: 0x117edc91
     608:	00000616 	andeq	r0, r0, r6, lsl r6
     60c:	0a18a401 	beq	629618 <startup-0x1f9d69e8>
     610:	91030000 	mrsls	r0, (UNDEF: 3)
     614:	c9117ed0 	ldmdbgt	r1, {r4, r6, r7, r9, sl, fp, ip, sp, lr}
     618:	01000002 	tsteq	r0, r2
     61c:	00014cab 	andeq	r4, r1, fp, lsr #25
     620:	ac910300 	ldcge	3, cr0, [r1], {0}
     624:	0474117e 	ldrbteq	r1, [r4], #-382	; 0xfffffe82
     628:	ac010000 	stcge	0, cr0, [r1], {-0}
     62c:	000000a4 	andeq	r0, r0, r4, lsr #1
     630:	7ea09103 	tanvcs	f1, f3
     634:	00069211 	andeq	r9, r6, r1, lsl r2
     638:	18ad0100 	stmiane	sp!, {r8}
     63c:	0300000a 	movweq	r0, #10
     640:	117e9491 			; <UNDEFINED> instruction: 0x117e9491
     644:	00000154 	andeq	r0, r0, r4, asr r1
     648:	014cb401 	cmpeq	ip, r1, lsl #8
     64c:	91030000 	mrsls	r0, (UNDEF: 3)
     650:	04117df0 	ldreq	r7, [r1], #-3568	; 0xfffff210
     654:	01000006 	tsteq	r0, r6
     658:	0000a4b5 			; <UNDEFINED> instruction: 0x0000a4b5
     65c:	e4910300 	ldr	r0, [r1], #768	; 0x300
     660:	018b117d 	orreq	r1, fp, sp, ror r1
     664:	b6010000 	strlt	r0, [r1], -r0
     668:	00000a18 	andeq	r0, r0, r8, lsl sl
     66c:	7dd89103 	ldfvcp	f1, [r8, #12]
     670:	001ef611 	andseq	pc, lr, r1, lsl r6	; <UNPREDICTABLE>
     674:	4cbd0100 	ldfmis	f0, [sp]
     678:	03000001 	movweq	r0, #1
     67c:	117db491 			; <UNDEFINED> instruction: 0x117db491
     680:	00001fee 	andeq	r1, r0, lr, ror #31
     684:	014cc201 	cmpeq	ip, r1, lsl #4
     688:	91030000 	mrsls	r0, (UNDEF: 3)
     68c:	83117d90 	tsthi	r1, #144, 26	; 0x2400
     690:	01000001 	tsteq	r0, r1
     694:	00014cc9 	andeq	r4, r1, r9, asr #25
     698:	ec910300 	ldc	3, cr0, [r1], {0}
     69c:	1dab117c 	stfnes	f1, [fp, #496]!	; 0x1f0
     6a0:	ce010000 	cdpgt	0, 0, cr0, cr1, cr0, {0}
     6a4:	0000014c 	andeq	r0, r0, ip, asr #2
     6a8:	7cc89103 	stfvcp	f1, [r8], {3}
     6ac:	00032911 	andeq	r2, r3, r1, lsl r9
     6b0:	4cd30100 	ldfmie	f0, [r3], {0}
     6b4:	03000001 	movweq	r0, #1
     6b8:	167ca491 			; <UNDEFINED> instruction: 0x167ca491
     6bc:	000002fd 	strdeq	r0, [r0], -sp
     6c0:	012ed401 			; <UNDEFINED> instruction: 0x012ed401
     6c4:	06cc0000 	strbeq	r0, [ip], r0
     6c8:	00170000 	andseq	r0, r7, r0
     6cc:	00044011 	andeq	r4, r4, r1, lsl r0
     6d0:	4cd70100 	ldfmie	f0, [r7], {0}
     6d4:	03000001 	movweq	r0, #1
     6d8:	167c8091 			; <UNDEFINED> instruction: 0x167c8091
     6dc:	000003ef 	andeq	r0, r0, pc, ror #7
     6e0:	012ed801 			; <UNDEFINED> instruction: 0x012ed801
     6e4:	06ec0000 	strbteq	r0, [ip], r0
     6e8:	00170000 	andseq	r0, r7, r0
     6ec:	000d5311 	andeq	r5, sp, r1, lsl r3
     6f0:	4cdd0100 	ldfmie	f0, [sp], {0}
     6f4:	03000001 	movweq	r0, #1
     6f8:	117bdc91 			; <UNDEFINED> instruction: 0x117bdc91
     6fc:	00000376 	andeq	r0, r0, r6, ror r3
     700:	014ce301 	cmpeq	ip, r1, lsl #6
     704:	91030000 	mrsls	r0, (UNDEF: 3)
     708:	71167bb8 			; <UNDEFINED> instruction: 0x71167bb8
     70c:	01000003 	tsteq	r0, r3
     710:	00012ee4 	andeq	r2, r1, r4, ror #29
     714:	00071b00 	andeq	r1, r7, r0, lsl #22
     718:	18001700 	stmdane	r0, {r8, r9, sl, ip}
     71c:	00504944 	subseq	r4, r0, r4, asr #18
     720:	014ce701 	cmpeq	ip, r1, lsl #14
     724:	91030000 	mrsls	r0, (UNDEF: 3)
     728:	56117b94 			; <UNDEFINED> instruction: 0x56117b94
     72c:	01000000 	mrseq	r0, (UNDEF: 0)
     730:	00014ceb 	andeq	r4, r1, fp, ror #25
     734:	f0910300 			; <UNDEFINED> instruction: 0xf0910300
     738:	062e117a 			; <UNDEFINED> instruction: 0x062e117a
     73c:	f1010000 	setend	le
     740:	0000014c 	andeq	r0, r0, ip, asr #2
     744:	7acc9103 	bvc	ff324b58 <firstTime.4104+0xdf3106ec>
     748:	00063411 	andeq	r3, r6, r1, lsl r4
     74c:	4cf30100 	ldfmie	f0, [r3]
     750:	03000001 	movweq	r0, #1
     754:	117aa891 			; <UNDEFINED> instruction: 0x117aa891
     758:	0000063a 	andeq	r0, r0, sl, lsr r6
     75c:	014cf501 	cmpeq	ip, r1, lsl #10	; <UNPREDICTABLE>
     760:	91030000 	mrsls	r0, (UNDEF: 3)
     764:	0b117a84 	bleq	45f17c <startup-0x1fba0e84>
     768:	01000002 	tsteq	r0, r2
     76c:	00014cf7 	strdeq	r4, [r1], -r7
     770:	e0910300 	adds	r0, r1, r0, lsl #6
     774:	017d1179 	cmneq	sp, r9, ror r1
     778:	fa010000 	blx	40780 <startup-0x1ffbf880>
     77c:	0000014c 	andeq	r0, r0, ip, asr #2
     780:	79bc9103 	ldmibvc	ip!, {r0, r1, r8, ip, pc}
     784:	0002d211 	andeq	sp, r2, r1, lsl r2
     788:	4cff0100 	ldfmie	f0, [pc]	; 790 <startup-0x1ffff870>
     78c:	03000001 	movweq	r0, #1
     790:	19799891 	ldmdbne	r9!, {r0, r4, r7, fp, ip, pc}^
     794:	00000022 	andeq	r0, r0, r2, lsr #32
     798:	4c010201 	sfmmi	f0, 4, [r1], {1}
     79c:	03000001 	movweq	r0, #1
     7a0:	1978f491 	ldmdbne	r8!, {r0, r4, r7, sl, ip, sp, lr, pc}^
     7a4:	000006c8 	andeq	r0, r0, r8, asr #13
     7a8:	28010501 	stmdacs	r1, {r0, r8, sl}
     7ac:	0300000a 	movweq	r0, #10
     7b0:	19788891 	ldmdbne	r8!, {r0, r4, r7, fp, pc}^
     7b4:	0000005d 	andeq	r0, r0, sp, asr r0
     7b8:	6e011d01 	cdpvs	13, 0, cr1, cr1, cr1, {0}
     7bc:	03000003 	movweq	r0, #3
     7c0:	1977f491 	ldmdbne	r7!, {r0, r4, r7, sl, ip, sp, lr, pc}^
     7c4:	000001bb 			; <UNDEFINED> instruction: 0x000001bb
     7c8:	6e011e01 	cdpvs	14, 0, cr1, cr1, cr1, {0}
     7cc:	03000003 	movweq	r0, #3
     7d0:	1977e091 	ldmdbne	r7!, {r0, r4, r7, sp, lr, pc}^
     7d4:	000001ef 	andeq	r0, r0, pc, ror #3
     7d8:	6e011f01 	cdpvs	15, 0, cr1, cr1, cr1, {0}
     7dc:	03000003 	movweq	r0, #3
     7e0:	1977cc91 	ldmdbne	r7!, {r0, r4, r7, sl, fp, lr, pc}^
     7e4:	00000224 	andeq	r0, r0, r4, lsr #4
     7e8:	6e012001 	cdpvs	0, 0, cr2, cr1, cr1, {0}
     7ec:	03000003 	movweq	r0, #3
     7f0:	1977b891 	ldmdbne	r7!, {r0, r4, r7, fp, ip, sp, pc}^
     7f4:	000001ff 	strdeq	r0, [r0], -pc	; <UNPREDICTABLE>
     7f8:	6e012101 	adfvss	f2, f1, f1
     7fc:	03000003 	movweq	r0, #3
     800:	1977a491 	ldmdbne	r7!, {r0, r4, r7, sl, sp, pc}^
     804:	00000205 	andeq	r0, r0, r5, lsl #4
     808:	6e012201 	cdpvs	2, 0, cr2, cr1, cr1, {0}
     80c:	03000003 	movweq	r0, #3
     810:	19779091 	ldmdbne	r7!, {r0, r4, r7, ip, pc}^
     814:	0000026a 	andeq	r0, r0, sl, ror #4
     818:	6e012301 	cdpvs	3, 0, cr2, cr1, cr1, {0}
     81c:	03000003 	movweq	r0, #3
     820:	1976fc91 	ldmdbne	r6!, {r0, r4, r7, sl, fp, ip, sp, lr, pc}^
     824:	00000252 	andeq	r0, r0, r2, asr r2
     828:	6e012401 	cdpvs	4, 0, cr2, cr1, cr1, {0}
     82c:	03000003 	movweq	r0, #3
     830:	1976e891 	ldmdbne	r6!, {r0, r4, r7, fp, sp, lr, pc}^
     834:	0000022a 	andeq	r0, r0, sl, lsr #4
     838:	6e012501 	cfsh32vs	mvfx2, mvfx1, #1
     83c:	03000003 	movweq	r0, #3
     840:	1976d491 	ldmdbne	r6!, {r0, r4, r7, sl, ip, lr, pc}^
     844:	00000270 	andeq	r0, r0, r0, ror r2
     848:	6e012601 	cfmadd32vs	mvax0, mvfx2, mvfx1, mvfx1
     84c:	03000003 	movweq	r0, #3
     850:	1976c091 	ldmdbne	r6!, {r0, r4, r7, lr, pc}^
     854:	0000072b 	andeq	r0, r0, fp, lsr #14
     858:	6e012701 	cdpvs	7, 0, cr2, cr1, cr1, {0}
     85c:	03000003 	movweq	r0, #3
     860:	1976ac91 	ldmdbne	r6!, {r0, r4, r7, sl, fp, sp, pc}^
     864:	00000732 	andeq	r0, r0, r2, lsr r7
     868:	6e012801 	cdpvs	8, 0, cr2, cr1, cr1, {0}
     86c:	03000003 	movweq	r0, #3
     870:	19769891 	ldmdbne	r6!, {r0, r4, r7, fp, ip, pc}^
     874:	0000066e 	andeq	r0, r0, lr, ror #12
     878:	6e012901 	vmlavs.f16	s4, s2, s2	; <UNPREDICTABLE>
     87c:	03000003 	movweq	r0, #3
     880:	19768491 	ldmdbne	r6!, {r0, r4, r7, sl, pc}^
     884:	00000740 	andeq	r0, r0, r0, asr #14
     888:	6e012a01 	vmlavs.f32	s4, s2, s2
     88c:	03000003 	movweq	r0, #3
     890:	1975f091 	ldmdbne	r5!, {r0, r4, r7, ip, sp, lr, pc}^
     894:	00000463 	andeq	r0, r0, r3, ror #8
     898:	6e012b01 	vmlavs.f64	d2, d1, d1
     89c:	03000003 	movweq	r0, #3
     8a0:	1975dc91 	ldmdbne	r5!, {r0, r4, r7, sl, fp, ip, lr, pc}^
     8a4:	00000719 	andeq	r0, r0, r9, lsl r7
     8a8:	2e014001 	cdpcs	0, 0, cr4, cr1, cr1, {0}
     8ac:	02000001 	andeq	r0, r0, #1
     8b0:	3f196c91 	svccc	0x00196c91
     8b4:	01000001 	tsteq	r0, r1
     8b8:	012e0142 			; <UNDEFINED> instruction: 0x012e0142
     8bc:	91020000 	mrsls	r0, (UNDEF: 2)
     8c0:	02111968 	andseq	r1, r1, #104, 18	; 0x1a0000
     8c4:	43010000 	movwmi	r0, #4096	; 0x1000
     8c8:	00012e01 	andeq	r2, r1, r1, lsl #28
     8cc:	64910200 	ldrvs	r0, [r1], #512	; 0x200
     8d0:	00006619 	andeq	r6, r0, r9, lsl r6
     8d4:	01440100 	mrseq	r0, (UNDEF: 84)
     8d8:	0000012e 	andeq	r0, r0, lr, lsr #2
     8dc:	19609102 	stmdbne	r0!, {r1, r8, ip, pc}^
     8e0:	00000198 	muleq	r0, r8, r1
     8e4:	2e014501 	cfsh32cs	mvfx4, mvfx1, #1
     8e8:	02000001 	andeq	r0, r0, #1
     8ec:	8b195c91 	blhi	657b38 <startup-0x1f9a84c8>
     8f0:	01000006 	tsteq	r0, r6
     8f4:	012e0146 			; <UNDEFINED> instruction: 0x012e0146
     8f8:	91020000 	mrsls	r0, (UNDEF: 2)
     8fc:	069e1958 			; <UNDEFINED> instruction: 0x069e1958
     900:	47010000 	strmi	r0, [r1, -r0]
     904:	00012e01 	andeq	r2, r1, r1, lsl #28
     908:	54910200 	ldrpl	r0, [r1], #512	; 0x200
     90c:	00061019 	andeq	r1, r6, r9, lsl r0
     910:	01480100 	mrseq	r0, (UNDEF: 88)
     914:	0000012e 	andeq	r0, r0, lr, lsr #2
     918:	19509102 	ldmdbne	r0, {r1, r8, ip, pc}^
     91c:	00000000 	andeq	r0, r0, r0
     920:	2e014901 	vmlacs.f16	s8, s2, s2	; <UNPREDICTABLE>
     924:	02000001 	andeq	r0, r0, #1
     928:	ce194c91 	mrcgt	12, 0, r4, cr9, cr1, {4}
     92c:	01000003 	tsteq	r0, r3
     930:	012e014a 			; <UNDEFINED> instruction: 0x012e014a
     934:	91020000 	mrsls	r0, (UNDEF: 2)
     938:	09341a48 	ldmdbeq	r4!, {r3, r6, r9, fp, ip}
     93c:	11262000 			; <UNDEFINED> instruction: 0x11262000
     940:	bf190000 	svclt	0x00190000
     944:	01000002 	tsteq	r0, r2
     948:	012e0170 			; <UNDEFINED> instruction: 0x012e0170
     94c:	03050000 	movweq	r0, #20480	; 0x5000
     950:	20009190 	mulcs	r0, r0, r1
     954:	00048619 	andeq	r8, r4, r9, lsl r6
     958:	01710100 	cmneq	r1, r0, lsl #2
     95c:	0000012e 	andeq	r0, r0, lr, lsr #2
     960:	91940305 	orrsls	r0, r4, r5, lsl #6
     964:	a6192000 	ldrge	r2, [r9], -r0
     968:	01000003 	tsteq	r0, r3
     96c:	012e0172 			; <UNDEFINED> instruction: 0x012e0172
     970:	03050000 	movweq	r0, #20480	; 0x5000
     974:	2000918c 	andcs	r9, r0, ip, lsl #3
     978:	0100691b 	tsteq	r0, fp, lsl r9
     97c:	012e01bd 			; <UNDEFINED> instruction: 0x012e01bd
     980:	03050000 	movweq	r0, #20480	; 0x5000
     984:	20004f48 	andcs	r4, r0, r8, asr #30
     988:	00065d19 	andeq	r5, r6, r9, lsl sp
     98c:	01d20100 	bicseq	r0, r2, r0, lsl #2
     990:	0000012e 	andeq	r0, r0, lr, lsr #2
     994:	91980305 	orrsls	r0, r8, r5, lsl #6
     998:	bb192000 	bllt	6489a0 <startup-0x1f9b7660>
     99c:	01000005 	tsteq	r0, r5
     9a0:	012e0218 			; <UNDEFINED> instruction: 0x012e0218
     9a4:	03050000 	movweq	r0, #20480	; 0x5000
     9a8:	20004f50 	andcs	r4, r0, r0, asr pc
     9ac:	01006a1b 	tsteq	r0, fp, lsl sl
     9b0:	012e0219 			; <UNDEFINED> instruction: 0x012e0219
     9b4:	03050000 	movweq	r0, #20480	; 0x5000
     9b8:	20004f4c 	andcs	r4, r0, ip, asr #30
     9bc:	00015e19 	andeq	r5, r1, r9, lsl lr
     9c0:	02240100 	eoreq	r0, r4, #0, 2
     9c4:	0000012e 	andeq	r0, r0, lr, lsr #2
     9c8:	4f580305 	svcmi	0x00580305
     9cc:	1b192000 	blne	6489d4 <startup-0x1f9b762c>
     9d0:	01000003 	tsteq	r0, r3
     9d4:	012e0225 			; <UNDEFINED> instruction: 0x012e0225
     9d8:	03050000 	movweq	r0, #20480	; 0x5000
     9dc:	20004f54 	andcs	r4, r0, r4, asr pc
     9e0:	0005a119 	andeq	sl, r5, r9, lsl r1
     9e4:	022f0100 	eoreq	r0, pc, #0, 2
     9e8:	0000012e 	andeq	r0, r0, lr, lsr #2
     9ec:	4f600305 	svcmi	0x00600305
     9f0:	59192000 	ldmdbpl	r9, {sp}
     9f4:	01000003 	tsteq	r0, r3
     9f8:	012e0230 			; <UNDEFINED> instruction: 0x012e0230
     9fc:	03050000 	movweq	r0, #20480	; 0x5000
     a00:	20004f5c 	andcs	r4, r0, ip, asr pc
     a04:	001b1919 	andseq	r1, fp, r9, lsl r9
     a08:	024d0100 	subeq	r0, sp, #0, 2
     a0c:	0000012e 	andeq	r0, r0, lr, lsr #2
     a10:	4f640305 	svcmi	0x00640305
     a14:	00002000 	andeq	r2, r0, r0
     a18:	0000a40b 	andeq	sl, r0, fp, lsl #8
     a1c:	000a2800 	andeq	r2, sl, r0, lsl #16
     a20:	019a0f00 	orrseq	r0, sl, r0, lsl #30
     a24:	00000000 	andeq	r0, r0, r0
     a28:	00014c0b 	andeq	r4, r1, fp, lsl #24
     a2c:	000a3800 	andeq	r3, sl, r0, lsl #16
     a30:	019a0f00 	orrseq	r0, sl, r0, lsl #30
     a34:	00020000 	andeq	r0, r2, r0
     a38:	0004c715 	andeq	ip, r4, r5, lsl r7
     a3c:	345c0100 	ldrbcc	r0, [ip], #-256	; 0xffffff00
     a40:	c8200000 	stmdagt	r0!, {}	; <UNPREDICTABLE>
     a44:	01000001 	tsteq	r0, r1
     a48:	000ada9c 	muleq	sl, ip, sl
     a4c:	04b81100 	ldrteq	r1, [r8], #256	; 0x100
     a50:	5d010000 	stcpl	0, cr0, [r1, #-0]
     a54:	0000009e 	muleq	r0, lr, r0
     a58:	11749102 	cmnne	r4, r2, lsl #2
     a5c:	00000276 	andeq	r0, r0, r6, ror r2
     a60:	009e6101 	addseq	r6, lr, r1, lsl #2
     a64:	91020000 	mrsls	r0, (UNDEF: 2)
     a68:	02861170 	addeq	r1, r6, #112, 2
     a6c:	65010000 	strvs	r0, [r1, #-0]
     a70:	0000009e 	muleq	r0, lr, r0
     a74:	116c9102 	cmnne	ip, r2, lsl #2
     a78:	0000046b 	andeq	r0, r0, fp, ror #8
     a7c:	009e6901 	addseq	r6, lr, r1, lsl #18
     a80:	91020000 	mrsls	r0, (UNDEF: 2)
     a84:	03091168 	movweq	r1, #37224	; 0x9168
     a88:	6d010000 	stcvs	0, cr0, [r1, #-0]
     a8c:	0000009e 	muleq	r0, lr, r0
     a90:	11649102 	cmnne	r4, r2, lsl #2
     a94:	00000312 	andeq	r0, r0, r2, lsl r3
     a98:	009e7101 	addseq	r7, lr, r1, lsl #2
     a9c:	91020000 	mrsls	r0, (UNDEF: 2)
     aa0:	014b1160 	cmpeq	fp, r0, ror #2
     aa4:	75010000 	strvc	r0, [r1, #-0]
     aa8:	0000009e 	muleq	r0, lr, r0
     aac:	115c9102 	cmpne	ip, r2, lsl #2
     ab0:	00000330 	andeq	r0, r0, r0, lsr r3
     ab4:	009e7901 	addseq	r7, lr, r1, lsl #18
     ab8:	91020000 	mrsls	r0, (UNDEF: 2)
     abc:	03391158 	teqeq	r9, #88, 2
     ac0:	7c010000 	stcvc	0, cr0, [r1], {-0}
     ac4:	0000009e 	muleq	r0, lr, r0
     ac8:	11549102 	cmpne	r4, r2, lsl #2
     acc:	00000085 	andeq	r0, r0, r5, lsl #1
     ad0:	009e7f01 	addseq	r7, lr, r1, lsl #30
     ad4:	91020000 	mrsls	r0, (UNDEF: 2)
     ad8:	b61c0050 			; <UNDEFINED> instruction: 0xb61c0050
     adc:	01000002 	tsteq	r0, r2
     ae0:	00001028 	andeq	r1, r0, r8, lsr #32
     ae4:	00002420 	andeq	r2, r0, r0, lsr #8
     ae8:	1d9c0100 	ldfnes	f0, [ip]
     aec:	000001b3 			; <UNDEFINED> instruction: 0x000001b3
     af0:	00003201 	andeq	r3, r0, r1, lsl #4
     af4:	000c2000 	andeq	r2, ip, r0
     af8:	9c010000 	stcls	0, cr0, [r1], {-0}
     afc:	0001e000 	andeq	lr, r1, r0
     b00:	9e000400 	cfcpysls	mvf0, mvf0
     b04:	04000001 	streq	r0, [r0], #-1
     b08:	00009f01 	andeq	r9, r0, r1, lsl #30
     b0c:	077c0c00 	ldrbeq	r0, [ip, -r0, lsl #24]!
     b10:	1ad00000 	bne	ff400b18 <firstTime.4104+0xdf3ec6ac>
     b14:	00562000 	subseq	r2, r6, r0
     b18:	03fc0000 	mvnseq	r0, #0
     b1c:	0c020000 	stceq	0, cr0, [r2], {-0}
     b20:	004e0502 	subeq	r0, lr, r2, lsl #10
     b24:	6b030000 	blvs	c0b2c <startup-0x1ff3f4d4>
     b28:	02000003 	andeq	r0, r0, #3
     b2c:	00004e07 	andeq	r4, r0, r7, lsl #28
     b30:	39030000 	stmdbcc	r3, {}	; <UNPREDICTABLE>
     b34:	02000007 	andeq	r0, r0, #7
     b38:	00004e08 	andeq	r4, r0, r8, lsl #28
     b3c:	ff030400 			; <UNDEFINED> instruction: 0xff030400
     b40:	02000017 	andeq	r0, r0, #23
     b44:	00005509 	andeq	r5, r0, r9, lsl #10
     b48:	04000800 	streq	r0, [r0], #-2048	; 0xfffff800
     b4c:	03990704 	orrseq	r0, r9, #4, 14	; 0x100000
     b50:	04050000 	streq	r0, [r5], #-0
     b54:	0000005b 	andeq	r0, r0, fp, asr r0
     b58:	f1080104 	cps	#4
     b5c:	06000004 	streq	r0, [r0], -r4
     b60:	00001969 	andeq	r1, r0, r9, ror #18
     b64:	00210a02 	eoreq	r0, r1, r2, lsl #20
     b68:	34070000 	strcc	r0, [r7], #-0
     b6c:	0c000000 	stceq	0, cr0, [r0], {-0}
     b70:	009e0603 	addseq	r0, lr, r3, lsl #12
     b74:	e7030000 	str	r0, [r3, -r0]
     b78:	03000005 	movweq	r0, #5
     b7c:	00009e07 	andeq	r9, r0, r7, lsl #28
     b80:	3b030000 	blcc	c0b88 <startup-0x1ff3f478>
     b84:	03000000 	movweq	r0, #0
     b88:	00009e08 	andeq	r9, r0, r8, lsl #28
     b8c:	30030400 	andcc	r0, r3, r0, lsl #8
     b90:	03000000 	movweq	r0, #0
     b94:	00009e09 	andeq	r9, r0, r9, lsl #28
     b98:	05000800 	streq	r0, [r0, #-2048]	; 0xfffff800
     b9c:	00006204 	andeq	r6, r0, r4, lsl #4
     ba0:	15140600 	ldrne	r0, [r4, #-1536]	; 0xfffffa00
     ba4:	0a030000 	beq	c0bac <startup-0x1ff3f454>
     ba8:	0000006d 	andeq	r0, r0, sp, rrx
     bac:	0006fc07 	andeq	pc, r6, r7, lsl #24
     bb0:	06042400 	streq	r2, [r4], -r0, lsl #8
     bb4:	00000128 	andeq	r0, r0, r8, lsr #2
     bb8:	00047f03 	andeq	r7, r4, r3, lsl #30
     bbc:	28070400 	stmdacs	r7, {sl}
     bc0:	00000001 	andeq	r0, r0, r1
     bc4:	00070803 	andeq	r0, r7, r3, lsl #16
     bc8:	2e080400 	cfcpyscs	mvf0, mvf8
     bcc:	04000001 	streq	r0, [r0], #-1
     bd0:	00065803 	andeq	r5, r6, r3, lsl #16
     bd4:	2e090400 	cfcpyscs	mvf0, mvf9
     bd8:	08000001 	stmdaeq	r0, {r0}
     bdc:	00068403 	andeq	r8, r6, r3, lsl #8
     be0:	460c0400 	strmi	r0, [ip], -r0, lsl #8
     be4:	0c000001 	stceq	0, cr0, [r0], {1}
     be8:	00035203 	andeq	r5, r3, r3, lsl #4
     bec:	460d0400 	strmi	r0, [sp], -r0, lsl #8
     bf0:	10000001 	andne	r0, r0, r1
     bf4:	00049103 	andeq	r9, r4, r3, lsl #2
     bf8:	2e100400 	cfmulscs	mvf0, mvf0, mvf0
     bfc:	14000001 	strne	r0, [r0], #-1
     c00:	00007003 	andeq	r7, r0, r3
     c04:	2e110400 	cfmulscs	mvf0, mvf1, mvf0
     c08:	18000001 	stmdane	r0, {r0}
     c0c:	0003fa03 	andeq	pc, r3, r3, lsl #20
     c10:	2e120400 	cfmulscs	mvf0, mvf2, mvf0
     c14:	1c000001 	stcne	0, cr0, [r0], {1}
     c18:	00040a03 	andeq	r0, r4, r3, lsl #20
     c1c:	2e130400 	cfmulscs	mvf0, mvf3, mvf0
     c20:	20000001 	andcs	r0, r0, r1
     c24:	a4040500 	strge	r0, [r4], #-1280	; 0xfffffb00
     c28:	08000000 	stmdaeq	r0, {}	; <UNPREDICTABLE>
     c2c:	6e690504 	cdpvs	5, 6, cr0, cr9, cr4, {0}
     c30:	40090074 	andmi	r0, r9, r4, ror r0
     c34:	0a000001 	beq	c40 <startup-0x1ffff3c0>
     c38:	00000140 	andeq	r0, r0, r0, asr #2
     c3c:	af040500 	svcge	0x00040500
     c40:	05000000 	streq	r0, [r0, #-0]
     c44:	00013504 	andeq	r3, r1, r4, lsl #10
     c48:	06fd0600 	ldrbteq	r0, [sp], r0, lsl #12
     c4c:	15040000 	strne	r0, [r4, #-0]
     c50:	000000af 	andeq	r0, r0, pc, lsr #1
     c54:	0001620b 	andeq	r6, r1, fp, lsl #4
     c58:	00016200 	andeq	r6, r1, r0, lsl #4
     c5c:	05000c00 	streq	r0, [r0, #-3072]	; 0xfffff400
     c60:	00014c04 	andeq	r4, r1, r4, lsl #24
     c64:	05740d00 	ldrbeq	r0, [r4, #-3328]!	; 0xfffff300
     c68:	1c040000 	stcne	0, cr0, [r4], {-0}
     c6c:	00000157 	andeq	r0, r0, r7, asr r1
     c70:	0004450d 	andeq	r4, r4, sp, lsl #10
     c74:	2e1d0400 	cfmulscs	mvf0, mvf13, mvf0
     c78:	04000001 	streq	r0, [r0], #-1
     c7c:	04270704 	strteq	r0, [r7], #-1796	; 0xfffff8fc
     c80:	680e0000 	stmdavs	lr, {}	; <UNPREDICTABLE>
     c84:	01000001 	tsteq	r0, r1
     c88:	64030503 	strvs	r0, [r3], #-1283	; 0xfffffafd
     c8c:	0e200050 	mcreq	0, 1, r0, cr0, cr0, {2}
     c90:	00000173 	andeq	r0, r0, r3, ror r1
     c94:	03050401 	movweq	r0, #21505	; 0x5401
     c98:	20004f68 	andcs	r4, r0, r8, ror #30
     c9c:	00076b0f 	andeq	r6, r7, pc, lsl #22
     ca0:	e00c0100 	and	r0, ip, r0, lsl #2
     ca4:	4620001a 			; <UNDEFINED> instruction: 0x4620001a
     ca8:	01000000 	mrseq	r0, (UNDEF: 0)
     cac:	0001c39c 	muleq	r1, ip, r3
     cb0:	07af1000 	streq	r1, [pc, r0]!
     cb4:	0c010000 	stceq	0, cr0, [r1], {-0}
     cb8:	00000162 	andeq	r0, r0, r2, ror #2
     cbc:	00749102 	rsbseq	r9, r4, r2, lsl #2
     cc0:	00035211 	andeq	r5, r3, r1, lsl r2
     cc4:	d0070100 	andle	r0, r7, r0, lsl #2
     cc8:	1020001a 	eorne	r0, r0, sl, lsl r0
     ccc:	01000000 	mrseq	r0, (UNDEF: 0)
     cd0:	07af109c 			; <UNDEFINED> instruction: 0x07af109c
     cd4:	07010000 	streq	r0, [r1, -r0]
     cd8:	00000162 	andeq	r0, r0, r2, ror #2
     cdc:	00749102 	rsbseq	r9, r4, r2, lsl #2
     ce0:	00052b00 	andeq	r2, r5, r0, lsl #22
     ce4:	84000400 	strhi	r0, [r0], #-1024	; 0xfffffc00
     ce8:	04000002 	streq	r0, [r0], #-2
     cec:	00009f01 	andeq	r9, r0, r1, lsl #30
     cf0:	09ef0c00 	stmibeq	pc!, {sl, fp}^	; <UNPREDICTABLE>
     cf4:	1b280000 	blne	a00cfc <startup-0x1f5ff304>
     cf8:	02a82000 	adceq	r2, r8, #0
     cfc:	048a0000 	streq	r0, [sl], #0
     d00:	0c020000 	stceq	0, cr0, [r2], {-0}
     d04:	004e0502 	subeq	r0, lr, r2, lsl #10
     d08:	6b030000 	blvs	c0d10 <startup-0x1ff3f2f0>
     d0c:	02000003 	andeq	r0, r0, #3
     d10:	00004e07 	andeq	r4, r0, r7, lsl #28
     d14:	39030000 	stmdbcc	r3, {}	; <UNPREDICTABLE>
     d18:	02000007 	andeq	r0, r0, #7
     d1c:	00004e08 	andeq	r4, r0, r8, lsl #28
     d20:	ff030400 			; <UNDEFINED> instruction: 0xff030400
     d24:	02000017 	andeq	r0, r0, #23
     d28:	00005509 	andeq	r5, r0, r9, lsl #10
     d2c:	04000800 	streq	r0, [r0], #-2048	; 0xfffff800
     d30:	03990704 	orrseq	r0, r9, #4, 14	; 0x100000
     d34:	04050000 	streq	r0, [r5], #-0
     d38:	0000005b 	andeq	r0, r0, fp, asr r0
     d3c:	f1080104 	cps	#4
     d40:	06000004 	streq	r0, [r0], -r4
     d44:	00001969 	andeq	r1, r0, r9, ror #18
     d48:	00210a02 	eoreq	r0, r1, r2, lsl #20
     d4c:	34070000 	strcc	r0, [r7], #-0
     d50:	0c000000 	stceq	0, cr0, [r0], {-0}
     d54:	009e0603 	addseq	r0, lr, r3, lsl #12
     d58:	e7030000 	str	r0, [r3, -r0]
     d5c:	03000005 	movweq	r0, #5
     d60:	00009e07 	andeq	r9, r0, r7, lsl #28
     d64:	3b030000 	blcc	c0d6c <startup-0x1ff3f294>
     d68:	03000000 	movweq	r0, #0
     d6c:	00009e08 	andeq	r9, r0, r8, lsl #28
     d70:	30030400 	andcc	r0, r3, r0, lsl #8
     d74:	03000000 	movweq	r0, #0
     d78:	00009e09 	andeq	r9, r0, r9, lsl #28
     d7c:	05000800 	streq	r0, [r0, #-2048]	; 0xfffff800
     d80:	00006204 	andeq	r6, r0, r4, lsl #4
     d84:	15140600 	ldrne	r0, [r4, #-1536]	; 0xfffffa00
     d88:	0a030000 	beq	c0d90 <startup-0x1ff3f270>
     d8c:	0000006d 	andeq	r0, r0, sp, rrx
     d90:	0006fc07 	andeq	pc, r6, r7, lsl #24
     d94:	06042400 	streq	r2, [r4], -r0, lsl #8
     d98:	00000128 	andeq	r0, r0, r8, lsr #2
     d9c:	00047f03 	andeq	r7, r4, r3, lsl #30
     da0:	28070400 	stmdacs	r7, {sl}
     da4:	00000001 	andeq	r0, r0, r1
     da8:	00070803 	andeq	r0, r7, r3, lsl #16
     dac:	2e080400 	cfcpyscs	mvf0, mvf8
     db0:	04000001 	streq	r0, [r0], #-1
     db4:	00065803 	andeq	r5, r6, r3, lsl #16
     db8:	2e090400 	cfcpyscs	mvf0, mvf9
     dbc:	08000001 	stmdaeq	r0, {r0}
     dc0:	00068403 	andeq	r8, r6, r3, lsl #8
     dc4:	460c0400 	strmi	r0, [ip], -r0, lsl #8
     dc8:	0c000001 	stceq	0, cr0, [r0], {1}
     dcc:	00035203 	andeq	r5, r3, r3, lsl #4
     dd0:	460d0400 	strmi	r0, [sp], -r0, lsl #8
     dd4:	10000001 	andne	r0, r0, r1
     dd8:	00049103 	andeq	r9, r4, r3, lsl #2
     ddc:	2e100400 	cfmulscs	mvf0, mvf0, mvf0
     de0:	14000001 	strne	r0, [r0], #-1
     de4:	00007003 	andeq	r7, r0, r3
     de8:	2e110400 	cfmulscs	mvf0, mvf1, mvf0
     dec:	18000001 	stmdane	r0, {r0}
     df0:	0003fa03 	andeq	pc, r3, r3, lsl #20
     df4:	2e120400 	cfmulscs	mvf0, mvf2, mvf0
     df8:	1c000001 	stcne	0, cr0, [r0], {1}
     dfc:	00040a03 	andeq	r0, r4, r3, lsl #20
     e00:	2e130400 	cfmulscs	mvf0, mvf3, mvf0
     e04:	20000001 	andcs	r0, r0, r1
     e08:	a4040500 	strge	r0, [r4], #-1280	; 0xfffffb00
     e0c:	08000000 	stmdaeq	r0, {}	; <UNPREDICTABLE>
     e10:	6e690504 	cdpvs	5, 6, cr0, cr9, cr4, {0}
     e14:	40090074 	andmi	r0, r9, r4, ror r0
     e18:	0a000001 	beq	e24 <startup-0x1ffff1dc>
     e1c:	00000140 	andeq	r0, r0, r0, asr #2
     e20:	af040500 	svcge	0x00040500
     e24:	05000000 	streq	r0, [r0, #-0]
     e28:	00013504 	andeq	r3, r1, r4, lsl #10
     e2c:	06fd0600 	ldrbteq	r0, [sp], r0, lsl #12
     e30:	15040000 	strne	r0, [r4, #-0]
     e34:	000000af 	andeq	r0, r0, pc, lsr #1
     e38:	0001620b 	andeq	r6, r1, fp, lsl #4
     e3c:	00016200 	andeq	r6, r1, r0, lsl #4
     e40:	05000c00 	streq	r0, [r0, #-3072]	; 0xfffff400
     e44:	00014c04 	andeq	r4, r1, r4, lsl #24
     e48:	05740d00 	ldrbeq	r0, [r4, #-3328]!	; 0xfffff300
     e4c:	1c040000 	stcne	0, cr0, [r4], {-0}
     e50:	00000157 	andeq	r0, r0, r7, asr r1
     e54:	0004450d 	andeq	r4, r4, sp, lsl #10
     e58:	2e1d0400 	cfmulscs	mvf0, mvf13, mvf0
     e5c:	0b000001 	bleq	e68 <startup-0x1ffff198>
     e60:	0000005b 	andeq	r0, r0, fp, asr r0
     e64:	0000018e 	andeq	r0, r0, lr, lsl #3
     e68:	00018e0e 	andeq	r8, r1, lr, lsl #28
     e6c:	04000b00 	streq	r0, [r0], #-2816	; 0xfffff500
     e70:	04270704 	strteq	r0, [r7], #-1796	; 0xfffff8fc
     e74:	b40f0000 	strlt	r0, [pc], #-0	; e7c <startup-0x1ffff184>
     e78:	05000009 	streq	r0, [r0, #-9]
     e7c:	00017e03 	andeq	r7, r1, r3, lsl #28
     e80:	9c030500 	cfstr32ls	mvfx0, [r3], {-0}
     e84:	0f200091 	svceq	0x00200091
     e88:	000008ae 	andeq	r0, r0, lr, lsr #17
     e8c:	017e0306 	cmneq	lr, r6, lsl #6
     e90:	03050000 	movweq	r0, #20480	; 0x5000
     e94:	200091a8 	andcs	r9, r0, r8, lsr #3
     e98:	0008c90f 	andeq	ip, r8, pc, lsl #18
     e9c:	7e030700 	cdpvc	7, 0, cr0, cr3, cr0, {0}
     ea0:	05000001 	streq	r0, [r0, #-1]
     ea4:	0091b403 	addseq	fp, r1, r3, lsl #8
     ea8:	082a0f20 	stmdaeq	sl!, {r5, r8, r9, sl, fp}
     eac:	03080000 	movweq	r0, #32768	; 0x8000
     eb0:	0000017e 	andeq	r0, r0, lr, ror r1
     eb4:	91c00305 	bicls	r0, r0, r5, lsl #6
     eb8:	da0f2000 	ble	3c8ec0 <startup-0x1fc37140>
     ebc:	09000008 	stmdbeq	r0, {r3}
     ec0:	00017e03 	andeq	r7, r1, r3, lsl #28
     ec4:	cc030500 	cfstr32gt	mvfx0, [r3], {-0}
     ec8:	0f200091 	svceq	0x00200091
     ecc:	00000a1c 	andeq	r0, r0, ip, lsl sl
     ed0:	017e030a 	cmneq	lr, sl, lsl #6
     ed4:	03050000 	movweq	r0, #20480	; 0x5000
     ed8:	200091d8 	ldrdcs	r9, [r0], -r8
     edc:	0009980f 	andeq	r9, r9, pc, lsl #16
     ee0:	7e030b00 	vmlavc.f64	d0, d3, d0
     ee4:	05000001 	streq	r0, [r0, #-1]
     ee8:	0091e403 	addseq	lr, r1, r3, lsl #8
     eec:	08fd0f20 	ldmeq	sp!, {r5, r8, r9, sl, fp}^
     ef0:	030c0000 	movweq	r0, #49152	; 0xc000
     ef4:	0000017e 	andeq	r0, r0, lr, ror r1
     ef8:	91f00305 	mvnsls	r0, r5, lsl #6
     efc:	3a0f2000 	bcc	3c8f04 <startup-0x1fc370fc>
     f00:	0d000008 	stceq	0, cr0, [r0, #-32]	; 0xffffffe0
     f04:	00017e03 	andeq	r7, r1, r3, lsl #28
     f08:	fc030500 	stc2	5, cr0, [r3], {-0}
     f0c:	0f200091 	svceq	0x00200091
     f10:	00000868 	andeq	r0, r0, r8, ror #16
     f14:	017e030e 	cmneq	lr, lr, lsl #6
     f18:	03050000 	movweq	r0, #20480	; 0x5000
     f1c:	20009208 	andcs	r9, r0, r8, lsl #4
     f20:	00094a0f 	andeq	r4, r9, pc, lsl #20
     f24:	7e030f00 	cdpvc	15, 0, cr0, cr3, cr0, {0}
     f28:	05000001 	streq	r0, [r0, #-1]
     f2c:	00921403 	addseq	r1, r2, r3, lsl #8
     f30:	07ee1020 	strbeq	r1, [lr, r0, lsr #32]!
     f34:	11010000 	mrsne	r0, (UNDEF: 1)
     f38:	0000009e 	muleq	r0, lr, r0
     f3c:	53240305 			; <UNDEFINED> instruction: 0x53240305
     f40:	be102000 	cdplt	0, 1, cr2, cr0, cr0, {0}
     f44:	01000007 	tsteq	r0, r7
     f48:	00009e12 	andeq	r9, r0, r2, lsl lr
     f4c:	3c030500 	cfstr32cc	mvfx0, [r3], {-0}
     f50:	10200053 	eorne	r0, r0, r3, asr r0
     f54:	00000814 	andeq	r0, r0, r4, lsl r8
     f58:	009e1301 	addseq	r1, lr, r1, lsl #6
     f5c:	03050000 	movweq	r0, #20480	; 0x5000
     f60:	200051f4 	strdcs	r5, [r0], -r4
     f64:	0008f310 	andeq	pc, r8, r0, lsl r3	; <UNPREDICTABLE>
     f68:	9e140100 	muflss	f0, f4, f0
     f6c:	05000000 	streq	r0, [r0, #-0]
     f70:	00533803 	subseq	r3, r3, r3, lsl #16
     f74:	08be1020 	ldmeq	lr!, {r5, ip}
     f78:	15010000 	strne	r0, [r1, #-0]
     f7c:	0000009e 	muleq	r0, lr, r0
     f80:	53100305 	tstpl	r0, #335544320	; 0x14000000
     f84:	d6102000 	ldrle	r2, [r0], -r0
     f88:	01000007 	tsteq	r0, r7
     f8c:	00009e16 	andeq	r9, r0, r6, lsl lr
     f90:	04030500 	streq	r0, [r3], #-1280	; 0xfffffb00
     f94:	10200052 	eorne	r0, r0, r2, asr r0
     f98:	0000084b 	andeq	r0, r0, fp, asr #16
     f9c:	009e1701 	addseq	r1, lr, r1, lsl #14
     fa0:	03050000 	movweq	r0, #20480	; 0x5000
     fa4:	20005334 	andcs	r5, r0, r4, lsr r3
     fa8:	00097110 	andeq	r7, r9, r0, lsl r1
     fac:	9e180100 	muflse	f0, f0, f0
     fb0:	05000000 	streq	r0, [r0, #-0]
     fb4:	0052f003 	subseq	pc, r2, r3
     fb8:	081f1020 	ldmdaeq	pc, {r5, ip}	; <UNPREDICTABLE>
     fbc:	19010000 	stmdbne	r1, {}	; <UNPREDICTABLE>
     fc0:	0000009e 	muleq	r0, lr, r0
     fc4:	525c0305 	subspl	r0, ip, #335544320	; 0x14000000
     fc8:	b4102000 	ldrlt	r2, [r0], #-0
     fcc:	01000007 	tsteq	r0, r7
     fd0:	00009e1a 	andeq	r9, r0, sl, lsl lr
     fd4:	0c030500 	cfstr32eq	mvfx0, [r3], {-0}
     fd8:	10200053 	eorne	r0, r0, r3, asr r0
     fdc:	0000088c 	andeq	r0, r0, ip, lsl #17
     fe0:	009e1b01 	addseq	r1, lr, r1, lsl #22
     fe4:	03050000 	movweq	r0, #20480	; 0x5000
     fe8:	20005314 	andcs	r5, r0, r4, lsl r3
     fec:	00080610 	andeq	r0, r8, r0, lsl r6
     ff0:	621d0100 	andsvs	r0, sp, #0, 2
     ff4:	05000000 	streq	r0, [r0, #-0]
     ff8:	00522c03 	subseq	r2, r2, r3, lsl #24
     ffc:	097b1020 	ldmdbeq	fp!, {r5, ip}^
    1000:	1e010000 	cdpne	0, 0, cr0, cr1, cr0, {0}
    1004:	00000062 	andeq	r0, r0, r2, rrx
    1008:	53180305 	tstpl	r8, #335544320	; 0x14000000
    100c:	27102000 	ldrcs	r2, [r0, -r0]
    1010:	01000009 	tsteq	r0, r9
    1014:	0000621f 	andeq	r6, r0, pc, lsl r2
    1018:	f4030500 	vst3.8	{d0,d2,d4}, [r3], r0
    101c:	10200052 	eorne	r0, r0, r2, asr r0
    1020:	000007c8 	andeq	r0, r0, r8, asr #15
    1024:	00622001 	rsbeq	r2, r2, r1
    1028:	03050000 	movweq	r0, #20480	; 0x5000
    102c:	20005220 	andcs	r5, r0, r0, lsr #4
    1030:	0009c610 	andeq	ip, r9, r0, lsl r6
    1034:	62210100 	eorvs	r0, r1, #0, 2
    1038:	05000000 	streq	r0, [r0, #-0]
    103c:	00532803 	subseq	r2, r3, r3, lsl #16
    1040:	07f81020 	ldrbeq	r1, [r8, r0, lsr #32]!
    1044:	22010000 	andcs	r0, r1, #0
    1048:	00000062 	andeq	r0, r0, r2, rrx
    104c:	52d80305 	sbcspl	r0, r8, #335544320	; 0x14000000
    1050:	0d102000 	ldceq	0, cr2, [r0, #-0]
    1054:	01000009 	tsteq	r0, r9
    1058:	00006223 	andeq	r6, r0, r3, lsr #4
    105c:	f8030500 			; <UNDEFINED> instruction: 0xf8030500
    1060:	10200051 	eorne	r0, r0, r1, asr r0
    1064:	000007e0 	andeq	r0, r0, r0, ror #15
    1068:	00622401 	rsbeq	r2, r2, r1, lsl #8
    106c:	03050000 	movweq	r0, #20480	; 0x5000
    1070:	20005208 	andcs	r5, r0, r8, lsl #4
    1074:	00098910 	andeq	r8, r9, r0, lsl r9
    1078:	62250100 	eorvs	r0, r5, #0, 2
    107c:	05000000 	streq	r0, [r0, #-0]
    1080:	00524403 	subseq	r4, r2, r3, lsl #8
    1084:	08a01020 	stmiaeq	r0!, {r5, ip}
    1088:	26010000 	strcs	r0, [r1], -r0
    108c:	00000062 	andeq	r0, r0, r2, rrx
    1090:	52cc0305 	sbcpl	r0, ip, #335544320	; 0x14000000
    1094:	e0102000 	ands	r2, r0, r0
    1098:	01000009 	tsteq	r0, r9
    109c:	00006227 	andeq	r6, r0, r7, lsr #4
    10a0:	00030500 	andeq	r0, r3, r0, lsl #10
    10a4:	10200053 	eorne	r0, r0, r3, asr r0
    10a8:	000008eb 	andeq	r0, r0, fp, ror #17
    10ac:	014c2a01 	cmpeq	ip, r1, lsl #20
    10b0:	03050000 	movweq	r0, #20480	; 0x5000
    10b4:	20005260 	andcs	r5, r0, r0, ror #4
    10b8:	00096610 	andeq	r6, r9, r0, lsl r6
    10bc:	a42b0100 	strtge	r0, [fp], #-256	; 0xffffff00
    10c0:	05000000 	streq	r0, [r0, #-0]
    10c4:	00525003 	subseq	r5, r2, r3
    10c8:	09d51020 	ldmibeq	r5, {r5, ip}^
    10cc:	2c010000 	stccs	0, cr0, [r1], {-0}
    10d0:	000000a4 	andeq	r0, r0, r4, lsr #1
    10d4:	52140305 	andspl	r0, r4, #335544320	; 0x14000000
    10d8:	78102000 	ldmdavc	r0, {sp}
    10dc:	01000008 	tsteq	r0, r8
    10e0:	0000a42d 	andeq	sl, r0, sp, lsr #8
    10e4:	38030500 	stmdacc	r3, {r8, sl}
    10e8:	10200052 	eorne	r0, r0, r2, asr r0
    10ec:	0000091c 	andeq	r0, r0, ip, lsl r9
    10f0:	00a42e01 	adceq	r2, r4, r1, lsl #28
    10f4:	03050000 	movweq	r0, #20480	; 0x5000
    10f8:	200052e4 	andcs	r5, r0, r4, ror #5
    10fc:	0009a910 	andeq	sl, r9, r0, lsl r9
    1100:	a42f0100 	strtge	r0, [pc], #-256	; 1108 <startup-0x1fffeef8>
    1104:	05000000 	streq	r0, [r0, #-0]
    1108:	00528403 	subseq	r8, r2, r3, lsl #8
    110c:	00a40b20 	adceq	r0, r4, r0, lsr #22
    1110:	043c0000 	ldrteq	r0, [ip], #-0
    1114:	8e0e0000 	cdphi	0, 0, cr0, cr14, cr0, {0}
    1118:	04000001 	streq	r0, [r0], #-1
    111c:	095b1000 	ldmdbeq	fp, {ip}^
    1120:	30010000 	andcc	r0, r1, r0
    1124:	0000042c 	andeq	r0, r0, ip, lsr #8
    1128:	52900305 	addspl	r0, r0, #335544320	; 0x14000000
    112c:	40112000 	andsmi	r2, r1, r0
    1130:	01000009 	tsteq	r0, r9
    1134:	001cac5f 	andseq	sl, ip, pc, asr ip
    1138:	00012420 	andeq	r2, r1, r0, lsr #8
    113c:	829c0100 	addshi	r0, ip, #0, 2
    1140:	12000004 	andne	r0, r0, #4
    1144:	000008eb 	andeq	r0, r0, fp, ror #17
    1148:	01625f01 	cmneq	r2, r1, lsl #30
    114c:	91020000 	mrsls	r0, (UNDEF: 2)
    1150:	09360f6c 	ldmdbeq	r6!, {r2, r3, r5, r6, r8, r9, sl, fp}
    1154:	60010000 	andvs	r0, r1, r0
    1158:	0000012e 	andeq	r0, r0, lr, lsr #2
    115c:	92200305 	eorls	r0, r0, #335544320	; 0x14000000
    1160:	13002000 	movwne	r2, #0
    1164:	000004c7 	andeq	r0, r0, r7, asr #9
    1168:	1b283101 	blne	a0d574 <startup-0x1f5f2a8c>
    116c:	01842000 	orreq	r2, r4, r0
    1170:	9c010000 	stcls	0, cr0, [r1], {-0}
    1174:	0008830f 	andeq	r8, r8, pc, lsl #6
    1178:	9e320100 	rsflss	f0, f2, f0
    117c:	02000000 	andeq	r0, r0, #0
    1180:	560f7491 			; <UNDEFINED> instruction: 0x560f7491
    1184:	01000008 	tsteq	r0, r8
    1188:	00009e36 	andeq	r9, r0, r6, lsr lr
    118c:	70910200 	addsvc	r0, r1, r0, lsl #4
    1190:	0008970f 	andeq	r9, r8, pc, lsl #14
    1194:	9e3a0100 	rsflse	f0, f2, f0
    1198:	02000000 	andeq	r0, r0, #0
    119c:	5f0f6c91 	svcpl	0x000f6c91
    11a0:	01000008 	tsteq	r0, r8
    11a4:	00009e3e 	andeq	r9, r0, lr, lsr lr
    11a8:	68910200 	ldmvs	r1, {r9}
    11ac:	00046b0f 	andeq	r6, r4, pc, lsl #22
    11b0:	9e420100 	dvflss	f0, f2, f0
    11b4:	02000000 	andeq	r0, r0, #0
    11b8:	090f6491 	stmdbeq	pc, {r0, r4, r7, sl, sp, lr}	; <UNPREDICTABLE>
    11bc:	01000003 	tsteq	r0, r3
    11c0:	00009e46 	andeq	r9, r0, r6, asr #28
    11c4:	60910200 	addsvs	r0, r1, r0, lsl #4
    11c8:	0003120f 	andeq	r1, r3, pc, lsl #4
    11cc:	9e4a0100 	dvflse	f0, f2, f0
    11d0:	02000000 	andeq	r0, r0, #0
    11d4:	4b0f5c91 	blmi	3d8420 <startup-0x1fc27be0>
    11d8:	01000001 	tsteq	r0, r1
    11dc:	00009e4e 	andeq	r9, r0, lr, asr #28
    11e0:	58910200 	ldmpl	r1, {r9}
    11e4:	0003300f 	andeq	r3, r3, pc
    11e8:	9e520100 	rdflss	f0, f2, f0
    11ec:	02000000 	andeq	r0, r0, #0
    11f0:	390f5491 	stmdbcc	pc, {r0, r4, r7, sl, ip, lr}	; <UNPREDICTABLE>
    11f4:	01000003 	tsteq	r0, r3
    11f8:	00009e56 	andeq	r9, r0, r6, asr lr
    11fc:	50910200 	addspl	r0, r1, r0, lsl #4
    1200:	0000850f 	andeq	r8, r0, pc, lsl #10
    1204:	9e5a0100 	rdflse	f0, f2, f0
    1208:	02000000 	andeq	r0, r0, #0
    120c:	00004c91 	muleq	r0, r1, ip
    1210:	0000020c 	andeq	r0, r0, ip, lsl #4
    1214:	03840004 	orreq	r0, r4, #4
    1218:	01040000 	mrseq	r0, (UNDEF: 4)
    121c:	0000009f 	muleq	r0, pc, r0	; <UNPREDICTABLE>
    1220:	000a650c 	andeq	r6, sl, ip, lsl #10
    1224:	001dd000 	andseq	sp, sp, r0
    1228:	00024020 	andeq	r4, r2, r0, lsr #32
    122c:	00061200 	andeq	r1, r6, r0, lsl #4
    1230:	07040200 	streq	r0, [r4, -r0, lsl #4]
    1234:	00000399 	muleq	r0, r9, r3
    1238:	93070202 	movwls	r0, #29186	; 0x7202
    123c:	02000003 	andeq	r0, r0, #3
    1240:	04f10801 	ldrbteq	r0, [r1], #2049	; 0x801
    1244:	0c030000 	stceq	0, cr0, [r3], {-0}
    1248:	00630502 	rsbeq	r0, r3, r2, lsl #10
    124c:	6b040000 	blvs	101254 <startup-0x1fefedac>
    1250:	02000003 	andeq	r0, r0, #3
    1254:	00002107 	andeq	r2, r0, r7, lsl #2
    1258:	39040000 	stmdbcc	r4, {}	; <UNPREDICTABLE>
    125c:	02000007 	andeq	r0, r0, #7
    1260:	00002108 	andeq	r2, r0, r8, lsl #2
    1264:	ff040400 			; <UNDEFINED> instruction: 0xff040400
    1268:	02000017 	andeq	r0, r0, #23
    126c:	00006309 	andeq	r6, r0, r9, lsl #6
    1270:	05000800 	streq	r0, [r0, #-2048]	; 0xfffff800
    1274:	00002f04 	andeq	r2, r0, r4, lsl #30
    1278:	19690600 	stmdbne	r9!, {r9, sl}^
    127c:	0a020000 	beq	81284 <startup-0x1ff7ed7c>
    1280:	00000036 	andeq	r0, r0, r6, lsr r0
    1284:	00003407 	andeq	r3, r0, r7, lsl #8
    1288:	06030c00 	streq	r0, [r3], -r0, lsl #24
    128c:	000000a5 	andeq	r0, r0, r5, lsr #1
    1290:	0005e704 	andeq	lr, r5, r4, lsl #14
    1294:	a5070300 	strge	r0, [r7, #-768]	; 0xfffffd00
    1298:	00000000 	andeq	r0, r0, r0
    129c:	00003b04 	andeq	r3, r0, r4, lsl #22
    12a0:	a5080300 	strge	r0, [r8, #-768]	; 0xfffffd00
    12a4:	04000000 	streq	r0, [r0], #-0
    12a8:	00003004 	andeq	r3, r0, r4
    12ac:	a5090300 	strge	r0, [r9, #-768]	; 0xfffffd00
    12b0:	08000000 	stmdaeq	r0, {}	; <UNPREDICTABLE>
    12b4:	69040500 	stmdbvs	r4, {r8, sl}
    12b8:	06000000 	streq	r0, [r0], -r0
    12bc:	00001514 	andeq	r1, r0, r4, lsl r5
    12c0:	00740a03 	rsbseq	r0, r4, r3, lsl #20
    12c4:	fc070000 	stc2	0, cr0, [r7], {-0}
    12c8:	24000006 	strcs	r0, [r0], #-6
    12cc:	012f0604 			; <UNDEFINED> instruction: 0x012f0604
    12d0:	7f040000 	svcvc	0x00040000
    12d4:	04000004 	streq	r0, [r0], #-4
    12d8:	00012f07 	andeq	r2, r1, r7, lsl #30
    12dc:	08040000 	stmdaeq	r4, {}	; <UNPREDICTABLE>
    12e0:	04000007 	streq	r0, [r0], #-7
    12e4:	00013508 	andeq	r3, r1, r8, lsl #10
    12e8:	58040400 	stmdapl	r4, {sl}
    12ec:	04000006 	streq	r0, [r0], #-6
    12f0:	00013509 	andeq	r3, r1, r9, lsl #10
    12f4:	84040800 	strhi	r0, [r4], #-2048	; 0xfffff800
    12f8:	04000006 	streq	r0, [r0], #-6
    12fc:	00014d0c 	andeq	r4, r1, ip, lsl #26
    1300:	52040c00 	andpl	r0, r4, #0, 24
    1304:	04000003 	streq	r0, [r0], #-3
    1308:	00014d0d 	andeq	r4, r1, sp, lsl #26
    130c:	91041000 	mrsls	r1, (UNDEF: 4)
    1310:	04000004 	streq	r0, [r0], #-4
    1314:	00013510 	andeq	r3, r1, r0, lsl r5
    1318:	70041400 	andvc	r1, r4, r0, lsl #8
    131c:	04000000 	streq	r0, [r0], #-0
    1320:	00013511 	andeq	r3, r1, r1, lsl r5
    1324:	fa041800 	blx	10732c <startup-0x1fef8cd4>
    1328:	04000003 	streq	r0, [r0], #-3
    132c:	00013512 	andeq	r3, r1, r2, lsl r5
    1330:	0a041c00 	beq	108338 <startup-0x1fef7cc8>
    1334:	04000004 	streq	r0, [r0], #-4
    1338:	00013513 	andeq	r3, r1, r3, lsl r5
    133c:	05002000 	streq	r2, [r0, #-0]
    1340:	0000ab04 	andeq	sl, r0, r4, lsl #22
    1344:	05040800 	streq	r0, [r4, #-2048]	; 0xfffff800
    1348:	00746e69 	rsbseq	r6, r4, r9, ror #28
    134c:	00014709 	andeq	r4, r1, r9, lsl #14
    1350:	01470a00 	cmpeq	r7, r0, lsl #20
    1354:	05000000 	streq	r0, [r0, #-0]
    1358:	0000b604 	andeq	fp, r0, r4, lsl #12
    135c:	3c040500 	cfstr32cc	mvfx0, [r4], {-0}
    1360:	06000001 	streq	r0, [r0], -r1
    1364:	000006fd 	strdeq	r0, [r0], -sp
    1368:	00b61504 	adcseq	r1, r6, r4, lsl #10
    136c:	690b0000 	stmdbvs	fp, {}	; <UNPREDICTABLE>
    1370:	69000001 	stmdbvs	r0, {r0}
    1374:	0c000001 	stceq	0, cr0, [r0], {1}
    1378:	53040500 	movwpl	r0, #17664	; 0x4500
    137c:	0d000001 	stceq	0, cr0, [r0, #-4]
    1380:	00000574 	andeq	r0, r0, r4, ror r5
    1384:	015e1c04 	cmpeq	lr, r4, lsl #24
    1388:	450d0000 	strmi	r0, [sp, #-0]
    138c:	04000004 	streq	r0, [r0], #-4
    1390:	0001351d 	andeq	r3, r1, sp, lsl r5
    1394:	0a3b0e00 	beq	ec4b9c <startup-0x1f13b464>
    1398:	08010000 	stmdaeq	r1, {}	; <UNPREDICTABLE>
    139c:	00000135 	andeq	r0, r0, r5, lsr r1
    13a0:	4f6c0305 	svcmi	0x006c0305
    13a4:	2c0e2000 	stccs	0, cr2, [lr], {-0}
    13a8:	0100000a 	tsteq	r0, sl
    13ac:	00013509 	andeq	r3, r1, r9, lsl #10
    13b0:	70030500 	andvc	r0, r3, r0, lsl #10
    13b4:	0e20004f 	cdpeq	0, 2, cr0, cr0, cr15, {2}
    13b8:	00000a57 	andeq	r0, r0, r7, asr sl
    13bc:	01350a01 	teqeq	r5, r1, lsl #20
    13c0:	03050000 	movweq	r0, #20480	; 0x5000
    13c4:	20004f74 	andcs	r4, r0, r4, ror pc
    13c8:	000a500e 	andeq	r5, sl, lr
    13cc:	350b0100 	strcc	r0, [fp, #-256]	; 0xffffff00
    13d0:	05000001 	streq	r0, [r0, #-1]
    13d4:	004f7803 	subeq	r7, pc, r3, lsl #16
    13d8:	0a490e20 	beq	1244c60 <startup-0x1edbb3a0>
    13dc:	0c010000 	stceq	0, cr0, [r1], {-0}
    13e0:	00000135 	andeq	r0, r0, r5, lsr r1
    13e4:	4f7c0305 	svcmi	0x007c0305
    13e8:	a00f2000 	andge	r2, pc, r0
    13ec:	0100000a 	tsteq	r0, sl
    13f0:	001e0c16 	andseq	r0, lr, r6, lsl ip
    13f4:	00020420 	andeq	r0, r2, r0, lsr #8
    13f8:	fe9c0100 	cdp2	1, 9, cr0, cr12, cr0, {0}
    13fc:	10000001 	andne	r0, r0, r1
    1400:	000007af 	andeq	r0, r0, pc, lsr #15
    1404:	01691601 	cmneq	r9, r1, lsl #12
    1408:	91020000 	mrsls	r0, (UNDEF: 2)
    140c:	94110074 	ldrls	r0, [r1], #-116	; 0xffffff8c
    1410:	0100000a 	tsteq	r0, sl
    1414:	001dd00e 	andseq	sp, sp, lr
    1418:	00003c20 	andeq	r3, r0, r0, lsr #24
    141c:	009c0100 	addseq	r0, ip, r0, lsl #2
    1420:	00000641 	andeq	r0, r0, r1, asr #12
    1424:	046c0004 	strbteq	r0, [ip], #-4
    1428:	01040000 	mrseq	r0, (UNDEF: 4)
    142c:	0000009f 	muleq	r0, pc, r0	; <UNPREDICTABLE>
    1430:	000d210c 	andeq	r2, sp, ip, lsl #2
    1434:	00201000 	eoreq	r1, r0, r0
    1438:	00036420 	andeq	r6, r3, r0, lsr #8
    143c:	00070400 	andeq	r0, r7, r0, lsl #8
    1440:	020c0200 	andeq	r0, ip, #0, 4
    1444:	00004e05 	andeq	r4, r0, r5, lsl #28
    1448:	036b0300 	cmneq	fp, #0, 6
    144c:	07020000 	streq	r0, [r2, -r0]
    1450:	0000004e 	andeq	r0, r0, lr, asr #32
    1454:	07390300 	ldreq	r0, [r9, -r0, lsl #6]!
    1458:	08020000 	stmdaeq	r2, {}	; <UNPREDICTABLE>
    145c:	0000004e 	andeq	r0, r0, lr, asr #32
    1460:	17ff0304 	ldrbne	r0, [pc, r4, lsl #6]!
    1464:	09020000 	stmdbeq	r2, {}	; <UNPREDICTABLE>
    1468:	00000055 	andeq	r0, r0, r5, asr r0
    146c:	04040008 	streq	r0, [r4], #-8
    1470:	00039907 	andeq	r9, r3, r7, lsl #18
    1474:	5b040500 	blpl	10287c <startup-0x1fefd784>
    1478:	04000000 	streq	r0, [r0], #-0
    147c:	04f10801 	ldrbteq	r0, [r1], #2049	; 0x801
    1480:	69060000 	stmdbvs	r6, {}	; <UNPREDICTABLE>
    1484:	02000019 	andeq	r0, r0, #25
    1488:	0000210a 	andeq	r2, r0, sl, lsl #2
    148c:	00340700 	eorseq	r0, r4, r0, lsl #14
    1490:	030c0000 	movweq	r0, #49152	; 0xc000
    1494:	00009e06 	andeq	r9, r0, r6, lsl #28
    1498:	05e70300 	strbeq	r0, [r7, #768]!	; 0x300
    149c:	07030000 	streq	r0, [r3, -r0]
    14a0:	0000009e 	muleq	r0, lr, r0
    14a4:	003b0300 	eorseq	r0, fp, r0, lsl #6
    14a8:	08030000 	stmdaeq	r3, {}	; <UNPREDICTABLE>
    14ac:	0000009e 	muleq	r0, lr, r0
    14b0:	00300304 	eorseq	r0, r0, r4, lsl #6
    14b4:	09030000 	stmdbeq	r3, {}	; <UNPREDICTABLE>
    14b8:	0000009e 	muleq	r0, lr, r0
    14bc:	04050008 	streq	r0, [r5], #-8
    14c0:	00000062 	andeq	r0, r0, r2, rrx
    14c4:	00151406 	andseq	r1, r5, r6, lsl #8
    14c8:	6d0a0300 	stcvs	3, cr0, [sl, #-0]
    14cc:	07000000 	streq	r0, [r0, -r0]
    14d0:	000006fc 	strdeq	r0, [r0], -ip
    14d4:	28060424 	stmdacs	r6, {r2, r5, sl}
    14d8:	03000001 	movweq	r0, #1
    14dc:	0000047f 	andeq	r0, r0, pc, ror r4
    14e0:	01280704 			; <UNDEFINED> instruction: 0x01280704
    14e4:	03000000 	movweq	r0, #0
    14e8:	00000708 	andeq	r0, r0, r8, lsl #14
    14ec:	012e0804 			; <UNDEFINED> instruction: 0x012e0804
    14f0:	03040000 	movweq	r0, #16384	; 0x4000
    14f4:	00000658 	andeq	r0, r0, r8, asr r6
    14f8:	012e0904 			; <UNDEFINED> instruction: 0x012e0904
    14fc:	03080000 	movweq	r0, #32768	; 0x8000
    1500:	00000684 	andeq	r0, r0, r4, lsl #13
    1504:	01460c04 	cmpeq	r6, r4, lsl #24
    1508:	030c0000 	movweq	r0, #49152	; 0xc000
    150c:	00000352 	andeq	r0, r0, r2, asr r3
    1510:	01460d04 	cmpeq	r6, r4, lsl #26
    1514:	03100000 	tsteq	r0, #0
    1518:	00000491 	muleq	r0, r1, r4
    151c:	012e1004 			; <UNDEFINED> instruction: 0x012e1004
    1520:	03140000 	tsteq	r4, #0
    1524:	00000070 	andeq	r0, r0, r0, ror r0
    1528:	012e1104 			; <UNDEFINED> instruction: 0x012e1104
    152c:	03180000 	tsteq	r8, #0
    1530:	000003fa 	strdeq	r0, [r0], -sl
    1534:	012e1204 			; <UNDEFINED> instruction: 0x012e1204
    1538:	031c0000 	tsteq	ip, #0
    153c:	0000040a 	andeq	r0, r0, sl, lsl #8
    1540:	012e1304 			; <UNDEFINED> instruction: 0x012e1304
    1544:	00200000 	eoreq	r0, r0, r0
    1548:	00a40405 	adceq	r0, r4, r5, lsl #8
    154c:	04080000 	streq	r0, [r8], #-0
    1550:	746e6905 	strbtvc	r6, [lr], #-2309	; 0xfffff6fb
    1554:	01400900 	cmpeq	r0, r0, lsl #18
    1558:	400a0000 	andmi	r0, sl, r0
    155c:	00000001 	andeq	r0, r0, r1
    1560:	00af0405 	adceq	r0, pc, r5, lsl #8
    1564:	04050000 	streq	r0, [r5], #-0
    1568:	00000135 	andeq	r0, r0, r5, lsr r1
    156c:	0006fd06 	andeq	pc, r6, r6, lsl #26
    1570:	af150400 	svcge	0x00150400
    1574:	0b000000 	bleq	157c <startup-0x1fffea84>
    1578:	00000162 	andeq	r0, r0, r2, ror #2
    157c:	00000162 	andeq	r0, r0, r2, ror #2
    1580:	0405000c 	streq	r0, [r5], #-12
    1584:	0000014c 	andeq	r0, r0, ip, asr #2
    1588:	0005740d 	andeq	r7, r5, sp, lsl #8
    158c:	571c0400 	ldrpl	r0, [ip, -r0, lsl #8]
    1590:	0d000001 	stceq	0, cr0, [r0, #-4]
    1594:	00000445 	andeq	r0, r0, r5, asr #8
    1598:	012e1d04 			; <UNDEFINED> instruction: 0x012e1d04
    159c:	5b0b0000 	blpl	2c15a4 <startup-0x1fd3ea5c>
    15a0:	8e000000 	cdphi	0, 0, cr0, cr0, cr0, {0}
    15a4:	0e000001 	cdpeq	0, 0, cr0, cr0, cr1, {0}
    15a8:	0000018e 	andeq	r0, r0, lr, lsl #3
    15ac:	04040063 	streq	r0, [r4], #-99	; 0xffffff9d
    15b0:	00042707 	andeq	r2, r4, r7, lsl #14
    15b4:	0d870f00 	stceq	15, cr0, [r7]
    15b8:	03050000 	movweq	r0, #20480	; 0x5000
    15bc:	0000017e 	andeq	r0, r0, lr, ror r1
    15c0:	92240305 	eorls	r0, r4, #335544320	; 0x14000000
    15c4:	f20f2000 	vhadd.s8	d2, d15, d0
    15c8:	0600000b 	streq	r0, [r0], -fp
    15cc:	00017e03 	andeq	r7, r1, r3, lsl #28
    15d0:	88030500 	stmdahi	r3, {r8, sl}
    15d4:	0f200092 	svceq	0x00200092
    15d8:	00000c3a 	andeq	r0, r0, sl, lsr ip
    15dc:	017e0307 	cmneq	lr, r7, lsl #6
    15e0:	03050000 	movweq	r0, #20480	; 0x5000
    15e4:	200092ec 	andcs	r9, r0, ip, ror #5
    15e8:	000be10f 	andeq	lr, fp, pc, lsl #2
    15ec:	7e030800 	cdpvc	8, 0, cr0, cr3, cr0, {0}
    15f0:	05000001 	streq	r0, [r0, #-1]
    15f4:	00935003 	addseq	r5, r3, r3
    15f8:	0d600f20 	stcleq	15, cr0, [r0, #-128]!	; 0xffffff80
    15fc:	03090000 	movweq	r0, #36864	; 0x9000
    1600:	0000017e 	andeq	r0, r0, lr, ror r1
    1604:	93b40305 			; <UNDEFINED> instruction: 0x93b40305
    1608:	340f2000 	strcc	r2, [pc], #-0	; 1610 <startup-0x1fffe9f0>
    160c:	0a00000e 	beq	164c <startup-0x1fffe9b4>
    1610:	00017e03 	andeq	r7, r1, r3, lsl #28
    1614:	18030500 	stmdane	r3, {r8, sl}
    1618:	0f200094 	svceq	0x00200094
    161c:	00000c0d 	andeq	r0, r0, sp, lsl #24
    1620:	017e030b 	cmneq	lr, fp, lsl #6
    1624:	03050000 	movweq	r0, #20480	; 0x5000
    1628:	2000947c 	andcs	r9, r0, ip, ror r4
    162c:	000cfb0f 	andeq	pc, ip, pc, lsl #22
    1630:	7e030c00 	cdpvc	12, 0, cr0, cr3, cr0, {0}
    1634:	05000001 	streq	r0, [r0, #-1]
    1638:	0094e003 	addseq	lr, r4, r3
    163c:	0abc0f20 	beq	fef052c4 <firstTime.4104+0xdeef0e58>
    1640:	030d0000 	movweq	r0, #53248	; 0xd000
    1644:	0000017e 	andeq	r0, r0, lr, ror r1
    1648:	95440305 	strbls	r0, [r4, #-773]	; 0xfffffcfb
    164c:	1e0f2000 	cdpne	0, 0, cr2, cr15, cr0, {0}
    1650:	0e00000c 	cdpeq	0, 0, cr0, cr0, cr12, {0}
    1654:	00017e03 	andeq	r7, r1, r3, lsl #28
    1658:	a8030500 	stmdage	r3, {r8, sl}
    165c:	0f200095 	svceq	0x00200095
    1660:	00000ca2 	andeq	r0, r0, r2, lsr #25
    1664:	017e030f 	cmneq	lr, pc, lsl #6
    1668:	03050000 	movweq	r0, #20480	; 0x5000
    166c:	2000960c 	andcs	r9, r0, ip, lsl #12
    1670:	000ad80f 	andeq	sp, sl, pc, lsl #16
    1674:	7e031000 	cdpvc	0, 0, cr1, cr3, cr0, {0}
    1678:	05000001 	streq	r0, [r0, #-1]
    167c:	00967003 	addseq	r7, r6, r3
    1680:	0c4b0f20 	mcrreq	15, 2, r0, fp, cr0
    1684:	03110000 	tsteq	r1, #0
    1688:	0000017e 	andeq	r0, r0, lr, ror r1
    168c:	96d40305 	ldrbls	r0, [r4], r5, lsl #6
    1690:	6b0f2000 	blvs	3c9698 <startup-0x1fc36968>
    1694:	1200000c 	andne	r0, r0, #12
    1698:	00017e03 	andeq	r7, r1, r3, lsl #28
    169c:	38030500 	stmdacc	r3, {r8, sl}
    16a0:	0f200097 	svceq	0x00200097
    16a4:	00000b02 	andeq	r0, r0, r2, lsl #22
    16a8:	017e0313 	cmneq	lr, r3, lsl r3
    16ac:	03050000 	movweq	r0, #20480	; 0x5000
    16b0:	2000979c 	mulcs	r0, ip, r7
    16b4:	000d0b10 	andeq	r0, sp, r0, lsl fp
    16b8:	9e150100 	muflss	f0, f5, f0
    16bc:	05000000 	streq	r0, [r0, #-0]
    16c0:	0053ac03 	subseq	sl, r3, r3, lsl #24
    16c4:	0b3e1020 	bleq	f8574c <startup-0x1f07a8b4>
    16c8:	16010000 	strne	r0, [r1], -r0
    16cc:	0000009e 	muleq	r0, lr, r0
    16d0:	53440305 	movtpl	r0, #17157	; 0x4305
    16d4:	28102000 	ldmdacs	r0, {sp}
    16d8:	0100000b 	tsteq	r0, fp
    16dc:	00009e17 	andeq	r9, r0, r7, lsl lr
    16e0:	3c030500 	cfstr32cc	mvfx0, [r3], {-0}
    16e4:	10200054 	eorne	r0, r0, r4, asr r0
    16e8:	00000b80 	andeq	r0, r0, r0, lsl #23
    16ec:	009e1801 	addseq	r1, lr, r1, lsl #16
    16f0:	03050000 	movweq	r0, #20480	; 0x5000
    16f4:	200053a8 	andcs	r5, r0, r8, lsr #7
    16f8:	000c7b10 	andeq	r7, ip, r0, lsl fp
    16fc:	9e190100 	muflse	f0, f1, f0
    1700:	05000000 	streq	r0, [r0, #-0]
    1704:	00542c03 	subseq	r2, r4, r3, lsl #24
    1708:	0d161020 	ldceq	0, cr1, [r6, #-128]	; 0xffffff80
    170c:	1a010000 	bne	41714 <startup-0x1ffbe8ec>
    1710:	0000009e 	muleq	r0, lr, r0
    1714:	54e00305 	strbtpl	r0, [r0], #773	; 0x305
    1718:	33102000 	tstcc	r0, #0
    171c:	0100000b 	tsteq	r0, fp
    1720:	00009e1b 	andeq	r9, r0, fp, lsl lr
    1724:	a0030500 	andge	r0, r3, r0, lsl #10
    1728:	10200053 	eorne	r0, r0, r3, asr r0
    172c:	00000da3 	andeq	r0, r0, r3, lsr #27
    1730:	009e1c01 	addseq	r1, lr, r1, lsl #24
    1734:	03050000 	movweq	r0, #20480	; 0x5000
    1738:	200053c8 	andcs	r5, r0, r8, asr #7
    173c:	000b1310 	andeq	r1, fp, r0, lsl r3
    1740:	9e1d0100 	muflse	f0, f5, f0
    1744:	05000000 	streq	r0, [r0, #-0]
    1748:	0053f403 	subseq	pc, r3, r3, lsl #8
    174c:	0ce11020 	stcleq	0, cr1, [r1], #128	; 0x80
    1750:	1e010000 	cdpne	0, 0, cr0, cr1, cr0, {0}
    1754:	0000009e 	muleq	r0, lr, r0
    1758:	54c40305 	strbpl	r0, [r4], #773	; 0x305
    175c:	76102000 	ldrvc	r2, [r0], -r0
    1760:	0100000b 	tsteq	r0, fp
    1764:	00009e1f 	andeq	r9, r0, pc, lsl lr
    1768:	a4030500 	strge	r0, [r3], #-1280	; 0xfffffb00
    176c:	10200053 	eorne	r0, r0, r3, asr r0
    1770:	00000deb 	andeq	r0, r0, fp, ror #27
    1774:	009e2001 	addseq	r2, lr, r1
    1778:	03050000 	movweq	r0, #20480	; 0x5000
    177c:	20005340 	andcs	r5, r0, r0, asr #6
    1780:	000b5710 	andeq	r5, fp, r0, lsl r7
    1784:	9e210100 	suflss	f0, f1, f0
    1788:	05000000 	streq	r0, [r0, #-0]
    178c:	00535403 	subseq	r5, r3, r3, lsl #8
    1790:	0d7d1020 	ldcleq	0, cr1, [sp, #-128]!	; 0xffffff80
    1794:	22010000 	andcs	r0, r1, #0
    1798:	0000009e 	muleq	r0, lr, r0
    179c:	53d80305 	bicspl	r0, r8, #335544320	; 0x14000000
    17a0:	bc102000 	ldclt	0, cr2, [r0], {-0}
    17a4:	0100000c 	tsteq	r0, ip
    17a8:	00009e23 	andeq	r9, r0, r3, lsr #28
    17ac:	1c030500 	cfstr32ne	mvfx0, [r3], {-0}
    17b0:	10200054 	eorne	r0, r0, r4, asr r0
    17b4:	00000dba 			; <UNDEFINED> instruction: 0x00000dba
    17b8:	00622501 	rsbeq	r2, r2, r1, lsl #10
    17bc:	03050000 	movweq	r0, #20480	; 0x5000
    17c0:	200053bc 			; <UNDEFINED> instruction: 0x200053bc
    17c4:	000bbb10 	andeq	fp, fp, r0, lsl fp
    17c8:	62260100 	eorvs	r0, r6, #0, 2
    17cc:	05000000 	streq	r0, [r0, #-0]
    17d0:	00543003 	subseq	r3, r4, r3
    17d4:	0d701020 	ldcleq	0, cr1, [r0, #-128]!	; 0xffffff80
    17d8:	27010000 	strcs	r0, [r1, -r0]
    17dc:	00000062 	andeq	r0, r0, r2, rrx
    17e0:	53cc0305 	bicpl	r0, ip, #335544320	; 0x14000000
    17e4:	ec102000 	ldc	0, cr2, [r0], {-0}
    17e8:	0100000c 	tsteq	r0, ip
    17ec:	00006228 	andeq	r6, r0, r8, lsr #4
    17f0:	c8030500 	stmdagt	r3, {r8, sl}
    17f4:	10200054 	eorne	r0, r0, r4, asr r0
    17f8:	00000aad 	andeq	r0, r0, sp, lsr #21
    17fc:	00622901 	rsbeq	r2, r2, r1, lsl #18
    1800:	03050000 	movweq	r0, #20480	; 0x5000
    1804:	20005440 	andcs	r5, r0, r0, asr #8
    1808:	000b9f10 	andeq	r9, fp, r0, lsl pc
    180c:	622a0100 	eorvs	r0, sl, #0, 2
    1810:	05000000 	streq	r0, [r0, #-0]
    1814:	0053e803 	subseq	lr, r3, r3, lsl #16
    1818:	0dc81020 	stcleq	0, cr1, [r8, #128]	; 0x80
    181c:	2b010000 	blcs	41824 <startup-0x1ffbe7dc>
    1820:	00000062 	andeq	r0, r0, r2, rrx
    1824:	54200305 	strtpl	r0, [r0], #-773	; 0xfffffcfb
    1828:	5c102000 	ldcpl	0, cr2, [r0], {-0}
    182c:	0100000c 	tsteq	r0, ip
    1830:	0000622c 	andeq	r6, r0, ip, lsr #4
    1834:	64030500 	strvs	r0, [r3], #-1280	; 0xfffffb00
    1838:	10200054 	eorne	r0, r0, r4, asr r0
    183c:	00000c94 	muleq	r0, r4, ip
    1840:	00622d01 	rsbeq	r2, r2, r1, lsl #26
    1844:	03050000 	movweq	r0, #20480	; 0x5000
    1848:	20005470 	andcs	r5, r0, r0, ror r4
    184c:	000b4810 	andeq	r4, fp, r0, lsl r8
    1850:	622e0100 	eorvs	r0, lr, #0, 2
    1854:	05000000 	streq	r0, [r0, #-0]
    1858:	00535803 	subseq	r5, r3, r3, lsl #16
    185c:	0c851020 	stceq	0, cr1, [r5], {32}
    1860:	2f010000 	svccs	0x00010000
    1864:	00000062 	andeq	r0, r0, r2, rrx
    1868:	54580305 	ldrbpl	r0, [r8], #-773	; 0xfffffcfb
    186c:	ad102000 	ldcge	0, cr2, [r0, #-0]
    1870:	0100000b 	tsteq	r0, fp
    1874:	00006230 	andeq	r6, r0, r0, lsr r2
    1878:	d4030500 	strle	r0, [r3], #-1280	; 0xfffffb00
    187c:	10200054 	eorne	r0, r0, r4, asr r0
    1880:	00000cd2 	ldrdeq	r0, [r0], -r2
    1884:	00623101 	rsbeq	r3, r2, r1, lsl #2
    1888:	03050000 	movweq	r0, #20480	; 0x5000
    188c:	20005404 	andcs	r5, r0, r4, lsl #8
    1890:	000ae910 	andeq	lr, sl, r0, lsl r9
    1894:	62320100 	eorsvs	r0, r2, #0, 2
    1898:	05000000 	streq	r0, [r0, #-0]
    189c:	0053dc03 	subseq	sp, r3, r3, lsl #24
    18a0:	0bc91020 	bleq	ff245928 <firstTime.4104+0xdf2314bc>
    18a4:	33010000 	movwcc	r0, #4096	; 0x1000
    18a8:	00000062 	andeq	r0, r0, r2, rrx
    18ac:	53f80305 	mvnspl	r0, #335544320	; 0x14000000
    18b0:	58102000 	ldmdapl	r0, {sp}
    18b4:	0100000d 	tsteq	r0, sp
    18b8:	00014c36 	andeq	r4, r1, r6, lsr ip
    18bc:	70030500 	andvc	r0, r3, r0, lsl #10
    18c0:	10200053 	eorne	r0, r0, r3, asr r0
    18c4:	00000d98 	muleq	r0, r8, sp
    18c8:	00a43701 	adceq	r3, r4, r1, lsl #14
    18cc:	03050000 	movweq	r0, #20480	; 0x5000
    18d0:	20005394 	mulcs	r0, r4, r3
    18d4:	000e1f10 	andeq	r1, lr, r0, lsl pc
    18d8:	a4380100 	ldrtge	r0, [r8], #-256	; 0xffffff00
    18dc:	05000000 	streq	r0, [r0, #-0]
    18e0:	00536403 	subseq	r6, r3, r3, lsl #8
    18e4:	0c2f1020 	stceq	0, cr1, [pc], #-128	; 186c <startup-0x1fffe794>
    18e8:	39010000 	stmdbcc	r1, {}	; <UNPREDICTABLE>
    18ec:	000000a4 	andeq	r0, r0, r4, lsr #1
    18f0:	544c0305 	strbpl	r0, [ip], #-773	; 0xfffffcfb
    18f4:	cd102000 	ldcgt	0, cr2, [r0, #-0]
    18f8:	0100000a 	tsteq	r0, sl
    18fc:	0000a43a 	andeq	sl, r0, sl, lsr r4
    1900:	b0030500 	andlt	r0, r3, r0, lsl #10
    1904:	10200053 	eorne	r0, r0, r3, asr r0
    1908:	00000df6 	strdeq	r0, [r0], -r6
    190c:	00a43b01 	adceq	r3, r4, r1, lsl #22
    1910:	03050000 	movweq	r0, #20480	; 0x5000
    1914:	20005410 	andcs	r5, r0, r0, lsl r4
    1918:	000c0210 	andeq	r0, ip, r0, lsl r2
    191c:	a43c0100 	ldrtge	r0, [ip], #-256	; 0xffffff00
    1920:	05000000 	streq	r0, [r0, #-0]
    1924:	00534803 	subseq	r4, r3, r3, lsl #16
    1928:	00a40b20 	adceq	r0, r4, r0, lsr #22
    192c:	05190000 	ldreq	r0, [r9, #-0]
    1930:	8e0e0000 	cdphi	0, 0, cr0, cr14, cr0, {0}
    1934:	05000001 	streq	r0, [r0, #-1]
    1938:	0cc71000 	stcleq	0, cr1, [r7], {0}
    193c:	3f010000 	svccc	0x00010000
    1940:	00000509 	andeq	r0, r0, r9, lsl #10
    1944:	547c0305 	ldrbtpl	r0, [ip], #-773	; 0xfffffcfb
    1948:	4e112000 	cdpmi	0, 1, cr2, cr1, cr0, {0}
    194c:	0100000d 	tsteq	r0, sp
    1950:	00221c76 	eoreq	r1, r2, r6, ror ip
    1954:	00015820 	andeq	r5, r1, r0, lsr #16
    1958:	5f9c0100 	svcpl	0x009c0100
    195c:	12000005 	andne	r0, r0, #5
    1960:	00000d58 	andeq	r0, r0, r8, asr sp
    1964:	01627601 	cmneq	r2, r1, lsl #12
    1968:	91020000 	mrsls	r0, (UNDEF: 2)
    196c:	09360f6c 	ldmdbeq	r6!, {r2, r3, r5, r6, r8, r9, sl, fp}
    1970:	77010000 	strvc	r0, [r1, -r0]
    1974:	0000012e 	andeq	r0, r0, lr, lsr #2
    1978:	98000305 	stmdals	r0, {r0, r2, r8, r9}
    197c:	13002000 	movwne	r2, #0
    1980:	000004c7 	andeq	r0, r0, r7, asr #9
    1984:	20104001 	andscs	r4, r0, r1
    1988:	020c2000 	andeq	r2, ip, #0
    198c:	9c010000 	stcls	0, cr0, [r1], {-0}
    1990:	000dd70f 	andeq	sp, sp, pc, lsl #14
    1994:	9e420100 	dvflss	f0, f2, f0
    1998:	02000000 	andeq	r0, r0, #0
    199c:	e10f7491 			; <UNDEFINED> instruction: 0xe10f7491
    19a0:	0100000d 	tsteq	r0, sp
    19a4:	00009e45 	andeq	r9, r0, r5, asr #28
    19a8:	70910200 	addsvc	r0, r1, r0, lsl #4
    19ac:	000bd70f 	andeq	sp, fp, pc, lsl #14
    19b0:	9e480100 	dvflse	f0, f0, f0
    19b4:	02000000 	andeq	r0, r0, #0
    19b8:	f80f6c91 			; <UNDEFINED> instruction: 0xf80f6c91
    19bc:	0100000a 	tsteq	r0, sl
    19c0:	00009e4c 	andeq	r9, r0, ip, asr #28
    19c4:	68910200 	ldmvs	r1, {r9}
    19c8:	000e010f 	andeq	r0, lr, pc, lsl #2
    19cc:	9e4f0100 	dvflse	f0, f7, f0
    19d0:	02000000 	andeq	r0, r0, #0
    19d4:	950f6491 	strls	r6, [pc, #-1169]	; 154b <startup-0x1fffeab5>
    19d8:	0100000b 	tsteq	r0, fp
    19dc:	00009e52 	andeq	r9, r0, r2, asr lr
    19e0:	60910200 	addsvs	r0, r1, r0, lsl #4
    19e4:	000dad0f 	andeq	sl, sp, pc, lsl #26
    19e8:	9e570100 	rdflss	f0, f7, f0
    19ec:	02000000 	andeq	r0, r0, #0
    19f0:	0b0f5c91 	bleq	3d8c3c <startup-0x1fc273c4>
    19f4:	0100000e 	tsteq	r0, lr
    19f8:	00009e5a 	andeq	r9, r0, sl, asr lr
    19fc:	58910200 	ldmpl	r1, {r9}
    1a00:	000e150f 	andeq	r1, lr, pc, lsl #10
    1a04:	9e5d0100 	rdflse	f0, f5, f0
    1a08:	02000000 	andeq	r0, r0, #0
    1a0c:	1e0f5491 	mcrne	4, 0, r5, cr15, cr1, {4}
    1a10:	0100000b 	tsteq	r0, fp
    1a14:	00009e61 	andeq	r9, r0, r1, ror #28
    1a18:	50910200 	addspl	r0, r1, r0, lsl #4
    1a1c:	000b620f 	andeq	r6, fp, pc, lsl #4
    1a20:	9e640100 	powlss	f0, f4, f0
    1a24:	02000000 	andeq	r0, r0, #0
    1a28:	6c0f4c91 	stcvs	12, cr4, [pc], {145}	; 0x91
    1a2c:	0100000b 	tsteq	r0, fp
    1a30:	00009e67 	andeq	r9, r0, r7, ror #28
    1a34:	48910200 	ldmmi	r1, {r9}
    1a38:	000e2a0f 	andeq	r2, lr, pc, lsl #20
    1a3c:	9e6b0100 	powlse	f0, f3, f0
    1a40:	02000000 	andeq	r0, r0, #0
    1a44:	b20f4491 	andlt	r4, pc, #-1862270976	; 0x91000000
    1a48:	0100000c 	tsteq	r0, ip
    1a4c:	00009e6e 	andeq	r9, r0, lr, ror #28
    1a50:	40910200 	addsmi	r0, r1, r0, lsl #4
    1a54:	000b8b0f 	andeq	r8, fp, pc, lsl #22
    1a58:	9e710100 	rpwlss	f0, f1, f0
    1a5c:	03000000 	movweq	r0, #0
    1a60:	007fbc91 			; <UNDEFINED> instruction: 0x007fbc91
    1a64:	00049800 	andeq	r9, r4, r0, lsl #16
    1a68:	6c000400 	cfstrsvs	mvf0, [r0], {-0}
    1a6c:	04000005 	streq	r0, [r0], #-5
    1a70:	00009f01 	andeq	r9, r0, r1, lsl #30
    1a74:	0eda0c00 	cdpeq	12, 13, cr0, cr10, cr0, {0}
    1a78:	23740000 	cmncs	r4, #0
    1a7c:	02382000 	eorseq	r2, r8, #0
    1a80:	08e50000 	stmiaeq	r5!, {}^	; <UNPREDICTABLE>
    1a84:	0c020000 	stceq	0, cr0, [r2], {-0}
    1a88:	004e0502 	subeq	r0, lr, r2, lsl #10
    1a8c:	6b030000 	blvs	c1a94 <startup-0x1ff3e56c>
    1a90:	02000003 	andeq	r0, r0, #3
    1a94:	00004e07 	andeq	r4, r0, r7, lsl #28
    1a98:	39030000 	stmdbcc	r3, {}	; <UNPREDICTABLE>
    1a9c:	02000007 	andeq	r0, r0, #7
    1aa0:	00004e08 	andeq	r4, r0, r8, lsl #28
    1aa4:	ff030400 			; <UNDEFINED> instruction: 0xff030400
    1aa8:	02000017 	andeq	r0, r0, #23
    1aac:	00005509 	andeq	r5, r0, r9, lsl #10
    1ab0:	04000800 	streq	r0, [r0], #-2048	; 0xfffff800
    1ab4:	03990704 	orrseq	r0, r9, #4, 14	; 0x100000
    1ab8:	04050000 	streq	r0, [r5], #-0
    1abc:	0000005b 	andeq	r0, r0, fp, asr r0
    1ac0:	f1080104 	cps	#4
    1ac4:	06000004 	streq	r0, [r0], -r4
    1ac8:	00001969 	andeq	r1, r0, r9, ror #18
    1acc:	00210a02 	eoreq	r0, r1, r2, lsl #20
    1ad0:	34070000 	strcc	r0, [r7], #-0
    1ad4:	0c000000 	stceq	0, cr0, [r0], {-0}
    1ad8:	009e0603 	addseq	r0, lr, r3, lsl #12
    1adc:	e7030000 	str	r0, [r3, -r0]
    1ae0:	03000005 	movweq	r0, #5
    1ae4:	00009e07 	andeq	r9, r0, r7, lsl #28
    1ae8:	3b030000 	blcc	c1af0 <startup-0x1ff3e510>
    1aec:	03000000 	movweq	r0, #0
    1af0:	00009e08 	andeq	r9, r0, r8, lsl #28
    1af4:	30030400 	andcc	r0, r3, r0, lsl #8
    1af8:	03000000 	movweq	r0, #0
    1afc:	00009e09 	andeq	r9, r0, r9, lsl #28
    1b00:	05000800 	streq	r0, [r0, #-2048]	; 0xfffff800
    1b04:	00006204 	andeq	r6, r0, r4, lsl #4
    1b08:	15140600 	ldrne	r0, [r4, #-1536]	; 0xfffffa00
    1b0c:	0a030000 	beq	c1b14 <startup-0x1ff3e4ec>
    1b10:	0000006d 	andeq	r0, r0, sp, rrx
    1b14:	0006fc07 	andeq	pc, r6, r7, lsl #24
    1b18:	06042400 	streq	r2, [r4], -r0, lsl #8
    1b1c:	00000128 	andeq	r0, r0, r8, lsr #2
    1b20:	00047f03 	andeq	r7, r4, r3, lsl #30
    1b24:	28070400 	stmdacs	r7, {sl}
    1b28:	00000001 	andeq	r0, r0, r1
    1b2c:	00070803 	andeq	r0, r7, r3, lsl #16
    1b30:	2e080400 	cfcpyscs	mvf0, mvf8
    1b34:	04000001 	streq	r0, [r0], #-1
    1b38:	00065803 	andeq	r5, r6, r3, lsl #16
    1b3c:	2e090400 	cfcpyscs	mvf0, mvf9
    1b40:	08000001 	stmdaeq	r0, {r0}
    1b44:	00068403 	andeq	r8, r6, r3, lsl #8
    1b48:	460c0400 	strmi	r0, [ip], -r0, lsl #8
    1b4c:	0c000001 	stceq	0, cr0, [r0], {1}
    1b50:	00035203 	andeq	r5, r3, r3, lsl #4
    1b54:	460d0400 	strmi	r0, [sp], -r0, lsl #8
    1b58:	10000001 	andne	r0, r0, r1
    1b5c:	00049103 	andeq	r9, r4, r3, lsl #2
    1b60:	2e100400 	cfmulscs	mvf0, mvf0, mvf0
    1b64:	14000001 	strne	r0, [r0], #-1
    1b68:	00007003 	andeq	r7, r0, r3
    1b6c:	2e110400 	cfmulscs	mvf0, mvf1, mvf0
    1b70:	18000001 	stmdane	r0, {r0}
    1b74:	0003fa03 	andeq	pc, r3, r3, lsl #20
    1b78:	2e120400 	cfmulscs	mvf0, mvf2, mvf0
    1b7c:	1c000001 	stcne	0, cr0, [r0], {1}
    1b80:	00040a03 	andeq	r0, r4, r3, lsl #20
    1b84:	2e130400 	cfmulscs	mvf0, mvf3, mvf0
    1b88:	20000001 	andcs	r0, r0, r1
    1b8c:	a4040500 	strge	r0, [r4], #-1280	; 0xfffffb00
    1b90:	08000000 	stmdaeq	r0, {}	; <UNPREDICTABLE>
    1b94:	6e690504 	cdpvs	5, 6, cr0, cr9, cr4, {0}
    1b98:	40090074 	andmi	r0, r9, r4, ror r0
    1b9c:	0a000001 	beq	1ba8 <startup-0x1fffe458>
    1ba0:	00000140 	andeq	r0, r0, r0, asr #2
    1ba4:	af040500 	svcge	0x00040500
    1ba8:	05000000 	streq	r0, [r0, #-0]
    1bac:	00013504 	andeq	r3, r1, r4, lsl #10
    1bb0:	06fd0600 	ldrbteq	r0, [sp], r0, lsl #12
    1bb4:	15040000 	strne	r0, [r4, #-0]
    1bb8:	000000af 	andeq	r0, r0, pc, lsr #1
    1bbc:	0001620b 	andeq	r6, r1, fp, lsl #4
    1bc0:	00016200 	andeq	r6, r1, r0, lsl #4
    1bc4:	05000c00 	streq	r0, [r0, #-3072]	; 0xfffff400
    1bc8:	00014c04 	andeq	r4, r1, r4, lsl #24
    1bcc:	05740d00 	ldrbeq	r0, [r4, #-3328]!	; 0xfffff300
    1bd0:	1c040000 	stcne	0, cr0, [r4], {-0}
    1bd4:	00000157 	andeq	r0, r0, r7, asr r1
    1bd8:	0004450d 	andeq	r4, r4, sp, lsl #10
    1bdc:	2e1d0400 	cfmulscs	mvf0, mvf13, mvf0
    1be0:	0b000001 	bleq	1bec <startup-0x1fffe414>
    1be4:	0000005b 	andeq	r0, r0, fp, asr r0
    1be8:	0000018e 	andeq	r0, r0, lr, lsl #3
    1bec:	00018e0e 	andeq	r8, r1, lr, lsl #28
    1bf0:	04003500 	streq	r3, [r0], #-1280	; 0xfffffb00
    1bf4:	04270704 	strteq	r0, [r7], #-1796	; 0xfffff8fc
    1bf8:	080f0000 	stmdaeq	pc, {}	; <UNPREDICTABLE>
    1bfc:	05000020 	streq	r0, [r0, #-32]	; 0xffffffe0
    1c00:	00017e03 	andeq	r7, r1, r3, lsl #28
    1c04:	04030500 	streq	r0, [r3], #-1280	; 0xfffffb00
    1c08:	0f200098 	svceq	0x00200098
    1c0c:	000022a6 	andeq	r2, r0, r6, lsr #5
    1c10:	017e0306 	cmneq	lr, r6, lsl #6
    1c14:	03050000 	movweq	r0, #20480	; 0x5000
    1c18:	2000983c 	andcs	r9, r0, ip, lsr r8
    1c1c:	0022c10f 	eoreq	ip, r2, pc, lsl #2
    1c20:	7e030700 	cdpvc	7, 0, cr0, cr3, cr0, {0}
    1c24:	05000001 	streq	r0, [r0, #-1]
    1c28:	00987403 	addseq	r7, r8, r3, lsl #8
    1c2c:	20770f20 	rsbscs	r0, r7, r0, lsr #30
    1c30:	03080000 	movweq	r0, #32768	; 0x8000
    1c34:	0000017e 	andeq	r0, r0, lr, ror r1
    1c38:	98ac0305 	stmials	ip!, {r0, r2, r8, r9}
    1c3c:	5c0f2000 	stcpl	0, cr2, [pc], {-0}
    1c40:	09000020 	stmdbeq	r0, {r5}
    1c44:	00017e03 	andeq	r7, r1, r3, lsl #28
    1c48:	e4030500 	str	r0, [r3], #-1280	; 0xfffffb00
    1c4c:	0f200098 	svceq	0x00200098
    1c50:	000022f9 	strdeq	r2, [r0], -r9
    1c54:	017e030a 	cmneq	lr, sl, lsl #6
    1c58:	03050000 	movweq	r0, #20480	; 0x5000
    1c5c:	2000991c 	andcs	r9, r0, ip, lsl r9
    1c60:	0020a90f 	eoreq	sl, r0, pc, lsl #18
    1c64:	7e030b00 	vmlavc.f64	d0, d3, d0
    1c68:	05000001 	streq	r0, [r0, #-1]
    1c6c:	00995403 	addseq	r5, r9, r3, lsl #8
    1c70:	24840f20 	strcs	r0, [r4], #3872	; 0xf20
    1c74:	030c0000 	movweq	r0, #49152	; 0xc000
    1c78:	0000017e 	andeq	r0, r0, lr, ror r1
    1c7c:	998c0305 	stmibls	ip, {r0, r2, r8, r9}
    1c80:	310f2000 	mrscc	r2, CPSR
    1c84:	0d000023 	stceq	0, cr0, [r0, #-140]	; 0xffffff74
    1c88:	00017e03 	andeq	r7, r1, r3, lsl #28
    1c8c:	c4030500 	strgt	r0, [r3], #-1280	; 0xfffffb00
    1c90:	10200099 	mlane	r0, r9, r0, r0
    1c94:	0000217e 	andeq	r2, r0, lr, ror r1
    1c98:	009e0e01 	addseq	r0, lr, r1, lsl #28
    1c9c:	03050000 	movweq	r0, #20480	; 0x5000
    1ca0:	200055b8 			; <UNDEFINED> instruction: 0x200055b8
    1ca4:	00236310 	eoreq	r6, r3, r0, lsl r3
    1ca8:	9e0f0100 	adflse	f0, f7, f0
    1cac:	05000000 	streq	r0, [r0, #-0]
    1cb0:	0054e403 	subseq	lr, r4, r3, lsl #8
    1cb4:	234d1020 	movtcs	r1, #53280	; 0xd020
    1cb8:	10010000 	andne	r0, r1, r0
    1cbc:	0000009e 	muleq	r0, lr, r0
    1cc0:	55e40305 	strbpl	r0, [r4, #773]!	; 0x305
    1cc4:	a3102000 	tstge	r0, #0
    1cc8:	01000024 	tsteq	r0, r4, lsr #32
    1ccc:	00009e11 	andeq	r9, r0, r1, lsl lr
    1cd0:	f4030500 	vst3.8	{d0,d2,d4}, [r3], r0
    1cd4:	10200055 	eorne	r0, r0, r5, asr r0
    1cd8:	00002216 	andeq	r2, r0, r6, lsl r2
    1cdc:	009e1201 	addseq	r1, lr, r1, lsl #4
    1ce0:	03050000 	movweq	r0, #20480	; 0x5000
    1ce4:	20005558 	andcs	r5, r0, r8, asr r5
    1ce8:	0021c810 	eoreq	ip, r1, r0, lsl r8
    1cec:	9e130100 	muflss	f0, f3, f0
    1cf0:	05000000 	streq	r0, [r0, #-0]
    1cf4:	0054e803 	subseq	lr, r4, r3, lsl #16
    1cf8:	246e1020 	strbtcs	r1, [lr], #-32	; 0xffffffe0
    1cfc:	14010000 	strne	r0, [r1], #-0
    1d00:	0000009e 	muleq	r0, lr, r0
    1d04:	55800305 	strpl	r0, [r0, #773]	; 0x305
    1d08:	26102000 	ldrcs	r2, [r0], -r0
    1d0c:	01000024 	tsteq	r0, r4, lsr #32
    1d10:	00009e15 	andeq	r9, r0, r5, lsl lr
    1d14:	bc030500 	cfstr32lt	mvfx0, [r3], {-0}
    1d18:	10200055 	eorne	r0, r0, r5, asr r0
    1d1c:	000023e3 	andeq	r2, r0, r3, ror #7
    1d20:	009e1601 	addseq	r1, lr, r1, lsl #12
    1d24:	03050000 	movweq	r0, #20480	; 0x5000
    1d28:	200055a8 	andcs	r5, r0, r8, lsr #11
    1d2c:	000e8f10 	andeq	r8, lr, r0, lsl pc
    1d30:	62180100 	andsvs	r0, r8, #0, 2
    1d34:	05000000 	streq	r0, [r0, #-0]
    1d38:	00553403 	subseq	r3, r5, r3, lsl #8
    1d3c:	0e451020 	cdpeq	0, 4, cr1, cr5, cr0, {1}
    1d40:	19010000 	stmdbne	r1, {}	; <UNPREDICTABLE>
    1d44:	00000062 	andeq	r0, r0, r2, rrx
    1d48:	55cc0305 	strbpl	r0, [ip, #773]	; 0x305
    1d4c:	9e102000 	cdpls	0, 1, cr2, cr0, cr0, {0}
    1d50:	0100000e 	tsteq	r0, lr
    1d54:	0000621a 	andeq	r6, r0, sl, lsl r2
    1d58:	5c030500 	cfstr32pl	mvfx0, [r3], {-0}
    1d5c:	10200055 	eorne	r0, r0, r5, asr r0
    1d60:	00000e74 	andeq	r0, r0, r4, ror lr
    1d64:	00621b01 	rsbeq	r1, r2, r1, lsl #22
    1d68:	03050000 	movweq	r0, #20480	; 0x5000
    1d6c:	20005528 	andcs	r5, r0, r8, lsr #10
    1d70:	000e6410 	andeq	r6, lr, r0, lsl r4
    1d74:	621c0100 	andsvs	r0, ip, #0, 2
    1d78:	05000000 	streq	r0, [r0, #-0]
    1d7c:	0055d803 	subseq	sp, r5, r3, lsl #16
    1d80:	0eac1020 	cdpeq	0, 10, cr1, cr12, cr0, {1}
    1d84:	1d010000 	stcne	0, cr0, [r1, #-0]
    1d88:	00000062 	andeq	r0, r0, r2, rrx
    1d8c:	55740305 	ldrbpl	r0, [r4, #-773]!	; 0xfffffcfb
    1d90:	bb102000 	bllt	409d98 <startup-0x1fbf6268>
    1d94:	0100000e 	tsteq	r0, lr
    1d98:	0000621e 	andeq	r6, r0, lr, lsl r2
    1d9c:	68030500 	stmdavs	r3, {r8, sl}
    1da0:	10200055 	eorne	r0, r0, r5, asr r0
    1da4:	00000e54 	andeq	r0, r0, r4, asr lr
    1da8:	00621f01 	rsbeq	r1, r2, r1, lsl #30
    1dac:	03050000 	movweq	r0, #20480	; 0x5000
    1db0:	20005540 	andcs	r5, r0, r0, asr #10
    1db4:	000ecb10 	andeq	ip, lr, r0, lsl fp
    1db8:	62200100 	eorvs	r0, r0, #0, 2
    1dbc:	05000000 	streq	r0, [r0, #-0]
    1dc0:	0055ac03 	subseq	sl, r5, r3, lsl #24
    1dc4:	240f1020 	strcs	r1, [pc], #-32	; 1dcc <startup-0x1fffe234>
    1dc8:	23010000 	movwcs	r0, #4096	; 0x1000
    1dcc:	0000014c 	andeq	r0, r0, ip, asr #2
    1dd0:	55840305 	strpl	r0, [r4, #773]	; 0x305
    1dd4:	93102000 	tstls	r0, #0
    1dd8:	01000020 	tsteq	r0, r0, lsr #32
    1ddc:	0000a424 	andeq	sl, r0, r4, lsr #8
    1de0:	c0030500 	andgt	r0, r3, r0, lsl #10
    1de4:	10200055 	eorne	r0, r0, r5, asr r0
    1de8:	0000225a 	andeq	r2, r0, sl, asr r2
    1dec:	00a42501 	adceq	r2, r4, r1, lsl #10
    1df0:	03050000 	movweq	r0, #20480	; 0x5000
    1df4:	2000551c 	andcs	r5, r0, ip, lsl r5
    1df8:	0023f910 	eoreq	pc, r3, r0, lsl r9	; <UNPREDICTABLE>
    1dfc:	a4260100 	strtge	r0, [r6], #-256	; 0xffffff00
    1e00:	05000000 	streq	r0, [r0, #-0]
    1e04:	0055e803 	subseq	lr, r5, r3, lsl #16
    1e08:	1fc11020 	svcne	0x00c11020
    1e0c:	27010000 	strcs	r0, [r1, -r0]
    1e10:	000000a4 	andeq	r0, r0, r4, lsr #1
    1e14:	554c0305 	strbpl	r0, [ip, #-773]	; 0xfffffcfb
    1e18:	a40b2000 	strge	r2, [fp], #-0
    1e1c:	c5000000 	strgt	r0, [r0, #-0]
    1e20:	0e000003 	cdpeq	0, 0, cr0, cr0, cr3, {0}
    1e24:	0000018e 	andeq	r0, r0, lr, lsl #3
    1e28:	3b100003 	blcc	401e3c <startup-0x1fbfe1c4>
    1e2c:	01000024 	tsteq	r0, r4, lsr #32
    1e30:	0003b528 	andeq	fp, r3, r8, lsr #10
    1e34:	ec030500 	cfstr32	mvfx0, [r3], {-0}
    1e38:	11200054 	qsubne	r0, r4, r0
    1e3c:	00000e84 	andeq	r0, r0, r4, lsl #29
    1e40:	24b44c01 	ldrtcs	r4, [r4], #3073	; 0xc01
    1e44:	00f82000 	rscseq	r2, r8, r0
    1e48:	9c010000 	stcls	0, cr0, [r1], {-0}
    1e4c:	0000040b 	andeq	r0, r0, fp, lsl #8
    1e50:	00240f12 	eoreq	r0, r4, r2, lsl pc
    1e54:	624c0100 	subvs	r0, ip, #0, 2
    1e58:	02000001 	andeq	r0, r0, #1
    1e5c:	360f6c91 			; <UNDEFINED> instruction: 0x360f6c91
    1e60:	01000009 	tsteq	r0, r9
    1e64:	00012e4d 	andeq	r2, r1, sp, asr #28
    1e68:	fc030500 	stc2	5, cr0, [r3], {-0}
    1e6c:	00200099 	mlaeq	r0, r9, r0, r0
    1e70:	0004c713 	andeq	ip, r4, r3, lsl r7
    1e74:	74290100 	strtvc	r0, [r9], #-256	; 0xffffff00
    1e78:	40200023 	eormi	r0, r0, r3, lsr #32
    1e7c:	01000001 	tsteq	r0, r1
    1e80:	0dd70f9c 	ldcleq	15, cr0, [r7, #624]	; 0x270
    1e84:	2b010000 	blcs	41e8c <startup-0x1ffbe174>
    1e88:	0000009e 	muleq	r0, lr, r0
    1e8c:	0f749102 	svceq	0x00749102
    1e90:	00000de1 	andeq	r0, r0, r1, ror #27
    1e94:	009e2e01 	addseq	r2, lr, r1, lsl #28
    1e98:	91020000 	mrsls	r0, (UNDEF: 2)
    1e9c:	0bd70f70 	bleq	ff5c5c64 <firstTime.4104+0xdf5b17f8>
    1ea0:	31010000 	mrscc	r0, (UNDEF: 1)
    1ea4:	0000009e 	muleq	r0, lr, r0
    1ea8:	0f6c9102 	svceq	0x006c9102
    1eac:	00000af8 	strdeq	r0, [r0], -r8
    1eb0:	009e3501 	addseq	r3, lr, r1, lsl #10
    1eb4:	91020000 	mrsls	r0, (UNDEF: 2)
    1eb8:	0e010f68 	cdpeq	15, 0, cr0, cr1, cr8, {3}
    1ebc:	38010000 	stmdacc	r1, {}	; <UNPREDICTABLE>
    1ec0:	0000009e 	muleq	r0, lr, r0
    1ec4:	0f649102 	svceq	0x00649102
    1ec8:	00000b95 	muleq	r0, r5, fp
    1ecc:	009e3b01 	addseq	r3, lr, r1, lsl #22
    1ed0:	91020000 	mrsls	r0, (UNDEF: 2)
    1ed4:	0dad0f60 	stceq	15, cr0, [sp, #384]!	; 0x180
    1ed8:	40010000 	andmi	r0, r1, r0
    1edc:	0000009e 	muleq	r0, lr, r0
    1ee0:	0f5c9102 	svceq	0x005c9102
    1ee4:	00000e0b 	andeq	r0, r0, fp, lsl #28
    1ee8:	009e4301 	addseq	r4, lr, r1, lsl #6
    1eec:	91020000 	mrsls	r0, (UNDEF: 2)
    1ef0:	0e150f58 	mrceq	15, 0, r0, cr5, cr8, {2}
    1ef4:	46010000 	strmi	r0, [r1], -r0
    1ef8:	0000009e 	muleq	r0, lr, r0
    1efc:	00549102 	subseq	r9, r4, r2, lsl #2
    1f00:	00054600 	andeq	r4, r5, r0, lsl #12
    1f04:	6c000400 	cfstrsvs	mvf0, [r0], {-0}
    1f08:	04000006 	streq	r0, [r0], #-6
    1f0c:	00009f01 	andeq	r9, r0, r1, lsl #30
    1f10:	0fef0c00 	svceq	0x00ef0c00
    1f14:	25ac0000 	strcs	r0, [ip, #0]!
    1f18:	03702000 	cmneq	r0, #0
    1f1c:	0a4a0000 	beq	1281f24 <startup-0x1ed7e0dc>
    1f20:	0c020000 	stceq	0, cr0, [r2], {-0}
    1f24:	004e0502 	subeq	r0, lr, r2, lsl #10
    1f28:	6b030000 	blvs	c1f30 <startup-0x1ff3e0d0>
    1f2c:	02000003 	andeq	r0, r0, #3
    1f30:	00004e07 	andeq	r4, r0, r7, lsl #28
    1f34:	39030000 	stmdbcc	r3, {}	; <UNPREDICTABLE>
    1f38:	02000007 	andeq	r0, r0, #7
    1f3c:	00004e08 	andeq	r4, r0, r8, lsl #28
    1f40:	ff030400 			; <UNDEFINED> instruction: 0xff030400
    1f44:	02000017 	andeq	r0, r0, #23
    1f48:	00005509 	andeq	r5, r0, r9, lsl #10
    1f4c:	04000800 	streq	r0, [r0], #-2048	; 0xfffff800
    1f50:	03990704 	orrseq	r0, r9, #4, 14	; 0x100000
    1f54:	04050000 	streq	r0, [r5], #-0
    1f58:	0000005b 	andeq	r0, r0, fp, asr r0
    1f5c:	f1080104 	cps	#4
    1f60:	06000004 	streq	r0, [r0], -r4
    1f64:	00001969 	andeq	r1, r0, r9, ror #18
    1f68:	00210a02 	eoreq	r0, r1, r2, lsl #20
    1f6c:	34070000 	strcc	r0, [r7], #-0
    1f70:	0c000000 	stceq	0, cr0, [r0], {-0}
    1f74:	009e0603 	addseq	r0, lr, r3, lsl #12
    1f78:	e7030000 	str	r0, [r3, -r0]
    1f7c:	03000005 	movweq	r0, #5
    1f80:	00009e07 	andeq	r9, r0, r7, lsl #28
    1f84:	3b030000 	blcc	c1f8c <startup-0x1ff3e074>
    1f88:	03000000 	movweq	r0, #0
    1f8c:	00009e08 	andeq	r9, r0, r8, lsl #28
    1f90:	30030400 	andcc	r0, r3, r0, lsl #8
    1f94:	03000000 	movweq	r0, #0
    1f98:	00009e09 	andeq	r9, r0, r9, lsl #28
    1f9c:	05000800 	streq	r0, [r0, #-2048]	; 0xfffff800
    1fa0:	00006204 	andeq	r6, r0, r4, lsl #4
    1fa4:	15140600 	ldrne	r0, [r4, #-1536]	; 0xfffffa00
    1fa8:	0a030000 	beq	c1fb0 <startup-0x1ff3e050>
    1fac:	0000006d 	andeq	r0, r0, sp, rrx
    1fb0:	0006fc07 	andeq	pc, r6, r7, lsl #24
    1fb4:	06042400 	streq	r2, [r4], -r0, lsl #8
    1fb8:	00000128 	andeq	r0, r0, r8, lsr #2
    1fbc:	00047f03 	andeq	r7, r4, r3, lsl #30
    1fc0:	28070400 	stmdacs	r7, {sl}
    1fc4:	00000001 	andeq	r0, r0, r1
    1fc8:	00070803 	andeq	r0, r7, r3, lsl #16
    1fcc:	2e080400 	cfcpyscs	mvf0, mvf8
    1fd0:	04000001 	streq	r0, [r0], #-1
    1fd4:	00065803 	andeq	r5, r6, r3, lsl #16
    1fd8:	2e090400 	cfcpyscs	mvf0, mvf9
    1fdc:	08000001 	stmdaeq	r0, {r0}
    1fe0:	00068403 	andeq	r8, r6, r3, lsl #8
    1fe4:	460c0400 	strmi	r0, [ip], -r0, lsl #8
    1fe8:	0c000001 	stceq	0, cr0, [r0], {1}
    1fec:	00035203 	andeq	r5, r3, r3, lsl #4
    1ff0:	460d0400 	strmi	r0, [sp], -r0, lsl #8
    1ff4:	10000001 	andne	r0, r0, r1
    1ff8:	00049103 	andeq	r9, r4, r3, lsl #2
    1ffc:	2e100400 	cfmulscs	mvf0, mvf0, mvf0
    2000:	14000001 	strne	r0, [r0], #-1
    2004:	00007003 	andeq	r7, r0, r3
    2008:	2e110400 	cfmulscs	mvf0, mvf1, mvf0
    200c:	18000001 	stmdane	r0, {r0}
    2010:	0003fa03 	andeq	pc, r3, r3, lsl #20
    2014:	2e120400 	cfmulscs	mvf0, mvf2, mvf0
    2018:	1c000001 	stcne	0, cr0, [r0], {1}
    201c:	00040a03 	andeq	r0, r4, r3, lsl #20
    2020:	2e130400 	cfmulscs	mvf0, mvf3, mvf0
    2024:	20000001 	andcs	r0, r0, r1
    2028:	a4040500 	strge	r0, [r4], #-1280	; 0xfffffb00
    202c:	08000000 	stmdaeq	r0, {}	; <UNPREDICTABLE>
    2030:	6e690504 	cdpvs	5, 6, cr0, cr9, cr4, {0}
    2034:	40090074 	andmi	r0, r9, r4, ror r0
    2038:	0a000001 	beq	2044 <startup-0x1fffdfbc>
    203c:	00000140 	andeq	r0, r0, r0, asr #2
    2040:	af040500 	svcge	0x00040500
    2044:	05000000 	streq	r0, [r0, #-0]
    2048:	00013504 	andeq	r3, r1, r4, lsl #10
    204c:	06fd0600 	ldrbteq	r0, [sp], r0, lsl #12
    2050:	15040000 	strne	r0, [r4, #-0]
    2054:	000000af 	andeq	r0, r0, pc, lsr #1
    2058:	0001620b 	andeq	r6, r1, fp, lsl #4
    205c:	00016200 	andeq	r6, r1, r0, lsl #4
    2060:	05000c00 	streq	r0, [r0, #-3072]	; 0xfffff400
    2064:	00014c04 	andeq	r4, r1, r4, lsl #24
    2068:	05740d00 	ldrbeq	r0, [r4, #-3328]!	; 0xfffff300
    206c:	1c040000 	stcne	0, cr0, [r4], {-0}
    2070:	00000157 	andeq	r0, r0, r7, asr r1
    2074:	0004450d 	andeq	r4, r4, sp, lsl #10
    2078:	2e1d0400 	cfmulscs	mvf0, mvf13, mvf0
    207c:	04000001 	streq	r0, [r0], #-1
    2080:	03930702 	orrseq	r0, r3, #524288	; 0x80000
    2084:	5b0b0000 	blpl	2c208c <startup-0x1fd3df74>
    2088:	95000000 	strls	r0, [r0, #-0]
    208c:	0e000001 	cdpeq	0, 0, cr0, cr0, cr1, {0}
    2090:	00000195 	muleq	r0, r5, r1
    2094:	04040035 	streq	r0, [r4], #-53	; 0xffffffcb
    2098:	00042707 	andeq	r2, r4, r7, lsl #14
    209c:	20080f00 	andcs	r0, r8, r0, lsl #30
    20a0:	03050000 	movweq	r0, #20480	; 0x5000
    20a4:	00000185 	andeq	r0, r0, r5, lsl #3
    20a8:	9a000305 	bls	2cc4 <startup-0x1fffd33c>
    20ac:	a60f2000 	strge	r2, [pc], -r0
    20b0:	06000022 	streq	r0, [r0], -r2, lsr #32
    20b4:	00018503 	andeq	r8, r1, r3, lsl #10
    20b8:	38030500 	stmdacc	r3, {r8, sl}
    20bc:	0f20009a 	svceq	0x0020009a
    20c0:	000022c1 	andeq	r2, r0, r1, asr #5
    20c4:	01850307 	orreq	r0, r5, r7, lsl #6
    20c8:	03050000 	movweq	r0, #20480	; 0x5000
    20cc:	20009a70 	andcs	r9, r0, r0, ror sl
    20d0:	0020770f 	eoreq	r7, r0, pc, lsl #14
    20d4:	85030800 	strhi	r0, [r3, #-2048]	; 0xfffff800
    20d8:	05000001 	streq	r0, [r0, #-1]
    20dc:	009aa803 	addseq	sl, sl, r3, lsl #16
    20e0:	205c0f20 	subscs	r0, ip, r0, lsr #30
    20e4:	03090000 	movweq	r0, #36864	; 0x9000
    20e8:	00000185 	andeq	r0, r0, r5, lsl #3
    20ec:	9ae00305 	bls	ff802d08 <firstTime.4104+0xdf7ee89c>
    20f0:	f90f2000 			; <UNDEFINED> instruction: 0xf90f2000
    20f4:	0a000022 	beq	2184 <startup-0x1fffde7c>
    20f8:	00018503 	andeq	r8, r1, r3, lsl #10
    20fc:	18030500 	stmdane	r3, {r8, sl}
    2100:	0f20009b 	svceq	0x0020009b
    2104:	000020a9 	andeq	r2, r0, r9, lsr #1
    2108:	0185030b 	orreq	r0, r5, fp, lsl #6
    210c:	03050000 	movweq	r0, #20480	; 0x5000
    2110:	20009b50 	andcs	r9, r0, r0, asr fp
    2114:	0024840f 	eoreq	r8, r4, pc, lsl #8
    2118:	85030c00 	strhi	r0, [r3, #-3072]	; 0xfffff400
    211c:	05000001 	streq	r0, [r0, #-1]
    2120:	009b8803 	addseq	r8, fp, r3, lsl #16
    2124:	23310f20 	teqcs	r1, #32, 30	; 0x80
    2128:	030d0000 	movweq	r0, #53248	; 0xd000
    212c:	00000185 	andeq	r0, r0, r5, lsl #3
    2130:	9bc00305 	blls	ff002d4c <firstTime.4104+0xdefee8e0>
    2134:	8e102000 	cdphi	0, 1, cr2, cr0, cr0, {0}
    2138:	0100000f 	tsteq	r0, pc
    213c:	00009e12 	andeq	r9, r0, r2, lsl lr
    2140:	3c030500 	cfstr32cc	mvfx0, [r3], {-0}
    2144:	10200056 	eorne	r0, r0, r6, asr r0
    2148:	00000f59 	andeq	r0, r0, r9, asr pc
    214c:	009e1301 	addseq	r1, lr, r1, lsl #6
    2150:	03050000 	movweq	r0, #20480	; 0x5000
    2154:	200056d4 	ldrdcs	r5, [r0], -r4
    2158:	00101b10 	andseq	r1, r0, r0, lsl fp
    215c:	9e140100 	muflss	f0, f4, f0
    2160:	05000000 	streq	r0, [r0, #-0]
    2164:	0056ac03 	subseq	sl, r6, r3, lsl #24
    2168:	0fdb1020 	svceq	0x00db1020
    216c:	15010000 	strne	r0, [r1, #-0]
    2170:	0000009e 	muleq	r0, lr, r0
    2174:	56b80305 	ldrtpl	r0, [r8], r5, lsl #6
    2178:	50102000 	andspl	r2, r0, r0
    217c:	0100000f 	tsteq	r0, pc
    2180:	00009e16 	andeq	r9, r0, r6, lsl lr
    2184:	28030500 	stmdacs	r3, {r8, sl}
    2188:	10200056 	eorne	r0, r0, r6, asr r0
    218c:	00000f2a 	andeq	r0, r0, sl, lsr #30
    2190:	009e1701 	addseq	r1, lr, r1, lsl #14
    2194:	03050000 	movweq	r0, #20480	; 0x5000
    2198:	200056b0 			; <UNDEFINED> instruction: 0x200056b0
    219c:	000f4210 	andeq	r4, pc, r0, lsl r2	; <UNPREDICTABLE>
    21a0:	9e180100 	muflse	f0, f0, f0
    21a4:	05000000 	streq	r0, [r0, #-0]
    21a8:	00563803 	subseq	r3, r6, r3, lsl #16
    21ac:	0fac1020 	svceq	0x00ac1020
    21b0:	19010000 	stmdbne	r1, {}	; <UNPREDICTABLE>
    21b4:	0000009e 	muleq	r0, lr, r0
    21b8:	56e40305 	strbtpl	r0, [r4], r5, lsl #6
    21bc:	c3102000 	tstgt	r0, #0
    21c0:	0100000f 	tsteq	r0, pc
    21c4:	00009e1a 	andeq	r9, r0, sl, lsl lr
    21c8:	b4030500 	strlt	r0, [r3], #-1280	; 0xfffffb00
    21cc:	10200056 	eorne	r0, r0, r6, asr r0
    21d0:	0000102c 	andeq	r1, r0, ip, lsr #32
    21d4:	00621c01 	rsbeq	r1, r2, r1, lsl #24
    21d8:	03050000 	movweq	r0, #20480	; 0x5000
    21dc:	200056c8 	andcs	r5, r0, r8, asr #13
    21e0:	000f6210 	andeq	r6, pc, r0, lsl r2	; <UNPREDICTABLE>
    21e4:	621d0100 	andsvs	r0, sp, #0, 2
    21e8:	05000000 	streq	r0, [r0, #-0]
    21ec:	00564003 	subseq	r4, r6, r3
    21f0:	0f821020 	svceq	0x00821020
    21f4:	1e010000 	cdpne	0, 0, cr0, cr1, cr0, {0}
    21f8:	00000062 	andeq	r0, r0, r2, rrx
    21fc:	57000305 	strpl	r0, [r0, -r5, lsl #6]
    2200:	d7102000 	ldrle	r2, [r0, -r0]
    2204:	0100000f 	tsteq	r0, pc
    2208:	0000621f 	andeq	r6, r0, pc, lsl r2
    220c:	88030500 	stmdahi	r3, {r8, sl}
    2210:	10200056 	eorne	r0, r0, r6, asr r0
    2214:	00000f26 	andeq	r0, r0, r6, lsr #30
    2218:	00622001 	rsbeq	r2, r2, r1
    221c:	03050000 	movweq	r0, #20480	; 0x5000
    2220:	200056f4 	strdcs	r5, [r0], -r4
    2224:	000f4c10 	andeq	r4, pc, r0, lsl ip	; <UNPREDICTABLE>
    2228:	62210100 	eorvs	r0, r1, #0, 2
    222c:	05000000 	streq	r0, [r0, #-0]
    2230:	00562c03 	subseq	r2, r6, r3, lsl #24
    2234:	0f3e1020 	svceq	0x003e1020
    2238:	22010000 	andcs	r0, r1, #0
    223c:	00000062 	andeq	r0, r0, r2, rrx
    2240:	56d80305 	ldrbpl	r0, [r8], r5, lsl #6
    2244:	bf102000 	svclt	0x00102000
    2248:	0100000f 	tsteq	r0, pc
    224c:	00006223 	andeq	r6, r0, r3, lsr #4
    2250:	4c030500 	cfstr32mi	mvfx0, [r3], {-0}
    2254:	10200056 	eorne	r0, r0, r6, asr r0
    2258:	00000fa8 	andeq	r0, r0, r8, lsr #31
    225c:	00622401 	rsbeq	r2, r2, r1, lsl #8
    2260:	03050000 	movweq	r0, #20480	; 0x5000
    2264:	200056bc 			; <UNDEFINED> instruction: 0x200056bc
    2268:	00102510 	andseq	r2, r0, r0, lsl r5
    226c:	4c270100 	stfmis	f0, [r7], #-0
    2270:	05000001 	streq	r0, [r0, #-1]
    2274:	0055f803 	subseq	pc, r5, r3, lsl #16
    2278:	0f1c1020 	svceq	0x001c1020
    227c:	28010000 	stmdacs	r1, {}	; <UNPREDICTABLE>
    2280:	000000a4 	andeq	r0, r0, r4, lsr #1
    2284:	56a00305 	strtpl	r0, [r0], r5, lsl #6
    2288:	e5102000 	ldr	r2, [r0, #-0]
    228c:	0100000f 	tsteq	r0, pc
    2290:	0000a429 	andeq	sl, r0, r9, lsr #8
    2294:	1c030500 	cfstr32ne	mvfx0, [r3], {-0}
    2298:	10200056 	eorne	r0, r0, r6, asr r0
    229c:	00000fb5 			; <UNDEFINED> instruction: 0x00000fb5
    22a0:	00a42a01 	adceq	r2, r4, r1, lsl #20
    22a4:	03050000 	movweq	r0, #20480	; 0x5000
    22a8:	20005694 	mulcs	r0, r4, r6
    22ac:	000f1210 	andeq	r1, pc, r0, lsl r2	; <UNPREDICTABLE>
    22b0:	a42b0100 	strtge	r0, [fp], #-256	; 0xffffff00
    22b4:	05000000 	streq	r0, [r0, #-0]
    22b8:	0056e803 	subseq	lr, r6, r3, lsl #16
    22bc:	00a40b20 	adceq	r0, r4, r0, lsr #22
    22c0:	03cc0000 	biceq	r0, ip, #0
    22c4:	950e0000 	strls	r0, [lr, #-0]
    22c8:	03000001 	movweq	r0, #1
    22cc:	0f6f1000 	svceq	0x006f1000
    22d0:	2c010000 	stccs	0, cr0, [r1], {-0}
    22d4:	000003bc 			; <UNDEFINED> instruction: 0x000003bc
    22d8:	56580305 	ldrbpl	r0, [r8], -r5, lsl #6
    22dc:	390f2000 	stmdbcc	pc, {sp}	; <UNPREDICTABLE>
    22e0:	01000010 	tsteq	r0, r0, lsl r0
    22e4:	00012e6b 	andeq	r2, r1, fp, ror #28
    22e8:	80030500 	andhi	r0, r3, r0, lsl #10
    22ec:	0f20004f 	svceq	0x0020004f
    22f0:	00000f98 	muleq	r0, r8, pc	; <UNPREDICTABLE>
    22f4:	012e6c01 			; <UNDEFINED> instruction: 0x012e6c01
    22f8:	03050000 	movweq	r0, #20480	; 0x5000
    22fc:	20004f84 	andcs	r4, r0, r4, lsl #31
    2300:	000fcd11 	andeq	ip, pc, r1, lsl sp	; <UNPREDICTABLE>
    2304:	0c740100 	ldfeqe	f0, [r4], #-0
    2308:	10200028 	eorne	r0, r0, r8, lsr #32
    230c:	01000001 	tsteq	r0, r1
    2310:	0004569c 	muleq	r4, ip, r6
    2314:	07af1200 	streq	r1, [pc, r0, lsl #4]!
    2318:	74010000 	strvc	r0, [r1], #-0
    231c:	00000162 	andeq	r0, r0, r2, ror #2
    2320:	0f749102 	svceq	0x00749102
    2324:	00000414 	andeq	r0, r0, r4, lsl r4
    2328:	012e7601 			; <UNDEFINED> instruction: 0x012e7601
    232c:	03050000 	movweq	r0, #20480	; 0x5000
    2330:	20004f88 	andcs	r4, r0, r8, lsl #31
    2334:	000f080f 	andeq	r0, pc, pc, lsl #16
    2338:	2e770100 	rpwcss	f0, f7, f0
    233c:	05000001 	streq	r0, [r0, #-1]
    2340:	009bfc03 	addseq	pc, fp, r3, lsl #24
    2344:	0f340f20 	svceq	0x00340f20
    2348:	78010000 	stmdavc	r1, {}	; <UNPREDICTABLE>
    234c:	0000012e 	andeq	r0, r0, lr, lsr #2
    2350:	4f8c0305 	svcmi	0x008c0305
    2354:	13002000 	movwne	r2, #0
    2358:	00001049 	andeq	r1, r0, r9, asr #32
    235c:	27e46e01 	strbcs	r6, [r4, r1, lsl #28]!
    2360:	00282000 	eoreq	r2, r8, r0
    2364:	9c010000 	stcls	0, cr0, [r1], {-0}
    2368:	00000484 	andeq	r0, r0, r4, lsl #9
    236c:	01007814 	tsteq	r0, r4, lsl r8
    2370:	00012e6e 	andeq	r2, r1, lr, ror #28
    2374:	74910200 	ldrvc	r0, [r1], #512	; 0x200
    2378:	01007914 	tsteq	r0, r4, lsl r9
    237c:	00012e6e 	andeq	r2, r1, lr, ror #28
    2380:	70910200 	addsvc	r0, r1, r0, lsl #4
    2384:	0f791100 	svceq	0x00791100
    2388:	50010000 	andpl	r0, r1, r0
    238c:	200026ec 	andcs	r2, r0, ip, ror #13
    2390:	000000f8 	strdeq	r0, [r0], -r8
    2394:	04b99c01 	ldrteq	r9, [r9], #3073	; 0xc01
    2398:	25120000 	ldrcs	r0, [r2, #-0]
    239c:	01000010 	tsteq	r0, r0, lsl r0
    23a0:	00016250 	andeq	r6, r1, r0, asr r2
    23a4:	6c910200 	lfmvs	f0, 4, [r1], {0}
    23a8:	0009360f 	andeq	r3, r9, pc, lsl #12
    23ac:	2e510100 	rdfcss	f0, f1, f0
    23b0:	05000001 	streq	r0, [r0, #-1]
    23b4:	009bf803 	addseq	pc, fp, r3, lsl #16
    23b8:	c7150020 	ldrgt	r0, [r5, -r0, lsr #32]
    23bc:	01000004 	tsteq	r0, r4
    23c0:	0025ac2d 	eoreq	sl, r5, sp, lsr #24
    23c4:	00014020 	andeq	r4, r1, r0, lsr #32
    23c8:	0f9c0100 	svceq	0x009c0100
    23cc:	00000dd7 	ldrdeq	r0, [r0], -r7
    23d0:	009e2f01 	addseq	r2, lr, r1, lsl #30
    23d4:	91020000 	mrsls	r0, (UNDEF: 2)
    23d8:	0de10f74 	stcleq	15, cr0, [r1, #464]!	; 0x1d0
    23dc:	32010000 	andcc	r0, r1, #0
    23e0:	0000009e 	muleq	r0, lr, r0
    23e4:	0f709102 	svceq	0x00709102
    23e8:	00000bd7 	ldrdeq	r0, [r0], -r7
    23ec:	009e3501 	addseq	r3, lr, r1, lsl #10
    23f0:	91020000 	mrsls	r0, (UNDEF: 2)
    23f4:	0af80f6c 	beq	ffe061ac <firstTime.4104+0xdfdf1d40>
    23f8:	39010000 	stmdbcc	r1, {}	; <UNPREDICTABLE>
    23fc:	0000009e 	muleq	r0, lr, r0
    2400:	0f689102 	svceq	0x00689102
    2404:	00000e01 	andeq	r0, r0, r1, lsl #28
    2408:	009e3c01 	addseq	r3, lr, r1, lsl #24
    240c:	91020000 	mrsls	r0, (UNDEF: 2)
    2410:	0b950f64 	bleq	fe5461a8 <firstTime.4104+0xde531d3c>
    2414:	3f010000 	svccc	0x00010000
    2418:	0000009e 	muleq	r0, lr, r0
    241c:	0f609102 	svceq	0x00609102
    2420:	00000dad 	andeq	r0, r0, sp, lsr #27
    2424:	009e4401 	addseq	r4, lr, r1, lsl #8
    2428:	91020000 	mrsls	r0, (UNDEF: 2)
    242c:	0e0b0f5c 	mcreq	15, 0, r0, cr11, cr12, {2}
    2430:	47010000 	strmi	r0, [r1, -r0]
    2434:	0000009e 	muleq	r0, lr, r0
    2438:	0f589102 	svceq	0x00589102
    243c:	00000e15 	andeq	r0, r0, r5, lsl lr
    2440:	009e4a01 	addseq	r4, lr, r1, lsl #20
    2444:	91020000 	mrsls	r0, (UNDEF: 2)
    2448:	5b000054 	blpl	25a0 <startup-0x1fffda60>
    244c:	04000005 	streq	r0, [r0], #-5
    2450:	00079500 	andeq	r9, r7, r0, lsl #10
    2454:	9f010400 	svcls	0x00010400
    2458:	0c000000 	stceq	0, cr0, [r0], {-0}
    245c:	00001293 	muleq	r0, r3, r2
    2460:	2000291c 	andcs	r2, r0, ip, lsl r9
    2464:	000002ac 	andeq	r0, r0, ip, lsr #5
    2468:	00000bd1 	ldrdeq	r0, [r0], -r1
    246c:	05020c02 	streq	r0, [r2, #-3074]	; 0xfffff3fe
    2470:	0000004e 	andeq	r0, r0, lr, asr #32
    2474:	00036b03 	andeq	r6, r3, r3, lsl #22
    2478:	4e070200 	cdpmi	2, 0, cr0, cr7, cr0, {0}
    247c:	00000000 	andeq	r0, r0, r0
    2480:	00073903 	andeq	r3, r7, r3, lsl #18
    2484:	4e080200 	cdpmi	2, 0, cr0, cr8, cr0, {0}
    2488:	04000000 	streq	r0, [r0], #-0
    248c:	0017ff03 	andseq	pc, r7, r3, lsl #30
    2490:	55090200 	strpl	r0, [r9, #-512]	; 0xfffffe00
    2494:	08000000 	stmdaeq	r0, {}	; <UNPREDICTABLE>
    2498:	07040400 	streq	r0, [r4, -r0, lsl #8]
    249c:	00000399 	muleq	r0, r9, r3
    24a0:	005b0405 	subseq	r0, fp, r5, lsl #8
    24a4:	01040000 	mrseq	r0, (UNDEF: 4)
    24a8:	0004f108 	andeq	pc, r4, r8, lsl #2
    24ac:	19690600 	stmdbne	r9!, {r9, sl}^
    24b0:	0a020000 	beq	824b8 <startup-0x1ff7db48>
    24b4:	00000021 	andeq	r0, r0, r1, lsr #32
    24b8:	00003407 	andeq	r3, r0, r7, lsl #8
    24bc:	06030c00 	streq	r0, [r3], -r0, lsl #24
    24c0:	0000009e 	muleq	r0, lr, r0
    24c4:	0005e703 	andeq	lr, r5, r3, lsl #14
    24c8:	9e070300 	cdpls	3, 0, cr0, cr7, cr0, {0}
    24cc:	00000000 	andeq	r0, r0, r0
    24d0:	00003b03 	andeq	r3, r0, r3, lsl #22
    24d4:	9e080300 	cdpls	3, 0, cr0, cr8, cr0, {0}
    24d8:	04000000 	streq	r0, [r0], #-0
    24dc:	00003003 	andeq	r3, r0, r3
    24e0:	9e090300 	cdpls	3, 0, cr0, cr9, cr0, {0}
    24e4:	08000000 	stmdaeq	r0, {}	; <UNPREDICTABLE>
    24e8:	62040500 	andvs	r0, r4, #0, 10
    24ec:	06000000 	streq	r0, [r0], -r0
    24f0:	00001514 	andeq	r1, r0, r4, lsl r5
    24f4:	006d0a03 	rsbeq	r0, sp, r3, lsl #20
    24f8:	fc070000 	stc2	0, cr0, [r7], {-0}
    24fc:	24000006 	strcs	r0, [r0], #-6
    2500:	01280604 			; <UNDEFINED> instruction: 0x01280604
    2504:	7f030000 	svcvc	0x00030000
    2508:	04000004 	streq	r0, [r0], #-4
    250c:	00012807 	andeq	r2, r1, r7, lsl #16
    2510:	08030000 	stmdaeq	r3, {}	; <UNPREDICTABLE>
    2514:	04000007 	streq	r0, [r0], #-7
    2518:	00012e08 	andeq	r2, r1, r8, lsl #28
    251c:	58030400 	stmdapl	r3, {sl}
    2520:	04000006 	streq	r0, [r0], #-6
    2524:	00012e09 	andeq	r2, r1, r9, lsl #28
    2528:	84030800 	strhi	r0, [r3], #-2048	; 0xfffff800
    252c:	04000006 	streq	r0, [r0], #-6
    2530:	0001460c 	andeq	r4, r1, ip, lsl #12
    2534:	52030c00 	andpl	r0, r3, #0, 24
    2538:	04000003 	streq	r0, [r0], #-3
    253c:	0001460d 	andeq	r4, r1, sp, lsl #12
    2540:	91031000 	mrsls	r1, (UNDEF: 3)
    2544:	04000004 	streq	r0, [r0], #-4
    2548:	00012e10 	andeq	r2, r1, r0, lsl lr
    254c:	70031400 	andvc	r1, r3, r0, lsl #8
    2550:	04000000 	streq	r0, [r0], #-0
    2554:	00012e11 	andeq	r2, r1, r1, lsl lr
    2558:	fa031800 	blx	c8560 <startup-0x1ff37aa0>
    255c:	04000003 	streq	r0, [r0], #-3
    2560:	00012e12 	andeq	r2, r1, r2, lsl lr
    2564:	0a031c00 	beq	c956c <startup-0x1ff36a94>
    2568:	04000004 	streq	r0, [r0], #-4
    256c:	00012e13 	andeq	r2, r1, r3, lsl lr
    2570:	05002000 	streq	r2, [r0, #-0]
    2574:	0000a404 	andeq	sl, r0, r4, lsl #8
    2578:	05040800 	streq	r0, [r4, #-2048]	; 0xfffff800
    257c:	00746e69 	rsbseq	r6, r4, r9, ror #28
    2580:	00014009 	andeq	r4, r1, r9
    2584:	01400a00 	cmpeq	r0, r0, lsl #20
    2588:	05000000 	streq	r0, [r0, #-0]
    258c:	0000af04 	andeq	sl, r0, r4, lsl #30
    2590:	35040500 	strcc	r0, [r4, #-1280]	; 0xfffffb00
    2594:	06000001 	streq	r0, [r0], -r1
    2598:	000006fd 	strdeq	r0, [r0], -sp
    259c:	00af1504 	adceq	r1, pc, r4, lsl #10
    25a0:	620b0000 	andvs	r0, fp, #0
    25a4:	62000001 	andvs	r0, r0, #1
    25a8:	0c000001 	stceq	0, cr0, [r0], {1}
    25ac:	4c040500 	cfstr32mi	mvfx0, [r4], {-0}
    25b0:	0d000001 	stceq	0, cr0, [r0, #-4]
    25b4:	00000574 	andeq	r0, r0, r4, ror r5
    25b8:	01571c04 	cmpeq	r7, r4, lsl #24
    25bc:	450d0000 	strmi	r0, [sp, #-0]
    25c0:	04000004 	streq	r0, [r0], #-4
    25c4:	00012e1d 	andeq	r2, r1, sp, lsl lr
    25c8:	005b0b00 	subseq	r0, fp, r0, lsl #22
    25cc:	018e0000 	orreq	r0, lr, r0
    25d0:	8e0e0000 	cdphi	0, 0, cr0, cr14, cr0, {0}
    25d4:	74000001 	strvc	r0, [r0], #-1
    25d8:	07040400 	streq	r0, [r4, -r0, lsl #8]
    25dc:	00000427 	andeq	r0, r0, r7, lsr #8
    25e0:	0012220f 	andseq	r2, r2, pc, lsl #4
    25e4:	7e030500 	cfsh32vc	mvfx0, mvfx3, #0
    25e8:	05000001 	streq	r0, [r0, #-1]
    25ec:	009c0003 	addseq	r0, ip, r3
    25f0:	105b0f20 	subsne	r0, fp, r0, lsr #30
    25f4:	03060000 	movweq	r0, #24576	; 0x6000
    25f8:	0000017e 	andeq	r0, r0, lr, ror r1
    25fc:	9c780305 	ldclls	3, cr0, [r8], #-20	; 0xffffffec
    2600:	180f2000 	stmdane	pc, {sp}	; <UNPREDICTABLE>
    2604:	07000011 	smladeq	r0, r1, r0, r0
    2608:	00017e03 	andeq	r7, r1, r3, lsl #28
    260c:	f0030500 			; <UNDEFINED> instruction: 0xf0030500
    2610:	0f20009c 	svceq	0x0020009c
    2614:	000011e4 	andeq	r1, r0, r4, ror #3
    2618:	017e0308 	cmneq	lr, r8, lsl #6
    261c:	03050000 	movweq	r0, #20480	; 0x5000
    2620:	20009d68 	andcs	r9, r0, r8, ror #26
    2624:	0010780f 	andseq	r7, r0, pc, lsl #16
    2628:	7e030900 	vmlavc.f16	s0, s6, s0	; <UNPREDICTABLE>
    262c:	05000001 	streq	r0, [r0, #-1]
    2630:	009de003 	addseq	lr, sp, r3
    2634:	10980f20 	addsne	r0, r8, r0, lsr #30
    2638:	030a0000 	movweq	r0, #40960	; 0xa000
    263c:	0000017e 	andeq	r0, r0, lr, ror r1
    2640:	9e580305 	cdpls	3, 5, cr0, cr8, cr5, {0}
    2644:	890f2000 	stmdbhi	pc, {sp}	; <UNPREDICTABLE>
    2648:	0b000011 	bleq	2694 <startup-0x1fffd96c>
    264c:	00017e03 	andeq	r7, r1, r3, lsl #28
    2650:	d0030500 	andle	r0, r3, r0, lsl #10
    2654:	0f20009e 	svceq	0x0020009e
    2658:	000011ad 	andeq	r1, r0, sp, lsr #3
    265c:	017e030c 	cmneq	lr, ip, lsl #6
    2660:	03050000 	movweq	r0, #20480	; 0x5000
    2664:	20009f48 	andcs	r9, r0, r8, asr #30
    2668:	0010e20f 	andseq	lr, r0, pc, lsl #4
    266c:	7e030d00 	cdpvc	13, 0, cr0, cr3, cr0, {0}
    2670:	05000001 	streq	r0, [r0, #-1]
    2674:	009fc003 	addseq	ip, pc, r3
    2678:	12050f20 	andne	r0, r5, #32, 30	; 0x80
    267c:	030e0000 	movweq	r0, #57344	; 0xe000
    2680:	0000017e 	andeq	r0, r0, lr, ror r1
    2684:	a0380305 	eorsge	r0, r8, r5, lsl #6
    2688:	400f2000 	andmi	r2, pc, r0
    268c:	0f000012 	svceq	0x00000012
    2690:	00017e03 	andeq	r7, r1, r3, lsl #28
    2694:	b0030500 	andlt	r0, r3, r0, lsl #10
    2698:	0f2000a0 	svceq	0x002000a0
    269c:	0000119b 	muleq	r0, fp, r1
    26a0:	017e0310 	cmneq	lr, r0, lsl r3
    26a4:	03050000 	movweq	r0, #20480	; 0x5000
    26a8:	2000a128 	andcs	sl, r0, r8, lsr #2
    26ac:	00106c10 	andseq	r6, r0, r0, lsl ip
    26b0:	9e110100 	muflss	f0, f1, f0
    26b4:	05000000 	streq	r0, [r0, #-0]
    26b8:	00582403 	subseq	r2, r8, r3, lsl #8
    26bc:	11d91020 	bicsne	r1, r9, r0, lsr #32
    26c0:	12010000 	andne	r0, r1, #0
    26c4:	0000009e 	muleq	r0, lr, r0
    26c8:	579c0305 	ldrpl	r0, [ip, r5, lsl #6]
    26cc:	34102000 	ldrcc	r2, [r0], #-0
    26d0:	01000012 	tsteq	r0, r2, lsl r0
    26d4:	00009e13 	andeq	r9, r0, r3, lsl lr
    26d8:	a0030500 	andge	r0, r3, r0, lsl #10
    26dc:	10200057 	eorne	r0, r0, r7, asr r0
    26e0:	000010b6 	strheq	r1, [r0], -r6
    26e4:	009e1401 	addseq	r1, lr, r1, lsl #8
    26e8:	03050000 	movweq	r0, #20480	; 0x5000
    26ec:	2000584c 	andcs	r5, r0, ip, asr #16
    26f0:	00128810 	andseq	r8, r2, r0, lsl r8
    26f4:	9e150100 	muflss	f0, f5, f0
    26f8:	05000000 	streq	r0, [r0, #-0]
    26fc:	00579803 	subseq	r9, r7, r3, lsl #16
    2700:	12db1020 	sbcsne	r1, fp, #32
    2704:	16010000 	strne	r0, [r1], -r0
    2708:	0000009e 	muleq	r0, lr, r0
    270c:	58340305 	ldmdapl	r4!, {r0, r2, r8, r9}
    2710:	36102000 	ldrcc	r2, [r0], -r0
    2714:	01000011 	tsteq	r0, r1, lsl r0
    2718:	00009e17 	andeq	r9, r0, r7, lsl lr
    271c:	38030500 	stmdacc	r3, {r8, sl}
    2720:	10200058 	eorne	r0, r0, r8, asr r0
    2724:	00001152 	andeq	r1, r0, r2, asr r1
    2728:	009e1801 	addseq	r1, lr, r1, lsl #16
    272c:	03050000 	movweq	r0, #20480	; 0x5000
    2730:	2000574c 	andcs	r5, r0, ip, asr #14
    2734:	0010aa10 	andseq	sl, r0, r0, lsl sl
    2738:	9e190100 	muflse	f0, f1, f0
    273c:	05000000 	streq	r0, [r0, #-0]
    2740:	00573003 	subseq	r3, r7, r3
    2744:	12cf1020 	sbcne	r1, pc, #32
    2748:	1a010000 	bne	42750 <startup-0x1ffbd8b0>
    274c:	0000009e 	muleq	r0, lr, r0
    2750:	58200305 	stmdapl	r0!, {r0, r2, r8, r9}
    2754:	17102000 	ldrne	r2, [r0, -r0]
    2758:	01000012 	tsteq	r0, r2, lsl r0
    275c:	00009e1b 	andeq	r9, r0, fp, lsl lr
    2760:	bc030500 	cfstr32lt	mvfx0, [r3], {-0}
    2764:	10200057 	eorne	r0, r0, r7, asr r0
    2768:	00001251 	andeq	r1, r0, r1, asr r2
    276c:	009e1c01 	addseq	r1, lr, r1, lsl #24
    2770:	03050000 	movweq	r0, #20480	; 0x5000
    2774:	20005848 	andcs	r5, r0, r8, asr #16
    2778:	0011f610 	andseq	pc, r1, r0, lsl r6	; <UNPREDICTABLE>
    277c:	621e0100 	andsvs	r0, lr, #0, 2
    2780:	05000000 	streq	r0, [r0, #-0]
    2784:	00583c03 	subseq	r3, r8, r3, lsl #24
    2788:	10891020 	addne	r1, r9, r0, lsr #32
    278c:	1f010000 	svcne	0x00010000
    2790:	00000062 	andeq	r0, r0, r2, rrx
    2794:	58280305 	stmdapl	r8!, {r0, r2, r8, r9}
    2798:	c1102000 	tstgt	r0, r0
    279c:	01000012 	tsteq	r0, r2, lsl r0
    27a0:	00006220 	andeq	r6, r0, r0, lsr #4
    27a4:	0c030500 	cfstr32eq	mvfx0, [r3], {-0}
    27a8:	10200057 	eorne	r0, r0, r7, asr r0
    27ac:	000010c2 	andeq	r1, r0, r2, asr #1
    27b0:	00622101 	rsbeq	r2, r2, r1, lsl #2
    27b4:	03050000 	movweq	r0, #20480	; 0x5000
    27b8:	2000578c 	andcs	r5, r0, ip, lsl #15
    27bc:	0010d210 	andseq	sp, r0, r0, lsl r2
    27c0:	62220100 	eorvs	r0, r2, #0, 2
    27c4:	05000000 	streq	r0, [r0, #-0]
    27c8:	00577403 	subseq	r7, r7, r3, lsl #8
    27cc:	10fd1020 	rscsne	r1, sp, r0, lsr #32
    27d0:	23010000 	movwcs	r0, #4096	; 0x1000
    27d4:	00000062 	andeq	r0, r0, r2, rrx
    27d8:	57d80305 	ldrbpl	r0, [r8, r5, lsl #6]
    27dc:	78102000 	ldmdavc	r0, {sp}
    27e0:	01000012 	tsteq	r0, r2, lsl r0
    27e4:	00006224 	andeq	r6, r0, r4, lsr #4
    27e8:	14030500 	strne	r0, [r3], #-1280	; 0xfffffb00
    27ec:	10200058 	eorne	r0, r0, r8, asr r0
    27f0:	00001142 	andeq	r1, r0, r2, asr #2
    27f4:	00622501 	rsbeq	r2, r2, r1, lsl #10
    27f8:	03050000 	movweq	r0, #20480	; 0x5000
    27fc:	20005734 	andcs	r5, r0, r4, lsr r7
    2800:	00125d10 	andseq	r5, r2, r0, lsl sp
    2804:	62260100 	eorvs	r0, r6, #0, 2
    2808:	05000000 	streq	r0, [r0, #-0]
    280c:	00578003 	subseq	r8, r7, r3
    2810:	115d1020 	cmpne	sp, r0, lsr #32
    2814:	27010000 	strcs	r0, [r1, -r0]
    2818:	00000062 	andeq	r0, r0, r2, rrx
    281c:	57a40305 	strpl	r0, [r4, r5, lsl #6]!
    2820:	6d102000 	ldcvs	0, cr2, [r0, #-0]
    2824:	01000011 	tsteq	r0, r1, lsl r0
    2828:	00006228 	andeq	r6, r0, r8, lsr #4
    282c:	18030500 	stmdane	r3, {r8, sl}
    2830:	10200057 	eorne	r0, r0, r7, asr r0
    2834:	000011be 			; <UNDEFINED> instruction: 0x000011be
    2838:	00622901 	rsbeq	r2, r2, r1, lsl #18
    283c:	03050000 	movweq	r0, #20480	; 0x5000
    2840:	200057b0 			; <UNDEFINED> instruction: 0x200057b0
    2844:	0010f410 	andseq	pc, r0, r0, lsl r4	; <UNPREDICTABLE>
    2848:	4c2c0100 	stfmis	f0, [ip], #-0
    284c:	05000001 	streq	r0, [r0, #-1]
    2850:	00575003 	subseq	r5, r7, r3
    2854:	112a1020 			; <UNDEFINED> instruction: 0x112a1020
    2858:	2d010000 	stccs	0, cr0, [r1, #-0]
    285c:	000000a4 	andeq	r0, r0, r4, lsr #1
    2860:	57cc0305 	strbpl	r0, [ip, r5, lsl #6]
    2864:	cd102000 	ldcgt	0, cr2, [r0, #-0]
    2868:	01000011 	tsteq	r0, r1, lsl r0
    286c:	0000a42e 	andeq	sl, r0, lr, lsr #8
    2870:	24030500 	strcs	r0, [r3], #-1280	; 0xfffffb00
    2874:	10200057 	eorne	r0, r0, r7, asr r0
    2878:	0000117d 	andeq	r1, r0, sp, ror r1
    287c:	00a42f01 	adceq	r2, r4, r1, lsl #30
    2880:	03050000 	movweq	r0, #20480	; 0x5000
    2884:	20005740 	andcs	r5, r0, r0, asr #14
    2888:	00110c10 	andseq	r0, r1, r0, lsl ip
    288c:	a4300100 	ldrtge	r0, [r0], #-256	; 0xffffff00
    2890:	05000000 	streq	r0, [r0, #-0]
    2894:	0057c003 	subseq	ip, r7, r3
    2898:	00a40b20 	adceq	r0, r4, r0, lsr #22
    289c:	045e0000 	ldrbeq	r0, [lr], #-0
    28a0:	8e0e0000 	cdphi	0, 0, cr0, cr14, cr0, {0}
    28a4:	03000001 	movweq	r0, #1
    28a8:	126c1000 	rsbne	r1, ip, #0
    28ac:	31010000 	mrscc	r0, (UNDEF: 1)
    28b0:	0000044e 	andeq	r0, r0, lr, asr #8
    28b4:	57e40305 	strbpl	r0, [r4, r5, lsl #6]!
    28b8:	ef112000 	svc	0x00112000
    28bc:	01000003 	tsteq	r0, r3
    28c0:	002ac45f 	eoreq	ip, sl, pc, asr r4
    28c4:	00010420 	andeq	r0, r1, r0, lsr #8
    28c8:	a49c0100 	ldrge	r0, [ip], #256	; 0x100
    28cc:	12000004 	andne	r0, r0, #4
    28d0:	000010f4 	strdeq	r1, [r0], -r4
    28d4:	01625f01 	cmneq	r2, r1, lsl #30
    28d8:	91020000 	mrsls	r0, (UNDEF: 2)
    28dc:	09360f6c 	ldmdbeq	r6!, {r2, r3, r5, r6, r8, r9, sl, fp}
    28e0:	60010000 	andvs	r0, r1, r0
    28e4:	0000012e 	andeq	r0, r0, lr, lsr #2
    28e8:	a1a00305 	lslge	r0, r5, #6
    28ec:	13002000 	movwne	r2, #0
    28f0:	000004c7 	andeq	r0, r0, r7, asr #9
    28f4:	291c3201 	ldmdbcs	ip, {r0, r9, ip, sp}
    28f8:	01a82000 			; <UNDEFINED> instruction: 0x01a82000
    28fc:	9c010000 	stcls	0, cr0, [r1], {-0}
    2900:	000dd70f 	andeq	sp, sp, pc, lsl #14
    2904:	9e340100 	rsflss	f0, f4, f0
    2908:	02000000 	andeq	r0, r0, #0
    290c:	e10f7491 			; <UNDEFINED> instruction: 0xe10f7491
    2910:	0100000d 	tsteq	r0, sp
    2914:	00009e37 	andeq	r9, r0, r7, lsr lr
    2918:	70910200 	addsvc	r0, r1, r0, lsl #4
    291c:	000bd70f 	andeq	sp, fp, pc, lsl #14
    2920:	9e3a0100 	rsflse	f0, f2, f0
    2924:	02000000 	andeq	r0, r0, #0
    2928:	f80f6c91 			; <UNDEFINED> instruction: 0xf80f6c91
    292c:	0100000a 	tsteq	r0, sl
    2930:	00009e3e 	andeq	r9, r0, lr, lsr lr
    2934:	68910200 	ldmvs	r1, {r9}
    2938:	000e010f 	andeq	r0, lr, pc, lsl #2
    293c:	9e410100 	dvflss	f0, f1, f0
    2940:	02000000 	andeq	r0, r0, #0
    2944:	950f6491 	strls	r6, [pc, #-1169]	; 24bb <startup-0x1fffdb45>
    2948:	0100000b 	tsteq	r0, fp
    294c:	00009e44 	andeq	r9, r0, r4, asr #28
    2950:	60910200 	addsvs	r0, r1, r0, lsl #4
    2954:	000dad0f 	andeq	sl, sp, pc, lsl #26
    2958:	9e490100 	dvflse	f0, f1, f0
    295c:	02000000 	andeq	r0, r0, #0
    2960:	0b0f5c91 	bleq	3d9bac <startup-0x1fc26454>
    2964:	0100000e 	tsteq	r0, lr
    2968:	00009e4c 	andeq	r9, r0, ip, asr #28
    296c:	58910200 	ldmpl	r1, {r9}
    2970:	000e150f 	andeq	r1, lr, pc, lsl #10
    2974:	9e4f0100 	dvflse	f0, f7, f0
    2978:	02000000 	andeq	r0, r0, #0
    297c:	1e0f5491 	mcrne	4, 0, r5, cr15, cr1, {4}
    2980:	0100000b 	tsteq	r0, fp
    2984:	00009e53 	andeq	r9, r0, r3, asr lr
    2988:	50910200 	addspl	r0, r1, r0, lsl #4
    298c:	000b620f 	andeq	r6, fp, pc, lsl #4
    2990:	9e560100 	rdflss	f0, f6, f0
    2994:	02000000 	andeq	r0, r0, #0
    2998:	6c0f4c91 	stcvs	12, cr4, [pc], {145}	; 0x91
    299c:	0100000b 	tsteq	r0, fp
    29a0:	00009e59 	andeq	r9, r0, r9, asr lr
    29a4:	48910200 	ldmmi	r1, {r9}
    29a8:	07a10000 	streq	r0, [r1, r0]!
    29ac:	00040000 	andeq	r0, r4, r0
    29b0:	00000895 	muleq	r0, r5, r8
    29b4:	009f0104 	addseq	r0, pc, r4, lsl #2
    29b8:	390c0000 	stmdbcc	ip, {}	; <UNPREDICTABLE>
    29bc:	c8000013 	stmdagt	r0, {r0, r1, r4}
    29c0:	2c20002b 	stccs	0, cr0, [r0], #-172	; 0xffffff54
    29c4:	7a000005 	bvc	29e0 <startup-0x1fffd620>
    29c8:	0200000d 	andeq	r0, r0, #13
    29cc:	4e05020c 	cdpmi	2, 0, cr0, cr5, cr12, {0}
    29d0:	03000000 	movweq	r0, #0
    29d4:	0000036b 	andeq	r0, r0, fp, ror #6
    29d8:	004e0702 	subeq	r0, lr, r2, lsl #14
    29dc:	03000000 	movweq	r0, #0
    29e0:	00000739 	andeq	r0, r0, r9, lsr r7
    29e4:	004e0802 	subeq	r0, lr, r2, lsl #16
    29e8:	03040000 	movweq	r0, #16384	; 0x4000
    29ec:	000017ff 	strdeq	r1, [r0], -pc	; <UNPREDICTABLE>
    29f0:	00550902 	subseq	r0, r5, r2, lsl #18
    29f4:	00080000 	andeq	r0, r8, r0
    29f8:	99070404 	stmdbls	r7, {r2, sl}
    29fc:	05000003 	streq	r0, [r0, #-3]
    2a00:	00005b04 	andeq	r5, r0, r4, lsl #22
    2a04:	08010400 	stmdaeq	r1, {sl}
    2a08:	000004f1 	strdeq	r0, [r0], -r1
    2a0c:	00196906 	andseq	r6, r9, r6, lsl #18
    2a10:	210a0200 	mrscs	r0, R10_fiq
    2a14:	07000000 	streq	r0, [r0, -r0]
    2a18:	00000034 	andeq	r0, r0, r4, lsr r0
    2a1c:	9e06030c 	cdpls	3, 0, cr0, cr6, cr12, {0}
    2a20:	03000000 	movweq	r0, #0
    2a24:	000005e7 	andeq	r0, r0, r7, ror #11
    2a28:	009e0703 	addseq	r0, lr, r3, lsl #14
    2a2c:	03000000 	movweq	r0, #0
    2a30:	0000003b 	andeq	r0, r0, fp, lsr r0
    2a34:	009e0803 	addseq	r0, lr, r3, lsl #16
    2a38:	03040000 	movweq	r0, #16384	; 0x4000
    2a3c:	00000030 	andeq	r0, r0, r0, lsr r0
    2a40:	009e0903 	addseq	r0, lr, r3, lsl #18
    2a44:	00080000 	andeq	r0, r8, r0
    2a48:	00620405 	rsbeq	r0, r2, r5, lsl #8
    2a4c:	14060000 	strne	r0, [r6], #-0
    2a50:	03000015 	movweq	r0, #21
    2a54:	00006d0a 	andeq	r6, r0, sl, lsl #26
    2a58:	06fc0700 	ldrbteq	r0, [ip], r0, lsl #14
    2a5c:	04240000 	strteq	r0, [r4], #-0
    2a60:	00012806 	andeq	r2, r1, r6, lsl #16
    2a64:	047f0300 	ldrbteq	r0, [pc], #-768	; 2a6c <startup-0x1fffd594>
    2a68:	07040000 	streq	r0, [r4, -r0]
    2a6c:	00000128 	andeq	r0, r0, r8, lsr #2
    2a70:	07080300 	streq	r0, [r8, -r0, lsl #6]
    2a74:	08040000 	stmdaeq	r4, {}	; <UNPREDICTABLE>
    2a78:	0000012e 	andeq	r0, r0, lr, lsr #2
    2a7c:	06580304 	ldrbeq	r0, [r8], -r4, lsl #6
    2a80:	09040000 	stmdbeq	r4, {}	; <UNPREDICTABLE>
    2a84:	0000012e 	andeq	r0, r0, lr, lsr #2
    2a88:	06840308 	streq	r0, [r4], r8, lsl #6
    2a8c:	0c040000 	stceq	0, cr0, [r4], {-0}
    2a90:	00000146 	andeq	r0, r0, r6, asr #2
    2a94:	0352030c 	cmpeq	r2, #12, 6	; 0x30000000
    2a98:	0d040000 	stceq	0, cr0, [r4, #-0]
    2a9c:	00000146 	andeq	r0, r0, r6, asr #2
    2aa0:	04910310 	ldreq	r0, [r1], #784	; 0x310
    2aa4:	10040000 	andne	r0, r4, r0
    2aa8:	0000012e 	andeq	r0, r0, lr, lsr #2
    2aac:	00700314 	rsbseq	r0, r0, r4, lsl r3
    2ab0:	11040000 	mrsne	r0, (UNDEF: 4)
    2ab4:	0000012e 	andeq	r0, r0, lr, lsr #2
    2ab8:	03fa0318 	mvnseq	r0, #24, 6	; 0x60000000
    2abc:	12040000 	andne	r0, r4, #0
    2ac0:	0000012e 	andeq	r0, r0, lr, lsr #2
    2ac4:	040a031c 	streq	r0, [sl], #-796	; 0xfffffce4
    2ac8:	13040000 	movwne	r0, #16384	; 0x4000
    2acc:	0000012e 	andeq	r0, r0, lr, lsr #2
    2ad0:	04050020 	streq	r0, [r5], #-32	; 0xffffffe0
    2ad4:	000000a4 	andeq	r0, r0, r4, lsr #1
    2ad8:	69050408 	stmdbvs	r5, {r3, sl}
    2adc:	0900746e 	stmdbeq	r0, {r1, r2, r3, r5, r6, sl, ip, sp, lr}
    2ae0:	00000140 	andeq	r0, r0, r0, asr #2
    2ae4:	0001400a 	andeq	r4, r1, sl
    2ae8:	04050000 	streq	r0, [r5], #-0
    2aec:	000000af 	andeq	r0, r0, pc, lsr #1
    2af0:	01350405 	teqeq	r5, r5, lsl #8
    2af4:	fd060000 	stc2	0, cr0, [r6, #-0]
    2af8:	04000006 	streq	r0, [r0], #-6
    2afc:	0000af15 	andeq	sl, r0, r5, lsl pc
    2b00:	01620b00 	cmneq	r2, r0, lsl #22
    2b04:	01620000 	cmneq	r2, r0
    2b08:	000c0000 	andeq	r0, ip, r0
    2b0c:	014c0405 	cmpeq	ip, r5, lsl #8
    2b10:	740d0000 	strvc	r0, [sp], #-0
    2b14:	04000005 	streq	r0, [r0], #-5
    2b18:	0001571c 	andeq	r5, r1, ip, lsl r7
    2b1c:	04450d00 	strbeq	r0, [r5], #-3328	; 0xfffff300
    2b20:	1d040000 	stcne	0, cr0, [r4, #-0]
    2b24:	0000012e 	andeq	r0, r0, lr, lsr #2
    2b28:	00005b0b 	andeq	r5, r0, fp, lsl #22
    2b2c:	00018f00 	andeq	r8, r1, r0, lsl #30
    2b30:	018f0e00 	orreq	r0, pc, r0, lsl #28
    2b34:	03010000 	movweq	r0, #4096	; 0x1000
    2b38:	07040400 	streq	r0, [r4, -r0, lsl #8]
    2b3c:	00000427 	andeq	r0, r0, r7, lsr #8
    2b40:	00140b0f 	andseq	r0, r4, pc, lsl #22
    2b44:	7e030500 	cfsh32vc	mvfx0, mvfx3, #0
    2b48:	05000001 	streq	r0, [r0, #-1]
    2b4c:	00a1a403 	adceq	sl, r1, r3, lsl #8
    2b50:	13210f20 			; <UNDEFINED> instruction: 0x13210f20
    2b54:	03060000 	movweq	r0, #24576	; 0x6000
    2b58:	0000017e 	andeq	r0, r0, lr, ror r1
    2b5c:	a4a80305 	strtge	r0, [r8], #773	; 0x305
    2b60:	3e0f2000 	cdpcc	0, 0, cr2, cr15, cr0, {0}
    2b64:	07000016 	smladeq	r0, r6, r0, r0
    2b68:	00017e03 	andeq	r7, r1, r3, lsl #28
    2b6c:	ac030500 	cfstr32ge	mvfx0, [r3], {-0}
    2b70:	0f2000a7 	svceq	0x002000a7
    2b74:	00001444 	andeq	r1, r0, r4, asr #8
    2b78:	017e0308 	cmneq	lr, r8, lsl #6
    2b7c:	03050000 	movweq	r0, #20480	; 0x5000
    2b80:	2000aab0 			; <UNDEFINED> instruction: 0x2000aab0
    2b84:	00168d0f 	andseq	r8, r6, pc, lsl #26
    2b88:	7e030900 	vmlavc.f16	s0, s6, s0	; <UNPREDICTABLE>
    2b8c:	05000001 	streq	r0, [r0, #-1]
    2b90:	00adb403 	adceq	fp, sp, r3, lsl #8
    2b94:	16600f20 	strbtne	r0, [r0], -r0, lsr #30
    2b98:	030a0000 	movweq	r0, #40960	; 0xa000
    2b9c:	0000017e 	andeq	r0, r0, lr, ror r1
    2ba0:	b0b80305 	adcslt	r0, r8, r5, lsl #6
    2ba4:	fc0f2000 	stc2	0, cr2, [pc], {-0}
    2ba8:	0b000015 	bleq	2c04 <startup-0x1fffd3fc>
    2bac:	00017e03 	andeq	r7, r1, r3, lsl #28
    2bb0:	bc030500 	cfstr32lt	mvfx0, [r3], {-0}
    2bb4:	0f2000b3 	svceq	0x002000b3
    2bb8:	000014a1 	andeq	r1, r0, r1, lsr #9
    2bbc:	017e030c 	cmneq	lr, ip, lsl #6
    2bc0:	03050000 	movweq	r0, #20480	; 0x5000
    2bc4:	2000b6c0 	andcs	fp, r0, r0, asr #13
    2bc8:	0014b10f 	andseq	fp, r4, pc, lsl #2
    2bcc:	7e030d00 	cdpvc	13, 0, cr0, cr3, cr0, {0}
    2bd0:	05000001 	streq	r0, [r0, #-1]
    2bd4:	00b9c403 	adcseq	ip, r9, r3, lsl #8
    2bd8:	13930f20 	orrsne	r0, r3, #32, 30	; 0x80
    2bdc:	030e0000 	movweq	r0, #57344	; 0xe000
    2be0:	0000017e 	andeq	r0, r0, lr, ror r1
    2be4:	bcc80305 	stcllt	3, cr0, [r8], {5}
    2be8:	340f2000 	strcc	r2, [pc], #-0	; 2bf0 <startup-0x1fffd410>
    2bec:	0f000014 	svceq	0x00000014
    2bf0:	00017e03 	andeq	r7, r1, r3, lsl #28
    2bf4:	cc030500 	cfstr32gt	mvfx0, [r3], {-0}
    2bf8:	0f2000bf 	svceq	0x002000bf
    2bfc:	0000162d 	andeq	r1, r0, sp, lsr #12
    2c00:	017e0310 	cmneq	lr, r0, lsl r3
    2c04:	03050000 	movweq	r0, #20480	; 0x5000
    2c08:	2000c2d0 	ldrdcs	ip, [r0], -r0
    2c0c:	00164f0f 	andseq	r4, r6, pc, lsl #30
    2c10:	7e031100 	adfvcs	f1, f3, f0
    2c14:	05000001 	streq	r0, [r0, #-1]
    2c18:	00c5d403 	sbceq	sp, r5, r3, lsl #8
    2c1c:	13a40f20 			; <UNDEFINED> instruction: 0x13a40f20
    2c20:	03120000 	tsteq	r2, #0
    2c24:	0000017e 	andeq	r0, r0, lr, ror r1
    2c28:	c8d80305 	ldmgt	r8, {r0, r2, r8, r9}^
    2c2c:	f10f2000 			; <UNDEFINED> instruction: 0xf10f2000
    2c30:	13000014 	movwne	r0, #20
    2c34:	00017e03 	andeq	r7, r1, r3, lsl #28
    2c38:	dc030500 	cfstr32le	mvfx0, [r3], {-0}
    2c3c:	0f2000cb 	svceq	0x002000cb
    2c40:	00001671 	andeq	r1, r0, r1, ror r6
    2c44:	017e0314 	cmneq	lr, r4, lsl r3
    2c48:	03050000 	movweq	r0, #20480	; 0x5000
    2c4c:	2000cee0 	andcs	ip, r0, r0, ror #29
    2c50:	0014d70f 	andseq	sp, r4, pc, lsl #14
    2c54:	7e031500 	cfsh32vc	mvfx1, mvfx3, #0
    2c58:	05000001 	streq	r0, [r0, #-1]
    2c5c:	00d1e403 	sbcseq	lr, r1, r3, lsl #8
    2c60:	151a0f20 	ldrne	r0, [sl, #-3872]	; 0xfffff0e0
    2c64:	03160000 	tsteq	r6, #0
    2c68:	0000017e 	andeq	r0, r0, lr, ror r1
    2c6c:	d4e80305 	strbtle	r0, [r8], #773	; 0x305
    2c70:	0d102000 	ldceq	0, cr2, [r0, #-0]
    2c74:	01000016 	tsteq	r0, r6, lsl r0
    2c78:	00009e18 	andeq	r9, r0, r8, lsl lr
    2c7c:	38030500 	stmdacc	r3, {r8, sl}
    2c80:	1020005a 	eorne	r0, r0, sl, asr r0
    2c84:	00001374 	andeq	r1, r0, r4, ror r3
    2c88:	009e1901 	addseq	r1, lr, r1, lsl #18
    2c8c:	03050000 	movweq	r0, #20480	; 0x5000
    2c90:	20005a74 	andcs	r5, r0, r4, ror sl
    2c94:	00140010 	andseq	r0, r4, r0, lsl r0
    2c98:	9e1a0100 	muflse	f0, f2, f0
    2c9c:	05000000 	streq	r0, [r0, #-0]
    2ca0:	005ad803 	subseq	sp, sl, r3, lsl #16
    2ca4:	147d1020 	ldrbtne	r1, [sp], #-32	; 0xffffffe0
    2ca8:	1b010000 	blne	42cb0 <startup-0x1ffbd350>
    2cac:	0000009e 	muleq	r0, lr, r0
    2cb0:	5ae80305 	bpl	ffa038cc <firstTime.4104+0xdf9ef460>
    2cb4:	59102000 	ldmdbpl	r0, {sp}
    2cb8:	01000015 	tsteq	r0, r5, lsl r0
    2cbc:	00009e1c 	andeq	r9, r0, ip, lsl lr
    2cc0:	34030500 	strcc	r0, [r3], #-1280	; 0xfffffb00
    2cc4:	1020005a 	eorne	r0, r0, sl, asr r0
    2cc8:	000015bf 			; <UNDEFINED> instruction: 0x000015bf
    2ccc:	009e1d01 	addseq	r1, lr, r1, lsl #26
    2cd0:	03050000 	movweq	r0, #20480	; 0x5000
    2cd4:	20005aec 	andcs	r5, r0, ip, ror #21
    2cd8:	0013c310 	andseq	ip, r3, r0, lsl r3
    2cdc:	9e1e0100 	muflse	f0, f6, f0
    2ce0:	05000000 	streq	r0, [r0, #-0]
    2ce4:	00589c03 	subseq	r9, r8, r3, lsl #24
    2ce8:	15e31020 	strbne	r1, [r3, #32]!
    2cec:	1f010000 	svcne	0x00010000
    2cf0:	0000009e 	muleq	r0, lr, r0
    2cf4:	58f00305 	ldmpl	r0!, {r0, r2, r8, r9}^
    2cf8:	cc102000 	ldcgt	0, cr2, [r0], {-0}
    2cfc:	01000014 	tsteq	r0, r4, lsl r0
    2d00:	00009e20 	andeq	r9, r0, r0, lsr #28
    2d04:	98030500 	stmdals	r3, {r8, sl}
    2d08:	10200058 	eorne	r0, r0, r8, asr r0
    2d0c:	00001682 	andeq	r1, r0, r2, lsl #13
    2d10:	009e2101 	addseq	r2, lr, r1, lsl #2
    2d14:	03050000 	movweq	r0, #20480	; 0x5000
    2d18:	20005a18 	andcs	r5, r0, r8, lsl sl
    2d1c:	0015ca10 	andseq	ip, r5, r0, lsl sl
    2d20:	9e220100 	suflss	f0, f2, f0
    2d24:	05000000 	streq	r0, [r0, #-0]
    2d28:	005a6c03 	subseq	r6, sl, r3, lsl #24
    2d2c:	13dd1020 	bicsne	r1, sp, #32
    2d30:	23010000 	movwcs	r0, #4096	; 0x1000
    2d34:	0000009e 	muleq	r0, lr, r0
    2d38:	58bc0305 	ldmpl	ip!, {r0, r2, r8, r9}
    2d3c:	63102000 	tstvs	r0, #0
    2d40:	01000014 	tsteq	r0, r4, lsl r0
    2d44:	00009e24 	andeq	r9, r0, r4, lsr #28
    2d48:	b8030500 	stmdalt	r3, {r8, sl}
    2d4c:	10200058 	eorne	r0, r0, r8, asr r0
    2d50:	000014e7 	andeq	r1, r0, r7, ror #9
    2d54:	009e2501 	addseq	r2, lr, r1, lsl #10
    2d58:	03050000 	movweq	r0, #20480	; 0x5000
    2d5c:	20005900 	andcs	r5, r0, r0, lsl #18
    2d60:	00159a10 	andseq	r9, r5, r0, lsl sl
    2d64:	9e260100 	suflss	f0, f6, f0
    2d68:	05000000 	streq	r0, [r0, #-0]
    2d6c:	005a7003 	subseq	r7, sl, r3
    2d70:	16221020 	strtne	r1, [r2], -r0, lsr #32
    2d74:	27010000 	strcs	r0, [r1, -r0]
    2d78:	0000009e 	muleq	r0, lr, r0
    2d7c:	5a080305 	bpl	203998 <startup-0x1fdfc668>
    2d80:	18102000 	ldmdane	r0, {sp}
    2d84:	01000016 	tsteq	r0, r6, lsl r0
    2d88:	00009e28 	andeq	r9, r0, r8, lsr #28
    2d8c:	40030500 	andmi	r0, r3, r0, lsl #10
    2d90:	10200059 	eorne	r0, r0, r9, asr r0
    2d94:	00001488 	andeq	r1, r0, r8, lsl #9
    2d98:	009e2901 	addseq	r2, lr, r1, lsl #18
    2d9c:	03050000 	movweq	r0, #20480	; 0x5000
    2da0:	20005950 	andcs	r5, r0, r0, asr r9
    2da4:	00145510 	andseq	r5, r4, r0, lsl r5
    2da8:	622b0100 	eorvs	r0, fp, #0, 2
    2dac:	05000000 	streq	r0, [r0, #-0]
    2db0:	005af003 	subseq	pc, sl, r3
    2db4:	158c1020 	strne	r1, [ip, #32]
    2db8:	2c010000 	stccs	0, cr0, [r1], {-0}
    2dbc:	00000062 	andeq	r0, r0, r2, rrx
    2dc0:	58680305 	stmdapl	r8!, {r0, r2, r8, r9}^
    2dc4:	27102000 	ldrcs	r2, [r0, -r0]
    2dc8:	01000014 	tsteq	r0, r4, lsl r0
    2dcc:	0000622d 	andeq	r6, r0, sp, lsr #4
    2dd0:	28030500 	stmdacs	r3, {r8, sl}
    2dd4:	1020005a 	eorne	r0, r0, sl, asr r0
    2dd8:	0000146e 	andeq	r1, r0, lr, ror #8
    2ddc:	00622e01 	rsbeq	r2, r2, r1, lsl #28
    2de0:	03050000 	movweq	r0, #20480	; 0x5000
    2de4:	2000585c 	andcs	r5, r0, ip, asr r8
    2de8:	0015a510 	andseq	sl, r5, r0, lsl r5
    2dec:	622f0100 	eorvs	r0, pc, #0, 2
    2df0:	05000000 	streq	r0, [r0, #-0]
    2df4:	005ac003 	subseq	ip, sl, r3
    2df8:	15411020 	strbne	r1, [r1, #-32]	; 0xffffffe0
    2dfc:	30010000 	andcc	r0, r1, r0
    2e00:	00000062 	andeq	r0, r0, r2, rrx
    2e04:	5a480305 	bpl	1203a20 <startup-0x1edfc5e0>
    2e08:	ed102000 	ldc	0, cr2, [r0, #-0]
    2e0c:	01000015 	tsteq	r0, r5, lsl r0
    2e10:	00006231 	andeq	r6, r0, r1, lsr r2
    2e14:	0c030500 	cfstr32eq	mvfx0, [r3], {-0}
    2e18:	1020005a 	eorne	r0, r0, sl, asr r0
    2e1c:	000013ce 	andeq	r1, r0, lr, asr #7
    2e20:	00623201 	rsbeq	r3, r2, r1, lsl #4
    2e24:	03050000 	movweq	r0, #20480	; 0x5000
    2e28:	20005934 	andcs	r5, r0, r4, lsr r9
    2e2c:	0016b810 	andseq	fp, r6, r0, lsl r8
    2e30:	62330100 	eorsvs	r0, r3, #0, 2
    2e34:	05000000 	streq	r0, [r0, #-0]
    2e38:	005a6003 	subseq	r6, sl, r3
    2e3c:	16c61020 	strbne	r1, [r6], r0, lsr #32
    2e40:	34010000 	strcc	r0, [r1], #-0
    2e44:	00000062 	andeq	r0, r0, r2, rrx
    2e48:	5ab40305 	bpl	fed03a64 <firstTime.4104+0xdecef5f8>
    2e4c:	6e102000 	cdpvs	0, 1, cr2, cr0, cr0, {0}
    2e50:	01000015 	tsteq	r0, r5, lsl r0
    2e54:	00006235 	andeq	r6, r0, r5, lsr r2
    2e58:	f4030500 	vst3.8	{d0,d2,d4}, [r3], r0
    2e5c:	10200058 	eorne	r0, r0, r8, asr r0
    2e60:	00001493 	muleq	r0, r3, r4
    2e64:	00623601 	rsbeq	r3, r2, r1, lsl #12
    2e68:	03050000 	movweq	r0, #20480	; 0x5000
    2e6c:	20005a54 	andcs	r5, r0, r4, asr sl
    2e70:	00157d10 	andseq	r7, r5, r0, lsl sp
    2e74:	62370100 	eorsvs	r0, r7, #0, 2
    2e78:	05000000 	streq	r0, [r0, #-0]
    2e7c:	005acc03 	subseq	ip, sl, r3, lsl #24
    2e80:	169d1020 	ldrne	r1, [sp], r0, lsr #32
    2e84:	38010000 	stmdacc	r1, {}	; <UNPREDICTABLE>
    2e88:	00000062 	andeq	r0, r0, r2, rrx
    2e8c:	5aa80305 	bpl	fea03aa8 <firstTime.4104+0xde9ef63c>
    2e90:	66102000 	ldrvs	r2, [r0], -r0
    2e94:	01000013 	tsteq	r0, r3, lsl r0
    2e98:	00006239 	andeq	r6, r0, r9, lsr r2
    2e9c:	50030500 	andpl	r0, r3, r0, lsl #10
    2ea0:	10200058 	eorne	r0, r0, r8, asr r0
    2ea4:	000015d4 	ldrdeq	r1, [r0], -r4
    2ea8:	00623a01 	rsbeq	r3, r2, r1, lsl #20
    2eac:	03050000 	movweq	r0, #20480	; 0x5000
    2eb0:	20005a1c 	andcs	r5, r0, ip, lsl sl
    2eb4:	0013b410 	andseq	fp, r3, r0, lsl r4
    2eb8:	623b0100 	eorsvs	r0, fp, #0, 2
    2ebc:	05000000 	streq	r0, [r0, #-0]
    2ec0:	00587403 	subseq	r7, r8, r3, lsl #8
    2ec4:	13131020 	tstne	r3, #32
    2ec8:	3c010000 	stccc	0, cr0, [r1], {-0}
    2ecc:	00000062 	andeq	r0, r0, r2, rrx
    2ed0:	5a3c0305 	bpl	f03aec <startup-0x1f0fc514>
    2ed4:	31102000 	tstcc	r0, r0
    2ed8:	01000013 	tsteq	r0, r3, lsl r0
    2edc:	00014c3f 	andeq	r4, r1, pc, lsr ip
    2ee0:	04030500 	streq	r0, [r3], #-1280	; 0xfffffb00
    2ee4:	10200059 	eorne	r0, r0, r9, asr r0
    2ee8:	000012f2 	strdeq	r1, [r0], -r2
    2eec:	00a44001 	adceq	r4, r4, r1
    2ef0:	03050000 	movweq	r0, #20480	; 0x5000
    2ef4:	20005a84 	andcs	r5, r0, r4, lsl #21
    2ef8:	0015b410 	andseq	fp, r5, r0, lsl r4
    2efc:	a4410100 	strbge	r0, [r1], #-256	; 0xffffff00
    2f00:	05000000 	streq	r0, [r0, #-0]
    2f04:	0058ac03 	subseq	sl, r8, r3, lsl #24
    2f08:	141c1020 	ldrne	r1, [ip], #-32	; 0xffffffe0
    2f0c:	42010000 	andmi	r0, r1, #0
    2f10:	000000a4 	andeq	r0, r0, r4, lsr #1
    2f14:	5a9c0305 	bpl	fe703b30 <firstTime.4104+0xde6ef6c4>
    2f18:	36102000 	ldrcc	r2, [r0], -r0
    2f1c:	01000015 	tsteq	r0, r5, lsl r0
    2f20:	0000a443 	andeq	sl, r0, r3, asr #8
    2f24:	a0030500 	andge	r0, r3, r0, lsl #10
    2f28:	10200058 	eorne	r0, r0, r8, asr r0
    2f2c:	00001308 	andeq	r1, r0, r8, lsl #6
    2f30:	00a44401 	adceq	r4, r4, r1, lsl #8
    2f34:	03050000 	movweq	r0, #20480	; 0x5000
    2f38:	200058e4 	andcs	r5, r0, r4, ror #17
    2f3c:	00138810 	andseq	r8, r3, r0, lsl r8
    2f40:	a4450100 	strbge	r0, [r5], #-256	; 0xffffff00
    2f44:	05000000 	streq	r0, [r0, #-0]
    2f48:	00592803 	subseq	r2, r9, r3, lsl #16
    2f4c:	152b1020 	strne	r1, [fp, #-32]!	; 0xffffffe0
    2f50:	46010000 	strmi	r0, [r1], -r0
    2f54:	000000a4 	andeq	r0, r0, r4, lsr #1
    2f58:	5a900305 	bpl	fe403b74 <firstTime.4104+0xde3ef708>
    2f5c:	e7102000 	ldr	r2, [r0, -r0]
    2f60:	01000012 	tsteq	r0, r2, lsl r0
    2f64:	0000a447 	andeq	sl, r0, r7, asr #8
    2f68:	d8030500 	stmdale	r3, {r8, sl}
    2f6c:	10200058 	eorne	r0, r0, r8, asr r0
    2f70:	000012fd 	strdeq	r1, [r0], -sp
    2f74:	00a44801 	adceq	r4, r4, r1, lsl #16
    2f78:	03050000 	movweq	r0, #20480	; 0x5000
    2f7c:	20005880 	andcs	r5, r0, r0, lsl #17
    2f80:	00150e10 	andseq	r0, r5, r0, lsl lr
    2f84:	a4490100 	strbge	r0, [r9], #-256	; 0xffffff00
    2f88:	05000000 	streq	r0, [r0, #-0]
    2f8c:	0058c003 	subseq	ip, r8, r3
    2f90:	16d51020 	ldrbne	r1, [r5], r0, lsr #32
    2f94:	4a010000 	bmi	42f9c <startup-0x1ffbd064>
    2f98:	000000a4 	andeq	r0, r0, r4, lsr #1
    2f9c:	5a780305 	bpl	1e03bb8 <startup-0x1e1fc448>
    2fa0:	e8102000 	ldmda	r0, {sp}
    2fa4:	01000013 	tsteq	r0, r3, lsl r0
    2fa8:	0000a44b 	andeq	sl, r0, fp, asr #8
    2fac:	8c030500 	cfstr32hi	mvfx0, [r3], {-0}
    2fb0:	10200058 	eorne	r0, r0, r8, asr r0
    2fb4:	00001502 	andeq	r1, r0, r2, lsl #10
    2fb8:	00a44c01 	adceq	r4, r4, r1, lsl #24
    2fbc:	03050000 	movweq	r0, #20480	; 0x5000
    2fc0:	20005944 	andcs	r5, r0, r4, asr #18
    2fc4:	0016ac10 	andseq	sl, r6, r0, lsl ip
    2fc8:	a44d0100 	strbge	r0, [sp], #-256	; 0xffffff00
    2fcc:	05000000 	streq	r0, [r0, #-0]
    2fd0:	0058cc03 	subseq	ip, r8, r3, lsl #24
    2fd4:	13f41020 	mvnsne	r1, #32
    2fd8:	4e010000 	cdpmi	0, 0, cr0, cr1, cr0, {0}
    2fdc:	000000a4 	andeq	r0, r0, r4, lsr #1
    2fe0:	5adc0305 	bpl	ff703bfc <firstTime.4104+0xdf6ef790>
    2fe4:	a40b2000 	strge	r2, [fp], #-0
    2fe8:	4c000000 	stcmi	0, cr0, [r0], {-0}
    2fec:	11000006 	tstne	r0, r6
    2ff0:	0000018f 	andeq	r0, r0, pc, lsl #3
    2ff4:	6310000e 	tstvs	r0, #14
    2ff8:	01000015 	tsteq	r0, r5, lsl r0
    2ffc:	00063c4f 	andeq	r3, r6, pc, asr #24
    3000:	54030500 	strpl	r0, [r3], #-1280	; 0xfffffb00
    3004:	12200059 	eorne	r0, r0, #89	; 0x59
    3008:	00000371 	andeq	r0, r0, r1, ror r3
    300c:	2e3c9001 	cdpcs	0, 3, cr9, cr12, cr1, {0}
    3010:	02b82000 	adcseq	r2, r8, #0
    3014:	9c010000 	stcls	0, cr0, [r1], {-0}
    3018:	00000692 	muleq	r0, r2, r6
    301c:	00133113 	andseq	r3, r3, r3, lsl r1
    3020:	62900100 	addsvs	r0, r0, #0, 2
    3024:	02000001 	andeq	r0, r0, #1
    3028:	360f6c91 			; <UNDEFINED> instruction: 0x360f6c91
    302c:	01000009 	tsteq	r0, r9
    3030:	00012e91 	muleq	r1, r1, lr
    3034:	ec030500 	cfstr32	mvfx0, [r3], {-0}
    3038:	002000d7 	ldrdeq	r0, [r0], -r7	; <UNPREDICTABLE>
    303c:	0004c714 	andeq	ip, r4, r4, lsl r7
    3040:	c8500100 	ldmdagt	r0, {r8}^
    3044:	7420002b 	strtvc	r0, [r0], #-43	; 0xffffffd5
    3048:	01000002 	tsteq	r0, r2
    304c:	0dd70f9c 	ldcleq	15, cr0, [r7, #624]	; 0x270
    3050:	52010000 	andpl	r0, r1, #0
    3054:	0000009e 	muleq	r0, lr, r0
    3058:	0f749102 	svceq	0x00749102
    305c:	00000de1 	andeq	r0, r0, r1, ror #27
    3060:	009e5501 	addseq	r5, lr, r1, lsl #10
    3064:	91020000 	mrsls	r0, (UNDEF: 2)
    3068:	0bd70f70 	bleq	ff5c6e30 <firstTime.4104+0xdf5b29c4>
    306c:	58010000 	stmdapl	r1, {}	; <UNPREDICTABLE>
    3070:	0000009e 	muleq	r0, lr, r0
    3074:	0f6c9102 	svceq	0x006c9102
    3078:	00000af8 	strdeq	r0, [r0], -r8
    307c:	009e5c01 	addseq	r5, lr, r1, lsl #24
    3080:	91020000 	mrsls	r0, (UNDEF: 2)
    3084:	0e010f68 	cdpeq	15, 0, cr0, cr1, cr8, {3}
    3088:	5f010000 	svcpl	0x00010000
    308c:	0000009e 	muleq	r0, lr, r0
    3090:	0f649102 	svceq	0x00649102
    3094:	00000b95 	muleq	r0, r5, fp
    3098:	009e6201 	addseq	r6, lr, r1, lsl #4
    309c:	91020000 	mrsls	r0, (UNDEF: 2)
    30a0:	0dad0f60 	stceq	15, cr0, [sp, #384]!	; 0x180
    30a4:	67010000 	strvs	r0, [r1, -r0]
    30a8:	0000009e 	muleq	r0, lr, r0
    30ac:	0f5c9102 	svceq	0x005c9102
    30b0:	00000e0b 	andeq	r0, r0, fp, lsl #28
    30b4:	009e6a01 	addseq	r6, lr, r1, lsl #20
    30b8:	91020000 	mrsls	r0, (UNDEF: 2)
    30bc:	0e150f58 	mrceq	15, 0, r0, cr5, cr8, {2}
    30c0:	6d010000 	stcvs	0, cr0, [r1, #-0]
    30c4:	0000009e 	muleq	r0, lr, r0
    30c8:	0f549102 	svceq	0x00549102
    30cc:	00000b1e 	andeq	r0, r0, lr, lsl fp
    30d0:	009e7101 	addseq	r7, lr, r1, lsl #2
    30d4:	91020000 	mrsls	r0, (UNDEF: 2)
    30d8:	0b620f50 	bleq	1886e20 <startup-0x1e7791e0>
    30dc:	74010000 	strvc	r0, [r1], #-0
    30e0:	0000009e 	muleq	r0, lr, r0
    30e4:	0f4c9102 	svceq	0x004c9102
    30e8:	00000b6c 	andeq	r0, r0, ip, ror #22
    30ec:	009e7701 	addseq	r7, lr, r1, lsl #14
    30f0:	91020000 	mrsls	r0, (UNDEF: 2)
    30f4:	0e2a0f48 	cdpeq	15, 2, cr0, cr10, cr8, {2}
    30f8:	7b010000 	blvc	43100 <startup-0x1ffbcf00>
    30fc:	0000009e 	muleq	r0, lr, r0
    3100:	0f449102 	svceq	0x00449102
    3104:	00000cb2 			; <UNDEFINED> instruction: 0x00000cb2
    3108:	009e7e01 	addseq	r7, lr, r1, lsl #28
    310c:	91020000 	mrsls	r0, (UNDEF: 2)
    3110:	0b8b0f40 	bleq	fe2c6e18 <firstTime.4104+0xde2b29ac>
    3114:	81010000 	mrshi	r0, (UNDEF: 1)
    3118:	0000009e 	muleq	r0, lr, r0
    311c:	7fbc9103 	svcvc	0x00bc9103
    3120:	0014c20f 	andseq	ip, r4, pc, lsl #4
    3124:	9e850100 	rmflss	f0, f5, f0
    3128:	03000000 	movweq	r0, #0
    312c:	0f7fb891 	svceq	0x007fb891
    3130:	0000154f 	andeq	r1, r0, pc, asr #10
    3134:	009e8801 	addseq	r8, lr, r1, lsl #16
    3138:	91030000 	mrsls	r0, (UNDEF: 3)
    313c:	7e0f7fb4 	mcrvc	15, 0, r7, cr15, cr4, {5}
    3140:	01000013 	tsteq	r0, r3, lsl r0
    3144:	00009e8b 	andeq	r9, r0, fp, lsl #29
    3148:	b0910300 	addslt	r0, r1, r0, lsl #6
    314c:	e500007f 	str	r0, [r0, #-127]	; 0xffffff81
    3150:	04000008 	streq	r0, [r0], #-8
    3154:	00099e00 	andeq	r9, r9, r0, lsl #28
    3158:	9f010400 	svcls	0x00010400
    315c:	0c000000 	stceq	0, cr0, [r0], {-0}
    3160:	000017c1 	andeq	r1, r0, r1, asr #15
    3164:	200030f4 	strdcs	r3, [r0], -r4
    3168:	00000e90 	muleq	r0, r0, lr
    316c:	00000faf 	andeq	r0, r0, pc, lsr #31
    3170:	05020c02 	streq	r0, [r2, #-3074]	; 0xfffff3fe
    3174:	0000004e 	andeq	r0, r0, lr, asr #32
    3178:	00036b03 	andeq	r6, r3, r3, lsl #22
    317c:	4e070200 	cdpmi	2, 0, cr0, cr7, cr0, {0}
    3180:	00000000 	andeq	r0, r0, r0
    3184:	00073903 	andeq	r3, r7, r3, lsl #18
    3188:	4e080200 	cdpmi	2, 0, cr0, cr8, cr0, {0}
    318c:	04000000 	streq	r0, [r0], #-0
    3190:	0017ff03 	andseq	pc, r7, r3, lsl #30
    3194:	55090200 	strpl	r0, [r9, #-512]	; 0xfffffe00
    3198:	08000000 	stmdaeq	r0, {}	; <UNPREDICTABLE>
    319c:	07040400 	streq	r0, [r4, -r0, lsl #8]
    31a0:	00000399 	muleq	r0, r9, r3
    31a4:	005b0405 	subseq	r0, fp, r5, lsl #8
    31a8:	01040000 	mrseq	r0, (UNDEF: 4)
    31ac:	0004f108 	andeq	pc, r4, r8, lsl #2
    31b0:	19690600 	stmdbne	r9!, {r9, sl}^
    31b4:	0a020000 	beq	831bc <startup-0x1ff7ce44>
    31b8:	00000021 	andeq	r0, r0, r1, lsr #32
    31bc:	00003407 	andeq	r3, r0, r7, lsl #8
    31c0:	06030c00 	streq	r0, [r3], -r0, lsl #24
    31c4:	0000009e 	muleq	r0, lr, r0
    31c8:	0005e703 	andeq	lr, r5, r3, lsl #14
    31cc:	9e070300 	cdpls	3, 0, cr0, cr7, cr0, {0}
    31d0:	00000000 	andeq	r0, r0, r0
    31d4:	00003b03 	andeq	r3, r0, r3, lsl #22
    31d8:	9e080300 	cdpls	3, 0, cr0, cr8, cr0, {0}
    31dc:	04000000 	streq	r0, [r0], #-0
    31e0:	00003003 	andeq	r3, r0, r3
    31e4:	9e090300 	cdpls	3, 0, cr0, cr9, cr0, {0}
    31e8:	08000000 	stmdaeq	r0, {}	; <UNPREDICTABLE>
    31ec:	62040500 	andvs	r0, r4, #0, 10
    31f0:	06000000 	streq	r0, [r0], -r0
    31f4:	00001514 	andeq	r1, r0, r4, lsl r5
    31f8:	006d0a03 	rsbeq	r0, sp, r3, lsl #20
    31fc:	fc070000 	stc2	0, cr0, [r7], {-0}
    3200:	24000006 	strcs	r0, [r0], #-6
    3204:	01280604 			; <UNDEFINED> instruction: 0x01280604
    3208:	7f030000 	svcvc	0x00030000
    320c:	04000004 	streq	r0, [r0], #-4
    3210:	00012807 	andeq	r2, r1, r7, lsl #16
    3214:	08030000 	stmdaeq	r3, {}	; <UNPREDICTABLE>
    3218:	04000007 	streq	r0, [r0], #-7
    321c:	00012e08 	andeq	r2, r1, r8, lsl #28
    3220:	58030400 	stmdapl	r3, {sl}
    3224:	04000006 	streq	r0, [r0], #-6
    3228:	00012e09 	andeq	r2, r1, r9, lsl #28
    322c:	84030800 	strhi	r0, [r3], #-2048	; 0xfffff800
    3230:	04000006 	streq	r0, [r0], #-6
    3234:	0001460c 	andeq	r4, r1, ip, lsl #12
    3238:	52030c00 	andpl	r0, r3, #0, 24
    323c:	04000003 	streq	r0, [r0], #-3
    3240:	0001460d 	andeq	r4, r1, sp, lsl #12
    3244:	91031000 	mrsls	r1, (UNDEF: 3)
    3248:	04000004 	streq	r0, [r0], #-4
    324c:	00012e10 	andeq	r2, r1, r0, lsl lr
    3250:	70031400 	andvc	r1, r3, r0, lsl #8
    3254:	04000000 	streq	r0, [r0], #-0
    3258:	00012e11 	andeq	r2, r1, r1, lsl lr
    325c:	fa031800 	blx	c9264 <startup-0x1ff36d9c>
    3260:	04000003 	streq	r0, [r0], #-3
    3264:	00012e12 	andeq	r2, r1, r2, lsl lr
    3268:	0a031c00 	beq	ca270 <startup-0x1ff35d90>
    326c:	04000004 	streq	r0, [r0], #-4
    3270:	00012e13 	andeq	r2, r1, r3, lsl lr
    3274:	05002000 	streq	r2, [r0, #-0]
    3278:	0000a404 	andeq	sl, r0, r4, lsl #8
    327c:	05040800 	streq	r0, [r4, #-2048]	; 0xfffff800
    3280:	00746e69 	rsbseq	r6, r4, r9, ror #28
    3284:	00014009 	andeq	r4, r1, r9
    3288:	01400a00 	cmpeq	r0, r0, lsl #20
    328c:	05000000 	streq	r0, [r0, #-0]
    3290:	0000af04 	andeq	sl, r0, r4, lsl #30
    3294:	35040500 	strcc	r0, [r4, #-1280]	; 0xfffffb00
    3298:	06000001 	streq	r0, [r0], -r1
    329c:	000006fd 	strdeq	r0, [r0], -sp
    32a0:	00af1504 	adceq	r1, pc, r4, lsl #10
    32a4:	620b0000 	andvs	r0, fp, #0
    32a8:	62000001 	andvs	r0, r0, #1
    32ac:	0c000001 	stceq	0, cr0, [r0], {1}
    32b0:	4c040500 	cfstr32mi	mvfx0, [r4], {-0}
    32b4:	0d000001 	stceq	0, cr0, [r0, #-4]
    32b8:	00000574 	andeq	r0, r0, r4, ror r5
    32bc:	01571c04 	cmpeq	r7, r4, lsl #24
    32c0:	450d0000 	strmi	r0, [sp, #-0]
    32c4:	04000004 	streq	r0, [r0], #-4
    32c8:	00012e1d 	andeq	r2, r1, sp, lsl lr
    32cc:	06c00600 	strbeq	r0, [r0], r0, lsl #12
    32d0:	24050000 	strcs	r0, [r5], #-0
    32d4:	0000005b 	andeq	r0, r0, fp, asr r0
    32d8:	00017e0b 	andeq	r7, r1, fp, lsl #28
    32dc:	00019a00 	andeq	r9, r1, r0, lsl #20
    32e0:	019a0e00 	orrseq	r0, sl, r0, lsl #28
    32e4:	03ff0000 	mvnseq	r0, #0
    32e8:	07040400 	streq	r0, [r4, -r0, lsl #8]
    32ec:	00000427 	andeq	r0, r0, r7, lsr #8
    32f0:	00172e0d 	andseq	r2, r7, sp, lsl #28
    32f4:	892d0500 	pushhi	{r8, sl}
    32f8:	0d000001 	stceq	0, cr0, [r0, #-4]
    32fc:	00000258 	andeq	r0, r0, r8, asr r2
    3300:	01892e05 	orreq	r2, r9, r5, lsl #28
    3304:	ff0d0000 			; <UNDEFINED> instruction: 0xff0d0000
    3308:	05000004 	streq	r0, [r0, #-4]
    330c:	0001892f 	andeq	r8, r1, pc, lsr #18
    3310:	037b0d00 	cmneq	fp, #0, 26
    3314:	30050000 	andcc	r0, r5, r0
    3318:	00000189 	andeq	r0, r0, r9, lsl #3
    331c:	0002e00d 	andeq	lr, r2, sp
    3320:	89310500 	ldmdbhi	r1!, {r8, sl}
    3324:	0d000001 	stceq	0, cr0, [r0, #-4]
    3328:	000006de 	ldrdeq	r0, [r0], -lr
    332c:	01893205 	orreq	r3, r9, r5, lsl #4
    3330:	ce0d0000 	cdpgt	0, 0, cr0, cr13, cr0, {0}
    3334:	05000006 	streq	r0, [r0, #-6]
    3338:	00018933 	andeq	r8, r1, r3, lsr r9
    333c:	01ac0f00 			; <UNDEFINED> instruction: 0x01ac0f00
    3340:	2b010000 	blcs	43348 <startup-0x1ffbccb8>
    3344:	6afc0305 	bvs	fff03f60 <firstTime.4104+0xdfeefaf4>
    3348:	b70f2000 	strlt	r2, [pc, -r0]
    334c:	01000001 	tsteq	r0, r1
    3350:	fc03052c 	stc2	5, cr0, [r3], {44}	; 0x2c
    3354:	0f20005e 	svceq	0x0020005e
    3358:	000001c2 	andeq	r0, r0, r2, asr #3
    335c:	03052d01 	movweq	r2, #23809	; 0x5d01
    3360:	200066fc 	strdcs	r6, [r0], -ip
    3364:	0001cd0f 	andeq	ip, r1, pc, lsl #26
    3368:	052e0100 	streq	r0, [lr, #-256]!	; 0xffffff00
    336c:	006efc03 	rsbeq	pc, lr, r3, lsl #24
    3370:	01a10f20 			; <UNDEFINED> instruction: 0x01a10f20
    3374:	2f010000 	svccs	0x00010000
    3378:	62fc0305 	rscsvs	r0, ip, #335544320	; 0x14000000
    337c:	d80f2000 	stmdale	pc, {sp}	; <UNPREDICTABLE>
    3380:	01000001 	tsteq	r0, r1
    3384:	fc030530 	stc2	5, cr0, [r3], {48}	; 0x30
    3388:	0f20005a 	svceq	0x0020005a
    338c:	000001e3 	andeq	r0, r0, r3, ror #3
    3390:	03053101 	movweq	r3, #20737	; 0x5101
    3394:	200072fc 	strdcs	r7, [r0], -ip
    3398:	00176410 	andseq	r6, r7, r0, lsl r4
    339c:	01b30100 			; <UNDEFINED> instruction: 0x01b30100
    33a0:	20003f1a 	andcs	r3, r0, sl, lsl pc
    33a4:	0000006a 	andeq	r0, r0, sl, rrx
    33a8:	026f9c01 	rsbeq	r9, pc, #256	; 0x100
    33ac:	5e110000 	cdppl	0, 1, cr0, cr1, cr0, {0}
    33b0:	01000018 	tsteq	r0, r8, lsl r0
    33b4:	012e01b3 			; <UNDEFINED> instruction: 0x012e01b3
    33b8:	91020000 	mrsls	r0, (UNDEF: 2)
    33bc:	01100074 	tsteq	r0, r4, ror r0
    33c0:	01000017 	tsteq	r0, r7, lsl r0
    33c4:	3e9801ab 	fmlcc<illegal precision>p	f0, f0, #3.0
    33c8:	00822000 	addeq	r2, r2, r0
    33cc:	9c010000 	stcls	0, cr0, [r1], {-0}
    33d0:	000002a4 	andeq	r0, r0, r4, lsr #5
    33d4:	00173f11 	andseq	r3, r7, r1, lsl pc
    33d8:	01ab0100 			; <UNDEFINED> instruction: 0x01ab0100
    33dc:	00000162 	andeq	r0, r0, r2, ror #2
    33e0:	126c9102 	rsbne	r9, ip, #-2147483648	; 0x80000000
    33e4:	00000499 	muleq	r0, r9, r4
    33e8:	2e01ac01 	cdpcs	12, 0, cr10, cr1, cr1, {0}
    33ec:	02000001 	andeq	r0, r0, #1
    33f0:	13007491 	movwne	r7, #1169	; 0x491
    33f4:	00001816 	andeq	r1, r0, r6, lsl r8
    33f8:	9001a101 	andls	sl, r1, r1, lsl #2
    33fc:	0820003d 	stmdaeq	r0!, {r0, r2, r3, r4, r5}
    3400:	01000001 	tsteq	r0, r1
    3404:	0002c89c 	muleq	r2, ip, r8
    3408:	00691400 	rsbeq	r1, r9, r0, lsl #8
    340c:	2e01a201 	cdpcs	2, 0, cr10, cr1, cr1, {0}
    3410:	02000001 	andeq	r0, r0, #1
    3414:	10007491 	mulne	r0, r1, r4
    3418:	0000179c 	muleq	r0, ip, r7
    341c:	60017b01 	andvs	r7, r1, r1, lsl #22
    3420:	3020003c 	eorcc	r0, r0, ip, lsr r0
    3424:	01000001 	tsteq	r0, r1
    3428:	00033c9c 	muleq	r3, ip, ip
    342c:	00781400 	rsbseq	r1, r8, r0, lsl #8
    3430:	2e017c01 	cdpcs	12, 0, cr7, cr1, cr1, {0}
    3434:	02000001 	andeq	r0, r0, #1
    3438:	79146c91 	ldmdbvc	r4, {r0, r4, r7, sl, fp, sp, lr}
    343c:	017d0100 	cmneq	sp, r0, lsl #2
    3440:	0000012e 	andeq	r0, r0, lr, lsr #2
    3444:	12689102 	rsbne	r9, r8, #-2147483648	; 0x80000000
    3448:	0000036b 	andeq	r0, r0, fp, ror #6
    344c:	2e017e01 	cdpcs	14, 0, cr7, cr1, cr1, {0}
    3450:	02000001 	andeq	r0, r0, #1
    3454:	39126491 	ldmdbcc	r2, {r0, r4, r7, sl, sp, lr}
    3458:	01000007 	tsteq	r0, r7
    345c:	012e017f 			; <UNDEFINED> instruction: 0x012e017f
    3460:	91020000 	mrsls	r0, (UNDEF: 2)
    3464:	32781460 	rsbscc	r1, r8, #96, 8	; 0x60000000
    3468:	01810100 	orreq	r0, r1, r0, lsl #2
    346c:	0000012e 	andeq	r0, r0, lr, lsr #2
    3470:	155c9102 	ldrbne	r9, [ip, #-258]	; 0xfffffefe
    3474:	85010069 	strhi	r0, [r1, #-105]	; 0xffffff97
    3478:	00012e01 	andeq	r2, r1, r1, lsl #28
    347c:	006b1400 	rsbeq	r1, fp, r0, lsl #8
    3480:	2e018601 	cfmadd32cs	mvax0, mvfx8, mvfx1, mvfx1
    3484:	02000001 	andeq	r0, r0, #1
    3488:	10005891 	mulne	r0, r1, r8
    348c:	000018a8 	andeq	r1, r0, r8, lsr #17
    3490:	0e017001 	cdpeq	0, 0, cr7, cr1, cr1, {0}
    3494:	5220003c 	eorpl	r0, r0, #60	; 0x3c
    3498:	01000000 	mrseq	r0, (UNDEF: 0)
    349c:	0003a59c 	muleq	r3, ip, r5
    34a0:	00781600 	rsbseq	r1, r8, r0, lsl #12
    34a4:	2e017001 	cdpcs	0, 0, cr7, cr1, cr1, {0}
    34a8:	02000001 	andeq	r0, r0, #1
    34ac:	79166c91 	ldmdbvc	r6, {r0, r4, r7, sl, fp, sp, lr}
    34b0:	01700100 	cmneq	r0, r0, lsl #2
    34b4:	0000012e 	andeq	r0, r0, lr, lsr #2
    34b8:	11689102 	cmnne	r8, r2, lsl #2
    34bc:	0000036b 	andeq	r0, r0, fp, ror #6
    34c0:	2e017001 	cdpcs	0, 0, cr7, cr1, cr1, {0}
    34c4:	02000001 	andeq	r0, r0, #1
    34c8:	39116491 	ldmdbcc	r1, {r0, r4, r7, sl, sp, lr}
    34cc:	01000007 	tsteq	r0, r7
    34d0:	012e0170 			; <UNDEFINED> instruction: 0x012e0170
    34d4:	91020000 	mrsls	r0, (UNDEF: 2)
    34d8:	00691460 	rsbeq	r1, r9, r0, ror #8
    34dc:	2e017101 	adfcss	f7, f1, f1
    34e0:	02000001 	andeq	r0, r0, #1
    34e4:	6a147491 	bvs	520730 <startup-0x1fadf8d0>
    34e8:	01720100 	cmneq	r2, r0, lsl #2
    34ec:	0000012e 	andeq	r0, r0, lr, lsr #2
    34f0:	00709102 	rsbseq	r9, r0, r2, lsl #2
    34f4:	00184b10 	andseq	r4, r8, r0, lsl fp
    34f8:	01660100 	cmneq	r6, r0, lsl #2
    34fc:	20003bbc 			; <UNDEFINED> instruction: 0x20003bbc
    3500:	00000052 	andeq	r0, r0, r2, asr r0
    3504:	040e9c01 	streq	r9, [lr], #-3073	; 0xfffff3ff
    3508:	78160000 	ldmdavc	r6, {}	; <UNPREDICTABLE>
    350c:	01660100 	cmneq	r6, r0, lsl #2
    3510:	0000012e 	andeq	r0, r0, lr, lsr #2
    3514:	166c9102 	strbtne	r9, [ip], -r2, lsl #2
    3518:	66010079 			; <UNDEFINED> instruction: 0x66010079
    351c:	00012e01 	andeq	r2, r1, r1, lsl #28
    3520:	68910200 	ldmvs	r1, {r9}
    3524:	00036b11 	andeq	r6, r3, r1, lsl fp
    3528:	01660100 	cmneq	r6, r0, lsl #2
    352c:	0000012e 	andeq	r0, r0, lr, lsr #2
    3530:	11649102 	cmnne	r4, r2, lsl #2
    3534:	00000739 	andeq	r0, r0, r9, lsr r7
    3538:	2e016601 	cfmadd32cs	mvax0, mvfx6, mvfx1, mvfx1
    353c:	02000001 	andeq	r0, r0, #1
    3540:	69146091 	ldmdbvs	r4, {r0, r4, r7, sp, lr}
    3544:	01670100 	cmneq	r7, r0, lsl #2
    3548:	0000012e 	andeq	r0, r0, lr, lsr #2
    354c:	14749102 	ldrbtne	r9, [r4], #-258	; 0xfffffefe
    3550:	6801006a 	stmdavs	r1, {r1, r3, r5, r6}
    3554:	00012e01 	andeq	r2, r1, r1, lsl #28
    3558:	70910200 	addsvc	r0, r1, r0, lsl #4
    355c:	176f1000 	strbne	r1, [pc, -r0]!
    3560:	50010000 	andpl	r0, r1, r0
    3564:	003aa201 	eorseq	sl, sl, r1, lsl #4
    3568:	00011a20 	andeq	r1, r1, r0, lsr #20
    356c:	b99c0100 	ldmiblt	ip, {r8}
    3570:	16000004 	strne	r0, [r0], -r4
    3574:	50010073 	andpl	r0, r1, r3, ror r0
    3578:	00009e01 	andeq	r9, r0, r1, lsl #28
    357c:	54910200 	ldrpl	r0, [r1], #512	; 0x200
    3580:	01007816 	tsteq	r0, r6, lsl r8
    3584:	012e0150 			; <UNDEFINED> instruction: 0x012e0150
    3588:	91020000 	mrsls	r0, (UNDEF: 2)
    358c:	00791650 	rsbseq	r1, r9, r0, asr r6
    3590:	2e015001 	cdpcs	0, 0, cr5, cr1, cr1, {0}
    3594:	02000001 	andeq	r0, r0, #1
    3598:	73164c91 	tstvc	r6, #37120	; 0x9100
    359c:	01007465 	tsteq	r0, r5, ror #8
    35a0:	012e0150 			; <UNDEFINED> instruction: 0x012e0150
    35a4:	91020000 	mrsls	r0, (UNDEF: 2)
    35a8:	18101148 	ldmdane	r0, {r3, r6, r8, ip}
    35ac:	50010000 	andpl	r0, r1, r0
    35b0:	00012e01 	andeq	r2, r1, r1, lsl #28
    35b4:	00910200 	addseq	r0, r1, r0, lsl #4
    35b8:	01006914 	tsteq	r0, r4, lsl r9
    35bc:	012e0151 			; <UNDEFINED> instruction: 0x012e0151
    35c0:	91020000 	mrsls	r0, (UNDEF: 2)
    35c4:	006a146c 	rsbeq	r1, sl, ip, ror #8
    35c8:	2e015101 	adfcss	f5, f1, f1
    35cc:	02000001 	andeq	r0, r0, #1
    35d0:	6b146891 	blvs	51d81c <startup-0x1fae27e4>
    35d4:	01510100 	cmpeq	r1, r0, lsl #2
    35d8:	0000012e 	andeq	r0, r0, lr, lsr #2
    35dc:	12649102 	rsbne	r9, r4, #-2147483648	; 0x80000000
    35e0:	00001883 	andeq	r1, r0, r3, lsl #17
    35e4:	2e015101 	adfcss	f5, f1, f1
    35e8:	02000001 	andeq	r0, r0, #1
    35ec:	da176091 	ble	5db838 <startup-0x1fa247c8>
    35f0:	bc20003a 	stclt	0, cr0, [r0], #-232	; 0xffffff18
    35f4:	12000000 	andne	r0, r0, #0
    35f8:	0000187e 	andeq	r1, r0, lr, ror r8
    35fc:	5b015801 	blpl	59608 <startup-0x1ffa69f8>
    3600:	02000000 	andeq	r0, r0, #0
    3604:	00005f91 	muleq	r0, r1, pc	; <UNPREDICTABLE>
    3608:	00174410 	andseq	r4, r7, r0, lsl r4
    360c:	013b0100 	teqeq	fp, r0, lsl #2
    3610:	200039cc 	andcs	r3, r0, ip, asr #19
    3614:	000000d6 	ldrdeq	r0, [r0], -r6
    3618:	05229c01 	streq	r9, [r2, #-3073]!	; 0xfffff3ff
    361c:	f3110000 	vhadd.u16	d0, d1, d0
    3620:	01000016 	tsteq	r0, r6, lsl r0
    3624:	0522013b 	streq	r0, [r2, #-315]!	; 0xfffffec5
    3628:	91020000 	mrsls	r0, (UNDEF: 2)
    362c:	00691464 	rsbeq	r1, r9, r4, ror #8
    3630:	7e013c01 	cdpvc	12, 0, cr3, cr1, cr1, {0}
    3634:	02000001 	andeq	r0, r0, #1
    3638:	6a147791 	bvs	521484 <startup-0x1fadeb7c>
    363c:	013c0100 	teqeq	ip, r0, lsl #2
    3640:	0000017e 	andeq	r0, r0, lr, ror r1
    3644:	12769102 	rsbsne	r9, r6, #-2147483648	; 0x80000000
    3648:	00001ac0 	andeq	r1, r0, r0, asr #21
    364c:	7e013c01 	cdpvc	12, 0, cr3, cr1, cr1, {0}
    3650:	02000001 	andeq	r0, r0, #1
    3654:	63146f91 	tstvs	r4, #580	; 0x244
    3658:	013c0100 	teqeq	ip, r0, lsl #2
    365c:	0000017e 	andeq	r0, r0, lr, ror r1
    3660:	14759102 	ldrbtne	r9, [r5], #-258	; 0xfffffefe
    3664:	3d01006b 	stccc	0, cr0, [r1, #-428]	; 0xfffffe54
    3668:	00004e01 	andeq	r4, r0, r1, lsl #28
    366c:	70910200 	addsvc	r0, r1, r0, lsl #4
    3670:	7e040500 	cfsh32vc	mvfx0, mvfx4, #0
    3674:	10000001 	andne	r0, r0, r1
    3678:	000016fa 	strdeq	r1, [r0], -sl
    367c:	2e011301 	cdpcs	3, 0, cr1, cr1, cr1, {0}
    3680:	9e200038 	mcrls	0, 1, r0, cr0, cr8, {1}
    3684:	01000001 	tsteq	r0, r1
    3688:	0005a29c 	muleq	r5, ip, r2
    368c:	00781600 	rsbseq	r1, r8, r0, lsl #12
    3690:	2e011301 	cdpcs	3, 0, cr1, cr1, cr1, {0}
    3694:	02000001 	andeq	r0, r0, #1
    3698:	79166491 	ldmdbvc	r6, {r0, r4, r7, sl, sp, lr}
    369c:	01130100 	tsteq	r3, r0, lsl #2
    36a0:	0000012e 	andeq	r0, r0, lr, lsr #2
    36a4:	16609102 	strbtne	r9, [r0], -r2, lsl #2
    36a8:	00746573 	rsbseq	r6, r4, r3, ror r5
    36ac:	2e011301 	cdpcs	3, 0, cr1, cr1, cr1, {0}
    36b0:	02000001 	andeq	r0, r0, #1
    36b4:	59125c91 	ldmdbpl	r2, {r0, r4, r7, sl, fp, ip, lr}
    36b8:	01000018 	tsteq	r0, r8, lsl r0
    36bc:	017e0114 	cmneq	lr, r4, lsl r1
    36c0:	91020000 	mrsls	r0, (UNDEF: 2)
    36c4:	00631477 	rsbeq	r1, r3, r7, ror r4
    36c8:	7e011401 	cdpvc	4, 0, cr1, cr1, cr1, {0}
    36cc:	02000001 	andeq	r0, r0, #1
    36d0:	c0126f91 	mulsgt	r2, r1, pc	; <UNPREDICTABLE>
    36d4:	0100001a 	tsteq	r0, sl, lsl r0
    36d8:	017e0114 	cmneq	lr, r4, lsl r1
    36dc:	91020000 	mrsls	r0, (UNDEF: 2)
    36e0:	18b71276 	ldmne	r7!, {r1, r2, r4, r5, r6, r9, ip}
    36e4:	15010000 	strne	r0, [r1, #-0]
    36e8:	00012e01 	andeq	r2, r1, r1, lsl #28
    36ec:	70910200 	addsvc	r0, r1, r0, lsl #4
    36f0:	18cf1000 	stmiane	pc, {ip}^	; <UNPREDICTABLE>
    36f4:	07010000 	streq	r0, [r1, -r0]
    36f8:	0037e001 	eorseq	lr, r7, r1
    36fc:	00004e20 	andeq	r4, r0, r0, lsr #28
    3700:	e69c0100 	ldr	r0, [ip], r0, lsl #2
    3704:	11000005 	tstne	r0, r5
    3708:	00001795 	muleq	r0, r5, r7
    370c:	2e010701 	cdpcs	7, 0, cr0, cr1, cr1, {0}
    3710:	02000001 	andeq	r0, r0, #1
    3714:	72146c91 	andsvc	r6, r4, #37120	; 0x9100
    3718:	0100776f 	tsteq	r0, pc, ror #14
    371c:	012e0108 			; <UNDEFINED> instruction: 0x012e0108
    3720:	91020000 	mrsls	r0, (UNDEF: 2)
    3724:	6f631474 	svcvs	0x00631474
    3728:	0801006c 	stmdaeq	r1, {r2, r3, r5, r6}
    372c:	00012e01 	andeq	r2, r1, r1, lsl #28
    3730:	70910200 	addsvc	r0, r1, r0, lsl #4
    3734:	17391800 	ldrne	r1, [r9, -r0, lsl #16]!
    3738:	de010000 	cdple	0, 0, cr0, cr1, cr0, {0}
    373c:	20003660 	andcs	r3, r0, r0, ror #12
    3740:	00000180 	andeq	r0, r0, r0, lsl #3
    3744:	064c9c01 	strbeq	r9, [ip], -r1, lsl #24
    3748:	78190000 	ldmdavc	r9, {}	; <UNPREDICTABLE>
    374c:	2ede0100 	cdpcs	1, 13, cr0, cr14, cr0, {0}
    3750:	02000001 	andeq	r0, r0, #1
    3754:	79196c91 	ldmdbvc	r9, {r0, r4, r7, sl, fp, sp, lr}
    3758:	2ede0100 	cdpcs	1, 13, cr0, cr14, cr0, {0}
    375c:	02000001 	andeq	r0, r0, #1
    3760:	73196891 	tstvc	r9, #9502720	; 0x910000
    3764:	01007465 	tsteq	r0, r5, ror #8
    3768:	00012ede 	ldrdeq	r2, [r1], -lr
    376c:	64910200 	ldrvs	r0, [r1], #512	; 0x200
    3770:	0018101a 	andseq	r1, r8, sl, lsl r0
    3774:	2ede0100 	cdpcs	1, 13, cr0, cr14, cr0, {0}
    3778:	02000001 	andeq	r0, r0, #1
    377c:	591b6091 	ldmdbpl	fp, {r0, r4, r7, sp, lr}
    3780:	01000018 	tsteq	r0, r8, lsl r0
    3784:	00017edf 	ldrdeq	r7, [r1], -pc	; <UNPREDICTABLE>
    3788:	77910200 	ldrvc	r0, [r1, r0, lsl #4]
    378c:	0018b71b 	andseq	fp, r8, fp, lsl r7
    3790:	2ee00100 	cdpcs	1, 14, cr0, cr0, cr0, {0}
    3794:	02000001 	andeq	r0, r0, #1
    3798:	1c007091 	stcne	0, cr7, [r0], {145}	; 0x91
    379c:	00001916 	andeq	r1, r0, r6, lsl r9
    37a0:	35fad101 	ldrbcc	sp, [sl, #257]!	; 0x101
    37a4:	00662000 	rsbeq	r2, r6, r0
    37a8:	9c010000 	stcls	0, cr0, [r1], {-0}
    37ac:	00000688 	andeq	r0, r0, r8, lsl #13
    37b0:	0016e11b 	andseq	lr, r6, fp, lsl r1
    37b4:	7ed20100 	cdpvc	1, 13, cr0, cr2, cr0, {0}
    37b8:	02000001 	andeq	r0, r0, #1
    37bc:	08177791 	ldmdaeq	r7, {r0, r4, r7, r8, r9, sl, ip, sp, lr}
    37c0:	3e200036 	mcrcc	0, 1, r0, cr0, cr6, {1}
    37c4:	1d000000 	stcne	0, cr0, [r0, #-0]
    37c8:	00646461 	rsbeq	r6, r4, r1, ror #8
    37cc:	017ed601 	cmneq	lr, r1, lsl #12
    37d0:	91020000 	mrsls	r0, (UNDEF: 2)
    37d4:	1e000076 	mcrne	0, 0, r0, cr0, cr6, {3}
    37d8:	00001903 	andeq	r1, r0, r3, lsl #18
    37dc:	358cbd01 	strcc	fp, [ip, #3329]	; 0xd01
    37e0:	006e2000 	rsbeq	r2, lr, r0
    37e4:	9c010000 	stcls	0, cr0, [r1], {-0}
    37e8:	00186b1c 	andseq	r6, r8, ip, lsl fp
    37ec:	46b50100 	ldrtmi	r0, [r5], r0, lsl #2
    37f0:	46200035 			; <UNDEFINED> instruction: 0x46200035
    37f4:	01000000 	mrseq	r0, (UNDEF: 0)
    37f8:	0006cb9c 	muleq	r6, ip, fp
    37fc:	17201a00 	strne	r1, [r0, -r0, lsl #20]!
    3800:	b5010000 	strlt	r0, [r1, #-0]
    3804:	0000017e 	andeq	r0, r0, lr, ror r1
    3808:	1a779102 	bne	1de7c18 <startup-0x1e2183e8>
    380c:	00001ac0 	andeq	r1, r0, r0, asr #21
    3810:	017eb501 	cmneq	lr, r1, lsl #10
    3814:	91020000 	mrsls	r0, (UNDEF: 2)
    3818:	121c0076 	andsne	r0, ip, #118	; 0x76
    381c:	01000017 	tsteq	r0, r7, lsl r0
    3820:	003500ae 	eorseq	r0, r5, lr, lsr #1
    3824:	00004620 	andeq	r4, r0, r0, lsr #12
    3828:	fd9c0100 	ldc2	1, cr0, [ip]
    382c:	1a000006 	bne	384c <startup-0x1fffc7b4>
    3830:	00001720 	andeq	r1, r0, r0, lsr #14
    3834:	017eae01 	cmneq	lr, r1, lsl #28
    3838:	91020000 	mrsls	r0, (UNDEF: 2)
    383c:	1ac01a77 	bne	ff00a220 <firstTime.4104+0xdeff5db4>
    3840:	ae010000 	cdpge	0, 0, cr0, cr1, cr0, {0}
    3844:	0000017e 	andeq	r0, r0, lr, ror r1
    3848:	00769102 	rsbseq	r9, r6, r2, lsl #2
    384c:	0017871c 	andseq	r8, r7, ip, lsl r7
    3850:	82990100 	addshi	r0, r9, #0, 2
    3854:	7e200034 	mcrvc	0, 1, r0, cr0, cr4, {1}
    3858:	01000000 	mrseq	r0, (UNDEF: 0)
    385c:	00072f9c 	muleq	r7, ip, pc	; <UNPREDICTABLE>
    3860:	06681a00 	strbteq	r1, [r8], -r0, lsl #20
    3864:	99010000 	stmdbls	r1, {}	; <UNPREDICTABLE>
    3868:	0000017e 	andeq	r0, r0, lr, ror r1
    386c:	1a779102 	bne	1de7c7c <startup-0x1e218384>
    3870:	00001ac0 	andeq	r1, r0, r0, asr #21
    3874:	017e9901 	cmneq	lr, r1, lsl #18
    3878:	91020000 	mrsls	r0, (UNDEF: 2)
    387c:	f21f0076 	vqadd.s16	q0, <illegal reg q7.5>, q11
    3880:	01000017 	tsteq	r0, r7, lsl r0
    3884:	00012e94 	muleq	r1, r4, lr
    3888:	00345800 	eorseq	r5, r4, r0, lsl #16
    388c:	00002a20 	andeq	r2, r0, r0, lsr #20
    3890:	579c0100 	ldrpl	r0, [ip, r0, lsl #2]
    3894:	1a000007 	bne	38b8 <startup-0x1fffc748>
    3898:	00001ac0 	andeq	r1, r0, r0, asr #21
    389c:	017e9401 	cmneq	lr, r1, lsl #8
    38a0:	91020000 	mrsls	r0, (UNDEF: 2)
    38a4:	e6200077 			; <UNDEFINED> instruction: 0xe6200077
    38a8:	01000016 	tsteq	r0, r6, lsl r0
    38ac:	00017e7b 	andeq	r7, r1, fp, ror lr
    38b0:	0033c400 	eorseq	ip, r3, r0, lsl #8
    38b4:	00009420 	andeq	r9, r0, r0, lsr #8
    38b8:	8c9c0100 	ldfhis	f0, [ip], {0}
    38bc:	1a000007 	bne	38e0 <startup-0x1fffc720>
    38c0:	00001ac0 	andeq	r1, r0, r0, asr #21
    38c4:	017e7b01 	cmneq	lr, r1, lsl #22
    38c8:	91020000 	mrsls	r0, (UNDEF: 2)
    38cc:	76721d6f 	ldrbtvc	r1, [r2], -pc, ror #26
    38d0:	5b840100 	blpl	fe103cd8 <firstTime.4104+0xde0ef86c>
    38d4:	02000000 	andeq	r0, r0, #0
    38d8:	1c007791 	stcne	7, cr7, [r0], {145}	; 0x91
    38dc:	000018db 	ldrdeq	r1, [r0], -fp
    38e0:	33566501 	cmpcc	r6, #4194304	; 0x400000
    38e4:	006e2000 	rsbeq	r2, lr, r0
    38e8:	9c010000 	stcls	0, cr0, [r1], {-0}
    38ec:	000007ae 	andeq	r0, r0, lr, lsr #15
    38f0:	0100631d 	tsteq	r0, sp, lsl r3
    38f4:	00017e66 	andeq	r7, r1, r6, ror #28
    38f8:	77910200 	ldrvc	r0, [r1, r0, lsl #4]
    38fc:	18bd1c00 	popne	{sl, fp, ip}
    3900:	50010000 	andpl	r0, r1, r0
    3904:	200032f0 	strdcs	r3, [r0], -r0
    3908:	00000066 	andeq	r0, r0, r6, rrx
    390c:	07d29c01 	ldrbeq	r9, [r2, r1, lsl #24]
    3910:	c01a0000 	andsgt	r0, sl, r0
    3914:	0100001a 	tsteq	r0, sl, lsl r0
    3918:	00017e50 	andeq	r7, r1, r0, asr lr
    391c:	77910200 	ldrvc	r0, [r1, r0, lsl #4]
    3920:	17aa2100 	strne	r2, [sl, r0, lsl #2]!
    3924:	49010000 	stmdbmi	r1, {}	; <UNPREDICTABLE>
    3928:	20003298 	mulcs	r0, r8, r2
    392c:	00000058 	andeq	r0, r0, r8, asr r0
    3930:	08009c01 	stmdaeq	r0, {r0, sl, fp, ip, pc}
    3934:	78190000 	ldmdavc	r9, {}	; <UNPREDICTABLE>
    3938:	7e490100 	dvfvce	f0, f1, f0
    393c:	02000001 	andeq	r0, r0, #1
    3940:	631d6f91 	tstvs	sp, #580	; 0x244
    3944:	7e4a0100 	dvfvce	f0, f2, f0
    3948:	02000001 	andeq	r0, r0, #1
    394c:	21007791 			; <UNDEFINED> instruction: 0x21007791
    3950:	0000182a 	andeq	r1, r0, sl, lsr #16
    3954:	32484101 	subcc	r4, r8, #1073741824	; 0x40000000
    3958:	00502000 	subseq	r2, r0, r0
    395c:	9c010000 	stcls	0, cr0, [r1], {-0}
    3960:	0000082e 	andeq	r0, r0, lr, lsr #16
    3964:	01007819 	tsteq	r0, r9, lsl r8
    3968:	00017e41 	andeq	r7, r1, r1, asr #28
    396c:	6f910200 	svcvs	0x00910200
    3970:	0100631d 	tsteq	r0, sp, lsl r3
    3974:	00017e42 	andeq	r7, r1, r2, asr #28
    3978:	77910200 	ldrvc	r0, [r1, r0, lsl #4]
    397c:	18921e00 	ldmne	r2, {r9, sl, fp, ip}
    3980:	3a010000 	bcc	43988 <startup-0x1ffbc678>
    3984:	20003218 	andcs	r3, r0, r8, lsl r2
    3988:	00000030 	andeq	r0, r0, r0, lsr r0
    398c:	281e9c01 	ldmdacs	lr, {r0, sl, fp, ip, pc}
    3990:	01000017 	tsteq	r0, r7, lsl r0
    3994:	00320037 	eorseq	r0, r2, r7, lsr r0
    3998:	00001820 	andeq	r1, r0, r0, lsr #16
    399c:	189c0100 	ldmne	ip, {r8}
    39a0:	000018ee 	andeq	r1, r0, lr, ror #17
    39a4:	31ce3201 	biccc	r3, lr, r1, lsl #4
    39a8:	00322000 	eorseq	r2, r2, r0
    39ac:	9c010000 	stcls	0, cr0, [r1], {-0}
    39b0:	00000880 	andeq	r0, r0, r0, lsl #17
    39b4:	0016f31a 	andseq	pc, r6, sl, lsl r3	; <UNPREDICTABLE>
    39b8:	22320100 	eorscs	r0, r2, #0, 2
    39bc:	02000005 	andeq	r0, r0, #5
    39c0:	691d6c91 	ldmdbvs	sp, {r0, r4, r7, sl, fp, sp, lr}
    39c4:	2e330100 	rsfcss	f0, f3, f0
    39c8:	02000001 	andeq	r0, r0, #1
    39cc:	1c007491 	cfstrsne	mvf7, [r0], {145}	; 0x91
    39d0:	00001758 	andeq	r1, r0, r8, asr r7
    39d4:	31a82101 			; <UNDEFINED> instruction: 0x31a82101
    39d8:	00262000 	eoreq	r2, r6, r0
    39dc:	9c010000 	stcls	0, cr0, [r1], {-0}
    39e0:	000008a3 	andeq	r0, r0, r3, lsr #17
    39e4:	00736d19 	rsbseq	r6, r3, r9, lsl sp
    39e8:	004e2101 	subeq	r2, lr, r1, lsl #2
    39ec:	91020000 	mrsls	r0, (UNDEF: 2)
    39f0:	041c0074 	ldreq	r0, [ip], #-116	; 0xffffff8c
    39f4:	01000018 	tsteq	r0, r8, lsl r0
    39f8:	00317c18 	eorseq	r7, r1, r8, lsl ip
    39fc:	00002c20 	andeq	r2, r0, r0, lsr #24
    3a00:	c69c0100 	ldrgt	r0, [ip], r0, lsl #2
    3a04:	19000008 	stmdbne	r0, {r3}
    3a08:	01007375 	tsteq	r0, r5, ror r3
    3a0c:	00004e18 	andeq	r4, r0, r8, lsl lr
    3a10:	74910200 	ldrvc	r0, [r1], #512	; 0x200
    3a14:	177b2200 	ldrbne	r2, [fp, -r0, lsl #4]!
    3a18:	0e010000 	cdpeq	0, 0, cr0, cr1, cr0, {0}
    3a1c:	20003138 	andcs	r3, r0, r8, lsr r1
    3a20:	00000044 	andeq	r0, r0, r4, asr #32
    3a24:	3f229c01 	svccc	0x00229c01
    3a28:	01000018 	tsteq	r0, r8, lsl r0
    3a2c:	0030f404 	eorseq	pc, r0, r4, lsl #8
    3a30:	00004420 	andeq	r4, r0, r0, lsr #8
    3a34:	009c0100 	addseq	r0, ip, r0, lsl #2
    3a38:	00000100 	andeq	r0, r0, r0, lsl #2
    3a3c:	0bc00004 	bleq	ff003a54 <firstTime.4104+0xdefef5e8>
    3a40:	01040000 	mrseq	r0, (UNDEF: 4)
    3a44:	0000009f 	muleq	r0, pc, r0	; <UNPREDICTABLE>
    3a48:	0019360c 	andseq	r3, r9, ip, lsl #12
    3a4c:	003f8400 	eorseq	r8, pc, r0, lsl #8
    3a50:	00002820 	andeq	r2, r0, r0, lsr #16
    3a54:	00132500 	andseq	r2, r3, r0, lsl #10
    3a58:	020c0200 	andeq	r0, ip, #0, 4
    3a5c:	00004e05 	andeq	r4, r0, r5, lsl #28
    3a60:	036b0300 	cmneq	fp, #0, 6
    3a64:	07020000 	streq	r0, [r2, -r0]
    3a68:	0000004e 	andeq	r0, r0, lr, asr #32
    3a6c:	07390300 	ldreq	r0, [r9, -r0, lsl #6]!
    3a70:	08020000 	stmdaeq	r2, {}	; <UNPREDICTABLE>
    3a74:	0000004e 	andeq	r0, r0, lr, asr #32
    3a78:	17ff0304 	ldrbne	r0, [pc, r4, lsl #6]!
    3a7c:	09020000 	stmdbeq	r2, {}	; <UNPREDICTABLE>
    3a80:	00000055 	andeq	r0, r0, r5, asr r0
    3a84:	04040008 	streq	r0, [r4], #-8
    3a88:	00039907 	andeq	r9, r3, r7, lsl #18
    3a8c:	5b040500 	blpl	104e94 <startup-0x1fefb16c>
    3a90:	04000000 	streq	r0, [r0], #-0
    3a94:	04f10801 	ldrbteq	r0, [r1], #2049	; 0x801
    3a98:	69060000 	stmdbvs	r6, {}	; <UNPREDICTABLE>
    3a9c:	02000019 	andeq	r0, r0, #25
    3aa0:	0000210a 	andeq	r2, r0, sl, lsl #2
    3aa4:	00340700 	eorseq	r0, r4, r0, lsl #14
    3aa8:	030c0000 	movweq	r0, #49152	; 0xc000
    3aac:	00009e06 	andeq	r9, r0, r6, lsl #28
    3ab0:	05e70300 	strbeq	r0, [r7, #768]!	; 0x300
    3ab4:	07030000 	streq	r0, [r3, -r0]
    3ab8:	0000009e 	muleq	r0, lr, r0
    3abc:	003b0300 	eorseq	r0, fp, r0, lsl #6
    3ac0:	08030000 	stmdaeq	r3, {}	; <UNPREDICTABLE>
    3ac4:	0000009e 	muleq	r0, lr, r0
    3ac8:	00300304 	eorseq	r0, r0, r4, lsl #6
    3acc:	09030000 	stmdbeq	r3, {}	; <UNPREDICTABLE>
    3ad0:	0000009e 	muleq	r0, lr, r0
    3ad4:	04050008 	streq	r0, [r5], #-8
    3ad8:	00000062 	andeq	r0, r0, r2, rrx
    3adc:	00151406 	andseq	r1, r5, r6, lsl #8
    3ae0:	6d0a0300 	stcvs	3, cr0, [sl, #-0]
    3ae4:	08000000 	stmdaeq	r0, {}	; <UNPREDICTABLE>
    3ae8:	0000192b 	andeq	r1, r0, fp, lsr #18
    3aec:	3f840301 	svccc	0x00840301
    3af0:	00282000 	eoreq	r2, r8, r0
    3af4:	9c010000 	stcls	0, cr0, [r1], {-0}
    3af8:	000000fd 	strdeq	r0, [r0], -sp
    3afc:	00193009 	andseq	r3, r9, r9
    3b00:	fd030100 	stc2	1, cr0, [r3, #-0]
    3b04:	02000000 	andeq	r0, r0, #0
    3b08:	e7097491 			; <UNDEFINED> instruction: 0xe7097491
    3b0c:	01000005 	tsteq	r0, r5
    3b10:	00009e03 	andeq	r9, r0, r3, lsl #28
    3b14:	70910200 	addsvc	r0, r1, r0, lsl #4
    3b18:	00003b09 	andeq	r3, r0, r9, lsl #22
    3b1c:	9e030100 	adflss	f0, f3, f0
    3b20:	02000000 	andeq	r0, r0, #0
    3b24:	30096c91 	mulcc	r9, r1, ip
    3b28:	01000000 	mrseq	r0, (UNDEF: 0)
    3b2c:	00009e03 	andeq	r9, r0, r3, lsl #28
    3b30:	68910200 	ldmvs	r1, {r9}
    3b34:	a4040500 	strge	r0, [r4], #-1280	; 0xfffffb00
    3b38:	00000000 	andeq	r0, r0, r0
    3b3c:	000000c3 	andeq	r0, r0, r3, asr #1
    3b40:	0c470004 	mcrreq	0, 0, r0, r7, cr4
    3b44:	01040000 	mrseq	r0, (UNDEF: 4)
    3b48:	0000009f 	muleq	r0, pc, r0	; <UNPREDICTABLE>
    3b4c:	0019700c 	andseq	r7, r9, ip
    3b50:	003fac00 	eorseq	sl, pc, r0, lsl #24
    3b54:	00002820 	andeq	r2, r0, r0, lsr #16
    3b58:	00139b00 	andseq	r9, r3, r0, lsl #22
    3b5c:	020c0200 	andeq	r0, ip, #0, 4
    3b60:	00004e05 	andeq	r4, r0, r5, lsl #28
    3b64:	036b0300 	cmneq	fp, #0, 6
    3b68:	07020000 	streq	r0, [r2, -r0]
    3b6c:	0000004e 	andeq	r0, r0, lr, asr #32
    3b70:	07390300 	ldreq	r0, [r9, -r0, lsl #6]!
    3b74:	08020000 	stmdaeq	r2, {}	; <UNPREDICTABLE>
    3b78:	0000004e 	andeq	r0, r0, lr, asr #32
    3b7c:	17ff0304 	ldrbne	r0, [pc, r4, lsl #6]!
    3b80:	09020000 	stmdbeq	r2, {}	; <UNPREDICTABLE>
    3b84:	00000055 	andeq	r0, r0, r5, asr r0
    3b88:	04040008 	streq	r0, [r4], #-8
    3b8c:	00039907 	andeq	r9, r3, r7, lsl #18
    3b90:	5b040500 	blpl	104f98 <startup-0x1fefb068>
    3b94:	04000000 	streq	r0, [r0], #-0
    3b98:	04f10801 	ldrbteq	r0, [r1], #2049	; 0x801
    3b9c:	69060000 	stmdbvs	r6, {}	; <UNPREDICTABLE>
    3ba0:	02000019 	andeq	r0, r0, #25
    3ba4:	0000210a 	andeq	r2, r0, sl, lsl #2
    3ba8:	19640700 	stmdbne	r4!, {r8, r9, sl}^
    3bac:	03010000 	movweq	r0, #4096	; 0x1000
    3bb0:	20003fac 	andcs	r3, r0, ip, lsr #31
    3bb4:	00000028 	andeq	r0, r0, r8, lsr #32
    3bb8:	00b99c01 	adcseq	r9, r9, r1, lsl #24
    3bbc:	73080000 	movwvc	r0, #32768	; 0x8000
    3bc0:	b9030100 	stmdblt	r3, {r8}
    3bc4:	02000000 	andeq	r0, r0, #0
    3bc8:	ff097491 			; <UNDEFINED> instruction: 0xff097491
    3bcc:	01000017 	tsteq	r0, r7, lsl r0
    3bd0:	00005503 	andeq	r5, r0, r3, lsl #10
    3bd4:	70910200 	addsvc	r0, r1, r0, lsl #4
    3bd8:	00036b09 	andeq	r6, r3, r9, lsl #22
    3bdc:	bf030100 	svclt	0x00030100
    3be0:	02000000 	andeq	r0, r0, #0
    3be4:	39096c91 	stmdbcc	r9, {r0, r4, r7, sl, fp, sp, lr}
    3be8:	01000007 	tsteq	r0, r7
    3bec:	0000bf03 	andeq	fp, r0, r3, lsl #30
    3bf0:	68910200 	ldmvs	r1, {r9}
    3bf4:	62040500 	andvs	r0, r4, #0, 10
    3bf8:	0a000000 	beq	3c00 <startup-0x1fffc400>
    3bfc:	6e690504 	cdpvs	5, 6, cr0, cr9, cr4, {0}
    3c00:	35000074 	strcc	r0, [r0, #-116]	; 0xffffff8c
    3c04:	04000001 	streq	r0, [r0], #-1
    3c08:	000cd900 	andeq	sp, ip, r0, lsl #18
    3c0c:	9f010400 	svcls	0x00010400
    3c10:	0c000000 	stceq	0, cr0, [r0], {-0}
    3c14:	000019d6 	ldrdeq	r1, [r0], -r6
    3c18:	20003fd4 	ldrdcs	r3, [r0], -r4
    3c1c:	0000006c 	andeq	r0, r0, ip, rrx
    3c20:	00001407 	andeq	r1, r0, r7, lsl #8
    3c24:	13021802 	movwne	r1, #10242	; 0x2802
    3c28:	000000ae 	andeq	r0, r0, lr, lsr #1
    3c2c:	00199f03 	andseq	r9, r9, r3, lsl #30
    3c30:	ae140200 	cdpge	2, 1, cr0, cr4, cr0, {0}
    3c34:	00000000 	andeq	r0, r0, r0
    3c38:	0019b803 	andseq	fp, r9, r3, lsl #16
    3c3c:	b5150200 	ldrlt	r0, [r5, #-512]	; 0xfffffe00
    3c40:	04000000 	streq	r0, [r0], #-0
    3c44:	001a0303 	andseq	r0, sl, r3, lsl #6
    3c48:	b5160200 	ldrlt	r0, [r6, #-512]	; 0xfffffe00
    3c4c:	06000000 	streq	r0, [r0], -r0
    3c50:	001a2503 	andseq	r2, sl, r3, lsl #10
    3c54:	ae170200 	cdpge	2, 1, cr0, cr7, cr0, {0}
    3c58:	08000000 	stmdaeq	r0, {}	; <UNPREDICTABLE>
    3c5c:	0019c403 	andseq	ip, r9, r3, lsl #8
    3c60:	ae180200 	cdpge	2, 1, cr0, cr8, cr0, {0}
    3c64:	0c000000 	stceq	0, cr0, [r0], {-0}
    3c68:	001a3503 	andseq	r3, sl, r3, lsl #10
    3c6c:	bc190200 	lfmlt	f0, 4, [r9], {-0}
    3c70:	10000000 	andne	r0, r0, r0
    3c74:	001a2d03 	andseq	r2, sl, r3, lsl #26
    3c78:	bc1a0200 	lfmlt	f0, 4, [sl], {-0}
    3c7c:	11000000 	mrsne	r0, (UNDEF: 0)
    3c80:	0019ca03 	andseq	ip, r9, r3, lsl #20
    3c84:	b51b0200 	ldrlt	r0, [fp, #-512]	; 0xfffffe00
    3c88:	12000000 	andne	r0, r0, #0
    3c8c:	001a1e03 	andseq	r1, sl, r3, lsl #28
    3c90:	bc1c0200 	lfmlt	f0, 4, [ip], {-0}
    3c94:	14000000 	strne	r0, [r0], #-0
    3c98:	0019b003 	andseq	fp, r9, r3
    3c9c:	bc1d0200 	lfmlt	f0, 4, [sp], {-0}
    3ca0:	15000000 	strne	r0, [r0, #-0]
    3ca4:	001a3c03 	andseq	r3, sl, r3, lsl #24
    3ca8:	b51e0200 	ldrlt	r0, [lr, #-512]	; 0xfffffe00
    3cac:	16000000 	strne	r0, [r0], -r0
    3cb0:	07040400 	streq	r0, [r4, -r0, lsl #8]
    3cb4:	00000399 	muleq	r0, r9, r3
    3cb8:	93070204 	movwls	r0, #29188	; 0x7204
    3cbc:	04000003 	streq	r0, [r0], #-3
    3cc0:	04f10801 	ldrbteq	r0, [r1], #2049	; 0x801
    3cc4:	bf050000 	svclt	0x00050000
    3cc8:	02000019 	andeq	r0, r0, #25
    3ccc:	0000211f 	andeq	r2, r0, pc, lsl r1
    3cd0:	1a0e0600 	bne	3854d8 <startup-0x1fc7ab28>
    3cd4:	0e010000 	cdpeq	0, 0, cr0, cr1, cr0, {0}
    3cd8:	00000104 	andeq	r0, r0, r4, lsl #2
    3cdc:	2000400c 	andcs	r4, r0, ip
    3ce0:	00000034 	andeq	r0, r0, r4, lsr r0
    3ce4:	01049c01 	tsteq	r4, r1, lsl #24
    3ce8:	62070000 	andvs	r0, r7, #0
    3cec:	01007469 	tsteq	r0, r9, ror #8
    3cf0:	0001040e 	andeq	r0, r1, lr, lsl #8
    3cf4:	64910200 	ldrvs	r0, [r1], #512	; 0x200
    3cf8:	4c494408 	cfstrdmi	mvd4, [r9], {8}
    3cfc:	0b0f0100 	bleq	3c4104 <startup-0x1fc3befc>
    3d00:	02000001 	andeq	r0, r0, #1
    3d04:	09006f91 	stmdbeq	r0, {r0, r4, r7, r8, r9, sl, fp, sp, lr}
    3d08:	6e690504 	cdpvs	5, 6, cr0, cr9, cr4, {0}
    3d0c:	01040074 	tsteq	r4, r4, ror r0
    3d10:	0004fa08 	andeq	pc, r4, r8, lsl #20
    3d14:	1a480a00 	bne	120651c <startup-0x1edf9ae4>
    3d18:	08010000 	stmdaeq	r1, {}	; <UNPREDICTABLE>
    3d1c:	0000010b 	andeq	r0, r0, fp, lsl #2
    3d20:	20003fec 	andcs	r3, r0, ip, ror #31
    3d24:	00000020 	andeq	r0, r0, r0, lsr #32
    3d28:	a50b9c01 	strge	r9, [fp, #-3073]	; 0xfffff3ff
    3d2c:	01000019 	tsteq	r0, r9, lsl r0
    3d30:	003fd404 	eorseq	sp, pc, r4, lsl #8
    3d34:	00001820 	andeq	r1, r0, r0, lsr #16
    3d38:	009c0100 	addseq	r0, ip, r0, lsl #2
    3d3c:	000004ed 	andeq	r0, r0, sp, ror #9
    3d40:	0d960004 	ldceq	0, cr0, [r6, #16]
    3d44:	01040000 	mrseq	r0, (UNDEF: 4)
    3d48:	0000009f 	muleq	r0, pc, r0	; <UNPREDICTABLE>
    3d4c:	001b8d0c 	andseq	r8, fp, ip, lsl #26
    3d50:	00404000 	subeq	r4, r0, r0
    3d54:	00052020 	andeq	r2, r5, r0, lsr #32
    3d58:	00147700 	andseq	r7, r4, r0, lsl #14
    3d5c:	020c0200 	andeq	r0, ip, #0, 4
    3d60:	00004e05 	andeq	r4, r0, r5, lsl #28
    3d64:	036b0300 	cmneq	fp, #0, 6
    3d68:	07020000 	streq	r0, [r2, -r0]
    3d6c:	0000004e 	andeq	r0, r0, lr, asr #32
    3d70:	07390300 	ldreq	r0, [r9, -r0, lsl #6]!
    3d74:	08020000 	stmdaeq	r2, {}	; <UNPREDICTABLE>
    3d78:	0000004e 	andeq	r0, r0, lr, asr #32
    3d7c:	17ff0304 	ldrbne	r0, [pc, r4, lsl #6]!
    3d80:	09020000 	stmdbeq	r2, {}	; <UNPREDICTABLE>
    3d84:	00000055 	andeq	r0, r0, r5, asr r0
    3d88:	04040008 	streq	r0, [r4], #-8
    3d8c:	00039907 	andeq	r9, r3, r7, lsl #18
    3d90:	5b040500 	blpl	105198 <startup-0x1fefae68>
    3d94:	04000000 	streq	r0, [r0], #-0
    3d98:	04f10801 	ldrbteq	r0, [r1], #2049	; 0x801
    3d9c:	69060000 	stmdbvs	r6, {}	; <UNPREDICTABLE>
    3da0:	02000019 	andeq	r0, r0, #25
    3da4:	0000210a 	andeq	r2, r0, sl, lsl #2
    3da8:	00340700 	eorseq	r0, r4, r0, lsl #14
    3dac:	030c0000 	movweq	r0, #49152	; 0xc000
    3db0:	00009e06 	andeq	r9, r0, r6, lsl #28
    3db4:	05e70300 	strbeq	r0, [r7, #768]!	; 0x300
    3db8:	07030000 	streq	r0, [r3, -r0]
    3dbc:	0000009e 	muleq	r0, lr, r0
    3dc0:	003b0300 	eorseq	r0, fp, r0, lsl #6
    3dc4:	08030000 	stmdaeq	r3, {}	; <UNPREDICTABLE>
    3dc8:	0000009e 	muleq	r0, lr, r0
    3dcc:	00300304 	eorseq	r0, r0, r4, lsl #6
    3dd0:	09030000 	stmdbeq	r3, {}	; <UNPREDICTABLE>
    3dd4:	0000009e 	muleq	r0, lr, r0
    3dd8:	04050008 	streq	r0, [r5], #-8
    3ddc:	00000062 	andeq	r0, r0, r2, rrx
    3de0:	00151406 	andseq	r1, r5, r6, lsl #8
    3de4:	6d0a0300 	stcvs	3, cr0, [sl, #-0]
    3de8:	07000000 	streq	r0, [r0, -r0]
    3dec:	000006fc 	strdeq	r0, [r0], -ip
    3df0:	28060424 	stmdacs	r6, {r2, r5, sl}
    3df4:	03000001 	movweq	r0, #1
    3df8:	0000047f 	andeq	r0, r0, pc, ror r4
    3dfc:	01280704 			; <UNDEFINED> instruction: 0x01280704
    3e00:	03000000 	movweq	r0, #0
    3e04:	00000708 	andeq	r0, r0, r8, lsl #14
    3e08:	012e0804 			; <UNDEFINED> instruction: 0x012e0804
    3e0c:	03040000 	movweq	r0, #16384	; 0x4000
    3e10:	00000658 	andeq	r0, r0, r8, asr r6
    3e14:	012e0904 			; <UNDEFINED> instruction: 0x012e0904
    3e18:	03080000 	movweq	r0, #32768	; 0x8000
    3e1c:	00000684 	andeq	r0, r0, r4, lsl #13
    3e20:	01460c04 	cmpeq	r6, r4, lsl #24
    3e24:	030c0000 	movweq	r0, #49152	; 0xc000
    3e28:	00000352 	andeq	r0, r0, r2, asr r3
    3e2c:	01460d04 	cmpeq	r6, r4, lsl #26
    3e30:	03100000 	tsteq	r0, #0
    3e34:	00000491 	muleq	r0, r1, r4
    3e38:	012e1004 			; <UNDEFINED> instruction: 0x012e1004
    3e3c:	03140000 	tsteq	r4, #0
    3e40:	00000070 	andeq	r0, r0, r0, ror r0
    3e44:	012e1104 			; <UNDEFINED> instruction: 0x012e1104
    3e48:	03180000 	tsteq	r8, #0
    3e4c:	000003fa 	strdeq	r0, [r0], -sl
    3e50:	012e1204 			; <UNDEFINED> instruction: 0x012e1204
    3e54:	031c0000 	tsteq	ip, #0
    3e58:	0000040a 	andeq	r0, r0, sl, lsl #8
    3e5c:	012e1304 			; <UNDEFINED> instruction: 0x012e1304
    3e60:	00200000 	eoreq	r0, r0, r0
    3e64:	00a40405 	adceq	r0, r4, r5, lsl #8
    3e68:	04080000 	streq	r0, [r8], #-0
    3e6c:	746e6905 	strbtvc	r6, [lr], #-2309	; 0xfffff6fb
    3e70:	01400900 	cmpeq	r0, r0, lsl #18
    3e74:	400a0000 	andmi	r0, sl, r0
    3e78:	00000001 	andeq	r0, r0, r1
    3e7c:	00af0405 	adceq	r0, pc, r5, lsl #8
    3e80:	04050000 	streq	r0, [r5], #-0
    3e84:	00000135 	andeq	r0, r0, r5, lsr r1
    3e88:	0006fd06 	andeq	pc, r6, r6, lsl #26
    3e8c:	af150400 	svcge	0x00150400
    3e90:	0b000000 	bleq	3e98 <startup-0x1fffc168>
    3e94:	00000162 	andeq	r0, r0, r2, ror #2
    3e98:	00000162 	andeq	r0, r0, r2, ror #2
    3e9c:	0405000c 	streq	r0, [r5], #-12
    3ea0:	0000014c 	andeq	r0, r0, ip, asr #2
    3ea4:	0005740d 	andeq	r7, r5, sp, lsl #8
    3ea8:	571c0400 	ldrpl	r0, [ip, -r0, lsl #8]
    3eac:	0d000001 	stceq	0, cr0, [r0, #-4]
    3eb0:	00000445 	andeq	r0, r0, r5, asr #8
    3eb4:	012e1d04 			; <UNDEFINED> instruction: 0x012e1d04
    3eb8:	c0060000 	andgt	r0, r6, r0
    3ebc:	05000006 	streq	r0, [r0, #-6]
    3ec0:	00005b24 	andeq	r5, r0, r4, lsr #22
    3ec4:	017e0b00 	cmneq	lr, r0, lsl #22
    3ec8:	019a0000 	orrseq	r0, sl, r0
    3ecc:	9a0e0000 	bls	383ed4 <startup-0x1fc7c12c>
    3ed0:	ff000001 			; <UNDEFINED> instruction: 0xff000001
    3ed4:	04040003 	streq	r0, [r4], #-3
    3ed8:	00042707 	andeq	r2, r4, r7, lsl #14
    3edc:	172e0d00 	strne	r0, [lr, -r0, lsl #26]!
    3ee0:	2d050000 	stccs	0, cr0, [r5, #-0]
    3ee4:	00000189 	andeq	r0, r0, r9, lsl #3
    3ee8:	0002580d 	andeq	r5, r2, sp, lsl #16
    3eec:	892e0500 	stmdbhi	lr!, {r8, sl}
    3ef0:	0d000001 	stceq	0, cr0, [r0, #-4]
    3ef4:	000004ff 	strdeq	r0, [r0], -pc	; <UNPREDICTABLE>
    3ef8:	01892f05 	orreq	r2, r9, r5, lsl #30
    3efc:	7b0d0000 	blvc	343f04 <startup-0x1fcbc0fc>
    3f00:	05000003 	streq	r0, [r0, #-3]
    3f04:	00018930 	andeq	r8, r1, r0, lsr r9
    3f08:	02e00d00 	rsceq	r0, r0, #0, 26
    3f0c:	31050000 	mrscc	r0, (UNDEF: 5)
    3f10:	00000189 	andeq	r0, r0, r9, lsl #3
    3f14:	0006de0d 	andeq	sp, r6, sp, lsl #28
    3f18:	89320500 	ldmdbhi	r2!, {r8, sl}
    3f1c:	0d000001 	stceq	0, cr0, [r0, #-4]
    3f20:	000006ce 	andeq	r0, r0, lr, asr #13
    3f24:	01893305 	orreq	r3, r9, r5, lsl #6
    3f28:	130f0000 	movwne	r0, #61440	; 0xf000
    3f2c:	0100001b 	tsteq	r0, fp, lsl r0
    3f30:	0044dce4 	subeq	sp, r4, r4, ror #25
    3f34:	00008420 	andeq	r8, r0, r0, lsr #8
    3f38:	2c9c0100 	ldfcss	f0, [ip], {0}
    3f3c:	10000002 	andne	r0, r0, r2
    3f40:	e5010073 	str	r0, [r1, #-115]	; 0xffffff8d
    3f44:	0000022c 	andeq	r0, r0, ip, lsr #4
    3f48:	116c9102 	cmnne	ip, r2, lsl #2
    3f4c:	00001aee 	andeq	r1, r0, lr, ror #21
    3f50:	0239e601 	eorseq	lr, r9, #1048576	; 0x100000
    3f54:	91020000 	mrsls	r0, (UNDEF: 2)
    3f58:	1af4115c 	bne	ffd084d0 <firstTime.4104+0xdfcf4064>
    3f5c:	e7010000 	str	r0, [r1, -r0]
    3f60:	00000249 	andeq	r0, r0, r9, asr #4
    3f64:	00489102 	subeq	r9, r8, r2, lsl #2
    3f68:	02320405 	eorseq	r0, r2, #83886080	; 0x5000000
    3f6c:	01040000 	mrseq	r0, (UNDEF: 4)
    3f70:	0004fa08 	andeq	pc, r4, r8, lsl #20
    3f74:	02320b00 	eorseq	r0, r2, #0, 22
    3f78:	02490000 	subeq	r0, r9, #0
    3f7c:	9a120000 	bls	483f84 <startup-0x1fb7c07c>
    3f80:	0c000001 	stceq	0, cr0, [r0], {1}
    3f84:	02320b00 	eorseq	r0, r2, #0, 22
    3f88:	02590000 	subseq	r0, r9, #0
    3f8c:	9a120000 	bls	483f94 <startup-0x1fb7c06c>
    3f90:	13000001 	movwne	r0, #1
    3f94:	1aa40f00 	bne	fe907b9c <firstTime.4104+0xde8f3730>
    3f98:	cc010000 	stcgt	0, cr0, [r1], {-0}
    3f9c:	2000444e 	andcs	r4, r0, lr, asr #8
    3fa0:	0000008e 	andeq	r0, r0, lr, lsl #1
    3fa4:	02b39c01 	adcseq	r9, r3, #256	; 0x100
    3fa8:	dc130000 	ldcle	0, cr0, [r3], {-0}
    3fac:	0100001b 	tsteq	r0, fp, lsl r0
    3fb0:	00022ccc 	andeq	r2, r2, ip, asr #25
    3fb4:	6c910200 	lfmvs	f0, 4, [r1], {0}
    3fb8:	00029613 	andeq	r9, r2, r3, lsl r6
    3fbc:	2ccc0100 	stfcse	f0, [ip], {0}
    3fc0:	02000002 	andeq	r0, r0, #2
    3fc4:	86136891 			; <UNDEFINED> instruction: 0x86136891
    3fc8:	0100001b 	tsteq	r0, fp, lsl r0
    3fcc:	00012ecc 	andeq	r2, r1, ip, asr #29
    3fd0:	64910200 	ldrvs	r0, [r1], #512	; 0x200
    3fd4:	001a6213 	andseq	r6, sl, r3, lsl r2
    3fd8:	2ecc0100 	polcse	f0, f4, f0
    3fdc:	02000001 	andeq	r0, r0, #1
    3fe0:	69106091 	ldmdbvs	r0, {r0, r4, r7, sp, lr}
    3fe4:	2ed00100 	cdpcs	1, 13, cr0, cr0, cr0, {0}
    3fe8:	02000001 	andeq	r0, r0, #1
    3fec:	0f007491 	svceq	0x00007491
    3ff0:	00001b45 	andeq	r1, r0, r5, asr #22
    3ff4:	43f0bd01 	mvnsmi	fp, #1, 26	; 0x40
    3ff8:	005e2000 	subseq	r2, lr, r0
    3ffc:	9c010000 	stcls	0, cr0, [r1], {-0}
    4000:	000002e5 	andeq	r0, r0, r5, ror #5
    4004:	001bdc13 	andseq	sp, fp, r3, lsl ip
    4008:	2cbd0100 	ldfcss	f0, [sp]
    400c:	02000002 	andeq	r0, r0, #2
    4010:	96137491 			; <UNDEFINED> instruction: 0x96137491
    4014:	01000002 	tsteq	r0, r2
    4018:	00022cbd 			; <UNDEFINED> instruction: 0x00022cbd
    401c:	70910200 	addsvc	r0, r1, r0, lsl #4
    4020:	1a980f00 	bne	fe607c28 <firstTime.4104+0xde5f37bc>
    4024:	ad010000 	stcge	0, cr0, [r1, #-0]
    4028:	20004386 	andcs	r4, r0, r6, lsl #7
    402c:	0000006a 	andeq	r0, r0, sl, rrx
    4030:	03159c01 	tsteq	r5, #256	; 0x100
    4034:	73100000 	tstvc	r0, #0
    4038:	2cae0100 	stfcss	f0, [lr]
    403c:	02000002 	andeq	r0, r0, #2
    4040:	bb116c91 	bllt	45f28c <startup-0x1fba0d74>
    4044:	01000017 	tsteq	r0, r7, lsl r0
    4048:	000315af 	andeq	r1, r3, pc, lsr #11
    404c:	54910200 	ldrpl	r0, [r1], #512	; 0x200
    4050:	02320b00 	eorseq	r0, r2, #0, 22
    4054:	03250000 			; <UNDEFINED> instruction: 0x03250000
    4058:	9a120000 	bls	484060 <startup-0x1fb7bfa0>
    405c:	14000001 	strne	r0, [r0], #-1
    4060:	1a791400 	bne	1e49068 <startup-0x1e1b6f98>
    4064:	a8010000 	stmdage	r1, {}	; <UNPREDICTABLE>
    4068:	20004374 	andcs	r4, r0, r4, ror r3
    406c:	00000012 	andeq	r0, r0, r2, lsl r0
    4070:	51159c01 	tstpl	r5, r1, lsl #24
    4074:	0100001a 	tsteq	r0, sl, lsl r0
    4078:	00435a9f 	umaaleq	r5, r3, pc, sl	; <UNPREDICTABLE>
    407c:	00001a20 	andeq	r1, r0, r0, lsr #20
    4080:	149c0100 	ldrne	r0, [ip], #256	; 0x100
    4084:	00001a86 	andeq	r1, r0, r6, lsl #21
    4088:	42c08301 	sbcmi	r8, r0, #67108864	; 0x4000000
    408c:	009a2000 	addseq	r2, sl, r0
    4090:	9c010000 	stcls	0, cr0, [r1], {-0}
    4094:	001b510f 	andseq	r5, fp, pc, lsl #2
    4098:	707b0100 	rsbsvc	r0, fp, r0, lsl #2
    409c:	50200042 	eorpl	r0, r0, r2, asr #32
    40a0:	01000000 	mrseq	r0, (UNDEF: 0)
    40a4:	0003989c 	muleq	r3, ip, r8
    40a8:	6f721600 	svcvs	0x00721600
    40ac:	7b010077 	blvc	44290 <startup-0x1ffbbd70>
    40b0:	0000005b 	andeq	r0, r0, fp, asr r0
    40b4:	136f9102 	cmnne	pc, #-2147483648	; 0x80000000
    40b8:	00001a91 	muleq	r0, r1, sl
    40bc:	005b7b01 	subseq	r7, fp, r1, lsl #22
    40c0:	91020000 	mrsls	r0, (UNDEF: 2)
    40c4:	1afa116e 	bne	ffe88684 <firstTime.4104+0xdfe74218>
    40c8:	7c010000 	stcvc	0, cr0, [r1], {-0}
    40cc:	0000005b 	andeq	r0, r0, fp, asr r0
    40d0:	00779102 	rsbseq	r9, r7, r2, lsl #2
    40d4:	001b750f 	andseq	r7, fp, pc, lsl #10
    40d8:	34740100 	ldrbtcc	r0, [r4], #-256	; 0xffffff00
    40dc:	3c200042 	stccc	0, cr0, [r0], #-264	; 0xfffffef8
    40e0:	01000000 	mrseq	r0, (UNDEF: 0)
    40e4:	0003ba9c 	muleq	r3, ip, sl
    40e8:	00631600 	rsbeq	r1, r3, r0, lsl #12
    40ec:	005b7401 	subseq	r7, fp, r1, lsl #8
    40f0:	91020000 	mrsls	r0, (UNDEF: 2)
    40f4:	b5170077 	ldrlt	r0, [r7, #-119]	; 0xffffff89
    40f8:	0100001a 	tsteq	r0, sl, lsl r0
    40fc:	00005b6a 	andeq	r5, r0, sl, ror #22
    4100:	00420000 	subeq	r0, r2, r0
    4104:	00003420 	andeq	r3, r0, r0, lsr #8
    4108:	e09c0100 	adds	r0, ip, r0, lsl #2
    410c:	10000003 	andne	r0, r0, r3
    4110:	6b010063 	blvs	442a4 <startup-0x1ffbbd5c>
    4114:	0000005b 	andeq	r0, r0, fp, asr r0
    4118:	00779102 	rsbseq	r9, r7, r2, lsl #2
    411c:	001b5e0f 	andseq	r5, fp, pc, lsl #28
    4120:	d0630100 	rsble	r0, r3, r0, lsl #2
    4124:	30200041 	eorcc	r0, r0, r1, asr #32
    4128:	01000000 	mrseq	r0, (UNDEF: 0)
    412c:	0004029c 	muleq	r4, ip, r2
    4130:	00631600 	rsbeq	r1, r3, r0, lsl #12
    4134:	005b6301 	subseq	r6, fp, r1, lsl #6
    4138:	91020000 	mrsls	r0, (UNDEF: 2)
    413c:	69170077 	ldmdbvs	r7, {r0, r1, r2, r4, r5, r6}
    4140:	0100001a 	tsteq	r0, sl, lsl r0
    4144:	00005b57 	andeq	r5, r0, r7, asr fp
    4148:	00417c00 	subeq	r7, r1, r0, lsl #24
    414c:	00005420 	andeq	r5, r0, r0, lsr #8
    4150:	299c0100 	ldmibcs	ip, {r8}
    4154:	10000004 	andne	r0, r0, r4
    4158:	01007672 	tsteq	r0, r2, ror r6
    415c:	00005b5c 	andeq	r5, r0, ip, asr fp
    4160:	6f910200 	svcvs	0x00910200
    4164:	1b1e1700 	blne	789d6c <startup-0x1f876294>
    4168:	4b010000 	blmi	44170 <startup-0x1ffbbe90>
    416c:	0000005b 	andeq	r0, r0, fp, asr r0
    4170:	20004128 	andcs	r4, r0, r8, lsr #2
    4174:	00000054 	andeq	r0, r0, r4, asr r0
    4178:	04509c01 	ldrbeq	r9, [r0], #-3073	; 0xfffff3ff
    417c:	72100000 	andsvc	r0, r0, #0
    4180:	50010076 	andpl	r0, r1, r6, ror r0
    4184:	0000005b 	andeq	r0, r0, fp, asr r0
    4188:	006f9102 	rsbeq	r9, pc, r2, lsl #2
    418c:	001b020f 	andseq	r0, fp, pc, lsl #4
    4190:	fe450100 	cdp2	1, 4, cr0, cr5, cr0, {0}
    4194:	2a200040 	bcs	80429c <startup-0x1f7fbd64>
    4198:	01000000 	mrseq	r0, (UNDEF: 0)
    419c:	0004749c 	muleq	r4, ip, r4
    41a0:	17ff1300 	ldrbne	r1, [pc, r0, lsl #6]!
    41a4:	45010000 	strmi	r0, [r1, #-0]
    41a8:	0000005b 	andeq	r0, r0, fp, asr r0
    41ac:	00779102 	rsbseq	r9, r7, r2, lsl #2
    41b0:	001ade0f 	andseq	sp, sl, pc, lsl #28
    41b4:	d43f0100 	ldrtle	r0, [pc], #-256	; 41bc <startup-0x1fffbe44>
    41b8:	2a200040 	bcs	8042c0 <startup-0x1f7fbd40>
    41bc:	01000000 	mrseq	r0, (UNDEF: 0)
    41c0:	0004989c 	muleq	r4, ip, r8
    41c4:	17201300 	strne	r1, [r0, -r0, lsl #6]!
    41c8:	3f010000 	svccc	0x00010000
    41cc:	0000005b 	andeq	r0, r0, fp, asr r0
    41d0:	00779102 	rsbseq	r9, r7, r2, lsl #2
    41d4:	001b3018 	andseq	r3, fp, r8, lsl r0
    41d8:	84370100 	ldrthi	r0, [r7], #-256	; 0xffffff00
    41dc:	50200040 	eorpl	r0, r0, r0, asr #32
    41e0:	01000000 	mrseq	r0, (UNDEF: 0)
    41e4:	0004c69c 	muleq	r4, ip, r6
    41e8:	00781600 	rsbseq	r1, r8, r0, lsl #12
    41ec:	005b3701 	subseq	r3, fp, r1, lsl #14
    41f0:	91020000 	mrsls	r0, (UNDEF: 2)
    41f4:	0063106f 	rsbeq	r1, r3, pc, rrx
    41f8:	005b3901 	subseq	r3, fp, r1, lsl #18
    41fc:	91020000 	mrsls	r0, (UNDEF: 2)
    4200:	cb190077 	blgt	6443e4 <startup-0x1f9bbc1c>
    4204:	0100001a 	tsteq	r0, sl, lsl r0
    4208:	0040402f 	subeq	r4, r0, pc, lsr #32
    420c:	00004420 	andeq	r4, r0, r0, lsr #8
    4210:	169c0100 	ldrne	r0, [ip], r0, lsl #2
    4214:	2f010078 	svccs	0x00010078
    4218:	0000005b 	andeq	r0, r0, fp, asr r0
    421c:	106f9102 	rsbne	r9, pc, r2, lsl #2
    4220:	31010063 	tstcc	r1, r3, rrx
    4224:	0000005b 	andeq	r0, r0, fp, asr r0
    4228:	00779102 	rsbseq	r9, r7, r2, lsl #2
    422c:	00014000 	andeq	r4, r1, r0
    4230:	14000400 	strne	r0, [r0], #-1024	; 0xfffffc00
    4234:	0400000f 	streq	r0, [r0], #-15
    4238:	00009f01 	andeq	r9, r0, r1, lsl #30
    423c:	1be10c00 	blne	ff847244 <firstTime.4104+0xdf832dd8>
    4240:	45600000 	strbmi	r0, [r0, #-0]!
    4244:	00942000 	addseq	r2, r4, r0
    4248:	15d50000 	ldrbne	r0, [r5]
    424c:	b6020000 	strlt	r0, [r2], -r0
    4250:	14000006 	strne	r0, [r0], #-6
    4254:	006a0402 	rsbeq	r0, sl, r2, lsl #8
    4258:	dc030000 	stcle	0, cr0, [r3], {-0}
    425c:	0200001b 	andeq	r0, r0, #27
    4260:	00006a05 	andeq	r6, r0, r5, lsl #20
    4264:	96030000 	strls	r0, [r3], -r0
    4268:	02000002 	andeq	r0, r0, #2
    426c:	00006a06 	andeq	r6, r0, r6, lsl #20
    4270:	14030400 	strne	r0, [r3], #-1024	; 0xfffffc00
    4274:	02000004 	andeq	r0, r0, #4
    4278:	00007708 	andeq	r7, r0, r8, lsl #14
    427c:	04030800 	streq	r0, [r3], #-2048	; 0xfffff800
    4280:	02000004 	andeq	r0, r0, #4
    4284:	00007709 	andeq	r7, r0, r9, lsl #14
    4288:	9b030c00 	blls	c7290 <startup-0x1ff38d70>
    428c:	02000002 	andeq	r0, r0, #2
    4290:	0000940c 	andeq	r9, r0, ip, lsl #8
    4294:	04001000 	streq	r1, [r0], #-0
    4298:	00007004 	andeq	r7, r0, r4
    429c:	08010500 	stmdaeq	r1, {r8, sl}
    42a0:	000004fa 	strdeq	r0, [r0], -sl
    42a4:	69050406 	stmdbvs	r5, {r1, r2, sl}
    42a8:	0700746e 	streq	r7, [r0, -lr, ror #8]
    42ac:	0000008e 	andeq	r0, r0, lr, lsl #1
    42b0:	00008e08 	andeq	r8, r0, r8, lsl #28
    42b4:	00770800 	rsbseq	r0, r7, r0, lsl #16
    42b8:	04000000 	streq	r0, [r0], #-0
    42bc:	00002104 	andeq	r2, r0, r4, lsl #2
    42c0:	7e040400 	cfcpysvc	mvf0, mvf4
    42c4:	09000000 	stmdbeq	r0, {}	; <UNPREDICTABLE>
    42c8:	000006b7 			; <UNDEFINED> instruction: 0x000006b7
    42cc:	00210d02 	eoreq	r0, r1, r2, lsl #26
    42d0:	c30a0000 	movwgt	r0, #40960	; 0xa000
    42d4:	0100001b 	tsteq	r0, fp, lsl r0
    42d8:	0045ba0c 	subeq	fp, r5, ip, lsl #20
    42dc:	00003a20 	andeq	r3, r0, r0, lsr #20
    42e0:	f39c0100 	vaddw.u16	q0, q6, d0
    42e4:	0b000000 	bleq	42ec <startup-0x1fffbd14>
    42e8:	006a626f 	rsbeq	r6, sl, pc, ror #4
    42ec:	00f30c01 	rscseq	r0, r3, r1, lsl #24
    42f0:	91020000 	mrsls	r0, (UNDEF: 2)
    42f4:	1bdc0c74 	blne	ff7074cc <firstTime.4104+0xdf6f3060>
    42f8:	0c010000 	stceq	0, cr0, [r1], {-0}
    42fc:	0000006a 	andeq	r0, r0, sl, rrx
    4300:	0c709102 	ldfeqp	f1, [r0], #-8
    4304:	00000296 	muleq	r0, r6, r2
    4308:	006a0c01 	rsbeq	r0, sl, r1, lsl #24
    430c:	91020000 	mrsls	r0, (UNDEF: 2)
    4310:	04040c6c 	streq	r0, [r4], #-3180	; 0xfffff394
    4314:	0c010000 	stceq	0, cr0, [r1], {-0}
    4318:	00000077 	andeq	r0, r0, r7, ror r0
    431c:	00689102 	rsbeq	r9, r8, r2, lsl #2
    4320:	009a0404 	addseq	r0, sl, r4, lsl #8
    4324:	9b0d0000 	blls	34432c <startup-0x1fcbbcd4>
    4328:	01000002 	tsteq	r0, r2
    432c:	00456004 	subeq	r6, r5, r4
    4330:	00005a20 	andeq	r5, r0, r0, lsr #20
    4334:	0c9c0100 	ldfeqs	f0, [ip], {0}
    4338:	000007af 	andeq	r0, r0, pc, lsr #15
    433c:	00f30401 	rscseq	r0, r3, r1, lsl #8
    4340:	91020000 	mrsls	r0, (UNDEF: 2)
    4344:	1bd20c6c 	blne	ff4874fc <firstTime.4104+0xdf473090>
    4348:	04010000 	streq	r0, [r1], #-0
    434c:	00000077 	andeq	r0, r0, r7, ror r0
    4350:	0e689102 	lgneqe	f1, f2
    4354:	00001b86 	andeq	r1, r0, r6, lsl #23
    4358:	00770501 	rsbseq	r0, r7, r1, lsl #10
    435c:	91020000 	mrsls	r0, (UNDEF: 2)
    4360:	1a620e74 	bne	1887d38 <startup-0x1e7782c8>
    4364:	06010000 	streq	r0, [r1], -r0
    4368:	00000077 	andeq	r0, r0, r7, ror r0
    436c:	00709102 	rsbseq	r9, r0, r2, lsl #2
    4370:	0002e000 	andeq	lr, r2, r0
    4374:	df000400 	svcle	0x00000400
    4378:	0400000f 	streq	r0, [r0], #-15
    437c:	00009f01 	andeq	r9, r0, r1, lsl #30
    4380:	1c8e0c00 	stcne	12, cr0, [lr], {0}
    4384:	45f40000 	ldrbmi	r0, [r4, #0]!
    4388:	00e82000 	rsceq	r2, r8, r0
    438c:	164f0000 	strbne	r0, [pc], -r0
    4390:	0c020000 	stceq	0, cr0, [r2], {-0}
    4394:	004e0502 	subeq	r0, lr, r2, lsl #10
    4398:	6b030000 	blvs	c43a0 <startup-0x1ff3bc60>
    439c:	02000003 	andeq	r0, r0, #3
    43a0:	00004e07 	andeq	r4, r0, r7, lsl #28
    43a4:	39030000 	stmdbcc	r3, {}	; <UNPREDICTABLE>
    43a8:	02000007 	andeq	r0, r0, #7
    43ac:	00004e08 	andeq	r4, r0, r8, lsl #28
    43b0:	ff030400 			; <UNDEFINED> instruction: 0xff030400
    43b4:	02000017 	andeq	r0, r0, #23
    43b8:	00005509 	andeq	r5, r0, r9, lsl #10
    43bc:	04000800 	streq	r0, [r0], #-2048	; 0xfffff800
    43c0:	03990704 	orrseq	r0, r9, #4, 14	; 0x100000
    43c4:	04050000 	streq	r0, [r5], #-0
    43c8:	0000005b 	andeq	r0, r0, fp, asr r0
    43cc:	f1080104 	cps	#4
    43d0:	06000004 	streq	r0, [r0], -r4
    43d4:	00001969 	andeq	r1, r0, r9, ror #18
    43d8:	00210a02 	eoreq	r0, r1, r2, lsl #20
    43dc:	34070000 	strcc	r0, [r7], #-0
    43e0:	0c000000 	stceq	0, cr0, [r0], {-0}
    43e4:	009e0603 	addseq	r0, lr, r3, lsl #12
    43e8:	e7030000 	str	r0, [r3, -r0]
    43ec:	03000005 	movweq	r0, #5
    43f0:	00009e07 	andeq	r9, r0, r7, lsl #28
    43f4:	3b030000 	blcc	c43fc <startup-0x1ff3bc04>
    43f8:	03000000 	movweq	r0, #0
    43fc:	00009e08 	andeq	r9, r0, r8, lsl #28
    4400:	30030400 	andcc	r0, r3, r0, lsl #8
    4404:	03000000 	movweq	r0, #0
    4408:	00009e09 	andeq	r9, r0, r9, lsl #28
    440c:	05000800 	streq	r0, [r0, #-2048]	; 0xfffff800
    4410:	00006204 	andeq	r6, r0, r4, lsl #4
    4414:	15140600 	ldrne	r0, [r4, #-1536]	; 0xfffffa00
    4418:	0a030000 	beq	c4420 <startup-0x1ff3bbe0>
    441c:	0000006d 	andeq	r0, r0, sp, rrx
    4420:	0006fc07 	andeq	pc, r6, r7, lsl #24
    4424:	06042400 	streq	r2, [r4], -r0, lsl #8
    4428:	00000128 	andeq	r0, r0, r8, lsr #2
    442c:	00047f03 	andeq	r7, r4, r3, lsl #30
    4430:	28070400 	stmdacs	r7, {sl}
    4434:	00000001 	andeq	r0, r0, r1
    4438:	00070803 	andeq	r0, r7, r3, lsl #16
    443c:	2e080400 	cfcpyscs	mvf0, mvf8
    4440:	04000001 	streq	r0, [r0], #-1
    4444:	00065803 	andeq	r5, r6, r3, lsl #16
    4448:	2e090400 	cfcpyscs	mvf0, mvf9
    444c:	08000001 	stmdaeq	r0, {r0}
    4450:	00068403 	andeq	r8, r6, r3, lsl #8
    4454:	460c0400 	strmi	r0, [ip], -r0, lsl #8
    4458:	0c000001 	stceq	0, cr0, [r0], {1}
    445c:	00035203 	andeq	r5, r3, r3, lsl #4
    4460:	460d0400 	strmi	r0, [sp], -r0, lsl #8
    4464:	10000001 	andne	r0, r0, r1
    4468:	00049103 	andeq	r9, r4, r3, lsl #2
    446c:	2e100400 	cfmulscs	mvf0, mvf0, mvf0
    4470:	14000001 	strne	r0, [r0], #-1
    4474:	00007003 	andeq	r7, r0, r3
    4478:	2e110400 	cfmulscs	mvf0, mvf1, mvf0
    447c:	18000001 	stmdane	r0, {r0}
    4480:	0003fa03 	andeq	pc, r3, r3, lsl #20
    4484:	2e120400 	cfmulscs	mvf0, mvf2, mvf0
    4488:	1c000001 	stcne	0, cr0, [r0], {1}
    448c:	00040a03 	andeq	r0, r4, r3, lsl #20
    4490:	2e130400 	cfmulscs	mvf0, mvf3, mvf0
    4494:	20000001 	andcs	r0, r0, r1
    4498:	a4040500 	strge	r0, [r4], #-1280	; 0xfffffb00
    449c:	08000000 	stmdaeq	r0, {}	; <UNPREDICTABLE>
    44a0:	6e690504 	cdpvs	5, 6, cr0, cr9, cr4, {0}
    44a4:	40090074 	andmi	r0, r9, r4, ror r0
    44a8:	0a000001 	beq	44b4 <startup-0x1fffbb4c>
    44ac:	00000140 	andeq	r0, r0, r0, asr #2
    44b0:	af040500 	svcge	0x00040500
    44b4:	05000000 	streq	r0, [r0, #-0]
    44b8:	00013504 	andeq	r3, r1, r4, lsl #10
    44bc:	06fd0600 	ldrbteq	r0, [sp], r0, lsl #12
    44c0:	15040000 	strne	r0, [r4, #-0]
    44c4:	000000af 	andeq	r0, r0, pc, lsr #1
    44c8:	0001620b 	andeq	r6, r1, fp, lsl #4
    44cc:	00016200 	andeq	r6, r1, r0, lsl #4
    44d0:	05000c00 	streq	r0, [r0, #-3072]	; 0xfffff400
    44d4:	00014c04 	andeq	r4, r1, r4, lsl #24
    44d8:	05740d00 	ldrbeq	r0, [r4, #-3328]!	; 0xfffff300
    44dc:	1c040000 	stcne	0, cr0, [r4], {-0}
    44e0:	00000157 	andeq	r0, r0, r7, asr r1
    44e4:	0004450d 	andeq	r4, r4, sp, lsl #10
    44e8:	2e1d0400 	cfmulscs	mvf0, mvf13, mvf0
    44ec:	0b000001 	bleq	44f8 <startup-0x1fffbb08>
    44f0:	0000005b 	andeq	r0, r0, fp, asr r0
    44f4:	0000018f 	andeq	r0, r0, pc, lsl #3
    44f8:	00018f0e 	andeq	r8, r1, lr, lsl #30
    44fc:	0003ff00 	andeq	pc, r3, r0, lsl #30
    4500:	27070404 	strcs	r0, [r7, -r4, lsl #8]
    4504:	0f000004 	svceq	0x00000004
    4508:	00001cbe 			; <UNDEFINED> instruction: 0x00001cbe
    450c:	017e0305 	cmneq	lr, r5, lsl #6
    4510:	03050000 	movweq	r0, #20480	; 0x5000
    4514:	2000d7f0 	strdcs	sp, [r0], -r0
    4518:	001c5e0f 	andseq	r5, ip, pc, lsl #28
    451c:	7e030600 	cfmadd32vc	mvax0, mvfx0, mvfx3, mvfx0
    4520:	05000001 	streq	r0, [r0, #-1]
    4524:	00dbf003 	sbcseq	pc, fp, r3
    4528:	1c3b0f20 	ldcne	15, cr0, [fp], #-128	; 0xffffff80
    452c:	03070000 	movweq	r0, #28672	; 0x7000
    4530:	0000017e 	andeq	r0, r0, lr, ror r1
    4534:	dff00305 	svcle	0x00f00305
    4538:	20102000 	andscs	r2, r0, r0
    453c:	0100001c 	tsteq	r0, ip, lsl r0
    4540:	00009e08 	andeq	r9, r0, r8, lsl #28
    4544:	54030500 	strpl	r0, [r3], #-1280	; 0xfffffb00
    4548:	10200077 	eorne	r0, r0, r7, ror r0
    454c:	00001cfa 	strdeq	r1, [r0], -sl
    4550:	009e0901 	addseq	r0, lr, r1, lsl #18
    4554:	03050000 	movweq	r0, #20480	; 0x5000
    4558:	20007720 	andcs	r7, r0, r0, lsr #14
    455c:	001c8110 	andseq	r8, ip, r0, lsl r1
    4560:	9e0a0100 	adflse	f0, f2, f0
    4564:	05000000 	streq	r0, [r0, #-0]
    4568:	00776403 	rsbseq	r6, r7, r3, lsl #8
    456c:	1cd11020 	ldclne	0, cr1, [r1], {32}
    4570:	0c010000 	stceq	0, cr0, [r1], {-0}
    4574:	00000062 	andeq	r0, r0, r2, rrx
    4578:	77140305 	ldrvc	r0, [r4, -r5, lsl #6]
    457c:	70102000 	andsvc	r2, r0, r0
    4580:	0100001c 	tsteq	r0, ip, lsl r0
    4584:	0000620d 	andeq	r6, r0, sp, lsl #4
    4588:	08030500 	stmdaeq	r3, {r8, sl}
    458c:	10200077 	eorne	r0, r0, r7, ror r0
    4590:	00001c4e 	andeq	r1, r0, lr, asr #24
    4594:	00620e01 	rsbeq	r0, r2, r1, lsl #28
    4598:	03050000 	movweq	r0, #20480	; 0x5000
    459c:	200076fc 	strdcs	r7, [r0], -ip
    45a0:	001cef10 	andseq	lr, ip, r0, lsl pc
    45a4:	4c110100 	ldfmis	f0, [r1], {-0}
    45a8:	05000001 	streq	r0, [r0, #-1]
    45ac:	00772403 	rsbseq	r2, r7, r3, lsl #8
    45b0:	1c131020 	ldcne	0, cr1, [r3], {32}
    45b4:	12010000 	andne	r0, r1, #0
    45b8:	000000a4 	andeq	r0, r0, r4, lsr #1
    45bc:	77580305 	ldrbvc	r0, [r8, -r5, lsl #6]
    45c0:	a40b2000 	strge	r2, [fp], #-0
    45c4:	61000000 	mrsvs	r0, (UNDEF: 0)
    45c8:	11000002 	tstne	r0, r2
    45cc:	0000018f 	andeq	r0, r0, pc, lsl #3
    45d0:	2d100000 	ldccs	0, cr0, [r0, #-0]
    45d4:	0100001c 	tsteq	r0, ip, lsl r0
    45d8:	00025113 	andeq	r5, r2, r3, lsl r1
    45dc:	48030500 	stmdami	r3, {r8, sl}
    45e0:	12200077 	eorne	r0, r0, #119	; 0x77
    45e4:	00001ce2 	andeq	r1, r0, r2, ror #25
    45e8:	46682201 	strbtmi	r2, [r8], -r1, lsl #4
    45ec:	00742000 	rsbseq	r2, r4, r0
    45f0:	9c010000 	stcls	0, cr0, [r1], {-0}
    45f4:	000002a7 	andeq	r0, r0, r7, lsr #5
    45f8:	001cef13 	andseq	lr, ip, r3, lsl pc
    45fc:	62220100 	eorvs	r0, r2, #0, 2
    4600:	02000001 	andeq	r0, r0, #1
    4604:	360f6c91 			; <UNDEFINED> instruction: 0x360f6c91
    4608:	01000009 	tsteq	r0, r9
    460c:	00012e23 	andeq	r2, r1, r3, lsr #28
    4610:	f0030500 			; <UNDEFINED> instruction: 0xf0030500
    4614:	002000e3 	eoreq	r0, r0, r3, ror #1
    4618:	0004c714 	andeq	ip, r4, r4, lsl r7
    461c:	f4140100 			; <UNDEFINED> instruction: 0xf4140100
    4620:	74200045 	strtvc	r0, [r0], #-69	; 0xffffffbb
    4624:	01000000 	mrseq	r0, (UNDEF: 0)
    4628:	0dd70f9c 	ldcleq	15, cr0, [r7, #624]	; 0x270
    462c:	16010000 	strne	r0, [r1], -r0
    4630:	0000009e 	muleq	r0, lr, r0
    4634:	0f749102 	svceq	0x00749102
    4638:	00000de1 	andeq	r0, r0, r1, ror #27
    463c:	009e1901 	addseq	r1, lr, r1, lsl #18
    4640:	91020000 	mrsls	r0, (UNDEF: 2)
    4644:	0bd70f70 	bleq	ff5c840c <firstTime.4104+0xdf5b3fa0>
    4648:	1c010000 	stcne	0, cr0, [r1], {-0}
    464c:	0000009e 	muleq	r0, lr, r0
    4650:	006c9102 	rsbeq	r9, ip, r2, lsl #2
    4654:	0002e000 	andeq	lr, r2, r0
    4658:	e8000400 	stmda	r0, {sl}
    465c:	04000010 	streq	r0, [r0], #-16
    4660:	00009f01 	andeq	r9, r0, r1, lsl #30
    4664:	1d470c00 	stclne	12, cr0, [r7, #-0]
    4668:	46dc0000 	ldrbmi	r0, [ip], r0
    466c:	00e82000 	rsceq	r2, r8, r0
    4670:	17290000 	strne	r0, [r9, -r0]!
    4674:	0c020000 	stceq	0, cr0, [r2], {-0}
    4678:	004e0502 	subeq	r0, lr, r2, lsl #10
    467c:	6b030000 	blvs	c4684 <startup-0x1ff3b97c>
    4680:	02000003 	andeq	r0, r0, #3
    4684:	00004e07 	andeq	r4, r0, r7, lsl #28
    4688:	39030000 	stmdbcc	r3, {}	; <UNPREDICTABLE>
    468c:	02000007 	andeq	r0, r0, #7
    4690:	00004e08 	andeq	r4, r0, r8, lsl #28
    4694:	ff030400 			; <UNDEFINED> instruction: 0xff030400
    4698:	02000017 	andeq	r0, r0, #23
    469c:	00005509 	andeq	r5, r0, r9, lsl #10
    46a0:	04000800 	streq	r0, [r0], #-2048	; 0xfffff800
    46a4:	03990704 	orrseq	r0, r9, #4, 14	; 0x100000
    46a8:	04050000 	streq	r0, [r5], #-0
    46ac:	0000005b 	andeq	r0, r0, fp, asr r0
    46b0:	f1080104 	cps	#4
    46b4:	06000004 	streq	r0, [r0], -r4
    46b8:	00001969 	andeq	r1, r0, r9, ror #18
    46bc:	00210a02 	eoreq	r0, r1, r2, lsl #20
    46c0:	34070000 	strcc	r0, [r7], #-0
    46c4:	0c000000 	stceq	0, cr0, [r0], {-0}
    46c8:	009e0603 	addseq	r0, lr, r3, lsl #12
    46cc:	e7030000 	str	r0, [r3, -r0]
    46d0:	03000005 	movweq	r0, #5
    46d4:	00009e07 	andeq	r9, r0, r7, lsl #28
    46d8:	3b030000 	blcc	c46e0 <startup-0x1ff3b920>
    46dc:	03000000 	movweq	r0, #0
    46e0:	00009e08 	andeq	r9, r0, r8, lsl #28
    46e4:	30030400 	andcc	r0, r3, r0, lsl #8
    46e8:	03000000 	movweq	r0, #0
    46ec:	00009e09 	andeq	r9, r0, r9, lsl #28
    46f0:	05000800 	streq	r0, [r0, #-2048]	; 0xfffff800
    46f4:	00006204 	andeq	r6, r0, r4, lsl #4
    46f8:	15140600 	ldrne	r0, [r4, #-1536]	; 0xfffffa00
    46fc:	0a030000 	beq	c4704 <startup-0x1ff3b8fc>
    4700:	0000006d 	andeq	r0, r0, sp, rrx
    4704:	0006fc07 	andeq	pc, r6, r7, lsl #24
    4708:	06042400 	streq	r2, [r4], -r0, lsl #8
    470c:	00000128 	andeq	r0, r0, r8, lsr #2
    4710:	00047f03 	andeq	r7, r4, r3, lsl #30
    4714:	28070400 	stmdacs	r7, {sl}
    4718:	00000001 	andeq	r0, r0, r1
    471c:	00070803 	andeq	r0, r7, r3, lsl #16
    4720:	2e080400 	cfcpyscs	mvf0, mvf8
    4724:	04000001 	streq	r0, [r0], #-1
    4728:	00065803 	andeq	r5, r6, r3, lsl #16
    472c:	2e090400 	cfcpyscs	mvf0, mvf9
    4730:	08000001 	stmdaeq	r0, {r0}
    4734:	00068403 	andeq	r8, r6, r3, lsl #8
    4738:	460c0400 	strmi	r0, [ip], -r0, lsl #8
    473c:	0c000001 	stceq	0, cr0, [r0], {1}
    4740:	00035203 	andeq	r5, r3, r3, lsl #4
    4744:	460d0400 	strmi	r0, [sp], -r0, lsl #8
    4748:	10000001 	andne	r0, r0, r1
    474c:	00049103 	andeq	r9, r4, r3, lsl #2
    4750:	2e100400 	cfmulscs	mvf0, mvf0, mvf0
    4754:	14000001 	strne	r0, [r0], #-1
    4758:	00007003 	andeq	r7, r0, r3
    475c:	2e110400 	cfmulscs	mvf0, mvf1, mvf0
    4760:	18000001 	stmdane	r0, {r0}
    4764:	0003fa03 	andeq	pc, r3, r3, lsl #20
    4768:	2e120400 	cfmulscs	mvf0, mvf2, mvf0
    476c:	1c000001 	stcne	0, cr0, [r0], {1}
    4770:	00040a03 	andeq	r0, r4, r3, lsl #20
    4774:	2e130400 	cfmulscs	mvf0, mvf3, mvf0
    4778:	20000001 	andcs	r0, r0, r1
    477c:	a4040500 	strge	r0, [r4], #-1280	; 0xfffffb00
    4780:	08000000 	stmdaeq	r0, {}	; <UNPREDICTABLE>
    4784:	6e690504 	cdpvs	5, 6, cr0, cr9, cr4, {0}
    4788:	40090074 	andmi	r0, r9, r4, ror r0
    478c:	0a000001 	beq	4798 <startup-0x1fffb868>
    4790:	00000140 	andeq	r0, r0, r0, asr #2
    4794:	af040500 	svcge	0x00040500
    4798:	05000000 	streq	r0, [r0, #-0]
    479c:	00013504 	andeq	r3, r1, r4, lsl #10
    47a0:	06fd0600 	ldrbteq	r0, [sp], r0, lsl #12
    47a4:	15040000 	strne	r0, [r4, #-0]
    47a8:	000000af 	andeq	r0, r0, pc, lsr #1
    47ac:	0001620b 	andeq	r6, r1, fp, lsl #4
    47b0:	00016200 	andeq	r6, r1, r0, lsl #4
    47b4:	05000c00 	streq	r0, [r0, #-3072]	; 0xfffff400
    47b8:	00014c04 	andeq	r4, r1, r4, lsl #24
    47bc:	05740d00 	ldrbeq	r0, [r4, #-3328]!	; 0xfffff300
    47c0:	1c040000 	stcne	0, cr0, [r4], {-0}
    47c4:	00000157 	andeq	r0, r0, r7, asr r1
    47c8:	0004450d 	andeq	r4, r4, sp, lsl #10
    47cc:	2e1d0400 	cfmulscs	mvf0, mvf13, mvf0
    47d0:	0b000001 	bleq	47dc <startup-0x1fffb824>
    47d4:	0000005b 	andeq	r0, r0, fp, asr r0
    47d8:	0000018f 	andeq	r0, r0, pc, lsl #3
    47dc:	00018f0e 	andeq	r8, r1, lr, lsl #30
    47e0:	0003ff00 	andeq	pc, r3, r0, lsl #30
    47e4:	27070404 	strcs	r0, [r7, -r4, lsl #8]
    47e8:	0f000004 	svceq	0x00000004
    47ec:	00001d14 	andeq	r1, r0, r4, lsl sp
    47f0:	017e0305 	cmneq	lr, r5, lsl #6
    47f4:	03050000 	movweq	r0, #20480	; 0x5000
    47f8:	2000e3f4 	strdcs	lr, [r0], -r4
    47fc:	001dd70f 	andseq	sp, sp, pc, lsl #14
    4800:	7e030600 	cfmadd32vc	mvax0, mvfx0, mvfx3, mvfx0
    4804:	05000001 	streq	r0, [r0, #-1]
    4808:	00e7f403 	rsceq	pc, r7, r3, lsl #8
    480c:	1db40f20 	ldcne	15, cr0, [r4, #128]!	; 0x80
    4810:	03070000 	movweq	r0, #28672	; 0x7000
    4814:	0000017e 	andeq	r0, r0, lr, ror r1
    4818:	ebf40305 	bl	ffd05434 <firstTime.4104+0xdfcf0fc8>
    481c:	8a102000 	bhi	40c824 <startup-0x1fbf37dc>
    4820:	0100001d 	tsteq	r0, sp, lsl r0
    4824:	00009e08 	andeq	r9, r0, r8, lsl #28
    4828:	d0030500 	andle	r0, r3, r0, lsl #10
    482c:	10200077 	eorne	r0, r0, r7, ror r0
    4830:	00001d3a 	andeq	r1, r0, sl, lsr sp
    4834:	009e0901 	addseq	r0, lr, r1, lsl #18
    4838:	03050000 	movweq	r0, #20480	; 0x5000
    483c:	2000778c 	andcs	r7, r0, ip, lsl #15
    4840:	001d0610 	andseq	r0, sp, r0, lsl r6
    4844:	9e0a0100 	adflse	f0, f2, f0
    4848:	05000000 	streq	r0, [r0, #-0]
    484c:	0077b403 	rsbseq	fp, r7, r3, lsl #8
    4850:	1d781020 	ldclne	0, cr1, [r8, #-128]!	; 0xffffff80
    4854:	0c010000 	stceq	0, cr0, [r1], {-0}
    4858:	00000062 	andeq	r0, r0, r2, rrx
    485c:	77b80305 	ldrvc	r0, [r8, r5, lsl #6]!
    4860:	28102000 	ldmdacs	r0, {sp}
    4864:	0100001d 	tsteq	r0, sp, lsl r0
    4868:	0000620d 	andeq	r6, r0, sp, lsl #4
    486c:	c4030500 	strgt	r0, [r3], #-1280	; 0xfffffb00
    4870:	10200077 	eorne	r0, r0, r7, ror r0
    4874:	00001df6 	strdeq	r1, [r0], -r6
    4878:	00620e01 	rsbeq	r0, r2, r1, lsl #28
    487c:	03050000 	movweq	r0, #20480	; 0x5000
    4880:	200077a8 	andcs	r7, r0, r8, lsr #15
    4884:	001dea10 	andseq	lr, sp, r0, lsl sl
    4888:	4c110100 	ldfmis	f0, [r1], {-0}
    488c:	05000001 	streq	r0, [r0, #-1]
    4890:	00776803 	rsbseq	r6, r7, r3, lsl #16
    4894:	1d981020 	ldcne	0, cr1, [r8, #128]	; 0x80
    4898:	12010000 	andne	r0, r1, #0
    489c:	000000a4 	andeq	r0, r0, r4, lsr #1
    48a0:	779c0305 	ldrvc	r0, [ip, r5, lsl #6]
    48a4:	a40b2000 	strge	r2, [fp], #-0
    48a8:	61000000 	mrsvs	r0, (UNDEF: 0)
    48ac:	11000002 	tstne	r0, r2
    48b0:	0000018f 	andeq	r0, r0, pc, lsl #3
    48b4:	c8100000 	ldmdagt	r0, {}	; <UNPREDICTABLE>
    48b8:	0100001d 	tsteq	r0, sp, lsl r0
    48bc:	00025113 	andeq	r5, r2, r3, lsl r1
    48c0:	90030500 	andls	r0, r3, r0, lsl #10
    48c4:	12200077 	eorne	r0, r0, #119	; 0x77
    48c8:	00001da6 	andeq	r1, r0, r6, lsr #27
    48cc:	47502201 	ldrbmi	r2, [r0, -r1, lsl #4]
    48d0:	00742000 	rsbseq	r2, r4, r0
    48d4:	9c010000 	stcls	0, cr0, [r1], {-0}
    48d8:	000002a7 	andeq	r0, r0, r7, lsr #5
    48dc:	001dea13 	andseq	lr, sp, r3, lsl sl
    48e0:	62220100 	eorvs	r0, r2, #0, 2
    48e4:	02000001 	andeq	r0, r0, #1
    48e8:	360f6c91 			; <UNDEFINED> instruction: 0x360f6c91
    48ec:	01000009 	tsteq	r0, r9
    48f0:	00012e23 	andeq	r2, r1, r3, lsr #28
    48f4:	f4030500 	vst3.8	{d0,d2,d4}, [r3], r0
    48f8:	002000ef 	eoreq	r0, r0, pc, ror #1
    48fc:	0004c714 	andeq	ip, r4, r4, lsl r7
    4900:	dc140100 	ldfles	f0, [r4], {-0}
    4904:	74200046 	strtvc	r0, [r0], #-70	; 0xffffffba
    4908:	01000000 	mrseq	r0, (UNDEF: 0)
    490c:	0dd70f9c 	ldcleq	15, cr0, [r7, #624]	; 0x270
    4910:	16010000 	strne	r0, [r1], -r0
    4914:	0000009e 	muleq	r0, lr, r0
    4918:	0f749102 	svceq	0x00749102
    491c:	00000de1 	andeq	r0, r0, r1, ror #27
    4920:	009e1901 	addseq	r1, lr, r1, lsl #18
    4924:	91020000 	mrsls	r0, (UNDEF: 2)
    4928:	0bd70f70 	bleq	ff5c86f0 <firstTime.4104+0xdf5b4284>
    492c:	1c010000 	stcne	0, cr0, [r1], {-0}
    4930:	0000009e 	muleq	r0, lr, r0
    4934:	006c9102 	rsbeq	r9, ip, r2, lsl #2
    4938:	0002df00 	andeq	sp, r2, r0, lsl #30
    493c:	f1000400 			; <UNDEFINED> instruction: 0xf1000400
    4940:	04000011 	streq	r0, [r0], #-17	; 0xffffffef
    4944:	00009f01 	andeq	r9, r0, r1, lsl #30
    4948:	1e070c00 	cdpne	12, 0, cr0, cr7, cr0, {0}
    494c:	47c40000 	strbmi	r0, [r4, r0]
    4950:	00e82000 	rsceq	r2, r8, r0
    4954:	18070000 	stmdane	r7, {}	; <UNPREDICTABLE>
    4958:	0c020000 	stceq	0, cr0, [r2], {-0}
    495c:	004e0502 	subeq	r0, lr, r2, lsl #10
    4960:	6b030000 	blvs	c4968 <startup-0x1ff3b698>
    4964:	02000003 	andeq	r0, r0, #3
    4968:	00004e07 	andeq	r4, r0, r7, lsl #28
    496c:	39030000 	stmdbcc	r3, {}	; <UNPREDICTABLE>
    4970:	02000007 	andeq	r0, r0, #7
    4974:	00004e08 	andeq	r4, r0, r8, lsl #28
    4978:	ff030400 			; <UNDEFINED> instruction: 0xff030400
    497c:	02000017 	andeq	r0, r0, #23
    4980:	00005509 	andeq	r5, r0, r9, lsl #10
    4984:	04000800 	streq	r0, [r0], #-2048	; 0xfffff800
    4988:	03990704 	orrseq	r0, r9, #4, 14	; 0x100000
    498c:	04050000 	streq	r0, [r5], #-0
    4990:	0000005b 	andeq	r0, r0, fp, asr r0
    4994:	f1080104 	cps	#4
    4998:	06000004 	streq	r0, [r0], -r4
    499c:	00001969 	andeq	r1, r0, r9, ror #18
    49a0:	00210a02 	eoreq	r0, r1, r2, lsl #20
    49a4:	34070000 	strcc	r0, [r7], #-0
    49a8:	0c000000 	stceq	0, cr0, [r0], {-0}
    49ac:	009e0603 	addseq	r0, lr, r3, lsl #12
    49b0:	e7030000 	str	r0, [r3, -r0]
    49b4:	03000005 	movweq	r0, #5
    49b8:	00009e07 	andeq	r9, r0, r7, lsl #28
    49bc:	3b030000 	blcc	c49c4 <startup-0x1ff3b63c>
    49c0:	03000000 	movweq	r0, #0
    49c4:	00009e08 	andeq	r9, r0, r8, lsl #28
    49c8:	30030400 	andcc	r0, r3, r0, lsl #8
    49cc:	03000000 	movweq	r0, #0
    49d0:	00009e09 	andeq	r9, r0, r9, lsl #28
    49d4:	05000800 	streq	r0, [r0, #-2048]	; 0xfffff800
    49d8:	00006204 	andeq	r6, r0, r4, lsl #4
    49dc:	15140600 	ldrne	r0, [r4, #-1536]	; 0xfffffa00
    49e0:	0a030000 	beq	c49e8 <startup-0x1ff3b618>
    49e4:	0000006d 	andeq	r0, r0, sp, rrx
    49e8:	0006fc07 	andeq	pc, r6, r7, lsl #24
    49ec:	06042400 	streq	r2, [r4], -r0, lsl #8
    49f0:	00000128 	andeq	r0, r0, r8, lsr #2
    49f4:	00047f03 	andeq	r7, r4, r3, lsl #30
    49f8:	28070400 	stmdacs	r7, {sl}
    49fc:	00000001 	andeq	r0, r0, r1
    4a00:	00070803 	andeq	r0, r7, r3, lsl #16
    4a04:	2e080400 	cfcpyscs	mvf0, mvf8
    4a08:	04000001 	streq	r0, [r0], #-1
    4a0c:	00065803 	andeq	r5, r6, r3, lsl #16
    4a10:	2e090400 	cfcpyscs	mvf0, mvf9
    4a14:	08000001 	stmdaeq	r0, {r0}
    4a18:	00068403 	andeq	r8, r6, r3, lsl #8
    4a1c:	460c0400 	strmi	r0, [ip], -r0, lsl #8
    4a20:	0c000001 	stceq	0, cr0, [r0], {1}
    4a24:	00035203 	andeq	r5, r3, r3, lsl #4
    4a28:	460d0400 	strmi	r0, [sp], -r0, lsl #8
    4a2c:	10000001 	andne	r0, r0, r1
    4a30:	00049103 	andeq	r9, r4, r3, lsl #2
    4a34:	2e100400 	cfmulscs	mvf0, mvf0, mvf0
    4a38:	14000001 	strne	r0, [r0], #-1
    4a3c:	00007003 	andeq	r7, r0, r3
    4a40:	2e110400 	cfmulscs	mvf0, mvf1, mvf0
    4a44:	18000001 	stmdane	r0, {r0}
    4a48:	0003fa03 	andeq	pc, r3, r3, lsl #20
    4a4c:	2e120400 	cfmulscs	mvf0, mvf2, mvf0
    4a50:	1c000001 	stcne	0, cr0, [r0], {1}
    4a54:	00040a03 	andeq	r0, r4, r3, lsl #20
    4a58:	2e130400 	cfmulscs	mvf0, mvf3, mvf0
    4a5c:	20000001 	andcs	r0, r0, r1
    4a60:	a4040500 	strge	r0, [r4], #-1280	; 0xfffffb00
    4a64:	08000000 	stmdaeq	r0, {}	; <UNPREDICTABLE>
    4a68:	6e690504 	cdpvs	5, 6, cr0, cr9, cr4, {0}
    4a6c:	40090074 	andmi	r0, r9, r4, ror r0
    4a70:	0a000001 	beq	4a7c <startup-0x1fffb584>
    4a74:	00000140 	andeq	r0, r0, r0, asr #2
    4a78:	af040500 	svcge	0x00040500
    4a7c:	05000000 	streq	r0, [r0, #-0]
    4a80:	00013504 	andeq	r3, r1, r4, lsl #10
    4a84:	06fd0600 	ldrbteq	r0, [sp], r0, lsl #12
    4a88:	15040000 	strne	r0, [r4, #-0]
    4a8c:	000000af 	andeq	r0, r0, pc, lsr #1
    4a90:	0001620b 	andeq	r6, r1, fp, lsl #4
    4a94:	00016200 	andeq	r6, r1, r0, lsl #4
    4a98:	05000c00 	streq	r0, [r0, #-3072]	; 0xfffff400
    4a9c:	00014c04 	andeq	r4, r1, r4, lsl #24
    4aa0:	05740d00 	ldrbeq	r0, [r4, #-3328]!	; 0xfffff300
    4aa4:	1c040000 	stcne	0, cr0, [r4], {-0}
    4aa8:	00000157 	andeq	r0, r0, r7, asr r1
    4aac:	0004450d 	andeq	r4, r4, sp, lsl #10
    4ab0:	2e1d0400 	cfmulscs	mvf0, mvf13, mvf0
    4ab4:	0b000001 	bleq	4ac0 <startup-0x1fffb540>
    4ab8:	0000005b 	andeq	r0, r0, fp, asr r0
    4abc:	0000018e 	andeq	r0, r0, lr, lsl #3
    4ac0:	00018e0e 	andeq	r8, r1, lr, lsl #28
    4ac4:	04002100 	streq	r2, [r0], #-256	; 0xffffff00
    4ac8:	04270704 	strteq	r0, [r7], #-1796	; 0xfffff8fc
    4acc:	360f0000 	strcc	r0, [pc], -r0
    4ad0:	0500001e 	streq	r0, [r0, #-30]	; 0xffffffe2
    4ad4:	00017e03 	andeq	r7, r1, r3, lsl #28
    4ad8:	f8030500 			; <UNDEFINED> instruction: 0xf8030500
    4adc:	0f2000ef 	svceq	0x002000ef
    4ae0:	00001e80 	andeq	r1, r0, r0, lsl #29
    4ae4:	017e0306 	cmneq	lr, r6, lsl #6
    4ae8:	03050000 	movweq	r0, #20480	; 0x5000
    4aec:	2000f01c 	andcs	pc, r0, ip, lsl r0	; <UNPREDICTABLE>
    4af0:	001e5e0f 	andseq	r5, lr, pc, lsl #28
    4af4:	7e030700 	cdpvc	7, 0, cr0, cr3, cr0, {0}
    4af8:	05000001 	streq	r0, [r0, #-1]
    4afc:	00f04003 	rscseq	r4, r0, r3
    4b00:	1ec51020 	cdpne	0, 12, cr1, cr5, cr0, {1}
    4b04:	08010000 	stmdaeq	r1, {}	; <UNPREDICTABLE>
    4b08:	0000009e 	muleq	r0, lr, r0
    4b0c:	77e00305 	strbvc	r0, [r0, r5, lsl #6]!
    4b10:	a1102000 	tstge	r0, r0
    4b14:	0100001e 	tsteq	r0, lr, lsl r0
    4b18:	00009e09 	andeq	r9, r0, r9, lsl #28
    4b1c:	20030500 	andcs	r0, r3, r0, lsl #10
    4b20:	10200078 	eorne	r0, r0, r8, ror r0
    4b24:	00001e48 	andeq	r1, r0, r8, asr #28
    4b28:	009e0a01 	addseq	r0, lr, r1, lsl #20
    4b2c:	03050000 	movweq	r0, #20480	; 0x5000
    4b30:	2000783c 	andcs	r7, r0, ip, lsr r8
    4b34:	001e7010 	andseq	r7, lr, r0, lsl r0
    4b38:	620c0100 	andvs	r0, ip, #0, 2
    4b3c:	05000000 	streq	r0, [r0, #-0]
    4b40:	00782403 	rsbseq	r2, r8, r3, lsl #8
    4b44:	1e911020 	cdpne	0, 9, cr1, cr1, cr0, {1}
    4b48:	0d010000 	stceq	0, cr0, [r1, #-0]
    4b4c:	00000062 	andeq	r0, r0, r2, rrx
    4b50:	77f00305 	ldrbvc	r0, [r0, r5, lsl #6]!
    4b54:	d1102000 	tstle	r0, r0
    4b58:	0100001e 	tsteq	r0, lr, lsl r0
    4b5c:	0000620e 	andeq	r6, r0, lr, lsl #4
    4b60:	30030500 	andcc	r0, r3, r0, lsl #10
    4b64:	10200078 	eorne	r0, r0, r8, ror r0
    4b68:	00001e54 	andeq	r1, r0, r4, asr lr
    4b6c:	014c1101 	cmpeq	ip, r1, lsl #2
    4b70:	03050000 	movweq	r0, #20480	; 0x5000
    4b74:	200077fc 	strdcs	r7, [r0], -ip
    4b78:	001eb910 	andseq	fp, lr, r0, lsl r9
    4b7c:	a4120100 	ldrge	r0, [r2], #-256	; 0xffffff00
    4b80:	05000000 	streq	r0, [r0, #-0]
    4b84:	0077e403 	rsbseq	lr, r7, r3, lsl #8
    4b88:	00a40b20 	adceq	r0, r4, r0, lsr #22
    4b8c:	02600000 	rsbeq	r0, r0, #0
    4b90:	8e0e0000 	cdphi	0, 0, cr0, cr14, cr0, {0}
    4b94:	00000001 	andeq	r0, r0, r1
    4b98:	1eac1000 	cdpne	0, 10, cr1, cr12, cr0, {0}
    4b9c:	13010000 	movwne	r0, #4096	; 0x1000
    4ba0:	00000250 	andeq	r0, r0, r0, asr r2
    4ba4:	77d40305 	ldrbvc	r0, [r4, r5, lsl #6]
    4ba8:	fd112000 	ldc2	0, cr2, [r1, #-0]
    4bac:	01000002 	tsteq	r0, r2
    4bb0:	00483822 	subeq	r3, r8, r2, lsr #16
    4bb4:	00007420 	andeq	r7, r0, r0, lsr #8
    4bb8:	a69c0100 	ldrge	r0, [ip], r0, lsl #2
    4bbc:	12000002 	andne	r0, r0, #2
    4bc0:	00001e54 	andeq	r1, r0, r4, asr lr
    4bc4:	01622201 	cmneq	r2, r1, lsl #4
    4bc8:	91020000 	mrsls	r0, (UNDEF: 2)
    4bcc:	09360f6c 	ldmdbeq	r6!, {r2, r3, r5, r6, r8, r9, sl, fp}
    4bd0:	23010000 	movwcs	r0, #4096	; 0x1000
    4bd4:	0000012e 	andeq	r0, r0, lr, lsr #2
    4bd8:	f0640305 			; <UNDEFINED> instruction: 0xf0640305
    4bdc:	13002000 	movwne	r2, #0
    4be0:	000004c7 	andeq	r0, r0, r7, asr #9
    4be4:	47c41401 	strbmi	r1, [r4, r1, lsl #8]
    4be8:	00742000 	rsbseq	r2, r4, r0
    4bec:	9c010000 	stcls	0, cr0, [r1], {-0}
    4bf0:	000dd70f 	andeq	sp, sp, pc, lsl #14
    4bf4:	9e160100 	muflss	f0, f6, f0
    4bf8:	02000000 	andeq	r0, r0, #0
    4bfc:	e10f7491 			; <UNDEFINED> instruction: 0xe10f7491
    4c00:	0100000d 	tsteq	r0, sp
    4c04:	00009e19 	andeq	r9, r0, r9, lsl lr
    4c08:	70910200 	addsvc	r0, r1, r0, lsl #4
    4c0c:	000bd70f 	andeq	sp, fp, pc, lsl #14
    4c10:	9e1c0100 	muflse	f0, f4, f0
    4c14:	02000000 	andeq	r0, r0, #0
    4c18:	00006c91 	muleq	r0, r1, ip
    4c1c:	000002e0 	andeq	r0, r0, r0, ror #5
    4c20:	12f10004 	rscsne	r0, r1, #4
    4c24:	01040000 	mrseq	r0, (UNDEF: 4)
    4c28:	0000009f 	muleq	r0, pc, r0	; <UNPREDICTABLE>
    4c2c:	001f050c 	andseq	r0, pc, ip, lsl #10
    4c30:	0048ac00 	subeq	sl, r8, r0, lsl #24
    4c34:	0000e820 	andeq	lr, r0, r0, lsr #16
    4c38:	0018dd00 	andseq	sp, r8, r0, lsl #26
    4c3c:	020c0200 	andeq	r0, ip, #0, 4
    4c40:	00004e05 	andeq	r4, r0, r5, lsl #28
    4c44:	036b0300 	cmneq	fp, #0, 6
    4c48:	07020000 	streq	r0, [r2, -r0]
    4c4c:	0000004e 	andeq	r0, r0, lr, asr #32
    4c50:	07390300 	ldreq	r0, [r9, -r0, lsl #6]!
    4c54:	08020000 	stmdaeq	r2, {}	; <UNPREDICTABLE>
    4c58:	0000004e 	andeq	r0, r0, lr, asr #32
    4c5c:	17ff0304 	ldrbne	r0, [pc, r4, lsl #6]!
    4c60:	09020000 	stmdbeq	r2, {}	; <UNPREDICTABLE>
    4c64:	00000055 	andeq	r0, r0, r5, asr r0
    4c68:	04040008 	streq	r0, [r4], #-8
    4c6c:	00039907 	andeq	r9, r3, r7, lsl #18
    4c70:	5b040500 	blpl	106078 <startup-0x1fef9f88>
    4c74:	04000000 	streq	r0, [r0], #-0
    4c78:	04f10801 	ldrbteq	r0, [r1], #2049	; 0x801
    4c7c:	69060000 	stmdbvs	r6, {}	; <UNPREDICTABLE>
    4c80:	02000019 	andeq	r0, r0, #25
    4c84:	0000210a 	andeq	r2, r0, sl, lsl #2
    4c88:	00340700 	eorseq	r0, r4, r0, lsl #14
    4c8c:	030c0000 	movweq	r0, #49152	; 0xc000
    4c90:	00009e06 	andeq	r9, r0, r6, lsl #28
    4c94:	05e70300 	strbeq	r0, [r7, #768]!	; 0x300
    4c98:	07030000 	streq	r0, [r3, -r0]
    4c9c:	0000009e 	muleq	r0, lr, r0
    4ca0:	003b0300 	eorseq	r0, fp, r0, lsl #6
    4ca4:	08030000 	stmdaeq	r3, {}	; <UNPREDICTABLE>
    4ca8:	0000009e 	muleq	r0, lr, r0
    4cac:	00300304 	eorseq	r0, r0, r4, lsl #6
    4cb0:	09030000 	stmdbeq	r3, {}	; <UNPREDICTABLE>
    4cb4:	0000009e 	muleq	r0, lr, r0
    4cb8:	04050008 	streq	r0, [r5], #-8
    4cbc:	00000062 	andeq	r0, r0, r2, rrx
    4cc0:	00151406 	andseq	r1, r5, r6, lsl #8
    4cc4:	6d0a0300 	stcvs	3, cr0, [sl, #-0]
    4cc8:	07000000 	streq	r0, [r0, -r0]
    4ccc:	000006fc 	strdeq	r0, [r0], -ip
    4cd0:	28060424 	stmdacs	r6, {r2, r5, sl}
    4cd4:	03000001 	movweq	r0, #1
    4cd8:	0000047f 	andeq	r0, r0, pc, ror r4
    4cdc:	01280704 			; <UNDEFINED> instruction: 0x01280704
    4ce0:	03000000 	movweq	r0, #0
    4ce4:	00000708 	andeq	r0, r0, r8, lsl #14
    4ce8:	012e0804 			; <UNDEFINED> instruction: 0x012e0804
    4cec:	03040000 	movweq	r0, #16384	; 0x4000
    4cf0:	00000658 	andeq	r0, r0, r8, asr r6
    4cf4:	012e0904 			; <UNDEFINED> instruction: 0x012e0904
    4cf8:	03080000 	movweq	r0, #32768	; 0x8000
    4cfc:	00000684 	andeq	r0, r0, r4, lsl #13
    4d00:	01460c04 	cmpeq	r6, r4, lsl #24
    4d04:	030c0000 	movweq	r0, #49152	; 0xc000
    4d08:	00000352 	andeq	r0, r0, r2, asr r3
    4d0c:	01460d04 	cmpeq	r6, r4, lsl #26
    4d10:	03100000 	tsteq	r0, #0
    4d14:	00000491 	muleq	r0, r1, r4
    4d18:	012e1004 			; <UNDEFINED> instruction: 0x012e1004
    4d1c:	03140000 	tsteq	r4, #0
    4d20:	00000070 	andeq	r0, r0, r0, ror r0
    4d24:	012e1104 			; <UNDEFINED> instruction: 0x012e1104
    4d28:	03180000 	tsteq	r8, #0
    4d2c:	000003fa 	strdeq	r0, [r0], -sl
    4d30:	012e1204 			; <UNDEFINED> instruction: 0x012e1204
    4d34:	031c0000 	tsteq	ip, #0
    4d38:	0000040a 	andeq	r0, r0, sl, lsl #8
    4d3c:	012e1304 			; <UNDEFINED> instruction: 0x012e1304
    4d40:	00200000 	eoreq	r0, r0, r0
    4d44:	00a40405 	adceq	r0, r4, r5, lsl #8
    4d48:	04080000 	streq	r0, [r8], #-0
    4d4c:	746e6905 	strbtvc	r6, [lr], #-2309	; 0xfffff6fb
    4d50:	01400900 	cmpeq	r0, r0, lsl #18
    4d54:	400a0000 	andmi	r0, sl, r0
    4d58:	00000001 	andeq	r0, r0, r1
    4d5c:	00af0405 	adceq	r0, pc, r5, lsl #8
    4d60:	04050000 	streq	r0, [r5], #-0
    4d64:	00000135 	andeq	r0, r0, r5, lsr r1
    4d68:	0006fd06 	andeq	pc, r6, r6, lsl #26
    4d6c:	af150400 	svcge	0x00150400
    4d70:	0b000000 	bleq	4d78 <startup-0x1fffb288>
    4d74:	00000162 	andeq	r0, r0, r2, ror #2
    4d78:	00000162 	andeq	r0, r0, r2, ror #2
    4d7c:	0405000c 	streq	r0, [r5], #-12
    4d80:	0000014c 	andeq	r0, r0, ip, asr #2
    4d84:	0005740d 	andeq	r7, r5, sp, lsl #8
    4d88:	571c0400 	ldrpl	r0, [ip, -r0, lsl #8]
    4d8c:	0d000001 	stceq	0, cr0, [r0, #-4]
    4d90:	00000445 	andeq	r0, r0, r5, asr #8
    4d94:	012e1d04 			; <UNDEFINED> instruction: 0x012e1d04
    4d98:	5b0b0000 	blpl	2c4da0 <startup-0x1fd3b260>
    4d9c:	8f000000 	svchi	0x00000000
    4da0:	0e000001 	cdpeq	0, 0, cr0, cr0, cr1, {0}
    4da4:	0000018f 	andeq	r0, r0, pc, lsl #3
    4da8:	040003ff 	streq	r0, [r0], #-1023	; 0xfffffc01
    4dac:	04270704 	strteq	r0, [r7], #-1796	; 0xfffff8fc
    4db0:	e00f0000 	and	r0, pc, r0
    4db4:	0500001e 	streq	r0, [r0, #-30]	; 0xffffffe2
    4db8:	00017e03 	andeq	r7, r1, r3, lsl #28
    4dbc:	68030500 	stmdavs	r3, {r8, sl}
    4dc0:	0f2000f0 	svceq	0x002000f0
    4dc4:	00001f50 	andeq	r1, r0, r0, asr pc
    4dc8:	017e0306 	cmneq	lr, r6, lsl #6
    4dcc:	03050000 	movweq	r0, #20480	; 0x5000
    4dd0:	2000f468 	andcs	pc, r0, r8, ror #8
    4dd4:	001f810f 	andseq	r8, pc, pc, lsl #2
    4dd8:	7e030700 	cdpvc	7, 0, cr0, cr3, cr0, {0}
    4ddc:	05000001 	streq	r0, [r0, #-1]
    4de0:	00f86803 	rscseq	r6, r8, r3, lsl #16
    4de4:	1f9d1020 	svcne	0x009d1020
    4de8:	08010000 	stmdaeq	r1, {}	; <UNPREDICTABLE>
    4dec:	0000009e 	muleq	r0, lr, r0
    4df0:	789c0305 	ldmvc	ip, {r0, r2, r8, r9}
    4df4:	6c102000 	ldcvs	0, cr2, [r0], {-0}
    4df8:	0100001f 	tsteq	r0, pc, lsl r0
    4dfc:	00009e09 	andeq	r9, r0, r9, lsl #28
    4e00:	4c030500 	cfstr32mi	mvfx0, [r3], {-0}
    4e04:	10200078 	eorne	r0, r0, r8, ror r0
    4e08:	00001f76 	andeq	r1, r0, r6, ror pc
    4e0c:	009e0a01 	addseq	r0, lr, r1, lsl #20
    4e10:	03050000 	movweq	r0, #20480	; 0x5000
    4e14:	20007868 	andcs	r7, r0, r8, ror #16
    4e18:	001f4110 	andseq	r4, pc, r0, lsl r1	; <UNPREDICTABLE>
    4e1c:	620c0100 	andvs	r0, ip, #0, 2
    4e20:	05000000 	streq	r0, [r0, #-0]
    4e24:	00789003 	rsbseq	r9, r8, r3
    4e28:	1fa81020 	svcne	0x00a81020
    4e2c:	0d010000 	stceq	0, cr0, [r1, #-0]
    4e30:	00000062 	andeq	r0, r0, r2, rrx
    4e34:	785c0305 	ldmdavc	ip, {r0, r2, r8, r9}^
    4e38:	33102000 	tstcc	r0, #0
    4e3c:	0100001f 	tsteq	r0, pc, lsl r0
    4e40:	0000620e 	andeq	r6, r0, lr, lsl #4
    4e44:	50030500 	andpl	r0, r3, r0, lsl #10
    4e48:	10200078 	eorne	r0, r0, r8, ror r0
    4e4c:	00001efc 	strdeq	r1, [r0], -ip
    4e50:	014c1101 	cmpeq	ip, r1, lsl #2
    4e54:	03050000 	movweq	r0, #20480	; 0x5000
    4e58:	2000786c 	andcs	r7, r0, ip, ror #16
    4e5c:	001f9210 	andseq	r9, pc, r0, lsl r2	; <UNPREDICTABLE>
    4e60:	a4120100 	ldrge	r0, [r2], #-256	; 0xffffff00
    4e64:	05000000 	streq	r0, [r0, #-0]
    4e68:	00784003 	rsbseq	r4, r8, r3
    4e6c:	00a40b20 	adceq	r0, r4, r0, lsr #22
    4e70:	02610000 	rsbeq	r0, r1, #0
    4e74:	8f110000 	svchi	0x00110000
    4e78:	00000001 	andeq	r0, r0, r1
    4e7c:	1f601000 	svcne	0x00601000
    4e80:	13010000 	movwne	r0, #4096	; 0x1000
    4e84:	00000251 	andeq	r0, r0, r1, asr r2
    4e88:	78a00305 	stmiavc	r0!, {r0, r2, r8, r9}
    4e8c:	f1122000 			; <UNDEFINED> instruction: 0xf1122000
    4e90:	0100001e 	tsteq	r0, lr, lsl r0
    4e94:	00492022 	subeq	r2, r9, r2, lsr #32
    4e98:	00007420 	andeq	r7, r0, r0, lsr #8
    4e9c:	a79c0100 	ldrge	r0, [ip, r0, lsl #2]
    4ea0:	13000002 	movwne	r0, #2
    4ea4:	00001efc 	strdeq	r1, [r0], -ip
    4ea8:	01622201 	cmneq	r2, r1, lsl #4
    4eac:	91020000 	mrsls	r0, (UNDEF: 2)
    4eb0:	09360f6c 	ldmdbeq	r6!, {r2, r3, r5, r6, r8, r9, sl, fp}
    4eb4:	23010000 	movwcs	r0, #4096	; 0x1000
    4eb8:	0000012e 	andeq	r0, r0, lr, lsr #2
    4ebc:	fc680305 	stc2l	3, cr0, [r8], #-20	; 0xffffffec
    4ec0:	14002000 	strne	r2, [r0], #-0
    4ec4:	000004c7 	andeq	r0, r0, r7, asr #9
    4ec8:	48ac1401 	stmiami	ip!, {r0, sl, ip}
    4ecc:	00742000 	rsbseq	r2, r4, r0
    4ed0:	9c010000 	stcls	0, cr0, [r1], {-0}
    4ed4:	000dd70f 	andeq	sp, sp, pc, lsl #14
    4ed8:	9e160100 	muflss	f0, f6, f0
    4edc:	02000000 	andeq	r0, r0, #0
    4ee0:	e10f7491 			; <UNDEFINED> instruction: 0xe10f7491
    4ee4:	0100000d 	tsteq	r0, sp
    4ee8:	00009e19 	andeq	r9, r0, r9, lsl lr
    4eec:	70910200 	addsvc	r0, r1, r0, lsl #4
    4ef0:	000bd70f 	andeq	sp, fp, pc, lsl #14
    4ef4:	9e1c0100 	muflse	f0, f4, f0
    4ef8:	02000000 	andeq	r0, r0, #0
    4efc:	00006c91 	muleq	r0, r1, ip
    4f00:	000006fa 	strdeq	r0, [r0], -sl
    4f04:	13fa0004 	mvnsne	r0, #4
    4f08:	01040000 	mrseq	r0, (UNDEF: 4)
    4f0c:	0000009f 	muleq	r0, pc, r0	; <UNPREDICTABLE>
    4f10:	00201a0c 	eoreq	r1, r0, ip, lsl #20
    4f14:	00499400 	subeq	r9, r9, r0, lsl #8
    4f18:	0003d820 	andeq	sp, r3, r0, lsr #16
    4f1c:	0019af00 	andseq	sl, r9, r0, lsl #30
    4f20:	020c0200 	andeq	r0, ip, #0, 4
    4f24:	00004e05 	andeq	r4, r0, r5, lsl #28
    4f28:	036b0300 	cmneq	fp, #0, 6
    4f2c:	07020000 	streq	r0, [r2, -r0]
    4f30:	0000004e 	andeq	r0, r0, lr, asr #32
    4f34:	07390300 	ldreq	r0, [r9, -r0, lsl #6]!
    4f38:	08020000 	stmdaeq	r2, {}	; <UNPREDICTABLE>
    4f3c:	0000004e 	andeq	r0, r0, lr, asr #32
    4f40:	17ff0304 	ldrbne	r0, [pc, r4, lsl #6]!
    4f44:	09020000 	stmdbeq	r2, {}	; <UNPREDICTABLE>
    4f48:	00000055 	andeq	r0, r0, r5, asr r0
    4f4c:	04040008 	streq	r0, [r4], #-8
    4f50:	00039907 	andeq	r9, r3, r7, lsl #18
    4f54:	5b040500 	blpl	10635c <startup-0x1fef9ca4>
    4f58:	04000000 	streq	r0, [r0], #-0
    4f5c:	04f10801 	ldrbteq	r0, [r1], #2049	; 0x801
    4f60:	69060000 	stmdbvs	r6, {}	; <UNPREDICTABLE>
    4f64:	02000019 	andeq	r0, r0, #25
    4f68:	0000210a 	andeq	r2, r0, sl, lsl #2
    4f6c:	00340700 	eorseq	r0, r4, r0, lsl #14
    4f70:	030c0000 	movweq	r0, #49152	; 0xc000
    4f74:	00009e06 	andeq	r9, r0, r6, lsl #28
    4f78:	05e70300 	strbeq	r0, [r7, #768]!	; 0x300
    4f7c:	07030000 	streq	r0, [r3, -r0]
    4f80:	0000009e 	muleq	r0, lr, r0
    4f84:	003b0300 	eorseq	r0, fp, r0, lsl #6
    4f88:	08030000 	stmdaeq	r3, {}	; <UNPREDICTABLE>
    4f8c:	0000009e 	muleq	r0, lr, r0
    4f90:	00300304 	eorseq	r0, r0, r4, lsl #6
    4f94:	09030000 	stmdbeq	r3, {}	; <UNPREDICTABLE>
    4f98:	0000009e 	muleq	r0, lr, r0
    4f9c:	04050008 	streq	r0, [r5], #-8
    4fa0:	00000062 	andeq	r0, r0, r2, rrx
    4fa4:	00151406 	andseq	r1, r5, r6, lsl #8
    4fa8:	6d0a0300 	stcvs	3, cr0, [sl, #-0]
    4fac:	07000000 	streq	r0, [r0, -r0]
    4fb0:	000006fc 	strdeq	r0, [r0], -ip
    4fb4:	28060424 	stmdacs	r6, {r2, r5, sl}
    4fb8:	03000001 	movweq	r0, #1
    4fbc:	0000047f 	andeq	r0, r0, pc, ror r4
    4fc0:	01280704 			; <UNDEFINED> instruction: 0x01280704
    4fc4:	03000000 	movweq	r0, #0
    4fc8:	00000708 	andeq	r0, r0, r8, lsl #14
    4fcc:	012e0804 			; <UNDEFINED> instruction: 0x012e0804
    4fd0:	03040000 	movweq	r0, #16384	; 0x4000
    4fd4:	00000658 	andeq	r0, r0, r8, asr r6
    4fd8:	012e0904 			; <UNDEFINED> instruction: 0x012e0904
    4fdc:	03080000 	movweq	r0, #32768	; 0x8000
    4fe0:	00000684 	andeq	r0, r0, r4, lsl #13
    4fe4:	01460c04 	cmpeq	r6, r4, lsl #24
    4fe8:	030c0000 	movweq	r0, #49152	; 0xc000
    4fec:	00000352 	andeq	r0, r0, r2, asr r3
    4ff0:	01460d04 	cmpeq	r6, r4, lsl #26
    4ff4:	03100000 	tsteq	r0, #0
    4ff8:	00000491 	muleq	r0, r1, r4
    4ffc:	012e1004 			; <UNDEFINED> instruction: 0x012e1004
    5000:	03140000 	tsteq	r4, #0
    5004:	00000070 	andeq	r0, r0, r0, ror r0
    5008:	012e1104 			; <UNDEFINED> instruction: 0x012e1104
    500c:	03180000 	tsteq	r8, #0
    5010:	000003fa 	strdeq	r0, [r0], -sl
    5014:	012e1204 			; <UNDEFINED> instruction: 0x012e1204
    5018:	031c0000 	tsteq	ip, #0
    501c:	0000040a 	andeq	r0, r0, sl, lsl #8
    5020:	012e1304 			; <UNDEFINED> instruction: 0x012e1304
    5024:	00200000 	eoreq	r0, r0, r0
    5028:	00a40405 	adceq	r0, r4, r5, lsl #8
    502c:	04080000 	streq	r0, [r8], #-0
    5030:	746e6905 	strbtvc	r6, [lr], #-2309	; 0xfffff6fb
    5034:	01400900 	cmpeq	r0, r0, lsl #18
    5038:	400a0000 	andmi	r0, sl, r0
    503c:	00000001 	andeq	r0, r0, r1
    5040:	00af0405 	adceq	r0, pc, r5, lsl #8
    5044:	04050000 	streq	r0, [r5], #-0
    5048:	00000135 	andeq	r0, r0, r5, lsr r1
    504c:	0006fd06 	andeq	pc, r6, r6, lsl #26
    5050:	af150400 	svcge	0x00150400
    5054:	0b000000 	bleq	505c <startup-0x1fffafa4>
    5058:	00000162 	andeq	r0, r0, r2, ror #2
    505c:	00000162 	andeq	r0, r0, r2, ror #2
    5060:	0405000c 	streq	r0, [r5], #-12
    5064:	0000014c 	andeq	r0, r0, ip, asr #2
    5068:	0005740d 	andeq	r7, r5, sp, lsl #8
    506c:	571c0400 	ldrpl	r0, [ip, -r0, lsl #8]
    5070:	0d000001 	stceq	0, cr0, [r0, #-4]
    5074:	00000445 	andeq	r0, r0, r5, asr #8
    5078:	012e1d04 			; <UNDEFINED> instruction: 0x012e1d04
    507c:	5b0b0000 	blpl	2c5084 <startup-0x1fd3af7c>
    5080:	8f000000 	svchi	0x00000000
    5084:	0e000001 	cdpeq	0, 0, cr0, cr0, cr1, {0}
    5088:	0000018f 	andeq	r0, r0, pc, lsl #3
    508c:	040003ff 	streq	r0, [r0], #-1023	; 0xfffffc01
    5090:	04270704 	strteq	r0, [r7], #-1796	; 0xfffff8fc
    5094:	fe0f0000 	cdp2	0, 0, cr0, cr15, cr0, {0}
    5098:	0500001f 	streq	r0, [r0, #-31]	; 0xffffffe1
    509c:	00017e03 	andeq	r7, r1, r3, lsl #28
    50a0:	6c030500 	cfstr32vs	mvfx0, [r3], {-0}
    50a4:	0f2000fc 	svceq	0x002000fc
    50a8:	0000229c 	muleq	r0, ip, r2
    50ac:	017e0306 	cmneq	lr, r6, lsl #6
    50b0:	03050000 	movweq	r0, #20480	; 0x5000
    50b4:	2001006c 	andcs	r0, r1, ip, rrx
    50b8:	0022b70f 	eoreq	fp, r2, pc, lsl #14
    50bc:	7e030700 	cdpvc	7, 0, cr0, cr3, cr0, {0}
    50c0:	05000001 	streq	r0, [r0, #-1]
    50c4:	01046c03 	tsteq	r4, r3, lsl #24
    50c8:	206d0f20 	rsbcs	r0, sp, r0, lsr #30
    50cc:	03080000 	movweq	r0, #32768	; 0x8000
    50d0:	0000017e 	andeq	r0, r0, lr, ror r1
    50d4:	086c0305 	stmdaeq	ip!, {r0, r2, r8, r9}^
    50d8:	520f2001 	andpl	r2, pc, #1
    50dc:	09000020 	stmdbeq	r0, {r5}
    50e0:	00017e03 	andeq	r7, r1, r3, lsl #28
    50e4:	6c030500 	cfstr32vs	mvfx0, [r3], {-0}
    50e8:	0f20010c 	svceq	0x0020010c
    50ec:	000022ef 	andeq	r2, r0, pc, ror #5
    50f0:	017e030a 	cmneq	lr, sl, lsl #6
    50f4:	03050000 	movweq	r0, #20480	; 0x5000
    50f8:	2001106c 	andcs	r1, r1, ip, rrx
    50fc:	00209f0f 	eoreq	r9, r0, pc, lsl #30
    5100:	7e030b00 	vmlavc.f64	d0, d3, d0
    5104:	05000001 	streq	r0, [r0, #-1]
    5108:	01146c03 	tsteq	r4, r3, lsl #24
    510c:	247a0f20 	ldrbtcs	r0, [sl], #-3872	; 0xfffff0e0
    5110:	030c0000 	movweq	r0, #49152	; 0xc000
    5114:	0000017e 	andeq	r0, r0, lr, ror r1
    5118:	186c0305 	stmdane	ip!, {r0, r2, r8, r9}^
    511c:	270f2001 	strcs	r2, [pc, -r1]
    5120:	0d000023 	stceq	0, cr0, [r0, #-140]	; 0xffffff74
    5124:	00017e03 	andeq	r7, r1, r3, lsl #28
    5128:	6c030500 	cfstr32vs	mvfx0, [r3], {-0}
    512c:	0f20011c 	svceq	0x0020011c
    5130:	000020bb 	strheq	r2, [r0], -fp
    5134:	017e030e 	cmneq	lr, lr, lsl #6
    5138:	03050000 	movweq	r0, #20480	; 0x5000
    513c:	2001206c 	andcs	r2, r1, ip, rrx
    5140:	0023ba0f 	eoreq	fp, r3, pc, lsl #20
    5144:	7e030f00 	cdpvc	15, 0, cr0, cr3, cr0, {0}
    5148:	05000001 	streq	r0, [r0, #-1]
    514c:	01246c03 			; <UNDEFINED> instruction: 0x01246c03
    5150:	22800f20 	addcs	r0, r0, #32, 30	; 0x80
    5154:	03100000 	tsteq	r0, #0
    5158:	0000017e 	andeq	r0, r0, lr, ror r1
    515c:	286c0305 	stmdacs	ip!, {r0, r2, r8, r9}^
    5160:	d30f2001 	movwle	r2, #61441	; 0xf001
    5164:	11000022 	tstne	r0, r2, lsr #32
    5168:	00017e03 	andeq	r7, r1, r3, lsl #28
    516c:	6c030500 	cfstr32vs	mvfx0, [r3], {-0}
    5170:	0f20012c 	svceq	0x0020012c
    5174:	00002109 	andeq	r2, r0, r9, lsl #2
    5178:	017e0312 	cmneq	lr, r2, lsl r3
    517c:	03050000 	movweq	r0, #20480	; 0x5000
    5180:	2001306c 	andcs	r3, r1, ip, rrx
    5184:	00213d0f 	eoreq	r3, r1, pc, lsl #26
    5188:	7e031300 	cdpvc	3, 0, cr1, cr3, cr0, {0}
    518c:	05000001 	streq	r0, [r0, #-1]
    5190:	01346c03 	teqeq	r4, r3, lsl #24
    5194:	230b0f20 	movwcs	r0, #48928	; 0xbf20
    5198:	03140000 	tsteq	r4, #0
    519c:	0000017e 	andeq	r0, r0, lr, ror r1
    51a0:	386c0305 	stmdacc	ip!, {r0, r2, r8, r9}^
    51a4:	590f2001 	stmdbpl	pc, {r0, sp}	; <UNPREDICTABLE>
    51a8:	15000021 	strne	r0, [r0, #-33]	; 0xffffffdf
    51ac:	00017e03 	andeq	r7, r1, r3, lsl #28
    51b0:	6c030500 	cfstr32vs	mvfx0, [r3], {-0}
    51b4:	0f20013c 	svceq	0x0020013c
    51b8:	00001fcd 	andeq	r1, r0, sp, asr #31
    51bc:	017e0316 	cmneq	lr, r6, lsl r3
    51c0:	03050000 	movweq	r0, #20480	; 0x5000
    51c4:	2001406c 	andcs	r4, r1, ip, rrx
    51c8:	00217410 	eoreq	r7, r1, r0, lsl r4
    51cc:	9e2a0100 	suflse	f0, f2, f0
    51d0:	05000000 	streq	r0, [r0, #-0]
    51d4:	0079d803 	rsbseq	sp, r9, r3, lsl #16
    51d8:	23591020 	cmpcs	r9, #32
    51dc:	2b010000 	blcs	451e4 <startup-0x1ffbae1c>
    51e0:	0000009e 	muleq	r0, lr, r0
    51e4:	79f80305 	ldmibvc	r8!, {r0, r2, r8, r9}^
    51e8:	43102000 	tstmi	r0, #0
    51ec:	01000023 	tsteq	r0, r3, lsr #32
    51f0:	00009e2c 	andeq	r9, r0, ip, lsr #28
    51f4:	10030500 	andne	r0, r3, r0, lsl #10
    51f8:	10200079 	eorne	r0, r0, r9, ror r0
    51fc:	00002499 	muleq	r0, r9, r4
    5200:	009e2d01 	addseq	r2, lr, r1, lsl #26
    5204:	03050000 	movweq	r0, #20480	; 0x5000
    5208:	200079fc 	strdcs	r7, [r0], -ip
    520c:	00220c10 	eoreq	r0, r2, r0, lsl ip
    5210:	9e2e0100 	suflse	f0, f6, f0
    5214:	05000000 	streq	r0, [r0, #-0]
    5218:	00799803 	rsbseq	r9, r9, r3, lsl #16
    521c:	21be1020 			; <UNDEFINED> instruction: 0x21be1020
    5220:	2f010000 	svccs	0x00010000
    5224:	0000009e 	muleq	r0, lr, r0
    5228:	78c00305 	stmiavc	r0, {r0, r2, r8, r9}^
    522c:	64102000 	ldrvs	r2, [r0], #-0
    5230:	01000024 	tsteq	r0, r4, lsr #32
    5234:	00009e30 	andeq	r9, r0, r0, lsr lr
    5238:	2c030500 	cfstr32cs	mvfx0, [r3], {-0}
    523c:	1020007a 	eorne	r0, r0, sl, ror r0
    5240:	0000241c 	andeq	r2, r0, ip, lsl r4
    5244:	009e3101 	addseq	r3, lr, r1, lsl #2
    5248:	03050000 	movweq	r0, #20480	; 0x5000
    524c:	200079a8 	andcs	r7, r0, r8, lsr #19
    5250:	0023d910 	eoreq	sp, r3, r0, lsl r9
    5254:	9e320100 	rsflss	f0, f2, f0
    5258:	05000000 	streq	r0, [r0, #-0]
    525c:	0078bc03 	rsbseq	fp, r8, r3, lsl #24
    5260:	226a1020 	rsbcs	r1, sl, #32
    5264:	33010000 	movwcc	r0, #4096	; 0x1000
    5268:	0000009e 	muleq	r0, lr, r0
    526c:	79e80305 	stmibvc	r8!, {r0, r2, r8, r9}^
    5270:	f4102000 			; <UNDEFINED> instruction: 0xf4102000
    5274:	01000020 	tsteq	r0, r0, lsr #32
    5278:	00009e34 	andeq	r9, r0, r4, lsr lr
    527c:	0c030500 	cfstr32eq	mvfx0, [r3], {-0}
    5280:	10200079 	eorne	r0, r0, r9, ror r0
    5284:	0000218e 	andeq	r2, r0, lr, lsl #3
    5288:	009e3501 	addseq	r3, lr, r1, lsl #10
    528c:	03050000 	movweq	r0, #20480	; 0x5000
    5290:	20007a1c 	andcs	r7, r0, ip, lsl sl
    5294:	0021f210 	eoreq	pc, r1, r0, lsl r2	; <UNPREDICTABLE>
    5298:	9e360100 	rsflss	f0, f6, f0
    529c:	05000000 	streq	r0, [r0, #-0]
    52a0:	0079b803 	rsbseq	fp, r9, r3, lsl #16
    52a4:	223b1020 	eorscs	r1, fp, #32
    52a8:	37010000 	strcc	r0, [r1, -r0]
    52ac:	0000009e 	muleq	r0, lr, r0
    52b0:	7a0c0305 	bvc	305ecc <startup-0x1fcfa134>
    52b4:	d8102000 	ldmdale	r0, {sp}
    52b8:	01000021 	tsteq	r0, r1, lsr #32
    52bc:	00009e38 	andeq	r9, r0, r8, lsr lr
    52c0:	58030500 	stmdapl	r3, {r8, sl}
    52c4:	1020007a 	eorne	r0, r0, sl, ror r0
    52c8:	0000238a 	andeq	r2, r0, sl, lsl #7
    52cc:	009e3901 	addseq	r3, lr, r1, lsl #18
    52d0:	03050000 	movweq	r0, #20480	; 0x5000
    52d4:	200079bc 			; <UNDEFINED> instruction: 0x200079bc
    52d8:	00244b10 	eoreq	r4, r4, r0, lsl fp
    52dc:	9e3a0100 	rsflse	f0, f2, f0
    52e0:	05000000 	streq	r0, [r0, #-0]
    52e4:	007a5403 	rsbseq	r5, sl, r3, lsl #8
    52e8:	23a41020 			; <UNDEFINED> instruction: 0x23a41020
    52ec:	3b010000 	blcc	452f4 <startup-0x1ffbad0c>
    52f0:	0000009e 	muleq	r0, lr, r0
    52f4:	78b80305 	ldmvc	r8!, {r0, r2, r8, r9}
    52f8:	d7102000 	ldrle	r2, [r0, -r0]
    52fc:	01000020 	tsteq	r0, r0, lsr #32
    5300:	0000624f 	andeq	r6, r0, pc, asr #4
    5304:	e8030500 	stmda	r3, {r8, sl}
    5308:	10200078 	eorne	r0, r0, r8, ror r0
    530c:	00002124 	andeq	r2, r0, r4, lsr #2
    5310:	00625001 	rsbeq	r5, r2, r1
    5314:	03050000 	movweq	r0, #20480	; 0x5000
    5318:	200079ac 	andcs	r7, r0, ip, lsr #19
    531c:	00236e10 	eoreq	r6, r3, r0, lsl lr
    5320:	62510100 	subsvs	r0, r1, #0, 2
    5324:	05000000 	streq	r0, [r0, #-0]
    5328:	00797403 	rsbseq	r7, r9, r3, lsl #8
    532c:	24951020 	ldrcs	r1, [r5], #32
    5330:	52010000 	andpl	r0, r1, #0
    5334:	00000062 	andeq	r0, r0, r2, rrx
    5338:	79000305 	stmdbvc	r0, {r0, r2, r8, r9}
    533c:	ba102000 	blt	40d344 <startup-0x1fbf2cbc>
    5340:	01000021 	tsteq	r0, r1, lsr #32
    5344:	00006253 	andeq	r6, r0, r3, asr r2
    5348:	20030500 	andcs	r0, r3, r0, lsl #10
    534c:	10200079 	eorne	r0, r0, r9, ror r0
    5350:	00002208 	andeq	r2, r0, r8, lsl #4
    5354:	00625401 	rsbeq	r5, r2, r1, lsl #8
    5358:	03050000 	movweq	r0, #20480	; 0x5000
    535c:	20007914 	andcs	r7, r0, r4, lsl r9
    5360:	00246010 	eoreq	r6, r4, r0, lsl r0
    5364:	62550100 	subsvs	r0, r5, #0, 2
    5368:	05000000 	streq	r0, [r0, #-0]
    536c:	0079dc03 	rsbseq	sp, r9, r3, lsl #24
    5370:	23d51020 	bicscs	r1, r5, #32
    5374:	56010000 	strpl	r0, [r1], -r0
    5378:	00000062 	andeq	r0, r0, r2, rrx
    537c:	79c00305 	stmibvc	r0, {r0, r2, r8, r9}^
    5380:	18102000 	ldmdane	r0, {sp}
    5384:	01000024 	tsteq	r0, r4, lsr #32
    5388:	00006257 	andeq	r6, r0, r7, asr r2
    538c:	d0030500 	andle	r0, r3, r0, lsl #10
    5390:	10200078 	eorne	r0, r0, r8, ror r0
    5394:	00002266 	andeq	r2, r0, r6, ror #4
    5398:	00625801 	rsbeq	r5, r2, r1, lsl #16
    539c:	03050000 	movweq	r0, #20480	; 0x5000
    53a0:	20007a3c 	andcs	r7, r0, ip, lsr sl
    53a4:	00218a10 	eoreq	r8, r1, r0, lsl sl
    53a8:	62590100 	subsvs	r0, r9, #0, 2
    53ac:	05000000 	streq	r0, [r0, #-0]
    53b0:	00798003 	rsbseq	r8, r9, r3
    53b4:	20f01020 	rscscs	r1, r0, r0, lsr #32
    53b8:	5a010000 	bpl	453c0 <startup-0x1ffbac40>
    53bc:	00000062 	andeq	r0, r0, r2, rrx
    53c0:	78f40305 	ldmvc	r4!, {r0, r2, r8, r9}^
    53c4:	ee102000 	cdp	0, 1, cr2, cr0, cr0, {0}
    53c8:	01000021 	tsteq	r0, r1, lsr #32
    53cc:	0000625b 	andeq	r6, r0, fp, asr r2
    53d0:	cc030500 	cfstr32gt	mvfx0, [r3], {-0}
    53d4:	10200079 	eorne	r0, r0, r9, ror r0
    53d8:	000021d4 	ldrdeq	r2, [r0], -r4
    53dc:	00625c01 	rsbeq	r5, r2, r1, lsl #24
    53e0:	03050000 	movweq	r0, #20480	; 0x5000
    53e4:	2000799c 	mulcs	r0, ip, r9
    53e8:	00223710 	eoreq	r3, r2, r0, lsl r7
    53ec:	625d0100 	subsvs	r0, sp, #0, 2
    53f0:	05000000 	streq	r0, [r0, #-0]
    53f4:	007a4803 	rsbseq	r4, sl, r3, lsl #16
    53f8:	23861020 	orrcs	r1, r6, #32
    53fc:	5e010000 	cdppl	0, 0, cr0, cr1, cr0, {0}
    5400:	00000062 	andeq	r0, r0, r2, rrx
    5404:	7a300305 	bvc	c06020 <startup-0x1f3f9fe0>
    5408:	a0102000 	andsge	r2, r0, r0
    540c:	01000023 	tsteq	r0, r3, lsr #32
    5410:	0000625f 	andeq	r6, r0, pc, asr r2
    5414:	8c030500 	cfstr32hi	mvfx0, [r3], {-0}
    5418:	10200079 	eorne	r0, r0, r9, ror r0
    541c:	00002447 	andeq	r2, r0, r7, asr #8
    5420:	00626001 	rsbeq	r6, r2, r1
    5424:	03050000 	movweq	r0, #20480	; 0x5000
    5428:	20007a10 	andcs	r7, r0, r0, lsl sl
    542c:	00208910 	eoreq	r8, r0, r0, lsl r9
    5430:	a4760100 	ldrbtge	r0, [r6], #-256	; 0xffffff00
    5434:	05000000 	streq	r0, [r0, #-0]
    5438:	007a0003 	rsbseq	r0, sl, r3
    543c:	22501020 	subscs	r1, r0, #32
    5440:	77010000 	strvc	r0, [r1, -r0]
    5444:	000000a4 	andeq	r0, r0, r4, lsr #1
    5448:	78dc0305 	ldmvc	ip, {r0, r2, r8, r9}^
    544c:	ef102000 	svc	0x00102000
    5450:	01000023 	tsteq	r0, r3, lsr #32
    5454:	0000a478 	andeq	sl, r0, r8, ror r4
    5458:	20030500 	andcs	r0, r3, r0, lsl #10
    545c:	1020007a 	eorne	r0, r0, sl, ror r0
    5460:	00001fb7 			; <UNDEFINED> instruction: 0x00001fb7
    5464:	00a47901 	adceq	r7, r4, r1, lsl #18
    5468:	03050000 	movweq	r0, #20480	; 0x5000
    546c:	200079ec 	andcs	r7, r0, ip, ror #19
    5470:	00222110 	eoreq	r2, r2, r0, lsl r1
    5474:	a47a0100 	ldrbtge	r0, [sl], #-256	; 0xffffff00
    5478:	05000000 	streq	r0, [r0, #-0]
    547c:	0078c403 	rsbseq	ip, r8, r3, lsl #8
    5480:	21a41020 			; <UNDEFINED> instruction: 0x21a41020
    5484:	7b010000 	blvc	4548c <startup-0x1ffbab74>
    5488:	000000a4 	andeq	r0, r0, r4, lsr #1
    548c:	78ac0305 	stmiavc	ip!, {r0, r2, r8, r9}
    5490:	a40b2000 	strge	r2, [fp], #-0
    5494:	a2000000 	andge	r0, r0, #0
    5498:	11000005 	tstne	r0, r5
    549c:	0000018f 	andeq	r0, r0, pc, lsl #3
    54a0:	31100005 	tstcc	r0, r5
    54a4:	01000024 	tsteq	r0, r4, lsr #32
    54a8:	00059282 	andeq	r9, r5, r2, lsl #5
    54ac:	2c030500 	cfstr32cs	mvfx0, [r3], {-0}
    54b0:	12200079 	eorne	r0, r0, #121	; 0x79
    54b4:	00001fe9 	andeq	r1, r0, r9, ror #31
    54b8:	08010101 	stmdaeq	r1, {r0, r8}
    54bc:	6420004c 	strtvs	r0, [r0], #-76	; 0xffffffb4
    54c0:	01000001 	tsteq	r0, r1
    54c4:	0005eb9c 	muleq	r5, ip, fp
    54c8:	24051300 	strcs	r1, [r5], #-768	; 0xfffffd00
    54cc:	01010000 	mrseq	r0, (UNDEF: 1)
    54d0:	00016201 	andeq	r6, r1, r1, lsl #4
    54d4:	6c910200 	lfmvs	f0, 4, [r1], {0}
    54d8:	00093614 	andeq	r3, r9, r4, lsl r6
    54dc:	01020100 	mrseq	r0, (UNDEF: 18)
    54e0:	0000012e 	andeq	r0, r0, lr, lsr #2
    54e4:	446c0305 	strbtmi	r0, [ip], #-773	; 0xfffffcfb
    54e8:	15002001 	strne	r2, [r0, #-1]
    54ec:	000004c7 	andeq	r0, r0, r7, asr #9
    54f0:	49948301 	ldmibmi	r4, {r0, r8, r9, pc}
    54f4:	02742000 	rsbseq	r2, r4, #0
    54f8:	9c010000 	stcls	0, cr0, [r1], {-0}
    54fc:	000dd70f 	andeq	sp, sp, pc, lsl #14
    5500:	9e850100 	rmflss	f0, f5, f0
    5504:	02000000 	andeq	r0, r0, #0
    5508:	e10f7491 			; <UNDEFINED> instruction: 0xe10f7491
    550c:	0100000d 	tsteq	r0, sp
    5510:	00009e88 	andeq	r9, r0, r8, lsl #29
    5514:	70910200 	addsvc	r0, r1, r0, lsl #4
    5518:	000bd70f 	andeq	sp, fp, pc, lsl #14
    551c:	9e8b0100 	rmflse	f0, f3, f0
    5520:	02000000 	andeq	r0, r0, #0
    5524:	f80f6c91 			; <UNDEFINED> instruction: 0xf80f6c91
    5528:	0100000a 	tsteq	r0, sl
    552c:	00009e8f 	andeq	r9, r0, pc, lsl #29
    5530:	68910200 	ldmvs	r1, {r9}
    5534:	000e010f 	andeq	r0, lr, pc, lsl #2
    5538:	9e920100 	fmllss	f0, f2, f0
    553c:	02000000 	andeq	r0, r0, #0
    5540:	950f6491 	strls	r6, [pc, #-1169]	; 50b7 <startup-0x1fffaf49>
    5544:	0100000b 	tsteq	r0, fp
    5548:	00009e95 	muleq	r0, r5, lr
    554c:	60910200 	addsvs	r0, r1, r0, lsl #4
    5550:	000dad0f 	andeq	sl, sp, pc, lsl #26
    5554:	9e9a0100 	fmllse	f0, f2, f0
    5558:	02000000 	andeq	r0, r0, #0
    555c:	0b0f5c91 	bleq	3dc7a8 <startup-0x1fc23858>
    5560:	0100000e 	tsteq	r0, lr
    5564:	00009e9d 	muleq	r0, sp, lr
    5568:	58910200 	ldmpl	r1, {r9}
    556c:	000e150f 	andeq	r1, lr, pc, lsl #10
    5570:	9ea00100 	fdvlss	f0, f0, f0
    5574:	02000000 	andeq	r0, r0, #0
    5578:	1e0f5491 	mcrne	4, 0, r5, cr15, cr1, {4}
    557c:	0100000b 	tsteq	r0, fp
    5580:	00009ea4 	andeq	r9, r0, r4, lsr #29
    5584:	50910200 	addspl	r0, r1, r0, lsl #4
    5588:	000b620f 	andeq	r6, fp, pc, lsl #4
    558c:	9ea70100 	fdvlss	f0, f7, f0
    5590:	02000000 	andeq	r0, r0, #0
    5594:	6c0f4c91 	stcvs	12, cr4, [pc], {145}	; 0x91
    5598:	0100000b 	tsteq	r0, fp
    559c:	00009eaa 	andeq	r9, r0, sl, lsr #29
    55a0:	48910200 	ldmmi	r1, {r9}
    55a4:	000e2a0f 	andeq	r2, lr, pc, lsl #20
    55a8:	9eae0100 	fdvlse	f0, f6, f0
    55ac:	02000000 	andeq	r0, r0, #0
    55b0:	b20f4491 	andlt	r4, pc, #-1862270976	; 0x91000000
    55b4:	0100000c 	tsteq	r0, ip
    55b8:	00009eb1 			; <UNDEFINED> instruction: 0x00009eb1
    55bc:	40910200 	addsmi	r0, r1, r0, lsl #4
    55c0:	000b8b0f 	andeq	r8, fp, pc, lsl #22
    55c4:	9eb40100 	frdlss	f0, f4, f0
    55c8:	03000000 	movweq	r0, #0
    55cc:	0f7fbc91 	svceq	0x007fbc91
    55d0:	000014c2 	andeq	r1, r0, r2, asr #9
    55d4:	009eb801 	addseq	fp, lr, r1, lsl #16
    55d8:	91030000 	mrsls	r0, (UNDEF: 3)
    55dc:	4f0f7fb8 	svcmi	0x000f7fb8
    55e0:	01000015 	tsteq	r0, r5, lsl r0
    55e4:	00009ebb 			; <UNDEFINED> instruction: 0x00009ebb
    55e8:	b4910300 	ldrlt	r0, [r1], #768	; 0x300
    55ec:	137e0f7f 	cmnne	lr, #508	; 0x1fc
    55f0:	be010000 	cdplt	0, 0, cr0, cr1, cr0, {0}
    55f4:	0000009e 	muleq	r0, lr, r0
    55f8:	7fb09103 	svcvc	0x00b09103
	...

Disassembly of section .debug_abbrev:

00000000 <.debug_abbrev>:
       0:	25011101 	strcs	r1, [r1, #-257]	; 0xfffffeff
       4:	030b130e 	movweq	r1, #45838	; 0xb30e
       8:	1117550e 	tstne	r7, lr, lsl #10
       c:	00171001 	andseq	r1, r7, r1
      10:	01130200 	tsteq	r3, r0, lsl #4
      14:	0b3a0b0b 	bleq	e82c48 <startup-0x1f17d3b8>
      18:	13010b3b 	movwne	r0, #6971	; 0x1b3b
      1c:	0d030000 	stceq	0, cr0, [r3, #-0]
      20:	3a0e0300 	bcc	380c28 <startup-0x1fc7f3d8>
      24:	490b3b0b 	stmdbmi	fp, {r0, r1, r3, r8, r9, fp, ip, sp}
      28:	000b3813 	andeq	r3, fp, r3, lsl r8
      2c:	00240400 	eoreq	r0, r4, r0, lsl #8
      30:	0b3e0b0b 	bleq	f82c64 <startup-0x1f07d39c>
      34:	00000e03 	andeq	r0, r0, r3, lsl #28
      38:	0b000f05 	bleq	3c54 <startup-0x1fffc3ac>
      3c:	0013490b 	andseq	r4, r3, fp, lsl #18
      40:	00160600 	andseq	r0, r6, r0, lsl #12
      44:	0b3a0e03 	bleq	e83858 <startup-0x1f17c7a8>
      48:	13490b3b 	movtne	r0, #39739	; 0x9b3b
      4c:	13070000 	movwne	r0, #28672	; 0x7000
      50:	0b0e0301 	bleq	380c5c <startup-0x1fc7f3a4>
      54:	3b0b3a0b 	blcc	2ce888 <startup-0x1fd31778>
      58:	0013010b 	andseq	r0, r3, fp, lsl #2
      5c:	00240800 	eoreq	r0, r4, r0, lsl #16
      60:	0b3e0b0b 	bleq	f82c94 <startup-0x1f07d36c>
      64:	00000803 	andeq	r0, r0, r3, lsl #16
      68:	27011509 	strcs	r1, [r1, -r9, lsl #10]
      6c:	00130119 	andseq	r0, r3, r9, lsl r1
      70:	00050a00 	andeq	r0, r5, r0, lsl #20
      74:	00001349 	andeq	r1, r0, r9, asr #6
      78:	4901010b 	stmdbmi	r1, {r0, r1, r3, r8}
      7c:	00130113 	andseq	r0, r3, r3, lsl r1
      80:	00210c00 	eoreq	r0, r1, r0, lsl #24
      84:	340d0000 	strcc	r0, [sp], #-0
      88:	3a0e0300 	bcc	380c90 <startup-0x1fc7f370>
      8c:	490b3b0b 	stmdbmi	fp, {r0, r1, r3, r8, r9, fp, ip, sp}
      90:	3c193f13 	ldccc	15, cr3, [r9], {19}
      94:	0e000019 	mcreq	0, 0, r0, cr0, cr9, {0}
      98:	13490021 	movtne	r0, #36897	; 0x9021
      9c:	0000052f 	andeq	r0, r0, pc, lsr #10
      a0:	4900210f 	stmdbmi	r0, {r0, r1, r2, r3, r8, sp}
      a4:	000b2f13 	andeq	r2, fp, r3, lsl pc
      a8:	00341000 	eorseq	r1, r4, r0
      ac:	0b3a0e03 	bleq	e838c0 <startup-0x1f17c740>
      b0:	13490b3b 	movtne	r0, #39739	; 0x9b3b
      b4:	1802193f 	stmdane	r2, {r0, r1, r2, r3, r4, r5, r8, fp, ip}
      b8:	34110000 	ldrcc	r0, [r1], #-0
      bc:	3a0e0300 	bcc	380cc4 <startup-0x1fc7f33c>
      c0:	490b3b0b 	stmdbmi	fp, {r0, r1, r3, r8, r9, fp, ip, sp}
      c4:	00180213 	andseq	r0, r8, r3, lsl r2
      c8:	00341200 	eorseq	r1, r4, r0, lsl #4
      cc:	0b3a0803 	bleq	e820e0 <startup-0x1f17df20>
      d0:	13490b3b 	movtne	r0, #39739	; 0x9b3b
      d4:	1802193f 	stmdane	r2, {r0, r1, r2, r3, r4, r5, r8, fp, ip}
      d8:	2e130000 	cdpcs	0, 1, cr0, cr3, cr0, {0}
      dc:	03193f01 	tsteq	r9, #1, 30
      e0:	3b0b3a08 	blcc	2ce908 <startup-0x1fd316f8>
      e4:	49192705 	ldmdbmi	r9, {r0, r2, r8, r9, sl, sp}
      e8:	12011113 	andne	r1, r1, #-1073741820	; 0xc0000004
      ec:	97184006 	ldrls	r4, [r8, -r6]
      f0:	13011942 	movwne	r1, #6466	; 0x1942
      f4:	05140000 	ldreq	r0, [r4, #-0]
      f8:	3a0e0300 	bcc	380d00 <startup-0x1fc7f300>
      fc:	49053b0b 	stmdbmi	r5, {r0, r1, r3, r8, r9, fp, ip, sp}
     100:	00180213 	andseq	r0, r8, r3, lsl r2
     104:	012e1500 			; <UNDEFINED> instruction: 0x012e1500
     108:	0e03193f 			; <UNDEFINED> instruction: 0x0e03193f
     10c:	0b3b0b3a 	bleq	ec2dfc <startup-0x1f13d204>
     110:	01111927 	tsteq	r1, r7, lsr #18
     114:	18400612 	stmdane	r0, {r1, r4, r9, sl}^
     118:	01194296 			; <UNDEFINED> instruction: 0x01194296
     11c:	16000013 			; <UNDEFINED> instruction: 0x16000013
     120:	193f012e 	ldmdbne	pc!, {r1, r2, r3, r5, r8}	; <UNPREDICTABLE>
     124:	0b3a0e03 	bleq	e83938 <startup-0x1f17c6c8>
     128:	13490b3b 	movtne	r0, #39739	; 0x9b3b
     12c:	1301193c 	movwne	r1, #6460	; 0x193c
     130:	18170000 	ldmdane	r7, {}	; <UNPREDICTABLE>
     134:	18000000 	stmdane	r0, {}	; <UNPREDICTABLE>
     138:	08030034 	stmdaeq	r3, {r2, r4, r5}
     13c:	0b3b0b3a 	bleq	ec2e2c <startup-0x1f13d1d4>
     140:	18021349 	stmdane	r2, {r0, r3, r6, r8, r9, ip}
     144:	34190000 	ldrcc	r0, [r9], #-0
     148:	3a0e0300 	bcc	380d50 <startup-0x1fc7f2b0>
     14c:	49053b0b 	stmdbmi	r5, {r0, r1, r3, r8, r9, fp, ip, sp}
     150:	00180213 	andseq	r0, r8, r3, lsl r2
     154:	010b1a00 	tsteq	fp, r0, lsl #20
     158:	06120111 			; <UNDEFINED> instruction: 0x06120111
     15c:	341b0000 	ldrcc	r0, [fp], #-0
     160:	3a080300 	bcc	200d68 <startup-0x1fdff298>
     164:	49053b0b 	stmdbmi	r5, {r0, r1, r3, r8, r9, fp, ip, sp}
     168:	00180213 	andseq	r0, r8, r3, lsl r2
     16c:	002e1c00 	eoreq	r1, lr, r0, lsl #24
     170:	0e03193f 			; <UNDEFINED> instruction: 0x0e03193f
     174:	0b3b0b3a 	bleq	ec2e64 <startup-0x1f13d19c>
     178:	01111927 	tsteq	r1, r7, lsr #18
     17c:	18400612 	stmdane	r0, {r1, r4, r9, sl}^
     180:	00194296 	mulseq	r9, r6, r2
     184:	002e1d00 	eoreq	r1, lr, r0, lsl #26
     188:	0e03193f 			; <UNDEFINED> instruction: 0x0e03193f
     18c:	0b3b0b3a 	bleq	ec2e7c <startup-0x1f13d184>
     190:	01111927 	tsteq	r1, r7, lsr #18
     194:	18400612 	stmdane	r0, {r1, r4, r9, sl}^
     198:	00194297 	mulseq	r9, r7, r2
     19c:	11010000 	mrsne	r0, (UNDEF: 1)
     1a0:	130e2501 	movwne	r2, #58625	; 0xe501
     1a4:	110e030b 	tstne	lr, fp, lsl #6
     1a8:	10061201 	andne	r1, r6, r1, lsl #4
     1ac:	02000017 	andeq	r0, r0, #23
     1b0:	0b0b0113 	bleq	2c0604 <startup-0x1fd3f9fc>
     1b4:	0b3b0b3a 	bleq	ec2ea4 <startup-0x1f13d15c>
     1b8:	00001301 	andeq	r1, r0, r1, lsl #6
     1bc:	03000d03 	movweq	r0, #3331	; 0xd03
     1c0:	3b0b3a0e 	blcc	2cea00 <startup-0x1fd31600>
     1c4:	3813490b 	ldmdacc	r3, {r0, r1, r3, r8, fp, lr}
     1c8:	0400000b 	streq	r0, [r0], #-11
     1cc:	0b0b0024 	bleq	2c0264 <startup-0x1fd3fd9c>
     1d0:	0e030b3e 	vmoveq.16	d3[0], r0
     1d4:	0f050000 	svceq	0x00050000
     1d8:	490b0b00 	stmdbmi	fp, {r8, r9, fp}
     1dc:	06000013 			; <UNDEFINED> instruction: 0x06000013
     1e0:	0e030016 	mcreq	0, 0, r0, cr3, cr6, {0}
     1e4:	0b3b0b3a 	bleq	ec2ed4 <startup-0x1f13d12c>
     1e8:	00001349 	andeq	r1, r0, r9, asr #6
     1ec:	03011307 	movweq	r1, #4871	; 0x1307
     1f0:	3a0b0b0e 	bcc	2c2e30 <startup-0x1fd3d1d0>
     1f4:	010b3b0b 	tsteq	fp, fp, lsl #22
     1f8:	08000013 	stmdaeq	r0, {r0, r1, r4}
     1fc:	0b0b0024 	bleq	2c0294 <startup-0x1fd3fd6c>
     200:	08030b3e 	stmdaeq	r3, {r1, r2, r3, r4, r5, r8, r9, fp}
     204:	15090000 	strne	r0, [r9, #-0]
     208:	01192701 	tsteq	r9, r1, lsl #14
     20c:	0a000013 	beq	260 <startup-0x1ffffda0>
     210:	13490005 	movtne	r0, #36869	; 0x9005
     214:	010b0000 	mrseq	r0, (UNDEF: 11)
     218:	01134901 	tsteq	r3, r1, lsl #18
     21c:	0c000013 	stceq	0, cr0, [r0], {19}
     220:	00000021 	andeq	r0, r0, r1, lsr #32
     224:	0300340d 	movweq	r3, #1037	; 0x40d
     228:	3b0b3a0e 	blcc	2cea68 <startup-0x1fd31598>
     22c:	3f13490b 	svccc	0x0013490b
     230:	00193c19 	andseq	r3, r9, r9, lsl ip
     234:	00340e00 	eorseq	r0, r4, r0, lsl #28
     238:	0b3a1347 	bleq	e84f5c <startup-0x1f17b0a4>
     23c:	18020b3b 	stmdane	r2, {r0, r1, r3, r4, r5, r8, r9, fp}
     240:	2e0f0000 	cdpcs	0, 0, cr0, cr15, cr0, {0}
     244:	03193f01 	tsteq	r9, #1, 30
     248:	3b0b3a0e 	blcc	2cea88 <startup-0x1fd31578>
     24c:	1119270b 	tstne	r9, fp, lsl #14
     250:	40061201 	andmi	r1, r6, r1, lsl #4
     254:	19429618 	stmdbne	r2, {r3, r4, r9, sl, ip, pc}^
     258:	00001301 	andeq	r1, r0, r1, lsl #6
     25c:	03000510 	movweq	r0, #1296	; 0x510
     260:	3b0b3a0e 	blcc	2ceaa0 <startup-0x1fd31560>
     264:	0213490b 	andseq	r4, r3, #180224	; 0x2c000
     268:	11000018 	tstne	r0, r8, lsl r0
     26c:	193f012e 	ldmdbne	pc!, {r1, r2, r3, r5, r8}	; <UNPREDICTABLE>
     270:	0b3a0e03 	bleq	e83a84 <startup-0x1f17c57c>
     274:	19270b3b 	stmdbne	r7!, {r0, r1, r3, r4, r5, r8, r9, fp}
     278:	06120111 			; <UNDEFINED> instruction: 0x06120111
     27c:	42971840 	addsmi	r1, r7, #64, 16	; 0x400000
     280:	00000019 	andeq	r0, r0, r9, lsl r0
     284:	25011101 	strcs	r1, [r1, #-257]	; 0xfffffeff
     288:	030b130e 	movweq	r1, #45838	; 0xb30e
     28c:	1201110e 	andne	r1, r1, #-2147483645	; 0x80000003
     290:	00171006 	andseq	r1, r7, r6
     294:	01130200 	tsteq	r3, r0, lsl #4
     298:	0b3a0b0b 	bleq	e82ecc <startup-0x1f17d134>
     29c:	13010b3b 	movwne	r0, #6971	; 0x1b3b
     2a0:	0d030000 	stceq	0, cr0, [r3, #-0]
     2a4:	3a0e0300 	bcc	380eac <startup-0x1fc7f154>
     2a8:	490b3b0b 	stmdbmi	fp, {r0, r1, r3, r8, r9, fp, ip, sp}
     2ac:	000b3813 	andeq	r3, fp, r3, lsl r8
     2b0:	00240400 	eoreq	r0, r4, r0, lsl #8
     2b4:	0b3e0b0b 	bleq	f82ee8 <startup-0x1f07d118>
     2b8:	00000e03 	andeq	r0, r0, r3, lsl #28
     2bc:	0b000f05 	bleq	3ed8 <startup-0x1fffc128>
     2c0:	0013490b 	andseq	r4, r3, fp, lsl #18
     2c4:	00160600 	andseq	r0, r6, r0, lsl #12
     2c8:	0b3a0e03 	bleq	e83adc <startup-0x1f17c524>
     2cc:	13490b3b 	movtne	r0, #39739	; 0x9b3b
     2d0:	13070000 	movwne	r0, #28672	; 0x7000
     2d4:	0b0e0301 	bleq	380ee0 <startup-0x1fc7f120>
     2d8:	3b0b3a0b 	blcc	2ceb0c <startup-0x1fd314f4>
     2dc:	0013010b 	andseq	r0, r3, fp, lsl #2
     2e0:	00240800 	eoreq	r0, r4, r0, lsl #16
     2e4:	0b3e0b0b 	bleq	f82f18 <startup-0x1f07d0e8>
     2e8:	00000803 	andeq	r0, r0, r3, lsl #16
     2ec:	27011509 	strcs	r1, [r1, -r9, lsl #10]
     2f0:	00130119 	andseq	r0, r3, r9, lsl r1
     2f4:	00050a00 	andeq	r0, r5, r0, lsl #20
     2f8:	00001349 	andeq	r1, r0, r9, asr #6
     2fc:	4901010b 	stmdbmi	r1, {r0, r1, r3, r8}
     300:	00130113 	andseq	r0, r3, r3, lsl r1
     304:	00210c00 	eoreq	r0, r1, r0, lsl #24
     308:	340d0000 	strcc	r0, [sp], #-0
     30c:	3a0e0300 	bcc	380f14 <startup-0x1fc7f0ec>
     310:	490b3b0b 	stmdbmi	fp, {r0, r1, r3, r8, r9, fp, ip, sp}
     314:	3c193f13 	ldccc	15, cr3, [r9], {19}
     318:	0e000019 	mcreq	0, 0, r0, cr0, cr9, {0}
     31c:	13490021 	movtne	r0, #36897	; 0x9021
     320:	00000b2f 	andeq	r0, r0, pc, lsr #22
     324:	0300340f 	movweq	r3, #1039	; 0x40f
     328:	3b0b3a0e 	blcc	2ceb68 <startup-0x1fd31498>
     32c:	0213490b 	andseq	r4, r3, #180224	; 0x2c000
     330:	10000018 	andne	r0, r0, r8, lsl r0
     334:	0e030034 	mcreq	0, 0, r0, cr3, cr4, {1}
     338:	0b3b0b3a 	bleq	ec3028 <startup-0x1f13cfd8>
     33c:	193f1349 	ldmdbne	pc!, {r0, r3, r6, r8, r9, ip}	; <UNPREDICTABLE>
     340:	00001802 	andeq	r1, r0, r2, lsl #16
     344:	3f012e11 	svccc	0x00012e11
     348:	3a0e0319 	bcc	380fb4 <startup-0x1fc7f04c>
     34c:	270b3b0b 	strcs	r3, [fp, -fp, lsl #22]
     350:	12011119 	andne	r1, r1, #1073741830	; 0x40000006
     354:	96184006 	ldrls	r4, [r8], -r6
     358:	13011942 	movwne	r1, #6466	; 0x1942
     35c:	05120000 	ldreq	r0, [r2, #-0]
     360:	3a0e0300 	bcc	380f68 <startup-0x1fc7f098>
     364:	490b3b0b 	stmdbmi	fp, {r0, r1, r3, r8, r9, fp, ip, sp}
     368:	00180213 	andseq	r0, r8, r3, lsl r2
     36c:	012e1300 			; <UNDEFINED> instruction: 0x012e1300
     370:	0b3a0e03 	bleq	e83b84 <startup-0x1f17c47c>
     374:	19270b3b 	stmdbne	r7!, {r0, r1, r3, r4, r5, r8, r9, fp}
     378:	06120111 			; <UNDEFINED> instruction: 0x06120111
     37c:	42961840 	addsmi	r1, r6, #64, 16	; 0x400000
     380:	00000019 	andeq	r0, r0, r9, lsl r0
     384:	25011101 	strcs	r1, [r1, #-257]	; 0xfffffeff
     388:	030b130e 	movweq	r1, #45838	; 0xb30e
     38c:	1201110e 	andne	r1, r1, #-2147483645	; 0x80000003
     390:	00171006 	andseq	r1, r7, r6
     394:	00240200 	eoreq	r0, r4, r0, lsl #4
     398:	0b3e0b0b 	bleq	f82fcc <startup-0x1f07d034>
     39c:	00000e03 	andeq	r0, r0, r3, lsl #28
     3a0:	0b011303 	bleq	44fb4 <startup-0x1ffbb04c>
     3a4:	3b0b3a0b 	blcc	2cebd8 <startup-0x1fd31428>
     3a8:	0013010b 	andseq	r0, r3, fp, lsl #2
     3ac:	000d0400 	andeq	r0, sp, r0, lsl #8
     3b0:	0b3a0e03 	bleq	e83bc4 <startup-0x1f17c43c>
     3b4:	13490b3b 	movtne	r0, #39739	; 0x9b3b
     3b8:	00000b38 	andeq	r0, r0, r8, lsr fp
     3bc:	0b000f05 	bleq	3fd8 <startup-0x1fffc028>
     3c0:	0013490b 	andseq	r4, r3, fp, lsl #18
     3c4:	00160600 	andseq	r0, r6, r0, lsl #12
     3c8:	0b3a0e03 	bleq	e83bdc <startup-0x1f17c424>
     3cc:	13490b3b 	movtne	r0, #39739	; 0x9b3b
     3d0:	13070000 	movwne	r0, #28672	; 0x7000
     3d4:	0b0e0301 	bleq	380fe0 <startup-0x1fc7f020>
     3d8:	3b0b3a0b 	blcc	2cec0c <startup-0x1fd313f4>
     3dc:	0013010b 	andseq	r0, r3, fp, lsl #2
     3e0:	00240800 	eoreq	r0, r4, r0, lsl #16
     3e4:	0b3e0b0b 	bleq	f83018 <startup-0x1f07cfe8>
     3e8:	00000803 	andeq	r0, r0, r3, lsl #16
     3ec:	27011509 	strcs	r1, [r1, -r9, lsl #10]
     3f0:	00130119 	andseq	r0, r3, r9, lsl r1
     3f4:	00050a00 	andeq	r0, r5, r0, lsl #20
     3f8:	00001349 	andeq	r1, r0, r9, asr #6
     3fc:	4901010b 	stmdbmi	r1, {r0, r1, r3, r8}
     400:	00130113 	andseq	r0, r3, r3, lsl r1
     404:	00210c00 	eoreq	r0, r1, r0, lsl #24
     408:	340d0000 	strcc	r0, [sp], #-0
     40c:	3a0e0300 	bcc	381014 <startup-0x1fc7efec>
     410:	490b3b0b 	stmdbmi	fp, {r0, r1, r3, r8, r9, fp, ip, sp}
     414:	3c193f13 	ldccc	15, cr3, [r9], {19}
     418:	0e000019 	mcreq	0, 0, r0, cr0, cr9, {0}
     41c:	0e030034 	mcreq	0, 0, r0, cr3, cr4, {1}
     420:	0b3b0b3a 	bleq	ec3110 <startup-0x1f13cef0>
     424:	18021349 	stmdane	r2, {r0, r3, r6, r8, r9, ip}
     428:	2e0f0000 	cdpcs	0, 0, cr0, cr15, cr0, {0}
     42c:	03193f01 	tsteq	r9, #1, 30
     430:	3b0b3a0e 	blcc	2cec70 <startup-0x1fd31390>
     434:	1119270b 	tstne	r9, fp, lsl #14
     438:	40061201 	andmi	r1, r6, r1, lsl #4
     43c:	19429618 	stmdbne	r2, {r3, r4, r9, sl, ip, pc}^
     440:	00001301 	andeq	r1, r0, r1, lsl #6
     444:	03000510 	movweq	r0, #1296	; 0x510
     448:	3b0b3a0e 	blcc	2cec88 <startup-0x1fd31378>
     44c:	0213490b 	andseq	r4, r3, #180224	; 0x2c000
     450:	11000018 	tstne	r0, r8, lsl r0
     454:	193f002e 	ldmdbne	pc!, {r1, r2, r3, r5}	; <UNPREDICTABLE>
     458:	0b3a0e03 	bleq	e83c6c <startup-0x1f17c394>
     45c:	19270b3b 	stmdbne	r7!, {r0, r1, r3, r4, r5, r8, r9, fp}
     460:	06120111 			; <UNDEFINED> instruction: 0x06120111
     464:	42971840 	addsmi	r1, r7, #64, 16	; 0x400000
     468:	00000019 	andeq	r0, r0, r9, lsl r0
     46c:	25011101 	strcs	r1, [r1, #-257]	; 0xfffffeff
     470:	030b130e 	movweq	r1, #45838	; 0xb30e
     474:	1201110e 	andne	r1, r1, #-2147483645	; 0x80000003
     478:	00171006 	andseq	r1, r7, r6
     47c:	01130200 	tsteq	r3, r0, lsl #4
     480:	0b3a0b0b 	bleq	e830b4 <startup-0x1f17cf4c>
     484:	13010b3b 	movwne	r0, #6971	; 0x1b3b
     488:	0d030000 	stceq	0, cr0, [r3, #-0]
     48c:	3a0e0300 	bcc	381094 <startup-0x1fc7ef6c>
     490:	490b3b0b 	stmdbmi	fp, {r0, r1, r3, r8, r9, fp, ip, sp}
     494:	000b3813 	andeq	r3, fp, r3, lsl r8
     498:	00240400 	eoreq	r0, r4, r0, lsl #8
     49c:	0b3e0b0b 	bleq	f830d0 <startup-0x1f07cf30>
     4a0:	00000e03 	andeq	r0, r0, r3, lsl #28
     4a4:	0b000f05 	bleq	40c0 <startup-0x1fffbf40>
     4a8:	0013490b 	andseq	r4, r3, fp, lsl #18
     4ac:	00160600 	andseq	r0, r6, r0, lsl #12
     4b0:	0b3a0e03 	bleq	e83cc4 <startup-0x1f17c33c>
     4b4:	13490b3b 	movtne	r0, #39739	; 0x9b3b
     4b8:	13070000 	movwne	r0, #28672	; 0x7000
     4bc:	0b0e0301 	bleq	3810c8 <startup-0x1fc7ef38>
     4c0:	3b0b3a0b 	blcc	2cecf4 <startup-0x1fd3130c>
     4c4:	0013010b 	andseq	r0, r3, fp, lsl #2
     4c8:	00240800 	eoreq	r0, r4, r0, lsl #16
     4cc:	0b3e0b0b 	bleq	f83100 <startup-0x1f07cf00>
     4d0:	00000803 	andeq	r0, r0, r3, lsl #16
     4d4:	27011509 	strcs	r1, [r1, -r9, lsl #10]
     4d8:	00130119 	andseq	r0, r3, r9, lsl r1
     4dc:	00050a00 	andeq	r0, r5, r0, lsl #20
     4e0:	00001349 	andeq	r1, r0, r9, asr #6
     4e4:	4901010b 	stmdbmi	r1, {r0, r1, r3, r8}
     4e8:	00130113 	andseq	r0, r3, r3, lsl r1
     4ec:	00210c00 	eoreq	r0, r1, r0, lsl #24
     4f0:	340d0000 	strcc	r0, [sp], #-0
     4f4:	3a0e0300 	bcc	3810fc <startup-0x1fc7ef04>
     4f8:	490b3b0b 	stmdbmi	fp, {r0, r1, r3, r8, r9, fp, ip, sp}
     4fc:	3c193f13 	ldccc	15, cr3, [r9], {19}
     500:	0e000019 	mcreq	0, 0, r0, cr0, cr9, {0}
     504:	13490021 	movtne	r0, #36897	; 0x9021
     508:	00000b2f 	andeq	r0, r0, pc, lsr #22
     50c:	0300340f 	movweq	r3, #1039	; 0x40f
     510:	3b0b3a0e 	blcc	2ced50 <startup-0x1fd312b0>
     514:	0213490b 	andseq	r4, r3, #180224	; 0x2c000
     518:	10000018 	andne	r0, r0, r8, lsl r0
     51c:	0e030034 	mcreq	0, 0, r0, cr3, cr4, {1}
     520:	0b3b0b3a 	bleq	ec3210 <startup-0x1f13cdf0>
     524:	193f1349 	ldmdbne	pc!, {r0, r3, r6, r8, r9, ip}	; <UNPREDICTABLE>
     528:	00001802 	andeq	r1, r0, r2, lsl #16
     52c:	3f012e11 	svccc	0x00012e11
     530:	3a0e0319 	bcc	38119c <startup-0x1fc7ee64>
     534:	270b3b0b 	strcs	r3, [fp, -fp, lsl #22]
     538:	12011119 	andne	r1, r1, #1073741830	; 0x40000006
     53c:	96184006 	ldrls	r4, [r8], -r6
     540:	13011942 	movwne	r1, #6466	; 0x1942
     544:	05120000 	ldreq	r0, [r2, #-0]
     548:	3a0e0300 	bcc	381150 <startup-0x1fc7eeb0>
     54c:	490b3b0b 	stmdbmi	fp, {r0, r1, r3, r8, r9, fp, ip, sp}
     550:	00180213 	andseq	r0, r8, r3, lsl r2
     554:	012e1300 			; <UNDEFINED> instruction: 0x012e1300
     558:	0b3a0e03 	bleq	e83d6c <startup-0x1f17c294>
     55c:	19270b3b 	stmdbne	r7!, {r0, r1, r3, r4, r5, r8, r9, fp}
     560:	06120111 			; <UNDEFINED> instruction: 0x06120111
     564:	42961840 	addsmi	r1, r6, #64, 16	; 0x400000
     568:	00000019 	andeq	r0, r0, r9, lsl r0
     56c:	25011101 	strcs	r1, [r1, #-257]	; 0xfffffeff
     570:	030b130e 	movweq	r1, #45838	; 0xb30e
     574:	1201110e 	andne	r1, r1, #-2147483645	; 0x80000003
     578:	00171006 	andseq	r1, r7, r6
     57c:	01130200 	tsteq	r3, r0, lsl #4
     580:	0b3a0b0b 	bleq	e831b4 <startup-0x1f17ce4c>
     584:	13010b3b 	movwne	r0, #6971	; 0x1b3b
     588:	0d030000 	stceq	0, cr0, [r3, #-0]
     58c:	3a0e0300 	bcc	381194 <startup-0x1fc7ee6c>
     590:	490b3b0b 	stmdbmi	fp, {r0, r1, r3, r8, r9, fp, ip, sp}
     594:	000b3813 	andeq	r3, fp, r3, lsl r8
     598:	00240400 	eoreq	r0, r4, r0, lsl #8
     59c:	0b3e0b0b 	bleq	f831d0 <startup-0x1f07ce30>
     5a0:	00000e03 	andeq	r0, r0, r3, lsl #28
     5a4:	0b000f05 	bleq	41c0 <startup-0x1fffbe40>
     5a8:	0013490b 	andseq	r4, r3, fp, lsl #18
     5ac:	00160600 	andseq	r0, r6, r0, lsl #12
     5b0:	0b3a0e03 	bleq	e83dc4 <startup-0x1f17c23c>
     5b4:	13490b3b 	movtne	r0, #39739	; 0x9b3b
     5b8:	13070000 	movwne	r0, #28672	; 0x7000
     5bc:	0b0e0301 	bleq	3811c8 <startup-0x1fc7ee38>
     5c0:	3b0b3a0b 	blcc	2cedf4 <startup-0x1fd3120c>
     5c4:	0013010b 	andseq	r0, r3, fp, lsl #2
     5c8:	00240800 	eoreq	r0, r4, r0, lsl #16
     5cc:	0b3e0b0b 	bleq	f83200 <startup-0x1f07ce00>
     5d0:	00000803 	andeq	r0, r0, r3, lsl #16
     5d4:	27011509 	strcs	r1, [r1, -r9, lsl #10]
     5d8:	00130119 	andseq	r0, r3, r9, lsl r1
     5dc:	00050a00 	andeq	r0, r5, r0, lsl #20
     5e0:	00001349 	andeq	r1, r0, r9, asr #6
     5e4:	4901010b 	stmdbmi	r1, {r0, r1, r3, r8}
     5e8:	00130113 	andseq	r0, r3, r3, lsl r1
     5ec:	00210c00 	eoreq	r0, r1, r0, lsl #24
     5f0:	340d0000 	strcc	r0, [sp], #-0
     5f4:	3a0e0300 	bcc	3811fc <startup-0x1fc7ee04>
     5f8:	490b3b0b 	stmdbmi	fp, {r0, r1, r3, r8, r9, fp, ip, sp}
     5fc:	3c193f13 	ldccc	15, cr3, [r9], {19}
     600:	0e000019 	mcreq	0, 0, r0, cr0, cr9, {0}
     604:	13490021 	movtne	r0, #36897	; 0x9021
     608:	00000b2f 	andeq	r0, r0, pc, lsr #22
     60c:	0300340f 	movweq	r3, #1039	; 0x40f
     610:	3b0b3a0e 	blcc	2cee50 <startup-0x1fd311b0>
     614:	0213490b 	andseq	r4, r3, #180224	; 0x2c000
     618:	10000018 	andne	r0, r0, r8, lsl r0
     61c:	0e030034 	mcreq	0, 0, r0, cr3, cr4, {1}
     620:	0b3b0b3a 	bleq	ec3310 <startup-0x1f13ccf0>
     624:	193f1349 	ldmdbne	pc!, {r0, r3, r6, r8, r9, ip}	; <UNPREDICTABLE>
     628:	00001802 	andeq	r1, r0, r2, lsl #16
     62c:	3f012e11 	svccc	0x00012e11
     630:	3a0e0319 	bcc	38129c <startup-0x1fc7ed64>
     634:	270b3b0b 	strcs	r3, [fp, -fp, lsl #22]
     638:	12011119 	andne	r1, r1, #1073741830	; 0x40000006
     63c:	96184006 	ldrls	r4, [r8], -r6
     640:	13011942 	movwne	r1, #6466	; 0x1942
     644:	05120000 	ldreq	r0, [r2, #-0]
     648:	3a0e0300 	bcc	381250 <startup-0x1fc7edb0>
     64c:	490b3b0b 	stmdbmi	fp, {r0, r1, r3, r8, r9, fp, ip, sp}
     650:	00180213 	andseq	r0, r8, r3, lsl r2
     654:	012e1300 			; <UNDEFINED> instruction: 0x012e1300
     658:	0b3a0e03 	bleq	e83e6c <startup-0x1f17c194>
     65c:	19270b3b 	stmdbne	r7!, {r0, r1, r3, r4, r5, r8, r9, fp}
     660:	06120111 			; <UNDEFINED> instruction: 0x06120111
     664:	42961840 	addsmi	r1, r6, #64, 16	; 0x400000
     668:	00000019 	andeq	r0, r0, r9, lsl r0
     66c:	25011101 	strcs	r1, [r1, #-257]	; 0xfffffeff
     670:	030b130e 	movweq	r1, #45838	; 0xb30e
     674:	1201110e 	andne	r1, r1, #-2147483645	; 0x80000003
     678:	00171006 	andseq	r1, r7, r6
     67c:	01130200 	tsteq	r3, r0, lsl #4
     680:	0b3a0b0b 	bleq	e832b4 <startup-0x1f17cd4c>
     684:	13010b3b 	movwne	r0, #6971	; 0x1b3b
     688:	0d030000 	stceq	0, cr0, [r3, #-0]
     68c:	3a0e0300 	bcc	381294 <startup-0x1fc7ed6c>
     690:	490b3b0b 	stmdbmi	fp, {r0, r1, r3, r8, r9, fp, ip, sp}
     694:	000b3813 	andeq	r3, fp, r3, lsl r8
     698:	00240400 	eoreq	r0, r4, r0, lsl #8
     69c:	0b3e0b0b 	bleq	f832d0 <startup-0x1f07cd30>
     6a0:	00000e03 	andeq	r0, r0, r3, lsl #28
     6a4:	0b000f05 	bleq	42c0 <startup-0x1fffbd40>
     6a8:	0013490b 	andseq	r4, r3, fp, lsl #18
     6ac:	00160600 	andseq	r0, r6, r0, lsl #12
     6b0:	0b3a0e03 	bleq	e83ec4 <startup-0x1f17c13c>
     6b4:	13490b3b 	movtne	r0, #39739	; 0x9b3b
     6b8:	13070000 	movwne	r0, #28672	; 0x7000
     6bc:	0b0e0301 	bleq	3812c8 <startup-0x1fc7ed38>
     6c0:	3b0b3a0b 	blcc	2ceef4 <startup-0x1fd3110c>
     6c4:	0013010b 	andseq	r0, r3, fp, lsl #2
     6c8:	00240800 	eoreq	r0, r4, r0, lsl #16
     6cc:	0b3e0b0b 	bleq	f83300 <startup-0x1f07cd00>
     6d0:	00000803 	andeq	r0, r0, r3, lsl #16
     6d4:	27011509 	strcs	r1, [r1, -r9, lsl #10]
     6d8:	00130119 	andseq	r0, r3, r9, lsl r1
     6dc:	00050a00 	andeq	r0, r5, r0, lsl #20
     6e0:	00001349 	andeq	r1, r0, r9, asr #6
     6e4:	4901010b 	stmdbmi	r1, {r0, r1, r3, r8}
     6e8:	00130113 	andseq	r0, r3, r3, lsl r1
     6ec:	00210c00 	eoreq	r0, r1, r0, lsl #24
     6f0:	340d0000 	strcc	r0, [sp], #-0
     6f4:	3a0e0300 	bcc	3812fc <startup-0x1fc7ed04>
     6f8:	490b3b0b 	stmdbmi	fp, {r0, r1, r3, r8, r9, fp, ip, sp}
     6fc:	3c193f13 	ldccc	15, cr3, [r9], {19}
     700:	0e000019 	mcreq	0, 0, r0, cr0, cr9, {0}
     704:	13490021 	movtne	r0, #36897	; 0x9021
     708:	00000b2f 	andeq	r0, r0, pc, lsr #22
     70c:	0300340f 	movweq	r3, #1039	; 0x40f
     710:	3b0b3a0e 	blcc	2cef50 <startup-0x1fd310b0>
     714:	0213490b 	andseq	r4, r3, #180224	; 0x2c000
     718:	10000018 	andne	r0, r0, r8, lsl r0
     71c:	0e030034 	mcreq	0, 0, r0, cr3, cr4, {1}
     720:	0b3b0b3a 	bleq	ec3410 <startup-0x1f13cbf0>
     724:	193f1349 	ldmdbne	pc!, {r0, r3, r6, r8, r9, ip}	; <UNPREDICTABLE>
     728:	00001802 	andeq	r1, r0, r2, lsl #16
     72c:	3f012e11 	svccc	0x00012e11
     730:	3a0e0319 	bcc	38139c <startup-0x1fc7ec64>
     734:	270b3b0b 	strcs	r3, [fp, -fp, lsl #22]
     738:	12011119 	andne	r1, r1, #1073741830	; 0x40000006
     73c:	96184006 	ldrls	r4, [r8], -r6
     740:	13011942 	movwne	r1, #6466	; 0x1942
     744:	05120000 	ldreq	r0, [r2, #-0]
     748:	3a0e0300 	bcc	381350 <startup-0x1fc7ecb0>
     74c:	490b3b0b 	stmdbmi	fp, {r0, r1, r3, r8, r9, fp, ip, sp}
     750:	00180213 	andseq	r0, r8, r3, lsl r2
     754:	012e1300 			; <UNDEFINED> instruction: 0x012e1300
     758:	0e03193f 			; <UNDEFINED> instruction: 0x0e03193f
     75c:	0b3b0b3a 	bleq	ec344c <startup-0x1f13cbb4>
     760:	01111927 	tsteq	r1, r7, lsr #18
     764:	18400612 	stmdane	r0, {r1, r4, r9, sl}^
     768:	01194297 			; <UNDEFINED> instruction: 0x01194297
     76c:	14000013 	strne	r0, [r0], #-19	; 0xffffffed
     770:	08030005 	stmdaeq	r3, {r0, r2}
     774:	0b3b0b3a 	bleq	ec3464 <startup-0x1f13cb9c>
     778:	18021349 	stmdane	r2, {r0, r3, r6, r8, r9, ip}
     77c:	2e150000 	cdpcs	0, 1, cr0, cr5, cr0, {0}
     780:	3a0e0301 	bcc	38138c <startup-0x1fc7ec74>
     784:	270b3b0b 	strcs	r3, [fp, -fp, lsl #22]
     788:	12011119 	andne	r1, r1, #1073741830	; 0x40000006
     78c:	96184006 	ldrls	r4, [r8], -r6
     790:	00001942 	andeq	r1, r0, r2, asr #18
     794:	01110100 	tsteq	r1, r0, lsl #2
     798:	0b130e25 	bleq	4c4034 <startup-0x1fb3bfcc>
     79c:	01110e03 	tsteq	r1, r3, lsl #28
     7a0:	17100612 			; <UNDEFINED> instruction: 0x17100612
     7a4:	13020000 	movwne	r0, #8192	; 0x2000
     7a8:	3a0b0b01 	bcc	2c33b4 <startup-0x1fd3cc4c>
     7ac:	010b3b0b 	tsteq	fp, fp, lsl #22
     7b0:	03000013 	movweq	r0, #19
     7b4:	0e03000d 	cdpeq	0, 0, cr0, cr3, cr13, {0}
     7b8:	0b3b0b3a 	bleq	ec34a8 <startup-0x1f13cb58>
     7bc:	0b381349 	bleq	e054e8 <startup-0x1f1fab18>
     7c0:	24040000 	strcs	r0, [r4], #-0
     7c4:	3e0b0b00 	vmlacc.f64	d0, d11, d0
     7c8:	000e030b 	andeq	r0, lr, fp, lsl #6
     7cc:	000f0500 	andeq	r0, pc, r0, lsl #10
     7d0:	13490b0b 	movtne	r0, #39691	; 0x9b0b
     7d4:	16060000 	strne	r0, [r6], -r0
     7d8:	3a0e0300 	bcc	3813e0 <startup-0x1fc7ec20>
     7dc:	490b3b0b 	stmdbmi	fp, {r0, r1, r3, r8, r9, fp, ip, sp}
     7e0:	07000013 	smladeq	r0, r3, r0, r0
     7e4:	0e030113 	mcreq	1, 0, r0, cr3, cr3, {0}
     7e8:	0b3a0b0b 	bleq	e8341c <startup-0x1f17cbe4>
     7ec:	13010b3b 	movwne	r0, #6971	; 0x1b3b
     7f0:	24080000 	strcs	r0, [r8], #-0
     7f4:	3e0b0b00 	vmlacc.f64	d0, d11, d0
     7f8:	0008030b 	andeq	r0, r8, fp, lsl #6
     7fc:	01150900 	tsteq	r5, r0, lsl #18
     800:	13011927 	movwne	r1, #6439	; 0x1927
     804:	050a0000 	streq	r0, [sl, #-0]
     808:	00134900 	andseq	r4, r3, r0, lsl #18
     80c:	01010b00 	tsteq	r1, r0, lsl #22
     810:	13011349 	movwne	r1, #4937	; 0x1349
     814:	210c0000 	mrscs	r0, (UNDEF: 12)
     818:	0d000000 	stceq	0, cr0, [r0, #-0]
     81c:	0e030034 	mcreq	0, 0, r0, cr3, cr4, {1}
     820:	0b3b0b3a 	bleq	ec3510 <startup-0x1f13caf0>
     824:	193f1349 	ldmdbne	pc!, {r0, r3, r6, r8, r9, ip}	; <UNPREDICTABLE>
     828:	0000193c 	andeq	r1, r0, ip, lsr r9
     82c:	4900210e 	stmdbmi	r0, {r1, r2, r3, r8, sp}
     830:	000b2f13 	andeq	r2, fp, r3, lsl pc
     834:	00340f00 	eorseq	r0, r4, r0, lsl #30
     838:	0b3a0e03 	bleq	e8404c <startup-0x1f17bfb4>
     83c:	13490b3b 	movtne	r0, #39739	; 0x9b3b
     840:	00001802 	andeq	r1, r0, r2, lsl #16
     844:	03003410 	movweq	r3, #1040	; 0x410
     848:	3b0b3a0e 	blcc	2cf088 <startup-0x1fd30f78>
     84c:	3f13490b 	svccc	0x0013490b
     850:	00180219 	andseq	r0, r8, r9, lsl r2
     854:	012e1100 			; <UNDEFINED> instruction: 0x012e1100
     858:	0e03193f 			; <UNDEFINED> instruction: 0x0e03193f
     85c:	0b3b0b3a 	bleq	ec354c <startup-0x1f13cab4>
     860:	01111927 	tsteq	r1, r7, lsr #18
     864:	18400612 	stmdane	r0, {r1, r4, r9, sl}^
     868:	01194296 			; <UNDEFINED> instruction: 0x01194296
     86c:	12000013 	andne	r0, r0, #19
     870:	0e030005 	cdpeq	0, 0, cr0, cr3, cr5, {0}
     874:	0b3b0b3a 	bleq	ec3564 <startup-0x1f13ca9c>
     878:	18021349 	stmdane	r2, {r0, r3, r6, r8, r9, ip}
     87c:	2e130000 	cdpcs	0, 1, cr0, cr3, cr0, {0}
     880:	3a0e0301 	bcc	38148c <startup-0x1fc7eb74>
     884:	270b3b0b 	strcs	r3, [fp, -fp, lsl #22]
     888:	12011119 	andne	r1, r1, #1073741830	; 0x40000006
     88c:	96184006 	ldrls	r4, [r8], -r6
     890:	00001942 	andeq	r1, r0, r2, asr #18
     894:	01110100 	tsteq	r1, r0, lsl #2
     898:	0b130e25 	bleq	4c4134 <startup-0x1fb3becc>
     89c:	01110e03 	tsteq	r1, r3, lsl #28
     8a0:	17100612 			; <UNDEFINED> instruction: 0x17100612
     8a4:	13020000 	movwne	r0, #8192	; 0x2000
     8a8:	3a0b0b01 	bcc	2c34b4 <startup-0x1fd3cb4c>
     8ac:	010b3b0b 	tsteq	fp, fp, lsl #22
     8b0:	03000013 	movweq	r0, #19
     8b4:	0e03000d 	cdpeq	0, 0, cr0, cr3, cr13, {0}
     8b8:	0b3b0b3a 	bleq	ec35a8 <startup-0x1f13ca58>
     8bc:	0b381349 	bleq	e055e8 <startup-0x1f1faa18>
     8c0:	24040000 	strcs	r0, [r4], #-0
     8c4:	3e0b0b00 	vmlacc.f64	d0, d11, d0
     8c8:	000e030b 	andeq	r0, lr, fp, lsl #6
     8cc:	000f0500 	andeq	r0, pc, r0, lsl #10
     8d0:	13490b0b 	movtne	r0, #39691	; 0x9b0b
     8d4:	16060000 	strne	r0, [r6], -r0
     8d8:	3a0e0300 	bcc	3814e0 <startup-0x1fc7eb20>
     8dc:	490b3b0b 	stmdbmi	fp, {r0, r1, r3, r8, r9, fp, ip, sp}
     8e0:	07000013 	smladeq	r0, r3, r0, r0
     8e4:	0e030113 	mcreq	1, 0, r0, cr3, cr3, {0}
     8e8:	0b3a0b0b 	bleq	e8351c <startup-0x1f17cae4>
     8ec:	13010b3b 	movwne	r0, #6971	; 0x1b3b
     8f0:	24080000 	strcs	r0, [r8], #-0
     8f4:	3e0b0b00 	vmlacc.f64	d0, d11, d0
     8f8:	0008030b 	andeq	r0, r8, fp, lsl #6
     8fc:	01150900 	tsteq	r5, r0, lsl #18
     900:	13011927 	movwne	r1, #6439	; 0x1927
     904:	050a0000 	streq	r0, [sl, #-0]
     908:	00134900 	andseq	r4, r3, r0, lsl #18
     90c:	01010b00 	tsteq	r1, r0, lsl #22
     910:	13011349 	movwne	r1, #4937	; 0x1349
     914:	210c0000 	mrscs	r0, (UNDEF: 12)
     918:	0d000000 	stceq	0, cr0, [r0, #-0]
     91c:	0e030034 	mcreq	0, 0, r0, cr3, cr4, {1}
     920:	0b3b0b3a 	bleq	ec3610 <startup-0x1f13c9f0>
     924:	193f1349 	ldmdbne	pc!, {r0, r3, r6, r8, r9, ip}	; <UNPREDICTABLE>
     928:	0000193c 	andeq	r1, r0, ip, lsr r9
     92c:	4900210e 	stmdbmi	r0, {r1, r2, r3, r8, sp}
     930:	00052f13 	andeq	r2, r5, r3, lsl pc
     934:	00340f00 	eorseq	r0, r4, r0, lsl #30
     938:	0b3a0e03 	bleq	e8414c <startup-0x1f17beb4>
     93c:	13490b3b 	movtne	r0, #39739	; 0x9b3b
     940:	00001802 	andeq	r1, r0, r2, lsl #16
     944:	03003410 	movweq	r3, #1040	; 0x410
     948:	3b0b3a0e 	blcc	2cf188 <startup-0x1fd30e78>
     94c:	3f13490b 	svccc	0x0013490b
     950:	00180219 	andseq	r0, r8, r9, lsl r2
     954:	00211100 	eoreq	r1, r1, r0, lsl #2
     958:	0b2f1349 	bleq	bc5684 <startup-0x1f43a97c>
     95c:	2e120000 	cdpcs	0, 1, cr0, cr2, cr0, {0}
     960:	03193f01 	tsteq	r9, #1, 30
     964:	3b0b3a0e 	blcc	2cf1a4 <startup-0x1fd30e5c>
     968:	1119270b 	tstne	r9, fp, lsl #14
     96c:	40061201 	andmi	r1, r6, r1, lsl #4
     970:	19429618 	stmdbne	r2, {r3, r4, r9, sl, ip, pc}^
     974:	00001301 	andeq	r1, r0, r1, lsl #6
     978:	03000513 	movweq	r0, #1299	; 0x513
     97c:	3b0b3a0e 	blcc	2cf1bc <startup-0x1fd30e44>
     980:	0213490b 	andseq	r4, r3, #180224	; 0x2c000
     984:	14000018 	strne	r0, [r0], #-24	; 0xffffffe8
     988:	0e03012e 	adfeqsp	f0, f3, #0.5
     98c:	0b3b0b3a 	bleq	ec367c <startup-0x1f13c984>
     990:	01111927 	tsteq	r1, r7, lsr #18
     994:	18400612 	stmdane	r0, {r1, r4, r9, sl}^
     998:	00194296 	mulseq	r9, r6, r2
     99c:	11010000 	mrsne	r0, (UNDEF: 1)
     9a0:	130e2501 	movwne	r2, #58625	; 0xe501
     9a4:	110e030b 	tstne	lr, fp, lsl #6
     9a8:	10061201 	andne	r1, r6, r1, lsl #4
     9ac:	02000017 	andeq	r0, r0, #23
     9b0:	0b0b0113 	bleq	2c0e04 <startup-0x1fd3f1fc>
     9b4:	0b3b0b3a 	bleq	ec36a4 <startup-0x1f13c95c>
     9b8:	00001301 	andeq	r1, r0, r1, lsl #6
     9bc:	03000d03 	movweq	r0, #3331	; 0xd03
     9c0:	3b0b3a0e 	blcc	2cf200 <startup-0x1fd30e00>
     9c4:	3813490b 	ldmdacc	r3, {r0, r1, r3, r8, fp, lr}
     9c8:	0400000b 	streq	r0, [r0], #-11
     9cc:	0b0b0024 	bleq	2c0a64 <startup-0x1fd3f59c>
     9d0:	0e030b3e 	vmoveq.16	d3[0], r0
     9d4:	0f050000 	svceq	0x00050000
     9d8:	490b0b00 	stmdbmi	fp, {r8, r9, fp}
     9dc:	06000013 			; <UNDEFINED> instruction: 0x06000013
     9e0:	0e030016 	mcreq	0, 0, r0, cr3, cr6, {0}
     9e4:	0b3b0b3a 	bleq	ec36d4 <startup-0x1f13c92c>
     9e8:	00001349 	andeq	r1, r0, r9, asr #6
     9ec:	03011307 	movweq	r1, #4871	; 0x1307
     9f0:	3a0b0b0e 	bcc	2c3630 <startup-0x1fd3c9d0>
     9f4:	010b3b0b 	tsteq	fp, fp, lsl #22
     9f8:	08000013 	stmdaeq	r0, {r0, r1, r4}
     9fc:	0b0b0024 	bleq	2c0a94 <startup-0x1fd3f56c>
     a00:	08030b3e 	stmdaeq	r3, {r1, r2, r3, r4, r5, r8, r9, fp}
     a04:	15090000 	strne	r0, [r9, #-0]
     a08:	01192701 	tsteq	r9, r1, lsl #14
     a0c:	0a000013 	beq	a60 <startup-0x1ffff5a0>
     a10:	13490005 	movtne	r0, #36869	; 0x9005
     a14:	010b0000 	mrseq	r0, (UNDEF: 11)
     a18:	01134901 	tsteq	r3, r1, lsl #18
     a1c:	0c000013 	stceq	0, cr0, [r0], {19}
     a20:	00000021 	andeq	r0, r0, r1, lsr #32
     a24:	0300340d 	movweq	r3, #1037	; 0x40d
     a28:	3b0b3a0e 	blcc	2cf268 <startup-0x1fd30d98>
     a2c:	3f13490b 	svccc	0x0013490b
     a30:	00193c19 	andseq	r3, r9, r9, lsl ip
     a34:	00210e00 	eoreq	r0, r1, r0, lsl #28
     a38:	052f1349 	streq	r1, [pc, #-841]!	; 6f7 <startup-0x1ffff909>
     a3c:	340f0000 	strcc	r0, [pc], #-0	; a44 <startup-0x1ffff5bc>
     a40:	3a134700 	bcc	4d2648 <startup-0x1fb2d9b8>
     a44:	020b3b0b 	andeq	r3, fp, #11264	; 0x2c00
     a48:	10000018 	andne	r0, r0, r8, lsl r0
     a4c:	193f012e 	ldmdbne	pc!, {r1, r2, r3, r5, r8}	; <UNPREDICTABLE>
     a50:	0b3a0e03 	bleq	e84264 <startup-0x1f17bd9c>
     a54:	1927053b 	stmdbne	r7!, {r0, r1, r3, r4, r5, r8, sl}
     a58:	06120111 			; <UNDEFINED> instruction: 0x06120111
     a5c:	42961840 	addsmi	r1, r6, #64, 16	; 0x400000
     a60:	00130119 	andseq	r0, r3, r9, lsl r1
     a64:	00051100 	andeq	r1, r5, r0, lsl #2
     a68:	0b3a0e03 	bleq	e8427c <startup-0x1f17bd84>
     a6c:	1349053b 	movtne	r0, #38203	; 0x953b
     a70:	00001802 	andeq	r1, r0, r2, lsl #16
     a74:	03003412 	movweq	r3, #1042	; 0x412
     a78:	3b0b3a0e 	blcc	2cf2b8 <startup-0x1fd30d48>
     a7c:	02134905 	andseq	r4, r3, #81920	; 0x14000
     a80:	13000018 	movwne	r0, #24
     a84:	193f012e 	ldmdbne	pc!, {r1, r2, r3, r5, r8}	; <UNPREDICTABLE>
     a88:	0b3a0e03 	bleq	e8429c <startup-0x1f17bd64>
     a8c:	1927053b 	stmdbne	r7!, {r0, r1, r3, r4, r5, r8, sl}
     a90:	06120111 			; <UNDEFINED> instruction: 0x06120111
     a94:	42971840 	addsmi	r1, r7, #64, 16	; 0x400000
     a98:	00130119 	andseq	r0, r3, r9, lsl r1
     a9c:	00341400 	eorseq	r1, r4, r0, lsl #8
     aa0:	0b3a0803 	bleq	e82ab4 <startup-0x1f17d54c>
     aa4:	1349053b 	movtne	r0, #38203	; 0x953b
     aa8:	00001802 	andeq	r1, r0, r2, lsl #16
     aac:	03003415 	movweq	r3, #1045	; 0x415
     ab0:	3b0b3a08 	blcc	2cf2d8 <startup-0x1fd30d28>
     ab4:	00134905 	andseq	r4, r3, r5, lsl #18
     ab8:	00051600 	andeq	r1, r5, r0, lsl #12
     abc:	0b3a0803 	bleq	e82ad0 <startup-0x1f17d530>
     ac0:	1349053b 	movtne	r0, #38203	; 0x953b
     ac4:	00001802 	andeq	r1, r0, r2, lsl #16
     ac8:	11010b17 	tstne	r1, r7, lsl fp
     acc:	00061201 	andeq	r1, r6, r1, lsl #4
     ad0:	012e1800 			; <UNDEFINED> instruction: 0x012e1800
     ad4:	0e03193f 			; <UNDEFINED> instruction: 0x0e03193f
     ad8:	0b3b0b3a 	bleq	ec37c8 <startup-0x1f13c838>
     adc:	01111927 	tsteq	r1, r7, lsr #18
     ae0:	18400612 	stmdane	r0, {r1, r4, r9, sl}^
     ae4:	01194297 			; <UNDEFINED> instruction: 0x01194297
     ae8:	19000013 	stmdbne	r0, {r0, r1, r4}
     aec:	08030005 	stmdaeq	r3, {r0, r2}
     af0:	0b3b0b3a 	bleq	ec37e0 <startup-0x1f13c820>
     af4:	18021349 	stmdane	r2, {r0, r3, r6, r8, r9, ip}
     af8:	051a0000 	ldreq	r0, [sl, #-0]
     afc:	3a0e0300 	bcc	381704 <startup-0x1fc7e8fc>
     b00:	490b3b0b 	stmdbmi	fp, {r0, r1, r3, r8, r9, fp, ip, sp}
     b04:	00180213 	andseq	r0, r8, r3, lsl r2
     b08:	00341b00 	eorseq	r1, r4, r0, lsl #22
     b0c:	0b3a0e03 	bleq	e84320 <startup-0x1f17bce0>
     b10:	13490b3b 	movtne	r0, #39739	; 0x9b3b
     b14:	00001802 	andeq	r1, r0, r2, lsl #16
     b18:	3f012e1c 	svccc	0x00012e1c
     b1c:	3a0e0319 	bcc	381788 <startup-0x1fc7e878>
     b20:	270b3b0b 	strcs	r3, [fp, -fp, lsl #22]
     b24:	12011119 	andne	r1, r1, #1073741830	; 0x40000006
     b28:	96184006 	ldrls	r4, [r8], -r6
     b2c:	13011942 	movwne	r1, #6466	; 0x1942
     b30:	341d0000 	ldrcc	r0, [sp], #-0
     b34:	3a080300 	bcc	20173c <startup-0x1fdfe8c4>
     b38:	490b3b0b 	stmdbmi	fp, {r0, r1, r3, r8, r9, fp, ip, sp}
     b3c:	00180213 	andseq	r0, r8, r3, lsl r2
     b40:	002e1e00 	eoreq	r1, lr, r0, lsl #28
     b44:	0e03193f 			; <UNDEFINED> instruction: 0x0e03193f
     b48:	0b3b0b3a 	bleq	ec3838 <startup-0x1f13c7c8>
     b4c:	01111927 	tsteq	r1, r7, lsr #18
     b50:	18400612 	stmdane	r0, {r1, r4, r9, sl}^
     b54:	00194296 	mulseq	r9, r6, r2
     b58:	012e1f00 			; <UNDEFINED> instruction: 0x012e1f00
     b5c:	0e03193f 			; <UNDEFINED> instruction: 0x0e03193f
     b60:	0b3b0b3a 	bleq	ec3850 <startup-0x1f13c7b0>
     b64:	13491927 	movtne	r1, #39207	; 0x9927
     b68:	06120111 			; <UNDEFINED> instruction: 0x06120111
     b6c:	42961840 	addsmi	r1, r6, #64, 16	; 0x400000
     b70:	00130119 	andseq	r0, r3, r9, lsl r1
     b74:	012e2000 			; <UNDEFINED> instruction: 0x012e2000
     b78:	0b3a0e03 	bleq	e8438c <startup-0x1f17bc74>
     b7c:	19270b3b 	stmdbne	r7!, {r0, r1, r3, r4, r5, r8, r9, fp}
     b80:	01111349 	tsteq	r1, r9, asr #6
     b84:	18400612 	stmdane	r0, {r1, r4, r9, sl}^
     b88:	01194296 			; <UNDEFINED> instruction: 0x01194296
     b8c:	21000013 	tstcs	r0, r3, lsl r0
     b90:	0e03012e 	adfeqsp	f0, f3, #0.5
     b94:	0b3b0b3a 	bleq	ec3884 <startup-0x1f13c77c>
     b98:	01111927 	tsteq	r1, r7, lsr #18
     b9c:	18400612 	stmdane	r0, {r1, r4, r9, sl}^
     ba0:	01194297 			; <UNDEFINED> instruction: 0x01194297
     ba4:	22000013 	andcs	r0, r0, #19
     ba8:	193f002e 	ldmdbne	pc!, {r1, r2, r3, r5}	; <UNPREDICTABLE>
     bac:	0b3a0e03 	bleq	e843c0 <startup-0x1f17bc40>
     bb0:	19270b3b 	stmdbne	r7!, {r0, r1, r3, r4, r5, r8, r9, fp}
     bb4:	06120111 			; <UNDEFINED> instruction: 0x06120111
     bb8:	42971840 	addsmi	r1, r7, #64, 16	; 0x400000
     bbc:	00000019 	andeq	r0, r0, r9, lsl r0
     bc0:	25011101 	strcs	r1, [r1, #-257]	; 0xfffffeff
     bc4:	030b130e 	movweq	r1, #45838	; 0xb30e
     bc8:	1201110e 	andne	r1, r1, #-2147483645	; 0x80000003
     bcc:	00171006 	andseq	r1, r7, r6
     bd0:	01130200 	tsteq	r3, r0, lsl #4
     bd4:	0b3a0b0b 	bleq	e83808 <startup-0x1f17c7f8>
     bd8:	13010b3b 	movwne	r0, #6971	; 0x1b3b
     bdc:	0d030000 	stceq	0, cr0, [r3, #-0]
     be0:	3a0e0300 	bcc	3817e8 <startup-0x1fc7e818>
     be4:	490b3b0b 	stmdbmi	fp, {r0, r1, r3, r8, r9, fp, ip, sp}
     be8:	000b3813 	andeq	r3, fp, r3, lsl r8
     bec:	00240400 	eoreq	r0, r4, r0, lsl #8
     bf0:	0b3e0b0b 	bleq	f83824 <startup-0x1f07c7dc>
     bf4:	00000e03 	andeq	r0, r0, r3, lsl #28
     bf8:	0b000f05 	bleq	4814 <startup-0x1fffb7ec>
     bfc:	0013490b 	andseq	r4, r3, fp, lsl #18
     c00:	00160600 	andseq	r0, r6, r0, lsl #12
     c04:	0b3a0e03 	bleq	e84418 <startup-0x1f17bbe8>
     c08:	13490b3b 	movtne	r0, #39739	; 0x9b3b
     c0c:	13070000 	movwne	r0, #28672	; 0x7000
     c10:	0b0e0301 	bleq	38181c <startup-0x1fc7e7e4>
     c14:	3b0b3a0b 	blcc	2cf448 <startup-0x1fd30bb8>
     c18:	0013010b 	andseq	r0, r3, fp, lsl #2
     c1c:	012e0800 			; <UNDEFINED> instruction: 0x012e0800
     c20:	0e03193f 			; <UNDEFINED> instruction: 0x0e03193f
     c24:	0b3b0b3a 	bleq	ec3914 <startup-0x1f13c6ec>
     c28:	01111927 	tsteq	r1, r7, lsr #18
     c2c:	18400612 	stmdane	r0, {r1, r4, r9, sl}^
     c30:	01194297 			; <UNDEFINED> instruction: 0x01194297
     c34:	09000013 	stmdbeq	r0, {r0, r1, r4}
     c38:	0e030005 	cdpeq	0, 0, cr0, cr3, cr5, {0}
     c3c:	0b3b0b3a 	bleq	ec392c <startup-0x1f13c6d4>
     c40:	18021349 	stmdane	r2, {r0, r3, r6, r8, r9, ip}
     c44:	01000000 	mrseq	r0, (UNDEF: 0)
     c48:	0e250111 	mcreq	1, 1, r0, cr5, cr1, {0}
     c4c:	0e030b13 	vmoveq.32	d3[0], r0
     c50:	06120111 			; <UNDEFINED> instruction: 0x06120111
     c54:	00001710 	andeq	r1, r0, r0, lsl r7
     c58:	0b011302 	bleq	45868 <startup-0x1ffba798>
     c5c:	3b0b3a0b 	blcc	2cf490 <startup-0x1fd30b70>
     c60:	0013010b 	andseq	r0, r3, fp, lsl #2
     c64:	000d0300 	andeq	r0, sp, r0, lsl #6
     c68:	0b3a0e03 	bleq	e8447c <startup-0x1f17bb84>
     c6c:	13490b3b 	movtne	r0, #39739	; 0x9b3b
     c70:	00000b38 	andeq	r0, r0, r8, lsr fp
     c74:	0b002404 	bleq	9c8c <startup-0x1fff6374>
     c78:	030b3e0b 	movweq	r3, #48651	; 0xbe0b
     c7c:	0500000e 	streq	r0, [r0, #-14]
     c80:	0b0b000f 	bleq	2c0cc4 <startup-0x1fd3f33c>
     c84:	00001349 	andeq	r1, r0, r9, asr #6
     c88:	03001606 	movweq	r1, #1542	; 0x606
     c8c:	3b0b3a0e 	blcc	2cf4cc <startup-0x1fd30b34>
     c90:	0013490b 	andseq	r4, r3, fp, lsl #18
     c94:	012e0700 			; <UNDEFINED> instruction: 0x012e0700
     c98:	0e03193f 			; <UNDEFINED> instruction: 0x0e03193f
     c9c:	0b3b0b3a 	bleq	ec398c <startup-0x1f13c674>
     ca0:	01111927 	tsteq	r1, r7, lsr #18
     ca4:	18400612 	stmdane	r0, {r1, r4, r9, sl}^
     ca8:	01194297 			; <UNDEFINED> instruction: 0x01194297
     cac:	08000013 	stmdaeq	r0, {r0, r1, r4}
     cb0:	08030005 	stmdaeq	r3, {r0, r2}
     cb4:	0b3b0b3a 	bleq	ec39a4 <startup-0x1f13c65c>
     cb8:	18021349 	stmdane	r2, {r0, r3, r6, r8, r9, ip}
     cbc:	05090000 	streq	r0, [r9, #-0]
     cc0:	3a0e0300 	bcc	3818c8 <startup-0x1fc7e738>
     cc4:	490b3b0b 	stmdbmi	fp, {r0, r1, r3, r8, r9, fp, ip, sp}
     cc8:	00180213 	andseq	r0, r8, r3, lsl r2
     ccc:	00240a00 	eoreq	r0, r4, r0, lsl #20
     cd0:	0b3e0b0b 	bleq	f83904 <startup-0x1f07c6fc>
     cd4:	00000803 	andeq	r0, r0, r3, lsl #16
     cd8:	01110100 	tsteq	r1, r0, lsl #2
     cdc:	0b130e25 	bleq	4c4578 <startup-0x1fb3ba88>
     ce0:	01110e03 	tsteq	r1, r3, lsl #28
     ce4:	17100612 			; <UNDEFINED> instruction: 0x17100612
     ce8:	13020000 	movwne	r0, #8192	; 0x2000
     cec:	3a0b0b01 	bcc	2c38f8 <startup-0x1fd3c708>
     cf0:	010b3b0b 	tsteq	fp, fp, lsl #22
     cf4:	03000013 	movweq	r0, #19
     cf8:	0e03000d 	cdpeq	0, 0, cr0, cr3, cr13, {0}
     cfc:	0b3b0b3a 	bleq	ec39ec <startup-0x1f13c614>
     d00:	0b381349 	bleq	e05a2c <startup-0x1f1fa5d4>
     d04:	24040000 	strcs	r0, [r4], #-0
     d08:	3e0b0b00 	vmlacc.f64	d0, d11, d0
     d0c:	000e030b 	andeq	r0, lr, fp, lsl #6
     d10:	00160500 	andseq	r0, r6, r0, lsl #10
     d14:	0b3a0e03 	bleq	e84528 <startup-0x1f17bad8>
     d18:	13490b3b 	movtne	r0, #39739	; 0x9b3b
     d1c:	2e060000 	cdpcs	0, 0, cr0, cr6, cr0, {0}
     d20:	03193f01 	tsteq	r9, #1, 30
     d24:	3b0b3a0e 	blcc	2cf564 <startup-0x1fd30a9c>
     d28:	4919270b 	ldmdbmi	r9, {r0, r1, r3, r8, r9, sl, sp}
     d2c:	12011113 	andne	r1, r1, #-1073741820	; 0xc0000004
     d30:	96184006 	ldrls	r4, [r8], -r6
     d34:	13011942 	movwne	r1, #6466	; 0x1942
     d38:	05070000 	streq	r0, [r7, #-0]
     d3c:	3a080300 	bcc	201944 <startup-0x1fdfe6bc>
     d40:	490b3b0b 	stmdbmi	fp, {r0, r1, r3, r8, r9, fp, ip, sp}
     d44:	00180213 	andseq	r0, r8, r3, lsl r2
     d48:	00340800 	eorseq	r0, r4, r0, lsl #16
     d4c:	0b3a0803 	bleq	e82d60 <startup-0x1f17d2a0>
     d50:	13490b3b 	movtne	r0, #39739	; 0x9b3b
     d54:	00001802 	andeq	r1, r0, r2, lsl #16
     d58:	0b002409 	bleq	9d84 <startup-0x1fff627c>
     d5c:	030b3e0b 	movweq	r3, #48651	; 0xbe0b
     d60:	0a000008 	beq	d88 <startup-0x1ffff278>
     d64:	193f002e 	ldmdbne	pc!, {r1, r2, r3, r5}	; <UNPREDICTABLE>
     d68:	0b3a0e03 	bleq	e8457c <startup-0x1f17ba84>
     d6c:	19270b3b 	stmdbne	r7!, {r0, r1, r3, r4, r5, r8, r9, fp}
     d70:	01111349 	tsteq	r1, r9, asr #6
     d74:	18400612 	stmdane	r0, {r1, r4, r9, sl}^
     d78:	00194297 	mulseq	r9, r7, r2
     d7c:	002e0b00 	eoreq	r0, lr, r0, lsl #22
     d80:	0e03193f 			; <UNDEFINED> instruction: 0x0e03193f
     d84:	0b3b0b3a 	bleq	ec3a74 <startup-0x1f13c58c>
     d88:	01111927 	tsteq	r1, r7, lsr #18
     d8c:	18400612 	stmdane	r0, {r1, r4, r9, sl}^
     d90:	00194297 	mulseq	r9, r7, r2
     d94:	11010000 	mrsne	r0, (UNDEF: 1)
     d98:	130e2501 	movwne	r2, #58625	; 0xe501
     d9c:	110e030b 	tstne	lr, fp, lsl #6
     da0:	10061201 	andne	r1, r6, r1, lsl #4
     da4:	02000017 	andeq	r0, r0, #23
     da8:	0b0b0113 	bleq	2c11fc <startup-0x1fd3ee04>
     dac:	0b3b0b3a 	bleq	ec3a9c <startup-0x1f13c564>
     db0:	00001301 	andeq	r1, r0, r1, lsl #6
     db4:	03000d03 	movweq	r0, #3331	; 0xd03
     db8:	3b0b3a0e 	blcc	2cf5f8 <startup-0x1fd30a08>
     dbc:	3813490b 	ldmdacc	r3, {r0, r1, r3, r8, fp, lr}
     dc0:	0400000b 	streq	r0, [r0], #-11
     dc4:	0b0b0024 	bleq	2c0e5c <startup-0x1fd3f1a4>
     dc8:	0e030b3e 	vmoveq.16	d3[0], r0
     dcc:	0f050000 	svceq	0x00050000
     dd0:	490b0b00 	stmdbmi	fp, {r8, r9, fp}
     dd4:	06000013 			; <UNDEFINED> instruction: 0x06000013
     dd8:	0e030016 	mcreq	0, 0, r0, cr3, cr6, {0}
     ddc:	0b3b0b3a 	bleq	ec3acc <startup-0x1f13c534>
     de0:	00001349 	andeq	r1, r0, r9, asr #6
     de4:	03011307 	movweq	r1, #4871	; 0x1307
     de8:	3a0b0b0e 	bcc	2c3a28 <startup-0x1fd3c5d8>
     dec:	010b3b0b 	tsteq	fp, fp, lsl #22
     df0:	08000013 	stmdaeq	r0, {r0, r1, r4}
     df4:	0b0b0024 	bleq	2c0e8c <startup-0x1fd3f174>
     df8:	08030b3e 	stmdaeq	r3, {r1, r2, r3, r4, r5, r8, r9, fp}
     dfc:	15090000 	strne	r0, [r9, #-0]
     e00:	01192701 	tsteq	r9, r1, lsl #14
     e04:	0a000013 	beq	e58 <startup-0x1ffff1a8>
     e08:	13490005 	movtne	r0, #36869	; 0x9005
     e0c:	010b0000 	mrseq	r0, (UNDEF: 11)
     e10:	01134901 	tsteq	r3, r1, lsl #18
     e14:	0c000013 	stceq	0, cr0, [r0], {19}
     e18:	00000021 	andeq	r0, r0, r1, lsr #32
     e1c:	0300340d 	movweq	r3, #1037	; 0x40d
     e20:	3b0b3a0e 	blcc	2cf660 <startup-0x1fd309a0>
     e24:	3f13490b 	svccc	0x0013490b
     e28:	00193c19 	andseq	r3, r9, r9, lsl ip
     e2c:	00210e00 	eoreq	r0, r1, r0, lsl #28
     e30:	052f1349 	streq	r1, [pc, #-841]!	; aef <startup-0x1ffff511>
     e34:	2e0f0000 	cdpcs	0, 0, cr0, cr15, cr0, {0}
     e38:	03193f01 	tsteq	r9, #1, 30
     e3c:	3b0b3a0e 	blcc	2cf67c <startup-0x1fd30984>
     e40:	1119270b 	tstne	r9, fp, lsl #14
     e44:	40061201 	andmi	r1, r6, r1, lsl #4
     e48:	19429618 	stmdbne	r2, {r3, r4, r9, sl, ip, pc}^
     e4c:	00001301 	andeq	r1, r0, r1, lsl #6
     e50:	03003410 	movweq	r3, #1040	; 0x410
     e54:	3b0b3a08 	blcc	2cf67c <startup-0x1fd30984>
     e58:	0213490b 	andseq	r4, r3, #180224	; 0x2c000
     e5c:	11000018 	tstne	r0, r8, lsl r0
     e60:	0e030034 	mcreq	0, 0, r0, cr3, cr4, {1}
     e64:	0b3b0b3a 	bleq	ec3b54 <startup-0x1f13c4ac>
     e68:	18021349 	stmdane	r2, {r0, r3, r6, r8, r9, ip}
     e6c:	21120000 	tstcs	r2, r0
     e70:	2f134900 	svccs	0x00134900
     e74:	1300000b 	movwne	r0, #11
     e78:	0e030005 	cdpeq	0, 0, cr0, cr3, cr5, {0}
     e7c:	0b3b0b3a 	bleq	ec3b6c <startup-0x1f13c494>
     e80:	18021349 	stmdane	r2, {r0, r3, r6, r8, r9, ip}
     e84:	2e140000 	cdpcs	0, 1, cr0, cr4, cr0, {0}
     e88:	03193f00 	tsteq	r9, #0, 30
     e8c:	3b0b3a0e 	blcc	2cf6cc <startup-0x1fd30934>
     e90:	1119270b 	tstne	r9, fp, lsl #14
     e94:	40061201 	andmi	r1, r6, r1, lsl #4
     e98:	19429618 	stmdbne	r2, {r3, r4, r9, sl, ip, pc}^
     e9c:	2e150000 	cdpcs	0, 1, cr0, cr5, cr0, {0}
     ea0:	03193f00 	tsteq	r9, #0, 30
     ea4:	3b0b3a0e 	blcc	2cf6e4 <startup-0x1fd3091c>
     ea8:	1119270b 	tstne	r9, fp, lsl #14
     eac:	40061201 	andmi	r1, r6, r1, lsl #4
     eb0:	19429718 	stmdbne	r2, {r3, r4, r8, r9, sl, ip, pc}^
     eb4:	05160000 	ldreq	r0, [r6, #-0]
     eb8:	3a080300 	bcc	201ac0 <startup-0x1fdfe540>
     ebc:	490b3b0b 	stmdbmi	fp, {r0, r1, r3, r8, r9, fp, ip, sp}
     ec0:	00180213 	andseq	r0, r8, r3, lsl r2
     ec4:	012e1700 			; <UNDEFINED> instruction: 0x012e1700
     ec8:	0e03193f 			; <UNDEFINED> instruction: 0x0e03193f
     ecc:	0b3b0b3a 	bleq	ec3bbc <startup-0x1f13c444>
     ed0:	13491927 	movtne	r1, #39207	; 0x9927
     ed4:	06120111 			; <UNDEFINED> instruction: 0x06120111
     ed8:	42961840 	addsmi	r1, r6, #64, 16	; 0x400000
     edc:	00130119 	andseq	r0, r3, r9, lsl r1
     ee0:	012e1800 			; <UNDEFINED> instruction: 0x012e1800
     ee4:	0e03193f 			; <UNDEFINED> instruction: 0x0e03193f
     ee8:	0b3b0b3a 	bleq	ec3bd8 <startup-0x1f13c428>
     eec:	01111927 	tsteq	r1, r7, lsr #18
     ef0:	18400612 	stmdane	r0, {r1, r4, r9, sl}^
     ef4:	01194297 			; <UNDEFINED> instruction: 0x01194297
     ef8:	19000013 	stmdbne	r0, {r0, r1, r4}
     efc:	193f012e 	ldmdbne	pc!, {r1, r2, r3, r5, r8}	; <UNPREDICTABLE>
     f00:	0b3a0e03 	bleq	e84714 <startup-0x1f17b8ec>
     f04:	19270b3b 	stmdbne	r7!, {r0, r1, r3, r4, r5, r8, r9, fp}
     f08:	06120111 			; <UNDEFINED> instruction: 0x06120111
     f0c:	42971840 	addsmi	r1, r7, #64, 16	; 0x400000
     f10:	00000019 	andeq	r0, r0, r9, lsl r0
     f14:	25011101 	strcs	r1, [r1, #-257]	; 0xfffffeff
     f18:	030b130e 	movweq	r1, #45838	; 0xb30e
     f1c:	1201110e 	andne	r1, r1, #-2147483645	; 0x80000003
     f20:	00171006 	andseq	r1, r7, r6
     f24:	01130200 	tsteq	r3, r0, lsl #4
     f28:	0b0b0e03 	bleq	2c473c <startup-0x1fd3b8c4>
     f2c:	0b3b0b3a 	bleq	ec3c1c <startup-0x1f13c3e4>
     f30:	00001301 	andeq	r1, r0, r1, lsl #6
     f34:	03000d03 	movweq	r0, #3331	; 0xd03
     f38:	3b0b3a0e 	blcc	2cf778 <startup-0x1fd30888>
     f3c:	3813490b 	ldmdacc	r3, {r0, r1, r3, r8, fp, lr}
     f40:	0400000b 	streq	r0, [r0], #-11
     f44:	0b0b000f 	bleq	2c0f88 <startup-0x1fd3f078>
     f48:	00001349 	andeq	r1, r0, r9, asr #6
     f4c:	0b002405 	bleq	9f68 <startup-0x1fff6098>
     f50:	030b3e0b 	movweq	r3, #48651	; 0xbe0b
     f54:	0600000e 	streq	r0, [r0], -lr
     f58:	0b0b0024 	bleq	2c0ff0 <startup-0x1fd3f010>
     f5c:	08030b3e 	stmdaeq	r3, {r1, r2, r3, r4, r5, r8, r9, fp}
     f60:	15070000 	strne	r0, [r7, #-0]
     f64:	01192701 	tsteq	r9, r1, lsl #14
     f68:	08000013 	stmdaeq	r0, {r0, r1, r4}
     f6c:	13490005 	movtne	r0, #36869	; 0x9005
     f70:	16090000 	strne	r0, [r9], -r0
     f74:	3a0e0300 	bcc	381b7c <startup-0x1fc7e484>
     f78:	490b3b0b 	stmdbmi	fp, {r0, r1, r3, r8, r9, fp, ip, sp}
     f7c:	0a000013 	beq	fd0 <startup-0x1ffff030>
     f80:	193f012e 	ldmdbne	pc!, {r1, r2, r3, r5, r8}	; <UNPREDICTABLE>
     f84:	0b3a0e03 	bleq	e84798 <startup-0x1f17b868>
     f88:	19270b3b 	stmdbne	r7!, {r0, r1, r3, r4, r5, r8, r9, fp}
     f8c:	06120111 			; <UNDEFINED> instruction: 0x06120111
     f90:	42971840 	addsmi	r1, r7, #64, 16	; 0x400000
     f94:	00130119 	andseq	r0, r3, r9, lsl r1
     f98:	00050b00 	andeq	r0, r5, r0, lsl #22
     f9c:	0b3a0803 	bleq	e82fb0 <startup-0x1f17d050>
     fa0:	13490b3b 	movtne	r0, #39739	; 0x9b3b
     fa4:	00001802 	andeq	r1, r0, r2, lsl #16
     fa8:	0300050c 	movweq	r0, #1292	; 0x50c
     fac:	3b0b3a0e 	blcc	2cf7ec <startup-0x1fd30814>
     fb0:	0213490b 	andseq	r4, r3, #180224	; 0x2c000
     fb4:	0d000018 	stceq	0, cr0, [r0, #-96]	; 0xffffffa0
     fb8:	193f012e 	ldmdbne	pc!, {r1, r2, r3, r5, r8}	; <UNPREDICTABLE>
     fbc:	0b3a0e03 	bleq	e847d0 <startup-0x1f17b830>
     fc0:	19270b3b 	stmdbne	r7!, {r0, r1, r3, r4, r5, r8, r9, fp}
     fc4:	06120111 			; <UNDEFINED> instruction: 0x06120111
     fc8:	42961840 	addsmi	r1, r6, #64, 16	; 0x400000
     fcc:	0e000019 	mcreq	0, 0, r0, cr0, cr9, {0}
     fd0:	0e030034 	mcreq	0, 0, r0, cr3, cr4, {1}
     fd4:	0b3b0b3a 	bleq	ec3cc4 <startup-0x1f13c33c>
     fd8:	18021349 	stmdane	r2, {r0, r3, r6, r8, r9, ip}
     fdc:	01000000 	mrseq	r0, (UNDEF: 0)
     fe0:	0e250111 	mcreq	1, 1, r0, cr5, cr1, {0}
     fe4:	0e030b13 	vmoveq.32	d3[0], r0
     fe8:	06120111 			; <UNDEFINED> instruction: 0x06120111
     fec:	00001710 	andeq	r1, r0, r0, lsl r7
     ff0:	0b011302 	bleq	45c00 <startup-0x1ffba400>
     ff4:	3b0b3a0b 	blcc	2cf828 <startup-0x1fd307d8>
     ff8:	0013010b 	andseq	r0, r3, fp, lsl #2
     ffc:	000d0300 	andeq	r0, sp, r0, lsl #6
    1000:	0b3a0e03 	bleq	e84814 <startup-0x1f17b7ec>
    1004:	13490b3b 	movtne	r0, #39739	; 0x9b3b
    1008:	00000b38 	andeq	r0, r0, r8, lsr fp
    100c:	0b002404 	bleq	a024 <startup-0x1fff5fdc>
    1010:	030b3e0b 	movweq	r3, #48651	; 0xbe0b
    1014:	0500000e 	streq	r0, [r0, #-14]
    1018:	0b0b000f 	bleq	2c105c <startup-0x1fd3efa4>
    101c:	00001349 	andeq	r1, r0, r9, asr #6
    1020:	03001606 	movweq	r1, #1542	; 0x606
    1024:	3b0b3a0e 	blcc	2cf864 <startup-0x1fd3079c>
    1028:	0013490b 	andseq	r4, r3, fp, lsl #18
    102c:	01130700 	tsteq	r3, r0, lsl #14
    1030:	0b0b0e03 	bleq	2c4844 <startup-0x1fd3b7bc>
    1034:	0b3b0b3a 	bleq	ec3d24 <startup-0x1f13c2dc>
    1038:	00001301 	andeq	r1, r0, r1, lsl #6
    103c:	0b002408 	bleq	a064 <startup-0x1fff5f9c>
    1040:	030b3e0b 	movweq	r3, #48651	; 0xbe0b
    1044:	09000008 	stmdbeq	r0, {r3}
    1048:	19270115 	stmdbne	r7!, {r0, r2, r4, r8}
    104c:	00001301 	andeq	r1, r0, r1, lsl #6
    1050:	4900050a 	stmdbmi	r0, {r1, r3, r8, sl}
    1054:	0b000013 	bleq	10a8 <startup-0x1fffef58>
    1058:	13490101 	movtne	r0, #37121	; 0x9101
    105c:	00001301 	andeq	r1, r0, r1, lsl #6
    1060:	0000210c 	andeq	r2, r0, ip, lsl #2
    1064:	00340d00 	eorseq	r0, r4, r0, lsl #26
    1068:	0b3a0e03 	bleq	e8487c <startup-0x1f17b784>
    106c:	13490b3b 	movtne	r0, #39739	; 0x9b3b
    1070:	193c193f 	ldmdbne	ip!, {r0, r1, r2, r3, r4, r5, r8, fp, ip}
    1074:	210e0000 	mrscs	r0, (UNDEF: 14)
    1078:	2f134900 	svccs	0x00134900
    107c:	0f000005 	svceq	0x00000005
    1080:	0e030034 	mcreq	0, 0, r0, cr3, cr4, {1}
    1084:	0b3b0b3a 	bleq	ec3d74 <startup-0x1f13c28c>
    1088:	18021349 	stmdane	r2, {r0, r3, r6, r8, r9, ip}
    108c:	34100000 	ldrcc	r0, [r0], #-0
    1090:	3a0e0300 	bcc	381c98 <startup-0x1fc7e368>
    1094:	490b3b0b 	stmdbmi	fp, {r0, r1, r3, r8, r9, fp, ip, sp}
    1098:	02193f13 	andseq	r3, r9, #19, 30	; 0x4c
    109c:	11000018 	tstne	r0, r8, lsl r0
    10a0:	13490021 	movtne	r0, #36897	; 0x9021
    10a4:	00000b2f 	andeq	r0, r0, pc, lsr #22
    10a8:	3f012e12 	svccc	0x00012e12
    10ac:	3a0e0319 	bcc	381d18 <startup-0x1fc7e2e8>
    10b0:	270b3b0b 	strcs	r3, [fp, -fp, lsl #22]
    10b4:	12011119 	andne	r1, r1, #1073741830	; 0x40000006
    10b8:	96184006 	ldrls	r4, [r8], -r6
    10bc:	13011942 	movwne	r1, #6466	; 0x1942
    10c0:	05130000 	ldreq	r0, [r3, #-0]
    10c4:	3a0e0300 	bcc	381ccc <startup-0x1fc7e334>
    10c8:	490b3b0b 	stmdbmi	fp, {r0, r1, r3, r8, r9, fp, ip, sp}
    10cc:	00180213 	andseq	r0, r8, r3, lsl r2
    10d0:	012e1400 			; <UNDEFINED> instruction: 0x012e1400
    10d4:	0b3a0e03 	bleq	e848e8 <startup-0x1f17b718>
    10d8:	19270b3b 	stmdbne	r7!, {r0, r1, r3, r4, r5, r8, r9, fp}
    10dc:	06120111 			; <UNDEFINED> instruction: 0x06120111
    10e0:	42961840 	addsmi	r1, r6, #64, 16	; 0x400000
    10e4:	00000019 	andeq	r0, r0, r9, lsl r0
    10e8:	25011101 	strcs	r1, [r1, #-257]	; 0xfffffeff
    10ec:	030b130e 	movweq	r1, #45838	; 0xb30e
    10f0:	1201110e 	andne	r1, r1, #-2147483645	; 0x80000003
    10f4:	00171006 	andseq	r1, r7, r6
    10f8:	01130200 	tsteq	r3, r0, lsl #4
    10fc:	0b3a0b0b 	bleq	e83d30 <startup-0x1f17c2d0>
    1100:	13010b3b 	movwne	r0, #6971	; 0x1b3b
    1104:	0d030000 	stceq	0, cr0, [r3, #-0]
    1108:	3a0e0300 	bcc	381d10 <startup-0x1fc7e2f0>
    110c:	490b3b0b 	stmdbmi	fp, {r0, r1, r3, r8, r9, fp, ip, sp}
    1110:	000b3813 	andeq	r3, fp, r3, lsl r8
    1114:	00240400 	eoreq	r0, r4, r0, lsl #8
    1118:	0b3e0b0b 	bleq	f83d4c <startup-0x1f07c2b4>
    111c:	00000e03 	andeq	r0, r0, r3, lsl #28
    1120:	0b000f05 	bleq	4d3c <startup-0x1fffb2c4>
    1124:	0013490b 	andseq	r4, r3, fp, lsl #18
    1128:	00160600 	andseq	r0, r6, r0, lsl #12
    112c:	0b3a0e03 	bleq	e84940 <startup-0x1f17b6c0>
    1130:	13490b3b 	movtne	r0, #39739	; 0x9b3b
    1134:	13070000 	movwne	r0, #28672	; 0x7000
    1138:	0b0e0301 	bleq	381d44 <startup-0x1fc7e2bc>
    113c:	3b0b3a0b 	blcc	2cf970 <startup-0x1fd30690>
    1140:	0013010b 	andseq	r0, r3, fp, lsl #2
    1144:	00240800 	eoreq	r0, r4, r0, lsl #16
    1148:	0b3e0b0b 	bleq	f83d7c <startup-0x1f07c284>
    114c:	00000803 	andeq	r0, r0, r3, lsl #16
    1150:	27011509 	strcs	r1, [r1, -r9, lsl #10]
    1154:	00130119 	andseq	r0, r3, r9, lsl r1
    1158:	00050a00 	andeq	r0, r5, r0, lsl #20
    115c:	00001349 	andeq	r1, r0, r9, asr #6
    1160:	4901010b 	stmdbmi	r1, {r0, r1, r3, r8}
    1164:	00130113 	andseq	r0, r3, r3, lsl r1
    1168:	00210c00 	eoreq	r0, r1, r0, lsl #24
    116c:	340d0000 	strcc	r0, [sp], #-0
    1170:	3a0e0300 	bcc	381d78 <startup-0x1fc7e288>
    1174:	490b3b0b 	stmdbmi	fp, {r0, r1, r3, r8, r9, fp, ip, sp}
    1178:	3c193f13 	ldccc	15, cr3, [r9], {19}
    117c:	0e000019 	mcreq	0, 0, r0, cr0, cr9, {0}
    1180:	13490021 	movtne	r0, #36897	; 0x9021
    1184:	0000052f 	andeq	r0, r0, pc, lsr #10
    1188:	0300340f 	movweq	r3, #1039	; 0x40f
    118c:	3b0b3a0e 	blcc	2cf9cc <startup-0x1fd30634>
    1190:	0213490b 	andseq	r4, r3, #180224	; 0x2c000
    1194:	10000018 	andne	r0, r0, r8, lsl r0
    1198:	0e030034 	mcreq	0, 0, r0, cr3, cr4, {1}
    119c:	0b3b0b3a 	bleq	ec3e8c <startup-0x1f13c174>
    11a0:	193f1349 	ldmdbne	pc!, {r0, r3, r6, r8, r9, ip}	; <UNPREDICTABLE>
    11a4:	00001802 	andeq	r1, r0, r2, lsl #16
    11a8:	49002111 	stmdbmi	r0, {r0, r4, r8, sp}
    11ac:	000b2f13 	andeq	r2, fp, r3, lsl pc
    11b0:	012e1200 			; <UNDEFINED> instruction: 0x012e1200
    11b4:	0e03193f 			; <UNDEFINED> instruction: 0x0e03193f
    11b8:	0b3b0b3a 	bleq	ec3ea8 <startup-0x1f13c158>
    11bc:	01111927 	tsteq	r1, r7, lsr #18
    11c0:	18400612 	stmdane	r0, {r1, r4, r9, sl}^
    11c4:	01194296 			; <UNDEFINED> instruction: 0x01194296
    11c8:	13000013 	movwne	r0, #19
    11cc:	0e030005 	cdpeq	0, 0, cr0, cr3, cr5, {0}
    11d0:	0b3b0b3a 	bleq	ec3ec0 <startup-0x1f13c140>
    11d4:	18021349 	stmdane	r2, {r0, r3, r6, r8, r9, ip}
    11d8:	2e140000 	cdpcs	0, 1, cr0, cr4, cr0, {0}
    11dc:	3a0e0301 	bcc	381de8 <startup-0x1fc7e218>
    11e0:	270b3b0b 	strcs	r3, [fp, -fp, lsl #22]
    11e4:	12011119 	andne	r1, r1, #1073741830	; 0x40000006
    11e8:	96184006 	ldrls	r4, [r8], -r6
    11ec:	00001942 	andeq	r1, r0, r2, asr #18
    11f0:	01110100 	tsteq	r1, r0, lsl #2
    11f4:	0b130e25 	bleq	4c4a90 <startup-0x1fb3b570>
    11f8:	01110e03 	tsteq	r1, r3, lsl #28
    11fc:	17100612 			; <UNDEFINED> instruction: 0x17100612
    1200:	13020000 	movwne	r0, #8192	; 0x2000
    1204:	3a0b0b01 	bcc	2c3e10 <startup-0x1fd3c1f0>
    1208:	010b3b0b 	tsteq	fp, fp, lsl #22
    120c:	03000013 	movweq	r0, #19
    1210:	0e03000d 	cdpeq	0, 0, cr0, cr3, cr13, {0}
    1214:	0b3b0b3a 	bleq	ec3f04 <startup-0x1f13c0fc>
    1218:	0b381349 	bleq	e05f44 <startup-0x1f1fa0bc>
    121c:	24040000 	strcs	r0, [r4], #-0
    1220:	3e0b0b00 	vmlacc.f64	d0, d11, d0
    1224:	000e030b 	andeq	r0, lr, fp, lsl #6
    1228:	000f0500 	andeq	r0, pc, r0, lsl #10
    122c:	13490b0b 	movtne	r0, #39691	; 0x9b0b
    1230:	16060000 	strne	r0, [r6], -r0
    1234:	3a0e0300 	bcc	381e3c <startup-0x1fc7e1c4>
    1238:	490b3b0b 	stmdbmi	fp, {r0, r1, r3, r8, r9, fp, ip, sp}
    123c:	07000013 	smladeq	r0, r3, r0, r0
    1240:	0e030113 	mcreq	1, 0, r0, cr3, cr3, {0}
    1244:	0b3a0b0b 	bleq	e83e78 <startup-0x1f17c188>
    1248:	13010b3b 	movwne	r0, #6971	; 0x1b3b
    124c:	24080000 	strcs	r0, [r8], #-0
    1250:	3e0b0b00 	vmlacc.f64	d0, d11, d0
    1254:	0008030b 	andeq	r0, r8, fp, lsl #6
    1258:	01150900 	tsteq	r5, r0, lsl #18
    125c:	13011927 	movwne	r1, #6439	; 0x1927
    1260:	050a0000 	streq	r0, [sl, #-0]
    1264:	00134900 	andseq	r4, r3, r0, lsl #18
    1268:	01010b00 	tsteq	r1, r0, lsl #22
    126c:	13011349 	movwne	r1, #4937	; 0x1349
    1270:	210c0000 	mrscs	r0, (UNDEF: 12)
    1274:	0d000000 	stceq	0, cr0, [r0, #-0]
    1278:	0e030034 	mcreq	0, 0, r0, cr3, cr4, {1}
    127c:	0b3b0b3a 	bleq	ec3f6c <startup-0x1f13c094>
    1280:	193f1349 	ldmdbne	pc!, {r0, r3, r6, r8, r9, ip}	; <UNPREDICTABLE>
    1284:	0000193c 	andeq	r1, r0, ip, lsr r9
    1288:	4900210e 	stmdbmi	r0, {r1, r2, r3, r8, sp}
    128c:	000b2f13 	andeq	r2, fp, r3, lsl pc
    1290:	00340f00 	eorseq	r0, r4, r0, lsl #30
    1294:	0b3a0e03 	bleq	e84aa8 <startup-0x1f17b558>
    1298:	13490b3b 	movtne	r0, #39739	; 0x9b3b
    129c:	00001802 	andeq	r1, r0, r2, lsl #16
    12a0:	03003410 	movweq	r3, #1040	; 0x410
    12a4:	3b0b3a0e 	blcc	2cfae4 <startup-0x1fd3051c>
    12a8:	3f13490b 	svccc	0x0013490b
    12ac:	00180219 	andseq	r0, r8, r9, lsl r2
    12b0:	012e1100 			; <UNDEFINED> instruction: 0x012e1100
    12b4:	0e03193f 			; <UNDEFINED> instruction: 0x0e03193f
    12b8:	0b3b0b3a 	bleq	ec3fa8 <startup-0x1f13c058>
    12bc:	01111927 	tsteq	r1, r7, lsr #18
    12c0:	18400612 	stmdane	r0, {r1, r4, r9, sl}^
    12c4:	01194296 			; <UNDEFINED> instruction: 0x01194296
    12c8:	12000013 	andne	r0, r0, #19
    12cc:	0e030005 	cdpeq	0, 0, cr0, cr3, cr5, {0}
    12d0:	0b3b0b3a 	bleq	ec3fc0 <startup-0x1f13c040>
    12d4:	18021349 	stmdane	r2, {r0, r3, r6, r8, r9, ip}
    12d8:	2e130000 	cdpcs	0, 1, cr0, cr3, cr0, {0}
    12dc:	3a0e0301 	bcc	381ee8 <startup-0x1fc7e118>
    12e0:	270b3b0b 	strcs	r3, [fp, -fp, lsl #22]
    12e4:	12011119 	andne	r1, r1, #1073741830	; 0x40000006
    12e8:	96184006 	ldrls	r4, [r8], -r6
    12ec:	00001942 	andeq	r1, r0, r2, asr #18
    12f0:	01110100 	tsteq	r1, r0, lsl #2
    12f4:	0b130e25 	bleq	4c4b90 <startup-0x1fb3b470>
    12f8:	01110e03 	tsteq	r1, r3, lsl #28
    12fc:	17100612 			; <UNDEFINED> instruction: 0x17100612
    1300:	13020000 	movwne	r0, #8192	; 0x2000
    1304:	3a0b0b01 	bcc	2c3f10 <startup-0x1fd3c0f0>
    1308:	010b3b0b 	tsteq	fp, fp, lsl #22
    130c:	03000013 	movweq	r0, #19
    1310:	0e03000d 	cdpeq	0, 0, cr0, cr3, cr13, {0}
    1314:	0b3b0b3a 	bleq	ec4004 <startup-0x1f13bffc>
    1318:	0b381349 	bleq	e06044 <startup-0x1f1f9fbc>
    131c:	24040000 	strcs	r0, [r4], #-0
    1320:	3e0b0b00 	vmlacc.f64	d0, d11, d0
    1324:	000e030b 	andeq	r0, lr, fp, lsl #6
    1328:	000f0500 	andeq	r0, pc, r0, lsl #10
    132c:	13490b0b 	movtne	r0, #39691	; 0x9b0b
    1330:	16060000 	strne	r0, [r6], -r0
    1334:	3a0e0300 	bcc	381f3c <startup-0x1fc7e0c4>
    1338:	490b3b0b 	stmdbmi	fp, {r0, r1, r3, r8, r9, fp, ip, sp}
    133c:	07000013 	smladeq	r0, r3, r0, r0
    1340:	0e030113 	mcreq	1, 0, r0, cr3, cr3, {0}
    1344:	0b3a0b0b 	bleq	e83f78 <startup-0x1f17c088>
    1348:	13010b3b 	movwne	r0, #6971	; 0x1b3b
    134c:	24080000 	strcs	r0, [r8], #-0
    1350:	3e0b0b00 	vmlacc.f64	d0, d11, d0
    1354:	0008030b 	andeq	r0, r8, fp, lsl #6
    1358:	01150900 	tsteq	r5, r0, lsl #18
    135c:	13011927 	movwne	r1, #6439	; 0x1927
    1360:	050a0000 	streq	r0, [sl, #-0]
    1364:	00134900 	andseq	r4, r3, r0, lsl #18
    1368:	01010b00 	tsteq	r1, r0, lsl #22
    136c:	13011349 	movwne	r1, #4937	; 0x1349
    1370:	210c0000 	mrscs	r0, (UNDEF: 12)
    1374:	0d000000 	stceq	0, cr0, [r0, #-0]
    1378:	0e030034 	mcreq	0, 0, r0, cr3, cr4, {1}
    137c:	0b3b0b3a 	bleq	ec406c <startup-0x1f13bf94>
    1380:	193f1349 	ldmdbne	pc!, {r0, r3, r6, r8, r9, ip}	; <UNPREDICTABLE>
    1384:	0000193c 	andeq	r1, r0, ip, lsr r9
    1388:	4900210e 	stmdbmi	r0, {r1, r2, r3, r8, sp}
    138c:	00052f13 	andeq	r2, r5, r3, lsl pc
    1390:	00340f00 	eorseq	r0, r4, r0, lsl #30
    1394:	0b3a0e03 	bleq	e84ba8 <startup-0x1f17b458>
    1398:	13490b3b 	movtne	r0, #39739	; 0x9b3b
    139c:	00001802 	andeq	r1, r0, r2, lsl #16
    13a0:	03003410 	movweq	r3, #1040	; 0x410
    13a4:	3b0b3a0e 	blcc	2cfbe4 <startup-0x1fd3041c>
    13a8:	3f13490b 	svccc	0x0013490b
    13ac:	00180219 	andseq	r0, r8, r9, lsl r2
    13b0:	00211100 	eoreq	r1, r1, r0, lsl #2
    13b4:	0b2f1349 	bleq	bc60e0 <startup-0x1f439f20>
    13b8:	2e120000 	cdpcs	0, 1, cr0, cr2, cr0, {0}
    13bc:	03193f01 	tsteq	r9, #1, 30
    13c0:	3b0b3a0e 	blcc	2cfc00 <startup-0x1fd30400>
    13c4:	1119270b 	tstne	r9, fp, lsl #14
    13c8:	40061201 	andmi	r1, r6, r1, lsl #4
    13cc:	19429618 	stmdbne	r2, {r3, r4, r9, sl, ip, pc}^
    13d0:	00001301 	andeq	r1, r0, r1, lsl #6
    13d4:	03000513 	movweq	r0, #1299	; 0x513
    13d8:	3b0b3a0e 	blcc	2cfc18 <startup-0x1fd303e8>
    13dc:	0213490b 	andseq	r4, r3, #180224	; 0x2c000
    13e0:	14000018 	strne	r0, [r0], #-24	; 0xffffffe8
    13e4:	0e03012e 	adfeqsp	f0, f3, #0.5
    13e8:	0b3b0b3a 	bleq	ec40d8 <startup-0x1f13bf28>
    13ec:	01111927 	tsteq	r1, r7, lsr #18
    13f0:	18400612 	stmdane	r0, {r1, r4, r9, sl}^
    13f4:	00194296 	mulseq	r9, r6, r2
    13f8:	11010000 	mrsne	r0, (UNDEF: 1)
    13fc:	130e2501 	movwne	r2, #58625	; 0xe501
    1400:	110e030b 	tstne	lr, fp, lsl #6
    1404:	10061201 	andne	r1, r6, r1, lsl #4
    1408:	02000017 	andeq	r0, r0, #23
    140c:	0b0b0113 	bleq	2c1860 <startup-0x1fd3e7a0>
    1410:	0b3b0b3a 	bleq	ec4100 <startup-0x1f13bf00>
    1414:	00001301 	andeq	r1, r0, r1, lsl #6
    1418:	03000d03 	movweq	r0, #3331	; 0xd03
    141c:	3b0b3a0e 	blcc	2cfc5c <startup-0x1fd303a4>
    1420:	3813490b 	ldmdacc	r3, {r0, r1, r3, r8, fp, lr}
    1424:	0400000b 	streq	r0, [r0], #-11
    1428:	0b0b0024 	bleq	2c14c0 <startup-0x1fd3eb40>
    142c:	0e030b3e 	vmoveq.16	d3[0], r0
    1430:	0f050000 	svceq	0x00050000
    1434:	490b0b00 	stmdbmi	fp, {r8, r9, fp}
    1438:	06000013 			; <UNDEFINED> instruction: 0x06000013
    143c:	0e030016 	mcreq	0, 0, r0, cr3, cr6, {0}
    1440:	0b3b0b3a 	bleq	ec4130 <startup-0x1f13bed0>
    1444:	00001349 	andeq	r1, r0, r9, asr #6
    1448:	03011307 	movweq	r1, #4871	; 0x1307
    144c:	3a0b0b0e 	bcc	2c408c <startup-0x1fd3bf74>
    1450:	010b3b0b 	tsteq	fp, fp, lsl #22
    1454:	08000013 	stmdaeq	r0, {r0, r1, r4}
    1458:	0b0b0024 	bleq	2c14f0 <startup-0x1fd3eb10>
    145c:	08030b3e 	stmdaeq	r3, {r1, r2, r3, r4, r5, r8, r9, fp}
    1460:	15090000 	strne	r0, [r9, #-0]
    1464:	01192701 	tsteq	r9, r1, lsl #14
    1468:	0a000013 	beq	14bc <startup-0x1fffeb44>
    146c:	13490005 	movtne	r0, #36869	; 0x9005
    1470:	010b0000 	mrseq	r0, (UNDEF: 11)
    1474:	01134901 	tsteq	r3, r1, lsl #18
    1478:	0c000013 	stceq	0, cr0, [r0], {19}
    147c:	00000021 	andeq	r0, r0, r1, lsr #32
    1480:	0300340d 	movweq	r3, #1037	; 0x40d
    1484:	3b0b3a0e 	blcc	2cfcc4 <startup-0x1fd3033c>
    1488:	3f13490b 	svccc	0x0013490b
    148c:	00193c19 	andseq	r3, r9, r9, lsl ip
    1490:	00210e00 	eoreq	r0, r1, r0, lsl #28
    1494:	052f1349 	streq	r1, [pc, #-841]!	; 1153 <startup-0x1fffeead>
    1498:	340f0000 	strcc	r0, [pc], #-0	; 14a0 <startup-0x1fffeb60>
    149c:	3a0e0300 	bcc	3820a4 <startup-0x1fc7df5c>
    14a0:	490b3b0b 	stmdbmi	fp, {r0, r1, r3, r8, r9, fp, ip, sp}
    14a4:	00180213 	andseq	r0, r8, r3, lsl r2
    14a8:	00341000 	eorseq	r1, r4, r0
    14ac:	0b3a0e03 	bleq	e84cc0 <startup-0x1f17b340>
    14b0:	13490b3b 	movtne	r0, #39739	; 0x9b3b
    14b4:	1802193f 	stmdane	r2, {r0, r1, r2, r3, r4, r5, r8, fp, ip}
    14b8:	21110000 	tstcs	r1, r0
    14bc:	2f134900 	svccs	0x00134900
    14c0:	1200000b 	andne	r0, r0, #11
    14c4:	193f012e 	ldmdbne	pc!, {r1, r2, r3, r5, r8}	; <UNPREDICTABLE>
    14c8:	0b3a0e03 	bleq	e84cdc <startup-0x1f17b324>
    14cc:	1927053b 	stmdbne	r7!, {r0, r1, r3, r4, r5, r8, sl}
    14d0:	06120111 			; <UNDEFINED> instruction: 0x06120111
    14d4:	42961840 	addsmi	r1, r6, #64, 16	; 0x400000
    14d8:	00130119 	andseq	r0, r3, r9, lsl r1
    14dc:	00051300 	andeq	r1, r5, r0, lsl #6
    14e0:	0b3a0e03 	bleq	e84cf4 <startup-0x1f17b30c>
    14e4:	1349053b 	movtne	r0, #38203	; 0x953b
    14e8:	00001802 	andeq	r1, r0, r2, lsl #16
    14ec:	03003414 	movweq	r3, #1044	; 0x414
    14f0:	3b0b3a0e 	blcc	2cfd30 <startup-0x1fd302d0>
    14f4:	02134905 	andseq	r4, r3, #81920	; 0x14000
    14f8:	15000018 	strne	r0, [r0, #-24]	; 0xffffffe8
    14fc:	0e03012e 	adfeqsp	f0, f3, #0.5
    1500:	0b3b0b3a 	bleq	ec41f0 <startup-0x1f13be10>
    1504:	01111927 	tsteq	r1, r7, lsr #18
    1508:	18400612 	stmdane	r0, {r1, r4, r9, sl}^
    150c:	00194296 	mulseq	r9, r6, r2
	...

Disassembly of section .debug_aranges:

00000000 <.debug_aranges>:
   0:	00000024 	andeq	r0, r0, r4, lsr #32
   4:	00000002 	andeq	r0, r0, r2
   8:	00040000 	andeq	r0, r4, r0
   c:	00000000 	andeq	r0, r0, r0
  10:	20000010 	andcs	r0, r0, r0, lsl r0
  14:	00001abe 			; <UNDEFINED> instruction: 0x00001abe
  18:	20000000 	andcs	r0, r0, r0
  1c:	0000000c 	andeq	r0, r0, ip
	...
  28:	0000001c 	andeq	r0, r0, ip, lsl r0
  2c:	0afd0002 	beq	fff4003c <firstTime.4104+0xdff2bbd0>
  30:	00040000 	andeq	r0, r4, r0
  34:	00000000 	andeq	r0, r0, r0
  38:	20001ad0 	ldrdcs	r1, [r0], -r0
  3c:	00000056 	andeq	r0, r0, r6, asr r0
	...
  48:	0000001c 	andeq	r0, r0, ip, lsl r0
  4c:	0ce10002 	stcleq	0, cr0, [r1], #8
  50:	00040000 	andeq	r0, r4, r0
  54:	00000000 	andeq	r0, r0, r0
  58:	20001b28 	andcs	r1, r0, r8, lsr #22
  5c:	000002a8 	andeq	r0, r0, r8, lsr #5
	...
  68:	0000001c 	andeq	r0, r0, ip, lsl r0
  6c:	12100002 	andsne	r0, r0, #2
  70:	00040000 	andeq	r0, r4, r0
  74:	00000000 	andeq	r0, r0, r0
  78:	20001dd0 	ldrdcs	r1, [r0], -r0
  7c:	00000240 	andeq	r0, r0, r0, asr #4
	...
  88:	0000001c 	andeq	r0, r0, ip, lsl r0
  8c:	14200002 	strtne	r0, [r0], #-2
  90:	00040000 	andeq	r0, r4, r0
  94:	00000000 	andeq	r0, r0, r0
  98:	20002010 	andcs	r2, r0, r0, lsl r0
  9c:	00000364 	andeq	r0, r0, r4, ror #6
	...
  a8:	0000001c 	andeq	r0, r0, ip, lsl r0
  ac:	1a650002 	bne	19400bc <startup-0x1e6bff44>
  b0:	00040000 	andeq	r0, r4, r0
  b4:	00000000 	andeq	r0, r0, r0
  b8:	20002374 	andcs	r2, r0, r4, ror r3
  bc:	00000238 	andeq	r0, r0, r8, lsr r2
	...
  c8:	0000001c 	andeq	r0, r0, ip, lsl r0
  cc:	1f010002 	svcne	0x00010002
  d0:	00040000 	andeq	r0, r4, r0
  d4:	00000000 	andeq	r0, r0, r0
  d8:	200025ac 	andcs	r2, r0, ip, lsr #11
  dc:	00000370 	andeq	r0, r0, r0, ror r3
	...
  e8:	0000001c 	andeq	r0, r0, ip, lsl r0
  ec:	244b0002 	strbcs	r0, [fp], #-2
  f0:	00040000 	andeq	r0, r4, r0
  f4:	00000000 	andeq	r0, r0, r0
  f8:	2000291c 	andcs	r2, r0, ip, lsl r9
  fc:	000002ac 	andeq	r0, r0, ip, lsr #5
	...
 108:	0000001c 	andeq	r0, r0, ip, lsl r0
 10c:	29aa0002 	stmibcs	sl!, {r1}
 110:	00040000 	andeq	r0, r4, r0
 114:	00000000 	andeq	r0, r0, r0
 118:	20002bc8 	andcs	r2, r0, r8, asr #23
 11c:	0000052c 	andeq	r0, r0, ip, lsr #10
	...
 128:	0000001c 	andeq	r0, r0, ip, lsl r0
 12c:	314f0002 	cmpcc	pc, r2
 130:	00040000 	andeq	r0, r4, r0
 134:	00000000 	andeq	r0, r0, r0
 138:	200030f4 	strdcs	r3, [r0], -r4
 13c:	00000e90 	muleq	r0, r0, lr
	...
 148:	0000001c 	andeq	r0, r0, ip, lsl r0
 14c:	3a380002 	bcc	e0015c <startup-0x1f1ffea4>
 150:	00040000 	andeq	r0, r4, r0
 154:	00000000 	andeq	r0, r0, r0
 158:	20003f84 	andcs	r3, r0, r4, lsl #31
 15c:	00000028 	andeq	r0, r0, r8, lsr #32
	...
 168:	0000001c 	andeq	r0, r0, ip, lsl r0
 16c:	3b3c0002 	blcc	f0017c <startup-0x1f0ffe84>
 170:	00040000 	andeq	r0, r4, r0
 174:	00000000 	andeq	r0, r0, r0
 178:	20003fac 	andcs	r3, r0, ip, lsr #31
 17c:	00000028 	andeq	r0, r0, r8, lsr #32
	...
 188:	0000001c 	andeq	r0, r0, ip, lsl r0
 18c:	3c030002 	stccc	0, cr0, [r3], {2}
 190:	00040000 	andeq	r0, r4, r0
 194:	00000000 	andeq	r0, r0, r0
 198:	20003fd4 	ldrdcs	r3, [r0], -r4
 19c:	0000006c 	andeq	r0, r0, ip, rrx
	...
 1a8:	0000001c 	andeq	r0, r0, ip, lsl r0
 1ac:	3d3c0002 	ldccc	0, cr0, [ip, #-8]!
 1b0:	00040000 	andeq	r0, r4, r0
 1b4:	00000000 	andeq	r0, r0, r0
 1b8:	20004040 	andcs	r4, r0, r0, asr #32
 1bc:	00000520 	andeq	r0, r0, r0, lsr #10
	...
 1c8:	0000001c 	andeq	r0, r0, ip, lsl r0
 1cc:	422d0002 	eormi	r0, sp, #2
 1d0:	00040000 	andeq	r0, r4, r0
 1d4:	00000000 	andeq	r0, r0, r0
 1d8:	20004560 	andcs	r4, r0, r0, ror #10
 1dc:	00000094 	muleq	r0, r4, r0
	...
 1e8:	0000001c 	andeq	r0, r0, ip, lsl r0
 1ec:	43710002 	cmnmi	r1, #2
 1f0:	00040000 	andeq	r0, r4, r0
 1f4:	00000000 	andeq	r0, r0, r0
 1f8:	200045f4 	strdcs	r4, [r0], -r4	; <UNPREDICTABLE>
 1fc:	000000e8 	andeq	r0, r0, r8, ror #1
	...
 208:	0000001c 	andeq	r0, r0, ip, lsl r0
 20c:	46550002 	ldrbmi	r0, [r5], -r2
 210:	00040000 	andeq	r0, r4, r0
 214:	00000000 	andeq	r0, r0, r0
 218:	200046dc 	ldrdcs	r4, [r0], -ip
 21c:	000000e8 	andeq	r0, r0, r8, ror #1
	...
 228:	0000001c 	andeq	r0, r0, ip, lsl r0
 22c:	49390002 	ldmdbmi	r9!, {r1}
 230:	00040000 	andeq	r0, r4, r0
 234:	00000000 	andeq	r0, r0, r0
 238:	200047c4 	andcs	r4, r0, r4, asr #15
 23c:	000000e8 	andeq	r0, r0, r8, ror #1
	...
 248:	0000001c 	andeq	r0, r0, ip, lsl r0
 24c:	4c1c0002 	ldcmi	0, cr0, [ip], {2}
 250:	00040000 	andeq	r0, r4, r0
 254:	00000000 	andeq	r0, r0, r0
 258:	200048ac 	andcs	r4, r0, ip, lsr #17
 25c:	000000e8 	andeq	r0, r0, r8, ror #1
	...
 268:	0000001c 	andeq	r0, r0, ip, lsl r0
 26c:	4f000002 	svcmi	0x00000002
 270:	00040000 	andeq	r0, r4, r0
 274:	00000000 	andeq	r0, r0, r0
 278:	20004994 	mulcs	r0, r4, r9
 27c:	000003d8 	ldrdeq	r0, [r0], -r8
	...

Disassembly of section .debug_ranges:

00000000 <.debug_ranges>:
   0:	20000010 	andcs	r0, r0, r0, lsl r0
   4:	20001ace 	andcs	r1, r0, lr, asr #21
   8:	20000000 	andcs	r0, r0, r0
   c:	2000000c 	andcs	r0, r0, ip
	...

Disassembly of section .debug_line:

00000000 <.debug_line>:
       0:	000003f8 	strdeq	r0, [r0], -r8
       4:	017d0002 	cmneq	sp, r2
       8:	01020000 	mrseq	r0, (UNDEF: 2)
       c:	000d0efb 	strdeq	r0, [sp], -fp
      10:	01010101 	tsteq	r1, r1, lsl #2
      14:	01000000 	mrseq	r0, (UNDEF: 0)
      18:	43010000 	movwmi	r0, #4096	; 0x1000
      1c:	6f6d2f3a 	svcvs	0x006d2f3a
      20:	2f632f70 	svccs	0x00632f70
      24:	6c706f4d 	ldclvs	15, cr6, [r0], #-308	; 0xfffffecc
      28:	726f6261 	rsbvc	r6, pc, #268435462	; 0x10000006
      2c:	6f697461 	svcvs	0x00697461
      30:	2f72656e 	svccs	0x0072656e
      34:	73504944 	cmpvc	r0, #68, 18	; 0x110000
      38:	7469572d 	strbtvc	r5, [r9], #-1837	; 0xfffff8d3
      3c:	432f6863 			; <UNDEFINED> instruction: 0x432f6863
      40:	74730000 	ldrbtvc	r0, [r3], #-0
      44:	75747261 	ldrbvc	r7, [r4, #-609]!	; 0xfffffd9f
      48:	00632e70 	rsbeq	r2, r3, r0, ror lr
      4c:	73000001 	movwvc	r0, #1
      50:	74697270 	strbtvc	r7, [r9], #-624	; 0xfffffd90
      54:	00682e65 	rsbeq	r2, r8, r5, ror #28
      58:	69000001 	stmdbvs	r0, {r0}
      5c:	6567616d 	strbvs	r6, [r7, #-365]!	; 0xfffffe93
      60:	0100682e 	tsteq	r0, lr, lsr #16
      64:	61670000 	cmnvs	r7, r0
      68:	626f656d 	rsbvs	r6, pc, #457179136	; 0x1b400000
      6c:	7463656a 	strbtvc	r6, [r3], #-1386	; 0xfffffa96
      70:	0100682e 	tsteq	r0, lr, lsr #16
      74:	72670000 	rsbvc	r0, r7, #0
      78:	69687061 	stmdbvs	r8!, {r0, r5, r6, ip, sp, lr}^
      7c:	682e7363 	stmdavs	lr!, {r0, r1, r5, r6, r8, r9, ip, sp, lr}
      80:	00000100 	andeq	r0, r0, r0, lsl #2
      84:	736e6f6d 	cmnvc	lr, #436	; 0x1b4
      88:	5f726574 	svcpl	0x00726574
      8c:	63616c62 	cmnvs	r1, #25088	; 0x6200
      90:	62782e6b 	rsbsvs	r2, r8, #1712	; 0x6b0
      94:	0001006d 	andeq	r0, r1, sp, rrx
      98:	6e6f6d00 	cdpvs	13, 6, cr6, cr15, cr0, {0}
      9c:	72657473 	rsbvc	r7, r5, #1929379840	; 0x73000000
      a0:	67696c5f 			; <UNDEFINED> instruction: 0x67696c5f
      a4:	782e7468 	stmdavc	lr!, {r3, r5, r6, sl, ip, sp, lr}
      a8:	01006d62 	tsteq	r0, r2, ror #26
      ac:	6f6d0000 	svcvs	0x006d0000
      b0:	6574736e 	ldrbvs	r7, [r4, #-878]!	; 0xfffffc92
      b4:	72675f72 	rsbvc	r5, r7, #456	; 0x1c8
      b8:	782e7961 	stmdavc	lr!, {r0, r5, r6, r8, fp, ip, sp, lr}
      bc:	01006d62 	tsteq	r0, r2, ror #26
      c0:	72700000 	rsbsvc	r0, r0, #0
      c4:	5f737365 	svcpl	0x00737365
      c8:	63616c62 	cmnvs	r1, #25088	; 0x6200
      cc:	62782e6b 	rsbsvs	r2, r8, #1712	; 0x6b0
      d0:	0001006d 	andeq	r0, r1, sp, rrx
      d4:	65727000 	ldrbvs	r7, [r2, #-0]!
      d8:	6c5f7373 	mrrcvs	3, 7, r7, pc, cr3	; <UNPREDICTABLE>
      dc:	74686769 	strbtvc	r6, [r8], #-1897	; 0xfffff897
      e0:	6d62782e 	stclvs	8, cr7, [r2, #-184]!	; 0xffffff48
      e4:	00000100 	andeq	r0, r0, r0, lsl #2
      e8:	73657270 	cmnvc	r5, #112, 4
      ec:	72675f73 	rsbvc	r5, r7, #460	; 0x1cc
      f0:	782e7961 	stmdavc	lr!, {r0, r5, r6, r8, fp, ip, sp, lr}
      f4:	01006d62 	tsteq	r0, r2, ror #26
      f8:	61630000 	cmnvs	r3, r0
      fc:	656c7473 	strbvs	r7, [ip, #-1139]!	; 0xfffffb8d
     100:	616c625f 	cmnvs	ip, pc, asr r2
     104:	782e6b63 	stmdavc	lr!, {r0, r1, r5, r6, r8, r9, fp, sp, lr}
     108:	01006d62 	tsteq	r0, r2, ror #26
     10c:	61630000 	cmnvs	r3, r0
     110:	656c7473 	strbvs	r7, [ip, #-1139]!	; 0xfffffb8d
     114:	6172675f 	cmnvs	r2, pc, asr r7
     118:	62782e79 	rsbsvs	r2, r8, #1936	; 0x790
     11c:	0001006d 	andeq	r0, r1, sp, rrx
     120:	73616300 	cmnvc	r1, #0, 6
     124:	5f656c74 	svcpl	0x00656c74
     128:	6867696c 	stmdavs	r7!, {r2, r3, r5, r6, r8, fp, sp, lr}^
     12c:	62782e74 	rsbsvs	r2, r8, #116, 28	; 0x740
     130:	0001006d 	andeq	r0, r1, sp, rrx
     134:	74697400 	strbtvc	r7, [r9], #-1024	; 0xfffffc00
     138:	6c5f656c 	cfldr64vs	mvdx6, [pc], {108}	; 0x6c
     13c:	74686769 	strbtvc	r6, [r8], #-1897	; 0xfffff897
     140:	6d62782e 	stclvs	8, cr7, [r2, #-184]!	; 0xffffff48
     144:	00000100 	andeq	r0, r0, r0, lsl #2
     148:	6c746974 			; <UNDEFINED> instruction: 0x6c746974
     14c:	72675f65 	rsbvc	r5, r7, #404	; 0x194
     150:	782e7961 	stmdavc	lr!, {r0, r5, r6, r8, fp, ip, sp, lr}
     154:	01006d62 	tsteq	r0, r2, ror #26
     158:	69740000 	ldmdbvs	r4!, {}^	; <UNPREDICTABLE>
     15c:	5f656c74 	svcpl	0x00656c74
     160:	63616c62 	cmnvs	r1, #25088	; 0x6200
     164:	62782e6b 	rsbsvs	r2, r8, #1712	; 0x6b0
     168:	0001006d 	andeq	r0, r1, sp, rrx
     16c:	6f6c7300 	svcvs	0x006c7300
     170:	65745f77 	ldrbvs	r5, [r4, #-3959]!	; 0xfffff089
     174:	682e7478 	stmdavs	lr!, {r3, r4, r5, r6, sl, ip, sp, lr}
     178:	00000100 	andeq	r0, r0, r0, lsl #2
     17c:	782e6762 	stmdavc	lr!, {r1, r5, r6, r8, r9, sl, sp, lr}
     180:	01006d62 	tsteq	r0, r2, ror #26
     184:	00000000 	andeq	r0, r0, r0
     188:	00000205 	andeq	r0, r0, r5, lsl #4
     18c:	32032000 	andcc	r2, r3, #0
     190:	025e1301 	subseq	r1, lr, #67108864	; 0x4000000
     194:	01010003 	tsteq	r1, r3
     198:	10020500 	andne	r0, r2, r0, lsl #10
     19c:	03200000 	nopeq	{0}	; <UNPREDICTABLE>
     1a0:	3d2f0127 	stfccs	f0, [pc, #-156]!	; 10c <startup-0x1ffffef4>
     1a4:	03303030 	teqeq	r0, #48	; 0x30
     1a8:	2f3d742c 	svccs	0x003d742c
     1ac:	672f3e67 	strvs	r3, [pc, -r7, ror #28]!
     1b0:	3e672f3e 	mcrcc	15, 3, r2, cr7, cr14, {1}
     1b4:	2f3e672f 	svccs	0x003e672f
     1b8:	672f3e67 	strvs	r3, [pc, -r7, ror #28]!
     1bc:	3e672f3e 	mcrcc	15, 3, r2, cr7, cr14, {1}
     1c0:	2f3d672f 	svccs	0x003d672f
     1c4:	672f3d67 	strvs	r3, [pc, -r7, ror #26]!
     1c8:	3d672f3e 	stclcc	15, cr2, [r7, #-248]!	; 0xffffff08
     1cc:	2f3d672f 	svccs	0x003d672f
     1d0:	52023f67 	andpl	r3, r2, #412	; 0x19c
     1d4:	322f4c17 	eorcc	r4, pc, #5888	; 0x1700
     1d8:	4bad5975 	blmi	feb567b4 <firstTime.4104+0xdeb42348>
     1dc:	754e4b4b 	strbvc	r4, [lr, #-2891]	; 0xfffff4b5
     1e0:	6759bb75 			; <UNDEFINED> instruction: 0x6759bb75
     1e4:	ad59755c 	cfldr64ge	mvdx7, [r9, #-368]	; 0xfffffe90
     1e8:	c94e4b4b 	stmdbgt	lr, {r0, r1, r3, r6, r8, r9, fp, lr}^
     1ec:	8383e59f 	orrhi	lr, r3, #666894336	; 0x27c00000
     1f0:	85836785 	strhi	r6, [r3, #1925]	; 0x785
     1f4:	83838367 	orrhi	r8, r3, #-1677721599	; 0x9c000001
     1f8:	85836785 	strhi	r6, [r3, #1925]	; 0x785
     1fc:	6a858367 	bvs	fe160fa0 <firstTime.4104+0xde14cb34>
     200:	85838367 	strhi	r8, [r3, #871]	; 0x367
     204:	85838367 	strhi	r8, [r3, #871]	; 0x367
     208:	85678567 	strbhi	r8, [r7, #-1383]!	; 0xfffffa99
     20c:	85838367 	strhi	r8, [r3, #871]	; 0x367
     210:	69686868 	stmdbvs	r8!, {r3, r5, r6, fp, sp, lr}^
     214:	84838367 	strhi	r8, [r3], #871	; 0x367
     218:	83678467 	cmnhi	r7, #1728053248	; 0x67000000
     21c:	15018202 	strne	r8, [r1, #-514]	; 0xfffffdfe
     220:	84838383 	strhi	r8, [r3], #899	; 0x383
     224:	85838383 	strhi	r8, [r3, #899]	; 0x383
     228:	84838383 	strhi	r8, [r3], #899	; 0x383
     22c:	03838383 	orreq	r8, r3, #201326594	; 0xc000002
     230:	83838211 	orrhi	r8, r3, #268435457	; 0x10000001
     234:	75757575 	ldrbvc	r7, [r5, #-1397]!	; 0xfffffa8b
     238:	75757575 	ldrbvc	r7, [r5, #-1397]!	; 0xfffffa8b
     23c:	75757575 	ldrbvc	r7, [r5, #-1397]!	; 0xfffffa8b
     240:	302f2f68 	eorcc	r2, pc, r8, ror #30
     244:	594b594c 	stmdbpl	fp, {r2, r3, r6, r8, fp, ip, lr}^
     248:	594b594b 	stmdbpl	fp, {r0, r1, r3, r6, r8, fp, ip, lr}^
     24c:	9541684b 	strbls	r6, [r1, #-2123]	; 0xfffff7b5
     250:	3d4f3a59 	vstrcc	s7, [pc, #-356]	; f4 <startup-0x1fffff0c>
     254:	675a333d 	smmlarvs	sl, sp, r3, r3
     258:	67676793 			; <UNDEFINED> instruction: 0x67676793
     25c:	67676767 	strbvs	r6, [r7, -r7, ror #14]!
     260:	04020042 	streq	r0, [r2], #-66	; 0xffffffbe
     264:	06820601 	streq	r0, [r2], r1, lsl #12
     268:	3083c983 	addcc	ip, r3, r3, lsl #19
     26c:	6c029175 	stfvsd	f1, [r2], {117}	; 0x75
     270:	c9c9bb13 	stmibgt	r9, {r0, r1, r4, r8, r9, fp, ip, sp, pc}^
     274:	f3c9d7c9 			; <UNDEFINED> instruction: 0xf3c9d7c9
     278:	c92108c9 	stmdbgt	r1!, {r0, r3, r6, r7, fp}
     27c:	08c91308 	stmiaeq	r9, {r3, r8, r9, ip}^
     280:	1308c92f 	movwne	ip, #35119	; 0x892f
     284:	c92108c9 	stmdbgt	r1!, {r0, r3, r6, r7, fp}
     288:	08c94b08 	stmiaeq	r9, {r3, r8, r9, fp, lr}^
     28c:	3d4bca3d 	vstrcc	s25, [fp, #-244]	; 0xffffff0c
     290:	596a3d4b 	stmdbpl	sl!, {r0, r1, r3, r6, r8, sl, fp, ip, sp}^
     294:	6a3d4b3d 	bvs	f52f90 <startup-0x1f0ad070>
     298:	bbbbbbbb 	bllt	feeef18c <firstTime.4104+0xdeedad20>
     29c:	e783e5bb 			; <UNDEFINED> instruction: 0xe783e5bb
     2a0:	59163302 	ldmdbpl	r6, {r1, r8, r9, ip, sp}
     2a4:	67766759 			; <UNDEFINED> instruction: 0x67766759
     2a8:	68676769 	stmdavs	r7!, {r0, r3, r5, r6, r8, r9, sl, sp, lr}^
     2ac:	03040200 	movweq	r0, #16896	; 0x4200
     2b0:	0402004b 	streq	r0, [r2], #-75	; 0xffffffb5
     2b4:	0200c903 	andeq	ip, r0, #49152	; 0xc000
     2b8:	8e080304 	cdphi	3, 0, cr0, cr8, cr4, {0}
     2bc:	01040200 	mrseq	r0, R12_usr
     2c0:	4e065806 	cdpmi	8, 0, cr5, cr6, cr6, {0}
     2c4:	f3675967 	vmls.i32	<illegal reg q10.5>, <illegal reg q3.5>, <illegal reg q11.5>
     2c8:	5a9191f3 	bpl	fe464a9c <firstTime.4104+0xde450630>
     2cc:	3fbd9167 	svccc	0x00bd9167
     2d0:	01040200 	mrseq	r0, R12_usr
     2d4:	02008206 	andeq	r8, r0, #1610612736	; 0x60000000
     2d8:	00900204 	addseq	r0, r0, r4, lsl #4
     2dc:	90030402 	andls	r0, r3, r2, lsl #8
     2e0:	84595906 	ldrbhi	r5, [r9], #-2310	; 0xfffff6fa
     2e4:	c9677568 	stmdbgt	r7!, {r3, r5, r6, r8, sl, ip, sp, lr}^
     2e8:	9168d776 	smcls	36214	; 0x8d76
     2ec:	598383f4 	stmibpl	r3, {r2, r4, r5, r6, r7, r8, r9, pc}
     2f0:	00bdcb08 	adcseq	ip, sp, r8, lsl #22
     2f4:	06010402 	streq	r0, [r1], -r2, lsl #8
     2f8:	040200f2 	streq	r0, [r2], #-242	; 0xffffff0e
     2fc:	06200802 	strteq	r0, [r0], -r2, lsl #16
     300:	59691308 	stmdbpl	r9!, {r3, r8, r9, ip}^
     304:	01040200 	mrseq	r0, R12_usr
     308:	0200f206 	andeq	pc, r0, #1610612736	; 0x60000000
     30c:	20080204 	andcs	r0, r8, r4, lsl #4
     310:	3d130806 	ldccc	8, cr0, [r3, #-24]	; 0xffffffe8
     314:	51674b4e 	cmnpl	r7, lr, asr #22
     318:	685959bb 	ldmdavs	r9, {r0, r1, r3, r4, r5, r7, r8, fp, ip, lr}^
     31c:	911408d7 			; <UNDEFINED> instruction: 0x911408d7
     320:	04020095 	streq	r0, [r2], #-149	; 0xffffff6b
     324:	00660601 	rsbeq	r0, r6, r1, lsl #12
     328:	f2020402 	vshl.s8	d0, d2, d2
     32c:	03040200 	movweq	r0, #16896	; 0x4200
     330:	08062008 	stmdaeq	r6, {r3, sp}
     334:	59674b13 	stmdbpl	r7!, {r0, r1, r4, r8, r9, fp, lr}^
     338:	bf210867 	svclt	0x00210867
     33c:	08132702 	ldmdaeq	r3, {r1, r8, r9, sl, sp}
     340:	0402009f 	streq	r0, [r2], #-159	; 0xffffff61
     344:	00750801 	rsbseq	r0, r5, r1, lsl #16
     348:	08010402 	stmdaeq	r1, {r1, sl}
     34c:	02002f49 	andeq	r2, r0, #292	; 0x124
     350:	4a060104 	bmi	180768 <startup-0x1fe7f898>
     354:	674b4b06 	strbvs	r4, [fp, -r6, lsl #22]
     358:	02040200 	andeq	r0, r4, #0, 4
     35c:	004a7a03 	subeq	r7, sl, r3, lsl #20
     360:	06010402 	streq	r0, [r1], -r2, lsl #8
     364:	0c030658 	stceq	6, cr0, [r3], {88}	; 0x58
     368:	003d084a 	eorseq	r0, sp, sl, asr #16
     36c:	06010402 	streq	r0, [r1], -r2, lsl #8
     370:	0402004a 	streq	r0, [r2], #-74	; 0xffffffb6
     374:	4b064a02 	blmi	192b84 <startup-0x1fe6d47c>
     378:	91e5d73d 	mvnls	sp, sp, lsr r7
     37c:	003d086b 	eorseq	r0, sp, fp, ror #16
     380:	06010402 	streq	r0, [r1], -r2, lsl #8
     384:	0402004a 	streq	r0, [r2], #-74	; 0xffffffb6
     388:	02005802 	andeq	r5, r0, #131072	; 0x20000
     38c:	00900304 	addseq	r0, r0, r4, lsl #6
     390:	4a040402 	bmi	1013a0 <startup-0x1fefec60>
     394:	3d674b06 	vstmdbcc	r7!, {d20-d22}
     398:	765be5d7 			; <UNDEFINED> instruction: 0x765be5d7
     39c:	3f3d75bc 	svccc	0x003d75bc
     3a0:	3d162d02 	ldccc	13, cr2, [r6, #-8]
     3a4:	5a404b3d 	bpl	10130a0 <startup-0x1efecf60>
     3a8:	59836783 	stmibpl	r3, {r0, r1, r7, r8, r9, sl, sp, lr}
     3ac:	594b594b 	stmdbpl	fp, {r0, r1, r3, r6, r8, fp, ip, lr}^
     3b0:	9183834b 	orrls	r8, r3, fp, asr #6
     3b4:	83919191 	orrshi	r9, r1, #1073741860	; 0x40000024
     3b8:	3e838384 	cdpcc	3, 8, cr8, cr3, cr4, {4}
     3bc:	5a3d8383 	bpl	f611d0 <startup-0x1f09ee30>
     3c0:	832f4c4b 			; <UNDEFINED> instruction: 0x832f4c4b
     3c4:	67246784 	strvs	r6, [r4, -r4, lsl #15]!
     3c8:	593de691 	ldmdbpl	sp!, {r0, r4, r7, r9, sl, sp, lr, pc}
     3cc:	67235a4b 	strvs	r5, [r3, -fp, asr #20]!
     3d0:	5975bd3d 	ldmdbpl	r5!, {r0, r2, r3, r4, r5, r8, sl, fp, ip, sp, pc}^
     3d4:	033e59bd 	teqeq	lr, #3096576	; 0x2f4000
     3d8:	03207e9d 			; <UNDEFINED> instruction: 0x03207e9d
     3dc:	033c0196 	teqeq	ip, #-2147483611	; 0x80000025
     3e0:	10033c3d 	andne	r3, r3, sp, lsr ip
     3e4:	0402003c 	streq	r0, [r2], #-60	; 0xffffffc4
     3e8:	7dc10301 	stclvc	3, cr0, [r1, #4]
     3ec:	02c80320 	sbceq	r0, r8, #32, 6	; 0x80000000
     3f0:	4b012b02 	blmi	4b000 <startup-0x1ffb5000>
     3f4:	02213e3d 	eoreq	r3, r1, #976	; 0x3d0
     3f8:	01010004 	tsteq	r1, r4
     3fc:	0000008a 	andeq	r0, r0, sl, lsl #1
     400:	00700002 	rsbseq	r0, r0, r2
     404:	01020000 	mrseq	r0, (UNDEF: 2)
     408:	000d0efb 	strdeq	r0, [sp], -fp
     40c:	01010101 	tsteq	r1, r1, lsl #2
     410:	01000000 	mrseq	r0, (UNDEF: 0)
     414:	43010000 	movwmi	r0, #4096	; 0x1000
     418:	6f6d2f3a 	svcvs	0x006d2f3a
     41c:	2f632f70 	svccs	0x00632f70
     420:	6c706f4d 	ldclvs	15, cr6, [r0], #-308	; 0xfffffecc
     424:	726f6261 	rsbvc	r6, pc, #268435462	; 0x10000006
     428:	6f697461 	svcvs	0x00697461
     42c:	2f72656e 	svccs	0x0072656e
     430:	73504944 	cmpvc	r0, #68, 18	; 0x110000
     434:	7469572d 	strbtvc	r5, [r9], #-1837	; 0xfffff8d3
     438:	432f6863 			; <UNDEFINED> instruction: 0x432f6863
     43c:	61670000 	cmnvs	r7, r0
     440:	626f656d 	rsbvs	r6, pc, #457179136	; 0x1b400000
     444:	7463656a 	strbtvc	r6, [r3], #-1386	; 0xfffffa96
     448:	0100632e 	tsteq	r0, lr, lsr #6
     44c:	70730000 	rsbsvc	r0, r3, r0
     450:	65746972 	ldrbvs	r6, [r4, #-2418]!	; 0xfffff68e
     454:	0100682e 	tsteq	r0, lr, lsr #16
     458:	6d690000 	stclvs	0, cr0, [r9, #-0]
     45c:	2e656761 	cdpcs	7, 6, cr6, cr5, cr1, {3}
     460:	00010068 	andeq	r0, r1, r8, rrx
     464:	6d616700 	stclvs	7, cr6, [r1, #-0]
     468:	6a626f65 	bvs	189c204 <startup-0x1e763dfc>
     46c:	2e746365 	cdpcs	3, 7, cr6, cr4, cr5, {3}
     470:	00010068 	andeq	r0, r1, r8, rrx
     474:	05000000 	streq	r0, [r0, #-0]
     478:	001ad002 	andseq	sp, sl, r2
     47c:	4c4c1920 	mcrrmi	9, 2, r1, ip, cr0	; <UNPREDICTABLE>
     480:	3d67594b 			; <UNDEFINED> instruction: 0x3d67594b
     484:	000402ca 	andeq	r0, r4, sl, asr #5
     488:	01840101 	orreq	r0, r4, r1, lsl #2
     48c:	00020000 	andeq	r0, r2, r0
     490:	00000137 	andeq	r0, r0, r7, lsr r1
     494:	0efb0102 	cdpeq	1, 15, cr0, cr11, cr2, {0}
     498:	0101000d 	tsteq	r1, sp
     49c:	00000101 	andeq	r0, r0, r1, lsl #2
     4a0:	00000100 	andeq	r0, r0, r0, lsl #2
     4a4:	2f3a4301 	svccs	0x003a4301
     4a8:	2f706f6d 	svccs	0x00706f6d
     4ac:	6f4d2f63 	svcvs	0x004d2f63
     4b0:	62616c70 	rsbvs	r6, r1, #112, 24	; 0x7000
     4b4:	7461726f 	strbtvc	r7, [r1], #-623	; 0xfffffd91
     4b8:	656e6f69 	strbvs	r6, [lr, #-3945]!	; 0xfffff097
     4bc:	49442f72 	stmdbmi	r4, {r1, r4, r5, r6, r8, r9, sl, fp, sp}^
     4c0:	572d7350 			; <UNDEFINED> instruction: 0x572d7350
     4c4:	68637469 	stmdavs	r3!, {r0, r3, r5, r6, sl, ip, sp, lr}^
     4c8:	0000432f 	andeq	r4, r0, pc, lsr #6
     4cc:	65726966 	ldrbvs	r6, [r2, #-2406]!	; 0xfffff69a
     4d0:	0100632e 	tsteq	r0, lr, lsr #6
     4d4:	70730000 	rsbsvc	r0, r3, r0
     4d8:	65746972 	ldrbvs	r6, [r4, #-2418]!	; 0xfffff68e
     4dc:	0100682e 	tsteq	r0, lr, lsr #16
     4e0:	6d690000 	stclvs	0, cr0, [r9, #-0]
     4e4:	2e656761 	cdpcs	7, 6, cr6, cr5, cr1, {3}
     4e8:	00010068 	andeq	r0, r1, r8, rrx
     4ec:	6d616700 	stclvs	7, cr6, [r1, #-0]
     4f0:	6a626f65 	bvs	189c28c <startup-0x1e763d74>
     4f4:	2e746365 	cdpcs	3, 7, cr6, cr4, cr5, {3}
     4f8:	00010068 	andeq	r0, r1, r8, rrx
     4fc:	72696600 	rsbvc	r6, r9, #0, 12
     500:	6c625f65 	stclvs	15, cr5, [r2], #-404	; 0xfffffe6c
     504:	5f6b6361 	svcpl	0x006b6361
     508:	62782e32 	rsbsvs	r2, r8, #800	; 0x320
     50c:	0001006d 	andeq	r0, r1, sp, rrx
     510:	72696600 	rsbvc	r6, r9, #0, 12
     514:	675f3165 	ldrbvs	r3, [pc, -r5, ror #2]
     518:	2e796172 	mrccs	1, 3, r6, cr9, cr2, {3}
     51c:	006d6278 	rsbeq	r6, sp, r8, ror r2
     520:	66000001 	strvs	r0, [r0], -r1
     524:	31657269 	cmncc	r5, r9, ror #4
     528:	67696c5f 			; <UNDEFINED> instruction: 0x67696c5f
     52c:	782e7468 	stmdavc	lr!, {r3, r5, r6, sl, ip, sp, lr}
     530:	01006d62 	tsteq	r0, r2, ror #26
     534:	69660000 	stmdbvs	r6!, {}^	; <UNPREDICTABLE>
     538:	5f326572 	svcpl	0x00326572
     53c:	79617267 	stmdbvc	r1!, {r0, r1, r2, r5, r6, r9, ip, sp, lr}^
     540:	6d62782e 	stclvs	8, cr7, [r2, #-184]!	; 0xffffff48
     544:	00000100 	andeq	r0, r0, r0, lsl #2
     548:	65726966 	ldrbvs	r6, [r2, #-2406]!	; 0xfffff69a
     54c:	696c5f32 	stmdbvs	ip!, {r1, r4, r5, r8, r9, sl, fp, ip, lr}^
     550:	2e746867 	cdpcs	8, 7, cr6, cr4, cr7, {3}
     554:	006d6278 	rsbeq	r6, sp, r8, ror r2
     558:	66000001 	strvs	r0, [r0], -r1
     55c:	33657269 	cmncc	r5, #-1879048186	; 0x90000006
     560:	6172675f 	cmnvs	r2, pc, asr r7
     564:	62782e79 	rsbsvs	r2, r8, #1936	; 0x790
     568:	0001006d 	andeq	r0, r1, sp, rrx
     56c:	72696600 	rsbvc	r6, r9, #0, 12
     570:	6c5f3365 	mrrcvs	3, 6, r3, pc, cr5	; <UNPREDICTABLE>
     574:	74686769 	strbtvc	r6, [r8], #-1897	; 0xfffff897
     578:	6d62782e 	stclvs	8, cr7, [r2, #-184]!	; 0xffffff48
     57c:	00000100 	andeq	r0, r0, r0, lsl #2
     580:	65726966 	ldrbvs	r6, [r2, #-2406]!	; 0xfffff69a
     584:	72675f34 	rsbvc	r5, r7, #52, 30	; 0xd0
     588:	782e7961 	stmdavc	lr!, {r0, r5, r6, r8, fp, ip, sp, lr}
     58c:	01006d62 	tsteq	r0, r2, ror #26
     590:	69660000 	stmdbvs	r6!, {}^	; <UNPREDICTABLE>
     594:	5f346572 	svcpl	0x00346572
     598:	6867696c 	stmdavs	r7!, {r2, r3, r5, r6, r8, fp, sp, lr}^
     59c:	62782e74 	rsbsvs	r2, r8, #116, 28	; 0x740
     5a0:	0001006d 	andeq	r0, r1, sp, rrx
     5a4:	72696600 	rsbvc	r6, r9, #0, 12
     5a8:	675f3565 	ldrbvs	r3, [pc, -r5, ror #10]
     5ac:	2e796172 	mrccs	1, 3, r6, cr9, cr2, {3}
     5b0:	006d6278 	rsbeq	r6, sp, r8, ror r2
     5b4:	66000001 	strvs	r0, [r0], -r1
     5b8:	35657269 	strbcc	r7, [r5, #-617]!	; 0xfffffd97
     5bc:	67696c5f 			; <UNDEFINED> instruction: 0x67696c5f
     5c0:	782e7468 	stmdavc	lr!, {r3, r5, r6, sl, ip, sp, lr}
     5c4:	01006d62 	tsteq	r0, r2, ror #26
     5c8:	00000000 	andeq	r0, r0, r0
     5cc:	1b280205 	blne	a00de8 <startup-0x1f5ff218>
     5d0:	30032000 	andcc	r2, r3, r0
     5d4:	672f3d01 	strvs	r3, [pc, -r1, lsl #26]!
     5d8:	3e672f3e 	mcrcc	15, 3, r2, cr7, cr14, {1}
     5dc:	2f3e672f 	svccs	0x003e672f
     5e0:	672f3e67 	strvs	r3, [pc, -r7, ror #28]!
     5e4:	3e672f3e 	mcrcc	15, 3, r2, cr7, cr14, {1}
     5e8:	2f3e672f 	svccs	0x003e672f
     5ec:	672f3e67 	strvs	r3, [pc, -r7, ror #28]!
     5f0:	3e672f3e 	mcrcc	15, 3, r2, cr7, cr14, {1}
     5f4:	023d672f 	eorseq	r6, sp, #12320768	; 0xbc0000
     5f8:	4b4c1446 	blmi	1305718 <startup-0x1ecfa8e8>
     5fc:	594b3e2f 	stmdbpl	fp, {r0, r1, r2, r3, r5, r9, sl, fp, ip, sp}^
     600:	915a5959 	cmpls	sl, r9, asr r9
     604:	93919191 	orrsls	r9, r1, #1073741860	; 0x40000024
     608:	3d3d3d3e 	ldccc	13, cr3, [sp, #-248]!	; 0xffffff08
     60c:	0031023d 	eorseq	r0, r1, sp, lsr r2
     610:	00ee0101 	rsceq	r0, lr, r1, lsl #2
     614:	00020000 	andeq	r0, r2, r0
     618:	0000006c 	andeq	r0, r0, ip, rrx
     61c:	0efb0102 	cdpeq	1, 15, cr0, cr11, cr2, {0}
     620:	0101000d 	tsteq	r1, sp
     624:	00000101 	andeq	r0, r0, r1, lsl #2
     628:	00000100 	andeq	r0, r0, r0, lsl #2
     62c:	2f3a4301 	svccs	0x003a4301
     630:	2f706f6d 	svccs	0x00706f6d
     634:	6f4d2f63 	svcvs	0x004d2f63
     638:	62616c70 	rsbvs	r6, r1, #112, 24	; 0x7000
     63c:	7461726f 	strbtvc	r7, [r1], #-623	; 0xfffffd91
     640:	656e6f69 	strbvs	r6, [lr, #-3945]!	; 0xfffff097
     644:	49442f72 	stmdbmi	r4, {r1, r4, r5, r6, r8, r9, sl, fp, sp}^
     648:	572d7350 			; <UNDEFINED> instruction: 0x572d7350
     64c:	68637469 	stmdavs	r3!, {r0, r3, r5, r6, sl, ip, sp, lr}^
     650:	0000432f 	andeq	r4, r0, pc, lsr #6
     654:	79616c70 	stmdbvc	r1!, {r4, r5, r6, sl, fp, sp, lr}^
     658:	632e7265 			; <UNDEFINED> instruction: 0x632e7265
     65c:	00000100 	andeq	r0, r0, r0, lsl #2
     660:	69727073 	ldmdbvs	r2!, {r0, r1, r4, r5, r6, ip, sp, lr}^
     664:	682e6574 	stmdavs	lr!, {r2, r4, r5, r6, r8, sl, sp, lr}
     668:	00000100 	andeq	r0, r0, r0, lsl #2
     66c:	67616d69 	strbvs	r6, [r1, -r9, ror #26]!
     670:	00682e65 	rsbeq	r2, r8, r5, ror #28
     674:	67000001 	strvs	r0, [r0, -r1]
     678:	6f656d61 	svcvs	0x00656d61
     67c:	63656a62 	cmnvs	r5, #401408	; 0x62000
     680:	00682e74 	rsbeq	r2, r8, r4, ror lr
     684:	00000001 	andeq	r0, r0, r1
     688:	d0020500 	andle	r0, r2, r0, lsl #10
     68c:	0320001d 			; <UNDEFINED> instruction: 0x0320001d
     690:	3d2f010d 	stfccs	f0, [pc, #-52]!	; 664 <startup-0x1ffff99c>
     694:	3d3d3d3d 	ldccc	13, cr3, [sp, #-244]!	; 0xffffff0c
     698:	67594dca 	ldrbvs	r4, [r9, -sl, asr #27]
     69c:	0200cd3d 	andeq	ip, r0, #3904	; 0xf40
     6a0:	82060104 	andhi	r0, r6, #4, 2
     6a4:	02040200 	andeq	r0, r4, #0, 4
     6a8:	4d4b064a 	stclmi	6, cr0, [fp, #-296]	; 0xfffffed8
     6ac:	684b3d75 	stmdavs	fp, {r0, r2, r4, r5, r6, r8, sl, fp, ip, sp}^
     6b0:	0402004c 	streq	r0, [r2], #-76	; 0xffffffb4
     6b4:	06740601 	ldrbteq	r0, [r4], -r1, lsl #12
     6b8:	684b3d75 	stmdavs	fp, {r0, r2, r4, r5, r6, r8, sl, fp, ip, sp}^
     6bc:	005d754d 	subseq	r7, sp, sp, asr #10
     6c0:	06010402 	streq	r0, [r1], -r2, lsl #8
     6c4:	5b59064a 	blpl	1641ff4 <startup-0x1e9be00c>
     6c8:	01040200 	mrseq	r0, R12_usr
     6cc:	59064a06 	stmdbpl	r6, {r1, r2, r9, fp, lr}
     6d0:	0402005b 	streq	r0, [r2], #-91	; 0xffffffa5
     6d4:	004a0601 	subeq	r0, sl, r1, lsl #12
     6d8:	58040402 	stmdapl	r4, {r1, sl}
     6dc:	05040200 	streq	r0, [r4, #-512]	; 0xfffffe00
     6e0:	0402004a 	streq	r0, [r2], #-74	; 0xffffffb6
     6e4:	02005806 	andeq	r5, r0, #393216	; 0x60000
     6e8:	064a0704 	strbeq	r0, [sl], -r4, lsl #14
     6ec:	02005b4b 	andeq	r5, r0, #76800	; 0x12c00
     6f0:	74060104 	strvc	r0, [r6], #-260	; 0xfffffefc
     6f4:	765b7506 	ldrbvc	r7, [fp], -r6, lsl #10
     6f8:	5c4b684b 	mcrrpl	8, 4, r6, fp, cr11
     6fc:	02686767 	rsbeq	r6, r8, #27000832	; 0x19c0000
     700:	01010012 	tsteq	r1, r2, lsl r0
     704:	000001dd 	ldrdeq	r0, [r0], -sp
     708:	01820002 	orreq	r0, r2, r2
     70c:	01020000 	mrseq	r0, (UNDEF: 2)
     710:	000d0efb 	strdeq	r0, [sp], -fp
     714:	01010101 	tsteq	r1, r1, lsl #2
     718:	01000000 	mrseq	r0, (UNDEF: 0)
     71c:	43010000 	movwmi	r0, #4096	; 0x1000
     720:	6f6d2f3a 	svcvs	0x006d2f3a
     724:	2f632f70 	svccs	0x00632f70
     728:	6c706f4d 	ldclvs	15, cr6, [r0], #-308	; 0xfffffecc
     72c:	726f6261 	rsbvc	r6, pc, #268435462	; 0x10000006
     730:	6f697461 	svcvs	0x00697461
     734:	2f72656e 	svccs	0x0072656e
     738:	73504944 	cmpvc	r0, #68, 18	; 0x110000
     73c:	7469572d 	strbtvc	r5, [r9], #-1837	; 0xfffff8d3
     740:	432f6863 			; <UNDEFINED> instruction: 0x432f6863
     744:	69620000 	stmdbvs	r2!, {}^	; <UNPREDICTABLE>
     748:	632e6472 			; <UNDEFINED> instruction: 0x632e6472
     74c:	00000100 	andeq	r0, r0, r0, lsl #2
     750:	69727073 	ldmdbvs	r2!, {r0, r1, r4, r5, r6, ip, sp, lr}^
     754:	682e6574 	stmdavs	lr!, {r2, r4, r5, r6, r8, sl, sp, lr}
     758:	00000100 	andeq	r0, r0, r0, lsl #2
     75c:	67616d69 	strbvs	r6, [r1, -r9, ror #26]!
     760:	00682e65 	rsbeq	r2, r8, r5, ror #28
     764:	67000001 	strvs	r0, [r0, -r1]
     768:	6f656d61 	svcvs	0x00656d61
     76c:	63656a62 	cmnvs	r5, #401408	; 0x62000
     770:	00682e74 	rsbeq	r2, r8, r4, ror lr
     774:	62000001 	andvs	r0, r0, #1
     778:	31647269 	cmncc	r4, r9, ror #4
     77c:	616c625f 	cmnvs	ip, pc, asr r2
     780:	782e6b63 	stmdavc	lr!, {r0, r1, r5, r6, r8, r9, fp, sp, lr}
     784:	01006d62 	tsteq	r0, r2, ror #26
     788:	69620000 	stmdbvs	r2!, {}^	; <UNPREDICTABLE>
     78c:	5f316472 	svcpl	0x00316472
     790:	79617267 	stmdbvc	r1!, {r0, r1, r2, r5, r6, r9, ip, sp, lr}^
     794:	6d62782e 	stclvs	8, cr7, [r2, #-184]!	; 0xffffff48
     798:	00000100 	andeq	r0, r0, r0, lsl #2
     79c:	64726962 	ldrbtvs	r6, [r2], #-2402	; 0xfffff69e
     7a0:	696c5f31 	stmdbvs	ip!, {r0, r4, r5, r8, r9, sl, fp, ip, lr}^
     7a4:	2e746867 	cdpcs	8, 7, cr6, cr4, cr7, {3}
     7a8:	006d6278 	rsbeq	r6, sp, r8, ror r2
     7ac:	62000001 	andvs	r0, r0, #1
     7b0:	32647269 	rsbcc	r7, r4, #-1879048186	; 0x90000006
     7b4:	616c625f 	cmnvs	ip, pc, asr r2
     7b8:	782e6b63 	stmdavc	lr!, {r0, r1, r5, r6, r8, r9, fp, sp, lr}
     7bc:	01006d62 	tsteq	r0, r2, ror #26
     7c0:	69620000 	stmdbvs	r2!, {}^	; <UNPREDICTABLE>
     7c4:	5f326472 	svcpl	0x00326472
     7c8:	79617267 	stmdbvc	r1!, {r0, r1, r2, r5, r6, r9, ip, sp, lr}^
     7cc:	6d62782e 	stclvs	8, cr7, [r2, #-184]!	; 0xffffff48
     7d0:	00000100 	andeq	r0, r0, r0, lsl #2
     7d4:	64726962 	ldrbtvs	r6, [r2], #-2402	; 0xfffff69e
     7d8:	696c5f32 	stmdbvs	ip!, {r1, r4, r5, r8, r9, sl, fp, ip, lr}^
     7dc:	2e746867 	cdpcs	8, 7, cr6, cr4, cr7, {3}
     7e0:	006d6278 	rsbeq	r6, sp, r8, ror r2
     7e4:	62000001 	andvs	r0, r0, #1
     7e8:	33647269 	cmncc	r4, #-1879048186	; 0x90000006
     7ec:	616c625f 	cmnvs	ip, pc, asr r2
     7f0:	782e6b63 	stmdavc	lr!, {r0, r1, r5, r6, r8, r9, fp, sp, lr}
     7f4:	01006d62 	tsteq	r0, r2, ror #26
     7f8:	69620000 	stmdbvs	r2!, {}^	; <UNPREDICTABLE>
     7fc:	5f336472 	svcpl	0x00336472
     800:	79617267 	stmdbvc	r1!, {r0, r1, r2, r5, r6, r9, ip, sp, lr}^
     804:	6d62782e 	stclvs	8, cr7, [r2, #-184]!	; 0xffffff48
     808:	00000100 	andeq	r0, r0, r0, lsl #2
     80c:	64726962 	ldrbtvs	r6, [r2], #-2402	; 0xfffff69e
     810:	696c5f33 	stmdbvs	ip!, {r0, r1, r4, r5, r8, r9, sl, fp, ip, lr}^
     814:	2e746867 	cdpcs	8, 7, cr6, cr4, cr7, {3}
     818:	006d6278 	rsbeq	r6, sp, r8, ror r2
     81c:	62000001 	andvs	r0, r0, #1
     820:	34647269 	strbtcc	r7, [r4], #-617	; 0xfffffd97
     824:	616c625f 	cmnvs	ip, pc, asr r2
     828:	782e6b63 	stmdavc	lr!, {r0, r1, r5, r6, r8, r9, fp, sp, lr}
     82c:	01006d62 	tsteq	r0, r2, ror #26
     830:	69620000 	stmdbvs	r2!, {}^	; <UNPREDICTABLE>
     834:	5f346472 	svcpl	0x00346472
     838:	79617267 	stmdbvc	r1!, {r0, r1, r2, r5, r6, r9, ip, sp, lr}^
     83c:	6d62782e 	stclvs	8, cr7, [r2, #-184]!	; 0xffffff48
     840:	00000100 	andeq	r0, r0, r0, lsl #2
     844:	64726962 	ldrbtvs	r6, [r2], #-2402	; 0xfffff69e
     848:	696c5f34 	stmdbvs	ip!, {r2, r4, r5, r8, r9, sl, fp, ip, lr}^
     84c:	2e746867 	cdpcs	8, 7, cr6, cr4, cr7, {3}
     850:	006d6278 	rsbeq	r6, sp, r8, ror r2
     854:	62000001 	andvs	r0, r0, #1
     858:	35647269 	strbcc	r7, [r4, #-617]!	; 0xfffffd97
     85c:	616c625f 	cmnvs	ip, pc, asr r2
     860:	782e6b63 	stmdavc	lr!, {r0, r1, r5, r6, r8, r9, fp, sp, lr}
     864:	01006d62 	tsteq	r0, r2, ror #26
     868:	69620000 	stmdbvs	r2!, {}^	; <UNPREDICTABLE>
     86c:	5f356472 	svcpl	0x00356472
     870:	79617267 	stmdbvc	r1!, {r0, r1, r2, r5, r6, r9, ip, sp, lr}^
     874:	6d62782e 	stclvs	8, cr7, [r2, #-184]!	; 0xffffff48
     878:	00000100 	andeq	r0, r0, r0, lsl #2
     87c:	64726962 	ldrbtvs	r6, [r2], #-2402	; 0xfffff69e
     880:	696c5f35 	stmdbvs	ip!, {r0, r2, r4, r5, r8, r9, sl, fp, ip, lr}^
     884:	2e746867 	cdpcs	8, 7, cr6, cr4, cr7, {3}
     888:	006d6278 	rsbeq	r6, sp, r8, ror r2
     88c:	00000001 	andeq	r0, r0, r1
     890:	10020500 	andne	r0, r2, r0, lsl #10
     894:	03200020 			; <UNDEFINED> instruction: 0x03200020
     898:	2f3e013f 	svccs	0x003e013f
     89c:	672f3d67 	strvs	r3, [pc, -r7, ror #26]!
     8a0:	3e672f3d 	mcrcc	15, 3, r2, cr7, cr13, {1}
     8a4:	2f3d672f 	svccs	0x003d672f
     8a8:	672f3d67 	strvs	r3, [pc, -r7, ror #26]!
     8ac:	3d672f3f 	stclcc	15, cr2, [r7, #-252]!	; 0xffffff04
     8b0:	2f3d672f 	svccs	0x003d672f
     8b4:	672f3e67 	strvs	r3, [pc, -r7, ror #28]!
     8b8:	3d672f3d 	stclcc	15, cr2, [r7, #-244]!	; 0xffffff0c
     8bc:	2f3e672f 	svccs	0x003e672f
     8c0:	672f3d67 	strvs	r3, [pc, -r7, ror #26]!
     8c4:	3d672f3d 	stclcc	15, cr2, [r7, #-244]!	; 0xffffff0c
     8c8:	4c145e02 	ldcmi	14, cr5, [r4], {2}
     8cc:	4b3e2f4b 	blmi	f8c600 <startup-0x1f073a00>
     8d0:	59595959 	ldmdbpl	r9, {r0, r3, r4, r6, r8, fp, ip, lr}^
     8d4:	9191915c 	orrsls	r9, r1, ip, asr r1
     8d8:	3e949391 	mrccc	3, 4, r9, cr4, cr1, {4}
     8dc:	3d3d3d3d 	ldccc	13, cr3, [sp, #-244]!	; 0xffffff0c
     8e0:	01003d02 	tsteq	r0, r2, lsl #26
     8e4:	00016101 	andeq	r6, r1, r1, lsl #2
     8e8:	1c000200 	sfmne	f0, 4, [r0], {-0}
     8ec:	02000001 	andeq	r0, r0, #1
     8f0:	0d0efb01 	vstreq	d15, [lr, #-4]
     8f4:	01010100 	mrseq	r0, (UNDEF: 17)
     8f8:	00000001 	andeq	r0, r0, r1
     8fc:	01000001 	tsteq	r0, r1
     900:	6d2f3a43 	vstmdbvs	pc!, {s6-s72}
     904:	632f706f 			; <UNDEFINED> instruction: 0x632f706f
     908:	706f4d2f 	rsbvc	r4, pc, pc, lsr #26
     90c:	6f62616c 	svcvs	0x0062616c
     910:	69746172 	ldmdbvs	r4!, {r1, r4, r5, r6, r8, sp, lr}^
     914:	72656e6f 	rsbvc	r6, r5, #1776	; 0x6f0
     918:	5049442f 	subpl	r4, r9, pc, lsr #8
     91c:	69572d73 	ldmdbvs	r7, {r0, r1, r4, r5, r6, r8, sl, fp, sp}^
     920:	2f686374 	svccs	0x00686374
     924:	77000043 	strvc	r0, [r0, -r3, asr #32]
     928:	68637469 	stmdavs	r3!, {r0, r3, r5, r6, sl, ip, sp, lr}^
     92c:	0100632e 	tsteq	r0, lr, lsr #6
     930:	70730000 	rsbsvc	r0, r3, r0
     934:	65746972 	ldrbvs	r6, [r4, #-2418]!	; 0xfffff68e
     938:	0100682e 	tsteq	r0, lr, lsr #16
     93c:	6d690000 	stclvs	0, cr0, [r9, #-0]
     940:	2e656761 	cdpcs	7, 6, cr6, cr5, cr1, {3}
     944:	00010068 	andeq	r0, r1, r8, rrx
     948:	6d616700 	stclvs	7, cr6, [r1, #-0]
     94c:	6a626f65 	bvs	189c6e8 <startup-0x1e763918>
     950:	2e746365 	cdpcs	3, 7, cr6, cr4, cr5, {3}
     954:	00010068 	andeq	r0, r1, r8, rrx
     958:	74697700 	strbtvc	r7, [r9], #-1792	; 0xfffff900
     95c:	5f316863 	svcpl	0x00316863
     960:	63616c62 	cmnvs	r1, #25088	; 0x6200
     964:	62782e6b 	rsbsvs	r2, r8, #1712	; 0x6b0
     968:	0001006d 	andeq	r0, r1, sp, rrx
     96c:	74697700 	strbtvc	r7, [r9], #-1792	; 0xfffff900
     970:	5f316863 	svcpl	0x00316863
     974:	79617267 	stmdbvc	r1!, {r0, r1, r2, r5, r6, r9, ip, sp, lr}^
     978:	6d62782e 	stclvs	8, cr7, [r2, #-184]!	; 0xffffff48
     97c:	00000100 	andeq	r0, r0, r0, lsl #2
     980:	63746977 	cmnvs	r4, #1949696	; 0x1dc000
     984:	6c5f3168 	ldfvse	f3, [pc], {104}	; 0x68
     988:	74686769 	strbtvc	r6, [r8], #-1897	; 0xfffff897
     98c:	6d62782e 	stclvs	8, cr7, [r2, #-184]!	; 0xffffff48
     990:	00000100 	andeq	r0, r0, r0, lsl #2
     994:	63746977 	cmnvs	r4, #1949696	; 0x1dc000
     998:	625f3268 	subsvs	r3, pc, #104, 4	; 0x80000006
     99c:	6b63616c 	blvs	18d8f54 <startup-0x1e7270ac>
     9a0:	6d62782e 	stclvs	8, cr7, [r2, #-184]!	; 0xffffff48
     9a4:	00000100 	andeq	r0, r0, r0, lsl #2
     9a8:	63746977 	cmnvs	r4, #1949696	; 0x1dc000
     9ac:	675f3268 	ldrbvs	r3, [pc, -r8, ror #4]
     9b0:	2e796172 	mrccs	1, 3, r6, cr9, cr2, {3}
     9b4:	006d6278 	rsbeq	r6, sp, r8, ror r2
     9b8:	77000001 	strvc	r0, [r0, -r1]
     9bc:	68637469 	stmdavs	r3!, {r0, r3, r5, r6, sl, ip, sp, lr}^
     9c0:	696c5f32 	stmdbvs	ip!, {r1, r4, r5, r8, r9, sl, fp, ip, lr}^
     9c4:	2e746867 	cdpcs	8, 7, cr6, cr4, cr7, {3}
     9c8:	006d6278 	rsbeq	r6, sp, r8, ror r2
     9cc:	77000001 	strvc	r0, [r0, -r1]
     9d0:	68637469 	stmdavs	r3!, {r0, r3, r5, r6, sl, ip, sp, lr}^
     9d4:	6c625f33 	stclvs	15, cr5, [r2], #-204	; 0xffffff34
     9d8:	2e6b6361 	cdpcs	3, 6, cr6, cr11, cr1, {3}
     9dc:	006d6278 	rsbeq	r6, sp, r8, ror r2
     9e0:	77000001 	strvc	r0, [r0, -r1]
     9e4:	68637469 	stmdavs	r3!, {r0, r3, r5, r6, sl, ip, sp, lr}^
     9e8:	72675f33 	rsbvc	r5, r7, #51, 30	; 0xcc
     9ec:	782e7961 	stmdavc	lr!, {r0, r5, r6, r8, fp, ip, sp, lr}
     9f0:	01006d62 	tsteq	r0, r2, ror #26
     9f4:	69770000 	ldmdbvs	r7!, {}^	; <UNPREDICTABLE>
     9f8:	33686374 	cmncc	r8, #116, 6	; 0xd0000001
     9fc:	67696c5f 			; <UNDEFINED> instruction: 0x67696c5f
     a00:	782e7468 	stmdavc	lr!, {r3, r5, r6, sl, ip, sp, lr}
     a04:	01006d62 	tsteq	r0, r2, ror #26
     a08:	00000000 	andeq	r0, r0, r0
     a0c:	23740205 	cmncs	r4, #1342177280	; 0x50000000
     a10:	28032000 	stmdacs	r3, {sp}
     a14:	672f3e01 	strvs	r3, [pc, -r1, lsl #28]!
     a18:	3d672f3d 	stclcc	15, cr2, [r7, #-244]!	; 0xffffff0c
     a1c:	2f3e672f 	svccs	0x003e672f
     a20:	672f3d67 	strvs	r3, [pc, -r7, ror #26]!
     a24:	3f672f3d 	svccc	0x00672f3d
     a28:	2f3d672f 	svccs	0x003d672f
     a2c:	672f3d67 	strvs	r3, [pc, -r7, ror #26]!
     a30:	143a023e 	ldrtne	r0, [sl], #-574	; 0xfffffdc2
     a34:	3e2f4b4c 	vnmulcc.f64	d4, d15, d12
     a38:	5b59594b 	blpl	1656f6c <startup-0x1e9a9094>
     a3c:	94919191 	ldrls	r9, [r1], #401	; 0x191
     a40:	3d3d3d3e 	ldccc	13, cr3, [sp, #-248]!	; 0xffffff08
     a44:	0029023d 	eoreq	r0, r9, sp, lsr r2
     a48:	01830101 	orreq	r0, r3, r1, lsl #2
     a4c:	00020000 	andeq	r0, r2, r0
     a50:	0000011a 	andeq	r0, r0, sl, lsl r1
     a54:	0efb0102 	cdpeq	1, 15, cr0, cr11, cr2, {0}
     a58:	0101000d 	tsteq	r1, sp
     a5c:	00000101 	andeq	r0, r0, r1, lsl #2
     a60:	00000100 	andeq	r0, r0, r0, lsl #2
     a64:	2f3a4301 	svccs	0x003a4301
     a68:	2f706f6d 	svccs	0x00706f6d
     a6c:	6f4d2f63 	svcvs	0x004d2f63
     a70:	62616c70 	rsbvs	r6, r1, #112, 24	; 0x7000
     a74:	7461726f 	strbtvc	r7, [r1], #-623	; 0xfffffd91
     a78:	656e6f69 	strbvs	r6, [lr, #-3945]!	; 0xfffff097
     a7c:	49442f72 	stmdbmi	r4, {r1, r4, r5, r6, r8, r9, sl, fp, sp}^
     a80:	572d7350 			; <UNDEFINED> instruction: 0x572d7350
     a84:	68637469 	stmdavs	r3!, {r0, r3, r5, r6, sl, ip, sp, lr}^
     a88:	0000432f 	andeq	r4, r0, pc, lsr #6
     a8c:	2e504944 	vnmlacs.f16	s9, s0, s8	; <UNPREDICTABLE>
     a90:	00010063 	andeq	r0, r1, r3, rrx
     a94:	72707300 	rsbsvc	r7, r0, #0, 6
     a98:	2e657469 	cdpcs	4, 6, cr7, cr5, cr9, {3}
     a9c:	00010068 	andeq	r0, r1, r8, rrx
     aa0:	616d6900 	cmnvs	sp, r0, lsl #18
     aa4:	682e6567 	stmdavs	lr!, {r0, r1, r2, r5, r6, r8, sl, sp, lr}
     aa8:	00000100 	andeq	r0, r0, r0, lsl #2
     aac:	656d6167 	strbvs	r6, [sp, #-359]!	; 0xfffffe99
     ab0:	656a626f 	strbvs	r6, [sl, #-623]!	; 0xfffffd91
     ab4:	682e7463 	stmdavs	lr!, {r0, r1, r5, r6, sl, ip, sp, lr}
     ab8:	00000100 	andeq	r0, r0, r0, lsl #2
     abc:	63746977 	cmnvs	r4, #1949696	; 0x1dc000
     ac0:	625f3168 	subsvs	r3, pc, #104, 2
     ac4:	6b63616c 	blvs	18d907c <startup-0x1e726f84>
     ac8:	6d62782e 	stclvs	8, cr7, [r2, #-184]!	; 0xffffff48
     acc:	00000100 	andeq	r0, r0, r0, lsl #2
     ad0:	63746977 	cmnvs	r4, #1949696	; 0x1dc000
     ad4:	675f3168 	ldrbvs	r3, [pc, -r8, ror #2]
     ad8:	2e796172 	mrccs	1, 3, r6, cr9, cr2, {3}
     adc:	006d6278 	rsbeq	r6, sp, r8, ror r2
     ae0:	77000001 	strvc	r0, [r0, -r1]
     ae4:	68637469 	stmdavs	r3!, {r0, r3, r5, r6, sl, ip, sp, lr}^
     ae8:	696c5f31 	stmdbvs	ip!, {r0, r4, r5, r8, r9, sl, fp, ip, lr}^
     aec:	2e746867 	cdpcs	8, 7, cr6, cr4, cr7, {3}
     af0:	006d6278 	rsbeq	r6, sp, r8, ror r2
     af4:	77000001 	strvc	r0, [r0, -r1]
     af8:	68637469 	stmdavs	r3!, {r0, r3, r5, r6, sl, ip, sp, lr}^
     afc:	6c625f32 	stclvs	15, cr5, [r2], #-200	; 0xffffff38
     b00:	2e6b6361 	cdpcs	3, 6, cr6, cr11, cr1, {3}
     b04:	006d6278 	rsbeq	r6, sp, r8, ror r2
     b08:	77000001 	strvc	r0, [r0, -r1]
     b0c:	68637469 	stmdavs	r3!, {r0, r3, r5, r6, sl, ip, sp, lr}^
     b10:	72675f32 	rsbvc	r5, r7, #50, 30	; 0xc8
     b14:	782e7961 	stmdavc	lr!, {r0, r5, r6, r8, fp, ip, sp, lr}
     b18:	01006d62 	tsteq	r0, r2, ror #26
     b1c:	69770000 	ldmdbvs	r7!, {}^	; <UNPREDICTABLE>
     b20:	32686374 	rsbcc	r6, r8, #116, 6	; 0xd0000001
     b24:	67696c5f 			; <UNDEFINED> instruction: 0x67696c5f
     b28:	782e7468 	stmdavc	lr!, {r3, r5, r6, sl, ip, sp, lr}
     b2c:	01006d62 	tsteq	r0, r2, ror #26
     b30:	69770000 	ldmdbvs	r7!, {}^	; <UNPREDICTABLE>
     b34:	33686374 	cmncc	r8, #116, 6	; 0xd0000001
     b38:	616c625f 	cmnvs	ip, pc, asr r2
     b3c:	782e6b63 	stmdavc	lr!, {r0, r1, r5, r6, r8, r9, fp, sp, lr}
     b40:	01006d62 	tsteq	r0, r2, ror #26
     b44:	69770000 	ldmdbvs	r7!, {}^	; <UNPREDICTABLE>
     b48:	33686374 	cmncc	r8, #116, 6	; 0xd0000001
     b4c:	6172675f 	cmnvs	r2, pc, asr r7
     b50:	62782e79 	rsbsvs	r2, r8, #1936	; 0x790
     b54:	0001006d 	andeq	r0, r1, sp, rrx
     b58:	74697700 	strbtvc	r7, [r9], #-1792	; 0xfffff900
     b5c:	5f336863 	svcpl	0x00336863
     b60:	6867696c 	stmdavs	r7!, {r2, r3, r5, r6, r8, fp, sp, lr}^
     b64:	62782e74 	rsbsvs	r2, r8, #116, 28	; 0x740
     b68:	0001006d 	andeq	r0, r1, sp, rrx
     b6c:	05000000 	streq	r0, [r0, #-0]
     b70:	0025ac02 	eoreq	sl, r5, r2, lsl #24
     b74:	012c0320 			; <UNDEFINED> instruction: 0x012c0320
     b78:	3d672f3e 	stclcc	15, cr2, [r7, #-248]!	; 0xffffff08
     b7c:	2f3d672f 	svccs	0x003d672f
     b80:	672f3e67 	strvs	r3, [pc, -r7, ror #28]!
     b84:	3d672f3d 	stclcc	15, cr2, [r7, #-244]!	; 0xffffff0c
     b88:	2f3f672f 	svccs	0x003f672f
     b8c:	672f3d67 	strvs	r3, [pc, -r7, ror #26]!
     b90:	3e672f3d 	mcrcc	15, 3, r2, cr7, cr13, {1}
     b94:	4c143a02 			; <UNDEFINED> instruction: 0x4c143a02
     b98:	4b3e2f4b 	blmi	f8c8cc <startup-0x1f073734>
     b9c:	915b5959 	cmpls	fp, r9, asr r9
     ba0:	3e949191 	mrccc	1, 4, r9, cr4, cr1, {4}
     ba4:	3d3d3d3d 	ldccc	13, cr3, [sp, #-244]!	; 0xffffff0c
     ba8:	59172902 	ldmdbpl	r7, {r1, r8, fp, sp}
     bac:	4b933d3d 	blmi	fe4d00a8 <firstTime.4104+0xde4bbc3c>
     bb0:	675a5a4e 	ldrbvs	r5, [sl, -lr, asr #20]
     bb4:	0402004c 	streq	r0, [r2], #-76	; 0xffffffb4
     bb8:	06820601 	streq	r0, [r2], r1, lsl #12
     bbc:	4d913d83 	ldcmi	13, cr3, [r1, #524]	; 0x20c
     bc0:	08ae4b50 	stmiaeq	lr!, {r4, r6, r8, r9, fp, lr}
     bc4:	503d4b31 	eorspl	r4, sp, r1, lsr fp
     bc8:	3f3d4b1b 	svccc	0x003d4b1b
     bcc:	01001002 	tsteq	r0, r2
     bd0:	0001a501 	andeq	sl, r1, r1, lsl #10
     bd4:	57000200 	strpl	r0, [r0, -r0, lsl #4]
     bd8:	02000001 	andeq	r0, r0, #1
     bdc:	0d0efb01 	vstreq	d15, [lr, #-4]
     be0:	01010100 	mrseq	r0, (UNDEF: 17)
     be4:	00000001 	andeq	r0, r0, r1
     be8:	01000001 	tsteq	r0, r1
     bec:	6d2f3a43 	vstmdbvs	pc!, {s6-s72}
     bf0:	632f706f 			; <UNDEFINED> instruction: 0x632f706f
     bf4:	706f4d2f 	rsbvc	r4, pc, pc, lsr #26
     bf8:	6f62616c 	svcvs	0x0062616c
     bfc:	69746172 	ldmdbvs	r4!, {r1, r4, r5, r6, r8, sp, lr}^
     c00:	72656e6f 	rsbvc	r6, r5, #1776	; 0x6f0
     c04:	5049442f 	subpl	r4, r9, pc, lsr #8
     c08:	69572d73 	ldmdbvs	r7, {r0, r1, r4, r5, r6, r8, sl, fp, sp}^
     c0c:	2f686374 	svccs	0x00686374
     c10:	66000043 	strvs	r0, [r0], -r3, asr #32
     c14:	656d616c 	strbvs	r6, [sp, #-364]!	; 0xfffffe94
     c18:	0100632e 	tsteq	r0, lr, lsr #6
     c1c:	70730000 	rsbsvc	r0, r3, r0
     c20:	65746972 	ldrbvs	r6, [r4, #-2418]!	; 0xfffff68e
     c24:	0100682e 	tsteq	r0, lr, lsr #16
     c28:	6d690000 	stclvs	0, cr0, [r9, #-0]
     c2c:	2e656761 	cdpcs	7, 6, cr6, cr5, cr1, {3}
     c30:	00010068 	andeq	r0, r1, r8, rrx
     c34:	6d616700 	stclvs	7, cr6, [r1, #-0]
     c38:	6a626f65 	bvs	189c9d4 <startup-0x1e76362c>
     c3c:	2e746365 	cdpcs	3, 7, cr6, cr4, cr5, {3}
     c40:	00010068 	andeq	r0, r1, r8, rrx
     c44:	616c6600 	cmnvs	ip, r0, lsl #12
     c48:	5f31656d 	svcpl	0x0031656d
     c4c:	63616c62 	cmnvs	r1, #25088	; 0x6200
     c50:	62782e6b 	rsbsvs	r2, r8, #1712	; 0x6b0
     c54:	0001006d 	andeq	r0, r1, sp, rrx
     c58:	616c6600 	cmnvs	ip, r0, lsl #12
     c5c:	5f31656d 	svcpl	0x0031656d
     c60:	79617267 	stmdbvc	r1!, {r0, r1, r2, r5, r6, r9, ip, sp, lr}^
     c64:	6d62782e 	stclvs	8, cr7, [r2, #-184]!	; 0xffffff48
     c68:	00000100 	andeq	r0, r0, r0, lsl #2
     c6c:	6d616c66 	stclvs	12, cr6, [r1, #-408]!	; 0xfffffe68
     c70:	6c5f3165 	ldfvse	f3, [pc], {101}	; 0x65
     c74:	74686769 	strbtvc	r6, [r8], #-1897	; 0xfffff897
     c78:	6d62782e 	stclvs	8, cr7, [r2, #-184]!	; 0xffffff48
     c7c:	00000100 	andeq	r0, r0, r0, lsl #2
     c80:	6d616c66 	stclvs	12, cr6, [r1, #-408]!	; 0xfffffe68
     c84:	625f3265 	subsvs	r3, pc, #1342177286	; 0x50000006
     c88:	6b63616c 	blvs	18d9240 <startup-0x1e726dc0>
     c8c:	6d62782e 	stclvs	8, cr7, [r2, #-184]!	; 0xffffff48
     c90:	00000100 	andeq	r0, r0, r0, lsl #2
     c94:	6d616c66 	stclvs	12, cr6, [r1, #-408]!	; 0xfffffe68
     c98:	675f3265 	ldrbvs	r3, [pc, -r5, ror #4]
     c9c:	2e796172 	mrccs	1, 3, r6, cr9, cr2, {3}
     ca0:	006d6278 	rsbeq	r6, sp, r8, ror r2
     ca4:	66000001 	strvs	r0, [r0], -r1
     ca8:	656d616c 	strbvs	r6, [sp, #-364]!	; 0xfffffe94
     cac:	696c5f32 	stmdbvs	ip!, {r1, r4, r5, r8, r9, sl, fp, ip, lr}^
     cb0:	2e746867 	cdpcs	8, 7, cr6, cr4, cr7, {3}
     cb4:	006d6278 	rsbeq	r6, sp, r8, ror r2
     cb8:	66000001 	strvs	r0, [r0], -r1
     cbc:	656d616c 	strbvs	r6, [sp, #-364]!	; 0xfffffe94
     cc0:	6c625f33 	stclvs	15, cr5, [r2], #-204	; 0xffffff34
     cc4:	2e6b6361 	cdpcs	3, 6, cr6, cr11, cr1, {3}
     cc8:	006d6278 	rsbeq	r6, sp, r8, ror r2
     ccc:	66000001 	strvs	r0, [r0], -r1
     cd0:	656d616c 	strbvs	r6, [sp, #-364]!	; 0xfffffe94
     cd4:	72675f33 	rsbvc	r5, r7, #51, 30	; 0xcc
     cd8:	782e7961 	stmdavc	lr!, {r0, r5, r6, r8, fp, ip, sp, lr}
     cdc:	01006d62 	tsteq	r0, r2, ror #26
     ce0:	6c660000 	stclvs	0, cr0, [r6], #-0
     ce4:	33656d61 	cmncc	r5, #6208	; 0x1840
     ce8:	67696c5f 			; <UNDEFINED> instruction: 0x67696c5f
     cec:	782e7468 	stmdavc	lr!, {r3, r5, r6, sl, ip, sp, lr}
     cf0:	01006d62 	tsteq	r0, r2, ror #26
     cf4:	6c660000 	stclvs	0, cr0, [r6], #-0
     cf8:	34656d61 	strbtcc	r6, [r5], #-3425	; 0xfffff29f
     cfc:	616c625f 	cmnvs	ip, pc, asr r2
     d00:	782e6b63 	stmdavc	lr!, {r0, r1, r5, r6, r8, r9, fp, sp, lr}
     d04:	01006d62 	tsteq	r0, r2, ror #26
     d08:	6c660000 	stclvs	0, cr0, [r6], #-0
     d0c:	34656d61 	strbtcc	r6, [r5], #-3425	; 0xfffff29f
     d10:	6172675f 	cmnvs	r2, pc, asr r7
     d14:	62782e79 	rsbsvs	r2, r8, #1936	; 0x790
     d18:	0001006d 	andeq	r0, r1, sp, rrx
     d1c:	616c6600 	cmnvs	ip, r0, lsl #12
     d20:	5f34656d 	svcpl	0x0034656d
     d24:	6867696c 	stmdavs	r7!, {r2, r3, r5, r6, r8, fp, sp, lr}^
     d28:	62782e74 	rsbsvs	r2, r8, #116, 28	; 0x740
     d2c:	0001006d 	andeq	r0, r1, sp, rrx
     d30:	05000000 	streq	r0, [r0, #-0]
     d34:	00291c02 	eoreq	r1, r9, r2, lsl #24
     d38:	01310320 	teqeq	r1, r0, lsr #6
     d3c:	3d672f3e 	stclcc	15, cr2, [r7, #-248]!	; 0xffffff08
     d40:	2f3d672f 	svccs	0x003d672f
     d44:	672f3e67 	strvs	r3, [pc, -r7, ror #28]!
     d48:	3d672f3d 	stclcc	15, cr2, [r7, #-244]!	; 0xffffff0c
     d4c:	2f3f672f 	svccs	0x003f672f
     d50:	672f3d67 	strvs	r3, [pc, -r7, ror #26]!
     d54:	3e672f3d 	mcrcc	15, 3, r2, cr7, cr13, {1}
     d58:	2f3d672f 	svccs	0x003d672f
     d5c:	672f3d67 	strvs	r3, [pc, -r7, ror #26]!
     d60:	144d023e 	strbne	r0, [sp], #-574	; 0xfffffdc2
     d64:	3e2f4b4c 	vnmulcc.f64	d4, d15, d12
     d68:	5a59594b 	bpl	165729c <startup-0x1e9a8d64>
     d6c:	93919191 	orrsls	r9, r1, #1073741860	; 0x40000024
     d70:	3d3d3d3e 	ldccc	13, cr3, [sp, #-248]!	; 0xffffff08
     d74:	002f023d 	eoreq	r0, pc, sp, lsr r2	; <UNPREDICTABLE>
     d78:	02310101 	eorseq	r0, r1, #1073741824	; 0x40000000
     d7c:	00020000 	andeq	r0, r2, r0
     d80:	000001ba 			; <UNDEFINED> instruction: 0x000001ba
     d84:	0efb0102 	cdpeq	1, 15, cr0, cr11, cr2, {0}
     d88:	0101000d 	tsteq	r1, sp
     d8c:	00000101 	andeq	r0, r0, r1, lsl #2
     d90:	00000100 	andeq	r0, r0, r0, lsl #2
     d94:	2f3a4301 	svccs	0x003a4301
     d98:	2f706f6d 	svccs	0x00706f6d
     d9c:	6f4d2f63 	svcvs	0x004d2f63
     da0:	62616c70 	rsbvs	r6, r1, #112, 24	; 0x7000
     da4:	7461726f 	strbtvc	r7, [r1], #-623	; 0xfffffd91
     da8:	656e6f69 	strbvs	r6, [lr, #-3945]!	; 0xfffff097
     dac:	49442f72 	stmdbmi	r4, {r1, r4, r5, r6, r8, r9, sl, fp, sp}^
     db0:	572d7350 			; <UNDEFINED> instruction: 0x572d7350
     db4:	68637469 	stmdavs	r3!, {r0, r3, r5, r6, sl, ip, sp, lr}^
     db8:	0000432f 	andeq	r4, r0, pc, lsr #6
     dbc:	6d6f6f62 	stclvs	15, cr6, [pc, #-392]!	; c3c <startup-0x1ffff3c4>
     dc0:	0100632e 	tsteq	r0, lr, lsr #6
     dc4:	70730000 	rsbsvc	r0, r3, r0
     dc8:	65746972 	ldrbvs	r6, [r4, #-2418]!	; 0xfffff68e
     dcc:	0100682e 	tsteq	r0, lr, lsr #16
     dd0:	6d690000 	stclvs	0, cr0, [r9, #-0]
     dd4:	2e656761 	cdpcs	7, 6, cr6, cr5, cr1, {3}
     dd8:	00010068 	andeq	r0, r1, r8, rrx
     ddc:	6d616700 	stclvs	7, cr6, [r1, #-0]
     de0:	6a626f65 	bvs	189cb7c <startup-0x1e763484>
     de4:	2e746365 	cdpcs	3, 7, cr6, cr4, cr5, {3}
     de8:	00010068 	andeq	r0, r1, r8, rrx
     dec:	6f6f6200 	svcvs	0x006f6200
     df0:	625f316d 	subsvs	r3, pc, #1073741851	; 0x4000001b
     df4:	6b63616c 	blvs	18d93ac <startup-0x1e726c54>
     df8:	6d62782e 	stclvs	8, cr7, [r2, #-184]!	; 0xffffff48
     dfc:	00000100 	andeq	r0, r0, r0, lsl #2
     e00:	6d6f6f62 	stclvs	15, cr6, [pc, #-392]!	; c80 <startup-0x1ffff380>
     e04:	72675f31 	rsbvc	r5, r7, #49, 30	; 0xc4
     e08:	782e7961 	stmdavc	lr!, {r0, r5, r6, r8, fp, ip, sp, lr}
     e0c:	01006d62 	tsteq	r0, r2, ror #26
     e10:	6f620000 	svcvs	0x00620000
     e14:	5f316d6f 	svcpl	0x00316d6f
     e18:	6867696c 	stmdavs	r7!, {r2, r3, r5, r6, r8, fp, sp, lr}^
     e1c:	62782e74 	rsbsvs	r2, r8, #116, 28	; 0x740
     e20:	0001006d 	andeq	r0, r1, sp, rrx
     e24:	6f6f6200 	svcvs	0x006f6200
     e28:	625f326d 	subsvs	r3, pc, #-805306362	; 0xd0000006
     e2c:	6b63616c 	blvs	18d93e4 <startup-0x1e726c1c>
     e30:	6d62782e 	stclvs	8, cr7, [r2, #-184]!	; 0xffffff48
     e34:	00000100 	andeq	r0, r0, r0, lsl #2
     e38:	6d6f6f62 	stclvs	15, cr6, [pc, #-392]!	; cb8 <startup-0x1ffff348>
     e3c:	72675f32 	rsbvc	r5, r7, #50, 30	; 0xc8
     e40:	782e7961 	stmdavc	lr!, {r0, r5, r6, r8, fp, ip, sp, lr}
     e44:	01006d62 	tsteq	r0, r2, ror #26
     e48:	6f620000 	svcvs	0x00620000
     e4c:	5f326d6f 	svcpl	0x00326d6f
     e50:	6867696c 	stmdavs	r7!, {r2, r3, r5, r6, r8, fp, sp, lr}^
     e54:	62782e74 	rsbsvs	r2, r8, #116, 28	; 0x740
     e58:	0001006d 	andeq	r0, r1, sp, rrx
     e5c:	6f6f6200 	svcvs	0x006f6200
     e60:	625f336d 	subsvs	r3, pc, #-1275068415	; 0xb4000001
     e64:	6b63616c 	blvs	18d941c <startup-0x1e726be4>
     e68:	6d62782e 	stclvs	8, cr7, [r2, #-184]!	; 0xffffff48
     e6c:	00000100 	andeq	r0, r0, r0, lsl #2
     e70:	6d6f6f62 	stclvs	15, cr6, [pc, #-392]!	; cf0 <startup-0x1ffff310>
     e74:	72675f33 	rsbvc	r5, r7, #51, 30	; 0xcc
     e78:	782e7961 	stmdavc	lr!, {r0, r5, r6, r8, fp, ip, sp, lr}
     e7c:	01006d62 	tsteq	r0, r2, ror #26
     e80:	6f620000 	svcvs	0x00620000
     e84:	5f336d6f 	svcpl	0x00336d6f
     e88:	6867696c 	stmdavs	r7!, {r2, r3, r5, r6, r8, fp, sp, lr}^
     e8c:	62782e74 	rsbsvs	r2, r8, #116, 28	; 0x740
     e90:	0001006d 	andeq	r0, r1, sp, rrx
     e94:	6f6f6200 	svcvs	0x006f6200
     e98:	625f346d 	subsvs	r3, pc, #1828716544	; 0x6d000000
     e9c:	6b63616c 	blvs	18d9454 <startup-0x1e726bac>
     ea0:	6d62782e 	stclvs	8, cr7, [r2, #-184]!	; 0xffffff48
     ea4:	00000100 	andeq	r0, r0, r0, lsl #2
     ea8:	6d6f6f62 	stclvs	15, cr6, [pc, #-392]!	; d28 <startup-0x1ffff2d8>
     eac:	72675f34 	rsbvc	r5, r7, #52, 30	; 0xd0
     eb0:	782e7961 	stmdavc	lr!, {r0, r5, r6, r8, fp, ip, sp, lr}
     eb4:	01006d62 	tsteq	r0, r2, ror #26
     eb8:	6f620000 	svcvs	0x00620000
     ebc:	5f346d6f 	svcpl	0x00346d6f
     ec0:	6867696c 	stmdavs	r7!, {r2, r3, r5, r6, r8, fp, sp, lr}^
     ec4:	62782e74 	rsbsvs	r2, r8, #116, 28	; 0x740
     ec8:	0001006d 	andeq	r0, r1, sp, rrx
     ecc:	6f6f6200 	svcvs	0x006f6200
     ed0:	625f356d 	subsvs	r3, pc, #457179136	; 0x1b400000
     ed4:	6b63616c 	blvs	18d948c <startup-0x1e726b74>
     ed8:	6d62782e 	stclvs	8, cr7, [r2, #-184]!	; 0xffffff48
     edc:	00000100 	andeq	r0, r0, r0, lsl #2
     ee0:	6d6f6f62 	stclvs	15, cr6, [pc, #-392]!	; d60 <startup-0x1ffff2a0>
     ee4:	72675f35 	rsbvc	r5, r7, #53, 30	; 0xd4
     ee8:	782e7961 	stmdavc	lr!, {r0, r5, r6, r8, fp, ip, sp, lr}
     eec:	01006d62 	tsteq	r0, r2, ror #26
     ef0:	6f620000 	svcvs	0x00620000
     ef4:	5f356d6f 	svcpl	0x00356d6f
     ef8:	6867696c 	stmdavs	r7!, {r2, r3, r5, r6, r8, fp, sp, lr}^
     efc:	62782e74 	rsbsvs	r2, r8, #116, 28	; 0x740
     f00:	0001006d 	andeq	r0, r1, sp, rrx
     f04:	6f6f6200 	svcvs	0x006f6200
     f08:	625f366d 	subsvs	r3, pc, #114294784	; 0x6d00000
     f0c:	6b63616c 	blvs	18d94c4 <startup-0x1e726b3c>
     f10:	6d62782e 	stclvs	8, cr7, [r2, #-184]!	; 0xffffff48
     f14:	00000100 	andeq	r0, r0, r0, lsl #2
     f18:	6d6f6f62 	stclvs	15, cr6, [pc, #-392]!	; d98 <startup-0x1ffff268>
     f1c:	72675f36 	rsbvc	r5, r7, #54, 30	; 0xd8
     f20:	782e7961 	stmdavc	lr!, {r0, r5, r6, r8, fp, ip, sp, lr}
     f24:	01006d62 	tsteq	r0, r2, ror #26
     f28:	6f620000 	svcvs	0x00620000
     f2c:	5f366d6f 	svcpl	0x00366d6f
     f30:	6867696c 	stmdavs	r7!, {r2, r3, r5, r6, r8, fp, sp, lr}^
     f34:	62782e74 	rsbsvs	r2, r8, #116, 28	; 0x740
     f38:	0001006d 	andeq	r0, r1, sp, rrx
     f3c:	05000000 	streq	r0, [r0, #-0]
     f40:	002bc802 	eoreq	ip, fp, r2, lsl #16
     f44:	00cf0320 	sbceq	r0, pc, r0, lsr #6
     f48:	672f3e01 	strvs	r3, [pc, -r1, lsl #28]!
     f4c:	3d672f3d 	stclcc	15, cr2, [r7, #-244]!	; 0xffffff0c
     f50:	2f3e672f 	svccs	0x003e672f
     f54:	672f3d67 	strvs	r3, [pc, -r7, ror #26]!
     f58:	3f672f3d 	svccc	0x00672f3d
     f5c:	2f3d672f 	svccs	0x003d672f
     f60:	672f3d67 	strvs	r3, [pc, -r7, ror #26]!
     f64:	3d672f3e 	stclcc	15, cr2, [r7, #-248]!	; 0xffffff08
     f68:	2f3d672f 	svccs	0x003d672f
     f6c:	672f3e67 	strvs	r3, [pc, -r7, ror #28]!
     f70:	3d672f3d 	stclcc	15, cr2, [r7, #-244]!	; 0xffffff0c
     f74:	2f3e672f 	svccs	0x003e672f
     f78:	672f3d67 	strvs	r3, [pc, -r7, ror #26]!
     f7c:	3d672f3d 	stclcc	15, cr2, [r7, #-244]!	; 0xffffff0c
     f80:	4c147102 	ldfmis	f7, [r4], {2}
     f84:	4b3e2f59 	blmi	f8ccf0 <startup-0x1f073310>
     f88:	59595959 	ldmdbpl	r9, {r0, r3, r4, r6, r8, fp, ip, lr}^
     f8c:	59595959 	ldmdbpl	r9, {r0, r3, r4, r6, r8, fp, ip, lr}^
     f90:	75755959 	ldrbvc	r5, [r5, #-2393]!	; 0xfffff6a7
     f94:	91917675 	orrsls	r7, r1, r5, ror r6
     f98:	91919191 			; <UNDEFINED> instruction: 0x91919191
     f9c:	91919191 			; <UNDEFINED> instruction: 0x91919191
     fa0:	91919191 			; <UNDEFINED> instruction: 0x91919191
     fa4:	3d3d3e93 	ldccc	14, cr3, [sp, #-588]!	; 0xfffffdb4
     fa8:	66023d3d 			; <UNDEFINED> instruction: 0x66023d3d
     fac:	72010100 	andvc	r0, r1, #0, 2
     fb0:	02000003 	andeq	r0, r0, #3
     fb4:	00007c00 	andeq	r7, r0, r0, lsl #24
     fb8:	fb010200 	blx	417c2 <startup-0x1ffbe83e>
     fbc:	01000d0e 	tsteq	r0, lr, lsl #26
     fc0:	00010101 	andeq	r0, r1, r1, lsl #2
     fc4:	00010000 	andeq	r0, r1, r0
     fc8:	3a430100 	bcc	10c13d0 <startup-0x1ef3ec30>
     fcc:	706f6d2f 	rsbvc	r6, pc, pc, lsr #26
     fd0:	4d2f632f 	stcmi	3, cr6, [pc, #-188]!	; f1c <startup-0x1ffff0e4>
     fd4:	616c706f 	cmnvs	ip, pc, rrx
     fd8:	61726f62 	cmnvs	r2, r2, ror #30
     fdc:	6e6f6974 			; <UNDEFINED> instruction: 0x6e6f6974
     fe0:	442f7265 	strtmi	r7, [pc], #-613	; fe8 <startup-0x1ffff018>
     fe4:	2d735049 	ldclcs	0, cr5, [r3, #-292]!	; 0xfffffedc
     fe8:	63746957 	cmnvs	r4, #1425408	; 0x15c000
     fec:	00432f68 	subeq	r2, r3, r8, ror #30
     ff0:	61726700 	cmnvs	r2, r0, lsl #14
     ff4:	63696870 	cmnvs	r9, #112, 16	; 0x700000
     ff8:	00632e73 	rsbeq	r2, r3, r3, ror lr
     ffc:	73000001 	movwvc	r0, #1
    1000:	74697270 	strbtvc	r7, [r9], #-624	; 0xfffffd90
    1004:	00682e65 	rsbeq	r2, r8, r5, ror #28
    1008:	69000001 	stmdbvs	r0, {r0}
    100c:	6567616d 	strbvs	r6, [r7, #-365]!	; 0xfffffe93
    1010:	0100682e 	tsteq	r0, lr, lsr #16
    1014:	61670000 	cmnvs	r7, r0
    1018:	626f656d 	rsbvs	r6, pc, #457179136	; 0x1b400000
    101c:	7463656a 	strbtvc	r6, [r3], #-1386	; 0xfffffa96
    1020:	0100682e 	tsteq	r0, lr, lsr #16
    1024:	72670000 	rsbvc	r0, r7, #0
    1028:	69687061 	stmdbvs	r8!, {r0, r5, r6, ip, sp, lr}^
    102c:	682e7363 	stmdavs	lr!, {r0, r1, r5, r6, r8, r9, ip, sp, lr}
    1030:	00000100 	andeq	r0, r0, r0, lsl #2
    1034:	02050000 	andeq	r0, r5, #0
    1038:	200030f4 	strdcs	r3, [r0], -r4
    103c:	3d3d3015 	ldccc	0, cr3, [sp, #-84]!	; 0xffffffac
    1040:	02003d3d 	andeq	r3, r0, #3904	; 0xf40
    1044:	20060104 	andcs	r0, r6, r4, lsl #2
    1048:	a03d6706 	eorsge	r6, sp, r6, lsl #14
    104c:	3d3d3d30 	ldccc	13, cr3, [sp, #-192]!	; 0xffffff40
    1050:	0402003d 	streq	r0, [r2], #-61	; 0xffffffc3
    1054:	06200601 	strteq	r0, [r0], -r1, lsl #12
    1058:	4ba03d67 	blmi	fe8105fc <firstTime.4104+0xde7fc190>
    105c:	2f2f2f21 	svccs	0x002f2f21
    1060:	4f4c5e2a 	svcmi	0x004c5e2a
    1064:	035b5721 	cmpeq	fp, #8650752	; 0x840000
    1068:	004c4a09 	subeq	r4, ip, r9, lsl #20
    106c:	3d030402 	cfstrscc	mvf0, [r3, #-8]
    1070:	03040200 	movweq	r0, #16896	; 0x4200
    1074:	04020057 	streq	r0, [r2], #-87	; 0xffffffa9
    1078:	063c0601 	ldrteq	r0, [ip], -r1, lsl #12
    107c:	4b2f674c 	blmi	bdadb4 <startup-0x1f42524c>
    1080:	4b4b2f67 	blmi	12cce24 <startup-0x1ed331dc>
    1084:	5968a14b 	stmdbpl	r8!, {r0, r1, r3, r6, r8, sp, pc}^
    1088:	76598391 			; <UNDEFINED> instruction: 0x76598391
    108c:	83d75968 	bicshi	r5, r7, #104, 18	; 0x1a0000
    1090:	03676759 	cmneq	r7, #23330816	; 0x1640000
    1094:	6e037412 	cfmvdlrvs	mvd3, r7
    1098:	4a120320 	bmi	481d20 <startup-0x1fb7e2e0>
    109c:	3d207003 	stccc	0, cr7, [r0, #-12]!
    10a0:	3d3d223d 	lfmcc	f2, 4, [sp, #-244]!	; 0xffffff0c
    10a4:	223d3d22 	eorscs	r3, sp, #2176	; 0x880
    10a8:	4c223d3d 	stcmi	13, cr3, [r2], #-244	; 0xffffff0c
    10ac:	3d3d3d3e 	ldccc	13, cr3, [sp, #-248]!	; 0xffffff08
    10b0:	2f3d313d 	svccs	0x003d313d
    10b4:	03313d75 	teqeq	r1, #7488	; 0x1d40
    10b8:	23274a79 			; <UNDEFINED> instruction: 0x23274a79
    10bc:	3d67bc3d 	stclcc	12, cr11, [r7, #-244]!	; 0xffffff0c
    10c0:	593d3d3d 	ldmdbpl	sp!, {r0, r2, r3, r4, r5, r8, sl, fp, ip, sp}
    10c4:	592f3d2f 	stmdbpl	pc!, {r0, r1, r2, r3, r5, r8, sl, fp, ip, sp}	; <UNPREDICTABLE>
    10c8:	3d4b3e3d 	stclcc	14, cr3, [fp, #-244]	; 0xffffff0c
    10cc:	313d4b30 	teqcc	sp, r0, lsr fp
    10d0:	5967bc3d 	stmdbpl	r7!, {r0, r2, r3, r4, r5, sl, fp, ip, sp, pc}^
    10d4:	4b915a59 	blmi	fe457a40 <firstTime.4104+0xde4435d4>
    10d8:	2f3d2f59 	svccs	0x003d2f59
    10dc:	303d593e 	eorscc	r5, sp, lr, lsr r9
    10e0:	3d313d59 	ldccc	13, cr3, [r1, #-356]!	; 0xfffffe9c
    10e4:	91673d3d 	cmnls	r7, sp, lsr sp
    10e8:	3d3d593d 			; <UNDEFINED> instruction: 0x3d3d593d
    10ec:	3d914b83 	vldrcc	d4, [r1, #524]	; 0x20c
    10f0:	833d3d59 	teqhi	sp, #5696	; 0x1640
    10f4:	3e3d2f4c 	cdpcc	15, 3, cr2, cr13, cr12, {2}
    10f8:	3e3d3d3d 	mrccc	13, 1, r3, cr13, cr13, {1}
    10fc:	4b3e3d3d 	blmi	f905f8 <startup-0x1f06fa08>
    1100:	4b4b4b4b 	blmi	12d3e34 <startup-0x1ed2c1cc>
    1104:	4b3e3d3d 	blmi	f90600 <startup-0x1f06fa00>
    1108:	02004c9f 	andeq	r4, r0, #40704	; 0x9f00
    110c:	004b0304 	subeq	r0, fp, r4, lsl #6
    1110:	49030402 	stmdbmi	r3, {r1, sl}
    1114:	01040200 	mrseq	r0, R12_usr
    1118:	02005806 	andeq	r5, r0, #393216	; 0x60000
    111c:	46060204 	strmi	r0, [r6], -r4, lsl #4
    1120:	01040200 	mrseq	r0, R12_usr
    1124:	52065806 	andpl	r5, r6, #393216	; 0x60000
    1128:	002f764d 	eoreq	r7, pc, sp, asr #12
    112c:	06010402 	streq	r0, [r1], -r2, lsl #8
    1130:	0402004a 	streq	r0, [r2], #-74	; 0xffffffb6
    1134:	02004a02 	andeq	r4, r0, #8192	; 0x2000
    1138:	064a0304 	strbeq	r0, [sl], -r4, lsl #6
    113c:	3d13084c 	ldccc	8, cr0, [r3, #-304]	; 0xfffffed0
    1140:	3dbc3e3d 	ldccc	14, cr3, [ip, #244]!	; 0xf4
    1144:	d93d7676 	ldmdble	sp!, {r1, r2, r4, r5, r6, r9, sl, ip, sp, lr}
    1148:	3d23d71f 	stccc	7, cr13, [r3, #-124]!	; 0xffffff84
    114c:	23d71fd9 	bicscs	r1, r7, #868	; 0x364
    1150:	d71fd93d 			; <UNDEFINED> instruction: 0xd71fd93d
    1154:	032e6103 			; <UNDEFINED> instruction: 0x032e6103
    1158:	4cae2023 	stcmi	0, cr2, [lr], #140	; 0x8c
    115c:	00673d3d 	rsbeq	r3, r7, sp, lsr sp
    1160:	3e020402 	cdpcc	4, 0, cr0, cr2, cr2, {0}
    1164:	02040200 	andeq	r0, r4, #0, 4
    1168:	04020038 	streq	r0, [r2], #-56	; 0xffffffc8
    116c:	003c0601 	eorseq	r0, ip, r1, lsl #12
    1170:	06020402 	streq	r0, [r2], -r2, lsl #8
    1174:	0402003b 	streq	r0, [r2], #-59	; 0xffffffc5
    1178:	063c0601 	ldrteq	r0, [ip], -r1, lsl #12
    117c:	693e244e 	ldmdbvs	lr!, {r1, r2, r3, r6, sl, sp}
    1180:	01040200 	mrseq	r0, R12_usr
    1184:	02004a06 	andeq	r4, r0, #24576	; 0x6000
    1188:	004a0204 	subeq	r0, sl, r4, lsl #4
    118c:	4a030402 	bmi	c219c <startup-0x1ff3de64>
    1190:	08754b06 	ldmdaeq	r5!, {r1, r2, r8, r9, fp, lr}^
    1194:	59595913 	ldmdbpl	r9, {r0, r1, r4, r8, fp, ip, lr}^
    1198:	59595959 	ldmdbpl	r9, {r0, r3, r4, r6, r8, fp, ip, lr}^
    119c:	3d763d5b 	ldclcc	13, cr3, [r6, #-364]!	; 0xfffffe94
    11a0:	3e4b4c4b 	cdpcc	12, 4, cr4, cr11, cr11, {2}
    11a4:	ca9fd8c9 	bgt	fe7f74d0 <firstTime.4104+0xde7e3064>
    11a8:	03a0ae3d 	moveq	sl, #976	; 0x3d0
    11ac:	2303ac5e 	movwcs	sl, #15454	; 0x3c5e
    11b0:	2f4c7620 	svccs	0x004c7620
    11b4:	04020059 	streq	r0, [r2], #-89	; 0xffffffa7
    11b8:	00580601 	subseq	r0, r8, r1, lsl #12
    11bc:	2e020402 	cdpcs	4, 0, cr0, cr2, cr2, {0}
    11c0:	04040200 	streq	r0, [r4], #-512	; 0xfffffe00
    11c4:	04020020 	streq	r0, [r2], #-32	; 0xffffffe0
    11c8:	593d0604 	ldmdbpl	sp!, {r2, r9, sl}
    11cc:	020075d7 	andeq	r7, r0, #901775360	; 0x35c00000
    11d0:	00590304 	subseq	r0, r9, r4, lsl #6
    11d4:	ab030402 	blge	c21e4 <startup-0x1ff3de1c>
    11d8:	01040200 	mrseq	r0, R12_usr
    11dc:	02009e06 	andeq	r9, r0, #6, 28	; 0x60
    11e0:	55060204 	strpl	r0, [r6, #-516]	; 0xfffffdfc
    11e4:	01040200 	mrseq	r0, R12_usr
    11e8:	02007406 	andeq	r7, r0, #100663296	; 0x6000000
    11ec:	56060204 	strpl	r0, [r6], -r4, lsl #4
    11f0:	01040200 	mrseq	r0, R12_usr
    11f4:	03067406 	movweq	r7, #25606	; 0x6406
    11f8:	7652580a 	ldrbvc	r5, [r2], -sl, lsl #16
    11fc:	3d595a59 	vldrcc	s11, [r9, #-356]	; 0xfffffe9c
    1200:	913dbb3d 	teqls	sp, sp, lsr fp
    1204:	67083de6 	strvs	r3, [r8, -r6, ror #27]
    1208:	02040200 	andeq	r0, r4, #0, 4
    120c:	66087a03 	strvs	r7, [r8], -r3, lsl #20
    1210:	01040200 	mrseq	r0, R12_usr
    1214:	02003c06 	andeq	r3, r0, #1536	; 0x600
    1218:	3a060204 	bcc	181a30 <startup-0x1fe7e5d0>
    121c:	01040200 	mrseq	r0, R12_usr
    1220:	02003c06 	andeq	r3, r0, #1536	; 0x600
    1224:	49060204 	stmdbmi	r6, {r2, r9}
    1228:	01040200 	mrseq	r0, R12_usr
    122c:	03063c06 	movweq	r3, #27654	; 0x6c06
    1230:	774c580e 	strbvc	r5, [ip, -lr, lsl #16]
    1234:	0402003d 	streq	r0, [r2], #-61	; 0xffffffc3
    1238:	02003d03 	andeq	r3, r0, #3, 26	; 0xc0
    123c:	00650304 	rsbeq	r0, r5, r4, lsl #6
    1240:	06010402 	streq	r0, [r1], -r2, lsl #8
    1244:	0402003c 	streq	r0, [r2], #-60	; 0xffffffc4
    1248:	00650602 	rsbeq	r0, r5, r2, lsl #12
    124c:	06010402 	streq	r0, [r1], -r2, lsl #8
    1250:	4c6b063c 	stclmi	6, cr0, [fp], #-240	; 0xffffff10
    1254:	02003d77 	andeq	r3, r0, #7616	; 0x1dc0
    1258:	003d0304 	eorseq	r0, sp, r4, lsl #6
    125c:	65030402 	strvs	r0, [r3, #-1026]	; 0xfffffbfe
    1260:	01040200 	mrseq	r0, R12_usr
    1264:	02003c06 	andeq	r3, r0, #1536	; 0x600
    1268:	65060204 	strvs	r0, [r6, #-516]	; 0xfffffdfc
    126c:	01040200 	mrseq	r0, R12_usr
    1270:	6b063c06 	blvs	190290 <startup-0x1fe6fd70>
    1274:	2f2f3d4d 	svccs	0x002f3d4d
    1278:	6930302f 	ldmdbvs	r0!, {r0, r1, r2, r3, r5, ip, sp}
    127c:	01040200 	mrseq	r0, R12_usr
    1280:	04020030 	streq	r0, [r2], #-48	; 0xffffffd0
    1284:	02002f01 	andeq	r2, r0, #1, 30
    1288:	00670104 	rsbeq	r0, r7, r4, lsl #2
    128c:	c9010402 	stmdbgt	r1, {r1, sl}
    1290:	01040200 	mrseq	r0, R12_usr
    1294:	02001308 	andeq	r1, r0, #8, 6	; 0x20000000
    1298:	004b0104 	subeq	r0, fp, r4, lsl #2
    129c:	2f010402 	svccs	0x00010402
    12a0:	01040200 	mrseq	r0, R12_usr
    12a4:	04020068 	streq	r0, [r2], #-104	; 0xffffff98
    12a8:	0200c901 	andeq	ip, r0, #16384	; 0x4000
    12ac:	13080104 	movwne	r0, #33028	; 0x8104
    12b0:	01040200 	mrseq	r0, R12_usr
    12b4:	04020092 	streq	r0, [r2], #-146	; 0xffffff6e
    12b8:	02004b01 	andeq	r4, r0, #1024	; 0x400
    12bc:	003e0104 	eorseq	r0, lr, r4, lsl #2
    12c0:	2f010402 	svccs	0x00010402
    12c4:	01040200 	mrseq	r0, R12_usr
    12c8:	04020067 	streq	r0, [r2], #-103	; 0xffffff99
    12cc:	00130801 	andseq	r0, r3, r1, lsl #16
    12d0:	4c010402 	cfstrsmi	mvf0, [r1], {2}
    12d4:	01040200 	mrseq	r0, R12_usr
    12d8:	033c6c03 	teqeq	ip, #768	; 0x300
    12dc:	003e3c19 	eorseq	r3, lr, r9, lsl ip
    12e0:	3d030402 	cfstrscc	mvf0, [r3, #-8]
    12e4:	03040200 	movweq	r0, #16896	; 0x4200
    12e8:	02009108 	andeq	r9, r0, #8, 2
    12ec:	91080304 	tstls	r8, r4, lsl #6
    12f0:	03040200 	movweq	r0, #16896	; 0x4200
    12f4:	02009108 	andeq	r9, r0, #8, 2
    12f8:	46080304 	strmi	r0, [r8], -r4, lsl #6
    12fc:	01040200 	mrseq	r0, R12_usr
    1300:	50063c06 	andpl	r3, r6, r6, lsl #24
    1304:	3d4b3e08 	stclcc	14, cr3, [fp, #-32]	; 0xffffffe0
    1308:	21082108 	tstcs	r8, r8, lsl #2
    130c:	4b4d2108 	blmi	1349734 <startup-0x1ecb68cc>
    1310:	3e4b2130 	mcrcc	1, 2, r2, cr11, cr0, {1}
    1314:	3e4b3e4b 	cdpcc	14, 4, cr3, cr11, cr11, {2}
    1318:	3c75034b 	ldclcc	3, cr0, [r5], #-300	; 0xfffffed4
    131c:	30580e03 	subscc	r0, r8, r3, lsl #28
    1320:	01000b02 	tsteq	r0, r2, lsl #22
    1324:	00007201 	andeq	r7, r0, r1, lsl #4
    1328:	5b000200 	blpl	1b30 <startup-0x1fffe4d0>
    132c:	02000000 	andeq	r0, r0, #0
    1330:	0d0efb01 	vstreq	d15, [lr, #-4]
    1334:	01010100 	mrseq	r0, (UNDEF: 17)
    1338:	00000001 	andeq	r0, r0, r1
    133c:	01000001 	tsteq	r0, r1
    1340:	6d2f3a43 	vstmdbvs	pc!, {s6-s72}
    1344:	632f706f 			; <UNDEFINED> instruction: 0x632f706f
    1348:	706f4d2f 	rsbvc	r4, pc, pc, lsr #26
    134c:	6f62616c 	svcvs	0x0062616c
    1350:	69746172 	ldmdbvs	r4!, {r1, r4, r5, r6, r8, sp, lr}^
    1354:	72656e6f 	rsbvc	r6, r5, #1776	; 0x6f0
    1358:	5049442f 	subpl	r4, r9, pc, lsr #8
    135c:	69572d73 	ldmdbvs	r7, {r0, r1, r4, r5, r6, r8, sl, fp, sp}^
    1360:	2f686374 	svccs	0x00686374
    1364:	69000043 	stmdbvs	r0, {r0, r1, r6}
    1368:	6567616d 	strbvs	r6, [r7, #-365]!	; 0xfffffe93
    136c:	0100632e 	tsteq	r0, lr, lsr #6
    1370:	70730000 	rsbsvc	r0, r3, r0
    1374:	65746972 	ldrbvs	r6, [r4, #-2418]!	; 0xfffff68e
    1378:	0100682e 	tsteq	r0, lr, lsr #16
    137c:	6d690000 	stclvs	0, cr0, [r9, #-0]
    1380:	2e656761 	cdpcs	7, 6, cr6, cr5, cr1, {3}
    1384:	00010068 	andeq	r0, r1, r8, rrx
    1388:	05000000 	streq	r0, [r0, #-0]
    138c:	003f8402 	eorseq	r8, pc, r2, lsl #8
    1390:	3d751420 	cfldrdcc	mvd1, [r5, #-128]!	; 0xffffff80
    1394:	04023d3d 	streq	r3, [r2], #-3389	; 0xfffff2c3
    1398:	68010100 	stmdavs	r1, {r8}
    139c:	02000000 	andeq	r0, r0, #0
    13a0:	00005100 	andeq	r5, r0, r0, lsl #2
    13a4:	fb010200 	blx	41bae <startup-0x1ffbe452>
    13a8:	01000d0e 	tsteq	r0, lr, lsl #26
    13ac:	00010101 	andeq	r0, r1, r1, lsl #2
    13b0:	00010000 	andeq	r0, r1, r0
    13b4:	3a430100 	bcc	10c17bc <startup-0x1ef3e844>
    13b8:	706f6d2f 	rsbvc	r6, pc, pc, lsr #26
    13bc:	4d2f632f 	stcmi	3, cr6, [pc, #-188]!	; 1308 <startup-0x1fffecf8>
    13c0:	616c706f 	cmnvs	ip, pc, rrx
    13c4:	61726f62 	cmnvs	r2, r2, ror #30
    13c8:	6e6f6974 			; <UNDEFINED> instruction: 0x6e6f6974
    13cc:	442f7265 	strtmi	r7, [pc], #-613	; 13d4 <startup-0x1fffec2c>
    13d0:	2d735049 	ldclcs	0, cr5, [r3, #-292]!	; 0xfffffedc
    13d4:	63746957 	cmnvs	r4, #1425408	; 0x15c000
    13d8:	00432f68 	subeq	r2, r3, r8, ror #30
    13dc:	72707300 	rsbsvc	r7, r0, #0, 6
    13e0:	2e657469 	cdpcs	4, 6, cr7, cr5, cr9, {3}
    13e4:	00010063 	andeq	r0, r1, r3, rrx
    13e8:	72707300 	rsbsvc	r7, r0, #0, 6
    13ec:	2e657469 	cdpcs	4, 6, cr7, cr5, cr9, {3}
    13f0:	00010068 	andeq	r0, r1, r8, rrx
    13f4:	05000000 	streq	r0, [r0, #-0]
    13f8:	003fac02 	eorseq	sl, pc, r2, lsl #24
    13fc:	3d751520 	cfldr64cc	mvdx1, [r5, #-128]!	; 0xffffff80
    1400:	04023d3d 	streq	r3, [r2], #-3389	; 0xfffff2c3
    1404:	6c010100 	stfvss	f0, [r1], {-0}
    1408:	02000000 	andeq	r0, r0, #0
    140c:	00004d00 	andeq	r4, r0, r0, lsl #26
    1410:	fb010200 	blx	41c1a <startup-0x1ffbe3e6>
    1414:	01000d0e 	tsteq	r0, lr, lsl #26
    1418:	00010101 	andeq	r0, r1, r1, lsl #2
    141c:	00010000 	andeq	r0, r1, r0
    1420:	3a430100 	bcc	10c1828 <startup-0x1ef3e7d8>
    1424:	706f6d2f 	rsbvc	r6, pc, pc, lsr #26
    1428:	4d2f632f 	stcmi	3, cr6, [pc, #-188]!	; 1374 <startup-0x1fffec8c>
    142c:	616c706f 	cmnvs	ip, pc, rrx
    1430:	61726f62 	cmnvs	r2, r2, ror #30
    1434:	6e6f6974 			; <UNDEFINED> instruction: 0x6e6f6974
    1438:	442f7265 	strtmi	r7, [pc], #-613	; 1440 <startup-0x1fffebc0>
    143c:	2d735049 	ldclcs	0, cr5, [r3, #-292]!	; 0xfffffedc
    1440:	63746957 	cmnvs	r4, #1425408	; 0x15c000
    1444:	00432f68 	subeq	r2, r3, r8, ror #30
    1448:	69706700 	ldmdbvs	r0!, {r8, r9, sl, sp, lr}^
    144c:	00632e6f 	rsbeq	r2, r3, pc, ror #28
    1450:	67000001 	strvs	r0, [r0, -r1]
    1454:	2e6f6970 			; <UNDEFINED> instruction: 0x2e6f6970
    1458:	00010068 	andeq	r0, r1, r8, rrx
    145c:	05000000 	streq	r0, [r0, #-0]
    1460:	003fd402 	eorseq	sp, pc, r2, lsl #8
    1464:	3d2f1520 	cfstr32cc	mvfx1, [pc, #-128]!	; 13ec <startup-0x1fffec14>
    1468:	3d592f76 	ldclcc	15, cr2, [r9, #-472]	; 0xfffffe28
    146c:	91674b69 	cmnls	r7, r9, ror #22
    1470:	04022230 	streq	r2, [r2], #-560	; 0xfffffdd0
    1474:	5a010100 	bpl	4187c <startup-0x1ffbe784>
    1478:	02000001 	andeq	r0, r0, #1
    147c:	00008100 	andeq	r8, r0, r0, lsl #2
    1480:	fb010200 	blx	41c8a <startup-0x1ffbe376>
    1484:	01000d0e 	tsteq	r0, lr, lsl #26
    1488:	00010101 	andeq	r0, r1, r1, lsl #2
    148c:	00010000 	andeq	r0, r1, r0
    1490:	3a430100 	bcc	10c1898 <startup-0x1ef3e768>
    1494:	706f6d2f 	rsbvc	r6, pc, pc, lsr #26
    1498:	4d2f632f 	stcmi	3, cr6, [pc, #-188]!	; 13e4 <startup-0x1fffec1c>
    149c:	616c706f 	cmnvs	ip, pc, rrx
    14a0:	61726f62 	cmnvs	r2, r2, ror #30
    14a4:	6e6f6974 			; <UNDEFINED> instruction: 0x6e6f6974
    14a8:	442f7265 	strtmi	r7, [pc], #-613	; 14b0 <startup-0x1fffeb50>
    14ac:	2d735049 	ldclcs	0, cr5, [r3, #-292]!	; 0xfffffedc
    14b0:	63746957 	cmnvs	r4, #1425408	; 0x15c000
    14b4:	00432f68 	subeq	r2, r3, r8, ror #30
    14b8:	63736100 	cmnvs	r3, #0, 2
    14bc:	645f6969 	ldrbvs	r6, [pc], #-2409	; 14c4 <startup-0x1fffeb3c>
    14c0:	6c707369 	ldclvs	3, cr7, [r0], #-420	; 0xfffffe5c
    14c4:	632e7961 			; <UNDEFINED> instruction: 0x632e7961
    14c8:	00000100 	andeq	r0, r0, r0, lsl #2
    14cc:	69727073 	ldmdbvs	r2!, {r0, r1, r4, r5, r6, ip, sp, lr}^
    14d0:	682e6574 	stmdavs	lr!, {r2, r4, r5, r6, r8, sl, sp, lr}
    14d4:	00000100 	andeq	r0, r0, r0, lsl #2
    14d8:	67616d69 	strbvs	r6, [r1, -r9, ror #26]!
    14dc:	00682e65 	rsbeq	r2, r8, r5, ror #28
    14e0:	67000001 	strvs	r0, [r0, -r1]
    14e4:	6f656d61 	svcvs	0x00656d61
    14e8:	63656a62 	cmnvs	r5, #401408	; 0x62000
    14ec:	00682e74 	rsbeq	r2, r8, r4, ror lr
    14f0:	67000001 	strvs	r0, [r0, -r1]
    14f4:	68706172 	ldmdavs	r0!, {r1, r4, r5, r6, r8, sp, lr}^
    14f8:	2e736369 	cdpcs	3, 7, cr6, cr3, cr9, {3}
    14fc:	00010068 	andeq	r0, r1, r8, rrx
    1500:	05000000 	streq	r0, [r0, #-0]
    1504:	00404002 	subeq	r4, r0, r2
    1508:	012e0320 			; <UNDEFINED> instruction: 0x012e0320
    150c:	59bb5969 	ldmibpl	fp!, {r0, r3, r5, r6, r8, fp, ip, lr}
    1510:	08596968 	ldmdaeq	r9, {r3, r5, r6, r8, fp, sp, lr}^
    1514:	67765913 			; <UNDEFINED> instruction: 0x67765913
    1518:	4c593d3d 	mrrcmi	13, 3, r3, r9, cr13
    151c:	593d3d67 	ldmdbpl	sp!, {r0, r1, r2, r5, r6, r8, sl, fp, ip, sp}
    1520:	3d673e4c 	stclcc	14, cr3, [r7, #-304]!	; 0xfffffed0
    1524:	67675a3d 			; <UNDEFINED> instruction: 0x67675a3d
    1528:	673e842f 	ldrvs	r8, [lr, -pc, lsr #8]!
    152c:	675a3d3d 	smmlarvs	sl, sp, sp, r3
    1530:	67842f67 	strvs	r2, [r4, r7, ror #30]
    1534:	3d2f4b3d 	fstmdbxcc	pc!, {d4-d33}	;@ Deprecated
    1538:	2f3d3e68 	svccs	0x003d3e68
    153c:	2f3d4b2f 	svccs	0x003d4b2f
    1540:	02006776 	andeq	r6, r0, #30932992	; 0x1d80000
    1544:	20060104 	andcs	r0, r6, r4, lsl #2
    1548:	593d8306 	ldmdbpl	sp!, {r1, r2, r8, r9, pc}
    154c:	67914c3d 			; <UNDEFINED> instruction: 0x67914c3d
    1550:	4c9f764b 	ldcmi	6, cr7, [pc], {75}	; 0x4b
    1554:	04020030 	streq	r0, [r2], #-48	; 0xffffffd0
    1558:	06200601 	strteq	r0, [r0], -r1, lsl #12
    155c:	3f3d3d83 	svccc	0x003d3d83
    1560:	01040200 	mrseq	r0, R12_usr
    1564:	83062006 	movwhi	r2, #24582	; 0x6006
    1568:	003f3d3d 	eorseq	r3, pc, sp, lsr sp	; <UNPREDICTABLE>
    156c:	06010402 	streq	r0, [r1], -r2, lsl #8
    1570:	3d830620 	stccc	6, cr0, [r3, #128]	; 0x80
    1574:	02003f3d 	andeq	r3, r0, #61, 30	; 0xf4
    1578:	20060104 	andcs	r0, r6, r4, lsl #2
    157c:	3d3d8306 	ldccc	3, cr8, [sp, #-24]!	; 0xffffffe8
    1580:	3d343e3f 	ldccc	14, cr3, [r4, #-252]!	; 0xffffff04
    1584:	2f2f2f84 	svccs	0x002f2f84
    1588:	2f843e3e 	svccs	0x00843e3e
    158c:	4d73214b 	ldfmie	f2, [r3, #-300]!	; 0xfffffed4
    1590:	73214b2f 			; <UNDEFINED> instruction: 0x73214b2f
    1594:	3059684d 	subscc	r6, r9, sp, asr #16
    1598:	4d73214b 	ldfmie	f2, [r3, #-300]!	; 0xfffffed4
    159c:	4e73214b 	rpwmism	f2, f3, #3.0
    15a0:	30754c4b 	rsbscc	r4, r5, fp, asr #24
    15a4:	213d2f4b 	teqcs	sp, fp, asr #30
    15a8:	04020073 	streq	r0, [r2], #-115	; 0xffffff8d
    15ac:	064a0601 	strbeq	r0, [sl], -r1, lsl #12
    15b0:	3d2f4b6b 	fstmdbxcc	pc!, {d4-d56}	;@ Deprecated
    15b4:	02007321 	andeq	r7, r0, #-2080374784	; 0x84000000
    15b8:	4a060104 	bmi	1819d0 <startup-0x1fe7e630>
    15bc:	4e4b6b06 	vmlami.f64	d22, d11, d6
    15c0:	2f68753e 	svccs	0x0068753e
    15c4:	213d4b2f 	teqcs	sp, pc, lsr #22
    15c8:	2f4b4d73 	svccs	0x004b4d73
    15cc:	214d7321 	cmpcs	sp, r1, lsr #6
    15d0:	01000802 	tsteq	r0, r2, lsl #16
    15d4:	00007601 	andeq	r7, r0, r1, lsl #12
    15d8:	57000200 	strpl	r0, [r0, -r0, lsl #4]
    15dc:	02000000 	andeq	r0, r0, #0
    15e0:	0d0efb01 	vstreq	d15, [lr, #-4]
    15e4:	01010100 	mrseq	r0, (UNDEF: 17)
    15e8:	00000001 	andeq	r0, r0, r1
    15ec:	01000001 	tsteq	r0, r1
    15f0:	6d2f3a43 	vstmdbvs	pc!, {s6-s72}
    15f4:	632f706f 			; <UNDEFINED> instruction: 0x632f706f
    15f8:	706f4d2f 	rsbvc	r4, pc, pc, lsr #26
    15fc:	6f62616c 	svcvs	0x0062616c
    1600:	69746172 	ldmdbvs	r4!, {r1, r4, r5, r6, r8, sp, lr}^
    1604:	72656e6f 	rsbvc	r6, r5, #1776	; 0x6f0
    1608:	5049442f 	subpl	r4, r9, pc, lsr #8
    160c:	69572d73 	ldmdbvs	r7, {r0, r1, r4, r5, r6, r8, sl, fp, sp}^
    1610:	2f686374 	svccs	0x00686374
    1614:	73000043 	movwvc	r0, #67	; 0x43
    1618:	5f776f6c 	svcpl	0x00776f6c
    161c:	74786574 	ldrbtvc	r6, [r8], #-1396	; 0xfffffa8c
    1620:	0100632e 	tsteq	r0, lr, lsr #6
    1624:	6c730000 	ldclvs	0, cr0, [r3], #-0
    1628:	745f776f 	ldrbvc	r7, [pc], #-1903	; 1630 <startup-0x1fffe9d0>
    162c:	2e747865 	cdpcs	8, 7, cr7, cr4, cr5, {3}
    1630:	00010068 	andeq	r0, r1, r8, rrx
    1634:	05000000 	streq	r0, [r0, #-0]
    1638:	00456002 	subeq	r6, r5, r2
    163c:	9f591520 	svcls	0x00591520
    1640:	4c5984c9 	cfldrdmi	mvd8, [r9], {201}	; 0xc9
    1644:	3d3d3d75 	ldccc	13, cr3, [sp, #-468]!	; 0xfffffe2c
    1648:	07023d3d 	smladxeq	r2, sp, sp, r3
    164c:	d6010100 	strle	r0, [r1], -r0, lsl #2
    1650:	02000000 	andeq	r0, r0, #0
    1654:	0000ab00 	andeq	sl, r0, r0, lsl #22
    1658:	fb010200 	blx	41e62 <startup-0x1ffbe19e>
    165c:	01000d0e 	tsteq	r0, lr, lsl #26
    1660:	00010101 	andeq	r0, r1, r1, lsl #2
    1664:	00010000 	andeq	r0, r1, r0
    1668:	3a430100 	bcc	10c1a70 <startup-0x1ef3e590>
    166c:	706f6d2f 	rsbvc	r6, pc, pc, lsr #26
    1670:	4d2f632f 	stcmi	3, cr6, [pc, #-188]!	; 15bc <startup-0x1fffea44>
    1674:	616c706f 	cmnvs	ip, pc, rrx
    1678:	61726f62 	cmnvs	r2, r2, ror #30
    167c:	6e6f6974 			; <UNDEFINED> instruction: 0x6e6f6974
    1680:	442f7265 	strtmi	r7, [pc], #-613	; 1688 <startup-0x1fffe978>
    1684:	2d735049 	ldclcs	0, cr5, [r3, #-292]!	; 0xfffffedc
    1688:	63746957 	cmnvs	r4, #1425408	; 0x15c000
    168c:	00432f68 	subeq	r2, r3, r8, ror #30
    1690:	646e6900 	strbtvs	r6, [lr], #-2304	; 0xfffff700
    1694:	73726f6f 	cmnvc	r2, #444	; 0x1bc
    1698:	0100632e 	tsteq	r0, lr, lsr #6
    169c:	70730000 	rsbsvc	r0, r3, r0
    16a0:	65746972 	ldrbvs	r6, [r4, #-2418]!	; 0xfffff68e
    16a4:	0100682e 	tsteq	r0, lr, lsr #16
    16a8:	6d690000 	stclvs	0, cr0, [r9, #-0]
    16ac:	2e656761 	cdpcs	7, 6, cr6, cr5, cr1, {3}
    16b0:	00010068 	andeq	r0, r1, r8, rrx
    16b4:	6d616700 	stclvs	7, cr6, [r1, #-0]
    16b8:	6a626f65 	bvs	189d454 <startup-0x1e762bac>
    16bc:	2e746365 	cdpcs	3, 7, cr6, cr4, cr5, {3}
    16c0:	00010068 	andeq	r0, r1, r8, rrx
    16c4:	646e6900 	strbtvs	r6, [lr], #-2304	; 0xfffff700
    16c8:	73726f6f 	cmnvc	r2, #444	; 0x1bc
    16cc:	616c625f 	cmnvs	ip, pc, asr r2
    16d0:	782e6b63 	stmdavc	lr!, {r0, r1, r5, r6, r8, r9, fp, sp, lr}
    16d4:	01006d62 	tsteq	r0, r2, ror #26
    16d8:	6e690000 	cdpvs	0, 6, cr0, cr9, cr0, {0}
    16dc:	726f6f64 	rsbvc	r6, pc, #100, 30	; 0x190
    16e0:	72675f73 	rsbvc	r5, r7, #460	; 0x1cc
    16e4:	782e7961 	stmdavc	lr!, {r0, r5, r6, r8, fp, ip, sp, lr}
    16e8:	01006d62 	tsteq	r0, r2, ror #26
    16ec:	6e690000 	cdpvs	0, 6, cr0, cr9, cr0, {0}
    16f0:	726f6f64 	rsbvc	r6, pc, #100, 30	; 0x190
    16f4:	696c5f73 	stmdbvs	ip!, {r0, r1, r4, r5, r6, r8, r9, sl, fp, ip, lr}^
    16f8:	2e746867 	cdpcs	8, 7, cr6, cr4, cr7, {3}
    16fc:	006d6278 	rsbeq	r6, sp, r8, ror r2
    1700:	00000001 	andeq	r0, r0, r1
    1704:	f4020500 	vst3.8	{d0,d2,d4}, [r2], r0
    1708:	03200045 			; <UNDEFINED> instruction: 0x03200045
    170c:	2f3e0113 	svccs	0x003e0113
    1710:	672f3d67 	strvs	r3, [pc, -r7, ror #26]!
    1714:	3e672f3d 	mcrcc	15, 3, r2, cr7, cr13, {1}
    1718:	4b4c5a08 	blmi	1317f40 <startup-0x1ece80c0>
    171c:	934c3e2f 	movtls	r3, #52783	; 0xce2f
    1720:	3d3d3d3e 	ldccc	13, cr3, [sp, #-248]!	; 0xffffff08
    1724:	0100083d 	tsteq	r0, sp, lsr r8
    1728:	0000da01 	andeq	sp, r0, r1, lsl #20
    172c:	af000200 	svcge	0x00000200
    1730:	02000000 	andeq	r0, r0, #0
    1734:	0d0efb01 	vstreq	d15, [lr, #-4]
    1738:	01010100 	mrseq	r0, (UNDEF: 17)
    173c:	00000001 	andeq	r0, r0, r1
    1740:	01000001 	tsteq	r0, r1
    1744:	6d2f3a43 	vstmdbvs	pc!, {s6-s72}
    1748:	632f706f 			; <UNDEFINED> instruction: 0x632f706f
    174c:	706f4d2f 	rsbvc	r4, pc, pc, lsr #26
    1750:	6f62616c 	svcvs	0x0062616c
    1754:	69746172 	ldmdbvs	r4!, {r1, r4, r5, r6, r8, sp, lr}^
    1758:	72656e6f 	rsbvc	r6, r5, #1776	; 0x6f0
    175c:	5049442f 	subpl	r4, r9, pc, lsr #8
    1760:	69572d73 	ldmdbvs	r7, {r0, r1, r4, r5, r6, r8, sl, fp, sp}^
    1764:	2f686374 	svccs	0x00686374
    1768:	69000043 	stmdbvs	r0, {r0, r1, r6}
    176c:	6f6f646e 	svcvs	0x006f646e
    1770:	2e327372 	mrccs	3, 1, r7, cr2, cr2, {3}
    1774:	00010063 	andeq	r0, r1, r3, rrx
    1778:	72707300 	rsbsvc	r7, r0, #0, 6
    177c:	2e657469 	cdpcs	4, 6, cr7, cr5, cr9, {3}
    1780:	00010068 	andeq	r0, r1, r8, rrx
    1784:	616d6900 	cmnvs	sp, r0, lsl #18
    1788:	682e6567 	stmdavs	lr!, {r0, r1, r2, r5, r6, r8, sl, sp, lr}
    178c:	00000100 	andeq	r0, r0, r0, lsl #2
    1790:	656d6167 	strbvs	r6, [sp, #-359]!	; 0xfffffe99
    1794:	656a626f 	strbvs	r6, [sl, #-623]!	; 0xfffffd91
    1798:	682e7463 	stmdavs	lr!, {r0, r1, r5, r6, sl, ip, sp, lr}
    179c:	00000100 	andeq	r0, r0, r0, lsl #2
    17a0:	6f646e69 	svcvs	0x00646e69
    17a4:	3273726f 	rsbscc	r7, r3, #-268435450	; 0xf0000006
    17a8:	616c625f 	cmnvs	ip, pc, asr r2
    17ac:	782e6b63 	stmdavc	lr!, {r0, r1, r5, r6, r8, r9, fp, sp, lr}
    17b0:	01006d62 	tsteq	r0, r2, ror #26
    17b4:	6e690000 	cdpvs	0, 6, cr0, cr9, cr0, {0}
    17b8:	726f6f64 	rsbvc	r6, pc, #100, 30	; 0x190
    17bc:	675f3273 			; <UNDEFINED> instruction: 0x675f3273
    17c0:	2e796172 	mrccs	1, 3, r6, cr9, cr2, {3}
    17c4:	006d6278 	rsbeq	r6, sp, r8, ror r2
    17c8:	69000001 	stmdbvs	r0, {r0}
    17cc:	6f6f646e 	svcvs	0x006f646e
    17d0:	5f327372 	svcpl	0x00327372
    17d4:	6867696c 	stmdavs	r7!, {r2, r3, r5, r6, r8, fp, sp, lr}^
    17d8:	62782e74 	rsbsvs	r2, r8, #116, 28	; 0x740
    17dc:	0001006d 	andeq	r0, r1, sp, rrx
    17e0:	05000000 	streq	r0, [r0, #-0]
    17e4:	0046dc02 	subeq	sp, r6, r2, lsl #24
    17e8:	01130320 	tsteq	r3, r0, lsr #6
    17ec:	3d672f3e 	stclcc	15, cr2, [r7, #-248]!	; 0xffffff08
    17f0:	2f3d672f 	svccs	0x003d672f
    17f4:	5a083e67 	bpl	211198 <startup-0x1fdeee68>
    17f8:	3e2f4b4c 	vnmulcc.f64	d4, d15, d12
    17fc:	3d3e934c 	ldccc	3, cr9, [lr, #-304]!	; 0xfffffed0
    1800:	083d3d3d 	ldmdaeq	sp!, {r0, r2, r3, r4, r5, r8, sl, fp, ip, sp}
    1804:	d2010100 	andle	r0, r1, #0, 2
    1808:	02000000 	andeq	r0, r0, #0
    180c:	0000a700 	andeq	sl, r0, r0, lsl #14
    1810:	fb010200 	blx	4201a <startup-0x1ffbdfe6>
    1814:	01000d0e 	tsteq	r0, lr, lsl #26
    1818:	00010101 	andeq	r0, r1, r1, lsl #2
    181c:	00010000 	andeq	r0, r1, r0
    1820:	3a430100 	bcc	10c1c28 <startup-0x1ef3e3d8>
    1824:	706f6d2f 	rsbvc	r6, pc, pc, lsr #26
    1828:	4d2f632f 	stcmi	3, cr6, [pc, #-188]!	; 1774 <startup-0x1fffe88c>
    182c:	616c706f 	cmnvs	ip, pc, rrx
    1830:	61726f62 	cmnvs	r2, r2, ror #30
    1834:	6e6f6974 			; <UNDEFINED> instruction: 0x6e6f6974
    1838:	442f7265 	strtmi	r7, [pc], #-613	; 1840 <startup-0x1fffe7c0>
    183c:	2d735049 	ldclcs	0, cr5, [r3, #-292]!	; 0xfffffedc
    1840:	63746957 	cmnvs	r4, #1425408	; 0x15c000
    1844:	00432f68 	subeq	r2, r3, r8, ror #30
    1848:	6f727400 	svcvs	0x00727400
    184c:	2e796870 	mrccs	8, 3, r6, cr9, cr0, {3}
    1850:	00010063 	andeq	r0, r1, r3, rrx
    1854:	72707300 	rsbsvc	r7, r0, #0, 6
    1858:	2e657469 	cdpcs	4, 6, cr7, cr5, cr9, {3}
    185c:	00010068 	andeq	r0, r1, r8, rrx
    1860:	616d6900 	cmnvs	sp, r0, lsl #18
    1864:	682e6567 	stmdavs	lr!, {r0, r1, r2, r5, r6, r8, sl, sp, lr}
    1868:	00000100 	andeq	r0, r0, r0, lsl #2
    186c:	656d6167 	strbvs	r6, [sp, #-359]!	; 0xfffffe99
    1870:	656a626f 	strbvs	r6, [sl, #-623]!	; 0xfffffd91
    1874:	682e7463 	stmdavs	lr!, {r0, r1, r5, r6, sl, ip, sp, lr}
    1878:	00000100 	andeq	r0, r0, r0, lsl #2
    187c:	706f7274 	rsbvc	r7, pc, r4, ror r2	; <UNPREDICTABLE>
    1880:	625f7968 	subsvs	r7, pc, #104, 18	; 0x1a0000
    1884:	6b63616c 	blvs	18d9e3c <startup-0x1e7261c4>
    1888:	6d62782e 	stclvs	8, cr7, [r2, #-184]!	; 0xffffff48
    188c:	00000100 	andeq	r0, r0, r0, lsl #2
    1890:	706f7274 	rsbvc	r7, pc, r4, ror r2	; <UNPREDICTABLE>
    1894:	675f7968 	ldrbvs	r7, [pc, -r8, ror #18]
    1898:	2e796172 	mrccs	1, 3, r6, cr9, cr2, {3}
    189c:	006d6278 	rsbeq	r6, sp, r8, ror r2
    18a0:	74000001 	strvc	r0, [r0], #-1
    18a4:	68706f72 	ldmdavs	r0!, {r1, r4, r5, r6, r8, r9, sl, fp, sp, lr}^
    18a8:	696c5f79 	stmdbvs	ip!, {r0, r3, r4, r5, r6, r8, r9, sl, fp, ip, lr}^
    18ac:	2e746867 	cdpcs	8, 7, cr6, cr4, cr7, {3}
    18b0:	006d6278 	rsbeq	r6, sp, r8, ror r2
    18b4:	00000001 	andeq	r0, r0, r1
    18b8:	c4020500 	strgt	r0, [r2], #-1280	; 0xfffffb00
    18bc:	03200047 			; <UNDEFINED> instruction: 0x03200047
    18c0:	2f3e0113 	svccs	0x003e0113
    18c4:	672f3d67 	strvs	r3, [pc, -r7, ror #26]!
    18c8:	3e672f3d 	mcrcc	15, 3, r2, cr7, cr13, {1}
    18cc:	4b4c5a08 	blmi	13180f4 <startup-0x1ece7f0c>
    18d0:	934c3e2f 	movtls	r3, #52783	; 0xce2f
    18d4:	3d3d3d3e 	ldccc	13, cr3, [sp, #-248]!	; 0xffffff08
    18d8:	0100083d 	tsteq	r0, sp, lsr r8
    18dc:	0000ce01 	andeq	ip, r0, r1, lsl #28
    18e0:	a3000200 	movwge	r0, #512	; 0x200
    18e4:	02000000 	andeq	r0, r0, #0
    18e8:	0d0efb01 	vstreq	d15, [lr, #-4]
    18ec:	01010100 	mrseq	r0, (UNDEF: 17)
    18f0:	00000001 	andeq	r0, r0, r1
    18f4:	01000001 	tsteq	r0, r1
    18f8:	6d2f3a43 	vstmdbvs	pc!, {s6-s72}
    18fc:	632f706f 			; <UNDEFINED> instruction: 0x632f706f
    1900:	706f4d2f 	rsbvc	r4, pc, pc, lsr #26
    1904:	6f62616c 	svcvs	0x0062616c
    1908:	69746172 	ldmdbvs	r4!, {r1, r4, r5, r6, r8, sp, lr}^
    190c:	72656e6f 	rsbvc	r6, r5, #1776	; 0x6f0
    1910:	5049442f 	subpl	r4, r9, pc, lsr #8
    1914:	69572d73 	ldmdbvs	r7, {r0, r1, r4, r5, r6, r8, sl, fp, sp}^
    1918:	2f686374 	svccs	0x00686374
    191c:	72000043 	andvc	r0, r0, #67	; 0x43
    1920:	7265676f 	rsbvc	r6, r5, #29097984	; 0x1bc0000
    1924:	0100632e 	tsteq	r0, lr, lsr #6
    1928:	70730000 	rsbsvc	r0, r3, r0
    192c:	65746972 	ldrbvs	r6, [r4, #-2418]!	; 0xfffff68e
    1930:	0100682e 	tsteq	r0, lr, lsr #16
    1934:	6d690000 	stclvs	0, cr0, [r9, #-0]
    1938:	2e656761 	cdpcs	7, 6, cr6, cr5, cr1, {3}
    193c:	00010068 	andeq	r0, r1, r8, rrx
    1940:	6d616700 	stclvs	7, cr6, [r1, #-0]
    1944:	6a626f65 	bvs	189d6e0 <startup-0x1e762920>
    1948:	2e746365 	cdpcs	3, 7, cr6, cr4, cr5, {3}
    194c:	00010068 	andeq	r0, r1, r8, rrx
    1950:	676f7200 	strbvs	r7, [pc, -r0, lsl #4]!
    1954:	625f7265 	subsvs	r7, pc, #1342177286	; 0x50000006
    1958:	6b63616c 	blvs	18d9f10 <startup-0x1e7260f0>
    195c:	6d62782e 	stclvs	8, cr7, [r2, #-184]!	; 0xffffff48
    1960:	00000100 	andeq	r0, r0, r0, lsl #2
    1964:	65676f72 	strbvs	r6, [r7, #-3954]!	; 0xfffff08e
    1968:	72675f72 	rsbvc	r5, r7, #456	; 0x1c8
    196c:	782e7961 	stmdavc	lr!, {r0, r5, r6, r8, fp, ip, sp, lr}
    1970:	01006d62 	tsteq	r0, r2, ror #26
    1974:	6f720000 	svcvs	0x00720000
    1978:	5f726567 	svcpl	0x00726567
    197c:	6867696c 	stmdavs	r7!, {r2, r3, r5, r6, r8, fp, sp, lr}^
    1980:	62782e74 	rsbsvs	r2, r8, #116, 28	; 0x740
    1984:	0001006d 	andeq	r0, r1, sp, rrx
    1988:	05000000 	streq	r0, [r0, #-0]
    198c:	0048ac02 	subeq	sl, r8, r2, lsl #24
    1990:	01130320 	tsteq	r3, r0, lsr #6
    1994:	3d672f3e 	stclcc	15, cr2, [r7, #-248]!	; 0xffffff08
    1998:	2f3d672f 	svccs	0x003d672f
    199c:	5a083e67 	bpl	211340 <startup-0x1fdeecc0>
    19a0:	3e2f4b4c 	vnmulcc.f64	d4, d15, d12
    19a4:	3d3e934c 	ldccc	3, cr9, [lr, #-304]!	; 0xfffffed0
    19a8:	083d3d3d 	ldmdaeq	sp!, {r0, r2, r3, r4, r5, r8, sl, fp, ip, sp}
    19ac:	f4010100 	vst4.8	{d0,d2,d4,d6}, [r1], r0
    19b0:	02000002 	andeq	r0, r0, #2
    19b4:	00028b00 	andeq	r8, r2, r0, lsl #22
    19b8:	fb010200 	blx	421c2 <startup-0x1ffbde3e>
    19bc:	01000d0e 	tsteq	r0, lr, lsl #26
    19c0:	00010101 	andeq	r0, r1, r1, lsl #2
    19c4:	00010000 	andeq	r0, r1, r0
    19c8:	3a430100 	bcc	10c1dd0 <startup-0x1ef3e230>
    19cc:	706f6d2f 	rsbvc	r6, pc, pc, lsr #26
    19d0:	4d2f632f 	stcmi	3, cr6, [pc, #-188]!	; 191c <startup-0x1fffe6e4>
    19d4:	616c706f 	cmnvs	ip, pc, rrx
    19d8:	61726f62 	cmnvs	r2, r2, ror #30
    19dc:	6e6f6974 			; <UNDEFINED> instruction: 0x6e6f6974
    19e0:	442f7265 	strtmi	r7, [pc], #-613	; 19e8 <startup-0x1fffe618>
    19e4:	2d735049 	ldclcs	0, cr5, [r3, #-292]!	; 0xfffffedc
    19e8:	63746957 	cmnvs	r4, #1425408	; 0x15c000
    19ec:	00432f68 	subeq	r2, r3, r8, ror #30
    19f0:	6d616700 	stclvs	7, cr6, [r1, #-0]
    19f4:	766f5f65 	strbtvc	r5, [pc], -r5, ror #30
    19f8:	775f7265 	ldrbvc	r7, [pc, -r5, ror #4]
    19fc:	68637469 	stmdavs	r3!, {r0, r3, r5, r6, sl, ip, sp, lr}^
    1a00:	0100632e 	tsteq	r0, lr, lsr #6
    1a04:	70730000 	rsbsvc	r0, r3, r0
    1a08:	65746972 	ldrbvs	r6, [r4, #-2418]!	; 0xfffff68e
    1a0c:	0100682e 	tsteq	r0, lr, lsr #16
    1a10:	6d690000 	stclvs	0, cr0, [r9, #-0]
    1a14:	2e656761 	cdpcs	7, 6, cr6, cr5, cr1, {3}
    1a18:	00010068 	andeq	r0, r1, r8, rrx
    1a1c:	6d616700 	stclvs	7, cr6, [r1, #-0]
    1a20:	6a626f65 	bvs	189d7bc <startup-0x1e762844>
    1a24:	2e746365 	cdpcs	3, 7, cr6, cr4, cr5, {3}
    1a28:	00010068 	andeq	r0, r1, r8, rrx
    1a2c:	6d616700 	stclvs	7, cr6, [r1, #-0]
    1a30:	766f5f65 	strbtvc	r5, [pc], -r5, ror #30
    1a34:	775f7265 	ldrbvc	r7, [pc, -r5, ror #4]
    1a38:	68637469 	stmdavs	r3!, {r0, r3, r5, r6, sl, ip, sp, lr}^
    1a3c:	6c625f31 	stclvs	15, cr5, [r2], #-196	; 0xffffff3c
    1a40:	2e6b6361 	cdpcs	3, 6, cr6, cr11, cr1, {3}
    1a44:	006d6278 	rsbeq	r6, sp, r8, ror r2
    1a48:	67000001 	strvs	r0, [r0, -r1]
    1a4c:	5f656d61 	svcpl	0x00656d61
    1a50:	7265766f 	rsbvc	r7, r5, #116391936	; 0x6f00000
    1a54:	7469775f 	strbtvc	r7, [r9], #-1887	; 0xfffff8a1
    1a58:	5f316863 	svcpl	0x00316863
    1a5c:	79617267 	stmdbvc	r1!, {r0, r1, r2, r5, r6, r9, ip, sp, lr}^
    1a60:	6d62782e 	stclvs	8, cr7, [r2, #-184]!	; 0xffffff48
    1a64:	00000100 	andeq	r0, r0, r0, lsl #2
    1a68:	656d6167 	strbvs	r6, [sp, #-359]!	; 0xfffffe99
    1a6c:	65766f5f 	ldrbvs	r6, [r6, #-3935]!	; 0xfffff0a1
    1a70:	69775f72 	ldmdbvs	r7!, {r1, r4, r5, r6, r8, r9, sl, fp, ip, lr}^
    1a74:	31686374 	smccc	34356	; 0x8634
    1a78:	67696c5f 			; <UNDEFINED> instruction: 0x67696c5f
    1a7c:	782e7468 	stmdavc	lr!, {r3, r5, r6, sl, ip, sp, lr}
    1a80:	01006d62 	tsteq	r0, r2, ror #26
    1a84:	61670000 	cmnvs	r7, r0
    1a88:	6f5f656d 	svcvs	0x005f656d
    1a8c:	5f726576 	svcpl	0x00726576
    1a90:	63746977 	cmnvs	r4, #1949696	; 0x1dc000
    1a94:	625f3268 	subsvs	r3, pc, #104, 4	; 0x80000006
    1a98:	6b63616c 	blvs	18da050 <startup-0x1e725fb0>
    1a9c:	6d62782e 	stclvs	8, cr7, [r2, #-184]!	; 0xffffff48
    1aa0:	00000100 	andeq	r0, r0, r0, lsl #2
    1aa4:	656d6167 	strbvs	r6, [sp, #-359]!	; 0xfffffe99
    1aa8:	65766f5f 	ldrbvs	r6, [r6, #-3935]!	; 0xfffff0a1
    1aac:	69775f72 	ldmdbvs	r7!, {r1, r4, r5, r6, r8, r9, sl, fp, ip, lr}^
    1ab0:	32686374 	rsbcc	r6, r8, #116, 6	; 0xd0000001
    1ab4:	6172675f 	cmnvs	r2, pc, asr r7
    1ab8:	62782e79 	rsbsvs	r2, r8, #1936	; 0x790
    1abc:	0001006d 	andeq	r0, r1, sp, rrx
    1ac0:	6d616700 	stclvs	7, cr6, [r1, #-0]
    1ac4:	766f5f65 	strbtvc	r5, [pc], -r5, ror #30
    1ac8:	775f7265 	ldrbvc	r7, [pc, -r5, ror #4]
    1acc:	68637469 	stmdavs	r3!, {r0, r3, r5, r6, sl, ip, sp, lr}^
    1ad0:	696c5f32 	stmdbvs	ip!, {r1, r4, r5, r8, r9, sl, fp, ip, lr}^
    1ad4:	2e746867 	cdpcs	8, 7, cr6, cr4, cr7, {3}
    1ad8:	006d6278 	rsbeq	r6, sp, r8, ror r2
    1adc:	67000001 	strvs	r0, [r0, -r1]
    1ae0:	5f656d61 	svcpl	0x00656d61
    1ae4:	7265766f 	rsbvc	r7, r5, #116391936	; 0x6f00000
    1ae8:	7469775f 	strbtvc	r7, [r9], #-1887	; 0xfffff8a1
    1aec:	5f336863 	svcpl	0x00336863
    1af0:	63616c62 	cmnvs	r1, #25088	; 0x6200
    1af4:	62782e6b 	rsbsvs	r2, r8, #1712	; 0x6b0
    1af8:	0001006d 	andeq	r0, r1, sp, rrx
    1afc:	6d616700 	stclvs	7, cr6, [r1, #-0]
    1b00:	766f5f65 	strbtvc	r5, [pc], -r5, ror #30
    1b04:	775f7265 	ldrbvc	r7, [pc, -r5, ror #4]
    1b08:	68637469 	stmdavs	r3!, {r0, r3, r5, r6, sl, ip, sp, lr}^
    1b0c:	72675f33 	rsbvc	r5, r7, #51, 30	; 0xcc
    1b10:	782e7961 	stmdavc	lr!, {r0, r5, r6, r8, fp, ip, sp, lr}
    1b14:	01006d62 	tsteq	r0, r2, ror #26
    1b18:	61670000 	cmnvs	r7, r0
    1b1c:	6f5f656d 	svcvs	0x005f656d
    1b20:	5f726576 	svcpl	0x00726576
    1b24:	63746977 	cmnvs	r4, #1949696	; 0x1dc000
    1b28:	6c5f3368 	mrrcvs	3, 6, r3, pc, cr8	; <UNPREDICTABLE>
    1b2c:	74686769 	strbtvc	r6, [r8], #-1897	; 0xfffff897
    1b30:	6d62782e 	stclvs	8, cr7, [r2, #-184]!	; 0xffffff48
    1b34:	00000100 	andeq	r0, r0, r0, lsl #2
    1b38:	656d6167 	strbvs	r6, [sp, #-359]!	; 0xfffffe99
    1b3c:	65766f5f 	ldrbvs	r6, [r6, #-3935]!	; 0xfffff0a1
    1b40:	69775f72 	ldmdbvs	r7!, {r1, r4, r5, r6, r8, r9, sl, fp, ip, lr}^
    1b44:	34686374 	strbtcc	r6, [r8], #-884	; 0xfffffc8c
    1b48:	616c625f 	cmnvs	ip, pc, asr r2
    1b4c:	782e6b63 	stmdavc	lr!, {r0, r1, r5, r6, r8, r9, fp, sp, lr}
    1b50:	01006d62 	tsteq	r0, r2, ror #26
    1b54:	61670000 	cmnvs	r7, r0
    1b58:	6f5f656d 	svcvs	0x005f656d
    1b5c:	5f726576 	svcpl	0x00726576
    1b60:	63746977 	cmnvs	r4, #1949696	; 0x1dc000
    1b64:	675f3468 	ldrbvs	r3, [pc, -r8, ror #8]
    1b68:	2e796172 	mrccs	1, 3, r6, cr9, cr2, {3}
    1b6c:	006d6278 	rsbeq	r6, sp, r8, ror r2
    1b70:	67000001 	strvs	r0, [r0, -r1]
    1b74:	5f656d61 	svcpl	0x00656d61
    1b78:	7265766f 	rsbvc	r7, r5, #116391936	; 0x6f00000
    1b7c:	7469775f 	strbtvc	r7, [r9], #-1887	; 0xfffff8a1
    1b80:	5f346863 	svcpl	0x00346863
    1b84:	6867696c 	stmdavs	r7!, {r2, r3, r5, r6, r8, fp, sp, lr}^
    1b88:	62782e74 	rsbsvs	r2, r8, #116, 28	; 0x740
    1b8c:	0001006d 	andeq	r0, r1, sp, rrx
    1b90:	6d616700 	stclvs	7, cr6, [r1, #-0]
    1b94:	766f5f65 	strbtvc	r5, [pc], -r5, ror #30
    1b98:	775f7265 	ldrbvc	r7, [pc, -r5, ror #4]
    1b9c:	68637469 	stmdavs	r3!, {r0, r3, r5, r6, sl, ip, sp, lr}^
    1ba0:	6c625f35 	stclvs	15, cr5, [r2], #-212	; 0xffffff2c
    1ba4:	2e6b6361 	cdpcs	3, 6, cr6, cr11, cr1, {3}
    1ba8:	006d6278 	rsbeq	r6, sp, r8, ror r2
    1bac:	67000001 	strvs	r0, [r0, -r1]
    1bb0:	5f656d61 	svcpl	0x00656d61
    1bb4:	7265766f 	rsbvc	r7, r5, #116391936	; 0x6f00000
    1bb8:	7469775f 	strbtvc	r7, [r9], #-1887	; 0xfffff8a1
    1bbc:	5f356863 	svcpl	0x00356863
    1bc0:	79617267 	stmdbvc	r1!, {r0, r1, r2, r5, r6, r9, ip, sp, lr}^
    1bc4:	6d62782e 	stclvs	8, cr7, [r2, #-184]!	; 0xffffff48
    1bc8:	00000100 	andeq	r0, r0, r0, lsl #2
    1bcc:	656d6167 	strbvs	r6, [sp, #-359]!	; 0xfffffe99
    1bd0:	65766f5f 	ldrbvs	r6, [r6, #-3935]!	; 0xfffff0a1
    1bd4:	69775f72 	ldmdbvs	r7!, {r1, r4, r5, r6, r8, r9, sl, fp, ip, lr}^
    1bd8:	35686374 	strbcc	r6, [r8, #-884]!	; 0xfffffc8c
    1bdc:	67696c5f 			; <UNDEFINED> instruction: 0x67696c5f
    1be0:	782e7468 	stmdavc	lr!, {r3, r5, r6, sl, ip, sp, lr}
    1be4:	01006d62 	tsteq	r0, r2, ror #26
    1be8:	61670000 	cmnvs	r7, r0
    1bec:	6f5f656d 	svcvs	0x005f656d
    1bf0:	5f726576 	svcpl	0x00726576
    1bf4:	63746977 	cmnvs	r4, #1949696	; 0x1dc000
    1bf8:	625f3668 	subsvs	r3, pc, #104, 12	; 0x6800000
    1bfc:	6b63616c 	blvs	18da1b4 <startup-0x1e725e4c>
    1c00:	6d62782e 	stclvs	8, cr7, [r2, #-184]!	; 0xffffff48
    1c04:	00000100 	andeq	r0, r0, r0, lsl #2
    1c08:	656d6167 	strbvs	r6, [sp, #-359]!	; 0xfffffe99
    1c0c:	65766f5f 	ldrbvs	r6, [r6, #-3935]!	; 0xfffff0a1
    1c10:	69775f72 	ldmdbvs	r7!, {r1, r4, r5, r6, r8, r9, sl, fp, ip, lr}^
    1c14:	36686374 			; <UNDEFINED> instruction: 0x36686374
    1c18:	6172675f 	cmnvs	r2, pc, asr r7
    1c1c:	62782e79 	rsbsvs	r2, r8, #1936	; 0x790
    1c20:	0001006d 	andeq	r0, r1, sp, rrx
    1c24:	6d616700 	stclvs	7, cr6, [r1, #-0]
    1c28:	766f5f65 	strbtvc	r5, [pc], -r5, ror #30
    1c2c:	775f7265 	ldrbvc	r7, [pc, -r5, ror #4]
    1c30:	68637469 	stmdavs	r3!, {r0, r3, r5, r6, sl, ip, sp, lr}^
    1c34:	696c5f36 	stmdbvs	ip!, {r1, r2, r4, r5, r8, r9, sl, fp, ip, lr}^
    1c38:	2e746867 	cdpcs	8, 7, cr6, cr4, cr7, {3}
    1c3c:	006d6278 	rsbeq	r6, sp, r8, ror r2
    1c40:	00000001 	andeq	r0, r0, r1
    1c44:	94020500 	strls	r0, [r2], #-1280	; 0xfffffb00
    1c48:	03200049 			; <UNDEFINED> instruction: 0x03200049
    1c4c:	3e010182 	adfccd	f0, f1, f2
    1c50:	2f3d672f 	svccs	0x003d672f
    1c54:	672f3d67 	strvs	r3, [pc, -r7, ror #26]!
    1c58:	3d672f3e 	stclcc	15, cr2, [r7, #-248]!	; 0xffffff08
    1c5c:	2f3d672f 	svccs	0x003d672f
    1c60:	672f3f67 	strvs	r3, [pc, -r7, ror #30]!
    1c64:	3d672f3d 	stclcc	15, cr2, [r7, #-244]!	; 0xffffff0c
    1c68:	2f3e672f 	svccs	0x003e672f
    1c6c:	672f3d67 	strvs	r3, [pc, -r7, ror #26]!
    1c70:	3e672f3d 	mcrcc	15, 3, r2, cr7, cr13, {1}
    1c74:	2f3d672f 	svccs	0x003d672f
    1c78:	672f3d67 	strvs	r3, [pc, -r7, ror #26]!
    1c7c:	3d672f3e 	stclcc	15, cr2, [r7, #-248]!	; 0xffffff08
    1c80:	2f3d672f 	svccs	0x003d672f
    1c84:	3c3f0367 	ldccc	3, cr0, [pc], #-412	; 1af0 <startup-0x1fffe510>
    1c88:	4c147102 	ldfmis	f7, [r4], {2}
    1c8c:	4b3e2f4b 	blmi	f8d9c0 <startup-0x1f072640>
    1c90:	59595959 	ldmdbpl	r9, {r0, r3, r4, r6, r8, fp, ip, lr}^
    1c94:	91919160 	orrsls	r9, r1, r0, ror #2
    1c98:	09039191 	stmdbeq	r3, {r0, r4, r7, r8, ip, pc}
    1c9c:	3d3d3e90 	ldccc	14, cr3, [sp, #-576]!	; 0xfffffdc0
    1ca0:	43023d3d 	movwmi	r3, #11581	; 0x2d3d
    1ca4:	Address 0x00001ca4 is out of bounds.


Disassembly of section .debug_str:

00000000 <.debug_str>:
       0:	7473616c 	ldrbtvc	r6, [r3], #-364	; 0xfffffe94
       4:	65726946 	ldrbvs	r6, [r2, #-2374]!	; 0xfffff6ba
       8:	67697254 			; <UNDEFINED> instruction: 0x67697254
       c:	00726567 	rsbseq	r6, r2, r7, ror #10
      10:	74736163 	ldrbtvc	r6, [r3], #-355	; 0xfffffe9d
      14:	6c5f656c 	cfldr64vs	mvdx6, [pc], {108}	; 0x6c
      18:	74686769 	strbtvc	r6, [r8], #-1897	; 0xfffff897
      1c:	7469625f 	strbtvc	r6, [r9], #-607	; 0xfffffda1
      20:	69660073 	stmdbvs	r6!, {r0, r1, r4, r5, r6}^
      24:	5f336572 	svcpl	0x00336572
      28:	6f646e69 	svcvs	0x00646e69
      2c:	0073726f 	rsbseq	r7, r3, pc, ror #4
      30:	6867696c 	stmdavs	r7!, {r2, r3, r5, r6, r8, fp, sp, lr}^
      34:	616d4974 	smcvs	54420	; 0xd494
      38:	67006567 	strvs	r6, [r0, -r7, ror #10]
      3c:	49796172 	ldmdbmi	r9!, {r1, r4, r5, r6, r8, sp, lr}^
      40:	6567616d 	strbvs	r6, [r7, #-365]!	; 0xfffffe93
      44:	73616300 	cmnvc	r1, #0, 6
      48:	5f656c74 	svcpl	0x00656c74
      4c:	79617267 	stmdbvc	r1!, {r0, r1, r2, r5, r6, r9, ip, sp, lr}^
      50:	7469625f 	strbtvc	r6, [r9], #-607	; 0xfffffda1
      54:	6c700073 	ldclvs	0, cr0, [r0], #-460	; 0xfffffe34
      58:	72657961 	rsbvc	r7, r5, #1589248	; 0x184000
      5c:	78657400 	stmdavc	r5!, {sl, ip, sp, lr}^
      60:	726b5f74 	rsbvc	r5, fp, #116, 30	; 0x1d0
      64:	61670061 	cmnvs	r7, r1, rrx
      68:	6f5f656d 	svcvs	0x005f656d
      6c:	00726576 	rsbseq	r6, r2, r6, ror r5
      70:	72665f6e 	rsbvc	r5, r6, #440	; 0x1b8
      74:	73656d61 	cmnvc	r5, #6208	; 0x1840
      78:	73616300 	cmnvc	r1, #0, 6
      7c:	4c656c74 	stclmi	12, cr6, [r5], #-464	; 0xfffffe30
      80:	74686769 	strbtvc	r6, [r8], #-1897	; 0xfffff897
      84:	696f7000 	stmdbvs	pc!, {ip, sp, lr}^	; <UNPREDICTABLE>
      88:	7265746e 	rsbvc	r7, r5, #1845493760	; 0x6e000000
      8c:	74003031 	strvc	r3, [r0], #-49	; 0xffffffcf
      90:	43706d65 	cmnmi	r0, #6464	; 0x1940
      94:	6c747361 	ldclvs	3, cr7, [r4], #-388	; 0xfffffe7c
      98:	616c4265 	cmnvs	ip, r5, ror #4
      9c:	47006b63 	strmi	r6, [r0, -r3, ror #22]
      a0:	4320554e 			; <UNDEFINED> instruction: 0x4320554e
      a4:	36203939 			; <UNDEFINED> instruction: 0x36203939
      a8:	312e332e 			; <UNDEFINED> instruction: 0x312e332e
      ac:	31303220 	teqcc	r0, r0, lsr #4
      b0:	31323037 	teqcc	r2, r7, lsr r0
      b4:	72282035 	eorvc	r2, r8, #53	; 0x35
      b8:	61656c65 	cmnvs	r5, r5, ror #24
      bc:	20296573 	eorcs	r6, r9, r3, ror r5
      c0:	4d52415b 	ldfmie	f4, [r2, #-364]	; 0xfffffe94
      c4:	626d652f 	rsbvs	r6, sp, #197132288	; 0xbc00000
      c8:	65646465 	strbvs	r6, [r4, #-1125]!	; 0xfffffb9b
      cc:	2d362d64 	ldccs	13, cr2, [r6, #-400]!	; 0xfffffe70
      d0:	6e617262 	cdpvs	2, 6, cr7, cr1, cr2, {3}
      d4:	72206863 	eorvc	r6, r0, #6488064	; 0x630000
      d8:	73697665 	cmnvc	r9, #105906176	; 0x6500000
      dc:	206e6f69 	rsbcs	r6, lr, r9, ror #30
      e0:	35353432 	ldrcc	r3, [r5, #-1074]!	; 0xfffffbce
      e4:	205d3231 	subscs	r3, sp, r1, lsr r2
      e8:	68746d2d 	ldmdavs	r4!, {r0, r2, r3, r5, r8, sl, fp, sp, lr}^
      ec:	20626d75 	rsbcs	r6, r2, r5, ror sp
      f0:	72616d2d 	rsbvc	r6, r1, #2880	; 0xb40
      f4:	613d6863 	teqvs	sp, r3, ror #16
      f8:	36766d72 			; <UNDEFINED> instruction: 0x36766d72
      fc:	2d206d2d 	stccs	13, cr6, [r0, #-180]!	; 0xffffff4c
     100:	6f6c666d 	svcvs	0x006c666d
     104:	612d7461 			; <UNDEFINED> instruction: 0x612d7461
     108:	733d6962 	teqvc	sp, #1605632	; 0x188000
     10c:	2074666f 	rsbscs	r6, r4, pc, ror #12
     110:	68746d2d 	ldmdavs	r4!, {r0, r2, r3, r5, r8, sl, fp, sp, lr}^
     114:	20626d75 	rsbcs	r6, r2, r5, ror sp
     118:	72616d2d 	rsbvc	r6, r1, #2880	; 0xb40
     11c:	613d6863 	teqvs	sp, r3, ror #16
     120:	36766d72 			; <UNDEFINED> instruction: 0x36766d72
     124:	2d206d2d 	stccs	13, cr6, [r0, #-180]!	; 0xffffff4c
     128:	4f2d2067 	svcmi	0x002d2067
     12c:	732d2030 			; <UNDEFINED> instruction: 0x732d2030
     130:	633d6474 	teqvs	sp, #116, 8	; 0x74000000
     134:	6d003939 	vstrvs.16	s6, [r0, #-114]	; 0xffffff8e	; <UNPREDICTABLE>
     138:	74736e6f 	ldrbtvc	r6, [r3], #-3695	; 0xfffff191
     13c:	69007265 	stmdbvs	r0, {r0, r2, r5, r6, r9, ip, sp, lr}
     140:	6c635f73 	stclvs	15, cr5, [r3], #-460	; 0xfffffe34
     144:	69626d69 	stmdbvs	r2!, {r0, r3, r5, r6, r8, sl, fp, sp, lr}^
     148:	7000676e 	andvc	r6, r0, lr, ror #14
     14c:	746e696f 	strbtvc	r6, [lr], #-2415	; 0xfffff691
     150:	00377265 	eorseq	r7, r7, r5, ror #4
     154:	74736163 	ldrbtvc	r6, [r3], #-355	; 0xfffffe9d
     158:	624f656c 	subvs	r6, pc, #108, 10	; 0x1b000000
     15c:	7274006a 	rsbsvc	r0, r4, #106	; 0x6a
     160:	7968706f 	stmdbvc	r8!, {r0, r1, r2, r3, r5, r6, ip, sp, lr}^
     164:	7275625f 	rsbsvc	r6, r5, #-268435451	; 0xf0000005
     168:	0064656e 	rsbeq	r6, r4, lr, ror #10
     16c:	73657270 	cmnvc	r5, #112, 4
     170:	6c625f73 	stclvs	15, cr5, [r2], #-460	; 0xfffffe34
     174:	5f6b6361 	svcpl	0x006b6361
     178:	73746962 	cmnvc	r4, #1605632	; 0x188000
     17c:	72696600 	rsbvc	r6, r9, #0, 12
     180:	695f3165 	ldmdbvs	pc, {r0, r2, r5, r6, r8, ip, sp}^	; <UNPREDICTABLE>
     184:	6f6f646e 	svcvs	0x006f646e
     188:	63007372 	movwvs	r7, #882	; 0x372
     18c:	6c747361 	ldclvs	3, cr7, [r4], #-388	; 0xfffffe7c
     190:	616d4965 	cmnvs	sp, r5, ror #18
     194:	00736567 	rsbseq	r6, r3, r7, ror #10
     198:	656d6167 	strbvs	r6, [sp, #-359]!	; 0xfffffe99
     19c:	65766f5f 	ldrbvs	r6, [r6, #-3935]!	; 0xfffff0a1
     1a0:	64615f72 	strbtvs	r5, [r1], #-3954	; 0xfffff08e
     1a4:	00726564 	rsbseq	r6, r2, r4, ror #10
     1a8:	6c746974 			; <UNDEFINED> instruction: 0x6c746974
     1ac:	616d4965 	cmnvs	sp, r5, ror #18
     1b0:	73006567 	movwvc	r6, #1383	; 0x567
     1b4:	74726174 	ldrbtvc	r6, [r2], #-372	; 0xfffffe8c
     1b8:	74007075 	strvc	r7, [r0], #-117	; 0xffffff8b
     1bc:	31747865 	cmncc	r4, r5, ror #16
     1c0:	6e6f6d00 	cdpvs	13, 6, cr6, cr15, cr0, {0}
     1c4:	72657473 	rsbvc	r7, r5, #1929379840	; 0x73000000
     1c8:	6867694c 	stmdavs	r7!, {r2, r3, r6, r8, fp, sp, lr}^
     1cc:	69740074 	ldmdbvs	r4!, {r2, r4, r5, r6}^
     1d0:	5f656c74 	svcpl	0x00656c74
     1d4:	6867696c 	stmdavs	r7!, {r2, r3, r5, r6, r8, fp, sp, lr}^
     1d8:	69625f74 	stmdbvs	r2!, {r2, r4, r5, r6, r8, r9, sl, fp, ip, lr}^
     1dc:	74007374 	strvc	r7, [r0], #-884	; 0xfffffc8c
     1e0:	4d706d65 	ldclmi	13, cr6, [r0, #-404]!	; 0xfffffe6c
     1e4:	74736e6f 	ldrbtvc	r6, [r3], #-3695	; 0xfffff191
     1e8:	72477265 	subvc	r7, r7, #1342177286	; 0x50000006
     1ec:	74007961 	strvc	r7, [r0], #-2401	; 0xfffff69f
     1f0:	32747865 	rsbscc	r7, r4, #6619136	; 0x650000
     1f4:	65727000 	ldrbvs	r7, [r2, #-0]!
     1f8:	72477373 	subvc	r7, r7, #-872415231	; 0xcc000001
     1fc:	74007961 	strvc	r7, [r0], #-2401	; 0xfffff69f
     200:	34747865 	ldrbtcc	r7, [r4], #-2149	; 0xfffff79b
     204:	78657400 	stmdavc	r5!, {sl, ip, sp, lr}^
     208:	66003574 			; <UNDEFINED> instruction: 0x66003574
     20c:	31657269 	cmncc	r5, r9, ror #4
     210:	73616800 	cmnvc	r1, #0, 16
     214:	696c635f 	stmdbvs	ip!, {r0, r1, r2, r3, r4, r6, r8, r9, sp, lr}^
     218:	6465626d 	strbtvs	r6, [r5], #-621	; 0xfffffd93
     21c:	6d657400 	cfstrdvs	mvd7, [r5, #-0]
     220:	00674270 	rsbeq	r4, r7, r0, ror r2
     224:	74786574 	ldrbtvc	r6, [r8], #-1396	; 0xfffffa8c
     228:	65740033 	ldrbvs	r0, [r4, #-51]!	; 0xffffffcd
     22c:	00387478 	eorseq	r7, r8, r8, ror r4
     230:	6c746974 			; <UNDEFINED> instruction: 0x6c746974
     234:	6c625f65 	stclvs	15, cr5, [r2], #-404	; 0xfffffe6c
     238:	5f6b6361 	svcpl	0x006b6361
     23c:	73746962 	cmnvc	r4, #1605632	; 0x188000
     240:	6d657400 	cfstrdvs	mvd7, [r5, #-0]
     244:	6e6f4d70 	mcrvs	13, 3, r4, cr15, cr0, {3}
     248:	72657473 	rsbvc	r7, r5, #1929379840	; 0x73000000
     24c:	6867694c 	stmdavs	r7!, {r2, r3, r6, r8, fp, sp, lr}^
     250:	65740074 	ldrbvs	r0, [r4, #-116]!	; 0xffffff8c
     254:	00377478 	eorseq	r7, r7, r8, ror r4
     258:	77617264 	strbvc	r7, [r1, -r4, ror #4]!
     25c:	6675625f 			; <UNDEFINED> instruction: 0x6675625f
     260:	5f726566 	svcpl	0x00726566
     264:	63616c62 	cmnvs	r1, #25088	; 0x6200
     268:	6574006b 	ldrbvs	r0, [r4, #-107]!	; 0xffffff95
     26c:	00367478 	eorseq	r7, r6, r8, ror r4
     270:	74786574 	ldrbtvc	r6, [r8], #-1396	; 0xfffffa8c
     274:	6f6d0039 	svcvs	0x006d0039
     278:	6574736e 	ldrbvs	r7, [r4, #-878]!	; 0xfffffc92
     27c:	696f5072 	stmdbvs	pc!, {r1, r4, r5, r6, ip, lr}^	; <UNPREDICTABLE>
     280:	7265746e 	rsbvc	r7, r5, #1845493760	; 0x6e000000
     284:	6f6d0032 	svcvs	0x006d0032
     288:	6574736e 	ldrbvs	r7, [r4, #-878]!	; 0xfffffc92
     28c:	696f5072 	stmdbvs	pc!, {r1, r4, r5, r6, ip, lr}^	; <UNPREDICTABLE>
     290:	7265746e 	rsbvc	r7, r5, #1845493760	; 0x6e000000
     294:	6f720033 	svcvs	0x00720033
     298:	64003277 	strvs	r3, [r0], #-631	; 0xfffffd89
     29c:	6c707369 	ldclvs	3, cr7, [r0], #-420	; 0xfffffe5c
     2a0:	6d007961 	vstrvs.16	s14, [r0, #-194]	; 0xffffff3e	; <UNPREDICTABLE>
     2a4:	74736e6f 	ldrbtvc	r6, [r3], #-3695	; 0xfffff191
     2a8:	625f7265 	subsvs	r7, pc, #1342177286	; 0x50000006
     2ac:	6b63616c 	blvs	18d8864 <startup-0x1e72779c>
     2b0:	7469625f 	strbtvc	r6, [r9], #-607	; 0xfffffda1
     2b4:	6e690073 	mcrvs	0, 3, r0, cr9, cr3, {3}
     2b8:	615f7469 	cmpvs	pc, r9, ror #8
     2bc:	6c007070 	stcvs	0, cr7, [r0], {112}	; 0x70
     2c0:	5f676e6f 	svcpl	0x00676e6f
     2c4:	74786574 	ldrbtvc	r6, [r8], #-1396	; 0xfffffa8c
     2c8:	65727000 	ldrbvs	r7, [r2, #-0]!
     2cc:	624f7373 	subvs	r7, pc, #-872415231	; 0xcc000001
     2d0:	6966006a 	stmdbvs	r6!, {r1, r3, r5, r6}^
     2d4:	5f326572 	svcpl	0x00326572
     2d8:	6f646e69 	svcvs	0x00646e69
     2dc:	0073726f 	rsbseq	r7, r3, pc, ror #4
     2e0:	77617264 	strbvc	r7, [r1, -r4, ror #4]!
     2e4:	6675625f 			; <UNDEFINED> instruction: 0x6675625f
     2e8:	5f726566 	svcpl	0x00726566
     2ec:	63616c62 	cmnvs	r1, #25088	; 0x6200
     2f0:	72675f6b 	rsbvc	r5, r7, #428	; 0x1ac
     2f4:	6c5f7961 	mrrcvs	9, 6, r7, pc, cr1	; <UNPREDICTABLE>
     2f8:	74686769 	strbtvc	r6, [r8], #-1897	; 0xfffff897
     2fc:	696e6900 	stmdbvs	lr!, {r8, fp, sp, lr}^
     300:	72745f74 	rsbsvc	r5, r4, #116, 30	; 0x1d0
     304:	7968706f 	stmdbvc	r8!, {r0, r1, r2, r3, r5, r6, ip, sp, lr}^
     308:	696f7000 	stmdbvs	pc!, {ip, sp, lr}^	; <UNPREDICTABLE>
     30c:	7265746e 	rsbvc	r7, r5, #1845493760	; 0x6e000000
     310:	6f700035 	svcvs	0x00700035
     314:	65746e69 	ldrbvs	r6, [r4, #-3689]!	; 0xfffff197
     318:	64003672 	strvs	r3, [r0], #-1650	; 0xfffff98e
     31c:	61747369 	cmnvs	r4, r9, ror #6
     320:	5f65636e 	svcpl	0x0065636e
     324:	72696168 	rsbvc	r6, r9, #104, 2
     328:	6f72745f 	svcvs	0x0072745f
     32c:	00796870 	rsbseq	r6, r9, r0, ror r8
     330:	6e696f70 	mcrvs	15, 3, r6, cr9, cr0, {3}
     334:	38726574 	ldmdacc	r2!, {r2, r4, r5, r6, r8, sl, sp, lr}^
     338:	696f7000 	stmdbvs	pc!, {ip, sp, lr}^	; <UNPREDICTABLE>
     33c:	7265746e 	rsbvc	r7, r5, #1845493760	; 0x6e000000
     340:	65740039 	ldrbvs	r0, [r4, #-57]!	; 0xffffffc7
     344:	6143706d 	cmpvs	r3, sp, rrx
     348:	656c7473 	strbvs	r7, [ip, #-1139]!	; 0xfffffb8d
     34c:	6867694c 	stmdavs	r7!, {r2, r3, r6, r8, fp, sp, lr}^
     350:	65720074 	ldrbvs	r0, [r2, #-116]!	; 0xffffff8c
     354:	7265646e 	rsbvc	r6, r5, #1845493760	; 0x6e000000
     358:	73696400 	cmnvc	r9, #0, 8
     35c:	636e6174 	cmnvs	lr, #116, 2
     360:	61685f65 	cmnvs	r8, r5, ror #30
     364:	445f7269 	ldrbmi	r7, [pc], #-617	; 36c <startup-0x1ffffc94>
     368:	77005049 	strvc	r5, [r0, -r9, asr #32]
     36c:	68746469 	ldmdavs	r4!, {r0, r3, r5, r6, sl, sp, lr}^
     370:	696e6900 	stmdbvs	lr!, {r8, fp, sp, lr}^
     374:	6f625f74 	svcvs	0x00625f74
     378:	64006d6f 	strvs	r6, [r0], #-3439	; 0xfffff291
     37c:	5f776172 	svcpl	0x00776172
     380:	66667562 	strbtvs	r7, [r6], -r2, ror #10
     384:	625f7265 	subsvs	r7, pc, #1342177286	; 0x50000006
     388:	6b63616c 	blvs	18d8940 <startup-0x1e7276c0>
     38c:	67696c5f 			; <UNDEFINED> instruction: 0x67696c5f
     390:	73007468 	movwvc	r7, #1128	; 0x468
     394:	74726f68 	ldrbtvc	r6, [r2], #-3944	; 0xfffff098
     398:	736e7520 	cmnvc	lr, #32, 10	; 0x8000000
     39c:	656e6769 	strbvs	r6, [lr, #-1897]!	; 0xfffff897
     3a0:	6e692064 	cdpvs	0, 6, cr2, cr9, cr4, {3}
     3a4:	65640074 	strbvs	r0, [r4, #-116]!	; 0xffffff8c
     3a8:	5f79616c 	svcpl	0x0079616c
     3ac:	69746e75 	ldmdbvs	r4!, {r0, r2, r4, r5, r6, r9, sl, fp, sp, lr}^
     3b0:	65745f6c 	ldrbvs	r5, [r4, #-3948]!	; 0xfffff094
     3b4:	74007478 	strvc	r7, [r0], #-1144	; 0xfffffb88
     3b8:	4d706d65 	ldclmi	13, cr6, [r0, #-404]!	; 0xfffffe6c
     3bc:	74736e6f 	ldrbtvc	r6, [r3], #-3695	; 0xfffff191
     3c0:	74007265 	strvc	r7, [r0], #-613	; 0xfffffd9b
     3c4:	656c7469 	strbvs	r7, [ip, #-1129]!	; 0xfffffb97
     3c8:	63616c42 	cmnvs	r1, #16896	; 0x4200
     3cc:	6966006b 	stmdbvs	r6!, {r0, r1, r3, r5, r6}^
     3d0:	5f6c616e 	svcpl	0x006c616e
     3d4:	776f6873 			; <UNDEFINED> instruction: 0x776f6873
     3d8:	756f635f 	strbvc	r6, [pc, #-863]!	; 81 <startup-0x1fffff7f>
     3dc:	7000746e 	andvc	r7, r0, lr, ror #8
     3e0:	73736572 	cmnvc	r3, #478150656	; 0x1c800000
     3e4:	6172675f 	cmnvs	r2, pc, asr r7
     3e8:	69625f79 	stmdbvs	r2!, {r0, r3, r4, r5, r6, r8, r9, sl, fp, ip, lr}^
     3ec:	69007374 	stmdbvs	r0, {r2, r4, r5, r6, r8, r9, ip, sp, lr}
     3f0:	5f74696e 	svcpl	0x0074696e
     3f4:	6d616c66 	stclvs	12, cr6, [r1, #-408]!	; 0xfffffe68
     3f8:	6e610065 	cdpvs	0, 6, cr0, cr1, cr5, {3}
     3fc:	74616d69 	strbtvc	r6, [r1], #-3433	; 0xfffff297
     400:	5f6e6f69 	svcpl	0x006e6f69
     404:	65657073 	strbvs	r7, [r5, #-115]!	; 0xffffff8d
     408:	6e610064 	cdpvs	0, 6, cr0, cr1, cr4, {3}
     40c:	74616d69 	strbtvc	r6, [r1], #-3433	; 0xfffff297
     410:	5f6e6f69 	svcpl	0x006e6f69
     414:	6e756f63 	cdpvs	15, 7, cr6, cr5, cr3, {3}
     418:	00726574 	rsbseq	r6, r2, r4, ror r5
     41c:	736e6f6d 	cmnvc	lr, #436	; 0x1b4
     420:	4f726574 	svcmi	0x00726574
     424:	73006a62 	movwvc	r6, #2658	; 0xa62
     428:	74657a69 	strbtvc	r7, [r5], #-2665	; 0xfffff597
     42c:	00657079 	rsbeq	r7, r5, r9, ror r0
     430:	6c746974 			; <UNDEFINED> instruction: 0x6c746974
     434:	72675f65 	rsbvc	r5, r7, #404	; 0x194
     438:	625f7961 	subsvs	r7, pc, #1589248	; 0x184000
     43c:	00737469 	rsbseq	r7, r3, r9, ror #8
     440:	72696168 	rsbvc	r6, r9, #104, 2
     444:	61476e00 	cmpvs	r7, r0, lsl #28
     448:	624f656d 	subvs	r6, pc, #457179136	; 0x1b400000
     44c:	7463656a 	strbtvc	r6, [r3], #-1386	; 0xfffffa96
     450:	72700073 	rsbsvc	r0, r0, #115	; 0x73
     454:	5f737365 	svcpl	0x00737365
     458:	6867696c 	stmdavs	r7!, {r2, r3, r5, r6, r8, fp, sp, lr}^
     45c:	69625f74 	stmdbvs	r2!, {r2, r4, r5, r6, r8, r9, sl, fp, ip, lr}^
     460:	74007374 	strvc	r7, [r0], #-884	; 0xfffffc8c
     464:	57747865 	ldrbpl	r7, [r4, -r5, ror #16]!
     468:	70006e69 	andvc	r6, r0, r9, ror #28
     46c:	746e696f 	strbtvc	r6, [lr], #-2415	; 0xfffff691
     470:	00347265 	eorseq	r7, r4, r5, ror #4
     474:	73657270 	cmnvc	r5, #112, 4
     478:	616d4973 	smcvs	54419	; 0xd493
     47c:	69006567 	stmdbvs	r0, {r0, r1, r2, r5, r6, r8, sl, sp, lr}
     480:	6567616d 	strbvs	r6, [r7, #-365]!	; 0xfffffe93
     484:	68730073 	ldmdavs	r3!, {r0, r1, r4, r5, r6}^
     488:	5f74726f 	svcpl	0x0074726f
     48c:	74786574 	ldrbtvc	r6, [r8], #-1396	; 0xfffffa8c
     490:	72756300 	rsbsvc	r6, r5, #0, 6
     494:	746e6572 	strbtvc	r6, [lr], #-1394	; 0xfffffa8e
     498:	6172665f 	cmnvs	r2, pc, asr r6
     49c:	7400656d 	strvc	r6, [r0], #-1389	; 0xfffffa93
     4a0:	656c7469 	strbvs	r7, [ip, #-1129]!	; 0xfffffb97
     4a4:	6867694c 	stmdavs	r7!, {r2, r3, r6, r8, fp, sp, lr}^
     4a8:	65740074 	ldrbvs	r0, [r4, #-116]!	; 0xffffff8c
     4ac:	7250706d 	subsvc	r7, r0, #109	; 0x6d
     4b0:	47737365 	ldrbmi	r7, [r3, -r5, ror #6]!
     4b4:	00796172 	rsbseq	r6, r9, r2, ror r1
     4b8:	736e6f6d 	cmnvc	lr, #436	; 0x1b4
     4bc:	50726574 	rsbspl	r6, r2, r4, ror r5
     4c0:	746e696f 	strbtvc	r6, [lr], #-2415	; 0xfffff691
     4c4:	69007265 	stmdbvs	r0, {r0, r2, r5, r6, r9, ip, sp, lr}
     4c8:	5374696e 	cmnpl	r4, #1802240	; 0x1b8000
     4cc:	74697270 	strbtvc	r7, [r9], #-624	; 0xfffffd90
     4d0:	74007365 	strvc	r7, [r0], #-869	; 0xfffffc9b
     4d4:	43706d65 	cmnmi	r0, #6464	; 0x1940
     4d8:	6c747361 	ldclvs	3, cr7, [r4], #-388	; 0xfffffe7c
     4dc:	61724765 	cmnvs	r2, r5, ror #14
     4e0:	65740079 	ldrbvs	r0, [r4, #-121]!	; 0xffffff87
     4e4:	6954706d 	ldmdbvs	r4, {r0, r2, r3, r5, r6, ip, sp, lr}^
     4e8:	42656c74 	rsbmi	r6, r5, #116, 24	; 0x7400
     4ec:	6b63616c 	blvs	18d8aa4 <startup-0x1e72755c>
     4f0:	736e7500 	cmnvc	lr, #0, 10
     4f4:	656e6769 	strbvs	r6, [lr, #-1897]!	; 0xfffff897
     4f8:	68632064 	stmdavs	r3!, {r2, r5, r6, sp}^
     4fc:	64007261 	strvs	r7, [r0], #-609	; 0xfffffd9f
     500:	5f776172 	svcpl	0x00776172
     504:	66667562 	strbtvs	r7, [r6], -r2, ror #10
     508:	625f7265 	subsvs	r7, pc, #1342177286	; 0x50000006
     50c:	6b63616c 	blvs	18d8ac4 <startup-0x1e72753c>
     510:	6172675f 	cmnvs	r2, pc, asr r7
     514:	6f6d0079 	svcvs	0x006d0079
     518:	6574736e 	ldrbvs	r7, [r4, #-878]!	; 0xfffffc92
     51c:	696c5f72 	stmdbvs	ip!, {r1, r4, r5, r6, r8, r9, sl, fp, ip, lr}^
     520:	5f746867 	svcpl	0x00746867
     524:	73746962 	cmnvc	r4, #1605632	; 0x188000
     528:	73616300 	cmnvc	r1, #0, 6
     52c:	5f656c74 	svcpl	0x00656c74
     530:	63616c62 	cmnvs	r1, #25088	; 0x6200
     534:	69625f6b 	stmdbvs	r2!, {r0, r1, r3, r5, r6, r8, r9, sl, fp, ip, lr}^
     538:	74007374 	strvc	r7, [r0], #-884	; 0xfffffc8c
     53c:	656c7469 	strbvs	r7, [ip, #-1129]!	; 0xfffffb97
     540:	006a624f 	rsbeq	r6, sl, pc, asr #4
     544:	6d2f3a43 	vstmdbvs	pc!, {s6-s72}
     548:	632f706f 			; <UNDEFINED> instruction: 0x632f706f
     54c:	706f4d2f 	rsbvc	r4, pc, pc, lsr #26
     550:	6f62616c 	svcvs	0x0062616c
     554:	69746172 	ldmdbvs	r4!, {r1, r4, r5, r6, r8, sp, lr}^
     558:	72656e6f 	rsbvc	r6, r5, #1776	; 0x6f0
     55c:	5049442f 	subpl	r4, r9, pc, lsr #8
     560:	69572d73 	ldmdbvs	r7, {r0, r1, r4, r5, r6, r8, sl, fp, sp}^
     564:	2f686374 	svccs	0x00686374
     568:	74732f43 	ldrbtvc	r2, [r3], #-3907	; 0xfffff0bd
     56c:	75747261 	ldrbvc	r7, [r4, #-609]!	; 0xfffffd9f
     570:	00632e70 	rsbeq	r2, r3, r0, ror lr
     574:	656d6167 	strbvs	r6, [sp, #-359]!	; 0xfffffe99
     578:	656a624f 	strbvs	r6, [sl, #-591]!	; 0xfffffdb1
     57c:	00737463 	rsbseq	r7, r3, r3, ror #8
     580:	74736163 	ldrbtvc	r6, [r3], #-355	; 0xfffffe9d
     584:	7247656c 	subvc	r6, r7, #108, 10	; 0x1b000000
     588:	6d007961 	vstrvs.16	s14, [r0, #-194]	; 0xffffff3e	; <UNPREDICTABLE>
     58c:	74736e6f 	ldrbtvc	r6, [r3], #-3695	; 0xfffff191
     590:	72477265 	subvc	r7, r7, #1342177286	; 0x50000006
     594:	74007961 	strvc	r7, [r0], #-2401	; 0xfffff69f
     598:	656c7469 	strbvs	r7, [ip, #-1129]!	; 0xfffffb97
     59c:	79617247 	stmdbvc	r1!, {r0, r1, r2, r6, r9, ip, sp, lr}^
     5a0:	50494400 	subpl	r4, r9, r0, lsl #8
     5a4:	7275625f 	rsbsvc	r6, r5, #-268435451	; 0xf0000005
     5a8:	0064656e 	rsbeq	r6, r4, lr, ror #10
     5ac:	72727563 	rsbsvc	r7, r2, #415236096	; 0x18c00000
     5b0:	5f746e65 	svcpl	0x00746e65
     5b4:	65726373 	ldrbvs	r6, [r2, #-883]!	; 0xfffffc8d
     5b8:	64006e65 	strvs	r6, [r0], #-3685	; 0xfffff19b
     5bc:	61747369 	cmnvs	r4, r9, ror #6
     5c0:	5f65636e 	svcpl	0x0065636e
     5c4:	79616c70 	stmdbvc	r1!, {r4, r5, r6, sl, fp, sp, lr}^
     5c8:	665f7265 	ldrbvs	r7, [pc], -r5, ror #4
     5cc:	00657269 	rsbeq	r7, r5, r9, ror #4
     5d0:	706d6574 	rsbvc	r6, sp, r4, ror r5
     5d4:	73657250 	cmnvc	r5, #80, 4
     5d8:	616c4273 	smcvs	50211	; 0xc423
     5dc:	62006b63 	andvs	r6, r0, #101376	; 0x18c00
     5e0:	69625f67 	stmdbvs	r2!, {r0, r1, r2, r5, r6, r8, r9, sl, fp, ip, lr}^
     5e4:	62007374 	andvs	r7, r0, #116, 6	; 0xd0000001
     5e8:	6b63616c 	blvs	18d8ba0 <startup-0x1e727460>
     5ec:	67616d49 	strbvs	r6, [r1, -r9, asr #26]!
     5f0:	6f6d0065 	svcvs	0x006d0065
     5f4:	6574736e 	ldrbvs	r7, [r4, #-878]!	; 0xfffffc92
     5f8:	72675f72 	rsbvc	r5, r7, #456	; 0x1c8
     5fc:	625f7961 	subsvs	r7, pc, #1589248	; 0x184000
     600:	00737469 	rsbseq	r7, r3, r9, ror #8
     604:	74736163 	ldrbtvc	r6, [r3], #-355	; 0xfffffe9d
     608:	6d49656c 	cfstr64vs	mvdx6, [r9, #-432]	; 0xfffffe50
     60c:	00656761 	rsbeq	r6, r5, r1, ror #14
     610:	73726966 	cmnvc	r2, #1671168	; 0x198000
     614:	69740074 	ldmdbvs	r4!, {r2, r4, r5, r6}^
     618:	49656c74 	stmdbmi	r5!, {r2, r4, r5, r6, sl, fp, sp, lr}^
     61c:	6567616d 	strbvs	r6, [r7, #-365]!	; 0xfffffe93
     620:	61720073 	cmnvs	r2, r3, ror r0
     624:	6d6f646e 	cfstrdvs	mvd6, [pc, #-440]!	; 474 <startup-0x1ffffb8c>
     628:	6565735f 	strbvs	r7, [r5, #-863]!	; 0xfffffca1
     62c:	69660064 	stmdbvs	r6!, {r2, r5, r6}^
     630:	00326572 	eorseq	r6, r2, r2, ror r5
     634:	65726966 	ldrbvs	r6, [r2, #-2406]!	; 0xfffff69a
     638:	69660033 	stmdbvs	r6!, {r0, r1, r4, r5}^
     63c:	00346572 	eorseq	r6, r4, r2, ror r5
     640:	73657270 	cmnvc	r5, #112, 4
     644:	616c4273 	smcvs	50211	; 0xc423
     648:	6d006b63 	vstrvs	d6, [r0, #-396]	; 0xfffffe74
     64c:	74736e6f 	ldrbtvc	r6, [r3], #-3695	; 0xfffff191
     650:	6d497265 	sfmvs	f7, 2, [r9, #-404]	; 0xfffffe6c
     654:	00656761 	rsbeq	r6, r5, r1, ror #14
     658:	736f5079 	cmnvc	pc, #121	; 0x79
     65c:	73616c00 	cmnvc	r1, #0, 24
     660:	6c635f74 	stclvs	15, cr5, [r3], #-464	; 0xfffffe30
     664:	5f626d69 	svcpl	0x00626d69
     668:	756c6176 	strbvc	r6, [ip, #-374]!	; 0xfffffe8a
     66c:	65740065 	ldrbvs	r0, [r4, #-101]!	; 0xffffff9b
     670:	32317478 	eorscc	r7, r1, #120, 8	; 0x78000000
     674:	6d657400 	cfstrdvs	mvd7, [r5, #-0]
     678:	74695470 	strbtvc	r5, [r9], #-1136	; 0xfffffb90
     67c:	694c656c 	stmdbvs	ip, {r2, r3, r5, r6, r8, sl, sp, lr}^
     680:	00746867 	rsbseq	r6, r4, r7, ror #16
     684:	61647075 	smcvs	18181	; 0x4705
     688:	6e006574 	cfrshl64vs	mvdx0, mvdx4, r6
     68c:	49445f6f 	stmdbmi	r4, {r0, r1, r2, r3, r5, r6, r8, r9, sl, fp, ip, lr}^
     690:	72700050 	rsbsvc	r0, r0, #80	; 0x50
     694:	49737365 	ldmdbmi	r3!, {r0, r2, r5, r6, r8, r9, ip, sp, lr}^
     698:	6567616d 	strbvs	r6, [r7, #-365]!	; 0xfffffe93
     69c:	78650073 	stmdavc	r5!, {r0, r1, r4, r5, r6}^
     6a0:	646f6c70 	strbtvs	r6, [pc], #-3184	; 6a8 <startup-0x1ffff958>
     6a4:	00676e69 	rsbeq	r6, r7, r9, ror #28
     6a8:	706d6574 	rsbvc	r6, sp, r4, ror r5
     6ac:	6c746954 			; <UNDEFINED> instruction: 0x6c746954
     6b0:	61724765 	cmnvs	r2, r5, ror #14
     6b4:	53740079 	cmnpl	r4, #121	; 0x79
     6b8:	54776f6c 	ldrbtpl	r6, [r7], #-3948	; 0xfffff094
     6bc:	00747865 	rsbseq	r7, r4, r5, ror #16
     6c0:	746e6975 	strbtvc	r6, [lr], #-2421	; 0xfffff68b
     6c4:	00745f38 	rsbseq	r5, r4, r8, lsr pc
     6c8:	65726966 	ldrbvs	r6, [r2, #-2406]!	; 0xfffff69a
     6cc:	61620073 	smcvs	8195	; 0x2003
     6d0:	75426b63 	strbvc	r6, [r2, #-2915]	; 0xfffff49d
     6d4:	72656666 	rsbvc	r6, r5, #106954752	; 0x6600000
     6d8:	6867694c 	stmdavs	r7!, {r2, r3, r6, r8, fp, sp, lr}^
     6dc:	61620074 	smcvs	8196	; 0x2004
     6e0:	75426b63 	strbvc	r6, [r2, #-2915]	; 0xfffff49d
     6e4:	72656666 	rsbvc	r6, r5, #106954752	; 0x6600000
     6e8:	79617247 	stmdbvc	r1!, {r0, r1, r2, r6, r9, ip, sp, lr}^
     6ec:	6d657400 	cfstrdvs	mvd7, [r5, #-0]
     6f0:	65725070 	ldrbvs	r5, [r2, #-112]!	; 0xffffff90
     6f4:	694c7373 	stmdbvs	ip, {r0, r1, r4, r5, r6, r8, r9, ip, sp, lr}^
     6f8:	00746867 	rsbseq	r6, r4, r7, ror #16
     6fc:	6d614774 	stclvs	7, cr4, [r1, #-464]!	; 0xfffffe30
     700:	6a624f65 	bvs	189449c <startup-0x1e76bb64>
     704:	00746365 	rsbseq	r6, r4, r5, ror #6
     708:	736f5078 	cmnvc	pc, #120	; 0x78
     70c:	73616300 	cmnvc	r1, #0, 6
     710:	42656c74 	rsbmi	r6, r5, #116, 24	; 0x7400
     714:	6b63616c 	blvs	18d8ccc <startup-0x1e727334>
     718:	6d616700 	stclvs	7, cr6, [r1, #-0]
     71c:	766f5f65 	strbtvc	r5, [pc], -r5, ror #30
     720:	635f7265 	cmpvs	pc, #1342177286	; 0x50000006
     724:	746e756f 	strbtvc	r7, [lr], #-1391	; 0xfffffa91
     728:	74007265 	strvc	r7, [r0], #-613	; 0xfffffd9b
     72c:	31747865 	cmncc	r4, r5, ror #16
     730:	65740030 	ldrbvs	r0, [r4, #-48]!	; 0xffffffd0
     734:	31317478 	teqcc	r1, r8, ror r4
     738:	69656800 	stmdbvs	r5!, {fp, sp, lr}^
     73c:	00746867 	rsbseq	r6, r4, r7, ror #16
     740:	74786574 	ldrbtvc	r6, [r8], #-1396	; 0xfffffa8c
     744:	656d6147 	strbvs	r6, [sp, #-327]!	; 0xfffffeb9
     748:	7265764f 	rsbvc	r7, r5, #82837504	; 0x4f00000
     74c:	69616d00 	stmdbvs	r1!, {r8, sl, fp, sp, lr}^
     750:	7270006e 	rsbsvc	r0, r0, #110	; 0x6e
     754:	4c737365 	ldclmi	3, cr7, [r3], #-404	; 0xfffffe6c
     758:	74686769 	strbtvc	r6, [r8], #-1897	; 0xfffff897
     75c:	6e6f6d00 	cdpvs	13, 6, cr6, cr15, cr0, {0}
     760:	72657473 	rsbvc	r7, r5, #1929379840	; 0x73000000
     764:	67616d49 	strbvs	r6, [r1, -r9, asr #26]!
     768:	67007365 	strvs	r7, [r0, -r5, ror #6]
     76c:	4f656d61 	svcmi	0x00656d61
     770:	63656a62 	cmnvs	r5, #401408	; 0x62000
     774:	64705574 	ldrbtvs	r5, [r0], #-1396	; 0xfffffa8c
     778:	00657461 	rsbeq	r7, r5, r1, ror #8
     77c:	6d2f3a43 	vstmdbvs	pc!, {s6-s72}
     780:	632f706f 			; <UNDEFINED> instruction: 0x632f706f
     784:	706f4d2f 	rsbvc	r4, pc, pc, lsr #26
     788:	6f62616c 	svcvs	0x0062616c
     78c:	69746172 	ldmdbvs	r4!, {r1, r4, r5, r6, r8, sp, lr}^
     790:	72656e6f 	rsbvc	r6, r5, #1776	; 0x6f0
     794:	5049442f 	subpl	r4, r9, pc, lsr #8
     798:	69572d73 	ldmdbvs	r7, {r0, r1, r4, r5, r6, r8, sl, fp, sp}^
     79c:	2f686374 	svccs	0x00686374
     7a0:	61672f43 	cmnvs	r7, r3, asr #30
     7a4:	626f656d 	rsbvs	r6, pc, #457179136	; 0x1b400000
     7a8:	7463656a 	strbtvc	r6, [r3], #-1386	; 0xfffffa96
     7ac:	7400632e 	strvc	r6, [r0], #-814	; 0xfffffcd2
     7b0:	00736968 	rsbseq	r6, r3, r8, ror #18
     7b4:	65726966 	ldrbvs	r6, [r2, #-2406]!	; 0xfffff69a
     7b8:	61724735 	cmnvs	r2, r5, lsr r7
     7bc:	69660079 	stmdbvs	r6!, {r0, r3, r4, r5, r6}^
     7c0:	47316572 			; <UNDEFINED> instruction: 0x47316572
     7c4:	00796172 	rsbseq	r6, r9, r2, ror r1
     7c8:	706d6574 	rsbvc	r6, sp, r4, ror r5
     7cc:	65726946 	ldrbvs	r6, [r2, #-2374]!	; 0xfffff6ba
     7d0:	61724732 	cmnvs	r2, r2, lsr r7
     7d4:	69660079 	stmdbvs	r6!, {r0, r3, r4, r5, r6}^
     7d8:	47336572 			; <UNDEFINED> instruction: 0x47336572
     7dc:	00796172 	rsbseq	r6, r9, r2, ror r1
     7e0:	706d6574 	rsbvc	r6, sp, r4, ror r5
     7e4:	65726946 	ldrbvs	r6, [r2, #-2374]!	; 0xfffff6ba
     7e8:	61724734 	cmnvs	r2, r4, lsr r7
     7ec:	69660079 	stmdbvs	r6!, {r0, r3, r4, r5, r6}^
     7f0:	6c426572 	cfstr64vs	mvdx6, [r2], {114}	; 0x72
     7f4:	006b6361 	rsbeq	r6, fp, r1, ror #6
     7f8:	706d6574 	rsbvc	r6, sp, r4, ror r5
     7fc:	65726946 	ldrbvs	r6, [r2, #-2374]!	; 0xfffff6ba
     800:	61724733 	cmnvs	r2, r3, lsr r7
     804:	65740079 	ldrbvs	r0, [r4, #-121]!	; 0xffffff87
     808:	6946706d 	stmdbvs	r6, {r0, r2, r3, r5, r6, ip, sp, lr}^
     80c:	6c426572 	cfstr64vs	mvdx6, [r2], {114}	; 0x72
     810:	006b6361 	rsbeq	r6, fp, r1, ror #6
     814:	65726966 	ldrbvs	r6, [r2, #-2406]!	; 0xfffff69a
     818:	67694c31 			; <UNDEFINED> instruction: 0x67694c31
     81c:	66007468 	strvs	r7, [r0], -r8, ror #8
     820:	34657269 	strbtcc	r7, [r5], #-617	; 0xfffffd97
     824:	6867694c 	stmdavs	r7!, {r2, r3, r6, r8, fp, sp, lr}^
     828:	69660074 	stmdbvs	r6!, {r2, r4, r5, r6}^
     82c:	5f326572 	svcpl	0x00326572
     830:	79617267 	stmdbvc	r1!, {r0, r1, r2, r5, r6, r9, ip, sp, lr}^
     834:	7469625f 	strbtvc	r6, [r9], #-607	; 0xfffffda1
     838:	69660073 	stmdbvs	r6!, {r0, r1, r4, r5, r6}^
     83c:	5f346572 	svcpl	0x00346572
     840:	6867696c 	stmdavs	r7!, {r2, r3, r5, r6, r8, fp, sp, lr}^
     844:	69625f74 	stmdbvs	r2!, {r2, r4, r5, r6, r8, r9, sl, fp, ip, lr}^
     848:	66007374 			; <UNDEFINED> instruction: 0x66007374
     84c:	33657269 	cmncc	r5, #-1879048186	; 0x90000006
     850:	6867694c 	stmdavs	r7!, {r2, r3, r6, r8, fp, sp, lr}^
     854:	6f700074 	svcvs	0x00700074
     858:	65746e69 	ldrbvs	r6, [r4, #-3689]!	; 0xfffff197
     85c:	70003172 	andvc	r3, r0, r2, ror r1
     860:	746e696f 	strbtvc	r6, [lr], #-2415	; 0xfffff691
     864:	00337265 	eorseq	r7, r3, r5, ror #4
     868:	65726966 	ldrbvs	r6, [r2, #-2406]!	; 0xfffff69a
     86c:	72675f35 	rsbvc	r5, r7, #53, 30	; 0xd4
     870:	625f7961 	subsvs	r7, pc, #1589248	; 0x184000
     874:	00737469 	rsbseq	r7, r3, r9, ror #8
     878:	65726966 	ldrbvs	r6, [r2, #-2406]!	; 0xfffff69a
     87c:	616d4933 	cmnvs	sp, r3, lsr r9
     880:	70006567 	andvc	r6, r0, r7, ror #10
     884:	746e696f 	strbtvc	r6, [lr], #-2415	; 0xfffff691
     888:	00307265 	eorseq	r7, r0, r5, ror #4
     88c:	65726966 	ldrbvs	r6, [r2, #-2406]!	; 0xfffff69a
     890:	67694c35 			; <UNDEFINED> instruction: 0x67694c35
     894:	70007468 	andvc	r7, r0, r8, ror #8
     898:	746e696f 	strbtvc	r6, [lr], #-2415	; 0xfffff691
     89c:	00327265 	eorseq	r7, r2, r5, ror #4
     8a0:	706d6574 	rsbvc	r6, sp, r4, ror r5
     8a4:	65726946 	ldrbvs	r6, [r2, #-2374]!	; 0xfffff6ba
     8a8:	61724735 	cmnvs	r2, r5, lsr r7
     8ac:	69660079 	stmdbvs	r6!, {r0, r3, r4, r5, r6}^
     8b0:	5f316572 	svcpl	0x00316572
     8b4:	79617267 	stmdbvc	r1!, {r0, r1, r2, r5, r6, r9, ip, sp, lr}^
     8b8:	7469625f 	strbtvc	r6, [r9], #-607	; 0xfffffda1
     8bc:	69660073 	stmdbvs	r6!, {r0, r1, r4, r5, r6}^
     8c0:	4c326572 	cfldr32mi	mvfx6, [r2], #-456	; 0xfffffe38
     8c4:	74686769 	strbtvc	r6, [r8], #-1897	; 0xfffff897
     8c8:	72696600 	rsbvc	r6, r9, #0, 12
     8cc:	6c5f3165 	ldfvse	f3, [pc], {101}	; 0x65
     8d0:	74686769 	strbtvc	r6, [r8], #-1897	; 0xfffff897
     8d4:	7469625f 	strbtvc	r6, [r9], #-607	; 0xfffffda1
     8d8:	69660073 	stmdbvs	r6!, {r0, r1, r4, r5, r6}^
     8dc:	5f326572 	svcpl	0x00326572
     8e0:	6867696c 	stmdavs	r7!, {r2, r3, r5, r6, r8, fp, sp, lr}^
     8e4:	69625f74 	stmdbvs	r2!, {r2, r4, r5, r6, r8, r9, sl, fp, ip, lr}^
     8e8:	66007374 			; <UNDEFINED> instruction: 0x66007374
     8ec:	4f657269 	svcmi	0x00657269
     8f0:	66006a62 	strvs	r6, [r0], -r2, ror #20
     8f4:	32657269 	rsbcc	r7, r5, #-1879048186	; 0x90000006
     8f8:	79617247 	stmdbvc	r1!, {r0, r1, r2, r6, r9, ip, sp, lr}^
     8fc:	72696600 	rsbvc	r6, r9, #0, 12
     900:	675f3465 	ldrbvs	r3, [pc, -r5, ror #8]
     904:	5f796172 	svcpl	0x00796172
     908:	73746962 	cmnvc	r4, #1605632	; 0x188000
     90c:	6d657400 	cfstrdvs	mvd7, [r5, #-0]
     910:	72694670 	rsbvc	r4, r9, #112, 12	; 0x7000000
     914:	694c3365 	stmdbvs	ip, {r0, r2, r5, r6, r8, r9, ip, sp}^
     918:	00746867 	rsbseq	r6, r4, r7, ror #16
     91c:	65726966 	ldrbvs	r6, [r2, #-2406]!	; 0xfffff69a
     920:	616d4934 	cmnvs	sp, r4, lsr r9
     924:	74006567 	strvc	r6, [r0], #-1383	; 0xfffffa99
     928:	46706d65 	ldrbtmi	r6, [r0], -r5, ror #26
     92c:	31657269 	cmncc	r5, r9, ror #4
     930:	6867694c 	stmdavs	r7!, {r2, r3, r6, r8, fp, sp, lr}^
     934:	69660074 	stmdbvs	r6!, {r2, r4, r5, r6}^
     938:	54747372 	ldrbtpl	r7, [r4], #-882	; 0xfffffc8e
     93c:	00656d69 	rsbeq	r6, r5, r9, ror #26
     940:	74696e69 	strbtvc	r6, [r9], #-3689	; 0xfffff197
     944:	7269665f 	rsbvc	r6, r9, #99614720	; 0x5f00000
     948:	69660065 	stmdbvs	r6!, {r0, r2, r5, r6}^
     94c:	5f356572 	svcpl	0x00356572
     950:	6867696c 	stmdavs	r7!, {r2, r3, r5, r6, r8, fp, sp, lr}^
     954:	69625f74 	stmdbvs	r2!, {r2, r4, r5, r6, r8, r9, sl, fp, ip, lr}^
     958:	66007374 			; <UNDEFINED> instruction: 0x66007374
     95c:	49657269 	stmdbmi	r5!, {r0, r3, r5, r6, r9, ip, sp, lr}^
     960:	6567616d 	strbvs	r6, [r7, #-365]!	; 0xfffffe93
     964:	69660073 	stmdbvs	r6!, {r0, r1, r4, r5, r6}^
     968:	49316572 	ldmdbmi	r1!, {r1, r4, r5, r6, r8, sl, sp, lr}
     96c:	6567616d 	strbvs	r6, [r7, #-365]!	; 0xfffffe93
     970:	72696600 	rsbvc	r6, r9, #0, 12
     974:	72473465 	subvc	r3, r7, #1694498816	; 0x65000000
     978:	74007961 	strvc	r7, [r0], #-2401	; 0xfffff69f
     97c:	46706d65 	ldrbtmi	r6, [r0], -r5, ror #26
     980:	31657269 	cmncc	r5, r9, ror #4
     984:	79617247 	stmdbvc	r1!, {r0, r1, r2, r6, r9, ip, sp, lr}^
     988:	6d657400 	cfstrdvs	mvd7, [r5, #-0]
     98c:	72694670 	rsbvc	r4, r9, #112, 12	; 0x7000000
     990:	694c3465 	stmdbvs	ip, {r0, r2, r5, r6, sl, ip, sp}^
     994:	00746867 	rsbseq	r6, r4, r7, ror #16
     998:	65726966 	ldrbvs	r6, [r2, #-2406]!	; 0xfffff69a
     99c:	696c5f33 	stmdbvs	ip!, {r0, r1, r4, r5, r8, r9, sl, fp, ip, lr}^
     9a0:	5f746867 	svcpl	0x00746867
     9a4:	73746962 	cmnvc	r4, #1605632	; 0x188000
     9a8:	72696600 	rsbvc	r6, r9, #0, 12
     9ac:	6d493565 	cfstr64vs	mvdx3, [r9, #-404]	; 0xfffffe6c
     9b0:	00656761 	rsbeq	r6, r5, r1, ror #14
     9b4:	65726966 	ldrbvs	r6, [r2, #-2406]!	; 0xfffff69a
     9b8:	616c625f 	cmnvs	ip, pc, asr r2
     9bc:	325f6b63 	subscc	r6, pc, #101376	; 0x18c00
     9c0:	7469625f 	strbtvc	r6, [r9], #-607	; 0xfffffda1
     9c4:	65740073 	ldrbvs	r0, [r4, #-115]!	; 0xffffff8d
     9c8:	6946706d 	stmdbvs	r6, {r0, r2, r3, r5, r6, ip, sp, lr}^
     9cc:	4c326572 	cfldr32mi	mvfx6, [r2], #-456	; 0xfffffe38
     9d0:	74686769 	strbtvc	r6, [r8], #-1897	; 0xfffff897
     9d4:	72696600 	rsbvc	r6, r9, #0, 12
     9d8:	6d493265 	sfmvs	f3, 2, [r9, #-404]	; 0xfffffe6c
     9dc:	00656761 	rsbeq	r6, r5, r1, ror #14
     9e0:	706d6574 	rsbvc	r6, sp, r4, ror r5
     9e4:	65726946 	ldrbvs	r6, [r2, #-2374]!	; 0xfffff6ba
     9e8:	67694c35 			; <UNDEFINED> instruction: 0x67694c35
     9ec:	43007468 	movwmi	r7, #1128	; 0x468
     9f0:	6f6d2f3a 	svcvs	0x006d2f3a
     9f4:	2f632f70 	svccs	0x00632f70
     9f8:	6c706f4d 	ldclvs	15, cr6, [r0], #-308	; 0xfffffecc
     9fc:	726f6261 	rsbvc	r6, pc, #268435462	; 0x10000006
     a00:	6f697461 	svcvs	0x00697461
     a04:	2f72656e 	svccs	0x0072656e
     a08:	73504944 	cmpvc	r0, #68, 18	; 0x110000
     a0c:	7469572d 	strbtvc	r5, [r9], #-1837	; 0xfffff8d3
     a10:	432f6863 			; <UNDEFINED> instruction: 0x432f6863
     a14:	7269662f 	rsbvc	r6, r9, #49283072	; 0x2f00000
     a18:	00632e65 	rsbeq	r2, r3, r5, ror #28
     a1c:	65726966 	ldrbvs	r6, [r2, #-2406]!	; 0xfffff69a
     a20:	72675f33 	rsbvc	r5, r7, #51, 30	; 0xcc
     a24:	625f7961 	subsvs	r7, pc, #1589248	; 0x184000
     a28:	00737469 	rsbseq	r7, r3, r9, ror #8
     a2c:	7473616c 	ldrbtvc	r6, [r3], #-364	; 0xfffffe94
     a30:	68676952 	stmdavs	r7!, {r1, r4, r6, r8, fp, sp, lr}^
     a34:	6c615674 	stclvs	6, cr5, [r1], #-464	; 0xfffffe30
     a38:	6c006575 	cfstr32vs	mvfx6, [r0], {117}	; 0x75
     a3c:	4a747361 	bmi	1d1d7c8 <startup-0x1e2e2838>
     a40:	56706d75 			; <UNDEFINED> instruction: 0x56706d75
     a44:	65756c61 	ldrbvs	r6, [r5, #-3169]!	; 0xfffff39f
     a48:	70537900 	subsvc	r7, r3, r0, lsl #18
     a4c:	00646565 	rsbeq	r6, r4, r5, ror #10
     a50:	65705378 	ldrbvs	r5, [r0, #-888]!	; 0xfffffc88
     a54:	6c006465 	cfstrsvs	mvf6, [r0], {101}	; 0x65
     a58:	4c747361 	ldclmi	3, cr7, [r4], #-388	; 0xfffffe7c
     a5c:	56746665 	ldrbtpl	r6, [r4], -r5, ror #12
     a60:	65756c61 	ldrbvs	r6, [r5, #-3169]!	; 0xfffff39f
     a64:	2f3a4300 	svccs	0x003a4300
     a68:	2f706f6d 	svccs	0x00706f6d
     a6c:	6f4d2f63 	svcvs	0x004d2f63
     a70:	62616c70 	rsbvs	r6, r1, #112, 24	; 0x7000
     a74:	7461726f 	strbtvc	r7, [r1], #-623	; 0xfffffd91
     a78:	656e6f69 	strbvs	r6, [lr, #-3945]!	; 0xfffff097
     a7c:	49442f72 	stmdbmi	r4, {r1, r4, r5, r6, r8, r9, sl, fp, sp}^
     a80:	572d7350 			; <UNDEFINED> instruction: 0x572d7350
     a84:	68637469 	stmdavs	r3!, {r0, r3, r5, r6, sl, ip, sp, lr}^
     a88:	702f432f 	eorvc	r4, pc, pc, lsr #6
     a8c:	6579616c 	ldrbvs	r6, [r9, #-364]!	; 0xfffffe94
     a90:	00632e72 	rsbeq	r2, r3, r2, ror lr
     a94:	79616c70 	stmdbvc	r1!, {r4, r5, r6, sl, fp, sp, lr}^
     a98:	65527265 	ldrbvs	r7, [r2, #-613]	; 0xfffffd9b
     a9c:	00746573 	rsbseq	r6, r4, r3, ror r5
     aa0:	79616c70 	stmdbvc	r1!, {r4, r5, r6, sl, fp, sp, lr}^
     aa4:	70557265 	subsvc	r7, r5, r5, ror #4
     aa8:	65746164 	ldrbvs	r6, [r4, #-356]!	; 0xfffffe9c
     aac:	6d657400 	cfstrdvs	mvd7, [r5, #-0]
     ab0:	72694270 	rsbvc	r4, r9, #112, 4
     ab4:	694c3264 	stmdbvs	ip, {r2, r5, r6, r9, ip, sp}^
     ab8:	00746867 	rsbseq	r6, r4, r7, ror #16
     abc:	64726962 	ldrbtvs	r6, [r2], #-2402	; 0xfffff69e
     ac0:	696c5f33 	stmdbvs	ip!, {r0, r1, r4, r5, r8, r9, sl, fp, ip, lr}^
     ac4:	5f746867 	svcpl	0x00746867
     ac8:	73746962 	cmnvc	r4, #1605632	; 0x188000
     acc:	72696200 	rsbvc	r6, r9, #0, 4
     ad0:	6d493464 	cfstrdvs	mvd3, [r9, #-400]	; 0xfffffe70
     ad4:	00656761 	rsbeq	r6, r5, r1, ror #14
     ad8:	64726962 	ldrbtvs	r6, [r2], #-2402	; 0xfffff69e
     adc:	696c5f34 	stmdbvs	ip!, {r2, r4, r5, r8, r9, sl, fp, ip, lr}^
     ae0:	5f746867 	svcpl	0x00746867
     ae4:	73746962 	cmnvc	r4, #1605632	; 0x188000
     ae8:	6d657400 	cfstrdvs	mvd7, [r5, #-0]
     aec:	72694270 	rsbvc	r4, r9, #112, 4
     af0:	694c3564 	stmdbvs	ip, {r2, r5, r6, r8, sl, ip, sp}^
     af4:	00746867 	rsbseq	r6, r4, r7, ror #16
     af8:	6e696f70 	mcrvs	15, 3, r6, cr9, cr0, {3}
     afc:	31726574 	cmncc	r2, r4, ror r5
     b00:	69620034 	stmdbvs	r2!, {r2, r4, r5}^
     b04:	5f356472 	svcpl	0x00356472
     b08:	6867696c 	stmdavs	r7!, {r2, r3, r5, r6, r8, fp, sp, lr}^
     b0c:	69625f74 	stmdbvs	r2!, {r2, r4, r5, r6, r8, r9, sl, fp, ip, lr}^
     b10:	62007374 	andvs	r7, r0, #116, 6	; 0xd0000001
     b14:	33647269 	cmncc	r4, #-1879048186	; 0x90000006
     b18:	6867694c 	stmdavs	r7!, {r2, r3, r6, r8, fp, sp, lr}^
     b1c:	6f700074 	svcvs	0x00700074
     b20:	65746e69 	ldrbvs	r6, [r4, #-3689]!	; 0xfffff197
     b24:	00393172 	eorseq	r3, r9, r2, ror r1
     b28:	64726962 	ldrbtvs	r6, [r2], #-2402	; 0xfffff69e
     b2c:	67694c31 			; <UNDEFINED> instruction: 0x67694c31
     b30:	62007468 	andvs	r7, r0, #104, 8	; 0x68000000
     b34:	33647269 	cmncc	r4, #-1879048186	; 0x90000006
     b38:	63616c42 	cmnvs	r1, #16896	; 0x4200
     b3c:	6962006b 	stmdbvs	r2!, {r0, r1, r3, r5, r6}^
     b40:	47316472 			; <UNDEFINED> instruction: 0x47316472
     b44:	00796172 	rsbseq	r6, r9, r2, ror r1
     b48:	706d6574 	rsbvc	r6, sp, r4, ror r5
     b4c:	64726942 	ldrbtvs	r6, [r2], #-2370	; 0xfffff6be
     b50:	616c4234 	cmnvs	ip, r4, lsr r2
     b54:	62006b63 	andvs	r6, r0, #101376	; 0x18c00
     b58:	35647269 	strbcc	r7, [r4, #-617]!	; 0xfffffd97
     b5c:	63616c42 	cmnvs	r1, #16896	; 0x4200
     b60:	6f70006b 	svcvs	0x0070006b
     b64:	65746e69 	ldrbvs	r6, [r4, #-3689]!	; 0xfffff197
     b68:	00303272 	eorseq	r3, r0, r2, ror r2
     b6c:	6e696f70 	mcrvs	15, 3, r6, cr9, cr0, {3}
     b70:	32726574 	rsbscc	r6, r2, #116, 10	; 0x1d000000
     b74:	69620031 	stmdbvs	r2!, {r0, r4, r5}^
     b78:	47346472 			; <UNDEFINED> instruction: 0x47346472
     b7c:	00796172 	rsbseq	r6, r9, r2, ror r1
     b80:	64726962 	ldrbtvs	r6, [r2], #-2402	; 0xfffff69e
     b84:	616c4232 	cmnvs	ip, r2, lsr r2
     b88:	70006b63 	andvc	r6, r0, r3, ror #22
     b8c:	746e696f 	strbtvc	r6, [lr], #-2415	; 0xfffff691
     b90:	34327265 	ldrtcc	r7, [r2], #-613	; 0xfffffd9b
     b94:	696f7000 	stmdbvs	pc!, {ip, sp, lr}^	; <UNPREDICTABLE>
     b98:	7265746e 	rsbvc	r7, r5, #1845493760	; 0x6e000000
     b9c:	74003631 	strvc	r3, [r0], #-1585	; 0xfffff9cf
     ba0:	42706d65 	rsbsmi	r6, r0, #6464	; 0x1940
     ba4:	32647269 	rsbcc	r7, r4, #-1879048186	; 0x90000006
     ba8:	79617247 	stmdbvc	r1!, {r0, r1, r2, r6, r9, ip, sp, lr}^
     bac:	6d657400 	cfstrdvs	mvd7, [r5, #-0]
     bb0:	72694270 	rsbvc	r4, r9, #112, 4
     bb4:	72473464 	subvc	r3, r7, #100, 8	; 0x64000000
     bb8:	74007961 	strvc	r7, [r0], #-2401	; 0xfffff69f
     bbc:	42706d65 	rsbsmi	r6, r0, #6464	; 0x1940
     bc0:	4c647269 	sfmmi	f7, 2, [r4], #-420	; 0xfffffe5c
     bc4:	74686769 	strbtvc	r6, [r8], #-1897	; 0xfffff897
     bc8:	6d657400 	cfstrdvs	mvd7, [r5, #-0]
     bcc:	72694270 	rsbvc	r4, r9, #112, 4
     bd0:	72473564 	subvc	r3, r7, #100, 10	; 0x19000000
     bd4:	70007961 	andvc	r7, r0, r1, ror #18
     bd8:	746e696f 	strbtvc	r6, [lr], #-2415	; 0xfffff691
     bdc:	33317265 	teqcc	r1, #1342177286	; 0x50000006
     be0:	72696200 	rsbvc	r6, r9, #0, 4
     be4:	625f3264 	subsvs	r3, pc, #100, 4	; 0x40000006
     be8:	6b63616c 	blvs	18d91a0 <startup-0x1e726e60>
     bec:	7469625f 	strbtvc	r6, [r9], #-607	; 0xfffffda1
     bf0:	69620073 	stmdbvs	r2!, {r0, r1, r4, r5, r6}^
     bf4:	5f316472 	svcpl	0x00316472
     bf8:	79617267 	stmdbvc	r1!, {r0, r1, r2, r5, r6, r9, ip, sp, lr}^
     bfc:	7469625f 	strbtvc	r6, [r9], #-607	; 0xfffffda1
     c00:	69620073 	stmdbvs	r2!, {r0, r1, r4, r5, r6}^
     c04:	49366472 	ldmdbmi	r6!, {r1, r4, r5, r6, sl, sp, lr}
     c08:	6567616d 	strbvs	r6, [r7, #-365]!	; 0xfffffe93
     c0c:	72696200 	rsbvc	r6, r9, #0, 4
     c10:	625f3364 	subsvs	r3, pc, #100, 6	; 0x90000001
     c14:	6b63616c 	blvs	18d91cc <startup-0x1e726e34>
     c18:	7469625f 	strbtvc	r6, [r9], #-607	; 0xfffffda1
     c1c:	69620073 	stmdbvs	r2!, {r0, r1, r4, r5, r6}^
     c20:	5f346472 	svcpl	0x00346472
     c24:	63616c62 	cmnvs	r1, #25088	; 0x6200
     c28:	69625f6b 	stmdbvs	r2!, {r0, r1, r3, r5, r6, r8, r9, sl, fp, ip, lr}^
     c2c:	62007374 	andvs	r7, r0, #116, 6	; 0xd0000001
     c30:	33647269 	cmncc	r4, #-1879048186	; 0x90000006
     c34:	67616d49 	strbvs	r6, [r1, -r9, asr #26]!
     c38:	69620065 	stmdbvs	r2!, {r0, r2, r5, r6}^
     c3c:	5f316472 	svcpl	0x00316472
     c40:	6867696c 	stmdavs	r7!, {r2, r3, r5, r6, r8, fp, sp, lr}^
     c44:	69625f74 	stmdbvs	r2!, {r2, r4, r5, r6, r8, r9, sl, fp, ip, lr}^
     c48:	62007374 	andvs	r7, r0, #116, 6	; 0xd0000001
     c4c:	35647269 	strbcc	r7, [r4, #-617]!	; 0xfffffd97
     c50:	616c625f 	cmnvs	ip, pc, asr r2
     c54:	625f6b63 	subsvs	r6, pc, #101376	; 0x18c00
     c58:	00737469 	rsbseq	r7, r3, r9, ror #8
     c5c:	706d6574 	rsbvc	r6, sp, r4, ror r5
     c60:	64726942 	ldrbtvs	r6, [r2], #-2370	; 0xfffff6be
     c64:	67694c33 			; <UNDEFINED> instruction: 0x67694c33
     c68:	62007468 	andvs	r7, r0, #104, 8	; 0x68000000
     c6c:	35647269 	strbcc	r7, [r4, #-617]!	; 0xfffffd97
     c70:	6172675f 	cmnvs	r2, pc, asr r7
     c74:	69625f79 	stmdbvs	r2!, {r0, r3, r4, r5, r6, r8, r9, sl, fp, ip, lr}^
     c78:	62007374 	andvs	r7, r0, #116, 6	; 0xd0000001
     c7c:	32647269 	rsbcc	r7, r4, #-1879048186	; 0x90000006
     c80:	79617247 	stmdbvc	r1!, {r0, r1, r2, r6, r9, ip, sp, lr}^
     c84:	6d657400 	cfstrdvs	mvd7, [r5, #-0]
     c88:	72694270 	rsbvc	r4, r9, #112, 4
     c8c:	694c3464 	stmdbvs	ip, {r2, r5, r6, sl, ip, sp}^
     c90:	00746867 	rsbseq	r6, r4, r7, ror #16
     c94:	706d6574 	rsbvc	r6, sp, r4, ror r5
     c98:	64726942 	ldrbtvs	r6, [r2], #-2370	; 0xfffff6be
     c9c:	61724733 	cmnvs	r2, r3, lsr r7
     ca0:	69620079 	stmdbvs	r2!, {r0, r3, r4, r5, r6}^
     ca4:	5f346472 	svcpl	0x00346472
     ca8:	79617267 	stmdbvc	r1!, {r0, r1, r2, r5, r6, r9, ip, sp, lr}^
     cac:	7469625f 	strbtvc	r6, [r9], #-607	; 0xfffffda1
     cb0:	6f700073 	svcvs	0x00700073
     cb4:	65746e69 	ldrbvs	r6, [r4, #-3689]!	; 0xfffff197
     cb8:	00333272 	eorseq	r3, r3, r2, ror r2
     cbc:	64726962 	ldrbtvs	r6, [r2], #-2402	; 0xfffff69e
     cc0:	67694c35 			; <UNDEFINED> instruction: 0x67694c35
     cc4:	62007468 	andvs	r7, r0, #104, 8	; 0x68000000
     cc8:	49647269 	stmdbmi	r4!, {r0, r3, r5, r6, r9, ip, sp, lr}^
     ccc:	6567616d 	strbvs	r6, [r7, #-365]!	; 0xfffffe93
     cd0:	65740073 	ldrbvs	r0, [r4, #-115]!	; 0xffffff8d
     cd4:	6942706d 	stmdbvs	r2, {r0, r2, r3, r5, r6, ip, sp, lr}^
     cd8:	42356472 	eorsmi	r6, r5, #1912602624	; 0x72000000
     cdc:	6b63616c 	blvs	18d9294 <startup-0x1e726d6c>
     ce0:	72696200 	rsbvc	r6, r9, #0, 4
     ce4:	6c423464 	cfstrdvs	mvd3, [r2], {100}	; 0x64
     ce8:	006b6361 	rsbeq	r6, fp, r1, ror #6
     cec:	706d6574 	rsbvc	r6, sp, r4, ror r5
     cf0:	64726942 	ldrbtvs	r6, [r2], #-2370	; 0xfffff6be
     cf4:	616c4232 	cmnvs	ip, r2, lsr r2
     cf8:	62006b63 	andvs	r6, r0, #101376	; 0x18c00
     cfc:	33647269 	cmncc	r4, #-1879048186	; 0x90000006
     d00:	6172675f 	cmnvs	r2, pc, asr r7
     d04:	69625f79 	stmdbvs	r2!, {r0, r3, r4, r5, r6, r8, r9, sl, fp, ip, lr}^
     d08:	62007374 	andvs	r7, r0, #116, 6	; 0xd0000001
     d0c:	31647269 	cmncc	r4, r9, ror #4
     d10:	63616c42 	cmnvs	r1, #16896	; 0x4200
     d14:	6962006b 	stmdbvs	r2!, {r0, r1, r3, r5, r6}^
     d18:	4c326472 	cfldrsmi	mvf6, [r2], #-456	; 0xfffffe38
     d1c:	74686769 	strbtvc	r6, [r8], #-1897	; 0xfffff897
     d20:	2f3a4300 	svccs	0x003a4300
     d24:	2f706f6d 	svccs	0x00706f6d
     d28:	6f4d2f63 	svcvs	0x004d2f63
     d2c:	62616c70 	rsbvs	r6, r1, #112, 24	; 0x7000
     d30:	7461726f 	strbtvc	r7, [r1], #-623	; 0xfffffd91
     d34:	656e6f69 	strbvs	r6, [lr, #-3945]!	; 0xfffff097
     d38:	49442f72 	stmdbmi	r4, {r1, r4, r5, r6, r8, r9, sl, fp, sp}^
     d3c:	572d7350 			; <UNDEFINED> instruction: 0x572d7350
     d40:	68637469 	stmdavs	r3!, {r0, r3, r5, r6, sl, ip, sp, lr}^
     d44:	622f432f 	eorvs	r4, pc, #-1140850688	; 0xbc000000
     d48:	2e647269 	cdpcs	2, 6, cr7, cr4, cr9, {3}
     d4c:	6e690063 	cdpvs	0, 6, cr0, cr9, cr3, {3}
     d50:	625f7469 	subsvs	r7, pc, #1761607680	; 0x69000000
     d54:	00647269 	rsbeq	r7, r4, r9, ror #4
     d58:	64726962 	ldrbtvs	r6, [r2], #-2402	; 0xfffff69e
     d5c:	006a624f 	rsbeq	r6, sl, pc, asr #4
     d60:	64726962 	ldrbtvs	r6, [r2], #-2402	; 0xfffff69e
     d64:	72675f32 	rsbvc	r5, r7, #50, 30	; 0xc8
     d68:	625f7961 	subsvs	r7, pc, #1589248	; 0x184000
     d6c:	00737469 	rsbseq	r7, r3, r9, ror #8
     d70:	706d6574 	rsbvc	r6, sp, r4, ror r5
     d74:	64726942 	ldrbtvs	r6, [r2], #-2370	; 0xfffff6be
     d78:	79617247 	stmdbvc	r1!, {r0, r1, r2, r6, r9, ip, sp, lr}^
     d7c:	72696200 	rsbvc	r6, r9, #0, 4
     d80:	72473564 	subvc	r3, r7, #100, 10	; 0x19000000
     d84:	62007961 	andvs	r7, r0, #1589248	; 0x184000
     d88:	31647269 	cmncc	r4, r9, ror #4
     d8c:	616c625f 	cmnvs	ip, pc, asr r2
     d90:	625f6b63 	subsvs	r6, pc, #101376	; 0x18c00
     d94:	00737469 	rsbseq	r7, r3, r9, ror #8
     d98:	64726962 	ldrbtvs	r6, [r2], #-2402	; 0xfffff69e
     d9c:	616d4931 	cmnvs	sp, r1, lsr r9
     da0:	62006567 	andvs	r6, r0, #432013312	; 0x19c00000
     da4:	33647269 	cmncc	r4, #-1879048186	; 0x90000006
     da8:	79617247 	stmdbvc	r1!, {r0, r1, r2, r6, r9, ip, sp, lr}^
     dac:	6e696600 	cdpvs	6, 6, cr6, cr9, cr0, {0}
     db0:	6f506c61 	svcvs	0x00506c61
     db4:	65746e69 	ldrbvs	r6, [r4, #-3689]!	; 0xfffff197
     db8:	65740072 	ldrbvs	r0, [r4, #-114]!	; 0xffffff8e
     dbc:	6942706d 	stmdbvs	r2, {r0, r2, r3, r5, r6, ip, sp, lr}^
     dc0:	6c426472 	cfstrdvs	mvd6, [r2], {114}	; 0x72
     dc4:	006b6361 	rsbeq	r6, fp, r1, ror #6
     dc8:	706d6574 	rsbvc	r6, sp, r4, ror r5
     dcc:	64726942 	ldrbtvs	r6, [r2], #-2370	; 0xfffff6be
     dd0:	616c4233 	cmnvs	ip, r3, lsr r2
     dd4:	70006b63 	andvc	r6, r0, r3, ror #22
     dd8:	746e696f 	strbtvc	r6, [lr], #-2415	; 0xfffff691
     ddc:	31317265 	teqcc	r1, r5, ror #4
     de0:	696f7000 	stmdbvs	pc!, {ip, sp, lr}^	; <UNPREDICTABLE>
     de4:	7265746e 	rsbvc	r7, r5, #1845493760	; 0x6e000000
     de8:	62003231 	andvs	r3, r0, #268435459	; 0x10000003
     dec:	34647269 	strbtcc	r7, [r4], #-617	; 0xfffffd97
     df0:	6867694c 	stmdavs	r7!, {r2, r3, r6, r8, fp, sp, lr}^
     df4:	69620074 	stmdbvs	r2!, {r2, r4, r5, r6}^
     df8:	49356472 	ldmdbmi	r5!, {r1, r4, r5, r6, sl, sp, lr}
     dfc:	6567616d 	strbvs	r6, [r7, #-365]!	; 0xfffffe93
     e00:	696f7000 	stmdbvs	pc!, {ip, sp, lr}^	; <UNPREDICTABLE>
     e04:	7265746e 	rsbvc	r7, r5, #1845493760	; 0x6e000000
     e08:	70003531 	andvc	r3, r0, r1, lsr r5
     e0c:	746e696f 	strbtvc	r6, [lr], #-2415	; 0xfffff691
     e10:	37317265 	ldrcc	r7, [r1, -r5, ror #4]!
     e14:	696f7000 	stmdbvs	pc!, {ip, sp, lr}^	; <UNPREDICTABLE>
     e18:	7265746e 	rsbvc	r7, r5, #1845493760	; 0x6e000000
     e1c:	62003831 	andvs	r3, r0, #3211264	; 0x310000
     e20:	32647269 	rsbcc	r7, r4, #-1879048186	; 0x90000006
     e24:	67616d49 	strbvs	r6, [r1, -r9, asr #26]!
     e28:	6f700065 	svcvs	0x00700065
     e2c:	65746e69 	ldrbvs	r6, [r4, #-3689]!	; 0xfffff197
     e30:	00323272 	eorseq	r3, r2, r2, ror r2
     e34:	64726962 	ldrbtvs	r6, [r2], #-2402	; 0xfffff69e
     e38:	696c5f32 	stmdbvs	ip!, {r1, r4, r5, r8, r9, sl, fp, ip, lr}^
     e3c:	5f746867 	svcpl	0x00746867
     e40:	73746962 	cmnvc	r4, #1605632	; 0x188000
     e44:	6d657400 	cfstrdvs	mvd7, [r5, #-0]
     e48:	74695770 	strbtvc	r5, [r9], #-1904	; 0xfffff890
     e4c:	694c6863 	stmdbvs	ip, {r0, r1, r5, r6, fp, sp, lr}^
     e50:	00746867 	rsbseq	r6, r4, r7, ror #16
     e54:	706d6574 	rsbvc	r6, sp, r4, ror r5
     e58:	63746957 	cmnvs	r4, #1425408	; 0x15c000
     e5c:	694c3368 	stmdbvs	ip, {r3, r5, r6, r8, r9, ip, sp}^
     e60:	00746867 	rsbseq	r6, r4, r7, ror #16
     e64:	706d6574 	rsbvc	r6, sp, r4, ror r5
     e68:	63746957 	cmnvs	r4, #1425408	; 0x15c000
     e6c:	694c3268 	stmdbvs	ip, {r3, r5, r6, r9, ip, sp}^
     e70:	00746867 	rsbseq	r6, r4, r7, ror #16
     e74:	706d6574 	rsbvc	r6, sp, r4, ror r5
     e78:	63746957 	cmnvs	r4, #1425408	; 0x15c000
     e7c:	6c423268 	sfmvs	f3, 2, [r2], {104}	; 0x68
     e80:	006b6361 	rsbeq	r6, fp, r1, ror #6
     e84:	74696e69 	strbtvc	r6, [r9], #-3689	; 0xfffff197
     e88:	7469775f 	strbtvc	r7, [r9], #-1887	; 0xfffff8a1
     e8c:	74006863 	strvc	r6, [r0], #-2147	; 0xfffff79d
     e90:	57706d65 	ldrbpl	r6, [r0, -r5, ror #26]!
     e94:	68637469 	stmdavs	r3!, {r0, r3, r5, r6, sl, ip, sp, lr}^
     e98:	63616c42 	cmnvs	r1, #16896	; 0x4200
     e9c:	6574006b 	ldrbvs	r0, [r4, #-107]!	; 0xffffff95
     ea0:	6957706d 	ldmdbvs	r7, {r0, r2, r3, r5, r6, ip, sp, lr}^
     ea4:	47686374 			; <UNDEFINED> instruction: 0x47686374
     ea8:	00796172 	rsbseq	r6, r9, r2, ror r1
     eac:	706d6574 	rsbvc	r6, sp, r4, ror r5
     eb0:	63746957 	cmnvs	r4, #1425408	; 0x15c000
     eb4:	72473268 	subvc	r3, r7, #104, 4	; 0x80000006
     eb8:	74007961 	strvc	r7, [r0], #-2401	; 0xfffff69f
     ebc:	57706d65 	ldrbpl	r6, [r0, -r5, ror #26]!
     ec0:	68637469 	stmdavs	r3!, {r0, r3, r5, r6, sl, ip, sp, lr}^
     ec4:	616c4233 	cmnvs	ip, r3, lsr r2
     ec8:	74006b63 	strvc	r6, [r0], #-2915	; 0xfffff49d
     ecc:	57706d65 	ldrbpl	r6, [r0, -r5, ror #26]!
     ed0:	68637469 	stmdavs	r3!, {r0, r3, r5, r6, sl, ip, sp, lr}^
     ed4:	61724733 	cmnvs	r2, r3, lsr r7
     ed8:	3a430079 	bcc	10c10c4 <startup-0x1ef3ef3c>
     edc:	706f6d2f 	rsbvc	r6, pc, pc, lsr #26
     ee0:	4d2f632f 	stcmi	3, cr6, [pc, #-188]!	; e2c <startup-0x1ffff1d4>
     ee4:	616c706f 	cmnvs	ip, pc, rrx
     ee8:	61726f62 	cmnvs	r2, r2, ror #30
     eec:	6e6f6974 			; <UNDEFINED> instruction: 0x6e6f6974
     ef0:	442f7265 	strtmi	r7, [pc], #-613	; ef8 <startup-0x1ffff108>
     ef4:	2d735049 	ldclcs	0, cr5, [r3, #-292]!	; 0xfffffedc
     ef8:	63746957 	cmnvs	r4, #1425408	; 0x15c000
     efc:	2f432f68 	svccs	0x00432f68
     f00:	63746977 	cmnvs	r4, #1949696	; 0x1dc000
     f04:	00632e68 	rsbeq	r2, r3, r8, ror #28
     f08:	65726964 	ldrbvs	r6, [r2, #-2404]!	; 0xfffff69c
     f0c:	6f697463 	svcvs	0x00697463
     f10:	4944006e 	stmdbmi	r4, {r1, r2, r3, r5, r6}^
     f14:	6d493450 	cfstrdvs	mvd3, [r9, #-320]	; 0xfffffec0
     f18:	00656761 	rsbeq	r6, r5, r1, ror #14
     f1c:	31504944 	cmpcc	r0, r4, asr #18
     f20:	67616d49 	strbvs	r6, [r1, -r9, asr #26]!
     f24:	65740065 	ldrbvs	r0, [r4, #-101]!	; 0xffffff9b
     f28:	4944706d 	stmdbmi	r4, {r0, r2, r3, r5, r6, ip, sp, lr}^
     f2c:	694c3250 	stmdbvs	ip, {r4, r6, r9, ip, sp}^
     f30:	00746867 	rsbseq	r6, r4, r7, ror #16
     f34:	75527369 	ldrbvc	r7, [r2, #-873]	; 0xfffffc97
     f38:	6e696e6e 	cdpvs	14, 6, cr6, cr9, cr14, {3}
     f3c:	65740067 	ldrbvs	r0, [r4, #-103]!	; 0xffffff99
     f40:	4944706d 	stmdbmi	r4, {r0, r2, r3, r5, r6, ip, sp, lr}^
     f44:	6c423350 	mcrrvs	3, 5, r3, r2, cr0
     f48:	006b6361 	rsbeq	r6, fp, r1, ror #6
     f4c:	706d6574 	rsbvc	r6, sp, r4, ror r5
     f50:	32504944 	subscc	r4, r0, #68, 18	; 0x110000
     f54:	79617247 	stmdbvc	r1!, {r0, r1, r2, r6, r9, ip, sp, lr}^
     f58:	50494400 	subpl	r4, r9, r0, lsl #8
     f5c:	61724731 	cmnvs	r2, r1, lsr r7
     f60:	65740079 	ldrbvs	r0, [r4, #-121]!	; 0xffffff87
     f64:	4944706d 	stmdbmi	r4, {r0, r2, r3, r5, r6, ip, sp, lr}^
     f68:	67694c50 			; <UNDEFINED> instruction: 0x67694c50
     f6c:	44007468 	strmi	r7, [r0], #-1128	; 0xfffffb98
     f70:	6d495049 	stclvs	0, cr5, [r9, #-292]	; 0xfffffedc
     f74:	73656761 	cmnvc	r5, #25427968	; 0x1840000
     f78:	696e6900 	stmdbvs	lr!, {r8, fp, sp, lr}^
     f7c:	49445f74 	stmdbmi	r4, {r2, r4, r5, r6, r8, r9, sl, fp, ip, lr}^
     f80:	65740050 	ldrbvs	r0, [r4, #-80]!	; 0xffffffb0
     f84:	4944706d 	stmdbmi	r4, {r0, r2, r3, r5, r6, ip, sp, lr}^
     f88:	61724750 	cmnvs	r2, r0, asr r7
     f8c:	49440079 	stmdbmi	r4, {r0, r3, r4, r5, r6}^
     f90:	6c423150 	stfvse	f3, [r2], {80}	; 0x50
     f94:	006b6361 	rsbeq	r6, fp, r1, ror #6
     f98:	79616c70 	stmdbvc	r1!, {r4, r5, r6, sl, fp, sp, lr}^
     f9c:	6f507265 	svcvs	0x00507265
     fa0:	69746973 	ldmdbvs	r4!, {r0, r1, r4, r5, r6, r8, fp, sp, lr}^
     fa4:	00596e6f 	subseq	r6, r9, pc, ror #28
     fa8:	706d6574 	rsbvc	r6, sp, r4, ror r5
     fac:	33504944 	cmpcc	r0, #68, 18	; 0x110000
     fb0:	79617247 	stmdbvc	r1!, {r0, r1, r2, r6, r9, ip, sp, lr}^
     fb4:	50494400 	subpl	r4, r9, r0, lsl #8
     fb8:	616d4933 	cmnvs	sp, r3, lsr r9
     fbc:	74006567 	strvc	r6, [r0], #-1383	; 0xfffffa99
     fc0:	44706d65 	ldrbtmi	r6, [r0], #-3429	; 0xfffff29b
     fc4:	4c335049 	ldcmi	0, cr5, [r3], #-292	; 0xfffffedc
     fc8:	74686769 	strbtvc	r6, [r8], #-1897	; 0xfffff897
     fcc:	50494400 	subpl	r4, r9, r0, lsl #8
     fd0:	61647055 	qdsubvs	r7, r5, r4
     fd4:	74006574 	strvc	r6, [r0], #-1396	; 0xfffffa8c
     fd8:	44706d65 	ldrbtmi	r6, [r0], #-3429	; 0xfffff29b
     fdc:	42325049 	eorsmi	r5, r2, #73	; 0x49
     fe0:	6b63616c 	blvs	18d9598 <startup-0x1e726a68>
     fe4:	50494400 	subpl	r4, r9, r0, lsl #8
     fe8:	616d4932 	cmnvs	sp, r2, lsr r9
     fec:	43006567 	movwmi	r6, #1383	; 0x567
     ff0:	6f6d2f3a 	svcvs	0x006d2f3a
     ff4:	2f632f70 	svccs	0x00632f70
     ff8:	6c706f4d 	ldclvs	15, cr6, [r0], #-308	; 0xfffffecc
     ffc:	726f6261 	rsbvc	r6, pc, #268435462	; 0x10000006
    1000:	6f697461 	svcvs	0x00697461
    1004:	2f72656e 	svccs	0x0072656e
    1008:	73504944 	cmpvc	r0, #68, 18	; 0x110000
    100c:	7469572d 	strbtvc	r5, [r9], #-1837	; 0xfffff8d3
    1010:	432f6863 			; <UNDEFINED> instruction: 0x432f6863
    1014:	5049442f 	subpl	r4, r9, pc, lsr #8
    1018:	4400632e 	strmi	r6, [r0], #-814	; 0xfffffcd2
    101c:	4c315049 	ldcmi	0, cr5, [r1], #-292	; 0xfffffedc
    1020:	74686769 	strbtvc	r6, [r8], #-1897	; 0xfffff897
    1024:	50494400 	subpl	r4, r9, r0, lsl #8
    1028:	006a624f 	rsbeq	r6, sl, pc, asr #4
    102c:	706d6574 	rsbvc	r6, sp, r4, ror r5
    1030:	42504944 	subsmi	r4, r0, #68, 18	; 0x110000
    1034:	6b63616c 	blvs	18d95ec <startup-0x1e726a14>
    1038:	616c7000 	cmnvs	ip, r0
    103c:	50726579 	rsbspl	r6, r2, r9, ror r5
    1040:	7469736f 	strbtvc	r7, [r9], #-879	; 0xfffffc91
    1044:	586e6f69 	stmdapl	lr!, {r0, r3, r5, r6, r8, r9, sl, fp, sp, lr}^
    1048:	74657300 	strbtvc	r7, [r5], #-768	; 0xfffffd00
    104c:	79616c50 	stmdbvc	r1!, {r4, r6, sl, fp, sp, lr}^
    1050:	6f507265 	svcvs	0x00507265
    1054:	69746973 	ldmdbvs	r4!, {r0, r1, r4, r5, r6, r8, fp, sp, lr}^
    1058:	66006e6f 	strvs	r6, [r0], -pc, ror #28
    105c:	656d616c 	strbvs	r6, [sp, #-364]!	; 0xfffffe94
    1060:	72675f31 	rsbvc	r5, r7, #49, 30	; 0xc4
    1064:	625f7961 	subsvs	r7, pc, #1589248	; 0x184000
    1068:	00737469 	rsbseq	r7, r3, r9, ror #8
    106c:	6d616c66 	stclvs	12, cr6, [r1, #-408]!	; 0xfffffe68
    1070:	6c423165 	stfvse	f3, [r2], {101}	; 0x65
    1074:	006b6361 	rsbeq	r6, fp, r1, ror #6
    1078:	6d616c66 	stclvs	12, cr6, [r1, #-408]!	; 0xfffffe68
    107c:	675f3265 	ldrbvs	r3, [pc, -r5, ror #4]
    1080:	5f796172 	svcpl	0x00796172
    1084:	73746962 	cmnvc	r4, #1605632	; 0x188000
    1088:	6d657400 	cfstrdvs	mvd7, [r5, #-0]
    108c:	616c4670 	smcvs	50272	; 0xc460
    1090:	694c656d 	stmdbvs	ip, {r0, r2, r3, r5, r6, r8, sl, sp, lr}^
    1094:	00746867 	rsbseq	r6, r4, r7, ror #16
    1098:	6d616c66 	stclvs	12, cr6, [r1, #-408]!	; 0xfffffe68
    109c:	6c5f3265 	lfmvs	f3, 2, [pc], {101}	; 0x65
    10a0:	74686769 	strbtvc	r6, [r8], #-1897	; 0xfffff897
    10a4:	7469625f 	strbtvc	r6, [r9], #-607	; 0xfffffda1
    10a8:	6c660073 	stclvs	0, cr0, [r6], #-460	; 0xfffffe34
    10ac:	33656d61 	cmncc	r5, #6208	; 0x1840
    10b0:	6867694c 	stmdavs	r7!, {r2, r3, r6, r8, fp, sp, lr}^
    10b4:	6c660074 	stclvs	0, cr0, [r6], #-464	; 0xfffffe30
    10b8:	32656d61 	rsbcc	r6, r5, #6208	; 0x1840
    10bc:	63616c42 	cmnvs	r1, #16896	; 0x4200
    10c0:	6574006b 	ldrbvs	r0, [r4, #-107]!	; 0xffffff95
    10c4:	6c46706d 	mcrrvs	0, 6, r7, r6, cr13
    10c8:	32656d61 	rsbcc	r6, r5, #6208	; 0x1840
    10cc:	63616c42 	cmnvs	r1, #16896	; 0x4200
    10d0:	6574006b 	ldrbvs	r0, [r4, #-107]!	; 0xffffff95
    10d4:	6c46706d 	mcrrvs	0, 6, r7, r6, cr13
    10d8:	32656d61 	rsbcc	r6, r5, #6208	; 0x1840
    10dc:	6867694c 	stmdavs	r7!, {r2, r3, r6, r8, fp, sp, lr}^
    10e0:	6c660074 	stclvs	0, cr0, [r6], #-464	; 0xfffffe30
    10e4:	33656d61 	cmncc	r5, #6208	; 0x1840
    10e8:	67696c5f 			; <UNDEFINED> instruction: 0x67696c5f
    10ec:	625f7468 	subsvs	r7, pc, #104, 8	; 0x68000000
    10f0:	00737469 	rsbseq	r7, r3, r9, ror #8
    10f4:	6d616c66 	stclvs	12, cr6, [r1, #-408]!	; 0xfffffe68
    10f8:	6a624f65 	bvs	1894e94 <startup-0x1e76b16c>
    10fc:	6d657400 	cfstrdvs	mvd7, [r5, #-0]
    1100:	616c4670 	smcvs	50272	; 0xc460
    1104:	4732656d 	ldrmi	r6, [r2, -sp, ror #10]!
    1108:	00796172 	rsbseq	r6, r9, r2, ror r1
    110c:	6d616c66 	stclvs	12, cr6, [r1, #-408]!	; 0xfffffe68
    1110:	6d493465 	cfstrdvs	mvd3, [r9, #-404]	; 0xfffffe6c
    1114:	00656761 	rsbeq	r6, r5, r1, ror #14
    1118:	6d616c66 	stclvs	12, cr6, [r1, #-408]!	; 0xfffffe68
    111c:	6c5f3165 	ldfvse	f3, [pc], {101}	; 0x65
    1120:	74686769 	strbtvc	r6, [r8], #-1897	; 0xfffff897
    1124:	7469625f 	strbtvc	r6, [r9], #-607	; 0xfffffda1
    1128:	6c660073 	stclvs	0, cr0, [r6], #-460	; 0xfffffe34
    112c:	31656d61 	cmncc	r5, r1, ror #26
    1130:	67616d49 	strbvs	r6, [r1, -r9, asr #26]!
    1134:	6c660065 	stclvs	0, cr0, [r6], #-404	; 0xfffffe6c
    1138:	33656d61 	cmncc	r5, #6208	; 0x1840
    113c:	63616c42 	cmnvs	r1, #16896	; 0x4200
    1140:	6574006b 	ldrbvs	r0, [r4, #-107]!	; 0xffffff95
    1144:	6c46706d 	mcrrvs	0, 6, r7, r6, cr13
    1148:	33656d61 	cmncc	r5, #6208	; 0x1840
    114c:	6867694c 	stmdavs	r7!, {r2, r3, r6, r8, fp, sp, lr}^
    1150:	6c660074 	stclvs	0, cr0, [r6], #-464	; 0xfffffe30
    1154:	33656d61 	cmncc	r5, #6208	; 0x1840
    1158:	79617247 	stmdbvc	r1!, {r0, r1, r2, r6, r9, ip, sp, lr}^
    115c:	6d657400 	cfstrdvs	mvd7, [r5, #-0]
    1160:	616c4670 	smcvs	50272	; 0xc460
    1164:	4234656d 	eorsmi	r6, r4, #457179136	; 0x1b400000
    1168:	6b63616c 	blvs	18d9720 <startup-0x1e7268e0>
    116c:	6d657400 	cfstrdvs	mvd7, [r5, #-0]
    1170:	616c4670 	smcvs	50272	; 0xc460
    1174:	4c34656d 	cfldr32mi	mvfx6, [r4], #-436	; 0xfffffe4c
    1178:	74686769 	strbtvc	r6, [r8], #-1897	; 0xfffff897
    117c:	616c6600 	cmnvs	ip, r0, lsl #12
    1180:	4933656d 	ldmdbmi	r3!, {r0, r2, r3, r5, r6, r8, sl, sp, lr}
    1184:	6567616d 	strbvs	r6, [r7, #-365]!	; 0xfffffe93
    1188:	616c6600 	cmnvs	ip, r0, lsl #12
    118c:	5f33656d 	svcpl	0x0033656d
    1190:	63616c62 	cmnvs	r1, #25088	; 0x6200
    1194:	69625f6b 	stmdbvs	r2!, {r0, r1, r3, r5, r6, r8, r9, sl, fp, ip, lr}^
    1198:	66007374 			; <UNDEFINED> instruction: 0x66007374
    119c:	656d616c 	strbvs	r6, [sp, #-364]!	; 0xfffffe94
    11a0:	696c5f34 	stmdbvs	ip!, {r2, r4, r5, r8, r9, sl, fp, ip, lr}^
    11a4:	5f746867 	svcpl	0x00746867
    11a8:	73746962 	cmnvc	r4, #1605632	; 0x188000
    11ac:	616c6600 	cmnvs	ip, r0, lsl #12
    11b0:	5f33656d 	svcpl	0x0033656d
    11b4:	79617267 	stmdbvc	r1!, {r0, r1, r2, r5, r6, r9, ip, sp, lr}^
    11b8:	7469625f 	strbtvc	r6, [r9], #-607	; 0xfffffda1
    11bc:	65740073 	ldrbvs	r0, [r4, #-115]!	; 0xffffff8d
    11c0:	6c46706d 	mcrrvs	0, 6, r7, r6, cr13
    11c4:	34656d61 	strbtcc	r6, [r5], #-3425	; 0xfffff29f
    11c8:	79617247 	stmdbvc	r1!, {r0, r1, r2, r6, r9, ip, sp, lr}^
    11cc:	616c6600 	cmnvs	ip, r0, lsl #12
    11d0:	4932656d 	ldmdbmi	r2!, {r0, r2, r3, r5, r6, r8, sl, sp, lr}
    11d4:	6567616d 	strbvs	r6, [r7, #-365]!	; 0xfffffe93
    11d8:	616c6600 	cmnvs	ip, r0, lsl #12
    11dc:	4731656d 	ldrmi	r6, [r1, -sp, ror #10]!
    11e0:	00796172 	rsbseq	r6, r9, r2, ror r1
    11e4:	6d616c66 	stclvs	12, cr6, [r1, #-408]!	; 0xfffffe68
    11e8:	625f3265 	subsvs	r3, pc, #1342177286	; 0x50000006
    11ec:	6b63616c 	blvs	18d97a4 <startup-0x1e72685c>
    11f0:	7469625f 	strbtvc	r6, [r9], #-607	; 0xfffffda1
    11f4:	65740073 	ldrbvs	r0, [r4, #-115]!	; 0xffffff8d
    11f8:	6c46706d 	mcrrvs	0, 6, r7, r6, cr13
    11fc:	42656d61 	rsbmi	r6, r5, #6208	; 0x1840
    1200:	6b63616c 	blvs	18d97b8 <startup-0x1e726848>
    1204:	616c6600 	cmnvs	ip, r0, lsl #12
    1208:	5f34656d 	svcpl	0x0034656d
    120c:	63616c62 	cmnvs	r1, #25088	; 0x6200
    1210:	69625f6b 	stmdbvs	r2!, {r0, r1, r3, r5, r6, r8, r9, sl, fp, ip, lr}^
    1214:	66007374 			; <UNDEFINED> instruction: 0x66007374
    1218:	656d616c 	strbvs	r6, [sp, #-364]!	; 0xfffffe94
    121c:	61724734 	cmnvs	r2, r4, lsr r7
    1220:	6c660079 	stclvs	0, cr0, [r6], #-484	; 0xfffffe1c
    1224:	31656d61 	cmncc	r5, r1, ror #26
    1228:	616c625f 	cmnvs	ip, pc, asr r2
    122c:	625f6b63 	subsvs	r6, pc, #101376	; 0x18c00
    1230:	00737469 	rsbseq	r7, r3, r9, ror #8
    1234:	6d616c66 	stclvs	12, cr6, [r1, #-408]!	; 0xfffffe68
    1238:	694c3165 	stmdbvs	ip, {r0, r2, r5, r6, r8, ip, sp}^
    123c:	00746867 	rsbseq	r6, r4, r7, ror #16
    1240:	6d616c66 	stclvs	12, cr6, [r1, #-408]!	; 0xfffffe68
    1244:	675f3465 	ldrbvs	r3, [pc, -r5, ror #8]
    1248:	5f796172 	svcpl	0x00796172
    124c:	73746962 	cmnvc	r4, #1605632	; 0x188000
    1250:	616c6600 	cmnvs	ip, r0, lsl #12
    1254:	4c34656d 	cfldr32mi	mvfx6, [r4], #-436	; 0xfffffe4c
    1258:	74686769 	strbtvc	r6, [r8], #-1897	; 0xfffff897
    125c:	6d657400 	cfstrdvs	mvd7, [r5, #-0]
    1260:	616c4670 	smcvs	50272	; 0xc460
    1264:	4733656d 	ldrmi	r6, [r3, -sp, ror #10]!
    1268:	00796172 	rsbseq	r6, r9, r2, ror r1
    126c:	6d616c66 	stclvs	12, cr6, [r1, #-408]!	; 0xfffffe68
    1270:	616d4965 	cmnvs	sp, r5, ror #18
    1274:	00736567 	rsbseq	r6, r3, r7, ror #10
    1278:	706d6574 	rsbvc	r6, sp, r4, ror r5
    127c:	6d616c46 	stclvs	12, cr6, [r1, #-280]!	; 0xfffffee8
    1280:	6c423365 	mcrrvs	3, 6, r3, r2, cr5
    1284:	006b6361 	rsbeq	r6, fp, r1, ror #6
    1288:	6d616c66 	stclvs	12, cr6, [r1, #-408]!	; 0xfffffe68
    128c:	72473265 	subvc	r3, r7, #1342177286	; 0x50000006
    1290:	43007961 	movwmi	r7, #2401	; 0x961
    1294:	6f6d2f3a 	svcvs	0x006d2f3a
    1298:	2f632f70 	svccs	0x00632f70
    129c:	6c706f4d 	ldclvs	15, cr6, [r0], #-308	; 0xfffffecc
    12a0:	726f6261 	rsbvc	r6, pc, #268435462	; 0x10000006
    12a4:	6f697461 	svcvs	0x00697461
    12a8:	2f72656e 	svccs	0x0072656e
    12ac:	73504944 	cmpvc	r0, #68, 18	; 0x110000
    12b0:	7469572d 	strbtvc	r5, [r9], #-1837	; 0xfffff8d3
    12b4:	432f6863 			; <UNDEFINED> instruction: 0x432f6863
    12b8:	616c662f 	cmnvs	ip, pc, lsr #12
    12bc:	632e656d 			; <UNDEFINED> instruction: 0x632e656d
    12c0:	6d657400 	cfstrdvs	mvd7, [r5, #-0]
    12c4:	616c4670 	smcvs	50272	; 0xc460
    12c8:	7247656d 	subvc	r6, r7, #457179136	; 0x1b400000
    12cc:	66007961 	strvs	r7, [r0], -r1, ror #18
    12d0:	656d616c 	strbvs	r6, [sp, #-364]!	; 0xfffffe94
    12d4:	616c4234 	cmnvs	ip, r4, lsr r2
    12d8:	66006b63 	strvs	r6, [r0], -r3, ror #22
    12dc:	656d616c 	strbvs	r6, [sp, #-364]!	; 0xfffffe94
    12e0:	67694c32 			; <UNDEFINED> instruction: 0x67694c32
    12e4:	62007468 	andvs	r7, r0, #104, 8	; 0x68000000
    12e8:	386d6f6f 	stmdacc	sp!, {r0, r1, r2, r3, r5, r6, r8, r9, sl, fp, sp, lr}^
    12ec:	67616d49 	strbvs	r6, [r1, -r9, asr #26]!
    12f0:	6f620065 	svcvs	0x00620065
    12f4:	49316d6f 	ldmdbmi	r1!, {r0, r1, r2, r3, r5, r6, r8, sl, fp, sp, lr}
    12f8:	6567616d 	strbvs	r6, [r7, #-365]!	; 0xfffffe93
    12fc:	6f6f6200 	svcvs	0x006f6200
    1300:	6d49396d 	vstrvs.16	s7, [r9, #-218]	; 0xffffff26	; <UNPREDICTABLE>
    1304:	00656761 	rsbeq	r6, r5, r1, ror #14
    1308:	6d6f6f62 	stclvs	15, cr6, [pc, #-392]!	; 1188 <startup-0x1fffee78>
    130c:	616d4935 	cmnvs	sp, r5, lsr r9
    1310:	74006567 	strvc	r6, [r0], #-1383	; 0xfffffa99
    1314:	42706d65 	rsbsmi	r6, r0, #6464	; 0x1940
    1318:	366d6f6f 	strbtcc	r6, [sp], -pc, ror #30
    131c:	79617247 	stmdbvc	r1!, {r0, r1, r2, r6, r9, ip, sp, lr}^
    1320:	6f6f6200 	svcvs	0x006f6200
    1324:	675f316d 	ldrbvs	r3, [pc, -sp, ror #2]
    1328:	5f796172 	svcpl	0x00796172
    132c:	73746962 	cmnvc	r4, #1605632	; 0x188000
    1330:	6f6f6200 	svcvs	0x006f6200
    1334:	6a624f6d 	bvs	18950f0 <startup-0x1e76af10>
    1338:	2f3a4300 	svccs	0x003a4300
    133c:	2f706f6d 	svccs	0x00706f6d
    1340:	6f4d2f63 	svcvs	0x004d2f63
    1344:	62616c70 	rsbvs	r6, r1, #112, 24	; 0x7000
    1348:	7461726f 	strbtvc	r7, [r1], #-623	; 0xfffffd91
    134c:	656e6f69 	strbvs	r6, [lr, #-3945]!	; 0xfffff097
    1350:	49442f72 	stmdbmi	r4, {r1, r4, r5, r6, r8, r9, sl, fp, sp}^
    1354:	572d7350 			; <UNDEFINED> instruction: 0x572d7350
    1358:	68637469 	stmdavs	r3!, {r0, r3, r5, r6, sl, ip, sp, lr}^
    135c:	622f432f 	eorvs	r4, pc, #-1140850688	; 0xbc000000
    1360:	2e6d6f6f 	cdpcs	15, 6, cr6, cr13, cr15, {3}
    1364:	65740063 	ldrbvs	r0, [r4, #-99]!	; 0xffffff9d
    1368:	6f42706d 	svcvs	0x0042706d
    136c:	47356d6f 	ldrmi	r6, [r5, -pc, ror #26]!
    1370:	00796172 	rsbseq	r6, r9, r2, ror r1
    1374:	6d6f6f62 	stclvs	15, cr6, [pc, #-392]!	; 11f4 <startup-0x1fffee0c>
    1378:	61724731 	cmnvs	r2, r1, lsr r7
    137c:	6f700079 	svcvs	0x00700079
    1380:	65746e69 	ldrbvs	r6, [r4, #-3689]!	; 0xfffff197
    1384:	00373272 	eorseq	r3, r7, r2, ror r2
    1388:	6d6f6f62 	stclvs	15, cr6, [pc, #-392]!	; 1208 <startup-0x1fffedf8>
    138c:	616d4936 	cmnvs	sp, r6, lsr r9
    1390:	62006567 	andvs	r6, r0, #432013312	; 0x19c00000
    1394:	346d6f6f 	strbtcc	r6, [sp], #-3951	; 0xfffff091
    1398:	616c625f 	cmnvs	ip, pc, asr r2
    139c:	625f6b63 	subsvs	r6, pc, #101376	; 0x18c00
    13a0:	00737469 	rsbseq	r7, r3, r9, ror #8
    13a4:	6d6f6f62 	stclvs	15, cr6, [pc, #-392]!	; 1224 <startup-0x1fffeddc>
    13a8:	72675f35 	rsbvc	r5, r7, #53, 30	; 0xd4
    13ac:	625f7961 	subsvs	r7, pc, #1589248	; 0x184000
    13b0:	00737469 	rsbseq	r7, r3, r9, ror #8
    13b4:	706d6574 	rsbvc	r6, sp, r4, ror r5
    13b8:	6d6f6f42 	stclvs	15, cr6, [pc, #-264]!	; 12b8 <startup-0x1fffed48>
    13bc:	67694c36 			; <UNDEFINED> instruction: 0x67694c36
    13c0:	62007468 	andvs	r7, r0, #104, 8	; 0x68000000
    13c4:	336d6f6f 	cmncc	sp, #444	; 0x1bc
    13c8:	63616c42 	cmnvs	r1, #16896	; 0x4200
    13cc:	6574006b 	ldrbvs	r0, [r4, #-107]!	; 0xffffff95
    13d0:	6f42706d 	svcvs	0x0042706d
    13d4:	4c336d6f 	ldcmi	13, cr6, [r3], #-444	; 0xfffffe44
    13d8:	74686769 	strbtvc	r6, [r8], #-1897	; 0xfffff897
    13dc:	6f6f6200 	svcvs	0x006f6200
    13e0:	694c346d 	stmdbvs	ip, {r0, r2, r3, r5, r6, sl, ip, sp}^
    13e4:	00746867 	rsbseq	r6, r4, r7, ror #16
    13e8:	6d6f6f62 	stclvs	15, cr6, [pc, #-392]!	; 1268 <startup-0x1fffed98>
    13ec:	6d493231 	sfmvs	f3, 2, [r9, #-196]	; 0xffffff3c
    13f0:	00656761 	rsbeq	r6, r5, r1, ror #14
    13f4:	6d6f6f62 	stclvs	15, cr6, [pc, #-392]!	; 1274 <startup-0x1fffed8c>
    13f8:	6d493531 	cfstr64vs	mvdx3, [r9, #-196]	; 0xffffff3c
    13fc:	00656761 	rsbeq	r6, r5, r1, ror #14
    1400:	6d6f6f62 	stclvs	15, cr6, [pc, #-392]!	; 1280 <startup-0x1fffed80>
    1404:	67694c31 			; <UNDEFINED> instruction: 0x67694c31
    1408:	62007468 	andvs	r7, r0, #104, 8	; 0x68000000
    140c:	316d6f6f 	cmncc	sp, pc, ror #30
    1410:	616c625f 	cmnvs	ip, pc, asr r2
    1414:	625f6b63 	subsvs	r6, pc, #101376	; 0x18c00
    1418:	00737469 	rsbseq	r7, r3, r9, ror #8
    141c:	6d6f6f62 	stclvs	15, cr6, [pc, #-392]!	; 129c <startup-0x1fffed64>
    1420:	616d4933 	cmnvs	sp, r3, lsr r9
    1424:	74006567 	strvc	r6, [r0], #-1383	; 0xfffffa99
    1428:	42706d65 	rsbsmi	r6, r0, #6464	; 0x1940
    142c:	476d6f6f 	strbmi	r6, [sp, -pc, ror #30]!
    1430:	00796172 	rsbseq	r6, r9, r2, ror r1
    1434:	6d6f6f62 	stclvs	15, cr6, [pc, #-392]!	; 12b4 <startup-0x1fffed4c>
    1438:	72675f34 	rsbvc	r5, r7, #52, 30	; 0xd0
    143c:	625f7961 	subsvs	r7, pc, #1589248	; 0x184000
    1440:	00737469 	rsbseq	r7, r3, r9, ror #8
    1444:	6d6f6f62 	stclvs	15, cr6, [pc, #-392]!	; 12c4 <startup-0x1fffed3c>
    1448:	6c625f32 	stclvs	15, cr5, [r2], #-200	; 0xffffff38
    144c:	5f6b6361 	svcpl	0x006b6361
    1450:	73746962 	cmnvc	r4, #1605632	; 0x188000
    1454:	6d657400 	cfstrdvs	mvd7, [r5, #-0]
    1458:	6f6f4270 	svcvs	0x006f4270
    145c:	616c426d 	cmnvs	ip, sp, ror #4
    1460:	62006b63 	andvs	r6, r0, #101376	; 0x18c00
    1464:	356d6f6f 	strbcc	r6, [sp, #-3951]!	; 0xfffff091
    1468:	63616c42 	cmnvs	r1, #16896	; 0x4200
    146c:	6574006b 	ldrbvs	r0, [r4, #-107]!	; 0xffffff95
    1470:	6f42706d 	svcvs	0x0042706d
    1474:	42326d6f 	eorsmi	r6, r2, #7104	; 0x1bc0
    1478:	6b63616c 	blvs	18d9a30 <startup-0x1e7265d0>
    147c:	6f6f6200 	svcvs	0x006f6200
    1480:	6c42326d 	sfmvs	f3, 2, [r2], {109}	; 0x6d
    1484:	006b6361 	rsbeq	r6, fp, r1, ror #6
    1488:	6d6f6f62 	stclvs	15, cr6, [pc, #-392]!	; 1308 <startup-0x1fffecf8>
    148c:	67694c36 			; <UNDEFINED> instruction: 0x67694c36
    1490:	74007468 	strvc	r7, [r0], #-1128	; 0xfffffb98
    1494:	42706d65 	rsbsmi	r6, r0, #6464	; 0x1940
    1498:	346d6f6f 	strbtcc	r6, [sp], #-3951	; 0xfffff091
    149c:	79617247 	stmdbvc	r1!, {r0, r1, r2, r6, r9, ip, sp, lr}^
    14a0:	6f6f6200 	svcvs	0x006f6200
    14a4:	675f336d 	ldrbvs	r3, [pc, -sp, ror #6]
    14a8:	5f796172 	svcpl	0x00796172
    14ac:	73746962 	cmnvc	r4, #1605632	; 0x188000
    14b0:	6f6f6200 	svcvs	0x006f6200
    14b4:	6c5f336d 	mrrcvs	3, 6, r3, pc, cr13	; <UNPREDICTABLE>
    14b8:	74686769 	strbtvc	r6, [r8], #-1897	; 0xfffff897
    14bc:	7469625f 	strbtvc	r6, [r9], #-607	; 0xfffffda1
    14c0:	6f700073 	svcvs	0x00700073
    14c4:	65746e69 	ldrbvs	r6, [r4, #-3689]!	; 0xfffff197
    14c8:	00353272 	eorseq	r3, r5, r2, ror r2
    14cc:	6d6f6f62 	stclvs	15, cr6, [pc, #-392]!	; 134c <startup-0x1fffecb4>
    14d0:	67694c33 			; <UNDEFINED> instruction: 0x67694c33
    14d4:	62007468 	andvs	r7, r0, #104, 8	; 0x68000000
    14d8:	366d6f6f 	strbtcc	r6, [sp], -pc, ror #30
    14dc:	6172675f 	cmnvs	r2, pc, asr r7
    14e0:	69625f79 	stmdbvs	r2!, {r0, r3, r4, r5, r6, r8, r9, sl, fp, ip, lr}^
    14e4:	62007374 	andvs	r7, r0, #116, 6	; 0xd0000001
    14e8:	356d6f6f 	strbcc	r6, [sp, #-3951]!	; 0xfffff091
    14ec:	79617247 	stmdbvc	r1!, {r0, r1, r2, r6, r9, ip, sp, lr}^
    14f0:	6f6f6200 	svcvs	0x006f6200
    14f4:	6c5f356d 	cfldr64vs	mvdx3, [pc], {109}	; 0x6d
    14f8:	74686769 	strbtvc	r6, [r8], #-1897	; 0xfffff897
    14fc:	7469625f 	strbtvc	r6, [r9], #-607	; 0xfffffda1
    1500:	6f620073 	svcvs	0x00620073
    1504:	33316d6f 	teqcc	r1, #7104	; 0x1bc0
    1508:	67616d49 	strbvs	r6, [r1, -r9, asr #26]!
    150c:	6f620065 	svcvs	0x00620065
    1510:	30316d6f 	eorscc	r6, r1, pc, ror #26
    1514:	67616d49 	strbvs	r6, [r1, -r9, asr #26]!
    1518:	6f620065 	svcvs	0x00620065
    151c:	5f366d6f 	svcpl	0x00366d6f
    1520:	6867696c 	stmdavs	r7!, {r2, r3, r5, r6, r8, fp, sp, lr}^
    1524:	69625f74 	stmdbvs	r2!, {r2, r4, r5, r6, r8, r9, sl, fp, ip, lr}^
    1528:	62007374 	andvs	r7, r0, #116, 6	; 0xd0000001
    152c:	376d6f6f 	strbcc	r6, [sp, -pc, ror #30]!
    1530:	67616d49 	strbvs	r6, [r1, -r9, asr #26]!
    1534:	6f620065 	svcvs	0x00620065
    1538:	49346d6f 	ldmdbmi	r4!, {r0, r1, r2, r3, r5, r6, r8, sl, fp, sp, lr}
    153c:	6567616d 	strbvs	r6, [r7, #-365]!	; 0xfffffe93
    1540:	6d657400 	cfstrdvs	mvd7, [r5, #-0]
    1544:	6f6f4270 	svcvs	0x006f4270
    1548:	7247326d 	subvc	r3, r7, #-805306362	; 0xd0000006
    154c:	70007961 	andvc	r7, r0, r1, ror #18
    1550:	746e696f 	strbtvc	r6, [lr], #-2415	; 0xfffff691
    1554:	36327265 	ldrtcc	r7, [r2], -r5, ror #4
    1558:	6f6f6200 	svcvs	0x006f6200
    155c:	7247326d 	subvc	r3, r7, #-805306362	; 0xd0000006
    1560:	62007961 	andvs	r7, r0, #1589248	; 0x184000
    1564:	496d6f6f 	stmdbmi	sp!, {r0, r1, r2, r3, r5, r6, r8, r9, sl, fp, sp, lr}^
    1568:	6567616d 	strbvs	r6, [r7, #-365]!	; 0xfffffe93
    156c:	65740073 	ldrbvs	r0, [r4, #-115]!	; 0xffffff8d
    1570:	6f42706d 	svcvs	0x0042706d
    1574:	4c346d6f 	ldcmi	13, cr6, [r4], #-444	; 0xfffffe44
    1578:	74686769 	strbtvc	r6, [r8], #-1897	; 0xfffff897
    157c:	6d657400 	cfstrdvs	mvd7, [r5, #-0]
    1580:	6f6f4270 	svcvs	0x006f4270
    1584:	6c42356d 	cfstr64vs	mvdx3, [r2], {109}	; 0x6d
    1588:	006b6361 	rsbeq	r6, fp, r1, ror #6
    158c:	706d6574 	rsbvc	r6, sp, r4, ror r5
    1590:	6d6f6f42 	stclvs	15, cr6, [pc, #-264]!	; 1490 <startup-0x1fffeb70>
    1594:	6867694c 	stmdavs	r7!, {r2, r3, r6, r8, fp, sp, lr}^
    1598:	6f620074 	svcvs	0x00620074
    159c:	4c356d6f 	ldcmi	13, cr6, [r5], #-444	; 0xfffffe44
    15a0:	74686769 	strbtvc	r6, [r8], #-1897	; 0xfffff897
    15a4:	6d657400 	cfstrdvs	mvd7, [r5, #-0]
    15a8:	6f6f4270 	svcvs	0x006f4270
    15ac:	694c326d 	stmdbvs	ip, {r0, r2, r3, r5, r6, r9, ip, sp}^
    15b0:	00746867 	rsbseq	r6, r4, r7, ror #16
    15b4:	6d6f6f62 	stclvs	15, cr6, [pc, #-392]!	; 1434 <startup-0x1fffebcc>
    15b8:	616d4932 	cmnvs	sp, r2, lsr r9
    15bc:	62006567 	andvs	r6, r0, #432013312	; 0x19c00000
    15c0:	326d6f6f 	rsbcc	r6, sp, #444	; 0x1bc
    15c4:	6867694c 	stmdavs	r7!, {r2, r3, r6, r8, fp, sp, lr}^
    15c8:	6f620074 	svcvs	0x00620074
    15cc:	47346d6f 	ldrmi	r6, [r4, -pc, ror #26]!
    15d0:	00796172 	rsbseq	r6, r9, r2, ror r1
    15d4:	706d6574 	rsbvc	r6, sp, r4, ror r5
    15d8:	6d6f6f42 	stclvs	15, cr6, [pc, #-264]!	; 14d8 <startup-0x1fffeb28>
    15dc:	616c4236 	cmnvs	ip, r6, lsr r2
    15e0:	62006b63 	andvs	r6, r0, #101376	; 0x18c00
    15e4:	336d6f6f 	cmncc	sp, #444	; 0x1bc
    15e8:	79617247 	stmdbvc	r1!, {r0, r1, r2, r6, r9, ip, sp, lr}^
    15ec:	6d657400 	cfstrdvs	mvd7, [r5, #-0]
    15f0:	6f6f4270 	svcvs	0x006f4270
    15f4:	6c42336d 	mcrrvs	3, 6, r3, r2, cr13
    15f8:	006b6361 	rsbeq	r6, fp, r1, ror #6
    15fc:	6d6f6f62 	stclvs	15, cr6, [pc, #-392]!	; 147c <startup-0x1fffeb84>
    1600:	6c625f33 	stclvs	15, cr5, [r2], #-204	; 0xffffff34
    1604:	5f6b6361 	svcpl	0x006b6361
    1608:	73746962 	cmnvc	r4, #1605632	; 0x188000
    160c:	6f6f6200 	svcvs	0x006f6200
    1610:	6c42316d 	stfvse	f3, [r2], {109}	; 0x6d
    1614:	006b6361 	rsbeq	r6, fp, r1, ror #6
    1618:	6d6f6f62 	stclvs	15, cr6, [pc, #-392]!	; 1498 <startup-0x1fffeb68>
    161c:	61724736 	cmnvs	r2, r6, lsr r7
    1620:	6f620079 	svcvs	0x00620079
    1624:	42366d6f 	eorsmi	r6, r6, #7104	; 0x1bc0
    1628:	6b63616c 	blvs	18d9be0 <startup-0x1e726420>
    162c:	6f6f6200 	svcvs	0x006f6200
    1630:	6c5f346d 	cfldrdvs	mvd3, [pc], {109}	; 0x6d
    1634:	74686769 	strbtvc	r6, [r8], #-1897	; 0xfffff897
    1638:	7469625f 	strbtvc	r6, [r9], #-607	; 0xfffffda1
    163c:	6f620073 	svcvs	0x00620073
    1640:	5f316d6f 	svcpl	0x00316d6f
    1644:	6867696c 	stmdavs	r7!, {r2, r3, r5, r6, r8, fp, sp, lr}^
    1648:	69625f74 	stmdbvs	r2!, {r2, r4, r5, r6, r8, r9, sl, fp, ip, lr}^
    164c:	62007374 	andvs	r7, r0, #116, 6	; 0xd0000001
    1650:	356d6f6f 	strbcc	r6, [sp, #-3951]!	; 0xfffff091
    1654:	616c625f 	cmnvs	ip, pc, asr r2
    1658:	625f6b63 	subsvs	r6, pc, #101376	; 0x18c00
    165c:	00737469 	rsbseq	r7, r3, r9, ror #8
    1660:	6d6f6f62 	stclvs	15, cr6, [pc, #-392]!	; 14e0 <startup-0x1fffeb20>
    1664:	696c5f32 	stmdbvs	ip!, {r1, r4, r5, r8, r9, sl, fp, ip, lr}^
    1668:	5f746867 	svcpl	0x00746867
    166c:	73746962 	cmnvc	r4, #1605632	; 0x188000
    1670:	6f6f6200 	svcvs	0x006f6200
    1674:	625f366d 	subsvs	r3, pc, #114294784	; 0x6d00000
    1678:	6b63616c 	blvs	18d9c30 <startup-0x1e7263d0>
    167c:	7469625f 	strbtvc	r6, [r9], #-607	; 0xfffffda1
    1680:	6f620073 	svcvs	0x00620073
    1684:	42346d6f 	eorsmi	r6, r4, #7104	; 0x1bc0
    1688:	6b63616c 	blvs	18d9c40 <startup-0x1e7263c0>
    168c:	6f6f6200 	svcvs	0x006f6200
    1690:	675f326d 	ldrbvs	r3, [pc, -sp, ror #4]
    1694:	5f796172 	svcpl	0x00796172
    1698:	73746962 	cmnvc	r4, #1605632	; 0x188000
    169c:	6d657400 	cfstrdvs	mvd7, [r5, #-0]
    16a0:	6f6f4270 	svcvs	0x006f4270
    16a4:	694c356d 	stmdbvs	ip, {r0, r2, r3, r5, r6, r8, sl, ip, sp}^
    16a8:	00746867 	rsbseq	r6, r4, r7, ror #16
    16ac:	6d6f6f62 	stclvs	15, cr6, [pc, #-392]!	; 152c <startup-0x1fffead4>
    16b0:	6d493431 	cfstrdvs	mvd3, [r9, #-196]	; 0xffffff3c
    16b4:	00656761 	rsbeq	r6, r5, r1, ror #14
    16b8:	706d6574 	rsbvc	r6, sp, r4, ror r5
    16bc:	6d6f6f42 	stclvs	15, cr6, [pc, #-264]!	; 15bc <startup-0x1fffea44>
    16c0:	61724733 	cmnvs	r2, r3, lsr r7
    16c4:	65740079 	ldrbvs	r0, [r4, #-121]!	; 0xffffff87
    16c8:	6f42706d 	svcvs	0x0042706d
    16cc:	42346d6f 	eorsmi	r6, r4, #7104	; 0x1bc0
    16d0:	6b63616c 	blvs	18d9c88 <startup-0x1e726378>
    16d4:	6f6f6200 	svcvs	0x006f6200
    16d8:	4931316d 	ldmdbmi	r1!, {r0, r2, r3, r5, r6, r8, ip, sp}
    16dc:	6567616d 	strbvs	r6, [r7, #-365]!	; 0xfffffe93
    16e0:	67617000 	strbvs	r7, [r1, -r0]!
    16e4:	72670065 	rsbvc	r0, r7, #101	; 0x65
    16e8:	69687061 	stmdbvs	r8!, {r0, r5, r6, ip, sp, lr}^
    16ec:	65725f63 	ldrbvs	r5, [r2, #-3939]!	; 0xfffff09d
    16f0:	62006461 	andvs	r6, r0, #1627389952	; 0x61000000
    16f4:	65666675 	strbvs	r6, [r6, #-1653]!	; 0xfffff98b
    16f8:	69700072 	ldmdbvs	r0!, {r1, r4, r5, r6}^
    16fc:	326c6578 	rsbcc	r6, ip, #120, 10	; 0x1e000000
    1700:	61726400 	cmnvs	r2, r0, lsl #8
    1704:	61675f77 	smcvs	30199	; 0x75f7
    1708:	6f5f656d 	svcvs	0x005f656d
    170c:	63656a62 	cmnvs	r5, #401408	; 0x62000
    1710:	72670074 	rsbvc	r0, r7, #116	; 0x74
    1714:	69687061 	stmdbvs	r8!, {r0, r5, r6, ip, sp, lr}^
    1718:	72775f63 	rsbsvc	r5, r7, #396	; 0x18c
    171c:	5f657469 	svcpl	0x00657469
    1720:	6d6d6f63 	stclvs	15, cr6, [sp, #-396]!	; 0xfffffe74
    1724:	00646e61 	rsbeq	r6, r4, r1, ror #28
    1728:	61656c63 	cmnvs	r5, r3, ror #24
    172c:	61625f72 	smcvs	9714	; 0x25f2
    1730:	75426b63 	strbvc	r6, [r2, #-2915]	; 0xfffff49d
    1734:	72656666 	rsbvc	r6, r5, #106954752	; 0x6600000
    1738:	78697000 	stmdavc	r9!, {ip, sp, lr}^
    173c:	67006c65 	strvs	r6, [r0, -r5, ror #24]
    1740:	006a624f 	rsbeq	r6, sl, pc, asr #4
    1744:	70617267 	rsbvc	r7, r1, r7, ror #4
    1748:	5f636968 	svcpl	0x00636968
    174c:	77617264 	strbvc	r7, [r1, -r4, ror #4]!
    1750:	7263735f 	rsbvc	r7, r3, #2080374785	; 0x7c000001
    1754:	006e6565 	rsbeq	r6, lr, r5, ror #10
    1758:	616c6564 	cmnvs	ip, r4, ror #10
    175c:	696d5f79 	stmdbvs	sp!, {r0, r3, r4, r5, r6, r8, r9, sl, fp, ip, lr}^
    1760:	00696c6c 	rsbeq	r6, r9, ip, ror #24
    1764:	776f6873 			; <UNDEFINED> instruction: 0x776f6873
    1768:	6172665f 	cmnvs	r2, pc, asr r6
    176c:	6400656d 	strvs	r6, [r0], #-1389	; 0xfffffa93
    1770:	5f776172 	svcpl	0x00776172
    1774:	69727073 	ldmdbvs	r2!, {r0, r1, r4, r5, r6, ip, sp, lr}^
    1778:	64006574 	strvs	r6, [r0], #-1396	; 0xfffffa8c
    177c:	79616c65 	stmdbvc	r1!, {r0, r2, r5, r6, sl, fp, sp, lr}^
    1780:	3030355f 	eorscc	r3, r0, pc, asr r5
    1784:	6700736e 	strvs	r7, [r0, -lr, ror #6]
    1788:	68706172 	ldmdavs	r0!, {r1, r4, r5, r6, r8, sp, lr}^
    178c:	775f6369 	ldrbvc	r6, [pc, -r9, ror #6]
    1790:	65746972 	ldrbvs	r6, [r4, #-2418]!	; 0xfffff68e
    1794:	78697000 	stmdavc	r9!, {ip, sp, lr}^
    1798:	00736c65 	rsbseq	r6, r3, r5, ror #24
    179c:	79617267 	stmdbvc	r1!, {r0, r1, r2, r5, r6, r9, ip, sp, lr}^
    17a0:	6c616353 	stclvs	3, cr6, [r1], #-332	; 0xfffffeb4
    17a4:	73655465 	cmnvc	r5, #1694498816	; 0x65000000
    17a8:	72670074 	rsbvc	r0, r7, #116	; 0x74
    17ac:	69687061 	stmdbvs	r8!, {r0, r5, r6, ip, sp, lr}^
    17b0:	74635f63 	strbtvc	r5, [r3], #-3939	; 0xfffff09d
    17b4:	625f6c72 	subsvs	r6, pc, #29184	; 0x7200
    17b8:	635f7469 	cmpvs	pc, #1761607680	; 0x69000000
    17bc:	7261656c 	rsbvc	r6, r1, #108, 10	; 0x1b000000
    17c0:	2f3a4300 	svccs	0x003a4300
    17c4:	2f706f6d 	svccs	0x00706f6d
    17c8:	6f4d2f63 	svcvs	0x004d2f63
    17cc:	62616c70 	rsbvs	r6, r1, #112, 24	; 0x7000
    17d0:	7461726f 	strbtvc	r7, [r1], #-623	; 0xfffffd91
    17d4:	656e6f69 	strbvs	r6, [lr, #-3945]!	; 0xfffff097
    17d8:	49442f72 	stmdbmi	r4, {r1, r4, r5, r6, r8, r9, sl, fp, sp}^
    17dc:	572d7350 			; <UNDEFINED> instruction: 0x572d7350
    17e0:	68637469 	stmdavs	r3!, {r0, r3, r5, r6, sl, ip, sp, lr}^
    17e4:	672f432f 	strvs	r4, [pc, -pc, lsr #6]!
    17e8:	68706172 	ldmdavs	r0!, {r1, r4, r5, r6, r8, sp, lr}^
    17ec:	2e736369 	cdpcs	3, 7, cr6, cr3, cr9, {3}
    17f0:	72670063 	rsbvc	r0, r7, #99	; 0x63
    17f4:	69687061 	stmdbvs	r8!, {r0, r5, r6, ip, sp, lr}^
    17f8:	65725f63 	ldrbvs	r5, [r2, #-3939]!	; 0xfffff09d
    17fc:	645f6461 	ldrbvs	r6, [pc], #-1121	; 1804 <startup-0x1fffe7fc>
    1800:	00617461 	rsbeq	r7, r1, r1, ror #8
    1804:	616c6564 	cmnvs	ip, r4, ror #10
    1808:	696d5f79 	stmdbvs	sp!, {r0, r3, r4, r5, r6, r8, r9, sl, fp, ip, lr}^
    180c:	006f7263 	rsbeq	r7, pc, r3, ror #4
    1810:	6f6c6f63 	svcvs	0x006c6f63
    1814:	65730072 	ldrbvs	r0, [r3, #-114]!	; 0xffffff8e
    1818:	70755f74 	rsbsvc	r5, r5, r4, ror pc
    181c:	6172645f 	cmnvs	r2, pc, asr r4
    1820:	75625f77 	strbvc	r5, [r2, #-3959]!	; 0xfffff089
    1824:	72656666 	rsbvc	r6, r5, #106954752	; 0x6600000
    1828:	72670073 	rsbvc	r0, r7, #115	; 0x73
    182c:	69687061 	stmdbvs	r8!, {r0, r5, r6, ip, sp, lr}^
    1830:	74635f63 	strbtvc	r5, [r3], #-3939	; 0xfffff09d
    1834:	625f6c72 	subsvs	r6, pc, #29184	; 0x7200
    1838:	735f7469 	cmpvc	pc, #1761607680	; 0x69000000
    183c:	64007465 	strvs	r7, [r0], #-1125	; 0xfffffb9b
    1840:	79616c65 	stmdbvc	r1!, {r0, r2, r5, r6, sl, fp, sp, lr}^
    1844:	3035325f 	eorscc	r3, r5, pc, asr r2
    1848:	6600736e 	strvs	r7, [r0], -lr, ror #6
    184c:	526c6c69 	rsbpl	r6, ip, #26880	; 0x6900
    1850:	61746365 	cmnvs	r4, r5, ror #6
    1854:	656c676e 	strbvs	r6, [ip, #-1902]!	; 0xfffff892
    1858:	73616d00 	cmnvc	r1, #0, 26
    185c:	7266006b 	rsbvc	r0, r6, #107	; 0x6b
    1860:	5f656d61 	svcpl	0x00656d61
    1864:	676e656c 	strbvs	r6, [lr, -ip, ror #10]!
    1868:	67006874 	smlsdxvs	r0, r4, r8, r6
    186c:	68706172 	ldmdavs	r0!, {r1, r4, r5, r6, r8, sp, lr}^
    1870:	775f6369 	ldrbvc	r6, [pc, -r9, ror #6]
    1874:	65746972 	ldrbvs	r6, [r4, #-2418]!	; 0xfffff68e
    1878:	7461645f 	strbtvc	r6, [r1], #-1119	; 0xfffffba1
    187c:	79620061 	stmdbvc	r2!, {r0, r5, r6}^
    1880:	77006574 	smlsdxvc	r0, r4, r5, r6
    1884:	68746469 	ldmdavs	r4!, {r0, r3, r5, r6, sl, sp, lr}^
    1888:	5f6e695f 	svcpl	0x006e695f
    188c:	65747962 	ldrbvs	r7, [r4, #-2402]!	; 0xfffff69e
    1890:	6c630073 	stclvs	0, cr0, [r3], #-460	; 0xfffffe34
    1894:	5f726165 	svcpl	0x00726165
    1898:	5f6c6c61 	svcpl	0x006c6c61
    189c:	6b636162 	blvs	18d9e2c <startup-0x1e7261d4>
    18a0:	66667542 	strbtvs	r7, [r6], -r2, asr #10
    18a4:	00737265 	rsbseq	r7, r3, r5, ror #4
    18a8:	61656c63 	cmnvs	r5, r3, ror #24
    18ac:	63655272 	cmnvs	r5, #536870919	; 0x20000007
    18b0:	676e6174 			; <UNDEFINED> instruction: 0x676e6174
    18b4:	6900656c 	stmdbvs	r0, {r2, r3, r5, r6, r8, sl, sp, lr}
    18b8:	7865646e 	stmdavc	r5!, {r1, r2, r3, r5, r6, sl, sp, lr}^
    18bc:	6c657300 	stclvs	3, cr7, [r5], #-0
    18c0:	5f746365 	svcpl	0x00746365
    18c4:	746e6f63 	strbtvc	r6, [lr], #-3939	; 0xfffff09d
    18c8:	6c6c6f72 	stclvs	15, cr6, [ip], #-456	; 0xfffffe38
    18cc:	66007265 	strvs	r7, [r0], -r5, ror #4
    18d0:	5f6c6c69 	svcpl	0x006c6c69
    18d4:	65726373 	ldrbvs	r6, [r2, #-883]!	; 0xfffffc8d
    18d8:	67006e65 	strvs	r6, [r0, -r5, ror #28]
    18dc:	68706172 	ldmdavs	r0!, {r1, r4, r5, r6, r8, sp, lr}^
    18e0:	775f6369 	ldrbvc	r6, [pc, -r9, ror #6]
    18e4:	5f746961 	svcpl	0x00746961
    18e8:	64616572 	strbtvs	r6, [r1], #-1394	; 0xfffffa8e
    18ec:	6c630079 	stclvs	0, cr0, [r3], #-484	; 0xfffffe1c
    18f0:	5f726165 	svcpl	0x00726165
    18f4:	73696874 	cmnvc	r9, #116, 16	; 0x740000
    18f8:	6b636142 	blvs	18d9e08 <startup-0x1e7261f8>
    18fc:	66667542 	strbtvs	r7, [r6], -r2, asr #10
    1900:	67007265 	strvs	r7, [r0, -r5, ror #4]
    1904:	68706172 	ldmdavs	r0!, {r1, r4, r5, r6, r8, sp, lr}^
    1908:	695f6369 	ldmdbvs	pc, {r0, r3, r5, r6, r8, r9, sp, lr}^	; <UNPREDICTABLE>
    190c:	6974696e 	ldmdbvs	r4!, {r1, r2, r3, r5, r6, r8, fp, sp, lr}^
    1910:	7a696c61 	bvc	1a5ca9c <startup-0x1e5a3564>
    1914:	72670065 	rsbvc	r0, r7, #101	; 0x65
    1918:	69687061 	stmdbvs	r8!, {r0, r5, r6, ip, sp, lr}^
    191c:	6c635f63 	stclvs	15, cr5, [r3], #-396	; 0xfffffe74
    1920:	5f726165 	svcpl	0x00726165
    1924:	65726373 	ldrbvs	r6, [r2, #-883]!	; 0xfffffc8d
    1928:	6c006e65 	stcvs	14, cr6, [r0], {101}	; 0x65
    192c:	5f64616f 	svcpl	0x0064616f
    1930:	67616d69 	strbvs	r6, [r1, -r9, ror #26]!
    1934:	3a430065 	bcc	10c1ad0 <startup-0x1ef3e530>
    1938:	706f6d2f 	rsbvc	r6, pc, pc, lsr #26
    193c:	4d2f632f 	stcmi	3, cr6, [pc, #-188]!	; 1888 <startup-0x1fffe778>
    1940:	616c706f 	cmnvs	ip, pc, rrx
    1944:	61726f62 	cmnvs	r2, r2, ror #30
    1948:	6e6f6974 			; <UNDEFINED> instruction: 0x6e6f6974
    194c:	442f7265 	strtmi	r7, [pc], #-613	; 1954 <startup-0x1fffe6ac>
    1950:	2d735049 	ldclcs	0, cr5, [r3, #-292]!	; 0xfffffedc
    1954:	63746957 	cmnvs	r4, #1425408	; 0x15c000
    1958:	2f432f68 	svccs	0x00432f68
    195c:	67616d69 	strbvs	r6, [r1, -r9, ror #26]!
    1960:	00632e65 	rsbeq	r2, r3, r5, ror #28
    1964:	64616f6c 	strbtvs	r6, [r1], #-3948	; 0xfffff094
    1968:	7270735f 	rsbsvc	r7, r0, #2080374785	; 0x7c000001
    196c:	00657469 	rsbeq	r7, r5, r9, ror #8
    1970:	6d2f3a43 	vstmdbvs	pc!, {s6-s72}
    1974:	632f706f 			; <UNDEFINED> instruction: 0x632f706f
    1978:	706f4d2f 	rsbvc	r4, pc, pc, lsr #26
    197c:	6f62616c 	svcvs	0x0062616c
    1980:	69746172 	ldmdbvs	r4!, {r1, r4, r5, r6, r8, sp, lr}^
    1984:	72656e6f 	rsbvc	r6, r5, #1776	; 0x6f0
    1988:	5049442f 	subpl	r4, r9, pc, lsr #8
    198c:	69572d73 	ldmdbvs	r7, {r0, r1, r4, r5, r6, r8, sl, fp, sp}^
    1990:	2f686374 	svccs	0x00686374
    1994:	70732f43 	rsbsvc	r2, r3, r3, asr #30
    1998:	65746972 	ldrbvs	r6, [r4, #-2418]!	; 0xfffff68e
    199c:	4d00632e 	stcmi	3, cr6, [r0, #-184]	; 0xffffff48
    19a0:	7265646f 	rsbvc	r6, r5, #1862270976	; 0x6f000000
    19a4:	74657300 	strbtvc	r7, [r5], #-768	; 0xfffffd00
    19a8:	5f70755f 	svcpl	0x0070755f
    19ac:	004c4944 	subeq	r4, ip, r4, asr #18
    19b0:	4872646f 	ldmdami	r2!, {r0, r1, r2, r3, r5, r6, sl, sp, lr}^
    19b4:	00686769 	rsbeq	r6, r8, r9, ror #14
    19b8:	7079546f 	rsbsvc	r5, r9, pc, ror #8
    19bc:	47007265 	strmi	r7, [r0, -r5, ror #4]
    19c0:	004f4950 	subeq	r4, pc, r0, asr r9	; <UNPREDICTABLE>
    19c4:	64507550 	ldrbvs	r7, [r0], #-1360	; 0xfffffab0
    19c8:	64690072 	strbtvs	r0, [r9], #-114	; 0xffffff8e
    19cc:	73655272 	cmnvc	r5, #536870919	; 0x20000007
    19d0:	65767265 	ldrbvs	r7, [r6, #-613]!	; 0xfffffd9b
    19d4:	3a430064 	bcc	10c1b6c <startup-0x1ef3e494>
    19d8:	706f6d2f 	rsbvc	r6, pc, pc, lsr #26
    19dc:	4d2f632f 	stcmi	3, cr6, [pc, #-188]!	; 1928 <startup-0x1fffe6d8>
    19e0:	616c706f 	cmnvs	ip, pc, rrx
    19e4:	61726f62 	cmnvs	r2, r2, ror #30
    19e8:	6e6f6974 			; <UNDEFINED> instruction: 0x6e6f6974
    19ec:	442f7265 	strtmi	r7, [pc], #-613	; 19f4 <startup-0x1fffe60c>
    19f0:	2d735049 	ldclcs	0, cr5, [r3, #-292]!	; 0xfffffedc
    19f4:	63746957 	cmnvs	r4, #1425408	; 0x15c000
    19f8:	2f432f68 	svccs	0x00432f68
    19fc:	6f697067 	svcvs	0x00697067
    1a00:	6f00632e 	svcvs	0x0000632e
    1a04:	73655274 	cmnvc	r5, #116, 4	; 0x40000007
    1a08:	65767265 	ldrbvs	r7, [r6, #-613]!	; 0xfffffd9b
    1a0c:	65720064 	ldrbvs	r0, [r2, #-100]!	; 0xffffff9c
    1a10:	445f6461 	ldrbmi	r6, [pc], #-1121	; 1a18 <startup-0x1fffe5e8>
    1a14:	735f4c49 	cmpvc	pc, #18688	; 0x4900
    1a18:	6c676e69 	stclvs	14, cr6, [r7], #-420	; 0xfffffe5c
    1a1c:	646f0065 	strbtvs	r0, [pc], #-101	; 1a24 <startup-0x1fffe5dc>
    1a20:	776f4c72 			; <UNDEFINED> instruction: 0x776f4c72
    1a24:	70536f00 	subsvc	r6, r3, r0, lsl #30
    1a28:	72646565 	rsbvc	r6, r4, #423624704	; 0x19400000
    1a2c:	72646900 	rsbvc	r6, r4, #0, 18
    1a30:	68676948 	stmdavs	r7!, {r3, r6, r8, fp, sp, lr}^
    1a34:	72646900 	rsbvc	r6, r4, #0, 18
    1a38:	00776f4c 	rsbseq	r6, r7, ip, asr #30
    1a3c:	5272646f 	rsbspl	r6, r2, #1862270976	; 0x6f000000
    1a40:	72657365 	rsbvc	r7, r5, #-1811939327	; 0x94000001
    1a44:	00646576 	rsbeq	r6, r4, r6, ror r5
    1a48:	64616572 	strbtvs	r6, [r1], #-1394	; 0xfffffa8e
    1a4c:	4c49445f 	cfstrdmi	mvd4, [r9], {95}	; 0x5f
    1a50:	696e6900 	stmdbvs	lr!, {r8, fp, sp, lr}^
    1a54:	70615f74 	rsbvc	r5, r1, r4, ror pc
    1a58:	63696c70 	cmnvs	r9, #112, 24	; 0x7000
    1a5c:	6f697461 	svcvs	0x00697461
    1a60:	696c006e 	stmdbvs	ip!, {r1, r2, r3, r5, r6}^
    1a64:	3274696d 	rsbscc	r6, r4, #1785856	; 0x1b4000
    1a68:	63736100 	cmnvs	r3, #0, 2
    1a6c:	725f6969 	subsvc	r6, pc, #1720320	; 0x1a4000
    1a70:	5f646165 	svcpl	0x00646165
    1a74:	61746164 	cmnvs	r4, r4, ror #2
    1a78:	74657300 	strbtvc	r7, [r5], #-768	; 0xfffffd00
    1a7c:	5f70755f 	svcpl	0x0070755f
    1a80:	69637361 	stmdbvs	r3!, {r0, r5, r6, r8, r9, ip, sp, lr}^
    1a84:	73610069 	cmnvc	r1, #105	; 0x69
    1a88:	5f696963 	svcpl	0x00696963
    1a8c:	74696e69 	strbtvc	r6, [r9], #-3689	; 0xfffff197
    1a90:	6c6f6300 	stclvs	3, cr6, [pc], #-0	; 1a98 <startup-0x1fffe568>
    1a94:	006e6d75 	rsbeq	r6, lr, r5, ror sp
    1a98:	61656c63 	cmnvs	r5, r3, ror #24
    1a9c:	73615f72 	cmnvc	r1, #456	; 0x1c8
    1aa0:	00696963 	rsbeq	r6, r9, r3, ror #18
    1aa4:	69637361 	stmdbvs	r3!, {r0, r5, r6, r8, r9, ip, sp, lr}^
    1aa8:	72775f69 	rsbsvc	r5, r7, #420	; 0x1a4
    1aac:	5f657469 	svcpl	0x00657469
    1ab0:	74726170 	ldrbtvc	r6, [r2], #-368	; 0xfffffe90
    1ab4:	63736100 	cmnvs	r3, #0, 2
    1ab8:	725f6969 	subsvc	r6, pc, #1720320	; 0x1a4000
    1abc:	5f646165 	svcpl	0x00646165
    1ac0:	746e6f63 	strbtvc	r6, [lr], #-3939	; 0xfffff09d
    1ac4:	6c6c6f72 	stclvs	15, cr6, [ip], #-456	; 0xfffffe38
    1ac8:	61007265 	tstvs	r0, r5, ror #4
    1acc:	69696373 	stmdbvs	r9!, {r0, r1, r4, r5, r6, r8, r9, sp, lr}^
    1ad0:	7274635f 	rsbsvc	r6, r4, #2080374785	; 0x7c000001
    1ad4:	69625f6c 	stmdbvs	r2!, {r2, r3, r5, r6, r8, r9, sl, fp, ip, lr}^
    1ad8:	65735f74 	ldrbvs	r5, [r3, #-3956]!	; 0xfffff08c
    1adc:	73610074 	cmnvc	r1, #116	; 0x74
    1ae0:	5f696963 	svcpl	0x00696963
    1ae4:	74697277 	strbtvc	r7, [r9], #-631	; 0xfffffd89
    1ae8:	6d635f65 	stclvs	15, cr5, [r3, #-404]!	; 0xfffffe6c
    1aec:	65740064 	ldrbvs	r0, [r4, #-100]!	; 0xffffff9c
    1af0:	00317473 	eorseq	r7, r1, r3, ror r4
    1af4:	74736574 	ldrbtvc	r6, [r3], #-1396	; 0xfffffa8c
    1af8:	64610032 	strbtvs	r0, [r1], #-50	; 0xffffffce
    1afc:	73657264 	cmnvc	r5, #100, 4	; 0x40000006
    1b00:	73610073 	cmnvc	r1, #115	; 0x73
    1b04:	5f696963 	svcpl	0x00696963
    1b08:	74697277 	strbtvc	r7, [r9], #-631	; 0xfffffd89
    1b0c:	61645f65 	cmnvs	r4, r5, ror #30
    1b10:	61006174 	tstvs	r0, r4, ror r1
    1b14:	69696373 	stmdbvs	r9!, {r0, r1, r4, r5, r6, r8, r9, sp, lr}^
    1b18:	7365745f 	cmnvc	r5, #1593835520	; 0x5f000000
    1b1c:	73610074 	cmnvc	r1, #116	; 0x74
    1b20:	5f696963 	svcpl	0x00696963
    1b24:	64616572 	strbtvs	r6, [r1], #-1394	; 0xfffffa8e
    1b28:	6174735f 	cmnvs	r4, pc, asr r3
    1b2c:	00737574 	rsbseq	r7, r3, r4, ror r5
    1b30:	69637361 	stmdbvs	r3!, {r0, r5, r6, r8, r9, ip, sp, lr}^
    1b34:	74635f69 	strbtvc	r5, [r3], #-3945	; 0xfffff097
    1b38:	625f6c72 	subsvs	r6, pc, #29184	; 0x7200
    1b3c:	635f7469 	cmpvs	pc, #1761607680	; 0x69000000
    1b40:	7261656c 	rsbvc	r6, r1, #108, 10	; 0x1b000000
    1b44:	63736100 	cmnvs	r3, #0, 2
    1b48:	775f6969 	ldrbvc	r6, [pc, -r9, ror #18]
    1b4c:	65746972 	ldrbvs	r6, [r4, #-2418]!	; 0xfffff68e
    1b50:	63736100 	cmnvs	r3, #0, 2
    1b54:	675f6969 	ldrbvs	r6, [pc, -r9, ror #18]
    1b58:	586f546f 	stmdapl	pc!, {r0, r1, r2, r3, r5, r6, sl, ip, lr}^	; <UNPREDICTABLE>
    1b5c:	73610059 	cmnvc	r1, #89	; 0x59
    1b60:	5f696963 	svcpl	0x00696963
    1b64:	74697277 	strbtvc	r7, [r9], #-631	; 0xfffffd89
    1b68:	6f635f65 	svcvs	0x00635f65
    1b6c:	6f72746e 	svcvs	0x0072746e
    1b70:	72656c6c 	rsbvc	r6, r5, #108, 24	; 0x6c00
    1b74:	63736100 	cmnvs	r3, #0, 2
    1b78:	775f6969 	ldrbvc	r6, [pc, -r9, ror #18]
    1b7c:	65746972 	ldrbvs	r6, [r4, #-2418]!	; 0xfffff68e
    1b80:	6168635f 	cmnvs	r8, pc, asr r3
    1b84:	696c0072 	stmdbvs	ip!, {r1, r4, r5, r6}^
    1b88:	3174696d 	cmncc	r4, sp, ror #18
    1b8c:	2f3a4300 	svccs	0x003a4300
    1b90:	2f706f6d 	svccs	0x00706f6d
    1b94:	6f4d2f63 	svcvs	0x004d2f63
    1b98:	62616c70 	rsbvs	r6, r1, #112, 24	; 0x7000
    1b9c:	7461726f 	strbtvc	r7, [r1], #-623	; 0xfffffd91
    1ba0:	656e6f69 	strbvs	r6, [lr, #-3945]!	; 0xfffff097
    1ba4:	49442f72 	stmdbmi	r4, {r1, r4, r5, r6, r8, r9, sl, fp, sp}^
    1ba8:	572d7350 			; <UNDEFINED> instruction: 0x572d7350
    1bac:	68637469 	stmdavs	r3!, {r0, r3, r5, r6, sl, ip, sp, lr}^
    1bb0:	612f432f 			; <UNDEFINED> instruction: 0x612f432f
    1bb4:	69696373 	stmdbvs	r9!, {r0, r1, r4, r5, r6, r8, r9, sp, lr}^
    1bb8:	7369645f 	cmnvc	r9, #1593835520	; 0x5f000000
    1bbc:	79616c70 	stmdbvc	r1!, {r4, r5, r6, sl, fp, sp, lr}^
    1bc0:	6900632e 	stmdbvs	r0, {r1, r2, r3, r5, r8, r9, sp, lr}
    1bc4:	5f74696e 	svcpl	0x0074696e
    1bc8:	776f6c73 			; <UNDEFINED> instruction: 0x776f6c73
    1bcc:	7865745f 	stmdavc	r5!, {r0, r1, r2, r3, r4, r6, sl, ip, sp, lr}^
    1bd0:	656c0074 	strbvs	r0, [ip, #-116]!	; 0xffffff8c
    1bd4:	6874676e 	ldmdavs	r4!, {r1, r2, r3, r5, r6, r8, r9, sl, sp, lr}^
    1bd8:	5f666f5f 	svcpl	0x00666f5f
    1bdc:	31776f72 	cmncc	r7, r2, ror pc
    1be0:	2f3a4300 	svccs	0x003a4300
    1be4:	2f706f6d 	svccs	0x00706f6d
    1be8:	6f4d2f63 	svcvs	0x004d2f63
    1bec:	62616c70 	rsbvs	r6, r1, #112, 24	; 0x7000
    1bf0:	7461726f 	strbtvc	r7, [r1], #-623	; 0xfffffd91
    1bf4:	656e6f69 	strbvs	r6, [lr, #-3945]!	; 0xfffff097
    1bf8:	49442f72 	stmdbmi	r4, {r1, r4, r5, r6, r8, r9, sl, fp, sp}^
    1bfc:	572d7350 			; <UNDEFINED> instruction: 0x572d7350
    1c00:	68637469 	stmdavs	r3!, {r0, r3, r5, r6, sl, ip, sp, lr}^
    1c04:	732f432f 			; <UNDEFINED> instruction: 0x732f432f
    1c08:	5f776f6c 	svcpl	0x00776f6c
    1c0c:	74786574 	ldrbtvc	r6, [r8], #-1396	; 0xfffffa8c
    1c10:	6900632e 	stmdbvs	r0, {r1, r2, r3, r5, r8, r9, sp, lr}
    1c14:	6f6f646e 	svcvs	0x006f646e
    1c18:	6d497372 	stclvs	3, cr7, [r9, #-456]	; 0xfffffe38
    1c1c:	00656761 	rsbeq	r6, r5, r1, ror #14
    1c20:	6f646e69 	svcvs	0x00646e69
    1c24:	4273726f 	rsbsmi	r7, r3, #-268435450	; 0xf0000006
    1c28:	6b63616c 	blvs	18da1e0 <startup-0x1e725e20>
    1c2c:	646e6900 	strbtvs	r6, [lr], #-2304	; 0xfffff700
    1c30:	73726f6f 	cmnvc	r2, #444	; 0x1bc
    1c34:	67616d49 	strbvs	r6, [r1, -r9, asr #26]!
    1c38:	69007365 	stmdbvs	r0, {r0, r2, r5, r6, r8, r9, ip, sp, lr}
    1c3c:	6f6f646e 	svcvs	0x006f646e
    1c40:	6c5f7372 	mrrcvs	3, 7, r7, pc, cr2	; <UNPREDICTABLE>
    1c44:	74686769 	strbtvc	r6, [r8], #-1897	; 0xfffff897
    1c48:	7469625f 	strbtvc	r6, [r9], #-607	; 0xfffffda1
    1c4c:	65740073 	ldrbvs	r0, [r4, #-115]!	; 0xffffff8d
    1c50:	6e49706d 	cdpvs	0, 4, cr7, cr9, cr13, {3}
    1c54:	726f6f64 	rsbvc	r6, pc, #100, 30	; 0x190
    1c58:	61724773 	cmnvs	r2, r3, ror r7
    1c5c:	6e690079 	mcrvs	0, 3, r0, cr9, cr9, {3}
    1c60:	726f6f64 	rsbvc	r6, pc, #100, 30	; 0x190
    1c64:	72675f73 	rsbvc	r5, r7, #460	; 0x1cc
    1c68:	625f7961 	subsvs	r7, pc, #1589248	; 0x184000
    1c6c:	00737469 	rsbseq	r7, r3, r9, ror #8
    1c70:	706d6574 	rsbvc	r6, sp, r4, ror r5
    1c74:	6f646e49 	svcvs	0x00646e49
    1c78:	4c73726f 	lfmmi	f7, 2, [r3], #-444	; 0xfffffe44
    1c7c:	74686769 	strbtvc	r6, [r8], #-1897	; 0xfffff897
    1c80:	646e6900 	strbtvs	r6, [lr], #-2304	; 0xfffff700
    1c84:	73726f6f 	cmnvc	r2, #444	; 0x1bc
    1c88:	6867694c 	stmdavs	r7!, {r2, r3, r6, r8, fp, sp, lr}^
    1c8c:	3a430074 	bcc	10c1e64 <startup-0x1ef3e19c>
    1c90:	706f6d2f 	rsbvc	r6, pc, pc, lsr #26
    1c94:	4d2f632f 	stcmi	3, cr6, [pc, #-188]!	; 1be0 <startup-0x1fffe420>
    1c98:	616c706f 	cmnvs	ip, pc, rrx
    1c9c:	61726f62 	cmnvs	r2, r2, ror #30
    1ca0:	6e6f6974 			; <UNDEFINED> instruction: 0x6e6f6974
    1ca4:	442f7265 	strtmi	r7, [pc], #-613	; 1cac <startup-0x1fffe354>
    1ca8:	2d735049 	ldclcs	0, cr5, [r3, #-292]!	; 0xfffffedc
    1cac:	63746957 	cmnvs	r4, #1425408	; 0x15c000
    1cb0:	2f432f68 	svccs	0x00432f68
    1cb4:	6f646e69 	svcvs	0x00646e69
    1cb8:	2e73726f 	cdpcs	2, 7, cr7, cr3, cr15, {3}
    1cbc:	6e690063 	cdpvs	0, 6, cr0, cr9, cr3, {3}
    1cc0:	726f6f64 	rsbvc	r6, pc, #100, 30	; 0x190
    1cc4:	6c625f73 	stclvs	15, cr5, [r2], #-460	; 0xfffffe34
    1cc8:	5f6b6361 	svcpl	0x006b6361
    1ccc:	73746962 	cmnvc	r4, #1605632	; 0x188000
    1cd0:	6d657400 	cfstrdvs	mvd7, [r5, #-0]
    1cd4:	646e4970 	strbtvs	r4, [lr], #-2416	; 0xfffff690
    1cd8:	73726f6f 	cmnvc	r2, #444	; 0x1bc
    1cdc:	63616c42 	cmnvs	r1, #16896	; 0x4200
    1ce0:	6e69006b 	cdpvs	0, 6, cr0, cr9, cr11, {3}
    1ce4:	695f7469 	ldmdbvs	pc, {r0, r3, r5, r6, sl, ip, sp, lr}^	; <UNPREDICTABLE>
    1ce8:	6f6f646e 	svcvs	0x006f646e
    1cec:	69007372 	stmdbvs	r0, {r1, r4, r5, r6, r8, r9, ip, sp, lr}
    1cf0:	6f6f646e 	svcvs	0x006f646e
    1cf4:	624f7372 	subvs	r7, pc, #-939524095	; 0xc8000001
    1cf8:	6e69006a 	cdpvs	0, 6, cr0, cr9, cr10, {3}
    1cfc:	726f6f64 	rsbvc	r6, pc, #100, 30	; 0x190
    1d00:	61724773 	cmnvs	r2, r3, ror r7
    1d04:	6e690079 	mcrvs	0, 3, r0, cr9, cr9, {3}
    1d08:	726f6f64 	rsbvc	r6, pc, #100, 30	; 0x190
    1d0c:	694c3273 	stmdbvs	ip, {r0, r1, r4, r5, r6, r9, ip, sp}^
    1d10:	00746867 	rsbseq	r6, r4, r7, ror #16
    1d14:	6f646e69 	svcvs	0x00646e69
    1d18:	3273726f 	rsbscc	r7, r3, #-268435450	; 0xf0000006
    1d1c:	616c625f 	cmnvs	ip, pc, asr r2
    1d20:	625f6b63 	subsvs	r6, pc, #101376	; 0x18c00
    1d24:	00737469 	rsbseq	r7, r3, r9, ror #8
    1d28:	706d6574 	rsbvc	r6, sp, r4, ror r5
    1d2c:	6f646e49 	svcvs	0x00646e49
    1d30:	3273726f 	rsbscc	r7, r3, #-268435450	; 0xf0000006
    1d34:	6867694c 	stmdavs	r7!, {r2, r3, r6, r8, fp, sp, lr}^
    1d38:	6e690074 	mcrvs	0, 3, r0, cr9, cr4, {3}
    1d3c:	726f6f64 	rsbvc	r6, pc, #100, 30	; 0x190
    1d40:	72473273 	subvc	r3, r7, #805306375	; 0x30000007
    1d44:	43007961 	movwmi	r7, #2401	; 0x961
    1d48:	6f6d2f3a 	svcvs	0x006d2f3a
    1d4c:	2f632f70 	svccs	0x00632f70
    1d50:	6c706f4d 	ldclvs	15, cr6, [r0], #-308	; 0xfffffecc
    1d54:	726f6261 	rsbvc	r6, pc, #268435462	; 0x10000006
    1d58:	6f697461 	svcvs	0x00697461
    1d5c:	2f72656e 	svccs	0x0072656e
    1d60:	73504944 	cmpvc	r0, #68, 18	; 0x110000
    1d64:	7469572d 	strbtvc	r5, [r9], #-1837	; 0xfffff8d3
    1d68:	432f6863 			; <UNDEFINED> instruction: 0x432f6863
    1d6c:	646e692f 	strbtvs	r6, [lr], #-2351	; 0xfffff6d1
    1d70:	73726f6f 	cmnvc	r2, #444	; 0x1bc
    1d74:	00632e32 	rsbeq	r2, r3, r2, lsr lr
    1d78:	706d6574 	rsbvc	r6, sp, r4, ror r5
    1d7c:	6f646e49 	svcvs	0x00646e49
    1d80:	3273726f 	rsbscc	r7, r3, #-268435450	; 0xf0000006
    1d84:	63616c42 	cmnvs	r1, #16896	; 0x4200
    1d88:	6e69006b 	cdpvs	0, 6, cr0, cr9, cr11, {3}
    1d8c:	726f6f64 	rsbvc	r6, pc, #100, 30	; 0x190
    1d90:	6c423273 	sfmvs	f3, 2, [r2], {115}	; 0x73
    1d94:	006b6361 	rsbeq	r6, fp, r1, ror #6
    1d98:	6f646e69 	svcvs	0x00646e69
    1d9c:	3273726f 	rsbscc	r7, r3, #-268435450	; 0xf0000006
    1da0:	67616d49 	strbvs	r6, [r1, -r9, asr #26]!
    1da4:	6e690065 	cdpvs	0, 6, cr0, cr9, cr5, {3}
    1da8:	695f7469 	ldmdbvs	pc, {r0, r3, r5, r6, sl, ip, sp, lr}^	; <UNPREDICTABLE>
    1dac:	6f6f646e 	svcvs	0x006f646e
    1db0:	00327372 	eorseq	r7, r2, r2, ror r3
    1db4:	6f646e69 	svcvs	0x00646e69
    1db8:	3273726f 	rsbscc	r7, r3, #-268435450	; 0xf0000006
    1dbc:	67696c5f 			; <UNDEFINED> instruction: 0x67696c5f
    1dc0:	625f7468 	subsvs	r7, pc, #104, 8	; 0x68000000
    1dc4:	00737469 	rsbseq	r7, r3, r9, ror #8
    1dc8:	6f646e69 	svcvs	0x00646e69
    1dcc:	3273726f 	rsbscc	r7, r3, #-268435450	; 0xf0000006
    1dd0:	67616d49 	strbvs	r6, [r1, -r9, asr #26]!
    1dd4:	69007365 	stmdbvs	r0, {r0, r2, r5, r6, r8, r9, ip, sp, lr}
    1dd8:	6f6f646e 	svcvs	0x006f646e
    1ddc:	5f327372 	svcpl	0x00327372
    1de0:	79617267 	stmdbvc	r1!, {r0, r1, r2, r5, r6, r9, ip, sp, lr}^
    1de4:	7469625f 	strbtvc	r6, [r9], #-607	; 0xfffffda1
    1de8:	6e690073 	mcrvs	0, 3, r0, cr9, cr3, {3}
    1dec:	726f6f64 	rsbvc	r6, pc, #100, 30	; 0x190
    1df0:	624f3273 	subvs	r3, pc, #805306375	; 0x30000007
    1df4:	6574006a 	ldrbvs	r0, [r4, #-106]!	; 0xffffff96
    1df8:	6e49706d 	cdpvs	0, 4, cr7, cr9, cr13, {3}
    1dfc:	726f6f64 	rsbvc	r6, pc, #100, 30	; 0x190
    1e00:	72473273 	subvc	r3, r7, #805306375	; 0x30000007
    1e04:	43007961 	movwmi	r7, #2401	; 0x961
    1e08:	6f6d2f3a 	svcvs	0x006d2f3a
    1e0c:	2f632f70 	svccs	0x00632f70
    1e10:	6c706f4d 	ldclvs	15, cr6, [r0], #-308	; 0xfffffecc
    1e14:	726f6261 	rsbvc	r6, pc, #268435462	; 0x10000006
    1e18:	6f697461 	svcvs	0x00697461
    1e1c:	2f72656e 	svccs	0x0072656e
    1e20:	73504944 	cmpvc	r0, #68, 18	; 0x110000
    1e24:	7469572d 	strbtvc	r5, [r9], #-1837	; 0xfffff8d3
    1e28:	432f6863 			; <UNDEFINED> instruction: 0x432f6863
    1e2c:	6f72742f 	svcvs	0x0072742f
    1e30:	2e796870 	mrccs	8, 3, r6, cr9, cr0, {3}
    1e34:	72740063 	rsbsvc	r0, r4, #99	; 0x63
    1e38:	7968706f 	stmdbvc	r8!, {r0, r1, r2, r3, r5, r6, ip, sp, lr}^
    1e3c:	616c625f 	cmnvs	ip, pc, asr r2
    1e40:	625f6b63 	subsvs	r6, pc, #101376	; 0x18c00
    1e44:	00737469 	rsbseq	r7, r3, r9, ror #8
    1e48:	706f7274 	rsbvc	r7, pc, r4, ror r2	; <UNPREDICTABLE>
    1e4c:	694c7968 	stmdbvs	ip, {r3, r5, r6, r8, fp, ip, sp, lr}^
    1e50:	00746867 	rsbseq	r6, r4, r7, ror #16
    1e54:	706f7274 	rsbvc	r7, pc, r4, ror r2	; <UNPREDICTABLE>
    1e58:	624f7968 	subvs	r7, pc, #104, 18	; 0x1a0000
    1e5c:	7274006a 	rsbsvc	r0, r4, #106	; 0x6a
    1e60:	7968706f 	stmdbvc	r8!, {r0, r1, r2, r3, r5, r6, ip, sp, lr}^
    1e64:	67696c5f 			; <UNDEFINED> instruction: 0x67696c5f
    1e68:	625f7468 	subsvs	r7, pc, #104, 8	; 0x68000000
    1e6c:	00737469 	rsbseq	r7, r3, r9, ror #8
    1e70:	706d6574 	rsbvc	r6, sp, r4, ror r5
    1e74:	706f7254 	rsbvc	r7, pc, r4, asr r2	; <UNPREDICTABLE>
    1e78:	6c427968 	mcrrvs	9, 6, r7, r2, cr8	; <UNPREDICTABLE>
    1e7c:	006b6361 	rsbeq	r6, fp, r1, ror #6
    1e80:	706f7274 	rsbvc	r7, pc, r4, ror r2	; <UNPREDICTABLE>
    1e84:	675f7968 	ldrbvs	r7, [pc, -r8, ror #18]
    1e88:	5f796172 	svcpl	0x00796172
    1e8c:	73746962 	cmnvc	r4, #1605632	; 0x188000
    1e90:	6d657400 	cfstrdvs	mvd7, [r5, #-0]
    1e94:	6f725470 	svcvs	0x00725470
    1e98:	4c796870 	ldclmi	8, cr6, [r9], #-448	; 0xfffffe40
    1e9c:	74686769 	strbtvc	r6, [r8], #-1897	; 0xfffff897
    1ea0:	6f727400 	svcvs	0x00727400
    1ea4:	47796870 			; <UNDEFINED> instruction: 0x47796870
    1ea8:	00796172 	rsbseq	r6, r9, r2, ror r1
    1eac:	706f7274 	rsbvc	r7, pc, r4, ror r2	; <UNPREDICTABLE>
    1eb0:	6d497968 	vstrvs.16	s15, [r9, #-208]	; 0xffffff30	; <UNPREDICTABLE>
    1eb4:	73656761 	cmnvc	r5, #25427968	; 0x1840000
    1eb8:	6f727400 	svcvs	0x00727400
    1ebc:	49796870 	ldmdbmi	r9!, {r4, r5, r6, fp, sp, lr}^
    1ec0:	6567616d 	strbvs	r6, [r7, #-365]!	; 0xfffffe93
    1ec4:	6f727400 	svcvs	0x00727400
    1ec8:	42796870 	rsbsmi	r6, r9, #112, 16	; 0x700000
    1ecc:	6b63616c 	blvs	18da484 <startup-0x1e725b7c>
    1ed0:	6d657400 	cfstrdvs	mvd7, [r5, #-0]
    1ed4:	6f725470 	svcvs	0x00725470
    1ed8:	47796870 			; <UNDEFINED> instruction: 0x47796870
    1edc:	00796172 	rsbseq	r6, r9, r2, ror r1
    1ee0:	65676f72 	strbvs	r6, [r7, #-3954]!	; 0xfffff08e
    1ee4:	6c625f72 	stclvs	15, cr5, [r2], #-456	; 0xfffffe38
    1ee8:	5f6b6361 	svcpl	0x006b6361
    1eec:	73746962 	cmnvc	r4, #1605632	; 0x188000
    1ef0:	696e6900 	stmdbvs	lr!, {r8, fp, sp, lr}^
    1ef4:	6f725f74 	svcvs	0x00725f74
    1ef8:	00726567 	rsbseq	r6, r2, r7, ror #10
    1efc:	65676f72 	strbvs	r6, [r7, #-3954]!	; 0xfffff08e
    1f00:	6a624f72 	bvs	1895cd0 <startup-0x1e76a330>
    1f04:	2f3a4300 	svccs	0x003a4300
    1f08:	2f706f6d 	svccs	0x00706f6d
    1f0c:	6f4d2f63 	svcvs	0x004d2f63
    1f10:	62616c70 	rsbvs	r6, r1, #112, 24	; 0x7000
    1f14:	7461726f 	strbtvc	r7, [r1], #-623	; 0xfffffd91
    1f18:	656e6f69 	strbvs	r6, [lr, #-3945]!	; 0xfffff097
    1f1c:	49442f72 	stmdbmi	r4, {r1, r4, r5, r6, r8, r9, sl, fp, sp}^
    1f20:	572d7350 			; <UNDEFINED> instruction: 0x572d7350
    1f24:	68637469 	stmdavs	r3!, {r0, r3, r5, r6, sl, ip, sp, lr}^
    1f28:	722f432f 	eorvc	r4, pc, #-1140850688	; 0xbc000000
    1f2c:	7265676f 	rsbvc	r6, r5, #29097984	; 0x1bc0000
    1f30:	7400632e 	strvc	r6, [r0], #-814	; 0xfffffcd2
    1f34:	52706d65 	rsbspl	r6, r0, #6464	; 0x1940
    1f38:	7265676f 	rsbvc	r6, r5, #29097984	; 0x1bc0000
    1f3c:	79617247 	stmdbvc	r1!, {r0, r1, r2, r6, r9, ip, sp, lr}^
    1f40:	6d657400 	cfstrdvs	mvd7, [r5, #-0]
    1f44:	676f5270 			; <UNDEFINED> instruction: 0x676f5270
    1f48:	6c427265 	sfmvs	f7, 2, [r2], {101}	; 0x65
    1f4c:	006b6361 	rsbeq	r6, fp, r1, ror #6
    1f50:	65676f72 	strbvs	r6, [r7, #-3954]!	; 0xfffff08e
    1f54:	72675f72 	rsbvc	r5, r7, #456	; 0x1c8
    1f58:	625f7961 	subsvs	r7, pc, #1589248	; 0x184000
    1f5c:	00737469 	rsbseq	r7, r3, r9, ror #8
    1f60:	65676f72 	strbvs	r6, [r7, #-3954]!	; 0xfffff08e
    1f64:	616d4972 	smcvs	54418	; 0xd492
    1f68:	00736567 	rsbseq	r6, r3, r7, ror #10
    1f6c:	65676f72 	strbvs	r6, [r7, #-3954]!	; 0xfffff08e
    1f70:	61724772 	cmnvs	r2, r2, ror r7
    1f74:	6f720079 	svcvs	0x00720079
    1f78:	4c726567 	cfldr64mi	mvdx6, [r2], #-412	; 0xfffffe64
    1f7c:	74686769 	strbtvc	r6, [r8], #-1897	; 0xfffff897
    1f80:	676f7200 	strbvs	r7, [pc, -r0, lsl #4]!
    1f84:	6c5f7265 	lfmvs	f7, 2, [pc], {101}	; 0x65
    1f88:	74686769 	strbtvc	r6, [r8], #-1897	; 0xfffff897
    1f8c:	7469625f 	strbtvc	r6, [r9], #-607	; 0xfffffda1
    1f90:	6f720073 	svcvs	0x00720073
    1f94:	49726567 	ldmdbmi	r2!, {r0, r1, r2, r5, r6, r8, sl, sp, lr}^
    1f98:	6567616d 	strbvs	r6, [r7, #-365]!	; 0xfffffe93
    1f9c:	676f7200 	strbvs	r7, [pc, -r0, lsl #4]!
    1fa0:	6c427265 	sfmvs	f7, 2, [r2], {101}	; 0x65
    1fa4:	006b6361 	rsbeq	r6, fp, r1, ror #6
    1fa8:	706d6574 	rsbvc	r6, sp, r4, ror r5
    1fac:	65676f52 	strbvs	r6, [r7, #-3922]!	; 0xfffff0ae
    1fb0:	67694c72 			; <UNDEFINED> instruction: 0x67694c72
    1fb4:	67007468 	strvs	r7, [r0, -r8, ror #8]
    1fb8:	5f656d61 	svcpl	0x00656d61
    1fbc:	7265766f 	rsbvc	r7, r5, #116391936	; 0x6f00000
    1fc0:	7469775f 	strbtvc	r7, [r9], #-1887	; 0xfffff8a1
    1fc4:	49346863 	ldmdbmi	r4!, {r0, r1, r5, r6, fp, sp, lr}
    1fc8:	6567616d 	strbvs	r6, [r7, #-365]!	; 0xfffffe93
    1fcc:	6d616700 	stclvs	7, cr6, [r1, #-0]
    1fd0:	766f5f65 	strbtvc	r5, [pc], -r5, ror #30
    1fd4:	775f7265 	ldrbvc	r7, [pc, -r5, ror #4]
    1fd8:	68637469 	stmdavs	r3!, {r0, r3, r5, r6, sl, ip, sp, lr}^
    1fdc:	696c5f36 	stmdbvs	ip!, {r1, r2, r4, r5, r8, r9, sl, fp, ip, lr}^
    1fe0:	5f746867 	svcpl	0x00746867
    1fe4:	73746962 	cmnvc	r4, #1605632	; 0x188000
    1fe8:	696e6900 	stmdbvs	lr!, {r8, fp, sp, lr}^
    1fec:	61675f74 	smcvs	30196	; 0x75f4
    1ff0:	6f5f656d 	svcvs	0x005f656d
    1ff4:	5f726576 	svcpl	0x00726576
    1ff8:	63746977 	cmnvs	r4, #1949696	; 0x1dc000
    1ffc:	61670068 	cmnvs	r7, r8, rrx
    2000:	6f5f656d 	svcvs	0x005f656d
    2004:	5f726576 	svcpl	0x00726576
    2008:	63746977 	cmnvs	r4, #1949696	; 0x1dc000
    200c:	625f3168 	subsvs	r3, pc, #104, 2
    2010:	6b63616c 	blvs	18da5c8 <startup-0x1e725a38>
    2014:	7469625f 	strbtvc	r6, [r9], #-607	; 0xfffffda1
    2018:	3a430073 	bcc	10c21ec <startup-0x1ef3de14>
    201c:	706f6d2f 	rsbvc	r6, pc, pc, lsr #26
    2020:	4d2f632f 	stcmi	3, cr6, [pc, #-188]!	; 1f6c <startup-0x1fffe094>
    2024:	616c706f 	cmnvs	ip, pc, rrx
    2028:	61726f62 	cmnvs	r2, r2, ror #30
    202c:	6e6f6974 			; <UNDEFINED> instruction: 0x6e6f6974
    2030:	442f7265 	strtmi	r7, [pc], #-613	; 2038 <startup-0x1fffdfc8>
    2034:	2d735049 	ldclcs	0, cr5, [r3, #-292]!	; 0xfffffedc
    2038:	63746957 	cmnvs	r4, #1425408	; 0x15c000
    203c:	2f432f68 	svccs	0x00432f68
    2040:	656d6167 	strbvs	r6, [sp, #-359]!	; 0xfffffe99
    2044:	65766f5f 	ldrbvs	r6, [r6, #-3935]!	; 0xfffff0a1
    2048:	69775f72 	ldmdbvs	r7!, {r1, r4, r5, r6, r8, r9, sl, fp, ip, lr}^
    204c:	2e686374 	mcrcs	3, 3, r6, cr8, cr4, {3}
    2050:	61670063 	cmnvs	r7, r3, rrx
    2054:	6f5f656d 	svcvs	0x005f656d
    2058:	5f726576 	svcpl	0x00726576
    205c:	63746977 	cmnvs	r4, #1949696	; 0x1dc000
    2060:	675f3268 	ldrbvs	r3, [pc, -r8, ror #4]
    2064:	5f796172 	svcpl	0x00796172
    2068:	73746962 	cmnvc	r4, #1605632	; 0x188000
    206c:	6d616700 	stclvs	7, cr6, [r1, #-0]
    2070:	766f5f65 	strbtvc	r5, [pc], -r5, ror #30
    2074:	775f7265 	ldrbvc	r7, [pc, -r5, ror #4]
    2078:	68637469 	stmdavs	r3!, {r0, r3, r5, r6, sl, ip, sp, lr}^
    207c:	6c625f32 	stclvs	15, cr5, [r2], #-200	; 0xffffff38
    2080:	5f6b6361 	svcpl	0x006b6361
    2084:	73746962 	cmnvc	r4, #1605632	; 0x188000
    2088:	6d616700 	stclvs	7, cr6, [r1, #-0]
    208c:	766f5f65 	strbtvc	r5, [pc], -r5, ror #30
    2090:	775f7265 	ldrbvc	r7, [pc, -r5, ror #4]
    2094:	68637469 	stmdavs	r3!, {r0, r3, r5, r6, sl, ip, sp, lr}^
    2098:	616d4931 	cmnvs	sp, r1, lsr r9
    209c:	67006567 	strvs	r6, [r0, -r7, ror #10]
    20a0:	5f656d61 	svcpl	0x00656d61
    20a4:	7265766f 	rsbvc	r7, r5, #116391936	; 0x6f00000
    20a8:	7469775f 	strbtvc	r7, [r9], #-1887	; 0xfffff8a1
    20ac:	5f336863 	svcpl	0x00336863
    20b0:	63616c62 	cmnvs	r1, #25088	; 0x6200
    20b4:	69625f6b 	stmdbvs	r2!, {r0, r1, r3, r5, r6, r8, r9, sl, fp, ip, lr}^
    20b8:	67007374 	smlsdxvs	r0, r4, r3, r7
    20bc:	5f656d61 	svcpl	0x00656d61
    20c0:	7265766f 	rsbvc	r7, r5, #116391936	; 0x6f00000
    20c4:	7469775f 	strbtvc	r7, [r9], #-1887	; 0xfffff8a1
    20c8:	5f346863 	svcpl	0x00346863
    20cc:	63616c62 	cmnvs	r1, #25088	; 0x6200
    20d0:	69625f6b 	stmdbvs	r2!, {r0, r1, r3, r5, r6, r8, r9, sl, fp, ip, lr}^
    20d4:	74007374 	strvc	r7, [r0], #-884	; 0xfffffc8c
    20d8:	67706d65 	ldrbvs	r6, [r0, -r5, ror #26]!
    20dc:	5f656d61 	svcpl	0x00656d61
    20e0:	7265766f 	rsbvc	r7, r5, #116391936	; 0x6f00000
    20e4:	7469775f 	strbtvc	r7, [r9], #-1887	; 0xfffff8a1
    20e8:	6c426863 	mcrrvs	8, 6, r6, r2, cr3
    20ec:	006b6361 	rsbeq	r6, fp, r1, ror #6
    20f0:	706d6574 	rsbvc	r6, sp, r4, ror r5
    20f4:	656d6167 	strbvs	r6, [sp, #-359]!	; 0xfffffe99
    20f8:	65766f5f 	ldrbvs	r6, [r6, #-3935]!	; 0xfffff0a1
    20fc:	69775f72 	ldmdbvs	r7!, {r1, r4, r5, r6, r8, r9, sl, fp, ip, lr}^
    2100:	34686374 	strbtcc	r6, [r8], #-884	; 0xfffffc8c
    2104:	79617247 	stmdbvc	r1!, {r0, r1, r2, r6, r9, ip, sp, lr}^
    2108:	6d616700 	stclvs	7, cr6, [r1, #-0]
    210c:	766f5f65 	strbtvc	r5, [pc], -r5, ror #30
    2110:	775f7265 	ldrbvc	r7, [pc, -r5, ror #4]
    2114:	68637469 	stmdavs	r3!, {r0, r3, r5, r6, sl, ip, sp, lr}^
    2118:	72675f35 	rsbvc	r5, r7, #53, 30	; 0xd4
    211c:	625f7961 	subsvs	r7, pc, #1589248	; 0x184000
    2120:	00737469 	rsbseq	r7, r3, r9, ror #8
    2124:	706d6574 	rsbvc	r6, sp, r4, ror r5
    2128:	656d6167 	strbvs	r6, [sp, #-359]!	; 0xfffffe99
    212c:	65766f5f 	ldrbvs	r6, [r6, #-3935]!	; 0xfffff0a1
    2130:	69775f72 	ldmdbvs	r7!, {r1, r4, r5, r6, r8, r9, sl, fp, ip, lr}^
    2134:	4c686374 	stclmi	3, cr6, [r8], #-464	; 0xfffffe30
    2138:	74686769 	strbtvc	r6, [r8], #-1897	; 0xfffff897
    213c:	6d616700 	stclvs	7, cr6, [r1, #-0]
    2140:	766f5f65 	strbtvc	r5, [pc], -r5, ror #30
    2144:	775f7265 	ldrbvc	r7, [pc, -r5, ror #4]
    2148:	68637469 	stmdavs	r3!, {r0, r3, r5, r6, sl, ip, sp, lr}^
    214c:	696c5f35 	stmdbvs	ip!, {r0, r2, r4, r5, r8, r9, sl, fp, ip, lr}^
    2150:	5f746867 	svcpl	0x00746867
    2154:	73746962 	cmnvc	r4, #1605632	; 0x188000
    2158:	6d616700 	stclvs	7, cr6, [r1, #-0]
    215c:	766f5f65 	strbtvc	r5, [pc], -r5, ror #30
    2160:	775f7265 	ldrbvc	r7, [pc, -r5, ror #4]
    2164:	68637469 	stmdavs	r3!, {r0, r3, r5, r6, sl, ip, sp, lr}^
    2168:	72675f36 	rsbvc	r5, r7, #54, 30	; 0xd8
    216c:	625f7961 	subsvs	r7, pc, #1589248	; 0x184000
    2170:	00737469 	rsbseq	r7, r3, r9, ror #8
    2174:	656d6167 	strbvs	r6, [sp, #-359]!	; 0xfffffe99
    2178:	65766f5f 	ldrbvs	r6, [r6, #-3935]!	; 0xfffff0a1
    217c:	69775f72 	ldmdbvs	r7!, {r1, r4, r5, r6, r8, r9, sl, fp, ip, lr}^
    2180:	31686374 	smccc	34356	; 0x8634
    2184:	63616c42 	cmnvs	r1, #16896	; 0x4200
    2188:	6574006b 	ldrbvs	r0, [r4, #-107]!	; 0xffffff95
    218c:	6167706d 	cmnvs	r7, sp, rrx
    2190:	6f5f656d 	svcvs	0x005f656d
    2194:	5f726576 	svcpl	0x00726576
    2198:	63746977 	cmnvs	r4, #1949696	; 0x1dc000
    219c:	694c3468 	stmdbvs	ip, {r3, r5, r6, sl, ip, sp}^
    21a0:	00746867 	rsbseq	r6, r4, r7, ror #16
    21a4:	656d6167 	strbvs	r6, [sp, #-359]!	; 0xfffffe99
    21a8:	65766f5f 	ldrbvs	r6, [r6, #-3935]!	; 0xfffff0a1
    21ac:	69775f72 	ldmdbvs	r7!, {r1, r4, r5, r6, r8, r9, sl, fp, ip, lr}^
    21b0:	36686374 			; <UNDEFINED> instruction: 0x36686374
    21b4:	67616d49 	strbvs	r6, [r1, -r9, asr #26]!
    21b8:	65740065 	ldrbvs	r0, [r4, #-101]!	; 0xffffff9b
    21bc:	6167706d 	cmnvs	r7, sp, rrx
    21c0:	6f5f656d 	svcvs	0x005f656d
    21c4:	5f726576 	svcpl	0x00726576
    21c8:	63746977 	cmnvs	r4, #1949696	; 0x1dc000
    21cc:	694c3268 	stmdbvs	ip, {r3, r5, r6, r9, ip, sp}^
    21d0:	00746867 	rsbseq	r6, r4, r7, ror #16
    21d4:	706d6574 	rsbvc	r6, sp, r4, ror r5
    21d8:	656d6167 	strbvs	r6, [sp, #-359]!	; 0xfffffe99
    21dc:	65766f5f 	ldrbvs	r6, [r6, #-3935]!	; 0xfffff0a1
    21e0:	69775f72 	ldmdbvs	r7!, {r1, r4, r5, r6, r8, r9, sl, fp, ip, lr}^
    21e4:	35686374 	strbcc	r6, [r8, #-884]!	; 0xfffffc8c
    21e8:	6867694c 	stmdavs	r7!, {r2, r3, r6, r8, fp, sp, lr}^
    21ec:	65740074 	ldrbvs	r0, [r4, #-116]!	; 0xffffff8c
    21f0:	6167706d 	cmnvs	r7, sp, rrx
    21f4:	6f5f656d 	svcvs	0x005f656d
    21f8:	5f726576 	svcpl	0x00726576
    21fc:	63746977 	cmnvs	r4, #1949696	; 0x1dc000
    2200:	6c423568 	cfstr64vs	mvdx3, [r2], {104}	; 0x68
    2204:	006b6361 	rsbeq	r6, fp, r1, ror #6
    2208:	706d6574 	rsbvc	r6, sp, r4, ror r5
    220c:	656d6167 	strbvs	r6, [sp, #-359]!	; 0xfffffe99
    2210:	65766f5f 	ldrbvs	r6, [r6, #-3935]!	; 0xfffff0a1
    2214:	69775f72 	ldmdbvs	r7!, {r1, r4, r5, r6, r8, r9, sl, fp, ip, lr}^
    2218:	32686374 	rsbcc	r6, r8, #116, 6	; 0xd0000001
    221c:	79617247 	stmdbvc	r1!, {r0, r1, r2, r6, r9, ip, sp, lr}^
    2220:	6d616700 	stclvs	7, cr6, [r1, #-0]
    2224:	766f5f65 	strbtvc	r5, [pc], -r5, ror #30
    2228:	775f7265 	ldrbvc	r7, [pc, -r5, ror #4]
    222c:	68637469 	stmdavs	r3!, {r0, r3, r5, r6, sl, ip, sp, lr}^
    2230:	616d4935 	cmnvs	sp, r5, lsr r9
    2234:	74006567 	strvc	r6, [r0], #-1383	; 0xfffffa99
    2238:	67706d65 	ldrbvs	r6, [r0, -r5, ror #26]!
    223c:	5f656d61 	svcpl	0x00656d61
    2240:	7265766f 	rsbvc	r7, r5, #116391936	; 0x6f00000
    2244:	7469775f 	strbtvc	r7, [r9], #-1887	; 0xfffff8a1
    2248:	47356863 	ldrmi	r6, [r5, -r3, ror #16]!
    224c:	00796172 	rsbseq	r6, r9, r2, ror r1
    2250:	656d6167 	strbvs	r6, [sp, #-359]!	; 0xfffffe99
    2254:	65766f5f 	ldrbvs	r6, [r6, #-3935]!	; 0xfffff0a1
    2258:	69775f72 	ldmdbvs	r7!, {r1, r4, r5, r6, r8, r9, sl, fp, ip, lr}^
    225c:	32686374 	rsbcc	r6, r8, #116, 6	; 0xd0000001
    2260:	67616d49 	strbvs	r6, [r1, -r9, asr #26]!
    2264:	65740065 	ldrbvs	r0, [r4, #-101]!	; 0xffffff9b
    2268:	6167706d 	cmnvs	r7, sp, rrx
    226c:	6f5f656d 	svcvs	0x005f656d
    2270:	5f726576 	svcpl	0x00726576
    2274:	63746977 	cmnvs	r4, #1949696	; 0x1dc000
    2278:	6c423468 	cfstrdvs	mvd3, [r2], {104}	; 0x68
    227c:	006b6361 	rsbeq	r6, fp, r1, ror #6
    2280:	656d6167 	strbvs	r6, [sp, #-359]!	; 0xfffffe99
    2284:	65766f5f 	ldrbvs	r6, [r6, #-3935]!	; 0xfffff0a1
    2288:	69775f72 	ldmdbvs	r7!, {r1, r4, r5, r6, r8, r9, sl, fp, ip, lr}^
    228c:	34686374 	strbtcc	r6, [r8], #-884	; 0xfffffc8c
    2290:	67696c5f 			; <UNDEFINED> instruction: 0x67696c5f
    2294:	625f7468 	subsvs	r7, pc, #104, 8	; 0x68000000
    2298:	00737469 	rsbseq	r7, r3, r9, ror #8
    229c:	656d6167 	strbvs	r6, [sp, #-359]!	; 0xfffffe99
    22a0:	65766f5f 	ldrbvs	r6, [r6, #-3935]!	; 0xfffff0a1
    22a4:	69775f72 	ldmdbvs	r7!, {r1, r4, r5, r6, r8, r9, sl, fp, ip, lr}^
    22a8:	31686374 	smccc	34356	; 0x8634
    22ac:	6172675f 	cmnvs	r2, pc, asr r7
    22b0:	69625f79 	stmdbvs	r2!, {r0, r3, r4, r5, r6, r8, r9, sl, fp, ip, lr}^
    22b4:	67007374 	smlsdxvs	r0, r4, r3, r7
    22b8:	5f656d61 	svcpl	0x00656d61
    22bc:	7265766f 	rsbvc	r7, r5, #116391936	; 0x6f00000
    22c0:	7469775f 	strbtvc	r7, [r9], #-1887	; 0xfffff8a1
    22c4:	5f316863 	svcpl	0x00316863
    22c8:	6867696c 	stmdavs	r7!, {r2, r3, r5, r6, r8, fp, sp, lr}^
    22cc:	69625f74 	stmdbvs	r2!, {r2, r4, r5, r6, r8, r9, sl, fp, ip, lr}^
    22d0:	67007374 	smlsdxvs	r0, r4, r3, r7
    22d4:	5f656d61 	svcpl	0x00656d61
    22d8:	7265766f 	rsbvc	r7, r5, #116391936	; 0x6f00000
    22dc:	7469775f 	strbtvc	r7, [r9], #-1887	; 0xfffff8a1
    22e0:	5f356863 	svcpl	0x00356863
    22e4:	63616c62 	cmnvs	r1, #25088	; 0x6200
    22e8:	69625f6b 	stmdbvs	r2!, {r0, r1, r3, r5, r6, r8, r9, sl, fp, ip, lr}^
    22ec:	67007374 	smlsdxvs	r0, r4, r3, r7
    22f0:	5f656d61 	svcpl	0x00656d61
    22f4:	7265766f 	rsbvc	r7, r5, #116391936	; 0x6f00000
    22f8:	7469775f 	strbtvc	r7, [r9], #-1887	; 0xfffff8a1
    22fc:	5f326863 	svcpl	0x00326863
    2300:	6867696c 	stmdavs	r7!, {r2, r3, r5, r6, r8, fp, sp, lr}^
    2304:	69625f74 	stmdbvs	r2!, {r2, r4, r5, r6, r8, r9, sl, fp, ip, lr}^
    2308:	67007374 	smlsdxvs	r0, r4, r3, r7
    230c:	5f656d61 	svcpl	0x00656d61
    2310:	7265766f 	rsbvc	r7, r5, #116391936	; 0x6f00000
    2314:	7469775f 	strbtvc	r7, [r9], #-1887	; 0xfffff8a1
    2318:	5f366863 	svcpl	0x00366863
    231c:	63616c62 	cmnvs	r1, #25088	; 0x6200
    2320:	69625f6b 	stmdbvs	r2!, {r0, r1, r3, r5, r6, r8, r9, sl, fp, ip, lr}^
    2324:	67007374 	smlsdxvs	r0, r4, r3, r7
    2328:	5f656d61 	svcpl	0x00656d61
    232c:	7265766f 	rsbvc	r7, r5, #116391936	; 0x6f00000
    2330:	7469775f 	strbtvc	r7, [r9], #-1887	; 0xfffff8a1
    2334:	5f336863 	svcpl	0x00336863
    2338:	6867696c 	stmdavs	r7!, {r2, r3, r5, r6, r8, fp, sp, lr}^
    233c:	69625f74 	stmdbvs	r2!, {r2, r4, r5, r6, r8, r9, sl, fp, ip, lr}^
    2340:	67007374 	smlsdxvs	r0, r4, r3, r7
    2344:	5f656d61 	svcpl	0x00656d61
    2348:	7265766f 	rsbvc	r7, r5, #116391936	; 0x6f00000
    234c:	7469775f 	strbtvc	r7, [r9], #-1887	; 0xfffff8a1
    2350:	4c316863 	ldcmi	8, cr6, [r1], #-396	; 0xfffffe74
    2354:	74686769 	strbtvc	r6, [r8], #-1897	; 0xfffff897
    2358:	6d616700 	stclvs	7, cr6, [r1, #-0]
    235c:	766f5f65 	strbtvc	r5, [pc], -r5, ror #30
    2360:	775f7265 	ldrbvc	r7, [pc, -r5, ror #4]
    2364:	68637469 	stmdavs	r3!, {r0, r3, r5, r6, sl, ip, sp, lr}^
    2368:	61724731 	cmnvs	r2, r1, lsr r7
    236c:	65740079 	ldrbvs	r0, [r4, #-121]!	; 0xffffff87
    2370:	6167706d 	cmnvs	r7, sp, rrx
    2374:	6f5f656d 	svcvs	0x005f656d
    2378:	5f726576 	svcpl	0x00726576
    237c:	63746977 	cmnvs	r4, #1949696	; 0x1dc000
    2380:	61724768 	cmnvs	r2, r8, ror #14
    2384:	65740079 	ldrbvs	r0, [r4, #-121]!	; 0xffffff87
    2388:	6167706d 	cmnvs	r7, sp, rrx
    238c:	6f5f656d 	svcvs	0x005f656d
    2390:	5f726576 	svcpl	0x00726576
    2394:	63746977 	cmnvs	r4, #1949696	; 0x1dc000
    2398:	6c423668 	mcrrvs	6, 6, r3, r2, cr8
    239c:	006b6361 	rsbeq	r6, fp, r1, ror #6
    23a0:	706d6574 	rsbvc	r6, sp, r4, ror r5
    23a4:	656d6167 	strbvs	r6, [sp, #-359]!	; 0xfffffe99
    23a8:	65766f5f 	ldrbvs	r6, [r6, #-3935]!	; 0xfffff0a1
    23ac:	69775f72 	ldmdbvs	r7!, {r1, r4, r5, r6, r8, r9, sl, fp, ip, lr}^
    23b0:	36686374 			; <UNDEFINED> instruction: 0x36686374
    23b4:	6867694c 	stmdavs	r7!, {r2, r3, r6, r8, fp, sp, lr}^
    23b8:	61670074 	smcvs	28676	; 0x7004
    23bc:	6f5f656d 	svcvs	0x005f656d
    23c0:	5f726576 	svcpl	0x00726576
    23c4:	63746977 	cmnvs	r4, #1949696	; 0x1dc000
    23c8:	675f3468 	ldrbvs	r3, [pc, -r8, ror #8]
    23cc:	5f796172 	svcpl	0x00796172
    23d0:	73746962 	cmnvc	r4, #1605632	; 0x188000
    23d4:	6d657400 	cfstrdvs	mvd7, [r5, #-0]
    23d8:	6d616770 	stclvs	7, cr6, [r1, #-448]!	; 0xfffffe40
    23dc:	766f5f65 	strbtvc	r5, [pc], -r5, ror #30
    23e0:	775f7265 	ldrbvc	r7, [pc, -r5, ror #4]
    23e4:	68637469 	stmdavs	r3!, {r0, r3, r5, r6, sl, ip, sp, lr}^
    23e8:	67694c33 			; <UNDEFINED> instruction: 0x67694c33
    23ec:	67007468 	strvs	r7, [r0, -r8, ror #8]
    23f0:	5f656d61 	svcpl	0x00656d61
    23f4:	7265766f 	rsbvc	r7, r5, #116391936	; 0x6f00000
    23f8:	7469775f 	strbtvc	r7, [r9], #-1887	; 0xfffff8a1
    23fc:	49336863 	ldmdbmi	r3!, {r0, r1, r5, r6, fp, sp, lr}
    2400:	6567616d 	strbvs	r6, [r7, #-365]!	; 0xfffffe93
    2404:	6d616700 	stclvs	7, cr6, [r1, #-0]
    2408:	766f5f65 	strbtvc	r5, [pc], -r5, ror #30
    240c:	775f7265 	ldrbvc	r7, [pc, -r5, ror #4]
    2410:	68637469 	stmdavs	r3!, {r0, r3, r5, r6, sl, ip, sp, lr}^
    2414:	006a624f 	rsbeq	r6, sl, pc, asr #4
    2418:	706d6574 	rsbvc	r6, sp, r4, ror r5
    241c:	656d6167 	strbvs	r6, [sp, #-359]!	; 0xfffffe99
    2420:	65766f5f 	ldrbvs	r6, [r6, #-3935]!	; 0xfffff0a1
    2424:	69775f72 	ldmdbvs	r7!, {r1, r4, r5, r6, r8, r9, sl, fp, ip, lr}^
    2428:	33686374 	cmncc	r8, #116, 6	; 0xd0000001
    242c:	79617247 	stmdbvc	r1!, {r0, r1, r2, r6, r9, ip, sp, lr}^
    2430:	6d616700 	stclvs	7, cr6, [r1, #-0]
    2434:	766f5f65 	strbtvc	r5, [pc], -r5, ror #30
    2438:	775f7265 	ldrbvc	r7, [pc, -r5, ror #4]
    243c:	68637469 	stmdavs	r3!, {r0, r3, r5, r6, sl, ip, sp, lr}^
    2440:	67616d49 	strbvs	r6, [r1, -r9, asr #26]!
    2444:	74007365 	strvc	r7, [r0], #-869	; 0xfffffc9b
    2448:	67706d65 	ldrbvs	r6, [r0, -r5, ror #26]!
    244c:	5f656d61 	svcpl	0x00656d61
    2450:	7265766f 	rsbvc	r7, r5, #116391936	; 0x6f00000
    2454:	7469775f 	strbtvc	r7, [r9], #-1887	; 0xfffff8a1
    2458:	47366863 	ldrmi	r6, [r6, -r3, ror #16]!
    245c:	00796172 	rsbseq	r6, r9, r2, ror r1
    2460:	706d6574 	rsbvc	r6, sp, r4, ror r5
    2464:	656d6167 	strbvs	r6, [sp, #-359]!	; 0xfffffe99
    2468:	65766f5f 	ldrbvs	r6, [r6, #-3935]!	; 0xfffff0a1
    246c:	69775f72 	ldmdbvs	r7!, {r1, r4, r5, r6, r8, r9, sl, fp, ip, lr}^
    2470:	33686374 	cmncc	r8, #116, 6	; 0xd0000001
    2474:	63616c42 	cmnvs	r1, #16896	; 0x4200
    2478:	6167006b 	cmnvs	r7, fp, rrx
    247c:	6f5f656d 	svcvs	0x005f656d
    2480:	5f726576 	svcpl	0x00726576
    2484:	63746977 	cmnvs	r4, #1949696	; 0x1dc000
    2488:	675f3368 	ldrbvs	r3, [pc, -r8, ror #6]
    248c:	5f796172 	svcpl	0x00796172
    2490:	73746962 	cmnvc	r4, #1605632	; 0x188000
    2494:	6d657400 	cfstrdvs	mvd7, [r5, #-0]
    2498:	6d616770 	stclvs	7, cr6, [r1, #-448]!	; 0xfffffe40
    249c:	766f5f65 	strbtvc	r5, [pc], -r5, ror #30
    24a0:	775f7265 	ldrbvc	r7, [pc, -r5, ror #4]
    24a4:	68637469 	stmdavs	r3!, {r0, r3, r5, r6, sl, ip, sp, lr}^
    24a8:	616c4232 	cmnvs	ip, r2, lsr r2
    24ac:	Address 0x000024ac is out of bounds.


Disassembly of section .comment:

00000000 <.comment>:
   0:	3a434347 	bcc	10d0d24 <startup-0x1ef2f2dc>
   4:	4e472820 	cdpmi	8, 4, cr2, cr7, cr0, {1}
   8:	6f542055 	svcvs	0x00542055
   c:	20736c6f 	rsbscs	r6, r3, pc, ror #24
  10:	20726f66 	rsbscs	r6, r2, r6, ror #30
  14:	204d5241 	subcs	r5, sp, r1, asr #4
  18:	65626d45 	strbvs	r6, [r2, #-3397]!	; 0xfffff2bb
  1c:	64656464 	strbtvs	r6, [r5], #-1124	; 0xfffffb9c
  20:	6f725020 	svcvs	0x00725020
  24:	73736563 	cmnvc	r3, #415236096	; 0x18c00000
  28:	2073726f 	rsbscs	r7, r3, pc, ror #4
  2c:	30322d36 	eorscc	r2, r2, r6, lsr sp
  30:	712d3731 			; <UNDEFINED> instruction: 0x712d3731
  34:	70752d31 	rsbsvc	r2, r5, r1, lsr sp
  38:	65746164 	ldrbvs	r6, [r4, #-356]!	; 0xfffffe9c
  3c:	2e362029 	cdpcs	0, 3, cr2, cr6, cr9, {1}
  40:	20312e33 	eorscs	r2, r1, r3, lsr lr
  44:	37313032 			; <UNDEFINED> instruction: 0x37313032
  48:	35313230 	ldrcc	r3, [r1, #-560]!	; 0xfffffdd0
  4c:	65722820 	ldrbvs	r2, [r2, #-2080]!	; 0xfffff7e0
  50:	7361656c 	cmnvc	r1, #108, 10	; 0x1b000000
  54:	5b202965 	blpl	80a5f0 <startup-0x1f7f5a10>
  58:	2f4d5241 	svccs	0x004d5241
  5c:	65626d65 	strbvs	r6, [r2, #-3429]!	; 0xfffff29b
  60:	64656464 	strbtvs	r6, [r5], #-1124	; 0xfffffb9c
  64:	622d362d 	eorvs	r3, sp, #47185920	; 0x2d00000
  68:	636e6172 	cmnvs	lr, #-2147483620	; 0x8000001c
  6c:	65722068 	ldrbvs	r2, [r2, #-104]!	; 0xffffff98
  70:	69736976 	ldmdbvs	r3!, {r1, r2, r4, r5, r6, r8, fp, sp, lr}^
  74:	32206e6f 	eorcc	r6, r0, #1776	; 0x6f0
  78:	31353534 	teqcc	r5, r4, lsr r5
  7c:	Address 0x0000007c is out of bounds.


Disassembly of section .ARM.attributes:

00000000 <.ARM.attributes>:
   0:	00002b41 	andeq	r2, r0, r1, asr #22
   4:	61656100 	cmnvs	r5, r0, lsl #2
   8:	01006962 	tsteq	r0, r2, ror #18
   c:	00000021 	andeq	r0, r0, r1, lsr #32
  10:	2d533605 	ldclcs	6, cr3, [r3, #-20]	; 0xffffffec
  14:	0c06004d 	stceq	0, cr0, [r6], {77}	; 0x4d
  18:	01094d07 	tsteq	r9, r7, lsl #26
  1c:	01140412 	tsteq	r4, r2, lsl r4
  20:	03170115 	tsteq	r7, #1073741829	; 0x40000005
  24:	01190118 	tsteq	r9, r8, lsl r1
  28:	061e011a 			; <UNDEFINED> instruction: 0x061e011a

Disassembly of section .debug_frame:

00000000 <.debug_frame>:
   0:	0000000c 	andeq	r0, r0, ip
   4:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
   8:	7c020001 	stcvc	0, cr0, [r2], {1}
   c:	000d0c0e 	andeq	r0, sp, lr, lsl #24
  10:	0000000c 	andeq	r0, r0, ip
  14:	00000000 	andeq	r0, r0, r0
  18:	20000000 	andcs	r0, r0, r0
  1c:	0000000c 	andeq	r0, r0, ip
  20:	00000018 	andeq	r0, r0, r8, lsl r0
  24:	00000000 	andeq	r0, r0, r0
  28:	20000010 	andcs	r0, r0, r0, lsl r0
  2c:	00000024 	andeq	r0, r0, r4, lsr #32
  30:	40080e41 	andmi	r0, r8, r1, asr #28
  34:	8e400287 	cdphi	2, 4, cr0, cr0, cr7, {4}
  38:	070d4101 	streq	r4, [sp, -r1, lsl #2]
  3c:	0000001c 	andeq	r0, r0, ip, lsl r0
  40:	00000000 	andeq	r0, r0, r0
  44:	20000034 	andcs	r0, r0, r4, lsr r0
  48:	000001c8 	andeq	r0, r0, r8, asr #3
  4c:	40080e41 	andmi	r0, r8, r1, asr #28
  50:	8e400287 	cdphi	2, 4, cr0, cr0, cr7, {4}
  54:	300e4101 	andcc	r4, lr, r1, lsl #2
  58:	00070d41 	andeq	r0, r7, r1, asr #26
  5c:	00000020 	andeq	r0, r0, r0, lsr #32
  60:	00000000 	andeq	r0, r0, r0
  64:	200001fc 	strdcs	r0, [r0], -ip
  68:	000018b4 			; <UNDEFINED> instruction: 0x000018b4
  6c:	400c0e41 	andmi	r0, ip, r1, asr #28
  70:	87400384 	strbhi	r0, [r0, -r4, lsl #7]
  74:	018e4002 	orreq	r4, lr, r2
  78:	0aa80e42 	beq	fea03988 <firstTime.4104+0xde9ef51c>
  7c:	00070d41 	andeq	r0, r7, r1, asr #26
  80:	0000001c 	andeq	r0, r0, ip, lsl r0
  84:	00000000 	andeq	r0, r0, r0
  88:	20001ab0 			; <UNDEFINED> instruction: 0x20001ab0
  8c:	0000001e 	andeq	r0, r0, lr, lsl r0
  90:	40080e41 	andmi	r0, r8, r1, asr #28
  94:	8e400287 	cdphi	2, 4, cr0, cr0, cr7, {4}
  98:	100e4101 	andne	r4, lr, r1, lsl #2
  9c:	00070d41 	andeq	r0, r7, r1, asr #26
  a0:	0000000c 	andeq	r0, r0, ip
  a4:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
  a8:	7c020001 	stcvc	0, cr0, [r2], {1}
  ac:	000d0c0e 	andeq	r0, sp, lr, lsl #24
  b0:	0000001c 	andeq	r0, r0, ip, lsl r0
  b4:	000000a0 	andeq	r0, r0, r0, lsr #1
  b8:	20001ad0 	ldrdcs	r1, [r0], -r0
  bc:	00000010 	andeq	r0, r0, r0, lsl r0
  c0:	40080e41 	andmi	r0, r8, r1, asr #28
  c4:	8e400287 	cdphi	2, 4, cr0, cr0, cr7, {4}
  c8:	100e4101 	andne	r4, lr, r1, lsl #2
  cc:	00070d41 	andeq	r0, r7, r1, asr #26
  d0:	0000001c 	andeq	r0, r0, ip, lsl r0
  d4:	000000a0 	andeq	r0, r0, r0, lsr #1
  d8:	20001ae0 	andcs	r1, r0, r0, ror #21
  dc:	00000046 	andeq	r0, r0, r6, asr #32
  e0:	40080e41 	andmi	r0, r8, r1, asr #28
  e4:	8e400287 	cdphi	2, 4, cr0, cr0, cr7, {4}
  e8:	100e4101 	andne	r4, lr, r1, lsl #2
  ec:	00070d41 	andeq	r0, r7, r1, asr #26
  f0:	0000000c 	andeq	r0, r0, ip
  f4:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
  f8:	7c020001 	stcvc	0, cr0, [r2], {1}
  fc:	000d0c0e 	andeq	r0, sp, lr, lsl #24
 100:	0000001c 	andeq	r0, r0, ip, lsl r0
 104:	000000f0 	strdeq	r0, [r0], -r0	; <UNPREDICTABLE>
 108:	20001b28 	andcs	r1, r0, r8, lsr #22
 10c:	00000184 	andeq	r0, r0, r4, lsl #3
 110:	40080e41 	andmi	r0, r8, r1, asr #28
 114:	8e400287 	cdphi	2, 4, cr0, cr0, cr7, {4}
 118:	380e4101 	stmdacc	lr, {r0, r8, lr}
 11c:	00070d41 	andeq	r0, r7, r1, asr #26
 120:	00000020 	andeq	r0, r0, r0, lsr #32
 124:	000000f0 	strdeq	r0, [r0], -r0	; <UNPREDICTABLE>
 128:	20001cac 	andcs	r1, r0, ip, lsr #25
 12c:	00000124 	andeq	r0, r0, r4, lsr #2
 130:	400c0e41 	andmi	r0, ip, r1, asr #28
 134:	87400384 	strbhi	r0, [r0, -r4, lsl #7]
 138:	018e4002 	orreq	r4, lr, r2
 13c:	41180e41 	tstmi	r8, r1, asr #28
 140:	0000070d 	andeq	r0, r0, sp, lsl #14
 144:	0000000c 	andeq	r0, r0, ip
 148:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
 14c:	7c020001 	stcvc	0, cr0, [r2], {1}
 150:	000d0c0e 	andeq	r0, sp, lr, lsl #24
 154:	00000018 	andeq	r0, r0, r8, lsl r0
 158:	00000144 	andeq	r0, r0, r4, asr #2
 15c:	20001dd0 	ldrdcs	r1, [r0], -r0
 160:	0000003c 	andeq	r0, r0, ip, lsr r0
 164:	40080e41 	andmi	r0, r8, r1, asr #28
 168:	8e400287 	cdphi	2, 4, cr0, cr0, cr7, {4}
 16c:	070d4101 	streq	r4, [sp, -r1, lsl #2]
 170:	0000001c 	andeq	r0, r0, ip, lsl r0
 174:	00000144 	andeq	r0, r0, r4, asr #2
 178:	20001e0c 	andcs	r1, r0, ip, lsl #28
 17c:	00000204 	andeq	r0, r0, r4, lsl #4
 180:	40080e41 	andmi	r0, r8, r1, asr #28
 184:	8e400287 	cdphi	2, 4, cr0, cr0, cr7, {4}
 188:	100e4101 	andne	r4, lr, r1, lsl #2
 18c:	00070d41 	andeq	r0, r7, r1, asr #26
 190:	0000000c 	andeq	r0, r0, ip
 194:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
 198:	7c020001 	stcvc	0, cr0, [r2], {1}
 19c:	000d0c0e 	andeq	r0, sp, lr, lsl #24
 1a0:	0000001c 	andeq	r0, r0, ip, lsl r0
 1a4:	00000190 	muleq	r0, r0, r1
 1a8:	20002010 	andcs	r2, r0, r0, lsl r0
 1ac:	0000020c 	andeq	r0, r0, ip, lsl #4
 1b0:	40080e41 	andmi	r0, r8, r1, asr #28
 1b4:	8e400287 	cdphi	2, 4, cr0, cr0, cr7, {4}
 1b8:	480e4101 	stmdami	lr, {r0, r8, lr}
 1bc:	00070d41 	andeq	r0, r7, r1, asr #26
 1c0:	00000020 	andeq	r0, r0, r0, lsr #32
 1c4:	00000190 	muleq	r0, r0, r1
 1c8:	2000221c 	andcs	r2, r0, ip, lsl r2
 1cc:	00000158 	andeq	r0, r0, r8, asr r1
 1d0:	400c0e41 	andmi	r0, ip, r1, asr #28
 1d4:	87400384 	strbhi	r0, [r0, -r4, lsl #7]
 1d8:	018e4002 	orreq	r4, lr, r2
 1dc:	41180e41 	tstmi	r8, r1, asr #28
 1e0:	0000070d 	andeq	r0, r0, sp, lsl #14
 1e4:	0000000c 	andeq	r0, r0, ip
 1e8:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
 1ec:	7c020001 	stcvc	0, cr0, [r2], {1}
 1f0:	000d0c0e 	andeq	r0, sp, lr, lsl #24
 1f4:	0000001c 	andeq	r0, r0, ip, lsl r0
 1f8:	000001e4 	andeq	r0, r0, r4, ror #3
 1fc:	20002374 	andcs	r2, r0, r4, ror r3
 200:	00000140 	andeq	r0, r0, r0, asr #2
 204:	40080e41 	andmi	r0, r8, r1, asr #28
 208:	8e400287 	cdphi	2, 4, cr0, cr0, cr7, {4}
 20c:	300e4101 	andcc	r4, lr, r1, lsl #2
 210:	00070d41 	andeq	r0, r7, r1, asr #26
 214:	00000020 	andeq	r0, r0, r0, lsr #32
 218:	000001e4 	andeq	r0, r0, r4, ror #3
 21c:	200024b4 			; <UNDEFINED> instruction: 0x200024b4
 220:	000000f8 	strdeq	r0, [r0], -r8
 224:	400c0e41 	andmi	r0, ip, r1, asr #28
 228:	87400384 	strbhi	r0, [r0, -r4, lsl #7]
 22c:	018e4002 	orreq	r4, lr, r2
 230:	41180e41 	tstmi	r8, r1, asr #28
 234:	0000070d 	andeq	r0, r0, sp, lsl #14
 238:	0000000c 	andeq	r0, r0, ip
 23c:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
 240:	7c020001 	stcvc	0, cr0, [r2], {1}
 244:	000d0c0e 	andeq	r0, sp, lr, lsl #24
 248:	0000001c 	andeq	r0, r0, ip, lsl r0
 24c:	00000238 	andeq	r0, r0, r8, lsr r2
 250:	200025ac 	andcs	r2, r0, ip, lsr #11
 254:	00000140 	andeq	r0, r0, r0, asr #2
 258:	40080e41 	andmi	r0, r8, r1, asr #28
 25c:	8e400287 	cdphi	2, 4, cr0, cr0, cr7, {4}
 260:	300e4101 	andcc	r4, lr, r1, lsl #2
 264:	00070d41 	andeq	r0, r7, r1, asr #26
 268:	00000020 	andeq	r0, r0, r0, lsr #32
 26c:	00000238 	andeq	r0, r0, r8, lsr r2
 270:	200026ec 	andcs	r2, r0, ip, ror #13
 274:	000000f8 	strdeq	r0, [r0], -r8
 278:	400c0e41 	andmi	r0, ip, r1, asr #28
 27c:	87400384 	strbhi	r0, [r0, -r4, lsl #7]
 280:	018e4002 	orreq	r4, lr, r2
 284:	41180e41 	tstmi	r8, r1, asr #28
 288:	0000070d 	andeq	r0, r0, sp, lsl #14
 28c:	0000001c 	andeq	r0, r0, ip, lsl r0
 290:	00000238 	andeq	r0, r0, r8, lsr r2
 294:	200027e4 	andcs	r2, r0, r4, ror #15
 298:	00000028 	andeq	r0, r0, r8, lsr #32
 29c:	40080e41 	andmi	r0, r8, r1, asr #28
 2a0:	8e400287 	cdphi	2, 4, cr0, cr0, cr7, {4}
 2a4:	100e4101 	andne	r4, lr, r1, lsl #2
 2a8:	00070d41 	andeq	r0, r7, r1, asr #26
 2ac:	0000001c 	andeq	r0, r0, ip, lsl r0
 2b0:	00000238 	andeq	r0, r0, r8, lsr r2
 2b4:	2000280c 	andcs	r2, r0, ip, lsl #16
 2b8:	00000110 	andeq	r0, r0, r0, lsl r1
 2bc:	40080e41 	andmi	r0, r8, r1, asr #28
 2c0:	8e400287 	cdphi	2, 4, cr0, cr0, cr7, {4}
 2c4:	100e4101 	andne	r4, lr, r1, lsl #2
 2c8:	00070d41 	andeq	r0, r7, r1, asr #26
 2cc:	0000000c 	andeq	r0, r0, ip
 2d0:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
 2d4:	7c020001 	stcvc	0, cr0, [r2], {1}
 2d8:	000d0c0e 	andeq	r0, sp, lr, lsl #24
 2dc:	0000001c 	andeq	r0, r0, ip, lsl r0
 2e0:	000002cc 	andeq	r0, r0, ip, asr #5
 2e4:	2000291c 	andcs	r2, r0, ip, lsl r9
 2e8:	000001a8 	andeq	r0, r0, r8, lsr #3
 2ec:	40080e41 	andmi	r0, r8, r1, asr #28
 2f0:	8e400287 	cdphi	2, 4, cr0, cr0, cr7, {4}
 2f4:	380e4101 	stmdacc	lr, {r0, r8, lr}
 2f8:	00070d41 	andeq	r0, r7, r1, asr #26
 2fc:	00000020 	andeq	r0, r0, r0, lsr #32
 300:	000002cc 	andeq	r0, r0, ip, asr #5
 304:	20002ac4 	andcs	r2, r0, r4, asr #21
 308:	00000104 	andeq	r0, r0, r4, lsl #2
 30c:	400c0e41 	andmi	r0, ip, r1, asr #28
 310:	87400384 	strbhi	r0, [r0, -r4, lsl #7]
 314:	018e4002 	orreq	r4, lr, r2
 318:	41180e41 	tstmi	r8, r1, asr #28
 31c:	0000070d 	andeq	r0, r0, sp, lsl #14
 320:	0000000c 	andeq	r0, r0, ip
 324:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
 328:	7c020001 	stcvc	0, cr0, [r2], {1}
 32c:	000d0c0e 	andeq	r0, sp, lr, lsl #24
 330:	0000001c 	andeq	r0, r0, ip, lsl r0
 334:	00000320 	andeq	r0, r0, r0, lsr #6
 338:	20002bc8 	andcs	r2, r0, r8, asr #23
 33c:	00000274 	andeq	r0, r0, r4, ror r2
 340:	40080e41 	andmi	r0, r8, r1, asr #28
 344:	8e400287 	cdphi	2, 4, cr0, cr0, cr7, {4}
 348:	500e4101 	andpl	r4, lr, r1, lsl #2
 34c:	00070d41 	andeq	r0, r7, r1, asr #26
 350:	00000020 	andeq	r0, r0, r0, lsr #32
 354:	00000320 	andeq	r0, r0, r0, lsr #6
 358:	20002e3c 	andcs	r2, r0, ip, lsr lr
 35c:	000002b8 			; <UNDEFINED> instruction: 0x000002b8
 360:	400c0e41 	andmi	r0, ip, r1, asr #28
 364:	87400384 	strbhi	r0, [r0, -r4, lsl #7]
 368:	018e4002 	orreq	r4, lr, r2
 36c:	41180e41 	tstmi	r8, r1, asr #28
 370:	0000070d 	andeq	r0, r0, sp, lsl #14
 374:	0000000c 	andeq	r0, r0, ip
 378:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
 37c:	7c020001 	stcvc	0, cr0, [r2], {1}
 380:	000d0c0e 	andeq	r0, sp, lr, lsl #24
 384:	00000018 	andeq	r0, r0, r8, lsl r0
 388:	00000374 	andeq	r0, r0, r4, ror r3
 38c:	200030f4 	strdcs	r3, [r0], -r4
 390:	00000044 	andeq	r0, r0, r4, asr #32
 394:	40080e41 	andmi	r0, r8, r1, asr #28
 398:	8e400287 	cdphi	2, 4, cr0, cr0, cr7, {4}
 39c:	070d4101 	streq	r4, [sp, -r1, lsl #2]
 3a0:	00000018 	andeq	r0, r0, r8, lsl r0
 3a4:	00000374 	andeq	r0, r0, r4, ror r3
 3a8:	20003138 	andcs	r3, r0, r8, lsr r1
 3ac:	00000044 	andeq	r0, r0, r4, asr #32
 3b0:	40080e41 	andmi	r0, r8, r1, asr #28
 3b4:	8e400287 	cdphi	2, 4, cr0, cr0, cr7, {4}
 3b8:	070d4101 	streq	r4, [sp, -r1, lsl #2]
 3bc:	0000001c 	andeq	r0, r0, ip, lsl r0
 3c0:	00000374 	andeq	r0, r0, r4, ror r3
 3c4:	2000317c 	andcs	r3, r0, ip, ror r1
 3c8:	0000002c 	andeq	r0, r0, ip, lsr #32
 3cc:	40080e41 	andmi	r0, r8, r1, asr #28
 3d0:	8e400287 	cdphi	2, 4, cr0, cr0, cr7, {4}
 3d4:	100e4101 	andne	r4, lr, r1, lsl #2
 3d8:	00070d41 	andeq	r0, r7, r1, asr #26
 3dc:	0000001c 	andeq	r0, r0, ip, lsl r0
 3e0:	00000374 	andeq	r0, r0, r4, ror r3
 3e4:	200031a8 	andcs	r3, r0, r8, lsr #3
 3e8:	00000026 	andeq	r0, r0, r6, lsr #32
 3ec:	40080e41 	andmi	r0, r8, r1, asr #28
 3f0:	8e400287 	cdphi	2, 4, cr0, cr0, cr7, {4}
 3f4:	100e4101 	andne	r4, lr, r1, lsl #2
 3f8:	00070d41 	andeq	r0, r7, r1, asr #26
 3fc:	0000001c 	andeq	r0, r0, ip, lsl r0
 400:	00000374 	andeq	r0, r0, r4, ror r3
 404:	200031ce 	andcs	r3, r0, lr, asr #3
 408:	00000032 	andeq	r0, r0, r2, lsr r0
 40c:	40080e41 	andmi	r0, r8, r1, asr #28
 410:	8e400287 	cdphi	2, 4, cr0, cr0, cr7, {4}
 414:	180e4101 	stmdane	lr, {r0, r8, lr}
 418:	00070d41 	andeq	r0, r7, r1, asr #26
 41c:	00000018 	andeq	r0, r0, r8, lsl r0
 420:	00000374 	andeq	r0, r0, r4, ror r3
 424:	20003200 	andcs	r3, r0, r0, lsl #4
 428:	00000018 	andeq	r0, r0, r8, lsl r0
 42c:	40080e41 	andmi	r0, r8, r1, asr #28
 430:	8e400287 	cdphi	2, 4, cr0, cr0, cr7, {4}
 434:	070d4101 	streq	r4, [sp, -r1, lsl #2]
 438:	00000018 	andeq	r0, r0, r8, lsl r0
 43c:	00000374 	andeq	r0, r0, r4, ror r3
 440:	20003218 	andcs	r3, r0, r8, lsl r2
 444:	00000030 	andeq	r0, r0, r0, lsr r0
 448:	40080e41 	andmi	r0, r8, r1, asr #28
 44c:	8e400287 	cdphi	2, 4, cr0, cr0, cr7, {4}
 450:	070d4101 	streq	r4, [sp, -r1, lsl #2]
 454:	0000001c 	andeq	r0, r0, ip, lsl r0
 458:	00000374 	andeq	r0, r0, r4, ror r3
 45c:	20003248 	andcs	r3, r0, r8, asr #4
 460:	00000050 	andeq	r0, r0, r0, asr r0
 464:	40080e41 	andmi	r0, r8, r1, asr #28
 468:	8e400287 	cdphi	2, 4, cr0, cr0, cr7, {4}
 46c:	180e4101 	stmdane	lr, {r0, r8, lr}
 470:	00070d41 	andeq	r0, r7, r1, asr #26
 474:	0000001c 	andeq	r0, r0, ip, lsl r0
 478:	00000374 	andeq	r0, r0, r4, ror r3
 47c:	20003298 	mulcs	r0, r8, r2
 480:	00000058 	andeq	r0, r0, r8, asr r0
 484:	40080e41 	andmi	r0, r8, r1, asr #28
 488:	8e400287 	cdphi	2, 4, cr0, cr0, cr7, {4}
 48c:	180e4101 	stmdane	lr, {r0, r8, lr}
 490:	00070d41 	andeq	r0, r7, r1, asr #26
 494:	0000001c 	andeq	r0, r0, ip, lsl r0
 498:	00000374 	andeq	r0, r0, r4, ror r3
 49c:	200032f0 	strdcs	r3, [r0], -r0
 4a0:	00000066 	andeq	r0, r0, r6, rrx
 4a4:	40080e41 	andmi	r0, r8, r1, asr #28
 4a8:	8e400287 	cdphi	2, 4, cr0, cr0, cr7, {4}
 4ac:	100e4101 	andne	r4, lr, r1, lsl #2
 4b0:	00070d41 	andeq	r0, r7, r1, asr #26
 4b4:	0000001c 	andeq	r0, r0, ip, lsl r0
 4b8:	00000374 	andeq	r0, r0, r4, ror r3
 4bc:	20003356 	andcs	r3, r0, r6, asr r3
 4c0:	0000006e 	andeq	r0, r0, lr, rrx
 4c4:	40080e41 	andmi	r0, r8, r1, asr #28
 4c8:	8e400287 	cdphi	2, 4, cr0, cr0, cr7, {4}
 4cc:	100e4101 	andne	r4, lr, r1, lsl #2
 4d0:	00070d41 	andeq	r0, r7, r1, asr #26
 4d4:	0000001c 	andeq	r0, r0, ip, lsl r0
 4d8:	00000374 	andeq	r0, r0, r4, ror r3
 4dc:	200033c4 	andcs	r3, r0, r4, asr #7
 4e0:	00000094 	muleq	r0, r4, r0
 4e4:	40080e41 	andmi	r0, r8, r1, asr #28
 4e8:	8e400287 	cdphi	2, 4, cr0, cr0, cr7, {4}
 4ec:	180e4101 	stmdane	lr, {r0, r8, lr}
 4f0:	00070d41 	andeq	r0, r7, r1, asr #26
 4f4:	0000001c 	andeq	r0, r0, ip, lsl r0
 4f8:	00000374 	andeq	r0, r0, r4, ror r3
 4fc:	20003458 	andcs	r3, r0, r8, asr r4
 500:	0000002a 	andeq	r0, r0, sl, lsr #32
 504:	40080e41 	andmi	r0, r8, r1, asr #28
 508:	8e400287 	cdphi	2, 4, cr0, cr0, cr7, {4}
 50c:	100e4101 	andne	r4, lr, r1, lsl #2
 510:	00070d41 	andeq	r0, r7, r1, asr #26
 514:	0000001c 	andeq	r0, r0, ip, lsl r0
 518:	00000374 	andeq	r0, r0, r4, ror r3
 51c:	20003482 	andcs	r3, r0, r2, lsl #9
 520:	0000007e 	andeq	r0, r0, lr, ror r0
 524:	40080e41 	andmi	r0, r8, r1, asr #28
 528:	8e400287 	cdphi	2, 4, cr0, cr0, cr7, {4}
 52c:	100e4101 	andne	r4, lr, r1, lsl #2
 530:	00070d41 	andeq	r0, r7, r1, asr #26
 534:	0000001c 	andeq	r0, r0, ip, lsl r0
 538:	00000374 	andeq	r0, r0, r4, ror r3
 53c:	20003500 	andcs	r3, r0, r0, lsl #10
 540:	00000046 	andeq	r0, r0, r6, asr #32
 544:	40080e41 	andmi	r0, r8, r1, asr #28
 548:	8e400287 	cdphi	2, 4, cr0, cr0, cr7, {4}
 54c:	100e4101 	andne	r4, lr, r1, lsl #2
 550:	00070d41 	andeq	r0, r7, r1, asr #26
 554:	0000001c 	andeq	r0, r0, ip, lsl r0
 558:	00000374 	andeq	r0, r0, r4, ror r3
 55c:	20003546 	andcs	r3, r0, r6, asr #10
 560:	00000046 	andeq	r0, r0, r6, asr #32
 564:	40080e41 	andmi	r0, r8, r1, asr #28
 568:	8e400287 	cdphi	2, 4, cr0, cr0, cr7, {4}
 56c:	100e4101 	andne	r4, lr, r1, lsl #2
 570:	00070d41 	andeq	r0, r7, r1, asr #26
 574:	00000018 	andeq	r0, r0, r8, lsl r0
 578:	00000374 	andeq	r0, r0, r4, ror r3
 57c:	2000358c 	andcs	r3, r0, ip, lsl #11
 580:	0000006e 	andeq	r0, r0, lr, rrx
 584:	40080e41 	andmi	r0, r8, r1, asr #28
 588:	8e400287 	cdphi	2, 4, cr0, cr0, cr7, {4}
 58c:	070d4101 	streq	r4, [sp, -r1, lsl #2]
 590:	0000001c 	andeq	r0, r0, ip, lsl r0
 594:	00000374 	andeq	r0, r0, r4, ror r3
 598:	200035fa 	strdcs	r3, [r0], -sl
 59c:	00000066 	andeq	r0, r0, r6, rrx
 5a0:	40080e41 	andmi	r0, r8, r1, asr #28
 5a4:	8e400287 	cdphi	2, 4, cr0, cr0, cr7, {4}
 5a8:	100e4101 	andne	r4, lr, r1, lsl #2
 5ac:	00070d41 	andeq	r0, r7, r1, asr #26
 5b0:	0000001c 	andeq	r0, r0, ip, lsl r0
 5b4:	00000374 	andeq	r0, r0, r4, ror r3
 5b8:	20003660 	andcs	r3, r0, r0, ror #12
 5bc:	00000180 	andeq	r0, r0, r0, lsl #3
 5c0:	40080e41 	andmi	r0, r8, r1, asr #28
 5c4:	8e400287 	cdphi	2, 4, cr0, cr0, cr7, {4}
 5c8:	200e4101 	andcs	r4, lr, r1, lsl #2
 5cc:	00070d41 	andeq	r0, r7, r1, asr #26
 5d0:	0000001c 	andeq	r0, r0, ip, lsl r0
 5d4:	00000374 	andeq	r0, r0, r4, ror r3
 5d8:	200037e0 	andcs	r3, r0, r0, ror #15
 5dc:	0000004e 	andeq	r0, r0, lr, asr #32
 5e0:	40080e41 	andmi	r0, r8, r1, asr #28
 5e4:	8e400287 	cdphi	2, 4, cr0, cr0, cr7, {4}
 5e8:	180e4101 	stmdane	lr, {r0, r8, lr}
 5ec:	00070d41 	andeq	r0, r7, r1, asr #26
 5f0:	0000001c 	andeq	r0, r0, ip, lsl r0
 5f4:	00000374 	andeq	r0, r0, r4, ror r3
 5f8:	2000382e 	andcs	r3, r0, lr, lsr #16
 5fc:	0000019e 	muleq	r0, lr, r1
 600:	40080e41 	andmi	r0, r8, r1, asr #28
 604:	8e400287 	cdphi	2, 4, cr0, cr0, cr7, {4}
 608:	280e4101 	stmdacs	lr, {r0, r8, lr}
 60c:	00070d41 	andeq	r0, r7, r1, asr #26
 610:	0000001c 	andeq	r0, r0, ip, lsl r0
 614:	00000374 	andeq	r0, r0, r4, ror r3
 618:	200039cc 	andcs	r3, r0, ip, asr #19
 61c:	000000d6 	ldrdeq	r0, [r0], -r6
 620:	40080e41 	andmi	r0, r8, r1, asr #28
 624:	8e400287 	cdphi	2, 4, cr0, cr0, cr7, {4}
 628:	200e4101 	andcs	r4, lr, r1, lsl #2
 62c:	00070d41 	andeq	r0, r7, r1, asr #26
 630:	00000024 	andeq	r0, r0, r4, lsr #32
 634:	00000374 	andeq	r0, r0, r4, ror r3
 638:	20003aa2 	andcs	r3, r0, r2, lsr #21
 63c:	0000011a 	andeq	r0, r0, sl, lsl r1
 640:	40100e41 	andsmi	r0, r0, r1, asr #28
 644:	85400484 	strbhi	r0, [r0, #-1156]	; 0xfffffb7c
 648:	02874003 	addeq	r4, r7, #3
 64c:	41018e40 	tstmi	r1, r0, asr #28
 650:	0d41380e 	stcleq	8, cr3, [r1, #-56]	; 0xffffffc8
 654:	00000007 	andeq	r0, r0, r7
 658:	0000001c 	andeq	r0, r0, ip, lsl r0
 65c:	00000374 	andeq	r0, r0, r4, ror r3
 660:	20003bbc 			; <UNDEFINED> instruction: 0x20003bbc
 664:	00000052 	andeq	r0, r0, r2, asr r0
 668:	40080e41 	andmi	r0, r8, r1, asr #28
 66c:	8e400287 	cdphi	2, 4, cr0, cr0, cr7, {4}
 670:	200e4101 	andcs	r4, lr, r1, lsl #2
 674:	00070d41 	andeq	r0, r7, r1, asr #26
 678:	0000001c 	andeq	r0, r0, ip, lsl r0
 67c:	00000374 	andeq	r0, r0, r4, ror r3
 680:	20003c0e 	andcs	r3, r0, lr, lsl #24
 684:	00000052 	andeq	r0, r0, r2, asr r0
 688:	40080e41 	andmi	r0, r8, r1, asr #28
 68c:	8e400287 	cdphi	2, 4, cr0, cr0, cr7, {4}
 690:	200e4101 	andcs	r4, lr, r1, lsl #2
 694:	00070d41 	andeq	r0, r7, r1, asr #26
 698:	00000020 	andeq	r0, r0, r0, lsr #32
 69c:	00000374 	andeq	r0, r0, r4, ror r3
 6a0:	20003c60 	andcs	r3, r0, r0, ror #24
 6a4:	00000130 	andeq	r0, r0, r0, lsr r1
 6a8:	400c0e41 	andmi	r0, ip, r1, asr #28
 6ac:	87400384 	strbhi	r0, [r0, -r4, lsl #7]
 6b0:	018e4002 	orreq	r4, lr, r2
 6b4:	41280e41 			; <UNDEFINED> instruction: 0x41280e41
 6b8:	0000070d 	andeq	r0, r0, sp, lsl #14
 6bc:	0000001c 	andeq	r0, r0, ip, lsl r0
 6c0:	00000374 	andeq	r0, r0, r4, ror r3
 6c4:	20003d90 	mulcs	r0, r0, sp
 6c8:	00000108 	andeq	r0, r0, r8, lsl #2
 6cc:	40080e41 	andmi	r0, r8, r1, asr #28
 6d0:	8e400287 	cdphi	2, 4, cr0, cr0, cr7, {4}
 6d4:	100e4101 	andne	r4, lr, r1, lsl #2
 6d8:	00070d41 	andeq	r0, r7, r1, asr #26
 6dc:	0000001c 	andeq	r0, r0, ip, lsl r0
 6e0:	00000374 	andeq	r0, r0, r4, ror r3
 6e4:	20003e98 	mulcs	r0, r8, lr
 6e8:	00000082 	andeq	r0, r0, r2, lsl #1
 6ec:	40080e41 	andmi	r0, r8, r1, asr #28
 6f0:	8e400287 	cdphi	2, 4, cr0, cr0, cr7, {4}
 6f4:	200e4101 	andcs	r4, lr, r1, lsl #2
 6f8:	18070c41 	stmdane	r7, {r0, r6, sl, fp}
 6fc:	0000001c 	andeq	r0, r0, ip, lsl r0
 700:	00000374 	andeq	r0, r0, r4, ror r3
 704:	20003f1a 	andcs	r3, r0, sl, lsl pc
 708:	0000006a 	andeq	r0, r0, sl, rrx
 70c:	40080e41 	andmi	r0, r8, r1, asr #28
 710:	8e400287 	cdphi	2, 4, cr0, cr0, cr7, {4}
 714:	100e4101 	andne	r4, lr, r1, lsl #2
 718:	00070d41 	andeq	r0, r7, r1, asr #26
 71c:	0000000c 	andeq	r0, r0, ip
 720:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
 724:	7c020001 	stcvc	0, cr0, [r2], {1}
 728:	000d0c0e 	andeq	r0, sp, lr, lsl #24
 72c:	0000001c 	andeq	r0, r0, ip, lsl r0
 730:	0000071c 	andeq	r0, r0, ip, lsl r7
 734:	20003f84 	andcs	r3, r0, r4, lsl #31
 738:	00000028 	andeq	r0, r0, r8, lsr #32
 73c:	40080e41 	andmi	r0, r8, r1, asr #28
 740:	8e400287 	cdphi	2, 4, cr0, cr0, cr7, {4}
 744:	180e4101 	stmdane	lr, {r0, r8, lr}
 748:	00070d41 	andeq	r0, r7, r1, asr #26
 74c:	0000000c 	andeq	r0, r0, ip
 750:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
 754:	7c020001 	stcvc	0, cr0, [r2], {1}
 758:	000d0c0e 	andeq	r0, sp, lr, lsl #24
 75c:	0000001c 	andeq	r0, r0, ip, lsl r0
 760:	0000074c 	andeq	r0, r0, ip, asr #14
 764:	20003fac 	andcs	r3, r0, ip, lsr #31
 768:	00000028 	andeq	r0, r0, r8, lsr #32
 76c:	40080e41 	andmi	r0, r8, r1, asr #28
 770:	8e400287 	cdphi	2, 4, cr0, cr0, cr7, {4}
 774:	180e4101 	stmdane	lr, {r0, r8, lr}
 778:	00070d41 	andeq	r0, r7, r1, asr #26
 77c:	0000000c 	andeq	r0, r0, ip
 780:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
 784:	7c020001 	stcvc	0, cr0, [r2], {1}
 788:	000d0c0e 	andeq	r0, sp, lr, lsl #24
 78c:	00000018 	andeq	r0, r0, r8, lsl r0
 790:	0000077c 	andeq	r0, r0, ip, ror r7
 794:	20003fd4 	ldrdcs	r3, [r0], -r4
 798:	00000018 	andeq	r0, r0, r8, lsl r0
 79c:	40080e41 	andmi	r0, r8, r1, asr #28
 7a0:	8e400287 	cdphi	2, 4, cr0, cr0, cr7, {4}
 7a4:	070d4101 	streq	r4, [sp, -r1, lsl #2]
 7a8:	00000018 	andeq	r0, r0, r8, lsl r0
 7ac:	0000077c 	andeq	r0, r0, ip, ror r7
 7b0:	20003fec 	andcs	r3, r0, ip, ror #31
 7b4:	00000020 	andeq	r0, r0, r0, lsr #32
 7b8:	40080e41 	andmi	r0, r8, r1, asr #28
 7bc:	8e400287 	cdphi	2, 4, cr0, cr0, cr7, {4}
 7c0:	070d4101 	streq	r4, [sp, -r1, lsl #2]
 7c4:	00000020 	andeq	r0, r0, r0, lsr #32
 7c8:	0000077c 	andeq	r0, r0, ip, ror r7
 7cc:	2000400c 	andcs	r4, r0, ip
 7d0:	00000034 	andeq	r0, r0, r4, lsr r0
 7d4:	400c0e41 	andmi	r0, ip, r1, asr #28
 7d8:	87400384 	strbhi	r0, [r0, -r4, lsl #7]
 7dc:	018e4002 	orreq	r4, lr, r2
 7e0:	41200e41 			; <UNDEFINED> instruction: 0x41200e41
 7e4:	0000070d 	andeq	r0, r0, sp, lsl #14
 7e8:	0000000c 	andeq	r0, r0, ip
 7ec:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
 7f0:	7c020001 	stcvc	0, cr0, [r2], {1}
 7f4:	000d0c0e 	andeq	r0, sp, lr, lsl #24
 7f8:	0000001c 	andeq	r0, r0, ip, lsl r0
 7fc:	000007e8 	andeq	r0, r0, r8, ror #15
 800:	20004040 	andcs	r4, r0, r0, asr #32
 804:	00000044 	andeq	r0, r0, r4, asr #32
 808:	40080e41 	andmi	r0, r8, r1, asr #28
 80c:	8e400287 	cdphi	2, 4, cr0, cr0, cr7, {4}
 810:	180e4101 	stmdane	lr, {r0, r8, lr}
 814:	00070d41 	andeq	r0, r7, r1, asr #26
 818:	0000001c 	andeq	r0, r0, ip, lsl r0
 81c:	000007e8 	andeq	r0, r0, r8, ror #15
 820:	20004084 	andcs	r4, r0, r4, lsl #1
 824:	00000050 	andeq	r0, r0, r0, asr r0
 828:	40080e41 	andmi	r0, r8, r1, asr #28
 82c:	8e400287 	cdphi	2, 4, cr0, cr0, cr7, {4}
 830:	180e4101 	stmdane	lr, {r0, r8, lr}
 834:	00070d41 	andeq	r0, r7, r1, asr #26
 838:	0000001c 	andeq	r0, r0, ip, lsl r0
 83c:	000007e8 	andeq	r0, r0, r8, ror #15
 840:	200040d4 	ldrdcs	r4, [r0], -r4	; <UNPREDICTABLE>
 844:	0000002a 	andeq	r0, r0, sl, lsr #32
 848:	40080e41 	andmi	r0, r8, r1, asr #28
 84c:	8e400287 	cdphi	2, 4, cr0, cr0, cr7, {4}
 850:	100e4101 	andne	r4, lr, r1, lsl #2
 854:	00070d41 	andeq	r0, r7, r1, asr #26
 858:	0000001c 	andeq	r0, r0, ip, lsl r0
 85c:	000007e8 	andeq	r0, r0, r8, ror #15
 860:	200040fe 	strdcs	r4, [r0], -lr
 864:	0000002a 	andeq	r0, r0, sl, lsr #32
 868:	40080e41 	andmi	r0, r8, r1, asr #28
 86c:	8e400287 	cdphi	2, 4, cr0, cr0, cr7, {4}
 870:	100e4101 	andne	r4, lr, r1, lsl #2
 874:	00070d41 	andeq	r0, r7, r1, asr #26
 878:	00000020 	andeq	r0, r0, r0, lsr #32
 87c:	000007e8 	andeq	r0, r0, r8, ror #15
 880:	20004128 	andcs	r4, r0, r8, lsr #2
 884:	00000054 	andeq	r0, r0, r4, asr r0
 888:	400c0e41 	andmi	r0, ip, r1, asr #28
 88c:	87400384 	strbhi	r0, [r0, -r4, lsl #7]
 890:	018e4002 	orreq	r4, lr, r2
 894:	41180e41 	tstmi	r8, r1, asr #28
 898:	0000070d 	andeq	r0, r0, sp, lsl #14
 89c:	00000020 	andeq	r0, r0, r0, lsr #32
 8a0:	000007e8 	andeq	r0, r0, r8, ror #15
 8a4:	2000417c 	andcs	r4, r0, ip, ror r1
 8a8:	00000054 	andeq	r0, r0, r4, asr r0
 8ac:	400c0e41 	andmi	r0, ip, r1, asr #28
 8b0:	87400384 	strbhi	r0, [r0, -r4, lsl #7]
 8b4:	018e4002 	orreq	r4, lr, r2
 8b8:	41180e41 	tstmi	r8, r1, asr #28
 8bc:	0000070d 	andeq	r0, r0, sp, lsl #14
 8c0:	0000001c 	andeq	r0, r0, ip, lsl r0
 8c4:	000007e8 	andeq	r0, r0, r8, ror #15
 8c8:	200041d0 	ldrdcs	r4, [r0], -r0
 8cc:	00000030 	andeq	r0, r0, r0, lsr r0
 8d0:	40080e41 	andmi	r0, r8, r1, asr #28
 8d4:	8e400287 	cdphi	2, 4, cr0, cr0, cr7, {4}
 8d8:	100e4101 	andne	r4, lr, r1, lsl #2
 8dc:	00070d41 	andeq	r0, r7, r1, asr #26
 8e0:	0000001c 	andeq	r0, r0, ip, lsl r0
 8e4:	000007e8 	andeq	r0, r0, r8, ror #15
 8e8:	20004200 	andcs	r4, r0, r0, lsl #4
 8ec:	00000034 	andeq	r0, r0, r4, lsr r0
 8f0:	40080e41 	andmi	r0, r8, r1, asr #28
 8f4:	8e400287 	cdphi	2, 4, cr0, cr0, cr7, {4}
 8f8:	100e4101 	andne	r4, lr, r1, lsl #2
 8fc:	00070d41 	andeq	r0, r7, r1, asr #26
 900:	0000001c 	andeq	r0, r0, ip, lsl r0
 904:	000007e8 	andeq	r0, r0, r8, ror #15
 908:	20004234 	andcs	r4, r0, r4, lsr r2
 90c:	0000003c 	andeq	r0, r0, ip, lsr r0
 910:	40080e41 	andmi	r0, r8, r1, asr #28
 914:	8e400287 	cdphi	2, 4, cr0, cr0, cr7, {4}
 918:	100e4101 	andne	r4, lr, r1, lsl #2
 91c:	00070d41 	andeq	r0, r7, r1, asr #26
 920:	0000001c 	andeq	r0, r0, ip, lsl r0
 924:	000007e8 	andeq	r0, r0, r8, ror #15
 928:	20004270 	andcs	r4, r0, r0, ror r2
 92c:	00000050 	andeq	r0, r0, r0, asr r0
 930:	40080e41 	andmi	r0, r8, r1, asr #28
 934:	8e400287 	cdphi	2, 4, cr0, cr0, cr7, {4}
 938:	180e4101 	stmdane	lr, {r0, r8, lr}
 93c:	00070d41 	andeq	r0, r7, r1, asr #26
 940:	00000018 	andeq	r0, r0, r8, lsl r0
 944:	000007e8 	andeq	r0, r0, r8, ror #15
 948:	200042c0 	andcs	r4, r0, r0, asr #5
 94c:	0000009a 	muleq	r0, sl, r0
 950:	40080e41 	andmi	r0, r8, r1, asr #28
 954:	8e400287 	cdphi	2, 4, cr0, cr0, cr7, {4}
 958:	070d4101 	streq	r4, [sp, -r1, lsl #2]
 95c:	00000018 	andeq	r0, r0, r8, lsl r0
 960:	000007e8 	andeq	r0, r0, r8, ror #15
 964:	2000435a 	andcs	r4, r0, sl, asr r3
 968:	0000001a 	andeq	r0, r0, sl, lsl r0
 96c:	40080e41 	andmi	r0, r8, r1, asr #28
 970:	8e400287 	cdphi	2, 4, cr0, cr0, cr7, {4}
 974:	070d4101 	streq	r4, [sp, -r1, lsl #2]
 978:	00000018 	andeq	r0, r0, r8, lsl r0
 97c:	000007e8 	andeq	r0, r0, r8, ror #15
 980:	20004374 	andcs	r4, r0, r4, ror r3
 984:	00000012 	andeq	r0, r0, r2, lsl r0
 988:	40080e41 	andmi	r0, r8, r1, asr #28
 98c:	8e400287 	cdphi	2, 4, cr0, cr0, cr7, {4}
 990:	070d4101 	streq	r4, [sp, -r1, lsl #2]
 994:	00000020 	andeq	r0, r0, r0, lsr #32
 998:	000007e8 	andeq	r0, r0, r8, ror #15
 99c:	20004386 	andcs	r4, r0, r6, lsl #7
 9a0:	0000006a 	andeq	r0, r0, sl, rrx
 9a4:	400c0e41 	andmi	r0, ip, r1, asr #28
 9a8:	87400384 	strbhi	r0, [r0, -r4, lsl #7]
 9ac:	018e4002 	orreq	r4, lr, r2
 9b0:	41300e41 	teqmi	r0, r1, asr #28
 9b4:	0000070d 	andeq	r0, r0, sp, lsl #14
 9b8:	0000001c 	andeq	r0, r0, ip, lsl r0
 9bc:	000007e8 	andeq	r0, r0, r8, ror #15
 9c0:	200043f0 	strdcs	r4, [r0], -r0
 9c4:	0000005e 	andeq	r0, r0, lr, asr r0
 9c8:	40080e41 	andmi	r0, r8, r1, asr #28
 9cc:	8e400287 	cdphi	2, 4, cr0, cr0, cr7, {4}
 9d0:	100e4101 	andne	r4, lr, r1, lsl #2
 9d4:	00070d41 	andeq	r0, r7, r1, asr #26
 9d8:	0000001c 	andeq	r0, r0, ip, lsl r0
 9dc:	000007e8 	andeq	r0, r0, r8, ror #15
 9e0:	2000444e 	andcs	r4, r0, lr, asr #8
 9e4:	0000008e 	andeq	r0, r0, lr, lsl #1
 9e8:	40080e41 	andmi	r0, r8, r1, asr #28
 9ec:	8e400287 	cdphi	2, 4, cr0, cr0, cr7, {4}
 9f0:	200e4101 	andcs	r4, lr, r1, lsl #2
 9f4:	00070d41 	andeq	r0, r7, r1, asr #26
 9f8:	00000020 	andeq	r0, r0, r0, lsr #32
 9fc:	000007e8 	andeq	r0, r0, r8, ror #15
 a00:	200044dc 	ldrdcs	r4, [r0], -ip
 a04:	00000084 	andeq	r0, r0, r4, lsl #1
 a08:	400c0e41 	andmi	r0, ip, r1, asr #28
 a0c:	87400384 	strbhi	r0, [r0, -r4, lsl #7]
 a10:	018e4002 	orreq	r4, lr, r2
 a14:	41380e41 	teqmi	r8, r1, asr #28
 a18:	0000070d 	andeq	r0, r0, sp, lsl #14
 a1c:	0000000c 	andeq	r0, r0, ip
 a20:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
 a24:	7c020001 	stcvc	0, cr0, [r2], {1}
 a28:	000d0c0e 	andeq	r0, sp, lr, lsl #24
 a2c:	0000001c 	andeq	r0, r0, ip, lsl r0
 a30:	00000a1c 	andeq	r0, r0, ip, lsl sl
 a34:	20004560 	andcs	r4, r0, r0, ror #10
 a38:	0000005a 	andeq	r0, r0, sl, asr r0
 a3c:	40080e41 	andmi	r0, r8, r1, asr #28
 a40:	8e400287 	cdphi	2, 4, cr0, cr0, cr7, {4}
 a44:	180e4101 	stmdane	lr, {r0, r8, lr}
 a48:	00070d41 	andeq	r0, r7, r1, asr #26
 a4c:	0000001c 	andeq	r0, r0, ip, lsl r0
 a50:	00000a1c 	andeq	r0, r0, ip, lsl sl
 a54:	200045ba 			; <UNDEFINED> instruction: 0x200045ba
 a58:	0000003a 	andeq	r0, r0, sl, lsr r0
 a5c:	40080e41 	andmi	r0, r8, r1, asr #28
 a60:	8e400287 	cdphi	2, 4, cr0, cr0, cr7, {4}
 a64:	180e4101 	stmdane	lr, {r0, r8, lr}
 a68:	00070d41 	andeq	r0, r7, r1, asr #26
 a6c:	0000000c 	andeq	r0, r0, ip
 a70:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
 a74:	7c020001 	stcvc	0, cr0, [r2], {1}
 a78:	000d0c0e 	andeq	r0, sp, lr, lsl #24
 a7c:	0000001c 	andeq	r0, r0, ip, lsl r0
 a80:	00000a6c 	andeq	r0, r0, ip, ror #20
 a84:	200045f4 	strdcs	r4, [r0], -r4	; <UNPREDICTABLE>
 a88:	00000074 	andeq	r0, r0, r4, ror r0
 a8c:	40080e41 	andmi	r0, r8, r1, asr #28
 a90:	8e400287 	cdphi	2, 4, cr0, cr0, cr7, {4}
 a94:	180e4101 	stmdane	lr, {r0, r8, lr}
 a98:	00070d41 	andeq	r0, r7, r1, asr #26
 a9c:	00000020 	andeq	r0, r0, r0, lsr #32
 aa0:	00000a6c 	andeq	r0, r0, ip, ror #20
 aa4:	20004668 	andcs	r4, r0, r8, ror #12
 aa8:	00000074 	andeq	r0, r0, r4, ror r0
 aac:	400c0e41 	andmi	r0, ip, r1, asr #28
 ab0:	87400384 	strbhi	r0, [r0, -r4, lsl #7]
 ab4:	018e4002 	orreq	r4, lr, r2
 ab8:	41180e41 	tstmi	r8, r1, asr #28
 abc:	0000070d 	andeq	r0, r0, sp, lsl #14
 ac0:	0000000c 	andeq	r0, r0, ip
 ac4:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
 ac8:	7c020001 	stcvc	0, cr0, [r2], {1}
 acc:	000d0c0e 	andeq	r0, sp, lr, lsl #24
 ad0:	0000001c 	andeq	r0, r0, ip, lsl r0
 ad4:	00000ac0 	andeq	r0, r0, r0, asr #21
 ad8:	200046dc 	ldrdcs	r4, [r0], -ip
 adc:	00000074 	andeq	r0, r0, r4, ror r0
 ae0:	40080e41 	andmi	r0, r8, r1, asr #28
 ae4:	8e400287 	cdphi	2, 4, cr0, cr0, cr7, {4}
 ae8:	180e4101 	stmdane	lr, {r0, r8, lr}
 aec:	00070d41 	andeq	r0, r7, r1, asr #26
 af0:	00000020 	andeq	r0, r0, r0, lsr #32
 af4:	00000ac0 	andeq	r0, r0, r0, asr #21
 af8:	20004750 	andcs	r4, r0, r0, asr r7
 afc:	00000074 	andeq	r0, r0, r4, ror r0
 b00:	400c0e41 	andmi	r0, ip, r1, asr #28
 b04:	87400384 	strbhi	r0, [r0, -r4, lsl #7]
 b08:	018e4002 	orreq	r4, lr, r2
 b0c:	41180e41 	tstmi	r8, r1, asr #28
 b10:	0000070d 	andeq	r0, r0, sp, lsl #14
 b14:	0000000c 	andeq	r0, r0, ip
 b18:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
 b1c:	7c020001 	stcvc	0, cr0, [r2], {1}
 b20:	000d0c0e 	andeq	r0, sp, lr, lsl #24
 b24:	0000001c 	andeq	r0, r0, ip, lsl r0
 b28:	00000b14 	andeq	r0, r0, r4, lsl fp
 b2c:	200047c4 	andcs	r4, r0, r4, asr #15
 b30:	00000074 	andeq	r0, r0, r4, ror r0
 b34:	40080e41 	andmi	r0, r8, r1, asr #28
 b38:	8e400287 	cdphi	2, 4, cr0, cr0, cr7, {4}
 b3c:	180e4101 	stmdane	lr, {r0, r8, lr}
 b40:	00070d41 	andeq	r0, r7, r1, asr #26
 b44:	00000020 	andeq	r0, r0, r0, lsr #32
 b48:	00000b14 	andeq	r0, r0, r4, lsl fp
 b4c:	20004838 	andcs	r4, r0, r8, lsr r8
 b50:	00000074 	andeq	r0, r0, r4, ror r0
 b54:	400c0e41 	andmi	r0, ip, r1, asr #28
 b58:	87400384 	strbhi	r0, [r0, -r4, lsl #7]
 b5c:	018e4002 	orreq	r4, lr, r2
 b60:	41180e41 	tstmi	r8, r1, asr #28
 b64:	0000070d 	andeq	r0, r0, sp, lsl #14
 b68:	0000000c 	andeq	r0, r0, ip
 b6c:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
 b70:	7c020001 	stcvc	0, cr0, [r2], {1}
 b74:	000d0c0e 	andeq	r0, sp, lr, lsl #24
 b78:	0000001c 	andeq	r0, r0, ip, lsl r0
 b7c:	00000b68 	andeq	r0, r0, r8, ror #22
 b80:	200048ac 	andcs	r4, r0, ip, lsr #17
 b84:	00000074 	andeq	r0, r0, r4, ror r0
 b88:	40080e41 	andmi	r0, r8, r1, asr #28
 b8c:	8e400287 	cdphi	2, 4, cr0, cr0, cr7, {4}
 b90:	180e4101 	stmdane	lr, {r0, r8, lr}
 b94:	00070d41 	andeq	r0, r7, r1, asr #26
 b98:	00000020 	andeq	r0, r0, r0, lsr #32
 b9c:	00000b68 	andeq	r0, r0, r8, ror #22
 ba0:	20004920 	andcs	r4, r0, r0, lsr #18
 ba4:	00000074 	andeq	r0, r0, r4, ror r0
 ba8:	400c0e41 	andmi	r0, ip, r1, asr #28
 bac:	87400384 	strbhi	r0, [r0, -r4, lsl #7]
 bb0:	018e4002 	orreq	r4, lr, r2
 bb4:	41180e41 	tstmi	r8, r1, asr #28
 bb8:	0000070d 	andeq	r0, r0, sp, lsl #14
 bbc:	0000000c 	andeq	r0, r0, ip
 bc0:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
 bc4:	7c020001 	stcvc	0, cr0, [r2], {1}
 bc8:	000d0c0e 	andeq	r0, sp, lr, lsl #24
 bcc:	0000001c 	andeq	r0, r0, ip, lsl r0
 bd0:	00000bbc 			; <UNDEFINED> instruction: 0x00000bbc
 bd4:	20004994 	mulcs	r0, r4, r9
 bd8:	00000274 	andeq	r0, r0, r4, ror r2
 bdc:	40080e41 	andmi	r0, r8, r1, asr #28
 be0:	8e400287 	cdphi	2, 4, cr0, cr0, cr7, {4}
 be4:	500e4101 	andpl	r4, lr, r1, lsl #2
 be8:	00070d41 	andeq	r0, r7, r1, asr #26
 bec:	00000020 	andeq	r0, r0, r0, lsr #32
 bf0:	00000bbc 			; <UNDEFINED> instruction: 0x00000bbc
 bf4:	20004c08 	andcs	r4, r0, r8, lsl #24
 bf8:	00000164 	andeq	r0, r0, r4, ror #2
 bfc:	400c0e41 	andmi	r0, ip, r1, asr #28
 c00:	87400384 	strbhi	r0, [r0, -r4, lsl #7]
 c04:	018e4002 	orreq	r4, lr, r2
 c08:	41180e41 	tstmi	r8, r1, asr #28
 c0c:	0000070d 	andeq	r0, r0, sp, lsl #14
 c10:	0000000c 	andeq	r0, r0, ip
 c14:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
 c18:	7c010001 	stcvc	0, cr0, [r1], {1}
 c1c:	000d0c0e 	andeq	r0, sp, lr, lsl #24
 c20:	0000000c 	andeq	r0, r0, ip
 c24:	00000c10 	andeq	r0, r0, r0, lsl ip
 c28:	20004d6d 	andcs	r4, r0, sp, ror #26
 c2c:	000001cc 	andeq	r0, r0, ip, asr #3
