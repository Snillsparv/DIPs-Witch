
./Debug/graphicdisplay.elf:     file format elf32-littlearm


Disassembly of section .text:

20000000 <startup>:
#endif
}

void startup ( void )
{
__asm volatile(
20000000:	4802      	ldr	r0, [pc, #8]	; (2000000c <_exit+0x4>)
20000002:	4685      	mov	sp, r0
20000004:	f000 f8fa 	bl	200001fc <main>

20000008 <_exit>:
20000008:	e7fe      	b.n	20000008 <_exit>
	" LDR R0,=0x2001C000\n"		/* set stack */
	" MOV SP,R0\n"
	" BL main\n"				/* call main */
	"_exit: B .\n"				/* never return */
	) ;
}
2000000a:	46c0      	nop			; (mov r8, r8)
2000000c:	2001c000 	andcs	ip, r1, r0

20000010 <init_app>:
void init_app( void ) {
20000010:	b580      	push	{r7, lr}
20000012:	af00      	add	r7, sp, #0
	*portModer = 0x55555555;
20000014:	4b05      	ldr	r3, [pc, #20]	; (2000002c <init_app+0x1c>)
20000016:	4a06      	ldr	r2, [pc, #24]	; (20000030 <init_app+0x20>)
20000018:	601a      	str	r2, [r3, #0]
	set_up_DIL();
2000001a:	f004 faeb 	bl	200045f4 <set_up_DIL>
	graphic_initialize();
2000001e:	f003 fdc5 	bl	20003bac <graphic_initialize>
	graphic_clear_screen();
20000022:	f003 fdfa 	bl	20003c1a <graphic_clear_screen>
}
20000026:	46c0      	nop			; (mov r8, r8)
20000028:	46bd      	mov	sp, r7
2000002a:	bd80      	pop	{r7, pc}
2000002c:	40021000 	andmi	r1, r2, r0
20000030:	55555555 	ldrbpl	r5, [r5, #-1365]	; 0xfffffaab

20000034 <initSprites>:
sprite tempTitleLight;
sprite tempPressBlack;
sprite tempPressGray;
sprite tempPressLight;

void initSprites( void ) {
20000034:	b580      	push	{r7, lr}
20000036:	b08a      	sub	sp, #40	; 0x28
20000038:	af00      	add	r7, sp, #0
	sprite *monsterPointer = &tempMonster;
2000003a:	4b49      	ldr	r3, [pc, #292]	; (20000160 <initSprites+0x12c>)
2000003c:	627b      	str	r3, [r7, #36]	; 0x24
	load_sprite(monsterPointer, monster_black_bits, monster_black_width, monster_black_height);
2000003e:	4949      	ldr	r1, [pc, #292]	; (20000164 <initSprites+0x130>)
20000040:	6a78      	ldr	r0, [r7, #36]	; 0x24
20000042:	231e      	movs	r3, #30
20000044:	221e      	movs	r2, #30
20000046:	f004 fac1 	bl	200045cc <load_sprite>
	monster = monsterPointer;
2000004a:	4b47      	ldr	r3, [pc, #284]	; (20000168 <initSprites+0x134>)
2000004c:	6a7a      	ldr	r2, [r7, #36]	; 0x24
2000004e:	601a      	str	r2, [r3, #0]
	
	sprite *monsterPointer2 = &tempMonsterLight;
20000050:	4b46      	ldr	r3, [pc, #280]	; (2000016c <initSprites+0x138>)
20000052:	623b      	str	r3, [r7, #32]
	load_sprite(monsterPointer2, monster_light_bits, monster_light_width, monster_light_height);
20000054:	4946      	ldr	r1, [pc, #280]	; (20000170 <initSprites+0x13c>)
20000056:	6a38      	ldr	r0, [r7, #32]
20000058:	231e      	movs	r3, #30
2000005a:	221e      	movs	r2, #30
2000005c:	f004 fab6 	bl	200045cc <load_sprite>
	monsterLight = monsterPointer2;
20000060:	4b44      	ldr	r3, [pc, #272]	; (20000174 <initSprites+0x140>)
20000062:	6a3a      	ldr	r2, [r7, #32]
20000064:	601a      	str	r2, [r3, #0]

	sprite *monsterPointer3 = &tempMonsterGray;
20000066:	4b44      	ldr	r3, [pc, #272]	; (20000178 <initSprites+0x144>)
20000068:	61fb      	str	r3, [r7, #28]
	load_sprite(monsterPointer3, monster_gray_bits, monster_gray_width, monster_gray_height);
2000006a:	4944      	ldr	r1, [pc, #272]	; (2000017c <initSprites+0x148>)
2000006c:	69f8      	ldr	r0, [r7, #28]
2000006e:	231e      	movs	r3, #30
20000070:	221e      	movs	r2, #30
20000072:	f004 faab 	bl	200045cc <load_sprite>
	monsterGray = monsterPointer3;
20000076:	4b42      	ldr	r3, [pc, #264]	; (20000180 <initSprites+0x14c>)
20000078:	69fa      	ldr	r2, [r7, #28]
2000007a:	601a      	str	r2, [r3, #0]

	sprite *pointer4 = &tempBg;
2000007c:	4b41      	ldr	r3, [pc, #260]	; (20000184 <initSprites+0x150>)
2000007e:	61bb      	str	r3, [r7, #24]
	load_sprite(pointer4, bg_bits, bg_width, bg_height);
20000080:	4941      	ldr	r1, [pc, #260]	; (20000188 <initSprites+0x154>)
20000082:	69b8      	ldr	r0, [r7, #24]
20000084:	2340      	movs	r3, #64	; 0x40
20000086:	2280      	movs	r2, #128	; 0x80
20000088:	f004 faa0 	bl	200045cc <load_sprite>
	bg = pointer4;
2000008c:	4b3f      	ldr	r3, [pc, #252]	; (2000018c <initSprites+0x158>)
2000008e:	69ba      	ldr	r2, [r7, #24]
20000090:	601a      	str	r2, [r3, #0]
	
	sprite *pointer5 = &tempCastleBlack;
20000092:	4b3f      	ldr	r3, [pc, #252]	; (20000190 <initSprites+0x15c>)
20000094:	617b      	str	r3, [r7, #20]
	load_sprite(pointer5, castle_black_bits, castle_black_width, castle_black_height);
20000096:	493f      	ldr	r1, [pc, #252]	; (20000194 <initSprites+0x160>)
20000098:	6978      	ldr	r0, [r7, #20]
2000009a:	2340      	movs	r3, #64	; 0x40
2000009c:	2280      	movs	r2, #128	; 0x80
2000009e:	f004 fa95 	bl	200045cc <load_sprite>
	castleBlack = pointer5;
200000a2:	4b3d      	ldr	r3, [pc, #244]	; (20000198 <initSprites+0x164>)
200000a4:	697a      	ldr	r2, [r7, #20]
200000a6:	601a      	str	r2, [r3, #0]
	
	sprite *pointer6 = &tempCastleGray;
200000a8:	4b3c      	ldr	r3, [pc, #240]	; (2000019c <initSprites+0x168>)
200000aa:	613b      	str	r3, [r7, #16]
	load_sprite(pointer6, castle_gray_bits, castle_black_width, castle_black_height);
200000ac:	493c      	ldr	r1, [pc, #240]	; (200001a0 <initSprites+0x16c>)
200000ae:	6938      	ldr	r0, [r7, #16]
200000b0:	2340      	movs	r3, #64	; 0x40
200000b2:	2280      	movs	r2, #128	; 0x80
200000b4:	f004 fa8a 	bl	200045cc <load_sprite>
	castleGray = pointer6;
200000b8:	4b3a      	ldr	r3, [pc, #232]	; (200001a4 <initSprites+0x170>)
200000ba:	693a      	ldr	r2, [r7, #16]
200000bc:	601a      	str	r2, [r3, #0]
	
	sprite *pointer7 = &tempCastleLight;
200000be:	4b3a      	ldr	r3, [pc, #232]	; (200001a8 <initSprites+0x174>)
200000c0:	60fb      	str	r3, [r7, #12]
	load_sprite(pointer7, castle_light_bits, castle_black_width, castle_black_height);
200000c2:	493a      	ldr	r1, [pc, #232]	; (200001ac <initSprites+0x178>)
200000c4:	68f8      	ldr	r0, [r7, #12]
200000c6:	2340      	movs	r3, #64	; 0x40
200000c8:	2280      	movs	r2, #128	; 0x80
200000ca:	f004 fa7f 	bl	200045cc <load_sprite>
	castleLight = pointer7;
200000ce:	4b38      	ldr	r3, [pc, #224]	; (200001b0 <initSprites+0x17c>)
200000d0:	68fa      	ldr	r2, [r7, #12]
200000d2:	601a      	str	r2, [r3, #0]
	
	sprite *pointer8 = &tempTitleLight;
200000d4:	4b37      	ldr	r3, [pc, #220]	; (200001b4 <initSprites+0x180>)
200000d6:	60bb      	str	r3, [r7, #8]
	load_sprite(pointer8, title_light_bits, title_black_width, title_black_height);
200000d8:	4937      	ldr	r1, [pc, #220]	; (200001b8 <initSprites+0x184>)
200000da:	68b8      	ldr	r0, [r7, #8]
200000dc:	231e      	movs	r3, #30
200000de:	2232      	movs	r2, #50	; 0x32
200000e0:	f004 fa74 	bl	200045cc <load_sprite>
	titleLight = pointer8;
200000e4:	4b35      	ldr	r3, [pc, #212]	; (200001bc <initSprites+0x188>)
200000e6:	68ba      	ldr	r2, [r7, #8]
200000e8:	601a      	str	r2, [r3, #0]
	sprite *pointer9 = &tempTitleGray;
200000ea:	4b35      	ldr	r3, [pc, #212]	; (200001c0 <initSprites+0x18c>)
200000ec:	607b      	str	r3, [r7, #4]
	load_sprite(pointer9, title_gray_bits, title_black_width, title_black_height);
200000ee:	4935      	ldr	r1, [pc, #212]	; (200001c4 <initSprites+0x190>)
200000f0:	6878      	ldr	r0, [r7, #4]
200000f2:	231e      	movs	r3, #30
200000f4:	2232      	movs	r2, #50	; 0x32
200000f6:	f004 fa69 	bl	200045cc <load_sprite>
	titleGray = pointer9;
200000fa:	4b33      	ldr	r3, [pc, #204]	; (200001c8 <initSprites+0x194>)
200000fc:	687a      	ldr	r2, [r7, #4]
200000fe:	601a      	str	r2, [r3, #0]
	sprite *pointer10 = &tempTitleBlack;
20000100:	4b32      	ldr	r3, [pc, #200]	; (200001cc <initSprites+0x198>)
20000102:	603b      	str	r3, [r7, #0]
	load_sprite(pointer10, title_black_bits, title_black_width, title_black_height);
20000104:	4932      	ldr	r1, [pc, #200]	; (200001d0 <initSprites+0x19c>)
20000106:	6838      	ldr	r0, [r7, #0]
20000108:	231e      	movs	r3, #30
2000010a:	2232      	movs	r2, #50	; 0x32
2000010c:	f004 fa5e 	bl	200045cc <load_sprite>
	titleBlack = pointer10;	
20000110:	4b30      	ldr	r3, [pc, #192]	; (200001d4 <initSprites+0x1a0>)
20000112:	683a      	ldr	r2, [r7, #0]
20000114:	601a      	str	r2, [r3, #0]
	
	pointer8 = &tempPressLight;
20000116:	4b30      	ldr	r3, [pc, #192]	; (200001d8 <initSprites+0x1a4>)
20000118:	60bb      	str	r3, [r7, #8]
	load_sprite(pointer8, press_light_bits, press_black_width, press_black_height);
2000011a:	4930      	ldr	r1, [pc, #192]	; (200001dc <initSprites+0x1a8>)
2000011c:	68b8      	ldr	r0, [r7, #8]
2000011e:	2323      	movs	r3, #35	; 0x23
20000120:	223c      	movs	r2, #60	; 0x3c
20000122:	f004 fa53 	bl	200045cc <load_sprite>
	pressLight = pointer8;
20000126:	4b2e      	ldr	r3, [pc, #184]	; (200001e0 <initSprites+0x1ac>)
20000128:	68ba      	ldr	r2, [r7, #8]
2000012a:	601a      	str	r2, [r3, #0]
	pointer9 = &tempPressGray;
2000012c:	4b2d      	ldr	r3, [pc, #180]	; (200001e4 <initSprites+0x1b0>)
2000012e:	607b      	str	r3, [r7, #4]
	load_sprite(pointer9, press_gray_bits, press_black_width, press_black_height);
20000130:	492d      	ldr	r1, [pc, #180]	; (200001e8 <initSprites+0x1b4>)
20000132:	6878      	ldr	r0, [r7, #4]
20000134:	2323      	movs	r3, #35	; 0x23
20000136:	223c      	movs	r2, #60	; 0x3c
20000138:	f004 fa48 	bl	200045cc <load_sprite>
	pressGray = pointer9;
2000013c:	4b2b      	ldr	r3, [pc, #172]	; (200001ec <initSprites+0x1b8>)
2000013e:	687a      	ldr	r2, [r7, #4]
20000140:	601a      	str	r2, [r3, #0]
	pointer10 = &tempPressBlack;
20000142:	4b2b      	ldr	r3, [pc, #172]	; (200001f0 <initSprites+0x1bc>)
20000144:	603b      	str	r3, [r7, #0]
	load_sprite(pointer10, press_black_bits, press_black_width, press_black_height);
20000146:	492b      	ldr	r1, [pc, #172]	; (200001f4 <initSprites+0x1c0>)
20000148:	6838      	ldr	r0, [r7, #0]
2000014a:	2323      	movs	r3, #35	; 0x23
2000014c:	223c      	movs	r2, #60	; 0x3c
2000014e:	f004 fa3d 	bl	200045cc <load_sprite>
	pressBlack = pointer10;	
20000152:	4b29      	ldr	r3, [pc, #164]	; (200001f8 <initSprites+0x1c4>)
20000154:	683a      	ldr	r2, [r7, #0]
20000156:	601a      	str	r2, [r3, #0]
	
	
}
20000158:	46c0      	nop			; (mov r8, r8)
2000015a:	46bd      	mov	sp, r7
2000015c:	b00a      	add	sp, #40	; 0x28
2000015e:	bd80      	pop	{r7, pc}
20000160:	200057c8 	andcs	r5, r0, r8, asr #15
20000164:	200083e8 	andcs	r8, r0, r8, ror #7
20000168:	2000579c 	mulcs	r0, ip, r7
2000016c:	20005820 	andcs	r5, r0, r0, lsr #16
20000170:	20008460 	andcs	r8, r0, r0, ror #8
20000174:	20005848 	andcs	r5, r0, r8, asr #16
20000178:	200057e8 	andcs	r5, r0, r8, ror #15
2000017c:	200084d8 	ldrdcs	r8, [r0], -r8	; <UNPREDICTABLE>
20000180:	2000585c 	andcs	r5, r0, ip, asr r8
20000184:	20005860 	andcs	r5, r0, r0, ror #16
20000188:	20009714 	andcs	r9, r0, r4, lsl r7
2000018c:	200057e4 	andcs	r5, r0, r4, ror #15
20000190:	200057a0 	andcs	r5, r0, r0, lsr #15
20000194:	20008898 	mulcs	r0, r8, r8
20000198:	200057c4 	andcs	r5, r0, r4, asr #15
2000019c:	2000583c 	andcs	r5, r0, ip, lsr r8
200001a0:	20008c98 	mulcs	r0, r8, ip
200001a4:	20005850 	andcs	r5, r0, r0, asr r8
200001a8:	20005810 	andcs	r5, r0, r0, lsl r8
200001ac:	20009098 	mulcs	r0, r8, r0
200001b0:	20005800 	andcs	r5, r0, r0, lsl #16
200001b4:	200057f4 	strdcs	r5, [r0], -r4
200001b8:	20009498 	mulcs	r0, r8, r4
200001bc:	2000584c 	andcs	r5, r0, ip, asr #16
200001c0:	200057b8 			; <UNDEFINED> instruction: 0x200057b8
200001c4:	2000956c 	andcs	r9, r0, ip, ror #10
200001c8:	20005838 	andcs	r5, r0, r8, lsr r8
200001cc:	200057d8 	ldrdcs	r5, [r0], -r8
200001d0:	20009640 	andcs	r9, r0, r0, asr #12
200001d4:	2000586c 	andcs	r5, r0, ip, ror #16
200001d8:	20005804 	andcs	r5, r0, r4, lsl #16
200001dc:	20008668 	andcs	r8, r0, r8, ror #12
200001e0:	200057d4 	ldrdcs	r5, [r0], -r4
200001e4:	200057ac 	andcs	r5, r0, ip, lsr #15
200001e8:	20008780 	andcs	r8, r0, r0, lsl #15
200001ec:	2000581c 	andcs	r5, r0, ip, lsl r8
200001f0:	2000582c 	andcs	r5, r0, ip, lsr #16
200001f4:	20008550 	andcs	r8, r0, r0, asr r5
200001f8:	20005858 	andcs	r5, r0, r8, asr r8

200001fc <main>:
	
int counter = 0;
int current_screen = START_SCREEN;
void main(void)
{
200001fc:	b590      	push	{r4, r7, lr}
200001fe:	4cfe      	ldr	r4, [pc, #1016]	; (200005f8 <main+0x3fc>)
20000200:	44a5      	add	sp, r4
20000202:	af00      	add	r7, sp, #0
	
	init_app();	
20000204:	f7ff ff04 	bl	20000010 <init_app>
	initSprites();
20000208:	f7ff ff14 	bl	20000034 <initSprites>
	
	GameObject monsterObj;
	Image monsterImage;
	Image monsterImages[] = {monsterImage};
2000020c:	4bfb      	ldr	r3, [pc, #1004]	; (200005fc <main+0x400>)
2000020e:	18fb      	adds	r3, r7, r3
20000210:	22a1      	movs	r2, #161	; 0xa1
20000212:	00d2      	lsls	r2, r2, #3
20000214:	18ba      	adds	r2, r7, r2
20000216:	ca13      	ldmia	r2!, {r0, r1, r4}
20000218:	c313      	stmia	r3!, {r0, r1, r4}
	monsterObj.images = monsterImages;
2000021a:	4bf9      	ldr	r3, [pc, #996]	; (20000600 <main+0x404>)
2000021c:	18fb      	adds	r3, r7, r3
2000021e:	4af7      	ldr	r2, [pc, #988]	; (200005fc <main+0x400>)
20000220:	18ba      	adds	r2, r7, r2
20000222:	601a      	str	r2, [r3, #0]
	load_image(&monsterObj.images[0], monster, monsterGray, monsterLight);
20000224:	4bf6      	ldr	r3, [pc, #984]	; (20000600 <main+0x404>)
20000226:	18fb      	adds	r3, r7, r3
20000228:	6818      	ldr	r0, [r3, #0]
2000022a:	4bf6      	ldr	r3, [pc, #984]	; (20000604 <main+0x408>)
2000022c:	6819      	ldr	r1, [r3, #0]
2000022e:	4bf6      	ldr	r3, [pc, #984]	; (20000608 <main+0x40c>)
20000230:	681a      	ldr	r2, [r3, #0]
20000232:	4bf6      	ldr	r3, [pc, #984]	; (2000060c <main+0x410>)
20000234:	681b      	ldr	r3, [r3, #0]
20000236:	f004 f9b5 	bl	200045a4 <load_image>
	monsterObj.xPos = 30;
2000023a:	4bf1      	ldr	r3, [pc, #964]	; (20000600 <main+0x404>)
2000023c:	18fb      	adds	r3, r7, r3
2000023e:	221e      	movs	r2, #30
20000240:	605a      	str	r2, [r3, #4]
	monsterObj.yPos = 4;
20000242:	4bef      	ldr	r3, [pc, #956]	; (20000600 <main+0x404>)
20000244:	18fb      	adds	r3, r7, r3
20000246:	2204      	movs	r2, #4
20000248:	609a      	str	r2, [r3, #8]
	monsterObj.current_frame = 0;
2000024a:	4bed      	ldr	r3, [pc, #948]	; (20000600 <main+0x404>)
2000024c:	18fb      	adds	r3, r7, r3
2000024e:	2200      	movs	r2, #0
20000250:	615a      	str	r2, [r3, #20]
	monsterObj.update = playerUpdate;
20000252:	4beb      	ldr	r3, [pc, #940]	; (20000600 <main+0x404>)
20000254:	18fb      	adds	r3, r7, r3
20000256:	4aee      	ldr	r2, [pc, #952]	; (20000610 <main+0x414>)
20000258:	60da      	str	r2, [r3, #12]
	
	GameObject titleObj;
	Image titleImage;
	Image titleImages[] = {titleImage};
2000025a:	2398      	movs	r3, #152	; 0x98
2000025c:	00db      	lsls	r3, r3, #3
2000025e:	18fb      	adds	r3, r7, r3
20000260:	4aec      	ldr	r2, [pc, #944]	; (20000614 <main+0x418>)
20000262:	18ba      	adds	r2, r7, r2
20000264:	ca13      	ldmia	r2!, {r0, r1, r4}
20000266:	c313      	stmia	r3!, {r0, r1, r4}
	titleObj.images = titleImages;
20000268:	239b      	movs	r3, #155	; 0x9b
2000026a:	00db      	lsls	r3, r3, #3
2000026c:	18fb      	adds	r3, r7, r3
2000026e:	2298      	movs	r2, #152	; 0x98
20000270:	00d2      	lsls	r2, r2, #3
20000272:	18ba      	adds	r2, r7, r2
20000274:	601a      	str	r2, [r3, #0]
	load_image(&titleObj.images[0], titleBlack, titleGray, titleLight);
20000276:	239b      	movs	r3, #155	; 0x9b
20000278:	00db      	lsls	r3, r3, #3
2000027a:	18fb      	adds	r3, r7, r3
2000027c:	6818      	ldr	r0, [r3, #0]
2000027e:	4be6      	ldr	r3, [pc, #920]	; (20000618 <main+0x41c>)
20000280:	6819      	ldr	r1, [r3, #0]
20000282:	4be6      	ldr	r3, [pc, #920]	; (2000061c <main+0x420>)
20000284:	681a      	ldr	r2, [r3, #0]
20000286:	4be6      	ldr	r3, [pc, #920]	; (20000620 <main+0x424>)
20000288:	681b      	ldr	r3, [r3, #0]
2000028a:	f004 f98b 	bl	200045a4 <load_image>
	titleObj.xPos = 1;
2000028e:	239b      	movs	r3, #155	; 0x9b
20000290:	00db      	lsls	r3, r3, #3
20000292:	18fb      	adds	r3, r7, r3
20000294:	2201      	movs	r2, #1
20000296:	605a      	str	r2, [r3, #4]
	titleObj.yPos = -40;
20000298:	239b      	movs	r3, #155	; 0x9b
2000029a:	00db      	lsls	r3, r3, #3
2000029c:	18fb      	adds	r3, r7, r3
2000029e:	2228      	movs	r2, #40	; 0x28
200002a0:	4252      	negs	r2, r2
200002a2:	609a      	str	r2, [r3, #8]
	titleObj.current_frame = 0;
200002a4:	239b      	movs	r3, #155	; 0x9b
200002a6:	00db      	lsls	r3, r3, #3
200002a8:	18fb      	adds	r3, r7, r3
200002aa:	2200      	movs	r2, #0
200002ac:	615a      	str	r2, [r3, #20]
	
	GameObject pressObj;
	Image pressImage;
	Image pressImages[] = {pressImage};
200002ae:	4bdd      	ldr	r3, [pc, #884]	; (20000624 <main+0x428>)
200002b0:	18fb      	adds	r3, r7, r3
200002b2:	2292      	movs	r2, #146	; 0x92
200002b4:	00d2      	lsls	r2, r2, #3
200002b6:	18ba      	adds	r2, r7, r2
200002b8:	ca13      	ldmia	r2!, {r0, r1, r4}
200002ba:	c313      	stmia	r3!, {r0, r1, r4}
	pressObj.images = pressImages;
200002bc:	4bda      	ldr	r3, [pc, #872]	; (20000628 <main+0x42c>)
200002be:	18fb      	adds	r3, r7, r3
200002c0:	4ad8      	ldr	r2, [pc, #864]	; (20000624 <main+0x428>)
200002c2:	18ba      	adds	r2, r7, r2
200002c4:	601a      	str	r2, [r3, #0]
	load_image(&pressObj.images[0], pressBlack, pressLight, pressGray);
200002c6:	4bd8      	ldr	r3, [pc, #864]	; (20000628 <main+0x42c>)
200002c8:	18fb      	adds	r3, r7, r3
200002ca:	6818      	ldr	r0, [r3, #0]
200002cc:	4bd7      	ldr	r3, [pc, #860]	; (2000062c <main+0x430>)
200002ce:	6819      	ldr	r1, [r3, #0]
200002d0:	4bd7      	ldr	r3, [pc, #860]	; (20000630 <main+0x434>)
200002d2:	681a      	ldr	r2, [r3, #0]
200002d4:	4bd7      	ldr	r3, [pc, #860]	; (20000634 <main+0x438>)
200002d6:	681b      	ldr	r3, [r3, #0]
200002d8:	f004 f964 	bl	200045a4 <load_image>
	pressObj.xPos = 65-30;
200002dc:	4bd2      	ldr	r3, [pc, #840]	; (20000628 <main+0x42c>)
200002de:	18fb      	adds	r3, r7, r3
200002e0:	2223      	movs	r2, #35	; 0x23
200002e2:	605a      	str	r2, [r3, #4]
	pressObj.yPos = 29-15;
200002e4:	4bd0      	ldr	r3, [pc, #832]	; (20000628 <main+0x42c>)
200002e6:	18fb      	adds	r3, r7, r3
200002e8:	220e      	movs	r2, #14
200002ea:	609a      	str	r2, [r3, #8]
	pressObj.current_frame = 0;
200002ec:	4bce      	ldr	r3, [pc, #824]	; (20000628 <main+0x42c>)
200002ee:	18fb      	adds	r3, r7, r3
200002f0:	2200      	movs	r2, #0
200002f2:	615a      	str	r2, [r3, #20]
	
	GameObject castleObj;
	Image castleImage;
	Image castleImages[] = {castleImage};
200002f4:	4bd0      	ldr	r3, [pc, #832]	; (20000638 <main+0x43c>)
200002f6:	22ad      	movs	r2, #173	; 0xad
200002f8:	00d2      	lsls	r2, r2, #3
200002fa:	18ba      	adds	r2, r7, r2
200002fc:	18d1      	adds	r1, r2, r3
200002fe:	4bcf      	ldr	r3, [pc, #828]	; (2000063c <main+0x440>)
20000300:	22ad      	movs	r2, #173	; 0xad
20000302:	00d2      	lsls	r2, r2, #3
20000304:	18ba      	adds	r2, r7, r2
20000306:	18d2      	adds	r2, r2, r3
20000308:	000b      	movs	r3, r1
2000030a:	ca13      	ldmia	r2!, {r0, r1, r4}
2000030c:	c313      	stmia	r3!, {r0, r1, r4}
	castleObj.images = castleImages;
2000030e:	4bcc      	ldr	r3, [pc, #816]	; (20000640 <main+0x444>)
20000310:	22ad      	movs	r2, #173	; 0xad
20000312:	00d2      	lsls	r2, r2, #3
20000314:	4694      	mov	ip, r2
20000316:	44bc      	add	ip, r7
20000318:	4463      	add	r3, ip
2000031a:	2289      	movs	r2, #137	; 0x89
2000031c:	00d2      	lsls	r2, r2, #3
2000031e:	18ba      	adds	r2, r7, r2
20000320:	601a      	str	r2, [r3, #0]
	load_image(&castleObj.images[0], castleBlack, castleGray, castleLight);
20000322:	4bc7      	ldr	r3, [pc, #796]	; (20000640 <main+0x444>)
20000324:	22ad      	movs	r2, #173	; 0xad
20000326:	00d2      	lsls	r2, r2, #3
20000328:	4694      	mov	ip, r2
2000032a:	44bc      	add	ip, r7
2000032c:	4463      	add	r3, ip
2000032e:	6818      	ldr	r0, [r3, #0]
20000330:	4bc4      	ldr	r3, [pc, #784]	; (20000644 <main+0x448>)
20000332:	6819      	ldr	r1, [r3, #0]
20000334:	4bc4      	ldr	r3, [pc, #784]	; (20000648 <main+0x44c>)
20000336:	681a      	ldr	r2, [r3, #0]
20000338:	4bc4      	ldr	r3, [pc, #784]	; (2000064c <main+0x450>)
2000033a:	681b      	ldr	r3, [r3, #0]
2000033c:	f004 f932 	bl	200045a4 <load_image>
	castleObj.xPos = 1;
20000340:	4bbf      	ldr	r3, [pc, #764]	; (20000640 <main+0x444>)
20000342:	22ad      	movs	r2, #173	; 0xad
20000344:	00d2      	lsls	r2, r2, #3
20000346:	4694      	mov	ip, r2
20000348:	44bc      	add	ip, r7
2000034a:	4463      	add	r3, ip
2000034c:	2201      	movs	r2, #1
2000034e:	605a      	str	r2, [r3, #4]
	castleObj.yPos = 1;
20000350:	4bbb      	ldr	r3, [pc, #748]	; (20000640 <main+0x444>)
20000352:	22ad      	movs	r2, #173	; 0xad
20000354:	00d2      	lsls	r2, r2, #3
20000356:	4694      	mov	ip, r2
20000358:	44bc      	add	ip, r7
2000035a:	4463      	add	r3, ip
2000035c:	2201      	movs	r2, #1
2000035e:	609a      	str	r2, [r3, #8]
	castleObj.current_frame = 0;
20000360:	4bb7      	ldr	r3, [pc, #732]	; (20000640 <main+0x444>)
20000362:	22ad      	movs	r2, #173	; 0xad
20000364:	00d2      	lsls	r2, r2, #3
20000366:	4694      	mov	ip, r2
20000368:	44bc      	add	ip, r7
2000036a:	4463      	add	r3, ip
2000036c:	2200      	movs	r2, #0
2000036e:	615a      	str	r2, [r3, #20]

	GameObject roger;
	init_roger( &roger );
20000370:	4bb7      	ldr	r3, [pc, #732]	; (20000650 <main+0x454>)
20000372:	18fb      	adds	r3, r7, r3
20000374:	0018      	movs	r0, r3
20000376:	f004 fde3 	bl	20004f40 <init_roger>
	roger.xPos = 1;
2000037a:	4bb6      	ldr	r3, [pc, #728]	; (20000654 <main+0x458>)
2000037c:	22ad      	movs	r2, #173	; 0xad
2000037e:	00d2      	lsls	r2, r2, #3
20000380:	4694      	mov	ip, r2
20000382:	44bc      	add	ip, r7
20000384:	4463      	add	r3, ip
20000386:	2201      	movs	r2, #1
20000388:	605a      	str	r2, [r3, #4]
	roger.yPos = 100;
2000038a:	4bb2      	ldr	r3, [pc, #712]	; (20000654 <main+0x458>)
2000038c:	22ad      	movs	r2, #173	; 0xad
2000038e:	00d2      	lsls	r2, r2, #3
20000390:	4694      	mov	ip, r2
20000392:	44bc      	add	ip, r7
20000394:	4463      	add	r3, ip
20000396:	2264      	movs	r2, #100	; 0x64
20000398:	609a      	str	r2, [r3, #8]
	
	GameObject game_over_witch;
	init_game_over_witch( &game_over_witch );
2000039a:	2380      	movs	r3, #128	; 0x80
2000039c:	00db      	lsls	r3, r3, #3
2000039e:	18fb      	adds	r3, r7, r3
200003a0:	0018      	movs	r0, r3
200003a2:	f004 ff41 	bl	20005228 <init_game_over_witch>
	game_over_witch.xPos = 1;
200003a6:	4bac      	ldr	r3, [pc, #688]	; (20000658 <main+0x45c>)
200003a8:	22ad      	movs	r2, #173	; 0xad
200003aa:	00d2      	lsls	r2, r2, #3
200003ac:	4694      	mov	ip, r2
200003ae:	44bc      	add	ip, r7
200003b0:	4463      	add	r3, ip
200003b2:	2201      	movs	r2, #1
200003b4:	605a      	str	r2, [r3, #4]
	game_over_witch.yPos = 1;
200003b6:	4ba8      	ldr	r3, [pc, #672]	; (20000658 <main+0x45c>)
200003b8:	22ad      	movs	r2, #173	; 0xad
200003ba:	00d2      	lsls	r2, r2, #3
200003bc:	4694      	mov	ip, r2
200003be:	44bc      	add	ip, r7
200003c0:	4463      	add	r3, ip
200003c2:	2201      	movs	r2, #1
200003c4:	609a      	str	r2, [r3, #8]
	game_over_witch.update = gameObjectUpdate;
200003c6:	4ba4      	ldr	r3, [pc, #656]	; (20000658 <main+0x45c>)
200003c8:	22ad      	movs	r2, #173	; 0xad
200003ca:	00d2      	lsls	r2, r2, #3
200003cc:	4694      	mov	ip, r2
200003ce:	44bc      	add	ip, r7
200003d0:	4463      	add	r3, ip
200003d2:	4aa2      	ldr	r2, [pc, #648]	; (2000065c <main+0x460>)
200003d4:	60da      	str	r2, [r3, #12]
	game_over_witch.animation_speed = 2;
200003d6:	4ba0      	ldr	r3, [pc, #640]	; (20000658 <main+0x45c>)
200003d8:	22ad      	movs	r2, #173	; 0xad
200003da:	00d2      	lsls	r2, r2, #3
200003dc:	4694      	mov	ip, r2
200003de:	44bc      	add	ip, r7
200003e0:	4463      	add	r3, ip
200003e2:	2202      	movs	r2, #2
200003e4:	61da      	str	r2, [r3, #28]
	
	GameObject indoors;
	init_indoors( &indoors );
200003e6:	23f7      	movs	r3, #247	; 0xf7
200003e8:	009b      	lsls	r3, r3, #2
200003ea:	18fb      	adds	r3, r7, r3
200003ec:	0018      	movs	r0, r3
200003ee:	f004 fc4b 	bl	20004c88 <init_indoors>
	indoors.xPos = 1;
200003f2:	4b9b      	ldr	r3, [pc, #620]	; (20000660 <main+0x464>)
200003f4:	22ad      	movs	r2, #173	; 0xad
200003f6:	00d2      	lsls	r2, r2, #3
200003f8:	4694      	mov	ip, r2
200003fa:	44bc      	add	ip, r7
200003fc:	4463      	add	r3, ip
200003fe:	2201      	movs	r2, #1
20000400:	605a      	str	r2, [r3, #4]
	indoors.yPos = 1;
20000402:	4b97      	ldr	r3, [pc, #604]	; (20000660 <main+0x464>)
20000404:	22ad      	movs	r2, #173	; 0xad
20000406:	00d2      	lsls	r2, r2, #3
20000408:	4694      	mov	ip, r2
2000040a:	44bc      	add	ip, r7
2000040c:	4463      	add	r3, ip
2000040e:	2201      	movs	r2, #1
20000410:	609a      	str	r2, [r3, #8]
	
	GameObject indoors2;
	init_indoors2( &indoors2 );
20000412:	23ee      	movs	r3, #238	; 0xee
20000414:	009b      	lsls	r3, r3, #2
20000416:	18fb      	adds	r3, r7, r3
20000418:	0018      	movs	r0, r3
2000041a:	f004 fca9 	bl	20004d70 <init_indoors2>
	indoors2.xPos = 1;
2000041e:	4b91      	ldr	r3, [pc, #580]	; (20000664 <main+0x468>)
20000420:	22ad      	movs	r2, #173	; 0xad
20000422:	00d2      	lsls	r2, r2, #3
20000424:	4694      	mov	ip, r2
20000426:	44bc      	add	ip, r7
20000428:	4463      	add	r3, ip
2000042a:	2201      	movs	r2, #1
2000042c:	605a      	str	r2, [r3, #4]
	indoors2.yPos = 1;
2000042e:	4b8d      	ldr	r3, [pc, #564]	; (20000664 <main+0x468>)
20000430:	22ad      	movs	r2, #173	; 0xad
20000432:	00d2      	lsls	r2, r2, #3
20000434:	4694      	mov	ip, r2
20000436:	44bc      	add	ip, r7
20000438:	4463      	add	r3, ip
2000043a:	2201      	movs	r2, #1
2000043c:	609a      	str	r2, [r3, #8]
	
	GameObject trophy;
	init_trophy( &trophy );
2000043e:	23e5      	movs	r3, #229	; 0xe5
20000440:	009b      	lsls	r3, r3, #2
20000442:	18fb      	adds	r3, r7, r3
20000444:	0018      	movs	r0, r3
20000446:	f004 fd07 	bl	20004e58 <init_trophy>

	GameObject stone;
	init_stone( &stone );
2000044a:	23dc      	movs	r3, #220	; 0xdc
2000044c:	009b      	lsls	r3, r3, #2
2000044e:	18fb      	adds	r3, r7, r3
20000450:	0018      	movs	r0, r3
20000452:	f004 ffd5 	bl	20005400 <init_stone>
	stone.xPos = 70;
20000456:	4b84      	ldr	r3, [pc, #528]	; (20000668 <main+0x46c>)
20000458:	22ad      	movs	r2, #173	; 0xad
2000045a:	00d2      	lsls	r2, r2, #3
2000045c:	4694      	mov	ip, r2
2000045e:	44bc      	add	ip, r7
20000460:	4463      	add	r3, ip
20000462:	2246      	movs	r2, #70	; 0x46
20000464:	605a      	str	r2, [r3, #4]
	stone.yPos = -30;
20000466:	4b80      	ldr	r3, [pc, #512]	; (20000668 <main+0x46c>)
20000468:	22ad      	movs	r2, #173	; 0xad
2000046a:	00d2      	lsls	r2, r2, #3
2000046c:	4694      	mov	ip, r2
2000046e:	44bc      	add	ip, r7
20000470:	4463      	add	r3, ip
20000472:	221e      	movs	r2, #30
20000474:	4252      	negs	r2, r2
20000476:	609a      	str	r2, [r3, #8]
	stone.update = stoneUpdate; 
20000478:	4b7b      	ldr	r3, [pc, #492]	; (20000668 <main+0x46c>)
2000047a:	22ad      	movs	r2, #173	; 0xad
2000047c:	00d2      	lsls	r2, r2, #3
2000047e:	4694      	mov	ip, r2
20000480:	44bc      	add	ip, r7
20000482:	4463      	add	r3, ip
20000484:	4a79      	ldr	r2, [pc, #484]	; (2000066c <main+0x470>)
20000486:	60da      	str	r2, [r3, #12]

	
	GameObject hair;
	init_flame(&hair);
20000488:	23d3      	movs	r3, #211	; 0xd3
2000048a:	009b      	lsls	r3, r3, #2
2000048c:	18fb      	adds	r3, r7, r3
2000048e:	0018      	movs	r0, r3
20000490:	f002 fd0c 	bl	20002eac <init_flame>
	hair.xPos = -300;
20000494:	4b76      	ldr	r3, [pc, #472]	; (20000670 <main+0x474>)
20000496:	22ad      	movs	r2, #173	; 0xad
20000498:	00d2      	lsls	r2, r2, #3
2000049a:	4694      	mov	ip, r2
2000049c:	44bc      	add	ip, r7
2000049e:	4463      	add	r3, ip
200004a0:	4a74      	ldr	r2, [pc, #464]	; (20000674 <main+0x478>)
200004a2:	605a      	str	r2, [r3, #4]
	hair.yPos = 10;
200004a4:	4b72      	ldr	r3, [pc, #456]	; (20000670 <main+0x474>)
200004a6:	22ad      	movs	r2, #173	; 0xad
200004a8:	00d2      	lsls	r2, r2, #3
200004aa:	4694      	mov	ip, r2
200004ac:	44bc      	add	ip, r7
200004ae:	4463      	add	r3, ip
200004b0:	220a      	movs	r2, #10
200004b2:	609a      	str	r2, [r3, #8]
	hair.update = gameObjectUpdate;
200004b4:	4b6e      	ldr	r3, [pc, #440]	; (20000670 <main+0x474>)
200004b6:	22ad      	movs	r2, #173	; 0xad
200004b8:	00d2      	lsls	r2, r2, #3
200004ba:	4694      	mov	ip, r2
200004bc:	44bc      	add	ip, r7
200004be:	4463      	add	r3, ip
200004c0:	4a66      	ldr	r2, [pc, #408]	; (2000065c <main+0x460>)
200004c2:	60da      	str	r2, [r3, #12]
	
	GameObject bird;
	init_bird( &bird );
200004c4:	23ca      	movs	r3, #202	; 0xca
200004c6:	009b      	lsls	r3, r3, #2
200004c8:	18fb      	adds	r3, r7, r3
200004ca:	0018      	movs	r0, r3
200004cc:	f002 f87a 	bl	200025c4 <init_bird>
	bird.xPos = 180;
200004d0:	4b69      	ldr	r3, [pc, #420]	; (20000678 <main+0x47c>)
200004d2:	22ad      	movs	r2, #173	; 0xad
200004d4:	00d2      	lsls	r2, r2, #3
200004d6:	4694      	mov	ip, r2
200004d8:	44bc      	add	ip, r7
200004da:	4463      	add	r3, ip
200004dc:	22b4      	movs	r2, #180	; 0xb4
200004de:	605a      	str	r2, [r3, #4]
	bird.yPos = 40;
200004e0:	4b65      	ldr	r3, [pc, #404]	; (20000678 <main+0x47c>)
200004e2:	22ad      	movs	r2, #173	; 0xad
200004e4:	00d2      	lsls	r2, r2, #3
200004e6:	4694      	mov	ip, r2
200004e8:	44bc      	add	ip, r7
200004ea:	4463      	add	r3, ip
200004ec:	2228      	movs	r2, #40	; 0x28
200004ee:	609a      	str	r2, [r3, #8]
	bird.update = gameObjectUpdate;	
200004f0:	4b61      	ldr	r3, [pc, #388]	; (20000678 <main+0x47c>)
200004f2:	22ad      	movs	r2, #173	; 0xad
200004f4:	00d2      	lsls	r2, r2, #3
200004f6:	4694      	mov	ip, r2
200004f8:	44bc      	add	ip, r7
200004fa:	4463      	add	r3, ip
200004fc:	4a57      	ldr	r2, [pc, #348]	; (2000065c <main+0x460>)
200004fe:	60da      	str	r2, [r3, #12]
	
	GameObject dragon;
	init_dragon( &dragon );
20000500:	23c1      	movs	r3, #193	; 0xc1
20000502:	009b      	lsls	r3, r3, #2
20000504:	18fb      	adds	r3, r7, r3
20000506:	0018      	movs	r0, r3
20000508:	f003 f888 	bl	2000361c <init_dragon>
	dragon.xPos = 130;
2000050c:	4b5b      	ldr	r3, [pc, #364]	; (2000067c <main+0x480>)
2000050e:	22ad      	movs	r2, #173	; 0xad
20000510:	00d2      	lsls	r2, r2, #3
20000512:	4694      	mov	ip, r2
20000514:	44bc      	add	ip, r7
20000516:	4463      	add	r3, ip
20000518:	2282      	movs	r2, #130	; 0x82
2000051a:	605a      	str	r2, [r3, #4]
	dragon.yPos = 64-10-21;
2000051c:	4b57      	ldr	r3, [pc, #348]	; (2000067c <main+0x480>)
2000051e:	22ad      	movs	r2, #173	; 0xad
20000520:	00d2      	lsls	r2, r2, #3
20000522:	4694      	mov	ip, r2
20000524:	44bc      	add	ip, r7
20000526:	4463      	add	r3, ip
20000528:	2221      	movs	r2, #33	; 0x21
2000052a:	609a      	str	r2, [r3, #8]
	dragon.update = gameObjectUpdate;
2000052c:	4b53      	ldr	r3, [pc, #332]	; (2000067c <main+0x480>)
2000052e:	22ad      	movs	r2, #173	; 0xad
20000530:	00d2      	lsls	r2, r2, #3
20000532:	4694      	mov	ip, r2
20000534:	44bc      	add	ip, r7
20000536:	4463      	add	r3, ip
20000538:	4a48      	ldr	r2, [pc, #288]	; (2000065c <main+0x460>)
2000053a:	60da      	str	r2, [r3, #12]
	
	GameObject boom;
	init_boom( &boom );
2000053c:	23b8      	movs	r3, #184	; 0xb8
2000053e:	009b      	lsls	r3, r3, #2
20000540:	18fb      	adds	r3, r7, r3
20000542:	0018      	movs	r0, r3
20000544:	f002 fe6e 	bl	20003224 <init_boom>
	boom.update = gameObjectUpdate;
20000548:	4b4d      	ldr	r3, [pc, #308]	; (20000680 <main+0x484>)
2000054a:	22ad      	movs	r2, #173	; 0xad
2000054c:	00d2      	lsls	r2, r2, #3
2000054e:	4694      	mov	ip, r2
20000550:	44bc      	add	ip, r7
20000552:	4463      	add	r3, ip
20000554:	4a41      	ldr	r2, [pc, #260]	; (2000065c <main+0x460>)
20000556:	60da      	str	r2, [r3, #12]
	
	GameObject DIP;
	init_DIP( &DIP );
20000558:	23af      	movs	r3, #175	; 0xaf
2000055a:	009b      	lsls	r3, r3, #2
2000055c:	18fb      	adds	r3, r7, r3
2000055e:	0018      	movs	r0, r3
20000560:	f002 fa98 	bl	20002a94 <init_DIP>
	DIP.update = DIPUpdate;
20000564:	4b47      	ldr	r3, [pc, #284]	; (20000684 <main+0x488>)
20000566:	22ad      	movs	r2, #173	; 0xad
20000568:	00d2      	lsls	r2, r2, #3
2000056a:	4694      	mov	ip, r2
2000056c:	44bc      	add	ip, r7
2000056e:	4463      	add	r3, ip
20000570:	4a45      	ldr	r2, [pc, #276]	; (20000688 <main+0x48c>)
20000572:	60da      	str	r2, [r3, #12]
	
	GameObject player;
	init_witch( &player );
20000574:	23a6      	movs	r3, #166	; 0xa6
20000576:	009b      	lsls	r3, r3, #2
20000578:	18fb      	adds	r3, r7, r3
2000057a:	0018      	movs	r0, r3
2000057c:	f002 f96e 	bl	2000285c <init_witch>
	player.xPos = 3;
20000580:	4b42      	ldr	r3, [pc, #264]	; (2000068c <main+0x490>)
20000582:	22ad      	movs	r2, #173	; 0xad
20000584:	00d2      	lsls	r2, r2, #3
20000586:	4694      	mov	ip, r2
20000588:	44bc      	add	ip, r7
2000058a:	4463      	add	r3, ip
2000058c:	2203      	movs	r2, #3
2000058e:	605a      	str	r2, [r3, #4]
	player.yPos = LIMIT_DOWN - 1; //player position
20000590:	4b3e      	ldr	r3, [pc, #248]	; (2000068c <main+0x490>)
20000592:	22ad      	movs	r2, #173	; 0xad
20000594:	00d2      	lsls	r2, r2, #3
20000596:	4694      	mov	ip, r2
20000598:	44bc      	add	ip, r7
2000059a:	4463      	add	r3, ip
2000059c:	2226      	movs	r2, #38	; 0x26
2000059e:	609a      	str	r2, [r3, #8]
	player.update = playerUpdate;
200005a0:	4b3a      	ldr	r3, [pc, #232]	; (2000068c <main+0x490>)
200005a2:	22ad      	movs	r2, #173	; 0xad
200005a4:	00d2      	lsls	r2, r2, #3
200005a6:	4694      	mov	ip, r2
200005a8:	44bc      	add	ip, r7
200005aa:	4463      	add	r3, ip
200005ac:	4a18      	ldr	r2, [pc, #96]	; (20000610 <main+0x414>)
200005ae:	60da      	str	r2, [r3, #12]
	
	GameObject fire2;
	init_fire( &fire2 );
200005b0:	239d      	movs	r3, #157	; 0x9d
200005b2:	009b      	lsls	r3, r3, #2
200005b4:	18fb      	adds	r3, r7, r3
200005b6:	0018      	movs	r0, r3
200005b8:	f001 fd4c 	bl	20002054 <init_fire>
	GameObject fire3;
	init_fire( &fire3 );
200005bc:	2394      	movs	r3, #148	; 0x94
200005be:	009b      	lsls	r3, r3, #2
200005c0:	18fb      	adds	r3, r7, r3
200005c2:	0018      	movs	r0, r3
200005c4:	f001 fd46 	bl	20002054 <init_fire>
	GameObject fire4;
	init_fire( &fire4 );
200005c8:	238b      	movs	r3, #139	; 0x8b
200005ca:	009b      	lsls	r3, r3, #2
200005cc:	18fb      	adds	r3, r7, r3
200005ce:	0018      	movs	r0, r3
200005d0:	f001 fd40 	bl	20002054 <init_fire>
	GameObject fire1;
	init_fire( &fire1 );
200005d4:	2382      	movs	r3, #130	; 0x82
200005d6:	009b      	lsls	r3, r3, #2
200005d8:	18fb      	adds	r3, r7, r3
200005da:	0018      	movs	r0, r3
200005dc:	f001 fd3a 	bl	20002054 <init_fire>
	
	GameObject fire1_indoors;
	init_fire( &fire1_indoors );
200005e0:	23f2      	movs	r3, #242	; 0xf2
200005e2:	005b      	lsls	r3, r3, #1
200005e4:	18fb      	adds	r3, r7, r3
200005e6:	0018      	movs	r0, r3
200005e8:	f001 fd34 	bl	20002054 <init_fire>
	fire1_indoors.xPos = 50;		//FIRE1_INDO
200005ec:	4b28      	ldr	r3, [pc, #160]	; (20000690 <main+0x494>)
200005ee:	22ad      	movs	r2, #173	; 0xad
200005f0:	00d2      	lsls	r2, r2, #3
200005f2:	4694      	mov	ip, r2
200005f4:	44bc      	add	ip, r7
200005f6:	e04d      	b.n	20000694 <main+0x498>
200005f8:	fffffa94 			; <UNDEFINED> instruction: 0xfffffa94
200005fc:	000004fc 	strdeq	r0, [r0], -ip
20000600:	00000514 	andeq	r0, r0, r4, lsl r5
20000604:	2000579c 	mulcs	r0, ip, r7
20000608:	2000585c 	andcs	r5, r0, ip, asr r8
2000060c:	20005848 	andcs	r5, r0, r8, asr #16
20000610:	200021b5 			; <UNDEFINED> instruction: 0x200021b5
20000614:	000004cc 	andeq	r0, r0, ip, asr #9
20000618:	2000586c 	andcs	r5, r0, ip, ror #16
2000061c:	20005838 	andcs	r5, r0, r8, lsr r8
20000620:	2000584c 	andcs	r5, r0, ip, asr #16
20000624:	00000484 	andeq	r0, r0, r4, lsl #9
20000628:	0000049c 	muleq	r0, ip, r4
2000062c:	20005858 	andcs	r5, r0, r8, asr r8
20000630:	200057d4 	ldrdcs	r5, [r0], -r4
20000634:	2000581c 	andcs	r5, r0, ip, lsl r8
20000638:	fffffee0 			; <UNDEFINED> instruction: 0xfffffee0
2000063c:	fffffeec 			; <UNDEFINED> instruction: 0xfffffeec
20000640:	fffffef8 			; <UNDEFINED> instruction: 0xfffffef8
20000644:	200057c4 	andcs	r5, r0, r4, asr #15
20000648:	20005850 	andcs	r5, r0, r0, asr r8
2000064c:	20005800 	andcs	r5, r0, r0, lsl #16
20000650:	00000424 	andeq	r0, r0, r4, lsr #8
20000654:	fffffebc 			; <UNDEFINED> instruction: 0xfffffebc
20000658:	fffffe98 			; <UNDEFINED> instruction: 0xfffffe98
2000065c:	20001e89 	andcs	r1, r0, r9, lsl #29
20000660:	fffffe74 			; <UNDEFINED> instruction: 0xfffffe74
20000664:	fffffe50 			; <UNDEFINED> instruction: 0xfffffe50
20000668:	fffffe08 			; <UNDEFINED> instruction: 0xfffffe08
2000066c:	200054b1 			; <UNDEFINED> instruction: 0x200054b1
20000670:	fffffde4 			; <UNDEFINED> instruction: 0xfffffde4
20000674:	fffffed4 			; <UNDEFINED> instruction: 0xfffffed4
20000678:	fffffdc0 			; <UNDEFINED> instruction: 0xfffffdc0
2000067c:	fffffd9c 			; <UNDEFINED> instruction: 0xfffffd9c
20000680:	fffffd78 			; <UNDEFINED> instruction: 0xfffffd78
20000684:	fffffd54 			; <UNDEFINED> instruction: 0xfffffd54
20000688:	20002bf5 	strdcs	r2, [r0], -r5
2000068c:	fffffd30 			; <UNDEFINED> instruction: 0xfffffd30
20000690:	fffffc7c 			; <UNDEFINED> instruction: 0xfffffc7c
20000694:	4463      	add	r3, ip
20000696:	2232      	movs	r2, #50	; 0x32
20000698:	605a      	str	r2, [r3, #4]
	fire1_indoors.yPos = 64-12-7;
2000069a:	4bd5      	ldr	r3, [pc, #852]	; (200009f0 <main+0x7f4>)
2000069c:	22ad      	movs	r2, #173	; 0xad
2000069e:	00d2      	lsls	r2, r2, #3
200006a0:	4694      	mov	ip, r2
200006a2:	44bc      	add	ip, r7
200006a4:	4463      	add	r3, ip
200006a6:	222d      	movs	r2, #45	; 0x2d
200006a8:	609a      	str	r2, [r3, #8]
	fire1_indoors.update = gameObjectUpdate;
200006aa:	4bd1      	ldr	r3, [pc, #836]	; (200009f0 <main+0x7f4>)
200006ac:	22ad      	movs	r2, #173	; 0xad
200006ae:	00d2      	lsls	r2, r2, #3
200006b0:	4694      	mov	ip, r2
200006b2:	44bc      	add	ip, r7
200006b4:	4463      	add	r3, ip
200006b6:	4acf      	ldr	r2, [pc, #828]	; (200009f4 <main+0x7f8>)
200006b8:	60da      	str	r2, [r3, #12]
	GameObject fire2_indoors;
	init_fire( &fire2_indoors );
200006ba:	23e0      	movs	r3, #224	; 0xe0
200006bc:	005b      	lsls	r3, r3, #1
200006be:	18fb      	adds	r3, r7, r3
200006c0:	0018      	movs	r0, r3
200006c2:	f001 fcc7 	bl	20002054 <init_fire>
	fire2_indoors.update = gameObjectUpdate;
200006c6:	4bcc      	ldr	r3, [pc, #816]	; (200009f8 <main+0x7fc>)
200006c8:	22ad      	movs	r2, #173	; 0xad
200006ca:	00d2      	lsls	r2, r2, #3
200006cc:	4694      	mov	ip, r2
200006ce:	44bc      	add	ip, r7
200006d0:	4463      	add	r3, ip
200006d2:	4ac8      	ldr	r2, [pc, #800]	; (200009f4 <main+0x7f8>)
200006d4:	60da      	str	r2, [r3, #12]
	GameObject fire3_indoors;
	init_fire( &fire3_indoors );
200006d6:	23ce      	movs	r3, #206	; 0xce
200006d8:	005b      	lsls	r3, r3, #1
200006da:	18fb      	adds	r3, r7, r3
200006dc:	0018      	movs	r0, r3
200006de:	f001 fcb9 	bl	20002054 <init_fire>
	fire3_indoors.update = gameObjectUpdate;
200006e2:	4bc6      	ldr	r3, [pc, #792]	; (200009fc <main+0x800>)
200006e4:	22ad      	movs	r2, #173	; 0xad
200006e6:	00d2      	lsls	r2, r2, #3
200006e8:	4694      	mov	ip, r2
200006ea:	44bc      	add	ip, r7
200006ec:	4463      	add	r3, ip
200006ee:	4ac1      	ldr	r2, [pc, #772]	; (200009f4 <main+0x7f8>)
200006f0:	60da      	str	r2, [r3, #12]
	GameObject fires[] = {fire1_indoors, fire2_indoors, fire3_indoors};
200006f2:	4bc3      	ldr	r3, [pc, #780]	; (20000a00 <main+0x804>)
200006f4:	22ad      	movs	r2, #173	; 0xad
200006f6:	00d2      	lsls	r2, r2, #3
200006f8:	18ba      	adds	r2, r7, r2
200006fa:	18d1      	adds	r1, r2, r3
200006fc:	4bbc      	ldr	r3, [pc, #752]	; (200009f0 <main+0x7f4>)
200006fe:	22ad      	movs	r2, #173	; 0xad
20000700:	00d2      	lsls	r2, r2, #3
20000702:	18ba      	adds	r2, r7, r2
20000704:	18d2      	adds	r2, r2, r3
20000706:	000b      	movs	r3, r1
20000708:	ca13      	ldmia	r2!, {r0, r1, r4}
2000070a:	c313      	stmia	r3!, {r0, r1, r4}
2000070c:	ca13      	ldmia	r2!, {r0, r1, r4}
2000070e:	c313      	stmia	r3!, {r0, r1, r4}
20000710:	ca13      	ldmia	r2!, {r0, r1, r4}
20000712:	c313      	stmia	r3!, {r0, r1, r4}
20000714:	4bba      	ldr	r3, [pc, #744]	; (20000a00 <main+0x804>)
20000716:	22ad      	movs	r2, #173	; 0xad
20000718:	00d2      	lsls	r2, r2, #3
2000071a:	4694      	mov	ip, r2
2000071c:	44bc      	add	ip, r7
2000071e:	4463      	add	r3, ip
20000720:	4ab5      	ldr	r2, [pc, #724]	; (200009f8 <main+0x7fc>)
20000722:	21ad      	movs	r1, #173	; 0xad
20000724:	00c9      	lsls	r1, r1, #3
20000726:	468c      	mov	ip, r1
20000728:	44bc      	add	ip, r7
2000072a:	4462      	add	r2, ip
2000072c:	3324      	adds	r3, #36	; 0x24
2000072e:	ca13      	ldmia	r2!, {r0, r1, r4}
20000730:	c313      	stmia	r3!, {r0, r1, r4}
20000732:	ca13      	ldmia	r2!, {r0, r1, r4}
20000734:	c313      	stmia	r3!, {r0, r1, r4}
20000736:	ca13      	ldmia	r2!, {r0, r1, r4}
20000738:	c313      	stmia	r3!, {r0, r1, r4}
2000073a:	4bb1      	ldr	r3, [pc, #708]	; (20000a00 <main+0x804>)
2000073c:	22ad      	movs	r2, #173	; 0xad
2000073e:	00d2      	lsls	r2, r2, #3
20000740:	4694      	mov	ip, r2
20000742:	44bc      	add	ip, r7
20000744:	4463      	add	r3, ip
20000746:	4aad      	ldr	r2, [pc, #692]	; (200009fc <main+0x800>)
20000748:	21ad      	movs	r1, #173	; 0xad
2000074a:	00c9      	lsls	r1, r1, #3
2000074c:	468c      	mov	ip, r1
2000074e:	44bc      	add	ip, r7
20000750:	4462      	add	r2, ip
20000752:	3348      	adds	r3, #72	; 0x48
20000754:	ca13      	ldmia	r2!, {r0, r1, r4}
20000756:	c313      	stmia	r3!, {r0, r1, r4}
20000758:	ca13      	ldmia	r2!, {r0, r1, r4}
2000075a:	c313      	stmia	r3!, {r0, r1, r4}
2000075c:	ca13      	ldmia	r2!, {r0, r1, r4}
2000075e:	c313      	stmia	r3!, {r0, r1, r4}
	
	
	fire2.xPos = 98;
20000760:	4ba8      	ldr	r3, [pc, #672]	; (20000a04 <main+0x808>)
20000762:	22ad      	movs	r2, #173	; 0xad
20000764:	00d2      	lsls	r2, r2, #3
20000766:	4694      	mov	ip, r2
20000768:	44bc      	add	ip, r7
2000076a:	4463      	add	r3, ip
2000076c:	2262      	movs	r2, #98	; 0x62
2000076e:	605a      	str	r2, [r3, #4]
	fire2.yPos = 26-12;
20000770:	4ba4      	ldr	r3, [pc, #656]	; (20000a04 <main+0x808>)
20000772:	22ad      	movs	r2, #173	; 0xad
20000774:	00d2      	lsls	r2, r2, #3
20000776:	4694      	mov	ip, r2
20000778:	44bc      	add	ip, r7
2000077a:	4463      	add	r3, ip
2000077c:	220e      	movs	r2, #14
2000077e:	609a      	str	r2, [r3, #8]
	fire3.xPos = 115;
20000780:	4ba1      	ldr	r3, [pc, #644]	; (20000a08 <main+0x80c>)
20000782:	22ad      	movs	r2, #173	; 0xad
20000784:	00d2      	lsls	r2, r2, #3
20000786:	4694      	mov	ip, r2
20000788:	44bc      	add	ip, r7
2000078a:	4463      	add	r3, ip
2000078c:	2273      	movs	r2, #115	; 0x73
2000078e:	605a      	str	r2, [r3, #4]
	fire3.yPos = 34-12;
20000790:	4b9d      	ldr	r3, [pc, #628]	; (20000a08 <main+0x80c>)
20000792:	22ad      	movs	r2, #173	; 0xad
20000794:	00d2      	lsls	r2, r2, #3
20000796:	4694      	mov	ip, r2
20000798:	44bc      	add	ip, r7
2000079a:	4463      	add	r3, ip
2000079c:	2216      	movs	r2, #22
2000079e:	609a      	str	r2, [r3, #8]
	
	fire1.xPos = 85;
200007a0:	4b9a      	ldr	r3, [pc, #616]	; (20000a0c <main+0x810>)
200007a2:	22ad      	movs	r2, #173	; 0xad
200007a4:	00d2      	lsls	r2, r2, #3
200007a6:	4694      	mov	ip, r2
200007a8:	44bc      	add	ip, r7
200007aa:	4463      	add	r3, ip
200007ac:	2255      	movs	r2, #85	; 0x55
200007ae:	605a      	str	r2, [r3, #4]
	fire1.yPos = 23-12;
200007b0:	4b96      	ldr	r3, [pc, #600]	; (20000a0c <main+0x810>)
200007b2:	22ad      	movs	r2, #173	; 0xad
200007b4:	00d2      	lsls	r2, r2, #3
200007b6:	4694      	mov	ip, r2
200007b8:	44bc      	add	ip, r7
200007ba:	4463      	add	r3, ip
200007bc:	220b      	movs	r2, #11
200007be:	609a      	str	r2, [r3, #8]
	fire4.xPos = 71;
200007c0:	4b93      	ldr	r3, [pc, #588]	; (20000a10 <main+0x814>)
200007c2:	22ad      	movs	r2, #173	; 0xad
200007c4:	00d2      	lsls	r2, r2, #3
200007c6:	4694      	mov	ip, r2
200007c8:	44bc      	add	ip, r7
200007ca:	4463      	add	r3, ip
200007cc:	2247      	movs	r2, #71	; 0x47
200007ce:	605a      	str	r2, [r3, #4]
	fire4.yPos = 27-11;
200007d0:	4b8f      	ldr	r3, [pc, #572]	; (20000a10 <main+0x814>)
200007d2:	22ad      	movs	r2, #173	; 0xad
200007d4:	00d2      	lsls	r2, r2, #3
200007d6:	4694      	mov	ip, r2
200007d8:	44bc      	add	ip, r7
200007da:	4463      	add	r3, ip
200007dc:	2210      	movs	r2, #16
200007de:	609a      	str	r2, [r3, #8]
	//draw_game_object(&castleObj);
	
	fire2.animation_speed = 2;
200007e0:	4b88      	ldr	r3, [pc, #544]	; (20000a04 <main+0x808>)
200007e2:	22ad      	movs	r2, #173	; 0xad
200007e4:	00d2      	lsls	r2, r2, #3
200007e6:	4694      	mov	ip, r2
200007e8:	44bc      	add	ip, r7
200007ea:	4463      	add	r3, ip
200007ec:	2202      	movs	r2, #2
200007ee:	61da      	str	r2, [r3, #28]
	fire3.animation_speed = 2;
200007f0:	4b85      	ldr	r3, [pc, #532]	; (20000a08 <main+0x80c>)
200007f2:	22ad      	movs	r2, #173	; 0xad
200007f4:	00d2      	lsls	r2, r2, #3
200007f6:	4694      	mov	ip, r2
200007f8:	44bc      	add	ip, r7
200007fa:	4463      	add	r3, ip
200007fc:	2202      	movs	r2, #2
200007fe:	61da      	str	r2, [r3, #28]
	fire1.animation_speed = 2;
20000800:	4b82      	ldr	r3, [pc, #520]	; (20000a0c <main+0x810>)
20000802:	22ad      	movs	r2, #173	; 0xad
20000804:	00d2      	lsls	r2, r2, #3
20000806:	4694      	mov	ip, r2
20000808:	44bc      	add	ip, r7
2000080a:	4463      	add	r3, ip
2000080c:	2202      	movs	r2, #2
2000080e:	61da      	str	r2, [r3, #28]
	fire4.animation_speed = 2;
20000810:	4b7f      	ldr	r3, [pc, #508]	; (20000a10 <main+0x814>)
20000812:	22ad      	movs	r2, #173	; 0xad
20000814:	00d2      	lsls	r2, r2, #3
20000816:	4694      	mov	ip, r2
20000818:	44bc      	add	ip, r7
2000081a:	4463      	add	r3, ip
2000081c:	2202      	movs	r2, #2
2000081e:	61da      	str	r2, [r3, #28]
	
	fire2.update = gameObjectUpdate;
20000820:	4b78      	ldr	r3, [pc, #480]	; (20000a04 <main+0x808>)
20000822:	22ad      	movs	r2, #173	; 0xad
20000824:	00d2      	lsls	r2, r2, #3
20000826:	4694      	mov	ip, r2
20000828:	44bc      	add	ip, r7
2000082a:	4463      	add	r3, ip
2000082c:	4a71      	ldr	r2, [pc, #452]	; (200009f4 <main+0x7f8>)
2000082e:	60da      	str	r2, [r3, #12]
	fire3.update = gameObjectUpdate;
20000830:	4b75      	ldr	r3, [pc, #468]	; (20000a08 <main+0x80c>)
20000832:	22ad      	movs	r2, #173	; 0xad
20000834:	00d2      	lsls	r2, r2, #3
20000836:	4694      	mov	ip, r2
20000838:	44bc      	add	ip, r7
2000083a:	4463      	add	r3, ip
2000083c:	4a6d      	ldr	r2, [pc, #436]	; (200009f4 <main+0x7f8>)
2000083e:	60da      	str	r2, [r3, #12]
	fire1.update = gameObjectUpdate;
20000840:	4b72      	ldr	r3, [pc, #456]	; (20000a0c <main+0x810>)
20000842:	22ad      	movs	r2, #173	; 0xad
20000844:	00d2      	lsls	r2, r2, #3
20000846:	4694      	mov	ip, r2
20000848:	44bc      	add	ip, r7
2000084a:	4463      	add	r3, ip
2000084c:	4a69      	ldr	r2, [pc, #420]	; (200009f4 <main+0x7f8>)
2000084e:	60da      	str	r2, [r3, #12]
	fire4.update = gameObjectUpdate;
20000850:	4b6f      	ldr	r3, [pc, #444]	; (20000a10 <main+0x814>)
20000852:	22ad      	movs	r2, #173	; 0xad
20000854:	00d2      	lsls	r2, r2, #3
20000856:	4694      	mov	ip, r2
20000858:	44bc      	add	ip, r7
2000085a:	4463      	add	r3, ip
2000085c:	4a65      	ldr	r2, [pc, #404]	; (200009f4 <main+0x7f8>)
2000085e:	60da      	str	r2, [r3, #12]
	SlowText text8;
	SlowText text9;
	SlowText text10;
	SlowText text11;
	SlowText text12;
	init_slow_text(&text_kra, "*KRA!* *KRA!*", "   ", 1);
20000860:	4a6c      	ldr	r2, [pc, #432]	; (20000a14 <main+0x818>)
20000862:	496d      	ldr	r1, [pc, #436]	; (20000a18 <main+0x81c>)
20000864:	23f4      	movs	r3, #244	; 0xf4
20000866:	18f8      	adds	r0, r7, r3
20000868:	2301      	movs	r3, #1
2000086a:	f004 f9b6 	bl	20004bda <init_slow_text>
	init_slow_text(&text1, "For centuries the", "DILs-witches have", 1);
2000086e:	4a6b      	ldr	r2, [pc, #428]	; (20000a1c <main+0x820>)
20000870:	496b      	ldr	r1, [pc, #428]	; (20000a20 <main+0x824>)
20000872:	23e0      	movs	r3, #224	; 0xe0
20000874:	18f8      	adds	r0, r7, r3
20000876:	2301      	movs	r3, #1
20000878:	f004 f9af 	bl	20004bda <init_slow_text>
	init_slow_text(&text2, "coiled in fear,", "    ", 1);
2000087c:	4a69      	ldr	r2, [pc, #420]	; (20000a24 <main+0x828>)
2000087e:	496a      	ldr	r1, [pc, #424]	; (20000a28 <main+0x82c>)
20000880:	23cc      	movs	r3, #204	; 0xcc
20000882:	18f8      	adds	r0, r7, r3
20000884:	2301      	movs	r3, #1
20000886:	f004 f9a8 	bl	20004bda <init_slow_text>
	init_slow_text(&text3, "whenever they hear", "that a DIPs-witch", 1);
2000088a:	4a68      	ldr	r2, [pc, #416]	; (20000a2c <main+0x830>)
2000088c:	4968      	ldr	r1, [pc, #416]	; (20000a30 <main+0x834>)
2000088e:	23b8      	movs	r3, #184	; 0xb8
20000890:	18f8      	adds	r0, r7, r3
20000892:	2301      	movs	r3, #1
20000894:	f004 f9a1 	bl	20004bda <init_slow_text>
	init_slow_text(&text4, "is near.", "   ", 1);
20000898:	4a5e      	ldr	r2, [pc, #376]	; (20000a14 <main+0x818>)
2000089a:	4966      	ldr	r1, [pc, #408]	; (20000a34 <main+0x838>)
2000089c:	23a4      	movs	r3, #164	; 0xa4
2000089e:	18f8      	adds	r0, r7, r3
200008a0:	2301      	movs	r3, #1
200008a2:	f004 f99a 	bl	20004bda <init_slow_text>
	init_slow_text(&text5, "So it is quite", "surprising, finding", 1);
200008a6:	4a64      	ldr	r2, [pc, #400]	; (20000a38 <main+0x83c>)
200008a8:	4964      	ldr	r1, [pc, #400]	; (20000a3c <main+0x840>)
200008aa:	2390      	movs	r3, #144	; 0x90
200008ac:	18f8      	adds	r0, r7, r3
200008ae:	2301      	movs	r3, #1
200008b0:	f004 f993 	bl	20004bda <init_slow_text>
	init_slow_text(&text6, "you here,", "    ", 1);
200008b4:	4a5b      	ldr	r2, [pc, #364]	; (20000a24 <main+0x828>)
200008b6:	4962      	ldr	r1, [pc, #392]	; (20000a40 <main+0x844>)
200008b8:	237c      	movs	r3, #124	; 0x7c
200008ba:	18f8      	adds	r0, r7, r3
200008bc:	2301      	movs	r3, #1
200008be:	f004 f98c 	bl	20004bda <init_slow_text>
	init_slow_text(&text7, "queen Daffo of DILs,", "heir to king Lear.", 1);
200008c2:	4a60      	ldr	r2, [pc, #384]	; (20000a44 <main+0x848>)
200008c4:	4960      	ldr	r1, [pc, #384]	; (20000a48 <main+0x84c>)
200008c6:	2368      	movs	r3, #104	; 0x68
200008c8:	18f8      	adds	r0, r7, r3
200008ca:	2301      	movs	r3, #1
200008cc:	f004 f985 	bl	20004bda <init_slow_text>
	init_slow_text(&text8, "But maybe you're", "tempted, to loot", 1);
200008d0:	4a5e      	ldr	r2, [pc, #376]	; (20000a4c <main+0x850>)
200008d2:	495f      	ldr	r1, [pc, #380]	; (20000a50 <main+0x854>)
200008d4:	2354      	movs	r3, #84	; 0x54
200008d6:	18f8      	adds	r0, r7, r3
200008d8:	2301      	movs	r3, #1
200008da:	f004 f97e 	bl	20004bda <init_slow_text>
	init_slow_text(&text9, "from the riches,", "    ", 1);
200008de:	4a51      	ldr	r2, [pc, #324]	; (20000a24 <main+0x828>)
200008e0:	495c      	ldr	r1, [pc, #368]	; (20000a54 <main+0x858>)
200008e2:	2340      	movs	r3, #64	; 0x40
200008e4:	18f8      	adds	r0, r7, r3
200008e6:	2301      	movs	r3, #1
200008e8:	f004 f977 	bl	20004bda <init_slow_text>
	init_slow_text(&text12, "wicked DIPs-witches.", "    ", 1);
200008ec:	4a4d      	ldr	r2, [pc, #308]	; (20000a24 <main+0x828>)
200008ee:	495a      	ldr	r1, [pc, #360]	; (20000a58 <main+0x85c>)
200008f0:	1d38      	adds	r0, r7, #4
200008f2:	2301      	movs	r3, #1
200008f4:	f004 f971 	bl	20004bda <init_slow_text>
	init_slow_text(&text10, "so grippily trea-", "sured by", 1);
200008f8:	4a58      	ldr	r2, [pc, #352]	; (20000a5c <main+0x860>)
200008fa:	4959      	ldr	r1, [pc, #356]	; (20000a60 <main+0x864>)
200008fc:	232c      	movs	r3, #44	; 0x2c
200008fe:	18f8      	adds	r0, r7, r3
20000900:	2301      	movs	r3, #1
20000902:	f004 f96a 	bl	20004bda <init_slow_text>
	init_slow_text(&text11, "Enter, brave witch,", "- reset the switch!", 1);
20000906:	4a57      	ldr	r2, [pc, #348]	; (20000a64 <main+0x868>)
20000908:	4957      	ldr	r1, [pc, #348]	; (20000a68 <main+0x86c>)
2000090a:	2318      	movs	r3, #24
2000090c:	18f8      	adds	r0, r7, r3
2000090e:	2301      	movs	r3, #1
20000910:	f004 f963 	bl	20004bda <init_slow_text>
	init_slow_text(&textGameOver, "DIPs-WITCH:","HAHAHAHAHAAAAAAAA!!!", 1);
20000914:	4a55      	ldr	r2, [pc, #340]	; (20000a6c <main+0x870>)
20000916:	4956      	ldr	r1, [pc, #344]	; (20000a70 <main+0x874>)
20000918:	238e      	movs	r3, #142	; 0x8e
2000091a:	005b      	lsls	r3, r3, #1
2000091c:	18f8      	adds	r0, r7, r3
2000091e:	2301      	movs	r3, #1
20000920:	f004 f95b 	bl	20004bda <init_slow_text>
	init_slow_text(&textWin, "Roger (King Lear): ","I am proud of you.", 1);
20000924:	4a53      	ldr	r2, [pc, #332]	; (20000a74 <main+0x878>)
20000926:	4954      	ldr	r1, [pc, #336]	; (20000a78 <main+0x87c>)
20000928:	2384      	movs	r3, #132	; 0x84
2000092a:	005b      	lsls	r3, r3, #1
2000092c:	18f8      	adds	r0, r7, r3
2000092e:	2301      	movs	r3, #1
20000930:	f004 f953 	bl	20004bda <init_slow_text>
	//ascii_write_part("Yeeaaah!!!", "This is working! :)", 5, 10);
	set_up_ascii();
20000934:	f004 f82e 	bl	20004994 <set_up_ascii>
	set_up_DIL();
20000938:	f003 fe5c 	bl	200045f4 <set_up_DIL>
	clear_ascii();
2000093c:	f004 f833 	bl	200049a6 <clear_ascii>
	
	int game_over_counter = 0;
20000940:	2300      	movs	r3, #0
20000942:	4a4e      	ldr	r2, [pc, #312]	; (20000a7c <main+0x880>)
20000944:	18ba      	adds	r2, r7, r2
20000946:	6013      	str	r3, [r2, #0]
	int is_climbing = 0;
20000948:	2300      	movs	r3, #0
2000094a:	22ac      	movs	r2, #172	; 0xac
2000094c:	00d2      	lsls	r2, r2, #3
2000094e:	18ba      	adds	r2, r7, r2
20000950:	6013      	str	r3, [r2, #0]
	int has_climbed = 0;
20000952:	2300      	movs	r3, #0
20000954:	4a4a      	ldr	r2, [pc, #296]	; (20000a80 <main+0x884>)
20000956:	18ba      	adds	r2, r7, r2
20000958:	6013      	str	r3, [r2, #0]
	int game_over = 0;
2000095a:	2300      	movs	r3, #0
2000095c:	22ab      	movs	r2, #171	; 0xab
2000095e:	00d2      	lsls	r2, r2, #3
20000960:	18ba      	adds	r2, r7, r2
20000962:	6013      	str	r3, [r2, #0]
	int game_over_adder = 0;
20000964:	2300      	movs	r3, #0
20000966:	4a47      	ldr	r2, [pc, #284]	; (20000a84 <main+0x888>)
20000968:	18ba      	adds	r2, r7, r2
2000096a:	6013      	str	r3, [r2, #0]
	int no_DIP = 0;
2000096c:	2300      	movs	r3, #0
2000096e:	22aa      	movs	r2, #170	; 0xaa
20000970:	00d2      	lsls	r2, r2, #3
20000972:	18ba      	adds	r2, r7, r2
20000974:	6013      	str	r3, [r2, #0]
	int exploding = 0;
20000976:	2300      	movs	r3, #0
20000978:	4a43      	ldr	r2, [pc, #268]	; (20000a88 <main+0x88c>)
2000097a:	18ba      	adds	r2, r7, r2
2000097c:	6013      	str	r3, [r2, #0]
	int first = 1;
2000097e:	2301      	movs	r3, #1
20000980:	22a9      	movs	r2, #169	; 0xa9
20000982:	00d2      	lsls	r2, r2, #3
20000984:	18ba      	adds	r2, r7, r2
20000986:	6013      	str	r3, [r2, #0]
	int lastFireTrigger = 0;
20000988:	2300      	movs	r3, #0
2000098a:	4a40      	ldr	r2, [pc, #256]	; (20000a8c <main+0x890>)
2000098c:	18ba      	adds	r2, r7, r2
2000098e:	6013      	str	r3, [r2, #0]
	int dragonAlive = 1;
20000990:	2301      	movs	r3, #1
20000992:	22a8      	movs	r2, #168	; 0xa8
20000994:	00d2      	lsls	r2, r2, #3
20000996:	18ba      	adds	r2, r7, r2
20000998:	6013      	str	r3, [r2, #0]
	int dragonDirection = -1;
2000099a:	2301      	movs	r3, #1
2000099c:	425b      	negs	r3, r3
2000099e:	4a3c      	ldr	r2, [pc, #240]	; (20000a90 <main+0x894>)
200009a0:	18ba      	adds	r2, r7, r2
200009a2:	6013      	str	r3, [r2, #0]
	int dragonStarted = 0;
200009a4:	2300      	movs	r3, #0
200009a6:	22a7      	movs	r2, #167	; 0xa7
200009a8:	00d2      	lsls	r2, r2, #3
200009aa:	18ba      	adds	r2, r7, r2
200009ac:	6013      	str	r3, [r2, #0]
		
	current_screen = RESET_GAME;
200009ae:	4b39      	ldr	r3, [pc, #228]	; (20000a94 <main+0x898>)
200009b0:	220a      	movs	r2, #10
200009b2:	601a      	str	r2, [r3, #0]
	
	//Game loop
	while(1) {
			
		switch(current_screen) {
200009b4:	4b37      	ldr	r3, [pc, #220]	; (20000a94 <main+0x898>)
200009b6:	681b      	ldr	r3, [r3, #0]
200009b8:	2b0a      	cmp	r3, #10
200009ba:	d8fb      	bhi.n	200009b4 <main+0x7b8>
200009bc:	009a      	lsls	r2, r3, #2
200009be:	4b36      	ldr	r3, [pc, #216]	; (20000a98 <main+0x89c>)
200009c0:	18d3      	adds	r3, r2, r3
200009c2:	681b      	ldr	r3, [r3, #0]
200009c4:	469f      	mov	pc, r3
			
			case SWITCH_LOCK: //before

				while(read_DIL() == 0){
					draw_game_object(&pressObj);
200009c6:	4b35      	ldr	r3, [pc, #212]	; (20000a9c <main+0x8a0>)
200009c8:	18fb      	adds	r3, r7, r3
200009ca:	0018      	movs	r0, r3
200009cc:	f003 fd74 	bl	200044b8 <draw_game_object>
					show_frame(1);
200009d0:	2001      	movs	r0, #1
200009d2:	f003 fdb2 	bl	2000453a <show_frame>
				while(read_DIL() == 0){
200009d6:	f003 fe19 	bl	2000460c <read_DIL>
200009da:	1e03      	subs	r3, r0, #0
200009dc:	d0f3      	beq.n	200009c6 <main+0x7ca>
				}
				
				counter = 0;
200009de:	4b30      	ldr	r3, [pc, #192]	; (20000aa0 <main+0x8a4>)
200009e0:	2200      	movs	r2, #0
200009e2:	601a      	str	r2, [r3, #0]
				current_screen = START_SCREEN;
200009e4:	4b2b      	ldr	r3, [pc, #172]	; (20000a94 <main+0x898>)
200009e6:	2201      	movs	r2, #1
200009e8:	601a      	str	r2, [r3, #0]
				break;
200009ea:	f001 fa03 	bl	20001df4 <main+0x1bf8>
200009ee:	46c0      	nop			; (mov r8, r8)
200009f0:	fffffc7c 			; <UNDEFINED> instruction: 0xfffffc7c
200009f4:	20001e89 	andcs	r1, r0, r9, lsl #29
200009f8:	fffffc58 			; <UNDEFINED> instruction: 0xfffffc58
200009fc:	fffffc34 			; <UNDEFINED> instruction: 0xfffffc34
20000a00:	fffffbc8 			; <UNDEFINED> instruction: 0xfffffbc8
20000a04:	fffffd0c 			; <UNDEFINED> instruction: 0xfffffd0c
20000a08:	fffffce8 			; <UNDEFINED> instruction: 0xfffffce8
20000a0c:	fffffca0 			; <UNDEFINED> instruction: 0xfffffca0
20000a10:	fffffcc4 			; <UNDEFINED> instruction: 0xfffffcc4
20000a14:	2001555c 	andcs	r5, r1, ip, asr r5
20000a18:	20015560 	andcs	r5, r1, r0, ror #10
20000a1c:	20015570 	andcs	r5, r1, r0, ror r5
20000a20:	20015584 	andcs	r5, r1, r4, lsl #11
20000a24:	20015598 	mulcs	r1, r8, r5
20000a28:	200155a0 	andcs	r5, r1, r0, lsr #11
20000a2c:	200155b0 			; <UNDEFINED> instruction: 0x200155b0
20000a30:	200155c4 	andcs	r5, r1, r4, asr #11
20000a34:	200155d8 	ldrdcs	r5, [r1], -r8
20000a38:	200155e4 	andcs	r5, r1, r4, ror #11
20000a3c:	200155f8 	strdcs	r5, [r1], -r8
20000a40:	20015608 	andcs	r5, r1, r8, lsl #12
20000a44:	20015614 	andcs	r5, r1, r4, lsl r6
20000a48:	20015628 	andcs	r5, r1, r8, lsr #12
20000a4c:	20015640 	andcs	r5, r1, r0, asr #12
20000a50:	20015654 	andcs	r5, r1, r4, asr r6
20000a54:	20015668 	andcs	r5, r1, r8, ror #12
20000a58:	2001567c 	andcs	r5, r1, ip, ror r6
20000a5c:	20015694 	mulcs	r1, r4, r6
20000a60:	200156a0 	andcs	r5, r1, r0, lsr #13
20000a64:	200156b4 			; <UNDEFINED> instruction: 0x200156b4
20000a68:	200156c8 	andcs	r5, r1, r8, asr #13
20000a6c:	200156dc 	ldrdcs	r5, [r1], -ip
20000a70:	200156f4 	strdcs	r5, [r1], -r4
20000a74:	20015700 	andcs	r5, r1, r0, lsl #14
20000a78:	20015714 	andcs	r5, r1, r4, lsl r7
20000a7c:	00000564 	andeq	r0, r0, r4, ror #10
20000a80:	0000055c 	andeq	r0, r0, ip, asr r5
20000a84:	00000554 	andeq	r0, r0, r4, asr r5
20000a88:	0000054c 	andeq	r0, r0, ip, asr #10
20000a8c:	00000544 	andeq	r0, r0, r4, asr #10
20000a90:	0000053c 	andeq	r0, r0, ip, lsr r5
20000a94:	20009b14 	andcs	r9, r0, r4, lsl fp
20000a98:	20015838 	andcs	r5, r1, r8, lsr r8
20000a9c:	0000049c 	muleq	r0, ip, r4
20000aa0:	2000573c 	andcs	r5, r0, ip, lsr r7
			
			
			case START_SCREEN: //outside
				
				counter++;
20000aa4:	4be5      	ldr	r3, [pc, #916]	; (20000e3c <main+0xc40>)
20000aa6:	681b      	ldr	r3, [r3, #0]
20000aa8:	1c5a      	adds	r2, r3, #1
20000aaa:	4be4      	ldr	r3, [pc, #912]	; (20000e3c <main+0xc40>)
20000aac:	601a      	str	r2, [r3, #0]
				
				if(titleObj.yPos < 1) {
20000aae:	239b      	movs	r3, #155	; 0x9b
20000ab0:	00db      	lsls	r3, r3, #3
20000ab2:	18fb      	adds	r3, r7, r3
20000ab4:	689b      	ldr	r3, [r3, #8]
20000ab6:	2b00      	cmp	r3, #0
20000ab8:	dc08      	bgt.n	20000acc <main+0x8d0>
					titleObj.yPos++;
20000aba:	239b      	movs	r3, #155	; 0x9b
20000abc:	00db      	lsls	r3, r3, #3
20000abe:	18fb      	adds	r3, r7, r3
20000ac0:	689b      	ldr	r3, [r3, #8]
20000ac2:	1c5a      	adds	r2, r3, #1
20000ac4:	239b      	movs	r3, #155	; 0x9b
20000ac6:	00db      	lsls	r3, r3, #3
20000ac8:	18fb      	adds	r3, r7, r3
20000aca:	609a      	str	r2, [r3, #8]
				}
				
				draw_game_object(&castleObj);
20000acc:	238c      	movs	r3, #140	; 0x8c
20000ace:	00db      	lsls	r3, r3, #3
20000ad0:	18fb      	adds	r3, r7, r3
20000ad2:	0018      	movs	r0, r3
20000ad4:	f003 fcf0 	bl	200044b8 <draw_game_object>
				draw_game_object(&fire2);
20000ad8:	239d      	movs	r3, #157	; 0x9d
20000ada:	009b      	lsls	r3, r3, #2
20000adc:	18fb      	adds	r3, r7, r3
20000ade:	0018      	movs	r0, r3
20000ae0:	f003 fcea 	bl	200044b8 <draw_game_object>
				draw_game_object(&fire3);
20000ae4:	2394      	movs	r3, #148	; 0x94
20000ae6:	009b      	lsls	r3, r3, #2
20000ae8:	18fb      	adds	r3, r7, r3
20000aea:	0018      	movs	r0, r3
20000aec:	f003 fce4 	bl	200044b8 <draw_game_object>
				draw_game_object(&fire1);
20000af0:	2382      	movs	r3, #130	; 0x82
20000af2:	009b      	lsls	r3, r3, #2
20000af4:	18fb      	adds	r3, r7, r3
20000af6:	0018      	movs	r0, r3
20000af8:	f003 fcde 	bl	200044b8 <draw_game_object>
				draw_game_object(&fire4);
20000afc:	238b      	movs	r3, #139	; 0x8b
20000afe:	009b      	lsls	r3, r3, #2
20000b00:	18fb      	adds	r3, r7, r3
20000b02:	0018      	movs	r0, r3
20000b04:	f003 fcd8 	bl	200044b8 <draw_game_object>
				draw_game_object(&titleObj);
20000b08:	239b      	movs	r3, #155	; 0x9b
20000b0a:	00db      	lsls	r3, r3, #3
20000b0c:	18fb      	adds	r3, r7, r3
20000b0e:	0018      	movs	r0, r3
20000b10:	f003 fcd2 	bl	200044b8 <draw_game_object>
				draw_game_object(&bird);
20000b14:	23ca      	movs	r3, #202	; 0xca
20000b16:	009b      	lsls	r3, r3, #2
20000b18:	18fb      	adds	r3, r7, r3
20000b1a:	0018      	movs	r0, r3
20000b1c:	f003 fccc 	bl	200044b8 <draw_game_object>
				show_frame(1);
20000b20:	2001      	movs	r0, #1
20000b22:	f003 fd0a 	bl	2000453a <show_frame>
				
				static int long_text = 40;
				static int short_text = 20;
				static int delay_until_text = 130;
				
				if (counter < delay_until_text - 55 && counter > delay_until_text - 90)
20000b26:	4bc6      	ldr	r3, [pc, #792]	; (20000e40 <main+0xc44>)
20000b28:	681b      	ldr	r3, [r3, #0]
20000b2a:	3b37      	subs	r3, #55	; 0x37
20000b2c:	001a      	movs	r2, r3
20000b2e:	4bc3      	ldr	r3, [pc, #780]	; (20000e3c <main+0xc40>)
20000b30:	681b      	ldr	r3, [r3, #0]
20000b32:	429a      	cmp	r2, r3
20000b34:	dd13      	ble.n	20000b5e <main+0x962>
20000b36:	4bc2      	ldr	r3, [pc, #776]	; (20000e40 <main+0xc44>)
20000b38:	681b      	ldr	r3, [r3, #0]
20000b3a:	3b5a      	subs	r3, #90	; 0x5a
20000b3c:	001a      	movs	r2, r3
20000b3e:	4bbf      	ldr	r3, [pc, #764]	; (20000e3c <main+0xc40>)
20000b40:	681b      	ldr	r3, [r3, #0]
20000b42:	429a      	cmp	r2, r3
20000b44:	da0b      	bge.n	20000b5e <main+0x962>
					text_kra.display(&text_kra, 20);
20000b46:	4bbf      	ldr	r3, [pc, #764]	; (20000e44 <main+0xc48>)
20000b48:	22ad      	movs	r2, #173	; 0xad
20000b4a:	00d2      	lsls	r2, r2, #3
20000b4c:	4694      	mov	ip, r2
20000b4e:	44bc      	add	ip, r7
20000b50:	4463      	add	r3, ip
20000b52:	691b      	ldr	r3, [r3, #16]
20000b54:	22f4      	movs	r2, #244	; 0xf4
20000b56:	18ba      	adds	r2, r7, r2
20000b58:	2114      	movs	r1, #20
20000b5a:	0010      	movs	r0, r2
20000b5c:	4798      	blx	r3
				if (counter == delay_until_text - 25)
20000b5e:	4bb8      	ldr	r3, [pc, #736]	; (20000e40 <main+0xc44>)
20000b60:	681b      	ldr	r3, [r3, #0]
20000b62:	3b19      	subs	r3, #25
20000b64:	001a      	movs	r2, r3
20000b66:	4bb5      	ldr	r3, [pc, #724]	; (20000e3c <main+0xc40>)
20000b68:	681b      	ldr	r3, [r3, #0]
20000b6a:	429a      	cmp	r2, r3
20000b6c:	d101      	bne.n	20000b72 <main+0x976>
					clear_ascii();
20000b6e:	f003 ff1a 	bl	200049a6 <clear_ascii>
				
				if (counter < delay_until_text);
20000b72:	4bb2      	ldr	r3, [pc, #712]	; (20000e3c <main+0xc40>)
20000b74:	681a      	ldr	r2, [r3, #0]
20000b76:	4bb2      	ldr	r3, [pc, #712]	; (20000e40 <main+0xc44>)
20000b78:	681b      	ldr	r3, [r3, #0]
20000b7a:	429a      	cmp	r2, r3
20000b7c:	da00      	bge.n	20000b80 <main+0x984>
20000b7e:	e193      	b.n	20000ea8 <main+0xcac>
				else if (counter < delay_until_text + 1*long_text)
20000b80:	4baf      	ldr	r3, [pc, #700]	; (20000e40 <main+0xc44>)
20000b82:	681a      	ldr	r2, [r3, #0]
20000b84:	4bb0      	ldr	r3, [pc, #704]	; (20000e48 <main+0xc4c>)
20000b86:	681b      	ldr	r3, [r3, #0]
20000b88:	18d2      	adds	r2, r2, r3
20000b8a:	4bac      	ldr	r3, [pc, #688]	; (20000e3c <main+0xc40>)
20000b8c:	681b      	ldr	r3, [r3, #0]
20000b8e:	429a      	cmp	r2, r3
20000b90:	dd0c      	ble.n	20000bac <main+0x9b0>
					text1.display(&text1, 20);
20000b92:	4bae      	ldr	r3, [pc, #696]	; (20000e4c <main+0xc50>)
20000b94:	22ad      	movs	r2, #173	; 0xad
20000b96:	00d2      	lsls	r2, r2, #3
20000b98:	4694      	mov	ip, r2
20000b9a:	44bc      	add	ip, r7
20000b9c:	4463      	add	r3, ip
20000b9e:	691b      	ldr	r3, [r3, #16]
20000ba0:	22e0      	movs	r2, #224	; 0xe0
20000ba2:	18ba      	adds	r2, r7, r2
20000ba4:	2114      	movs	r1, #20
20000ba6:	0010      	movs	r0, r2
20000ba8:	4798      	blx	r3
20000baa:	e17d      	b.n	20000ea8 <main+0xcac>
				else if(counter < delay_until_text + 1*long_text + 1*short_text)
20000bac:	4ba4      	ldr	r3, [pc, #656]	; (20000e40 <main+0xc44>)
20000bae:	681a      	ldr	r2, [r3, #0]
20000bb0:	4ba5      	ldr	r3, [pc, #660]	; (20000e48 <main+0xc4c>)
20000bb2:	681b      	ldr	r3, [r3, #0]
20000bb4:	18d2      	adds	r2, r2, r3
20000bb6:	4ba6      	ldr	r3, [pc, #664]	; (20000e50 <main+0xc54>)
20000bb8:	681b      	ldr	r3, [r3, #0]
20000bba:	18d2      	adds	r2, r2, r3
20000bbc:	4b9f      	ldr	r3, [pc, #636]	; (20000e3c <main+0xc40>)
20000bbe:	681b      	ldr	r3, [r3, #0]
20000bc0:	429a      	cmp	r2, r3
20000bc2:	dd0c      	ble.n	20000bde <main+0x9e2>
					text2.display(&text2, 20);
20000bc4:	4ba3      	ldr	r3, [pc, #652]	; (20000e54 <main+0xc58>)
20000bc6:	22ad      	movs	r2, #173	; 0xad
20000bc8:	00d2      	lsls	r2, r2, #3
20000bca:	4694      	mov	ip, r2
20000bcc:	44bc      	add	ip, r7
20000bce:	4463      	add	r3, ip
20000bd0:	691b      	ldr	r3, [r3, #16]
20000bd2:	22cc      	movs	r2, #204	; 0xcc
20000bd4:	18ba      	adds	r2, r7, r2
20000bd6:	2114      	movs	r1, #20
20000bd8:	0010      	movs	r0, r2
20000bda:	4798      	blx	r3
20000bdc:	e164      	b.n	20000ea8 <main+0xcac>
				else if(counter < delay_until_text + 2*long_text + 1*short_text)
20000bde:	4b9a      	ldr	r3, [pc, #616]	; (20000e48 <main+0xc4c>)
20000be0:	681b      	ldr	r3, [r3, #0]
20000be2:	005a      	lsls	r2, r3, #1
20000be4:	4b96      	ldr	r3, [pc, #600]	; (20000e40 <main+0xc44>)
20000be6:	681b      	ldr	r3, [r3, #0]
20000be8:	18d2      	adds	r2, r2, r3
20000bea:	4b99      	ldr	r3, [pc, #612]	; (20000e50 <main+0xc54>)
20000bec:	681b      	ldr	r3, [r3, #0]
20000bee:	18d2      	adds	r2, r2, r3
20000bf0:	4b92      	ldr	r3, [pc, #584]	; (20000e3c <main+0xc40>)
20000bf2:	681b      	ldr	r3, [r3, #0]
20000bf4:	429a      	cmp	r2, r3
20000bf6:	dd0c      	ble.n	20000c12 <main+0xa16>
					text3.display(&text3, 20);
20000bf8:	4b97      	ldr	r3, [pc, #604]	; (20000e58 <main+0xc5c>)
20000bfa:	22ad      	movs	r2, #173	; 0xad
20000bfc:	00d2      	lsls	r2, r2, #3
20000bfe:	4694      	mov	ip, r2
20000c00:	44bc      	add	ip, r7
20000c02:	4463      	add	r3, ip
20000c04:	691b      	ldr	r3, [r3, #16]
20000c06:	22b8      	movs	r2, #184	; 0xb8
20000c08:	18ba      	adds	r2, r7, r2
20000c0a:	2114      	movs	r1, #20
20000c0c:	0010      	movs	r0, r2
20000c0e:	4798      	blx	r3
20000c10:	e14a      	b.n	20000ea8 <main+0xcac>
				else if(counter < delay_until_text + 2*long_text + 2*short_text)
20000c12:	4b8d      	ldr	r3, [pc, #564]	; (20000e48 <main+0xc4c>)
20000c14:	681b      	ldr	r3, [r3, #0]
20000c16:	005a      	lsls	r2, r3, #1
20000c18:	4b89      	ldr	r3, [pc, #548]	; (20000e40 <main+0xc44>)
20000c1a:	681b      	ldr	r3, [r3, #0]
20000c1c:	18d2      	adds	r2, r2, r3
20000c1e:	4b8c      	ldr	r3, [pc, #560]	; (20000e50 <main+0xc54>)
20000c20:	681b      	ldr	r3, [r3, #0]
20000c22:	005b      	lsls	r3, r3, #1
20000c24:	18d2      	adds	r2, r2, r3
20000c26:	4b85      	ldr	r3, [pc, #532]	; (20000e3c <main+0xc40>)
20000c28:	681b      	ldr	r3, [r3, #0]
20000c2a:	429a      	cmp	r2, r3
20000c2c:	dd0c      	ble.n	20000c48 <main+0xa4c>
					text4.display(&text4, 20);
20000c2e:	4b8b      	ldr	r3, [pc, #556]	; (20000e5c <main+0xc60>)
20000c30:	22ad      	movs	r2, #173	; 0xad
20000c32:	00d2      	lsls	r2, r2, #3
20000c34:	4694      	mov	ip, r2
20000c36:	44bc      	add	ip, r7
20000c38:	4463      	add	r3, ip
20000c3a:	691b      	ldr	r3, [r3, #16]
20000c3c:	22a4      	movs	r2, #164	; 0xa4
20000c3e:	18ba      	adds	r2, r7, r2
20000c40:	2114      	movs	r1, #20
20000c42:	0010      	movs	r0, r2
20000c44:	4798      	blx	r3
20000c46:	e12f      	b.n	20000ea8 <main+0xcac>
				else if(counter < delay_until_text + 3*long_text + 2*short_text)
20000c48:	4b7f      	ldr	r3, [pc, #508]	; (20000e48 <main+0xc4c>)
20000c4a:	681a      	ldr	r2, [r3, #0]
20000c4c:	0013      	movs	r3, r2
20000c4e:	005b      	lsls	r3, r3, #1
20000c50:	189a      	adds	r2, r3, r2
20000c52:	4b7b      	ldr	r3, [pc, #492]	; (20000e40 <main+0xc44>)
20000c54:	681b      	ldr	r3, [r3, #0]
20000c56:	18d2      	adds	r2, r2, r3
20000c58:	4b7d      	ldr	r3, [pc, #500]	; (20000e50 <main+0xc54>)
20000c5a:	681b      	ldr	r3, [r3, #0]
20000c5c:	005b      	lsls	r3, r3, #1
20000c5e:	18d2      	adds	r2, r2, r3
20000c60:	4b76      	ldr	r3, [pc, #472]	; (20000e3c <main+0xc40>)
20000c62:	681b      	ldr	r3, [r3, #0]
20000c64:	429a      	cmp	r2, r3
20000c66:	dd0c      	ble.n	20000c82 <main+0xa86>
					text5.display(&text5, 15);
20000c68:	4b7d      	ldr	r3, [pc, #500]	; (20000e60 <main+0xc64>)
20000c6a:	22ad      	movs	r2, #173	; 0xad
20000c6c:	00d2      	lsls	r2, r2, #3
20000c6e:	4694      	mov	ip, r2
20000c70:	44bc      	add	ip, r7
20000c72:	4463      	add	r3, ip
20000c74:	691b      	ldr	r3, [r3, #16]
20000c76:	2290      	movs	r2, #144	; 0x90
20000c78:	18ba      	adds	r2, r7, r2
20000c7a:	210f      	movs	r1, #15
20000c7c:	0010      	movs	r0, r2
20000c7e:	4798      	blx	r3
20000c80:	e112      	b.n	20000ea8 <main+0xcac>
				else if(counter < delay_until_text + 3*long_text + 3*short_text)
20000c82:	4b71      	ldr	r3, [pc, #452]	; (20000e48 <main+0xc4c>)
20000c84:	681a      	ldr	r2, [r3, #0]
20000c86:	0013      	movs	r3, r2
20000c88:	005b      	lsls	r3, r3, #1
20000c8a:	189a      	adds	r2, r3, r2
20000c8c:	4b6c      	ldr	r3, [pc, #432]	; (20000e40 <main+0xc44>)
20000c8e:	681b      	ldr	r3, [r3, #0]
20000c90:	18d1      	adds	r1, r2, r3
20000c92:	4b6f      	ldr	r3, [pc, #444]	; (20000e50 <main+0xc54>)
20000c94:	681a      	ldr	r2, [r3, #0]
20000c96:	0013      	movs	r3, r2
20000c98:	005b      	lsls	r3, r3, #1
20000c9a:	189b      	adds	r3, r3, r2
20000c9c:	18ca      	adds	r2, r1, r3
20000c9e:	4b67      	ldr	r3, [pc, #412]	; (20000e3c <main+0xc40>)
20000ca0:	681b      	ldr	r3, [r3, #0]
20000ca2:	429a      	cmp	r2, r3
20000ca4:	dd0c      	ble.n	20000cc0 <main+0xac4>
					text6.display(&text6, 20);
20000ca6:	4b6f      	ldr	r3, [pc, #444]	; (20000e64 <main+0xc68>)
20000ca8:	22ad      	movs	r2, #173	; 0xad
20000caa:	00d2      	lsls	r2, r2, #3
20000cac:	4694      	mov	ip, r2
20000cae:	44bc      	add	ip, r7
20000cb0:	4463      	add	r3, ip
20000cb2:	691b      	ldr	r3, [r3, #16]
20000cb4:	227c      	movs	r2, #124	; 0x7c
20000cb6:	18ba      	adds	r2, r7, r2
20000cb8:	2114      	movs	r1, #20
20000cba:	0010      	movs	r0, r2
20000cbc:	4798      	blx	r3
20000cbe:	e0f3      	b.n	20000ea8 <main+0xcac>
				else if(counter < delay_until_text + 4*long_text + 3*short_text + 3)
20000cc0:	4b61      	ldr	r3, [pc, #388]	; (20000e48 <main+0xc4c>)
20000cc2:	681b      	ldr	r3, [r3, #0]
20000cc4:	009a      	lsls	r2, r3, #2
20000cc6:	4b5e      	ldr	r3, [pc, #376]	; (20000e40 <main+0xc44>)
20000cc8:	681b      	ldr	r3, [r3, #0]
20000cca:	18d1      	adds	r1, r2, r3
20000ccc:	4b60      	ldr	r3, [pc, #384]	; (20000e50 <main+0xc54>)
20000cce:	681a      	ldr	r2, [r3, #0]
20000cd0:	0013      	movs	r3, r2
20000cd2:	005b      	lsls	r3, r3, #1
20000cd4:	189b      	adds	r3, r3, r2
20000cd6:	18cb      	adds	r3, r1, r3
20000cd8:	1cda      	adds	r2, r3, #3
20000cda:	4b58      	ldr	r3, [pc, #352]	; (20000e3c <main+0xc40>)
20000cdc:	681b      	ldr	r3, [r3, #0]
20000cde:	429a      	cmp	r2, r3
20000ce0:	dd0c      	ble.n	20000cfc <main+0xb00>
					text7.display(&text7, 20);
20000ce2:	4b61      	ldr	r3, [pc, #388]	; (20000e68 <main+0xc6c>)
20000ce4:	22ad      	movs	r2, #173	; 0xad
20000ce6:	00d2      	lsls	r2, r2, #3
20000ce8:	4694      	mov	ip, r2
20000cea:	44bc      	add	ip, r7
20000cec:	4463      	add	r3, ip
20000cee:	691b      	ldr	r3, [r3, #16]
20000cf0:	2268      	movs	r2, #104	; 0x68
20000cf2:	18ba      	adds	r2, r7, r2
20000cf4:	2114      	movs	r1, #20
20000cf6:	0010      	movs	r0, r2
20000cf8:	4798      	blx	r3
20000cfa:	e0d5      	b.n	20000ea8 <main+0xcac>
				else if(counter < delay_until_text + 5*long_text + 3*short_text + 2)
20000cfc:	4b52      	ldr	r3, [pc, #328]	; (20000e48 <main+0xc4c>)
20000cfe:	681a      	ldr	r2, [r3, #0]
20000d00:	0013      	movs	r3, r2
20000d02:	009b      	lsls	r3, r3, #2
20000d04:	189a      	adds	r2, r3, r2
20000d06:	4b4e      	ldr	r3, [pc, #312]	; (20000e40 <main+0xc44>)
20000d08:	681b      	ldr	r3, [r3, #0]
20000d0a:	18d1      	adds	r1, r2, r3
20000d0c:	4b50      	ldr	r3, [pc, #320]	; (20000e50 <main+0xc54>)
20000d0e:	681a      	ldr	r2, [r3, #0]
20000d10:	0013      	movs	r3, r2
20000d12:	005b      	lsls	r3, r3, #1
20000d14:	189b      	adds	r3, r3, r2
20000d16:	18cb      	adds	r3, r1, r3
20000d18:	1c9a      	adds	r2, r3, #2
20000d1a:	4b48      	ldr	r3, [pc, #288]	; (20000e3c <main+0xc40>)
20000d1c:	681b      	ldr	r3, [r3, #0]
20000d1e:	429a      	cmp	r2, r3
20000d20:	dd0c      	ble.n	20000d3c <main+0xb40>
					text8.display(&text8, 20);
20000d22:	4b52      	ldr	r3, [pc, #328]	; (20000e6c <main+0xc70>)
20000d24:	22ad      	movs	r2, #173	; 0xad
20000d26:	00d2      	lsls	r2, r2, #3
20000d28:	4694      	mov	ip, r2
20000d2a:	44bc      	add	ip, r7
20000d2c:	4463      	add	r3, ip
20000d2e:	691b      	ldr	r3, [r3, #16]
20000d30:	2254      	movs	r2, #84	; 0x54
20000d32:	18ba      	adds	r2, r7, r2
20000d34:	2114      	movs	r1, #20
20000d36:	0010      	movs	r0, r2
20000d38:	4798      	blx	r3
20000d3a:	e0b5      	b.n	20000ea8 <main+0xcac>
				else if(counter < delay_until_text + 5*long_text + 4*short_text + 2)
20000d3c:	4b42      	ldr	r3, [pc, #264]	; (20000e48 <main+0xc4c>)
20000d3e:	681a      	ldr	r2, [r3, #0]
20000d40:	0013      	movs	r3, r2
20000d42:	009b      	lsls	r3, r3, #2
20000d44:	189a      	adds	r2, r3, r2
20000d46:	4b3e      	ldr	r3, [pc, #248]	; (20000e40 <main+0xc44>)
20000d48:	681b      	ldr	r3, [r3, #0]
20000d4a:	18d2      	adds	r2, r2, r3
20000d4c:	4b40      	ldr	r3, [pc, #256]	; (20000e50 <main+0xc54>)
20000d4e:	681b      	ldr	r3, [r3, #0]
20000d50:	009b      	lsls	r3, r3, #2
20000d52:	18d3      	adds	r3, r2, r3
20000d54:	1c9a      	adds	r2, r3, #2
20000d56:	4b39      	ldr	r3, [pc, #228]	; (20000e3c <main+0xc40>)
20000d58:	681b      	ldr	r3, [r3, #0]
20000d5a:	429a      	cmp	r2, r3
20000d5c:	dd0c      	ble.n	20000d78 <main+0xb7c>
					text9.display(&text9, 20);
20000d5e:	4b44      	ldr	r3, [pc, #272]	; (20000e70 <main+0xc74>)
20000d60:	22ad      	movs	r2, #173	; 0xad
20000d62:	00d2      	lsls	r2, r2, #3
20000d64:	4694      	mov	ip, r2
20000d66:	44bc      	add	ip, r7
20000d68:	4463      	add	r3, ip
20000d6a:	691b      	ldr	r3, [r3, #16]
20000d6c:	2240      	movs	r2, #64	; 0x40
20000d6e:	18ba      	adds	r2, r7, r2
20000d70:	2114      	movs	r1, #20
20000d72:	0010      	movs	r0, r2
20000d74:	4798      	blx	r3
20000d76:	e097      	b.n	20000ea8 <main+0xcac>
				else if(counter < delay_until_text + 6*long_text + 4*short_text - 2 + 2 - 5)
20000d78:	4b33      	ldr	r3, [pc, #204]	; (20000e48 <main+0xc4c>)
20000d7a:	681a      	ldr	r2, [r3, #0]
20000d7c:	0013      	movs	r3, r2
20000d7e:	005b      	lsls	r3, r3, #1
20000d80:	189b      	adds	r3, r3, r2
20000d82:	005b      	lsls	r3, r3, #1
20000d84:	001a      	movs	r2, r3
20000d86:	4b2e      	ldr	r3, [pc, #184]	; (20000e40 <main+0xc44>)
20000d88:	681b      	ldr	r3, [r3, #0]
20000d8a:	18d2      	adds	r2, r2, r3
20000d8c:	4b30      	ldr	r3, [pc, #192]	; (20000e50 <main+0xc54>)
20000d8e:	681b      	ldr	r3, [r3, #0]
20000d90:	009b      	lsls	r3, r3, #2
20000d92:	18d3      	adds	r3, r2, r3
20000d94:	1f5a      	subs	r2, r3, #5
20000d96:	4b29      	ldr	r3, [pc, #164]	; (20000e3c <main+0xc40>)
20000d98:	681b      	ldr	r3, [r3, #0]
20000d9a:	429a      	cmp	r2, r3
20000d9c:	dd0c      	ble.n	20000db8 <main+0xbbc>
					text10.display(&text10, 15);
20000d9e:	4b35      	ldr	r3, [pc, #212]	; (20000e74 <main+0xc78>)
20000da0:	22ad      	movs	r2, #173	; 0xad
20000da2:	00d2      	lsls	r2, r2, #3
20000da4:	4694      	mov	ip, r2
20000da6:	44bc      	add	ip, r7
20000da8:	4463      	add	r3, ip
20000daa:	691b      	ldr	r3, [r3, #16]
20000dac:	222c      	movs	r2, #44	; 0x2c
20000dae:	18ba      	adds	r2, r7, r2
20000db0:	210f      	movs	r1, #15
20000db2:	0010      	movs	r0, r2
20000db4:	4798      	blx	r3
20000db6:	e077      	b.n	20000ea8 <main+0xcac>
				else if(counter < delay_until_text + 6*long_text + 5*short_text + 3 + 2 - 4)
20000db8:	4b23      	ldr	r3, [pc, #140]	; (20000e48 <main+0xc4c>)
20000dba:	681a      	ldr	r2, [r3, #0]
20000dbc:	0013      	movs	r3, r2
20000dbe:	005b      	lsls	r3, r3, #1
20000dc0:	189b      	adds	r3, r3, r2
20000dc2:	005b      	lsls	r3, r3, #1
20000dc4:	001a      	movs	r2, r3
20000dc6:	4b1e      	ldr	r3, [pc, #120]	; (20000e40 <main+0xc44>)
20000dc8:	681b      	ldr	r3, [r3, #0]
20000dca:	18d1      	adds	r1, r2, r3
20000dcc:	4b20      	ldr	r3, [pc, #128]	; (20000e50 <main+0xc54>)
20000dce:	681a      	ldr	r2, [r3, #0]
20000dd0:	0013      	movs	r3, r2
20000dd2:	009b      	lsls	r3, r3, #2
20000dd4:	189b      	adds	r3, r3, r2
20000dd6:	18cb      	adds	r3, r1, r3
20000dd8:	1c5a      	adds	r2, r3, #1
20000dda:	4b18      	ldr	r3, [pc, #96]	; (20000e3c <main+0xc40>)
20000ddc:	681b      	ldr	r3, [r3, #0]
20000dde:	429a      	cmp	r2, r3
20000de0:	dd0b      	ble.n	20000dfa <main+0xbfe>
					text12.display(&text12, 15);
20000de2:	4b25      	ldr	r3, [pc, #148]	; (20000e78 <main+0xc7c>)
20000de4:	22ad      	movs	r2, #173	; 0xad
20000de6:	00d2      	lsls	r2, r2, #3
20000de8:	4694      	mov	ip, r2
20000dea:	44bc      	add	ip, r7
20000dec:	4463      	add	r3, ip
20000dee:	691b      	ldr	r3, [r3, #16]
20000df0:	1d3a      	adds	r2, r7, #4
20000df2:	210f      	movs	r1, #15
20000df4:	0010      	movs	r0, r2
20000df6:	4798      	blx	r3
20000df8:	e056      	b.n	20000ea8 <main+0xcac>
				else if(counter < delay_until_text + 7*long_text + 5*short_text + 6 + 2 - 4) {
20000dfa:	4b13      	ldr	r3, [pc, #76]	; (20000e48 <main+0xc4c>)
20000dfc:	681a      	ldr	r2, [r3, #0]
20000dfe:	0013      	movs	r3, r2
20000e00:	00db      	lsls	r3, r3, #3
20000e02:	1a9a      	subs	r2, r3, r2
20000e04:	4b0e      	ldr	r3, [pc, #56]	; (20000e40 <main+0xc44>)
20000e06:	681b      	ldr	r3, [r3, #0]
20000e08:	18d1      	adds	r1, r2, r3
20000e0a:	4b11      	ldr	r3, [pc, #68]	; (20000e50 <main+0xc54>)
20000e0c:	681a      	ldr	r2, [r3, #0]
20000e0e:	0013      	movs	r3, r2
20000e10:	009b      	lsls	r3, r3, #2
20000e12:	189b      	adds	r3, r3, r2
20000e14:	18cb      	adds	r3, r1, r3
20000e16:	1d1a      	adds	r2, r3, #4
20000e18:	4b08      	ldr	r3, [pc, #32]	; (20000e3c <main+0xc40>)
20000e1a:	681b      	ldr	r3, [r3, #0]
20000e1c:	429a      	cmp	r2, r3
20000e1e:	dd2f      	ble.n	20000e80 <main+0xc84>
					text11.display(&text11, 20);
20000e20:	4b16      	ldr	r3, [pc, #88]	; (20000e7c <main+0xc80>)
20000e22:	22ad      	movs	r2, #173	; 0xad
20000e24:	00d2      	lsls	r2, r2, #3
20000e26:	4694      	mov	ip, r2
20000e28:	44bc      	add	ip, r7
20000e2a:	4463      	add	r3, ip
20000e2c:	691b      	ldr	r3, [r3, #16]
20000e2e:	2218      	movs	r2, #24
20000e30:	18ba      	adds	r2, r7, r2
20000e32:	2114      	movs	r1, #20
20000e34:	0010      	movs	r0, r2
20000e36:	4798      	blx	r3
20000e38:	e036      	b.n	20000ea8 <main+0xcac>
20000e3a:	46c0      	nop			; (mov r8, r8)
20000e3c:	2000573c 	andcs	r5, r0, ip, lsr r7
20000e40:	20009b18 	andcs	r9, r0, r8, lsl fp
20000e44:	fffffb8c 			; <UNDEFINED> instruction: 0xfffffb8c
20000e48:	20009b1c 	andcs	r9, r0, ip, lsl fp
20000e4c:	fffffb78 			; <UNDEFINED> instruction: 0xfffffb78
20000e50:	20009b20 	andcs	r9, r0, r0, lsr #22
20000e54:	fffffb64 			; <UNDEFINED> instruction: 0xfffffb64
20000e58:	fffffb50 			; <UNDEFINED> instruction: 0xfffffb50
20000e5c:	fffffb3c 			; <UNDEFINED> instruction: 0xfffffb3c
20000e60:	fffffb28 			; <UNDEFINED> instruction: 0xfffffb28
20000e64:	fffffb14 			; <UNDEFINED> instruction: 0xfffffb14
20000e68:	fffffb00 			; <UNDEFINED> instruction: 0xfffffb00
20000e6c:	fffffaec 			; <UNDEFINED> instruction: 0xfffffaec
20000e70:	fffffad8 			; <UNDEFINED> instruction: 0xfffffad8
20000e74:	fffffac4 			; <UNDEFINED> instruction: 0xfffffac4
20000e78:	fffffa9c 			; <UNDEFINED> instruction: 0xfffffa9c
20000e7c:	fffffab0 			; <UNDEFINED> instruction: 0xfffffab0
				} else {
					if (read_DIL() == 0) {
20000e80:	f003 fbc4 	bl	2000460c <read_DIL>
20000e84:	1e03      	subs	r3, r0, #0
20000e86:	d10f      	bne.n	20000ea8 <main+0xcac>
						current_screen = GAME_SCREEN;
20000e88:	4b60      	ldr	r3, [pc, #384]	; (2000100c <main+0xe10>)
20000e8a:	2202      	movs	r2, #2
20000e8c:	601a      	str	r2, [r3, #0]
						random_seed = counter;
20000e8e:	4b60      	ldr	r3, [pc, #384]	; (20001010 <main+0xe14>)
20000e90:	681a      	ldr	r2, [r3, #0]
20000e92:	4b60      	ldr	r3, [pc, #384]	; (20001014 <main+0xe18>)
20000e94:	601a      	str	r2, [r3, #0]
						counter = 0;
20000e96:	4b5e      	ldr	r3, [pc, #376]	; (20001010 <main+0xe14>)
20000e98:	2200      	movs	r2, #0
20000e9a:	601a      	str	r2, [r3, #0]
						ascii_write("Daffo: I'm feeling ","a bit spooked out...");
20000e9c:	4a5e      	ldr	r2, [pc, #376]	; (20001018 <main+0xe1c>)
20000e9e:	4b5f      	ldr	r3, [pc, #380]	; (2000101c <main+0xe20>)
20000ea0:	0011      	movs	r1, r2
20000ea2:	0018      	movs	r0, r3
20000ea4:	f003 fdb4 	bl	20004a10 <ascii_write>
					}
				}
				
				if(read_DIL() == SKIP_VALUE) {
20000ea8:	f003 fbb0 	bl	2000460c <read_DIL>
20000eac:	0003      	movs	r3, r0
20000eae:	2b81      	cmp	r3, #129	; 0x81
20000eb0:	d10f      	bne.n	20000ed2 <main+0xcd6>
					current_screen = GAME_SCREEN;
20000eb2:	4b56      	ldr	r3, [pc, #344]	; (2000100c <main+0xe10>)
20000eb4:	2202      	movs	r2, #2
20000eb6:	601a      	str	r2, [r3, #0]
					random_seed = counter;
20000eb8:	4b55      	ldr	r3, [pc, #340]	; (20001010 <main+0xe14>)
20000eba:	681a      	ldr	r2, [r3, #0]
20000ebc:	4b55      	ldr	r3, [pc, #340]	; (20001014 <main+0xe18>)
20000ebe:	601a      	str	r2, [r3, #0]
					counter = 0;
20000ec0:	4b53      	ldr	r3, [pc, #332]	; (20001010 <main+0xe14>)
20000ec2:	2200      	movs	r2, #0
20000ec4:	601a      	str	r2, [r3, #0]
					ascii_write("Daffo: I'm feeling ","a bit spooked out...");
20000ec6:	4a54      	ldr	r2, [pc, #336]	; (20001018 <main+0xe1c>)
20000ec8:	4b54      	ldr	r3, [pc, #336]	; (2000101c <main+0xe20>)
20000eca:	0011      	movs	r1, r2
20000ecc:	0018      	movs	r0, r3
20000ece:	f003 fd9f 	bl	20004a10 <ascii_write>
				}
				
				
				fire2.update(&fire2);
20000ed2:	4b53      	ldr	r3, [pc, #332]	; (20001020 <main+0xe24>)
20000ed4:	22ad      	movs	r2, #173	; 0xad
20000ed6:	00d2      	lsls	r2, r2, #3
20000ed8:	4694      	mov	ip, r2
20000eda:	44bc      	add	ip, r7
20000edc:	4463      	add	r3, ip
20000ede:	68db      	ldr	r3, [r3, #12]
20000ee0:	229d      	movs	r2, #157	; 0x9d
20000ee2:	0092      	lsls	r2, r2, #2
20000ee4:	18ba      	adds	r2, r7, r2
20000ee6:	0010      	movs	r0, r2
20000ee8:	4798      	blx	r3
				fire3.update(&fire3);
20000eea:	4b4e      	ldr	r3, [pc, #312]	; (20001024 <main+0xe28>)
20000eec:	22ad      	movs	r2, #173	; 0xad
20000eee:	00d2      	lsls	r2, r2, #3
20000ef0:	4694      	mov	ip, r2
20000ef2:	44bc      	add	ip, r7
20000ef4:	4463      	add	r3, ip
20000ef6:	68db      	ldr	r3, [r3, #12]
20000ef8:	2294      	movs	r2, #148	; 0x94
20000efa:	0092      	lsls	r2, r2, #2
20000efc:	18ba      	adds	r2, r7, r2
20000efe:	0010      	movs	r0, r2
20000f00:	4798      	blx	r3
				fire1.update(&fire1);
20000f02:	4b49      	ldr	r3, [pc, #292]	; (20001028 <main+0xe2c>)
20000f04:	22ad      	movs	r2, #173	; 0xad
20000f06:	00d2      	lsls	r2, r2, #3
20000f08:	4694      	mov	ip, r2
20000f0a:	44bc      	add	ip, r7
20000f0c:	4463      	add	r3, ip
20000f0e:	68db      	ldr	r3, [r3, #12]
20000f10:	2282      	movs	r2, #130	; 0x82
20000f12:	0092      	lsls	r2, r2, #2
20000f14:	18ba      	adds	r2, r7, r2
20000f16:	0010      	movs	r0, r2
20000f18:	4798      	blx	r3
				fire4.update(&fire4);
20000f1a:	4b44      	ldr	r3, [pc, #272]	; (2000102c <main+0xe30>)
20000f1c:	22ad      	movs	r2, #173	; 0xad
20000f1e:	00d2      	lsls	r2, r2, #3
20000f20:	4694      	mov	ip, r2
20000f22:	44bc      	add	ip, r7
20000f24:	4463      	add	r3, ip
20000f26:	68db      	ldr	r3, [r3, #12]
20000f28:	228b      	movs	r2, #139	; 0x8b
20000f2a:	0092      	lsls	r2, r2, #2
20000f2c:	18ba      	adds	r2, r7, r2
20000f2e:	0010      	movs	r0, r2
20000f30:	4798      	blx	r3
				bird.update(&bird);
20000f32:	4b3f      	ldr	r3, [pc, #252]	; (20001030 <main+0xe34>)
20000f34:	22ad      	movs	r2, #173	; 0xad
20000f36:	00d2      	lsls	r2, r2, #3
20000f38:	4694      	mov	ip, r2
20000f3a:	44bc      	add	ip, r7
20000f3c:	4463      	add	r3, ip
20000f3e:	68db      	ldr	r3, [r3, #12]
20000f40:	22ca      	movs	r2, #202	; 0xca
20000f42:	0092      	lsls	r2, r2, #2
20000f44:	18ba      	adds	r2, r7, r2
20000f46:	0010      	movs	r0, r2
20000f48:	4798      	blx	r3
				bird.xPos -= 2;
20000f4a:	4b39      	ldr	r3, [pc, #228]	; (20001030 <main+0xe34>)
20000f4c:	22ad      	movs	r2, #173	; 0xad
20000f4e:	00d2      	lsls	r2, r2, #3
20000f50:	4694      	mov	ip, r2
20000f52:	44bc      	add	ip, r7
20000f54:	4463      	add	r3, ip
20000f56:	685b      	ldr	r3, [r3, #4]
20000f58:	1e9a      	subs	r2, r3, #2
20000f5a:	4b35      	ldr	r3, [pc, #212]	; (20001030 <main+0xe34>)
20000f5c:	21ad      	movs	r1, #173	; 0xad
20000f5e:	00c9      	lsls	r1, r1, #3
20000f60:	468c      	mov	ip, r1
20000f62:	44bc      	add	ip, r7
20000f64:	4463      	add	r3, ip
20000f66:	605a      	str	r2, [r3, #4]
				if (counter % 2 == 0) {
20000f68:	4b29      	ldr	r3, [pc, #164]	; (20001010 <main+0xe14>)
20000f6a:	681b      	ldr	r3, [r3, #0]
20000f6c:	001a      	movs	r2, r3
20000f6e:	2301      	movs	r3, #1
20000f70:	4013      	ands	r3, r2
20000f72:	d001      	beq.n	20000f78 <main+0xd7c>
20000f74:	f000 ff37 	bl	20001de6 <main+0x1bea>
					bird.yPos--;
20000f78:	4b2d      	ldr	r3, [pc, #180]	; (20001030 <main+0xe34>)
20000f7a:	22ad      	movs	r2, #173	; 0xad
20000f7c:	00d2      	lsls	r2, r2, #3
20000f7e:	4694      	mov	ip, r2
20000f80:	44bc      	add	ip, r7
20000f82:	4463      	add	r3, ip
20000f84:	689b      	ldr	r3, [r3, #8]
20000f86:	1e5a      	subs	r2, r3, #1
20000f88:	4b29      	ldr	r3, [pc, #164]	; (20001030 <main+0xe34>)
20000f8a:	21ad      	movs	r1, #173	; 0xad
20000f8c:	00c9      	lsls	r1, r1, #3
20000f8e:	468c      	mov	ip, r1
20000f90:	44bc      	add	ip, r7
20000f92:	4463      	add	r3, ip
20000f94:	609a      	str	r2, [r3, #8]
				}
				
				break;
20000f96:	f000 ff26 	bl	20001de6 <main+0x1bea>
				
			case GAME_SCREEN: //inside
				
				counter++;
20000f9a:	4b1d      	ldr	r3, [pc, #116]	; (20001010 <main+0xe14>)
20000f9c:	681b      	ldr	r3, [r3, #0]
20000f9e:	1c5a      	adds	r2, r3, #1
20000fa0:	4b1b      	ldr	r3, [pc, #108]	; (20001010 <main+0xe14>)
20000fa2:	601a      	str	r2, [r3, #0]
				if(read_DIL_single( LIGHT_TRIGGER )) {
20000fa4:	2006      	movs	r0, #6
20000fa6:	f003 fb41 	bl	2000462c <read_DIL_single>
20000faa:	1e03      	subs	r3, r0, #0
20000fac:	d00c      	beq.n	20000fc8 <main+0xdcc>
					draw_game_object( &indoors2 );
20000fae:	23ee      	movs	r3, #238	; 0xee
20000fb0:	009b      	lsls	r3, r3, #2
20000fb2:	18fb      	adds	r3, r7, r3
20000fb4:	0018      	movs	r0, r3
20000fb6:	f003 fa7f 	bl	200044b8 <draw_game_object>
					ascii_write("*click*","");
20000fba:	4a1e      	ldr	r2, [pc, #120]	; (20001034 <main+0xe38>)
20000fbc:	4b1e      	ldr	r3, [pc, #120]	; (20001038 <main+0xe3c>)
20000fbe:	0011      	movs	r1, r2
20000fc0:	0018      	movs	r0, r3
20000fc2:	f003 fd25 	bl	20004a10 <ascii_write>
20000fc6:	e00b      	b.n	20000fe0 <main+0xde4>
				} else {
					draw_game_object( &indoors );
20000fc8:	23f7      	movs	r3, #247	; 0xf7
20000fca:	009b      	lsls	r3, r3, #2
20000fcc:	18fb      	adds	r3, r7, r3
20000fce:	0018      	movs	r0, r3
20000fd0:	f003 fa72 	bl	200044b8 <draw_game_object>
					draw_game_object( &trophy );
20000fd4:	23e5      	movs	r3, #229	; 0xe5
20000fd6:	009b      	lsls	r3, r3, #2
20000fd8:	18fb      	adds	r3, r7, r3
20000fda:	0018      	movs	r0, r3
20000fdc:	f003 fa6c 	bl	200044b8 <draw_game_object>
				}
				
				if(!no_DIP)
20000fe0:	23aa      	movs	r3, #170	; 0xaa
20000fe2:	00db      	lsls	r3, r3, #3
20000fe4:	18fb      	adds	r3, r7, r3
20000fe6:	681b      	ldr	r3, [r3, #0]
20000fe8:	2b00      	cmp	r3, #0
20000fea:	d105      	bne.n	20000ff8 <main+0xdfc>
					draw_game_object( &DIP );
20000fec:	23af      	movs	r3, #175	; 0xaf
20000fee:	009b      	lsls	r3, r3, #2
20000ff0:	18fb      	adds	r3, r7, r3
20000ff2:	0018      	movs	r0, r3
20000ff4:	f003 fa60 	bl	200044b8 <draw_game_object>
				draw_game_object( &player );
20000ff8:	23a6      	movs	r3, #166	; 0xa6
20000ffa:	009b      	lsls	r3, r3, #2
20000ffc:	18fb      	adds	r3, r7, r3
20000ffe:	0018      	movs	r0, r3
20001000:	f003 fa5a 	bl	200044b8 <draw_game_object>
				static int i;
				for(i = 0; i < 3; i++) {
20001004:	4b0d      	ldr	r3, [pc, #52]	; (2000103c <main+0xe40>)
20001006:	2200      	movs	r2, #0
20001008:	601a      	str	r2, [r3, #0]
2000100a:	e045      	b.n	20001098 <main+0xe9c>
2000100c:	20009b14 	andcs	r9, r0, r4, lsl fp
20001010:	2000573c 	andcs	r5, r0, ip, lsr r7
20001014:	20005854 	andcs	r5, r0, r4, asr r8
20001018:	20015728 	andcs	r5, r1, r8, lsr #14
2000101c:	20015740 	andcs	r5, r1, r0, asr #14
20001020:	fffffd0c 			; <UNDEFINED> instruction: 0xfffffd0c
20001024:	fffffce8 			; <UNDEFINED> instruction: 0xfffffce8
20001028:	fffffca0 			; <UNDEFINED> instruction: 0xfffffca0
2000102c:	fffffcc4 			; <UNDEFINED> instruction: 0xfffffcc4
20001030:	fffffdc0 			; <UNDEFINED> instruction: 0xfffffdc0
20001034:	20015754 	andcs	r5, r1, r4, asr r7
20001038:	20015758 	andcs	r5, r1, r8, asr r7
2000103c:	20005740 	andcs	r5, r0, r0, asr #14
					draw_game_object( &fires[i] );
20001040:	4bbd      	ldr	r3, [pc, #756]	; (20001338 <main+0x113c>)
20001042:	681a      	ldr	r2, [r3, #0]
20001044:	2398      	movs	r3, #152	; 0x98
20001046:	005b      	lsls	r3, r3, #1
20001048:	18f9      	adds	r1, r7, r3
2000104a:	0013      	movs	r3, r2
2000104c:	00db      	lsls	r3, r3, #3
2000104e:	189b      	adds	r3, r3, r2
20001050:	009b      	lsls	r3, r3, #2
20001052:	18cb      	adds	r3, r1, r3
20001054:	0018      	movs	r0, r3
20001056:	f003 fa2f 	bl	200044b8 <draw_game_object>
					fires[i].update( &fires[i] );
2000105a:	4bb7      	ldr	r3, [pc, #732]	; (20001338 <main+0x113c>)
2000105c:	681a      	ldr	r2, [r3, #0]
2000105e:	4bb7      	ldr	r3, [pc, #732]	; (2000133c <main+0x1140>)
20001060:	21ad      	movs	r1, #173	; 0xad
20001062:	00c9      	lsls	r1, r1, #3
20001064:	1879      	adds	r1, r7, r1
20001066:	18c9      	adds	r1, r1, r3
20001068:	0013      	movs	r3, r2
2000106a:	00db      	lsls	r3, r3, #3
2000106c:	189b      	adds	r3, r3, r2
2000106e:	009b      	lsls	r3, r3, #2
20001070:	18cb      	adds	r3, r1, r3
20001072:	330c      	adds	r3, #12
20001074:	6819      	ldr	r1, [r3, #0]
20001076:	4bb0      	ldr	r3, [pc, #704]	; (20001338 <main+0x113c>)
20001078:	681a      	ldr	r2, [r3, #0]
2000107a:	2398      	movs	r3, #152	; 0x98
2000107c:	005b      	lsls	r3, r3, #1
2000107e:	18f8      	adds	r0, r7, r3
20001080:	0013      	movs	r3, r2
20001082:	00db      	lsls	r3, r3, #3
20001084:	189b      	adds	r3, r3, r2
20001086:	009b      	lsls	r3, r3, #2
20001088:	18c3      	adds	r3, r0, r3
2000108a:	0018      	movs	r0, r3
2000108c:	4788      	blx	r1
				for(i = 0; i < 3; i++) {
2000108e:	4baa      	ldr	r3, [pc, #680]	; (20001338 <main+0x113c>)
20001090:	681b      	ldr	r3, [r3, #0]
20001092:	1c5a      	adds	r2, r3, #1
20001094:	4ba8      	ldr	r3, [pc, #672]	; (20001338 <main+0x113c>)
20001096:	601a      	str	r2, [r3, #0]
20001098:	4ba7      	ldr	r3, [pc, #668]	; (20001338 <main+0x113c>)
2000109a:	681b      	ldr	r3, [r3, #0]
2000109c:	2b02      	cmp	r3, #2
2000109e:	ddcf      	ble.n	20001040 <main+0xe44>
				}
				draw_game_object( &hair );
200010a0:	23d3      	movs	r3, #211	; 0xd3
200010a2:	009b      	lsls	r3, r3, #2
200010a4:	18fb      	adds	r3, r7, r3
200010a6:	0018      	movs	r0, r3
200010a8:	f003 fa06 	bl	200044b8 <draw_game_object>
				if(exploding) {
200010ac:	4ba4      	ldr	r3, [pc, #656]	; (20001340 <main+0x1144>)
200010ae:	18fb      	adds	r3, r7, r3
200010b0:	681b      	ldr	r3, [r3, #0]
200010b2:	2b00      	cmp	r3, #0
200010b4:	d057      	beq.n	20001166 <main+0xf6a>
					if (first) {
200010b6:	23a9      	movs	r3, #169	; 0xa9
200010b8:	00db      	lsls	r3, r3, #3
200010ba:	18fb      	adds	r3, r7, r3
200010bc:	681b      	ldr	r3, [r3, #0]
200010be:	2b00      	cmp	r3, #0
200010c0:	d036      	beq.n	20001130 <main+0xf34>
						boom.xPos = player.xPos + 9 - 53;
200010c2:	4ba0      	ldr	r3, [pc, #640]	; (20001344 <main+0x1148>)
200010c4:	22ad      	movs	r2, #173	; 0xad
200010c6:	00d2      	lsls	r2, r2, #3
200010c8:	4694      	mov	ip, r2
200010ca:	44bc      	add	ip, r7
200010cc:	4463      	add	r3, ip
200010ce:	685b      	ldr	r3, [r3, #4]
200010d0:	3b2c      	subs	r3, #44	; 0x2c
200010d2:	001a      	movs	r2, r3
200010d4:	4b9c      	ldr	r3, [pc, #624]	; (20001348 <main+0x114c>)
200010d6:	21ad      	movs	r1, #173	; 0xad
200010d8:	00c9      	lsls	r1, r1, #3
200010da:	468c      	mov	ip, r1
200010dc:	44bc      	add	ip, r7
200010de:	4463      	add	r3, ip
200010e0:	605a      	str	r2, [r3, #4]
						boom.yPos = player.yPos + 9 - 27;
200010e2:	4b98      	ldr	r3, [pc, #608]	; (20001344 <main+0x1148>)
200010e4:	22ad      	movs	r2, #173	; 0xad
200010e6:	00d2      	lsls	r2, r2, #3
200010e8:	4694      	mov	ip, r2
200010ea:	44bc      	add	ip, r7
200010ec:	4463      	add	r3, ip
200010ee:	689b      	ldr	r3, [r3, #8]
200010f0:	3b12      	subs	r3, #18
200010f2:	001a      	movs	r2, r3
200010f4:	4b94      	ldr	r3, [pc, #592]	; (20001348 <main+0x114c>)
200010f6:	21ad      	movs	r1, #173	; 0xad
200010f8:	00c9      	lsls	r1, r1, #3
200010fa:	468c      	mov	ip, r1
200010fc:	44bc      	add	ip, r7
200010fe:	4463      	add	r3, ip
20001100:	609a      	str	r2, [r3, #8]
						player.xPos = -100;
20001102:	4b90      	ldr	r3, [pc, #576]	; (20001344 <main+0x1148>)
20001104:	22ad      	movs	r2, #173	; 0xad
20001106:	00d2      	lsls	r2, r2, #3
20001108:	4694      	mov	ip, r2
2000110a:	44bc      	add	ip, r7
2000110c:	4463      	add	r3, ip
2000110e:	2264      	movs	r2, #100	; 0x64
20001110:	4252      	negs	r2, r2
20001112:	605a      	str	r2, [r3, #4]
						player.yPos = -100;
20001114:	4b8b      	ldr	r3, [pc, #556]	; (20001344 <main+0x1148>)
20001116:	22ad      	movs	r2, #173	; 0xad
20001118:	00d2      	lsls	r2, r2, #3
2000111a:	4694      	mov	ip, r2
2000111c:	44bc      	add	ip, r7
2000111e:	4463      	add	r3, ip
20001120:	2264      	movs	r2, #100	; 0x64
20001122:	4252      	negs	r2, r2
20001124:	609a      	str	r2, [r3, #8]
						first = 0;
20001126:	2300      	movs	r3, #0
20001128:	22a9      	movs	r2, #169	; 0xa9
2000112a:	00d2      	lsls	r2, r2, #3
2000112c:	18ba      	adds	r2, r7, r2
2000112e:	6013      	str	r3, [r2, #0]
					}					
					draw_game_object( &boom );
20001130:	23b8      	movs	r3, #184	; 0xb8
20001132:	009b      	lsls	r3, r3, #2
20001134:	18fb      	adds	r3, r7, r3
20001136:	0018      	movs	r0, r3
20001138:	f003 f9be 	bl	200044b8 <draw_game_object>
					if(boom.current_frame < 10)
2000113c:	4b82      	ldr	r3, [pc, #520]	; (20001348 <main+0x114c>)
2000113e:	22ad      	movs	r2, #173	; 0xad
20001140:	00d2      	lsls	r2, r2, #3
20001142:	4694      	mov	ip, r2
20001144:	44bc      	add	ip, r7
20001146:	4463      	add	r3, ip
20001148:	695b      	ldr	r3, [r3, #20]
2000114a:	2b09      	cmp	r3, #9
2000114c:	dc0b      	bgt.n	20001166 <main+0xf6a>
						boom.update( &boom );
2000114e:	4b7e      	ldr	r3, [pc, #504]	; (20001348 <main+0x114c>)
20001150:	22ad      	movs	r2, #173	; 0xad
20001152:	00d2      	lsls	r2, r2, #3
20001154:	4694      	mov	ip, r2
20001156:	44bc      	add	ip, r7
20001158:	4463      	add	r3, ip
2000115a:	68db      	ldr	r3, [r3, #12]
2000115c:	22b8      	movs	r2, #184	; 0xb8
2000115e:	0092      	lsls	r2, r2, #2
20001160:	18ba      	adds	r2, r7, r2
20001162:	0010      	movs	r0, r2
20001164:	4798      	blx	r3
				}
				draw_game_object( &stone );
20001166:	23dc      	movs	r3, #220	; 0xdc
20001168:	009b      	lsls	r3, r3, #2
2000116a:	18fb      	adds	r3, r7, r3
2000116c:	0018      	movs	r0, r3
2000116e:	f003 f9a3 	bl	200044b8 <draw_game_object>
				
				if(!dragonStarted && player.xPos > 60-9)
20001172:	23a7      	movs	r3, #167	; 0xa7
20001174:	00db      	lsls	r3, r3, #3
20001176:	18fb      	adds	r3, r7, r3
20001178:	681b      	ldr	r3, [r3, #0]
2000117a:	2b00      	cmp	r3, #0
2000117c:	d10d      	bne.n	2000119a <main+0xf9e>
2000117e:	4b71      	ldr	r3, [pc, #452]	; (20001344 <main+0x1148>)
20001180:	22ad      	movs	r2, #173	; 0xad
20001182:	00d2      	lsls	r2, r2, #3
20001184:	4694      	mov	ip, r2
20001186:	44bc      	add	ip, r7
20001188:	4463      	add	r3, ip
2000118a:	685b      	ldr	r3, [r3, #4]
2000118c:	2b33      	cmp	r3, #51	; 0x33
2000118e:	dd04      	ble.n	2000119a <main+0xf9e>
					dragonStarted = 1;
20001190:	2301      	movs	r3, #1
20001192:	22a7      	movs	r2, #167	; 0xa7
20001194:	00d2      	lsls	r2, r2, #3
20001196:	18ba      	adds	r2, r7, r2
20001198:	6013      	str	r3, [r2, #0]
				
				
				if(dragonAlive && dragonStarted) {
2000119a:	23a8      	movs	r3, #168	; 0xa8
2000119c:	00db      	lsls	r3, r3, #3
2000119e:	18fb      	adds	r3, r7, r3
200011a0:	681b      	ldr	r3, [r3, #0]
200011a2:	2b00      	cmp	r3, #0
200011a4:	d100      	bne.n	200011a8 <main+0xfac>
200011a6:	e0ab      	b.n	20001300 <main+0x1104>
200011a8:	23a7      	movs	r3, #167	; 0xa7
200011aa:	00db      	lsls	r3, r3, #3
200011ac:	18fb      	adds	r3, r7, r3
200011ae:	681b      	ldr	r3, [r3, #0]
200011b0:	2b00      	cmp	r3, #0
200011b2:	d100      	bne.n	200011b6 <main+0xfba>
200011b4:	e0a4      	b.n	20001300 <main+0x1104>
					draw_game_object( &dragon );
200011b6:	23c1      	movs	r3, #193	; 0xc1
200011b8:	009b      	lsls	r3, r3, #2
200011ba:	18fb      	adds	r3, r7, r3
200011bc:	0018      	movs	r0, r3
200011be:	f003 f97b 	bl	200044b8 <draw_game_object>
					dragon.update(&dragon);
200011c2:	4b62      	ldr	r3, [pc, #392]	; (2000134c <main+0x1150>)
200011c4:	22ad      	movs	r2, #173	; 0xad
200011c6:	00d2      	lsls	r2, r2, #3
200011c8:	4694      	mov	ip, r2
200011ca:	44bc      	add	ip, r7
200011cc:	4463      	add	r3, ip
200011ce:	68db      	ldr	r3, [r3, #12]
200011d0:	22c1      	movs	r2, #193	; 0xc1
200011d2:	0092      	lsls	r2, r2, #2
200011d4:	18ba      	adds	r2, r7, r2
200011d6:	0010      	movs	r0, r2
200011d8:	4798      	blx	r3
					
					if(dragon.xPos < 55) {
200011da:	4b5c      	ldr	r3, [pc, #368]	; (2000134c <main+0x1150>)
200011dc:	22ad      	movs	r2, #173	; 0xad
200011de:	00d2      	lsls	r2, r2, #3
200011e0:	4694      	mov	ip, r2
200011e2:	44bc      	add	ip, r7
200011e4:	4463      	add	r3, ip
200011e6:	685b      	ldr	r3, [r3, #4]
200011e8:	2b36      	cmp	r3, #54	; 0x36
200011ea:	dc03      	bgt.n	200011f4 <main+0xff8>
						dragonDirection = 1;
200011ec:	2301      	movs	r3, #1
200011ee:	4a58      	ldr	r2, [pc, #352]	; (20001350 <main+0x1154>)
200011f0:	18ba      	adds	r2, r7, r2
200011f2:	6013      	str	r3, [r2, #0]
					}
					if(dragon.xPos > 120) {
200011f4:	4b55      	ldr	r3, [pc, #340]	; (2000134c <main+0x1150>)
200011f6:	22ad      	movs	r2, #173	; 0xad
200011f8:	00d2      	lsls	r2, r2, #3
200011fa:	4694      	mov	ip, r2
200011fc:	44bc      	add	ip, r7
200011fe:	4463      	add	r3, ip
20001200:	685b      	ldr	r3, [r3, #4]
20001202:	2b78      	cmp	r3, #120	; 0x78
20001204:	dd04      	ble.n	20001210 <main+0x1014>
						dragonDirection = -1;
20001206:	2301      	movs	r3, #1
20001208:	425b      	negs	r3, r3
2000120a:	4a51      	ldr	r2, [pc, #324]	; (20001350 <main+0x1154>)
2000120c:	18ba      	adds	r2, r7, r2
2000120e:	6013      	str	r3, [r2, #0]
					}
					dragon.xPos += dragonDirection;
20001210:	4b4e      	ldr	r3, [pc, #312]	; (2000134c <main+0x1150>)
20001212:	22ad      	movs	r2, #173	; 0xad
20001214:	00d2      	lsls	r2, r2, #3
20001216:	4694      	mov	ip, r2
20001218:	44bc      	add	ip, r7
2000121a:	4463      	add	r3, ip
2000121c:	685a      	ldr	r2, [r3, #4]
2000121e:	4b4c      	ldr	r3, [pc, #304]	; (20001350 <main+0x1154>)
20001220:	18fb      	adds	r3, r7, r3
20001222:	681b      	ldr	r3, [r3, #0]
20001224:	18d2      	adds	r2, r2, r3
20001226:	4b49      	ldr	r3, [pc, #292]	; (2000134c <main+0x1150>)
20001228:	21ad      	movs	r1, #173	; 0xad
2000122a:	00c9      	lsls	r1, r1, #3
2000122c:	468c      	mov	ip, r1
2000122e:	44bc      	add	ip, r7
20001230:	4463      	add	r3, ip
20001232:	605a      	str	r2, [r3, #4]
					
					
					if(player.yPos > 15 && player.xPos + 9 - dragon.xPos >= 0) {
20001234:	4b43      	ldr	r3, [pc, #268]	; (20001344 <main+0x1148>)
20001236:	22ad      	movs	r2, #173	; 0xad
20001238:	00d2      	lsls	r2, r2, #3
2000123a:	4694      	mov	ip, r2
2000123c:	44bc      	add	ip, r7
2000123e:	4463      	add	r3, ip
20001240:	689b      	ldr	r3, [r3, #8]
20001242:	2b0f      	cmp	r3, #15
20001244:	dd1f      	ble.n	20001286 <main+0x108a>
20001246:	4b3f      	ldr	r3, [pc, #252]	; (20001344 <main+0x1148>)
20001248:	22ad      	movs	r2, #173	; 0xad
2000124a:	00d2      	lsls	r2, r2, #3
2000124c:	4694      	mov	ip, r2
2000124e:	44bc      	add	ip, r7
20001250:	4463      	add	r3, ip
20001252:	685b      	ldr	r3, [r3, #4]
20001254:	3309      	adds	r3, #9
20001256:	001a      	movs	r2, r3
20001258:	4b3c      	ldr	r3, [pc, #240]	; (2000134c <main+0x1150>)
2000125a:	21ad      	movs	r1, #173	; 0xad
2000125c:	00c9      	lsls	r1, r1, #3
2000125e:	468c      	mov	ip, r1
20001260:	44bc      	add	ip, r7
20001262:	4463      	add	r3, ip
20001264:	685b      	ldr	r3, [r3, #4]
20001266:	1ad3      	subs	r3, r2, r3
20001268:	d40d      	bmi.n	20001286 <main+0x108a>
						game_over_adder = 5;
2000126a:	2305      	movs	r3, #5
2000126c:	4a39      	ldr	r2, [pc, #228]	; (20001354 <main+0x1158>)
2000126e:	18ba      	adds	r2, r7, r2
20001270:	6013      	str	r3, [r2, #0]
						ascii_write("*YUM YUM YUM*","");
20001272:	4a39      	ldr	r2, [pc, #228]	; (20001358 <main+0x115c>)
20001274:	4b39      	ldr	r3, [pc, #228]	; (2000135c <main+0x1160>)
20001276:	0011      	movs	r1, r2
20001278:	0018      	movs	r0, r3
2000127a:	f003 fbc9 	bl	20004a10 <ascii_write>
						exploding = 1;
2000127e:	2301      	movs	r3, #1
20001280:	4a2f      	ldr	r2, [pc, #188]	; (20001340 <main+0x1144>)
20001282:	18ba      	adds	r2, r7, r2
20001284:	6013      	str	r3, [r2, #0]
					}
					
					if(abs(dragon.yPos - 10 - (stone.yPos - 12)) < 10 && 
20001286:	4b31      	ldr	r3, [pc, #196]	; (2000134c <main+0x1150>)
20001288:	22ad      	movs	r2, #173	; 0xad
2000128a:	00d2      	lsls	r2, r2, #3
2000128c:	4694      	mov	ip, r2
2000128e:	44bc      	add	ip, r7
20001290:	4463      	add	r3, ip
20001292:	689b      	ldr	r3, [r3, #8]
20001294:	3b0a      	subs	r3, #10
20001296:	001a      	movs	r2, r3
20001298:	4b31      	ldr	r3, [pc, #196]	; (20001360 <main+0x1164>)
2000129a:	21ad      	movs	r1, #173	; 0xad
2000129c:	00c9      	lsls	r1, r1, #3
2000129e:	468c      	mov	ip, r1
200012a0:	44bc      	add	ip, r7
200012a2:	4463      	add	r3, ip
200012a4:	689b      	ldr	r3, [r3, #8]
200012a6:	3b0c      	subs	r3, #12
200012a8:	1ad3      	subs	r3, r2, r3
200012aa:	3309      	adds	r3, #9
200012ac:	db5c      	blt.n	20001368 <main+0x116c>
200012ae:	4b27      	ldr	r3, [pc, #156]	; (2000134c <main+0x1150>)
200012b0:	22ad      	movs	r2, #173	; 0xad
200012b2:	00d2      	lsls	r2, r2, #3
200012b4:	4694      	mov	ip, r2
200012b6:	44bc      	add	ip, r7
200012b8:	4463      	add	r3, ip
200012ba:	689b      	ldr	r3, [r3, #8]
200012bc:	3b0a      	subs	r3, #10
200012be:	001a      	movs	r2, r3
200012c0:	4b27      	ldr	r3, [pc, #156]	; (20001360 <main+0x1164>)
200012c2:	21ad      	movs	r1, #173	; 0xad
200012c4:	00c9      	lsls	r1, r1, #3
200012c6:	468c      	mov	ip, r1
200012c8:	44bc      	add	ip, r7
200012ca:	4463      	add	r3, ip
200012cc:	689b      	ldr	r3, [r3, #8]
200012ce:	3b0c      	subs	r3, #12
200012d0:	1ad3      	subs	r3, r2, r3
200012d2:	2b09      	cmp	r3, #9
200012d4:	dc48      	bgt.n	20001368 <main+0x116c>
						dragon.xPos < 90) {
200012d6:	4b1d      	ldr	r3, [pc, #116]	; (2000134c <main+0x1150>)
200012d8:	22ad      	movs	r2, #173	; 0xad
200012da:	00d2      	lsls	r2, r2, #3
200012dc:	4694      	mov	ip, r2
200012de:	44bc      	add	ip, r7
200012e0:	4463      	add	r3, ip
200012e2:	685b      	ldr	r3, [r3, #4]
					if(abs(dragon.yPos - 10 - (stone.yPos - 12)) < 10 && 
200012e4:	2b59      	cmp	r3, #89	; 0x59
200012e6:	dc3f      	bgt.n	20001368 <main+0x116c>
						ascii_write("*BAM!*","");
200012e8:	4a1b      	ldr	r2, [pc, #108]	; (20001358 <main+0x115c>)
200012ea:	4b1e      	ldr	r3, [pc, #120]	; (20001364 <main+0x1168>)
200012ec:	0011      	movs	r1, r2
200012ee:	0018      	movs	r0, r3
200012f0:	f003 fb8e 	bl	20004a10 <ascii_write>
						dragonAlive = 0;
200012f4:	2300      	movs	r3, #0
200012f6:	22a8      	movs	r2, #168	; 0xa8
200012f8:	00d2      	lsls	r2, r2, #3
200012fa:	18ba      	adds	r2, r7, r2
200012fc:	6013      	str	r3, [r2, #0]
					if(abs(dragon.yPos - 10 - (stone.yPos - 12)) < 10 && 
200012fe:	e033      	b.n	20001368 <main+0x116c>
						//exploding = 1;
					}					

					
				} else if (!dragonAlive) {
20001300:	23a8      	movs	r3, #168	; 0xa8
20001302:	00db      	lsls	r3, r3, #3
20001304:	18fb      	adds	r3, r7, r3
20001306:	681b      	ldr	r3, [r3, #0]
20001308:	2b00      	cmp	r3, #0
2000130a:	d12e      	bne.n	2000136a <main+0x116e>
					draw_game_object( &dragon );
2000130c:	23c1      	movs	r3, #193	; 0xc1
2000130e:	009b      	lsls	r3, r3, #2
20001310:	18fb      	adds	r3, r7, r3
20001312:	0018      	movs	r0, r3
20001314:	f003 f8d0 	bl	200044b8 <draw_game_object>
					dragon.yPos += 2;
20001318:	4b0c      	ldr	r3, [pc, #48]	; (2000134c <main+0x1150>)
2000131a:	22ad      	movs	r2, #173	; 0xad
2000131c:	00d2      	lsls	r2, r2, #3
2000131e:	4694      	mov	ip, r2
20001320:	44bc      	add	ip, r7
20001322:	4463      	add	r3, ip
20001324:	689b      	ldr	r3, [r3, #8]
20001326:	1c9a      	adds	r2, r3, #2
20001328:	4b08      	ldr	r3, [pc, #32]	; (2000134c <main+0x1150>)
2000132a:	21ad      	movs	r1, #173	; 0xad
2000132c:	00c9      	lsls	r1, r1, #3
2000132e:	468c      	mov	ip, r1
20001330:	44bc      	add	ip, r7
20001332:	4463      	add	r3, ip
20001334:	609a      	str	r2, [r3, #8]
20001336:	e018      	b.n	2000136a <main+0x116e>
20001338:	20005740 	andcs	r5, r0, r0, asr #14
2000133c:	fffffbc8 			; <UNDEFINED> instruction: 0xfffffbc8
20001340:	0000054c 	andeq	r0, r0, ip, asr #10
20001344:	fffffd30 			; <UNDEFINED> instruction: 0xfffffd30
20001348:	fffffd78 			; <UNDEFINED> instruction: 0xfffffd78
2000134c:	fffffd9c 			; <UNDEFINED> instruction: 0xfffffd9c
20001350:	0000053c 	andeq	r0, r0, ip, lsr r5
20001354:	00000554 	andeq	r0, r0, r4, asr r5
20001358:	20015754 	andcs	r5, r1, r4, asr r7
2000135c:	20015760 	andcs	r5, r1, r0, ror #14
20001360:	fffffe08 			; <UNDEFINED> instruction: 0xfffffe08
20001364:	20015770 	andcs	r5, r1, r0, ror r7
					if(abs(dragon.yPos - 10 - (stone.yPos - 12)) < 10 && 
20001368:	46c0      	nop			; (mov r8, r8)
				}
				
				show_frame(1);
2000136a:	2001      	movs	r0, #1
2000136c:	f003 f8e5 	bl	2000453a <show_frame>
				
				static int last_climb_value = 100;
				if((read_DIL_single(CLIMB_TRIGGER) != last_climb_value) && player.xPos > 90 && player.xPos < 108 && !has_climbed) {
20001370:	2004      	movs	r0, #4
20001372:	f003 f95b 	bl	2000462c <read_DIL_single>
20001376:	0002      	movs	r2, r0
20001378:	4bdd      	ldr	r3, [pc, #884]	; (200016f0 <main+0x14f4>)
2000137a:	681b      	ldr	r3, [r3, #0]
2000137c:	429a      	cmp	r2, r3
2000137e:	d023      	beq.n	200013c8 <main+0x11cc>
20001380:	4bdc      	ldr	r3, [pc, #880]	; (200016f4 <main+0x14f8>)
20001382:	22ad      	movs	r2, #173	; 0xad
20001384:	00d2      	lsls	r2, r2, #3
20001386:	4694      	mov	ip, r2
20001388:	44bc      	add	ip, r7
2000138a:	4463      	add	r3, ip
2000138c:	685b      	ldr	r3, [r3, #4]
2000138e:	2b5a      	cmp	r3, #90	; 0x5a
20001390:	dd1a      	ble.n	200013c8 <main+0x11cc>
20001392:	4bd8      	ldr	r3, [pc, #864]	; (200016f4 <main+0x14f8>)
20001394:	22ad      	movs	r2, #173	; 0xad
20001396:	00d2      	lsls	r2, r2, #3
20001398:	4694      	mov	ip, r2
2000139a:	44bc      	add	ip, r7
2000139c:	4463      	add	r3, ip
2000139e:	685b      	ldr	r3, [r3, #4]
200013a0:	2b6b      	cmp	r3, #107	; 0x6b
200013a2:	dc11      	bgt.n	200013c8 <main+0x11cc>
200013a4:	4bd4      	ldr	r3, [pc, #848]	; (200016f8 <main+0x14fc>)
200013a6:	18fb      	adds	r3, r7, r3
200013a8:	681b      	ldr	r3, [r3, #0]
200013aa:	2b00      	cmp	r3, #0
200013ac:	d10c      	bne.n	200013c8 <main+0x11cc>
					is_climbing = 1;
200013ae:	2301      	movs	r3, #1
200013b0:	22ac      	movs	r2, #172	; 0xac
200013b2:	00d2      	lsls	r2, r2, #3
200013b4:	18ba      	adds	r2, r7, r2
200013b6:	6013      	str	r3, [r2, #0]
					player.xPos = 98;
200013b8:	4bce      	ldr	r3, [pc, #824]	; (200016f4 <main+0x14f8>)
200013ba:	22ad      	movs	r2, #173	; 0xad
200013bc:	00d2      	lsls	r2, r2, #3
200013be:	4694      	mov	ip, r2
200013c0:	44bc      	add	ip, r7
200013c2:	4463      	add	r3, ip
200013c4:	2262      	movs	r2, #98	; 0x62
200013c6:	605a      	str	r2, [r3, #4]
				}
				last_climb_value = read_DIL_single(CLIMB_TRIGGER);
200013c8:	2004      	movs	r0, #4
200013ca:	f003 f92f 	bl	2000462c <read_DIL_single>
200013ce:	0002      	movs	r2, r0
200013d0:	4bc7      	ldr	r3, [pc, #796]	; (200016f0 <main+0x14f4>)
200013d2:	601a      	str	r2, [r3, #0]
				
				if(is_climbing) {
200013d4:	23ac      	movs	r3, #172	; 0xac
200013d6:	00db      	lsls	r3, r3, #3
200013d8:	18fb      	adds	r3, r7, r3
200013da:	681b      	ldr	r3, [r3, #0]
200013dc:	2b00      	cmp	r3, #0
200013de:	d060      	beq.n	200014a2 <main+0x12a6>
					gameObjectUpdate( &player );
200013e0:	23a6      	movs	r3, #166	; 0xa6
200013e2:	009b      	lsls	r3, r3, #2
200013e4:	18fb      	adds	r3, r7, r3
200013e6:	0018      	movs	r0, r3
200013e8:	f000 fd4e 	bl	20001e88 <gameObjectUpdate>
					if (player.yPos % 6 == 0){
200013ec:	4bc1      	ldr	r3, [pc, #772]	; (200016f4 <main+0x14f8>)
200013ee:	22ad      	movs	r2, #173	; 0xad
200013f0:	00d2      	lsls	r2, r2, #3
200013f2:	4694      	mov	ip, r2
200013f4:	44bc      	add	ip, r7
200013f6:	4463      	add	r3, ip
200013f8:	689b      	ldr	r3, [r3, #8]
200013fa:	2106      	movs	r1, #6
200013fc:	0018      	movs	r0, r3
200013fe:	f004 f997 	bl	20005730 <__aeabi_idivmod>
20001402:	1e0b      	subs	r3, r1, #0
20001404:	d106      	bne.n	20001414 <main+0x1218>
						ascii_write("*tipp*","");
20001406:	4abd      	ldr	r2, [pc, #756]	; (200016fc <main+0x1500>)
20001408:	4bbd      	ldr	r3, [pc, #756]	; (20001700 <main+0x1504>)
2000140a:	0011      	movs	r1, r2
2000140c:	0018      	movs	r0, r3
2000140e:	f003 faff 	bl	20004a10 <ascii_write>
20001412:	e013      	b.n	2000143c <main+0x1240>
					}
					else if (player.yPos % 6 == 3) {
20001414:	4bb7      	ldr	r3, [pc, #732]	; (200016f4 <main+0x14f8>)
20001416:	22ad      	movs	r2, #173	; 0xad
20001418:	00d2      	lsls	r2, r2, #3
2000141a:	4694      	mov	ip, r2
2000141c:	44bc      	add	ip, r7
2000141e:	4463      	add	r3, ip
20001420:	689b      	ldr	r3, [r3, #8]
20001422:	2106      	movs	r1, #6
20001424:	0018      	movs	r0, r3
20001426:	f004 f983 	bl	20005730 <__aeabi_idivmod>
2000142a:	000b      	movs	r3, r1
2000142c:	2b03      	cmp	r3, #3
2000142e:	d105      	bne.n	2000143c <main+0x1240>
						ascii_write("*tapp*","");
20001430:	4ab2      	ldr	r2, [pc, #712]	; (200016fc <main+0x1500>)
20001432:	4bb4      	ldr	r3, [pc, #720]	; (20001704 <main+0x1508>)
20001434:	0011      	movs	r1, r2
20001436:	0018      	movs	r0, r3
20001438:	f003 faea 	bl	20004a10 <ascii_write>
					}
					if(player.yPos > 4) {
2000143c:	4bad      	ldr	r3, [pc, #692]	; (200016f4 <main+0x14f8>)
2000143e:	22ad      	movs	r2, #173	; 0xad
20001440:	00d2      	lsls	r2, r2, #3
20001442:	4694      	mov	ip, r2
20001444:	44bc      	add	ip, r7
20001446:	4463      	add	r3, ip
20001448:	689b      	ldr	r3, [r3, #8]
2000144a:	2b04      	cmp	r3, #4
2000144c:	dd0f      	ble.n	2000146e <main+0x1272>
						player.yPos--;
2000144e:	4ba9      	ldr	r3, [pc, #676]	; (200016f4 <main+0x14f8>)
20001450:	22ad      	movs	r2, #173	; 0xad
20001452:	00d2      	lsls	r2, r2, #3
20001454:	4694      	mov	ip, r2
20001456:	44bc      	add	ip, r7
20001458:	4463      	add	r3, ip
2000145a:	689b      	ldr	r3, [r3, #8]
2000145c:	1e5a      	subs	r2, r3, #1
2000145e:	4ba5      	ldr	r3, [pc, #660]	; (200016f4 <main+0x14f8>)
20001460:	21ad      	movs	r1, #173	; 0xad
20001462:	00c9      	lsls	r1, r1, #3
20001464:	468c      	mov	ip, r1
20001466:	44bc      	add	ip, r7
20001468:	4463      	add	r3, ip
2000146a:	609a      	str	r2, [r3, #8]
2000146c:	e025      	b.n	200014ba <main+0x12be>
					} else {	//Stay at top level and disable climbing forever!
						player.yPos = 5;
2000146e:	4ba1      	ldr	r3, [pc, #644]	; (200016f4 <main+0x14f8>)
20001470:	22ad      	movs	r2, #173	; 0xad
20001472:	00d2      	lsls	r2, r2, #3
20001474:	4694      	mov	ip, r2
20001476:	44bc      	add	ip, r7
20001478:	4463      	add	r3, ip
2000147a:	2205      	movs	r2, #5
2000147c:	609a      	str	r2, [r3, #8]
						player.xPos = 96;
2000147e:	4b9d      	ldr	r3, [pc, #628]	; (200016f4 <main+0x14f8>)
20001480:	22ad      	movs	r2, #173	; 0xad
20001482:	00d2      	lsls	r2, r2, #3
20001484:	4694      	mov	ip, r2
20001486:	44bc      	add	ip, r7
20001488:	4463      	add	r3, ip
2000148a:	2260      	movs	r2, #96	; 0x60
2000148c:	605a      	str	r2, [r3, #4]
						is_climbing = 0;
2000148e:	2300      	movs	r3, #0
20001490:	22ac      	movs	r2, #172	; 0xac
20001492:	00d2      	lsls	r2, r2, #3
20001494:	18ba      	adds	r2, r7, r2
20001496:	6013      	str	r3, [r2, #0]
						has_climbed = 1;
20001498:	2301      	movs	r3, #1
2000149a:	4a97      	ldr	r2, [pc, #604]	; (200016f8 <main+0x14fc>)
2000149c:	18ba      	adds	r2, r7, r2
2000149e:	6013      	str	r3, [r2, #0]
200014a0:	e00b      	b.n	200014ba <main+0x12be>
					}
				} else {
					player.update(&player);
200014a2:	4b94      	ldr	r3, [pc, #592]	; (200016f4 <main+0x14f8>)
200014a4:	22ad      	movs	r2, #173	; 0xad
200014a6:	00d2      	lsls	r2, r2, #3
200014a8:	4694      	mov	ip, r2
200014aa:	44bc      	add	ip, r7
200014ac:	4463      	add	r3, ip
200014ae:	68db      	ldr	r3, [r3, #12]
200014b0:	22a6      	movs	r2, #166	; 0xa6
200014b2:	0092      	lsls	r2, r2, #2
200014b4:	18ba      	adds	r2, r7, r2
200014b6:	0010      	movs	r0, r2
200014b8:	4798      	blx	r3
				}
				
				if (trophy.yPos >= player.yPos && (player.xPos + PLAYER_WIDTH/2 >= trophy.xPos && player.xPos <= trophy.xPos + PLAYER_WIDTH/2 )) {
200014ba:	4b93      	ldr	r3, [pc, #588]	; (20001708 <main+0x150c>)
200014bc:	22ad      	movs	r2, #173	; 0xad
200014be:	00d2      	lsls	r2, r2, #3
200014c0:	4694      	mov	ip, r2
200014c2:	44bc      	add	ip, r7
200014c4:	4463      	add	r3, ip
200014c6:	689a      	ldr	r2, [r3, #8]
200014c8:	4b8a      	ldr	r3, [pc, #552]	; (200016f4 <main+0x14f8>)
200014ca:	21ad      	movs	r1, #173	; 0xad
200014cc:	00c9      	lsls	r1, r1, #3
200014ce:	468c      	mov	ip, r1
200014d0:	44bc      	add	ip, r7
200014d2:	4463      	add	r3, ip
200014d4:	689b      	ldr	r3, [r3, #8]
200014d6:	429a      	cmp	r2, r3
200014d8:	db28      	blt.n	2000152c <main+0x1330>
200014da:	4b86      	ldr	r3, [pc, #536]	; (200016f4 <main+0x14f8>)
200014dc:	22ad      	movs	r2, #173	; 0xad
200014de:	00d2      	lsls	r2, r2, #3
200014e0:	4694      	mov	ip, r2
200014e2:	44bc      	add	ip, r7
200014e4:	4463      	add	r3, ip
200014e6:	685b      	ldr	r3, [r3, #4]
200014e8:	3309      	adds	r3, #9
200014ea:	001a      	movs	r2, r3
200014ec:	4b86      	ldr	r3, [pc, #536]	; (20001708 <main+0x150c>)
200014ee:	21ad      	movs	r1, #173	; 0xad
200014f0:	00c9      	lsls	r1, r1, #3
200014f2:	468c      	mov	ip, r1
200014f4:	44bc      	add	ip, r7
200014f6:	4463      	add	r3, ip
200014f8:	685b      	ldr	r3, [r3, #4]
200014fa:	429a      	cmp	r2, r3
200014fc:	db16      	blt.n	2000152c <main+0x1330>
200014fe:	4b7d      	ldr	r3, [pc, #500]	; (200016f4 <main+0x14f8>)
20001500:	22ad      	movs	r2, #173	; 0xad
20001502:	00d2      	lsls	r2, r2, #3
20001504:	4694      	mov	ip, r2
20001506:	44bc      	add	ip, r7
20001508:	4463      	add	r3, ip
2000150a:	685a      	ldr	r2, [r3, #4]
2000150c:	4b7e      	ldr	r3, [pc, #504]	; (20001708 <main+0x150c>)
2000150e:	21ad      	movs	r1, #173	; 0xad
20001510:	00c9      	lsls	r1, r1, #3
20001512:	468c      	mov	ip, r1
20001514:	44bc      	add	ip, r7
20001516:	4463      	add	r3, ip
20001518:	685b      	ldr	r3, [r3, #4]
2000151a:	3309      	adds	r3, #9
2000151c:	429a      	cmp	r2, r3
2000151e:	dc05      	bgt.n	2000152c <main+0x1330>
					ascii_write("Ghost: Only the dar-","ing gets the prize!");
20001520:	4a7a      	ldr	r2, [pc, #488]	; (2000170c <main+0x1510>)
20001522:	4b7b      	ldr	r3, [pc, #492]	; (20001710 <main+0x1514>)
20001524:	0011      	movs	r1, r2
20001526:	0018      	movs	r0, r3
20001528:	f003 fa72 	bl	20004a10 <ascii_write>
				}
				
				if (read_DIL_single(EXPLOSION_TRIGGER)){
2000152c:	2003      	movs	r0, #3
2000152e:	f003 f87d 	bl	2000462c <read_DIL_single>
20001532:	1e03      	subs	r3, r0, #0
20001534:	d047      	beq.n	200015c6 <main+0x13ca>
					if (trophy.yPos >= player.yPos && (player.xPos + PLAYER_WIDTH/2 >= trophy.xPos && player.xPos <= trophy.xPos + PLAYER_WIDTH/2 )){
20001536:	4b74      	ldr	r3, [pc, #464]	; (20001708 <main+0x150c>)
20001538:	22ad      	movs	r2, #173	; 0xad
2000153a:	00d2      	lsls	r2, r2, #3
2000153c:	4694      	mov	ip, r2
2000153e:	44bc      	add	ip, r7
20001540:	4463      	add	r3, ip
20001542:	689a      	ldr	r2, [r3, #8]
20001544:	4b6b      	ldr	r3, [pc, #428]	; (200016f4 <main+0x14f8>)
20001546:	21ad      	movs	r1, #173	; 0xad
20001548:	00c9      	lsls	r1, r1, #3
2000154a:	468c      	mov	ip, r1
2000154c:	44bc      	add	ip, r7
2000154e:	4463      	add	r3, ip
20001550:	689b      	ldr	r3, [r3, #8]
20001552:	429a      	cmp	r2, r3
20001554:	db29      	blt.n	200015aa <main+0x13ae>
20001556:	4b67      	ldr	r3, [pc, #412]	; (200016f4 <main+0x14f8>)
20001558:	22ad      	movs	r2, #173	; 0xad
2000155a:	00d2      	lsls	r2, r2, #3
2000155c:	4694      	mov	ip, r2
2000155e:	44bc      	add	ip, r7
20001560:	4463      	add	r3, ip
20001562:	685b      	ldr	r3, [r3, #4]
20001564:	3309      	adds	r3, #9
20001566:	001a      	movs	r2, r3
20001568:	4b67      	ldr	r3, [pc, #412]	; (20001708 <main+0x150c>)
2000156a:	21ad      	movs	r1, #173	; 0xad
2000156c:	00c9      	lsls	r1, r1, #3
2000156e:	468c      	mov	ip, r1
20001570:	44bc      	add	ip, r7
20001572:	4463      	add	r3, ip
20001574:	685b      	ldr	r3, [r3, #4]
20001576:	429a      	cmp	r2, r3
20001578:	db17      	blt.n	200015aa <main+0x13ae>
2000157a:	4b5e      	ldr	r3, [pc, #376]	; (200016f4 <main+0x14f8>)
2000157c:	22ad      	movs	r2, #173	; 0xad
2000157e:	00d2      	lsls	r2, r2, #3
20001580:	4694      	mov	ip, r2
20001582:	44bc      	add	ip, r7
20001584:	4463      	add	r3, ip
20001586:	685a      	ldr	r2, [r3, #4]
20001588:	4b5f      	ldr	r3, [pc, #380]	; (20001708 <main+0x150c>)
2000158a:	21ad      	movs	r1, #173	; 0xad
2000158c:	00c9      	lsls	r1, r1, #3
2000158e:	468c      	mov	ip, r1
20001590:	44bc      	add	ip, r7
20001592:	4463      	add	r3, ip
20001594:	685b      	ldr	r3, [r3, #4]
20001596:	3309      	adds	r3, #9
20001598:	429a      	cmp	r2, r3
2000159a:	dc06      	bgt.n	200015aa <main+0x13ae>
						counter = 0;
2000159c:	4b5d      	ldr	r3, [pc, #372]	; (20001714 <main+0x1518>)
2000159e:	2200      	movs	r2, #0
200015a0:	601a      	str	r2, [r3, #0]
						current_screen = WIN_SCREEN;
200015a2:	4b5d      	ldr	r3, [pc, #372]	; (20001718 <main+0x151c>)
200015a4:	2204      	movs	r2, #4
200015a6:	601a      	str	r2, [r3, #0]
200015a8:	e00d      	b.n	200015c6 <main+0x13ca>
						//ascii_write("Roger (King Lear): ","I am proud of you!");
					}
					else{
						game_over_adder = 5;
200015aa:	2305      	movs	r3, #5
200015ac:	4a5b      	ldr	r2, [pc, #364]	; (2000171c <main+0x1520>)
200015ae:	18ba      	adds	r2, r7, r2
200015b0:	6013      	str	r3, [r2, #0]
						ascii_write("*KABOOOOM*","");
200015b2:	4a52      	ldr	r2, [pc, #328]	; (200016fc <main+0x1500>)
200015b4:	4b5a      	ldr	r3, [pc, #360]	; (20001720 <main+0x1524>)
200015b6:	0011      	movs	r1, r2
200015b8:	0018      	movs	r0, r3
200015ba:	f003 fa29 	bl	20004a10 <ascii_write>
						exploding = 1;
200015be:	2301      	movs	r3, #1
200015c0:	4a58      	ldr	r2, [pc, #352]	; (20001724 <main+0x1528>)
200015c2:	18ba      	adds	r2, r7, r2
200015c4:	6013      	str	r3, [r2, #0]
				}
				
				//fire1_indoors.update(&fire1_indoors);
				//fire updates done above
				
				hair.update(&hair);
200015c6:	4b58      	ldr	r3, [pc, #352]	; (20001728 <main+0x152c>)
200015c8:	22ad      	movs	r2, #173	; 0xad
200015ca:	00d2      	lsls	r2, r2, #3
200015cc:	4694      	mov	ip, r2
200015ce:	44bc      	add	ip, r7
200015d0:	4463      	add	r3, ip
200015d2:	68db      	ldr	r3, [r3, #12]
200015d4:	22d3      	movs	r2, #211	; 0xd3
200015d6:	0092      	lsls	r2, r2, #2
200015d8:	18ba      	adds	r2, r7, r2
200015da:	0010      	movs	r0, r2
200015dc:	4798      	blx	r3
				if(read_DIL_single(HAIR_TRIGGER)) {
200015de:	2001      	movs	r0, #1
200015e0:	f003 f824 	bl	2000462c <read_DIL_single>
200015e4:	1e03      	subs	r3, r0, #0
200015e6:	d029      	beq.n	2000163c <main+0x1440>
					if (lastFireTrigger == 0){
200015e8:	4b50      	ldr	r3, [pc, #320]	; (2000172c <main+0x1530>)
200015ea:	18fb      	adds	r3, r7, r3
200015ec:	681b      	ldr	r3, [r3, #0]
200015ee:	2b00      	cmp	r3, #0
200015f0:	d105      	bne.n	200015fe <main+0x1402>
						ascii_write("*FwOOOo*","");
200015f2:	4a42      	ldr	r2, [pc, #264]	; (200016fc <main+0x1500>)
200015f4:	4b4e      	ldr	r3, [pc, #312]	; (20001730 <main+0x1534>)
200015f6:	0011      	movs	r1, r2
200015f8:	0018      	movs	r0, r3
200015fa:	f003 fa09 	bl	20004a10 <ascii_write>
					}
					hair.xPos = player.xPos;
200015fe:	4b3d      	ldr	r3, [pc, #244]	; (200016f4 <main+0x14f8>)
20001600:	22ad      	movs	r2, #173	; 0xad
20001602:	00d2      	lsls	r2, r2, #3
20001604:	4694      	mov	ip, r2
20001606:	44bc      	add	ip, r7
20001608:	4463      	add	r3, ip
2000160a:	685a      	ldr	r2, [r3, #4]
2000160c:	4b46      	ldr	r3, [pc, #280]	; (20001728 <main+0x152c>)
2000160e:	21ad      	movs	r1, #173	; 0xad
20001610:	00c9      	lsls	r1, r1, #3
20001612:	468c      	mov	ip, r1
20001614:	44bc      	add	ip, r7
20001616:	4463      	add	r3, ip
20001618:	605a      	str	r2, [r3, #4]
					hair.yPos = player.yPos - 28;
2000161a:	4b36      	ldr	r3, [pc, #216]	; (200016f4 <main+0x14f8>)
2000161c:	22ad      	movs	r2, #173	; 0xad
2000161e:	00d2      	lsls	r2, r2, #3
20001620:	4694      	mov	ip, r2
20001622:	44bc      	add	ip, r7
20001624:	4463      	add	r3, ip
20001626:	689b      	ldr	r3, [r3, #8]
20001628:	3b1c      	subs	r3, #28
2000162a:	001a      	movs	r2, r3
2000162c:	4b3e      	ldr	r3, [pc, #248]	; (20001728 <main+0x152c>)
2000162e:	21ad      	movs	r1, #173	; 0xad
20001630:	00c9      	lsls	r1, r1, #3
20001632:	468c      	mov	ip, r1
20001634:	44bc      	add	ip, r7
20001636:	4463      	add	r3, ip
20001638:	609a      	str	r2, [r3, #8]
2000163a:	e011      	b.n	20001660 <main+0x1464>
				} else {
					hair.xPos = -100;
2000163c:	4b3a      	ldr	r3, [pc, #232]	; (20001728 <main+0x152c>)
2000163e:	22ad      	movs	r2, #173	; 0xad
20001640:	00d2      	lsls	r2, r2, #3
20001642:	4694      	mov	ip, r2
20001644:	44bc      	add	ip, r7
20001646:	4463      	add	r3, ip
20001648:	2264      	movs	r2, #100	; 0x64
2000164a:	4252      	negs	r2, r2
2000164c:	605a      	str	r2, [r3, #4]
					hair.yPos = -100;
2000164e:	4b36      	ldr	r3, [pc, #216]	; (20001728 <main+0x152c>)
20001650:	22ad      	movs	r2, #173	; 0xad
20001652:	00d2      	lsls	r2, r2, #3
20001654:	4694      	mov	ip, r2
20001656:	44bc      	add	ip, r7
20001658:	4463      	add	r3, ip
2000165a:	2264      	movs	r2, #100	; 0x64
2000165c:	4252      	negs	r2, r2
2000165e:	609a      	str	r2, [r3, #8]
				}
				
				
				
				if (!no_DIP && DIP.yPos >= player.yPos && (player.xPos + DIP_WIDTH/2 >= DIP.xPos && player.xPos <= DIP.xPos + DIP_WIDTH/2 )){ // DIP_collision
20001660:	23aa      	movs	r3, #170	; 0xaa
20001662:	00db      	lsls	r3, r3, #3
20001664:	18fb      	adds	r3, r7, r3
20001666:	681b      	ldr	r3, [r3, #0]
20001668:	2b00      	cmp	r3, #0
2000166a:	d169      	bne.n	20001740 <main+0x1544>
2000166c:	4b31      	ldr	r3, [pc, #196]	; (20001734 <main+0x1538>)
2000166e:	22ad      	movs	r2, #173	; 0xad
20001670:	00d2      	lsls	r2, r2, #3
20001672:	4694      	mov	ip, r2
20001674:	44bc      	add	ip, r7
20001676:	4463      	add	r3, ip
20001678:	689a      	ldr	r2, [r3, #8]
2000167a:	4b1e      	ldr	r3, [pc, #120]	; (200016f4 <main+0x14f8>)
2000167c:	21ad      	movs	r1, #173	; 0xad
2000167e:	00c9      	lsls	r1, r1, #3
20001680:	468c      	mov	ip, r1
20001682:	44bc      	add	ip, r7
20001684:	4463      	add	r3, ip
20001686:	689b      	ldr	r3, [r3, #8]
20001688:	429a      	cmp	r2, r3
2000168a:	db59      	blt.n	20001740 <main+0x1544>
2000168c:	4b19      	ldr	r3, [pc, #100]	; (200016f4 <main+0x14f8>)
2000168e:	22ad      	movs	r2, #173	; 0xad
20001690:	00d2      	lsls	r2, r2, #3
20001692:	4694      	mov	ip, r2
20001694:	44bc      	add	ip, r7
20001696:	4463      	add	r3, ip
20001698:	685b      	ldr	r3, [r3, #4]
2000169a:	3309      	adds	r3, #9
2000169c:	001a      	movs	r2, r3
2000169e:	4b25      	ldr	r3, [pc, #148]	; (20001734 <main+0x1538>)
200016a0:	21ad      	movs	r1, #173	; 0xad
200016a2:	00c9      	lsls	r1, r1, #3
200016a4:	468c      	mov	ip, r1
200016a6:	44bc      	add	ip, r7
200016a8:	4463      	add	r3, ip
200016aa:	685b      	ldr	r3, [r3, #4]
200016ac:	429a      	cmp	r2, r3
200016ae:	db47      	blt.n	20001740 <main+0x1544>
200016b0:	4b10      	ldr	r3, [pc, #64]	; (200016f4 <main+0x14f8>)
200016b2:	22ad      	movs	r2, #173	; 0xad
200016b4:	00d2      	lsls	r2, r2, #3
200016b6:	4694      	mov	ip, r2
200016b8:	44bc      	add	ip, r7
200016ba:	4463      	add	r3, ip
200016bc:	685a      	ldr	r2, [r3, #4]
200016be:	4b1d      	ldr	r3, [pc, #116]	; (20001734 <main+0x1538>)
200016c0:	21ad      	movs	r1, #173	; 0xad
200016c2:	00c9      	lsls	r1, r1, #3
200016c4:	468c      	mov	ip, r1
200016c6:	44bc      	add	ip, r7
200016c8:	4463      	add	r3, ip
200016ca:	685b      	ldr	r3, [r3, #4]
200016cc:	3309      	adds	r3, #9
200016ce:	429a      	cmp	r2, r3
200016d0:	dc36      	bgt.n	20001740 <main+0x1544>
					game_over_adder = 5;
200016d2:	2305      	movs	r3, #5
200016d4:	4a11      	ldr	r2, [pc, #68]	; (2000171c <main+0x1520>)
200016d6:	18ba      	adds	r2, r7, r2
200016d8:	6013      	str	r3, [r2, #0]
					ascii_write("DIPs-WITCH:","      NyAHAHAHAH!");
200016da:	4a17      	ldr	r2, [pc, #92]	; (20001738 <main+0x153c>)
200016dc:	4b17      	ldr	r3, [pc, #92]	; (2000173c <main+0x1540>)
200016de:	0011      	movs	r1, r2
200016e0:	0018      	movs	r0, r3
200016e2:	f003 f995 	bl	20004a10 <ascii_write>
					exploding = 1;
200016e6:	2301      	movs	r3, #1
200016e8:	4a0e      	ldr	r2, [pc, #56]	; (20001724 <main+0x1528>)
200016ea:	18ba      	adds	r2, r7, r2
200016ec:	6013      	str	r3, [r2, #0]
200016ee:	e04b      	b.n	20001788 <main+0x158c>
200016f0:	20009b24 	andcs	r9, r0, r4, lsr #22
200016f4:	fffffd30 			; <UNDEFINED> instruction: 0xfffffd30
200016f8:	0000055c 	andeq	r0, r0, ip, asr r5
200016fc:	20015754 	andcs	r5, r1, r4, asr r7
20001700:	20015778 	andcs	r5, r1, r8, ror r7
20001704:	20015780 	andcs	r5, r1, r0, lsl #15
20001708:	fffffe2c 			; <UNDEFINED> instruction: 0xfffffe2c
2000170c:	20015788 	andcs	r5, r1, r8, lsl #15
20001710:	2001579c 	mulcs	r1, ip, r7
20001714:	2000573c 	andcs	r5, r0, ip, lsr r7
20001718:	20009b14 	andcs	r9, r0, r4, lsl fp
2000171c:	00000554 	andeq	r0, r0, r4, asr r5
20001720:	200157b4 			; <UNDEFINED> instruction: 0x200157b4
20001724:	0000054c 	andeq	r0, r0, ip, asr #10
20001728:	fffffde4 			; <UNDEFINED> instruction: 0xfffffde4
2000172c:	00000544 	andeq	r0, r0, r4, asr #10
20001730:	200157c0 	andcs	r5, r1, r0, asr #15
20001734:	fffffd54 			; <UNDEFINED> instruction: 0xfffffd54
20001738:	200157cc 	andcs	r5, r1, ip, asr #15
2000173c:	200156f4 	strdcs	r5, [r1], -r4
				} else if(!no_DIP) {
20001740:	23aa      	movs	r3, #170	; 0xaa
20001742:	00db      	lsls	r3, r3, #3
20001744:	18fb      	adds	r3, r7, r3
20001746:	681b      	ldr	r3, [r3, #0]
20001748:	2b00      	cmp	r3, #0
2000174a:	d11d      	bne.n	20001788 <main+0x158c>
					setPlayerPosition(player.xPos, player.yPos);
2000174c:	4bd8      	ldr	r3, [pc, #864]	; (20001ab0 <main+0x18b4>)
2000174e:	22ad      	movs	r2, #173	; 0xad
20001750:	00d2      	lsls	r2, r2, #3
20001752:	4694      	mov	ip, r2
20001754:	44bc      	add	ip, r7
20001756:	4463      	add	r3, ip
20001758:	685a      	ldr	r2, [r3, #4]
2000175a:	4bd5      	ldr	r3, [pc, #852]	; (20001ab0 <main+0x18b4>)
2000175c:	21ad      	movs	r1, #173	; 0xad
2000175e:	00c9      	lsls	r1, r1, #3
20001760:	468c      	mov	ip, r1
20001762:	44bc      	add	ip, r7
20001764:	4463      	add	r3, ip
20001766:	689b      	ldr	r3, [r3, #8]
20001768:	0019      	movs	r1, r3
2000176a:	0010      	movs	r0, r2
2000176c:	f001 fa0e 	bl	20002b8c <setPlayerPosition>
					DIP.update(&DIP);					
20001770:	4bd0      	ldr	r3, [pc, #832]	; (20001ab4 <main+0x18b8>)
20001772:	22ad      	movs	r2, #173	; 0xad
20001774:	00d2      	lsls	r2, r2, #3
20001776:	4694      	mov	ip, r2
20001778:	44bc      	add	ip, r7
2000177a:	4463      	add	r3, ip
2000177c:	68db      	ldr	r3, [r3, #12]
2000177e:	22af      	movs	r2, #175	; 0xaf
20001780:	0092      	lsls	r2, r2, #2
20001782:	18ba      	adds	r2, r7, r2
20001784:	0010      	movs	r0, r2
20001786:	4798      	blx	r3
				}
				
				static int distance_player_fire;	//fire_collision
				static int j;
				for(j = 0; j < 3; j++) {
20001788:	4bcb      	ldr	r3, [pc, #812]	; (20001ab8 <main+0x18bc>)
2000178a:	2200      	movs	r2, #0
2000178c:	601a      	str	r2, [r3, #0]
2000178e:	e064      	b.n	2000185a <main+0x165e>
					distance_player_fire = (player.xPos + 9) - (fires[j].xPos + 5);
20001790:	4bc7      	ldr	r3, [pc, #796]	; (20001ab0 <main+0x18b4>)
20001792:	22ad      	movs	r2, #173	; 0xad
20001794:	00d2      	lsls	r2, r2, #3
20001796:	4694      	mov	ip, r2
20001798:	44bc      	add	ip, r7
2000179a:	4463      	add	r3, ip
2000179c:	685b      	ldr	r3, [r3, #4]
2000179e:	3309      	adds	r3, #9
200017a0:	0019      	movs	r1, r3
200017a2:	4bc5      	ldr	r3, [pc, #788]	; (20001ab8 <main+0x18bc>)
200017a4:	681a      	ldr	r2, [r3, #0]
200017a6:	4bc5      	ldr	r3, [pc, #788]	; (20001abc <main+0x18c0>)
200017a8:	20ad      	movs	r0, #173	; 0xad
200017aa:	00c0      	lsls	r0, r0, #3
200017ac:	1838      	adds	r0, r7, r0
200017ae:	18c0      	adds	r0, r0, r3
200017b0:	0013      	movs	r3, r2
200017b2:	00db      	lsls	r3, r3, #3
200017b4:	189b      	adds	r3, r3, r2
200017b6:	009b      	lsls	r3, r3, #2
200017b8:	18c3      	adds	r3, r0, r3
200017ba:	3304      	adds	r3, #4
200017bc:	681b      	ldr	r3, [r3, #0]
200017be:	3305      	adds	r3, #5
200017c0:	1aca      	subs	r2, r1, r3
200017c2:	4bbf      	ldr	r3, [pc, #764]	; (20001ac0 <main+0x18c4>)
200017c4:	601a      	str	r2, [r3, #0]
					if(player.yPos > (fires[j].yPos - 18 + 7) && 
200017c6:	4bba      	ldr	r3, [pc, #744]	; (20001ab0 <main+0x18b4>)
200017c8:	22ad      	movs	r2, #173	; 0xad
200017ca:	00d2      	lsls	r2, r2, #3
200017cc:	4694      	mov	ip, r2
200017ce:	44bc      	add	ip, r7
200017d0:	4463      	add	r3, ip
200017d2:	6899      	ldr	r1, [r3, #8]
200017d4:	4bb8      	ldr	r3, [pc, #736]	; (20001ab8 <main+0x18bc>)
200017d6:	681a      	ldr	r2, [r3, #0]
200017d8:	4bb8      	ldr	r3, [pc, #736]	; (20001abc <main+0x18c0>)
200017da:	20ad      	movs	r0, #173	; 0xad
200017dc:	00c0      	lsls	r0, r0, #3
200017de:	1838      	adds	r0, r7, r0
200017e0:	18c0      	adds	r0, r0, r3
200017e2:	0013      	movs	r3, r2
200017e4:	00db      	lsls	r3, r3, #3
200017e6:	189b      	adds	r3, r3, r2
200017e8:	009b      	lsls	r3, r3, #2
200017ea:	18c3      	adds	r3, r0, r3
200017ec:	3308      	adds	r3, #8
200017ee:	681b      	ldr	r3, [r3, #0]
200017f0:	3b0b      	subs	r3, #11
200017f2:	4299      	cmp	r1, r3
200017f4:	dd2c      	ble.n	20001850 <main+0x1654>
							player.yPos < fires[j].yPos && distance_player_fire < 8 && distance_player_fire > -8) {
200017f6:	4bae      	ldr	r3, [pc, #696]	; (20001ab0 <main+0x18b4>)
200017f8:	22ad      	movs	r2, #173	; 0xad
200017fa:	00d2      	lsls	r2, r2, #3
200017fc:	4694      	mov	ip, r2
200017fe:	44bc      	add	ip, r7
20001800:	4463      	add	r3, ip
20001802:	6899      	ldr	r1, [r3, #8]
20001804:	4bac      	ldr	r3, [pc, #688]	; (20001ab8 <main+0x18bc>)
20001806:	681a      	ldr	r2, [r3, #0]
20001808:	4bac      	ldr	r3, [pc, #688]	; (20001abc <main+0x18c0>)
2000180a:	20ad      	movs	r0, #173	; 0xad
2000180c:	00c0      	lsls	r0, r0, #3
2000180e:	1838      	adds	r0, r7, r0
20001810:	18c0      	adds	r0, r0, r3
20001812:	0013      	movs	r3, r2
20001814:	00db      	lsls	r3, r3, #3
20001816:	189b      	adds	r3, r3, r2
20001818:	009b      	lsls	r3, r3, #2
2000181a:	18c3      	adds	r3, r0, r3
2000181c:	3308      	adds	r3, #8
2000181e:	681b      	ldr	r3, [r3, #0]
					if(player.yPos > (fires[j].yPos - 18 + 7) && 
20001820:	4299      	cmp	r1, r3
20001822:	da15      	bge.n	20001850 <main+0x1654>
							player.yPos < fires[j].yPos && distance_player_fire < 8 && distance_player_fire > -8) {
20001824:	4ba6      	ldr	r3, [pc, #664]	; (20001ac0 <main+0x18c4>)
20001826:	681b      	ldr	r3, [r3, #0]
20001828:	2b07      	cmp	r3, #7
2000182a:	dc11      	bgt.n	20001850 <main+0x1654>
2000182c:	4ba4      	ldr	r3, [pc, #656]	; (20001ac0 <main+0x18c4>)
2000182e:	681b      	ldr	r3, [r3, #0]
20001830:	3307      	adds	r3, #7
20001832:	db0d      	blt.n	20001850 <main+0x1654>
						game_over_adder = 5;
20001834:	2305      	movs	r3, #5
20001836:	4aa3      	ldr	r2, [pc, #652]	; (20001ac4 <main+0x18c8>)
20001838:	18ba      	adds	r2, r7, r2
2000183a:	6013      	str	r3, [r2, #0]
						ascii_write("*FWOOSH*","");
2000183c:	4aa2      	ldr	r2, [pc, #648]	; (20001ac8 <main+0x18cc>)
2000183e:	4ba3      	ldr	r3, [pc, #652]	; (20001acc <main+0x18d0>)
20001840:	0011      	movs	r1, r2
20001842:	0018      	movs	r0, r3
20001844:	f003 f8e4 	bl	20004a10 <ascii_write>
						exploding = 1;
20001848:	2301      	movs	r3, #1
2000184a:	4aa1      	ldr	r2, [pc, #644]	; (20001ad0 <main+0x18d4>)
2000184c:	18ba      	adds	r2, r7, r2
2000184e:	6013      	str	r3, [r2, #0]
				for(j = 0; j < 3; j++) {
20001850:	4b99      	ldr	r3, [pc, #612]	; (20001ab8 <main+0x18bc>)
20001852:	681b      	ldr	r3, [r3, #0]
20001854:	1c5a      	adds	r2, r3, #1
20001856:	4b98      	ldr	r3, [pc, #608]	; (20001ab8 <main+0x18bc>)
20001858:	601a      	str	r2, [r3, #0]
2000185a:	4b97      	ldr	r3, [pc, #604]	; (20001ab8 <main+0x18bc>)
2000185c:	681b      	ldr	r3, [r3, #0]
2000185e:	2b02      	cmp	r3, #2
20001860:	dd96      	ble.n	20001790 <main+0x1594>
				}
				
				static int distance_player_stone;	//fire_collision
				static int k;
			
				distance_player_stone = (player.xPos + 9) - (stone.xPos + 12);
20001862:	4b93      	ldr	r3, [pc, #588]	; (20001ab0 <main+0x18b4>)
20001864:	22ad      	movs	r2, #173	; 0xad
20001866:	00d2      	lsls	r2, r2, #3
20001868:	4694      	mov	ip, r2
2000186a:	44bc      	add	ip, r7
2000186c:	4463      	add	r3, ip
2000186e:	685b      	ldr	r3, [r3, #4]
20001870:	3309      	adds	r3, #9
20001872:	001a      	movs	r2, r3
20001874:	4b97      	ldr	r3, [pc, #604]	; (20001ad4 <main+0x18d8>)
20001876:	21ad      	movs	r1, #173	; 0xad
20001878:	00c9      	lsls	r1, r1, #3
2000187a:	468c      	mov	ip, r1
2000187c:	44bc      	add	ip, r7
2000187e:	4463      	add	r3, ip
20001880:	685b      	ldr	r3, [r3, #4]
20001882:	330c      	adds	r3, #12
20001884:	1ad2      	subs	r2, r2, r3
20001886:	4b94      	ldr	r3, [pc, #592]	; (20001ad8 <main+0x18dc>)
20001888:	601a      	str	r2, [r3, #0]
				if(abs(player.yPos - 9 - (stone.yPos - 12)) < 10 && 
2000188a:	4b89      	ldr	r3, [pc, #548]	; (20001ab0 <main+0x18b4>)
2000188c:	22ad      	movs	r2, #173	; 0xad
2000188e:	00d2      	lsls	r2, r2, #3
20001890:	4694      	mov	ip, r2
20001892:	44bc      	add	ip, r7
20001894:	4463      	add	r3, ip
20001896:	689b      	ldr	r3, [r3, #8]
20001898:	3b09      	subs	r3, #9
2000189a:	001a      	movs	r2, r3
2000189c:	4b8d      	ldr	r3, [pc, #564]	; (20001ad4 <main+0x18d8>)
2000189e:	21ad      	movs	r1, #173	; 0xad
200018a0:	00c9      	lsls	r1, r1, #3
200018a2:	468c      	mov	ip, r1
200018a4:	44bc      	add	ip, r7
200018a6:	4463      	add	r3, ip
200018a8:	689b      	ldr	r3, [r3, #8]
200018aa:	3b0c      	subs	r3, #12
200018ac:	1ad3      	subs	r3, r2, r3
200018ae:	3309      	adds	r3, #9
200018b0:	db29      	blt.n	20001906 <main+0x170a>
200018b2:	4b7f      	ldr	r3, [pc, #508]	; (20001ab0 <main+0x18b4>)
200018b4:	22ad      	movs	r2, #173	; 0xad
200018b6:	00d2      	lsls	r2, r2, #3
200018b8:	4694      	mov	ip, r2
200018ba:	44bc      	add	ip, r7
200018bc:	4463      	add	r3, ip
200018be:	689b      	ldr	r3, [r3, #8]
200018c0:	3b09      	subs	r3, #9
200018c2:	001a      	movs	r2, r3
200018c4:	4b83      	ldr	r3, [pc, #524]	; (20001ad4 <main+0x18d8>)
200018c6:	21ad      	movs	r1, #173	; 0xad
200018c8:	00c9      	lsls	r1, r1, #3
200018ca:	468c      	mov	ip, r1
200018cc:	44bc      	add	ip, r7
200018ce:	4463      	add	r3, ip
200018d0:	689b      	ldr	r3, [r3, #8]
200018d2:	3b0c      	subs	r3, #12
200018d4:	1ad3      	subs	r3, r2, r3
200018d6:	2b09      	cmp	r3, #9
200018d8:	dc15      	bgt.n	20001906 <main+0x170a>
200018da:	4b7f      	ldr	r3, [pc, #508]	; (20001ad8 <main+0x18dc>)
200018dc:	681b      	ldr	r3, [r3, #0]
200018de:	3309      	adds	r3, #9
200018e0:	db11      	blt.n	20001906 <main+0x170a>
						abs(distance_player_stone) < 10) {
200018e2:	4b7d      	ldr	r3, [pc, #500]	; (20001ad8 <main+0x18dc>)
200018e4:	681b      	ldr	r3, [r3, #0]
200018e6:	2b09      	cmp	r3, #9
200018e8:	dc0d      	bgt.n	20001906 <main+0x170a>
					game_over_adder = 5;
200018ea:	2305      	movs	r3, #5
200018ec:	4a75      	ldr	r2, [pc, #468]	; (20001ac4 <main+0x18c8>)
200018ee:	18ba      	adds	r2, r7, r2
200018f0:	6013      	str	r3, [r2, #0]
					ascii_write("*BAM!*","");
200018f2:	4a75      	ldr	r2, [pc, #468]	; (20001ac8 <main+0x18cc>)
200018f4:	4b79      	ldr	r3, [pc, #484]	; (20001adc <main+0x18e0>)
200018f6:	0011      	movs	r1, r2
200018f8:	0018      	movs	r0, r3
200018fa:	f003 f889 	bl	20004a10 <ascii_write>
					exploding = 1;
200018fe:	2301      	movs	r3, #1
20001900:	4a73      	ldr	r2, [pc, #460]	; (20001ad0 <main+0x18d4>)
20001902:	18ba      	adds	r2, r7, r2
20001904:	6013      	str	r3, [r2, #0]
				}					
				
				
				static int trophy_burned = 0;	//trophy burning
				static int distance_hair_trophy;
				distance_hair_trophy = (hair.xPos + 9) - (trophy.xPos + 5);
20001906:	4b76      	ldr	r3, [pc, #472]	; (20001ae0 <main+0x18e4>)
20001908:	22ad      	movs	r2, #173	; 0xad
2000190a:	00d2      	lsls	r2, r2, #3
2000190c:	4694      	mov	ip, r2
2000190e:	44bc      	add	ip, r7
20001910:	4463      	add	r3, ip
20001912:	685b      	ldr	r3, [r3, #4]
20001914:	3309      	adds	r3, #9
20001916:	001a      	movs	r2, r3
20001918:	4b72      	ldr	r3, [pc, #456]	; (20001ae4 <main+0x18e8>)
2000191a:	21ad      	movs	r1, #173	; 0xad
2000191c:	00c9      	lsls	r1, r1, #3
2000191e:	468c      	mov	ip, r1
20001920:	44bc      	add	ip, r7
20001922:	4463      	add	r3, ip
20001924:	685b      	ldr	r3, [r3, #4]
20001926:	3305      	adds	r3, #5
20001928:	1ad2      	subs	r2, r2, r3
2000192a:	4b6f      	ldr	r3, [pc, #444]	; (20001ae8 <main+0x18ec>)
2000192c:	601a      	str	r2, [r3, #0]
				if(!trophy_burned && abs(distance_hair_trophy) < 5) {
2000192e:	4b6f      	ldr	r3, [pc, #444]	; (20001aec <main+0x18f0>)
20001930:	681b      	ldr	r3, [r3, #0]
20001932:	2b00      	cmp	r3, #0
20001934:	d136      	bne.n	200019a4 <main+0x17a8>
20001936:	4b6c      	ldr	r3, [pc, #432]	; (20001ae8 <main+0x18ec>)
20001938:	681b      	ldr	r3, [r3, #0]
2000193a:	3304      	adds	r3, #4
2000193c:	db32      	blt.n	200019a4 <main+0x17a8>
2000193e:	4b6a      	ldr	r3, [pc, #424]	; (20001ae8 <main+0x18ec>)
20001940:	681b      	ldr	r3, [r3, #0]
20001942:	2b04      	cmp	r3, #4
20001944:	dc2e      	bgt.n	200019a4 <main+0x17a8>
					trophy_burned = 1;
20001946:	4b69      	ldr	r3, [pc, #420]	; (20001aec <main+0x18f0>)
20001948:	2201      	movs	r2, #1
2000194a:	601a      	str	r2, [r3, #0]
					fires[1].xPos = trophy.xPos;
2000194c:	4b65      	ldr	r3, [pc, #404]	; (20001ae4 <main+0x18e8>)
2000194e:	22ad      	movs	r2, #173	; 0xad
20001950:	00d2      	lsls	r2, r2, #3
20001952:	4694      	mov	ip, r2
20001954:	44bc      	add	ip, r7
20001956:	4463      	add	r3, ip
20001958:	685a      	ldr	r2, [r3, #4]
2000195a:	4b58      	ldr	r3, [pc, #352]	; (20001abc <main+0x18c0>)
2000195c:	21ad      	movs	r1, #173	; 0xad
2000195e:	00c9      	lsls	r1, r1, #3
20001960:	468c      	mov	ip, r1
20001962:	44bc      	add	ip, r7
20001964:	4463      	add	r3, ip
20001966:	629a      	str	r2, [r3, #40]	; 0x28
					fires[1].yPos = trophy.yPos + 5;
20001968:	4b5e      	ldr	r3, [pc, #376]	; (20001ae4 <main+0x18e8>)
2000196a:	22ad      	movs	r2, #173	; 0xad
2000196c:	00d2      	lsls	r2, r2, #3
2000196e:	4694      	mov	ip, r2
20001970:	44bc      	add	ip, r7
20001972:	4463      	add	r3, ip
20001974:	689b      	ldr	r3, [r3, #8]
20001976:	1d5a      	adds	r2, r3, #5
20001978:	4b50      	ldr	r3, [pc, #320]	; (20001abc <main+0x18c0>)
2000197a:	21ad      	movs	r1, #173	; 0xad
2000197c:	00c9      	lsls	r1, r1, #3
2000197e:	468c      	mov	ip, r1
20001980:	44bc      	add	ip, r7
20001982:	4463      	add	r3, ip
20001984:	62da      	str	r2, [r3, #44]	; 0x2c
					trophy.xPos = 500;
20001986:	4b57      	ldr	r3, [pc, #348]	; (20001ae4 <main+0x18e8>)
20001988:	22ad      	movs	r2, #173	; 0xad
2000198a:	00d2      	lsls	r2, r2, #3
2000198c:	4694      	mov	ip, r2
2000198e:	44bc      	add	ip, r7
20001990:	4463      	add	r3, ip
20001992:	22fa      	movs	r2, #250	; 0xfa
20001994:	0052      	lsls	r2, r2, #1
20001996:	605a      	str	r2, [r3, #4]
					ascii_write("DAFFO:  ","        Oops...!");
20001998:	4a55      	ldr	r2, [pc, #340]	; (20001af0 <main+0x18f4>)
2000199a:	4b56      	ldr	r3, [pc, #344]	; (20001af4 <main+0x18f8>)
2000199c:	0011      	movs	r1, r2
2000199e:	0018      	movs	r0, r3
200019a0:	f003 f836 	bl	20004a10 <ascii_write>
				}
				
				static int DIP_burned = 0;
				static int distance_hair_DIP;
				distance_hair_DIP = (hair.xPos + 9) - (DIP.xPos + 9);
200019a4:	4b4e      	ldr	r3, [pc, #312]	; (20001ae0 <main+0x18e4>)
200019a6:	22ad      	movs	r2, #173	; 0xad
200019a8:	00d2      	lsls	r2, r2, #3
200019aa:	4694      	mov	ip, r2
200019ac:	44bc      	add	ip, r7
200019ae:	4463      	add	r3, ip
200019b0:	685b      	ldr	r3, [r3, #4]
200019b2:	3309      	adds	r3, #9
200019b4:	001a      	movs	r2, r3
200019b6:	4b3f      	ldr	r3, [pc, #252]	; (20001ab4 <main+0x18b8>)
200019b8:	21ad      	movs	r1, #173	; 0xad
200019ba:	00c9      	lsls	r1, r1, #3
200019bc:	468c      	mov	ip, r1
200019be:	44bc      	add	ip, r7
200019c0:	4463      	add	r3, ip
200019c2:	685b      	ldr	r3, [r3, #4]
200019c4:	3309      	adds	r3, #9
200019c6:	1ad2      	subs	r2, r2, r3
200019c8:	4b4b      	ldr	r3, [pc, #300]	; (20001af8 <main+0x18fc>)
200019ca:	601a      	str	r2, [r3, #0]
				if(!DIP_burned && read_DIL_single(LIGHT_TRIGGER) && player.yPos > 10 && abs(distance_hair_DIP) < 5) {
200019cc:	4b4b      	ldr	r3, [pc, #300]	; (20001afc <main+0x1900>)
200019ce:	681b      	ldr	r3, [r3, #0]
200019d0:	2b00      	cmp	r3, #0
200019d2:	d140      	bne.n	20001a56 <main+0x185a>
200019d4:	2006      	movs	r0, #6
200019d6:	f002 fe29 	bl	2000462c <read_DIL_single>
200019da:	1e03      	subs	r3, r0, #0
200019dc:	d03b      	beq.n	20001a56 <main+0x185a>
200019de:	4b34      	ldr	r3, [pc, #208]	; (20001ab0 <main+0x18b4>)
200019e0:	22ad      	movs	r2, #173	; 0xad
200019e2:	00d2      	lsls	r2, r2, #3
200019e4:	4694      	mov	ip, r2
200019e6:	44bc      	add	ip, r7
200019e8:	4463      	add	r3, ip
200019ea:	689b      	ldr	r3, [r3, #8]
200019ec:	2b0a      	cmp	r3, #10
200019ee:	dd32      	ble.n	20001a56 <main+0x185a>
200019f0:	4b41      	ldr	r3, [pc, #260]	; (20001af8 <main+0x18fc>)
200019f2:	681b      	ldr	r3, [r3, #0]
200019f4:	3304      	adds	r3, #4
200019f6:	db2e      	blt.n	20001a56 <main+0x185a>
200019f8:	4b3f      	ldr	r3, [pc, #252]	; (20001af8 <main+0x18fc>)
200019fa:	681b      	ldr	r3, [r3, #0]
200019fc:	2b04      	cmp	r3, #4
200019fe:	dc2a      	bgt.n	20001a56 <main+0x185a>
					ascii_write("DIPs-WITCH:","         ARHGRGHR!");
20001a00:	4a3f      	ldr	r2, [pc, #252]	; (20001b00 <main+0x1904>)
20001a02:	4b40      	ldr	r3, [pc, #256]	; (20001b04 <main+0x1908>)
20001a04:	0011      	movs	r1, r2
20001a06:	0018      	movs	r0, r3
20001a08:	f003 f802 	bl	20004a10 <ascii_write>
					DIP_burned = 1;
20001a0c:	4b3b      	ldr	r3, [pc, #236]	; (20001afc <main+0x1900>)
20001a0e:	2201      	movs	r2, #1
20001a10:	601a      	str	r2, [r3, #0]
					fires[2].xPos = DIP.xPos;
20001a12:	4b28      	ldr	r3, [pc, #160]	; (20001ab4 <main+0x18b8>)
20001a14:	22ad      	movs	r2, #173	; 0xad
20001a16:	00d2      	lsls	r2, r2, #3
20001a18:	4694      	mov	ip, r2
20001a1a:	44bc      	add	ip, r7
20001a1c:	4463      	add	r3, ip
20001a1e:	685a      	ldr	r2, [r3, #4]
20001a20:	4b26      	ldr	r3, [pc, #152]	; (20001abc <main+0x18c0>)
20001a22:	21ad      	movs	r1, #173	; 0xad
20001a24:	00c9      	lsls	r1, r1, #3
20001a26:	468c      	mov	ip, r1
20001a28:	44bc      	add	ip, r7
20001a2a:	4463      	add	r3, ip
20001a2c:	64da      	str	r2, [r3, #76]	; 0x4c
					fires[2].yPos = DIP.yPos + 6;
20001a2e:	4b21      	ldr	r3, [pc, #132]	; (20001ab4 <main+0x18b8>)
20001a30:	22ad      	movs	r2, #173	; 0xad
20001a32:	00d2      	lsls	r2, r2, #3
20001a34:	4694      	mov	ip, r2
20001a36:	44bc      	add	ip, r7
20001a38:	4463      	add	r3, ip
20001a3a:	689b      	ldr	r3, [r3, #8]
20001a3c:	1d9a      	adds	r2, r3, #6
20001a3e:	4b1f      	ldr	r3, [pc, #124]	; (20001abc <main+0x18c0>)
20001a40:	21ad      	movs	r1, #173	; 0xad
20001a42:	00c9      	lsls	r1, r1, #3
20001a44:	468c      	mov	ip, r1
20001a46:	44bc      	add	ip, r7
20001a48:	4463      	add	r3, ip
20001a4a:	651a      	str	r2, [r3, #80]	; 0x50
					no_DIP = 1;
20001a4c:	2301      	movs	r3, #1
20001a4e:	22aa      	movs	r2, #170	; 0xaa
20001a50:	00d2      	lsls	r2, r2, #3
20001a52:	18ba      	adds	r2, r7, r2
20001a54:	6013      	str	r3, [r2, #0]
				}
				
				lastFireTrigger = read_DIL_single(HAIR_TRIGGER);
20001a56:	2001      	movs	r0, #1
20001a58:	f002 fde8 	bl	2000462c <read_DIL_single>
20001a5c:	0003      	movs	r3, r0
20001a5e:	4a2a      	ldr	r2, [pc, #168]	; (20001b08 <main+0x190c>)
20001a60:	18ba      	adds	r2, r7, r2
20001a62:	6013      	str	r3, [r2, #0]
				
				game_over += game_over_adder;
20001a64:	23ab      	movs	r3, #171	; 0xab
20001a66:	00db      	lsls	r3, r3, #3
20001a68:	18fb      	adds	r3, r7, r3
20001a6a:	681a      	ldr	r2, [r3, #0]
20001a6c:	4b15      	ldr	r3, [pc, #84]	; (20001ac4 <main+0x18c8>)
20001a6e:	18fb      	adds	r3, r7, r3
20001a70:	681b      	ldr	r3, [r3, #0]
20001a72:	18d3      	adds	r3, r2, r3
20001a74:	22ab      	movs	r2, #171	; 0xab
20001a76:	00d2      	lsls	r2, r2, #3
20001a78:	18ba      	adds	r2, r7, r2
20001a7a:	6013      	str	r3, [r2, #0]
				
				if(game_over >= 100) {
20001a7c:	23ab      	movs	r3, #171	; 0xab
20001a7e:	00db      	lsls	r3, r3, #3
20001a80:	18fb      	adds	r3, r7, r3
20001a82:	681b      	ldr	r3, [r3, #0]
20001a84:	2b63      	cmp	r3, #99	; 0x63
20001a86:	dd05      	ble.n	20001a94 <main+0x1898>
					current_screen = GAME_OVER_SCREEN;
20001a88:	4b20      	ldr	r3, [pc, #128]	; (20001b0c <main+0x1910>)
20001a8a:	2203      	movs	r2, #3
20001a8c:	601a      	str	r2, [r3, #0]
					counter = 0;
20001a8e:	4b20      	ldr	r3, [pc, #128]	; (20001b10 <main+0x1914>)
20001a90:	2200      	movs	r2, #0
20001a92:	601a      	str	r2, [r3, #0]
				}
				
				stone.update(&stone);
20001a94:	4b0f      	ldr	r3, [pc, #60]	; (20001ad4 <main+0x18d8>)
20001a96:	22ad      	movs	r2, #173	; 0xad
20001a98:	00d2      	lsls	r2, r2, #3
20001a9a:	4694      	mov	ip, r2
20001a9c:	44bc      	add	ip, r7
20001a9e:	4463      	add	r3, ip
20001aa0:	68db      	ldr	r3, [r3, #12]
20001aa2:	22dc      	movs	r2, #220	; 0xdc
20001aa4:	0092      	lsls	r2, r2, #2
20001aa6:	18ba      	adds	r2, r7, r2
20001aa8:	0010      	movs	r0, r2
20001aaa:	4798      	blx	r3
				
				break;
20001aac:	e1a2      	b.n	20001df4 <main+0x1bf8>
20001aae:	46c0      	nop			; (mov r8, r8)
20001ab0:	fffffd30 			; <UNDEFINED> instruction: 0xfffffd30
20001ab4:	fffffd54 			; <UNDEFINED> instruction: 0xfffffd54
20001ab8:	20005744 	andcs	r5, r0, r4, asr #14
20001abc:	fffffbc8 			; <UNDEFINED> instruction: 0xfffffbc8
20001ac0:	20005748 	andcs	r5, r0, r8, asr #14
20001ac4:	00000554 	andeq	r0, r0, r4, asr r5
20001ac8:	20015754 	andcs	r5, r1, r4, asr r7
20001acc:	200157e0 	andcs	r5, r1, r0, ror #15
20001ad0:	0000054c 	andeq	r0, r0, ip, asr #10
20001ad4:	fffffe08 			; <UNDEFINED> instruction: 0xfffffe08
20001ad8:	2000574c 	andcs	r5, r0, ip, asr #14
20001adc:	20015770 	andcs	r5, r1, r0, ror r7
20001ae0:	fffffde4 			; <UNDEFINED> instruction: 0xfffffde4
20001ae4:	fffffe2c 			; <UNDEFINED> instruction: 0xfffffe2c
20001ae8:	20005750 	andcs	r5, r0, r0, asr r7
20001aec:	20005754 	andcs	r5, r0, r4, asr r7
20001af0:	200157ec 	andcs	r5, r1, ip, ror #15
20001af4:	20015800 	andcs	r5, r1, r0, lsl #16
20001af8:	20005758 	andcs	r5, r0, r8, asr r7
20001afc:	2000575c 	andcs	r5, r0, ip, asr r7
20001b00:	2001580c 	andcs	r5, r1, ip, lsl #16
20001b04:	200156f4 	strdcs	r5, [r1], -r4
20001b08:	00000544 	andeq	r0, r0, r4, asr #10
20001b0c:	20009b14 	andcs	r9, r0, r4, lsl fp
20001b10:	2000573c 	andcs	r5, r0, ip, lsr r7
				
			
			case RESET_GAME: //restart
				counter = 0;
20001b14:	4bb8      	ldr	r3, [pc, #736]	; (20001df8 <main+0x1bfc>)
20001b16:	2200      	movs	r2, #0
20001b18:	601a      	str	r2, [r3, #0]
				current_screen = START_SCREEN;
20001b1a:	4bb8      	ldr	r3, [pc, #736]	; (20001dfc <main+0x1c00>)
20001b1c:	2201      	movs	r2, #1
20001b1e:	601a      	str	r2, [r3, #0]
				if(read_DIL() == 0) {
20001b20:	f002 fd74 	bl	2000460c <read_DIL>
20001b24:	1e03      	subs	r3, r0, #0
20001b26:	d102      	bne.n	20001b2e <main+0x1932>
					current_screen = SWITCH_LOCK; 
20001b28:	4bb4      	ldr	r3, [pc, #720]	; (20001dfc <main+0x1c00>)
20001b2a:	2200      	movs	r2, #0
20001b2c:	601a      	str	r2, [r3, #0]
				}
	
				static int test = 0;
				test+=2;
20001b2e:	4bb4      	ldr	r3, [pc, #720]	; (20001e00 <main+0x1c04>)
20001b30:	681b      	ldr	r3, [r3, #0]
20001b32:	1c9a      	adds	r2, r3, #2
20001b34:	4bb2      	ldr	r3, [pc, #712]	; (20001e00 <main+0x1c04>)
20001b36:	601a      	str	r2, [r3, #0]
				
				reset_Stone();
20001b38:	f003 fc9c 	bl	20005474 <reset_Stone>
				dragonDirection = -1;
20001b3c:	2301      	movs	r3, #1
20001b3e:	425b      	negs	r3, r3
20001b40:	4ab0      	ldr	r2, [pc, #704]	; (20001e04 <main+0x1c08>)
20001b42:	18ba      	adds	r2, r7, r2
20001b44:	6013      	str	r3, [r2, #0]
				dragonStarted = 0;
20001b46:	2300      	movs	r3, #0
20001b48:	22a7      	movs	r2, #167	; 0xa7
20001b4a:	00d2      	lsls	r2, r2, #3
20001b4c:	18ba      	adds	r2, r7, r2
20001b4e:	6013      	str	r3, [r2, #0]
				stone.xPos = 70;
20001b50:	4bad      	ldr	r3, [pc, #692]	; (20001e08 <main+0x1c0c>)
20001b52:	22ad      	movs	r2, #173	; 0xad
20001b54:	00d2      	lsls	r2, r2, #3
20001b56:	4694      	mov	ip, r2
20001b58:	44bc      	add	ip, r7
20001b5a:	4463      	add	r3, ip
20001b5c:	2246      	movs	r2, #70	; 0x46
20001b5e:	605a      	str	r2, [r3, #4]
				stone.yPos = -30;
20001b60:	4ba9      	ldr	r3, [pc, #676]	; (20001e08 <main+0x1c0c>)
20001b62:	22ad      	movs	r2, #173	; 0xad
20001b64:	00d2      	lsls	r2, r2, #3
20001b66:	4694      	mov	ip, r2
20001b68:	44bc      	add	ip, r7
20001b6a:	4463      	add	r3, ip
20001b6c:	221e      	movs	r2, #30
20001b6e:	4252      	negs	r2, r2
20001b70:	609a      	str	r2, [r3, #8]
				roger.yPos = 130;
20001b72:	4ba6      	ldr	r3, [pc, #664]	; (20001e0c <main+0x1c10>)
20001b74:	22ad      	movs	r2, #173	; 0xad
20001b76:	00d2      	lsls	r2, r2, #3
20001b78:	4694      	mov	ip, r2
20001b7a:	44bc      	add	ip, r7
20001b7c:	4463      	add	r3, ip
20001b7e:	2282      	movs	r2, #130	; 0x82
20001b80:	609a      	str	r2, [r3, #8]
				game_over_counter = 0;
20001b82:	2300      	movs	r3, #0
20001b84:	4aa2      	ldr	r2, [pc, #648]	; (20001e10 <main+0x1c14>)
20001b86:	18ba      	adds	r2, r7, r2
20001b88:	6013      	str	r3, [r2, #0]
				boom.current_frame = 0;
20001b8a:	4ba2      	ldr	r3, [pc, #648]	; (20001e14 <main+0x1c18>)
20001b8c:	22ad      	movs	r2, #173	; 0xad
20001b8e:	00d2      	lsls	r2, r2, #3
20001b90:	4694      	mov	ip, r2
20001b92:	44bc      	add	ip, r7
20001b94:	4463      	add	r3, ip
20001b96:	2200      	movs	r2, #0
20001b98:	615a      	str	r2, [r3, #20]
				first = 1;
20001b9a:	2301      	movs	r3, #1
20001b9c:	22a9      	movs	r2, #169	; 0xa9
20001b9e:	00d2      	lsls	r2, r2, #3
20001ba0:	18ba      	adds	r2, r7, r2
20001ba2:	6013      	str	r3, [r2, #0]
				exploding = 0;
20001ba4:	2300      	movs	r3, #0
20001ba6:	4a9c      	ldr	r2, [pc, #624]	; (20001e18 <main+0x1c1c>)
20001ba8:	18ba      	adds	r2, r7, r2
20001baa:	6013      	str	r3, [r2, #0]
				is_climbing = 0;
20001bac:	2300      	movs	r3, #0
20001bae:	22ac      	movs	r2, #172	; 0xac
20001bb0:	00d2      	lsls	r2, r2, #3
20001bb2:	18ba      	adds	r2, r7, r2
20001bb4:	6013      	str	r3, [r2, #0]
				has_climbed = 0;
20001bb6:	2300      	movs	r3, #0
20001bb8:	4a98      	ldr	r2, [pc, #608]	; (20001e1c <main+0x1c20>)
20001bba:	18ba      	adds	r2, r7, r2
20001bbc:	6013      	str	r3, [r2, #0]
				game_over = 0;
20001bbe:	2300      	movs	r3, #0
20001bc0:	22ab      	movs	r2, #171	; 0xab
20001bc2:	00d2      	lsls	r2, r2, #3
20001bc4:	18ba      	adds	r2, r7, r2
20001bc6:	6013      	str	r3, [r2, #0]
				game_over_adder = 0;
20001bc8:	2300      	movs	r3, #0
20001bca:	4a95      	ldr	r2, [pc, #596]	; (20001e20 <main+0x1c24>)
20001bcc:	18ba      	adds	r2, r7, r2
20001bce:	6013      	str	r3, [r2, #0]
				fires[0].xPos = 40;		//FIRE1_INDO
20001bd0:	4b94      	ldr	r3, [pc, #592]	; (20001e24 <main+0x1c28>)
20001bd2:	22ad      	movs	r2, #173	; 0xad
20001bd4:	00d2      	lsls	r2, r2, #3
20001bd6:	4694      	mov	ip, r2
20001bd8:	44bc      	add	ip, r7
20001bda:	4463      	add	r3, ip
20001bdc:	2228      	movs	r2, #40	; 0x28
20001bde:	605a      	str	r2, [r3, #4]
				fires[0].yPos = 64-12-8;
20001be0:	4b90      	ldr	r3, [pc, #576]	; (20001e24 <main+0x1c28>)
20001be2:	22ad      	movs	r2, #173	; 0xad
20001be4:	00d2      	lsls	r2, r2, #3
20001be6:	4694      	mov	ip, r2
20001be8:	44bc      	add	ip, r7
20001bea:	4463      	add	r3, ip
20001bec:	222c      	movs	r2, #44	; 0x2c
20001bee:	609a      	str	r2, [r3, #8]
				fires[2].xPos = -50;		//FIRE1_INDO
20001bf0:	4b8c      	ldr	r3, [pc, #560]	; (20001e24 <main+0x1c28>)
20001bf2:	22ad      	movs	r2, #173	; 0xad
20001bf4:	00d2      	lsls	r2, r2, #3
20001bf6:	4694      	mov	ip, r2
20001bf8:	44bc      	add	ip, r7
20001bfa:	4463      	add	r3, ip
20001bfc:	2232      	movs	r2, #50	; 0x32
20001bfe:	4252      	negs	r2, r2
20001c00:	64da      	str	r2, [r3, #76]	; 0x4c
				fires[2].yPos = -50;
20001c02:	4b88      	ldr	r3, [pc, #544]	; (20001e24 <main+0x1c28>)
20001c04:	22ad      	movs	r2, #173	; 0xad
20001c06:	00d2      	lsls	r2, r2, #3
20001c08:	4694      	mov	ip, r2
20001c0a:	44bc      	add	ip, r7
20001c0c:	4463      	add	r3, ip
20001c0e:	2232      	movs	r2, #50	; 0x32
20001c10:	4252      	negs	r2, r2
20001c12:	651a      	str	r2, [r3, #80]	; 0x50
				fires[1].xPos = -50;		//FIRE1_INDO
20001c14:	4b83      	ldr	r3, [pc, #524]	; (20001e24 <main+0x1c28>)
20001c16:	22ad      	movs	r2, #173	; 0xad
20001c18:	00d2      	lsls	r2, r2, #3
20001c1a:	4694      	mov	ip, r2
20001c1c:	44bc      	add	ip, r7
20001c1e:	4463      	add	r3, ip
20001c20:	2232      	movs	r2, #50	; 0x32
20001c22:	4252      	negs	r2, r2
20001c24:	629a      	str	r2, [r3, #40]	; 0x28
				fires[1].yPos = -50;
20001c26:	4b7f      	ldr	r3, [pc, #508]	; (20001e24 <main+0x1c28>)
20001c28:	22ad      	movs	r2, #173	; 0xad
20001c2a:	00d2      	lsls	r2, r2, #3
20001c2c:	4694      	mov	ip, r2
20001c2e:	44bc      	add	ip, r7
20001c30:	4463      	add	r3, ip
20001c32:	2232      	movs	r2, #50	; 0x32
20001c34:	4252      	negs	r2, r2
20001c36:	62da      	str	r2, [r3, #44]	; 0x2c
				bird.xPos = 180;
20001c38:	4b7b      	ldr	r3, [pc, #492]	; (20001e28 <main+0x1c2c>)
20001c3a:	22ad      	movs	r2, #173	; 0xad
20001c3c:	00d2      	lsls	r2, r2, #3
20001c3e:	4694      	mov	ip, r2
20001c40:	44bc      	add	ip, r7
20001c42:	4463      	add	r3, ip
20001c44:	22b4      	movs	r2, #180	; 0xb4
20001c46:	605a      	str	r2, [r3, #4]
				bird.yPos = 40;
20001c48:	4b77      	ldr	r3, [pc, #476]	; (20001e28 <main+0x1c2c>)
20001c4a:	22ad      	movs	r2, #173	; 0xad
20001c4c:	00d2      	lsls	r2, r2, #3
20001c4e:	4694      	mov	ip, r2
20001c50:	44bc      	add	ip, r7
20001c52:	4463      	add	r3, ip
20001c54:	2228      	movs	r2, #40	; 0x28
20001c56:	609a      	str	r2, [r3, #8]
				
				
				
				trophy.xPos = 24;
20001c58:	4b74      	ldr	r3, [pc, #464]	; (20001e2c <main+0x1c30>)
20001c5a:	22ad      	movs	r2, #173	; 0xad
20001c5c:	00d2      	lsls	r2, r2, #3
20001c5e:	4694      	mov	ip, r2
20001c60:	44bc      	add	ip, r7
20001c62:	4463      	add	r3, ip
20001c64:	2218      	movs	r2, #24
20001c66:	605a      	str	r2, [r3, #4]
				trophy.yPos = 5;
20001c68:	4b70      	ldr	r3, [pc, #448]	; (20001e2c <main+0x1c30>)
20001c6a:	22ad      	movs	r2, #173	; 0xad
20001c6c:	00d2      	lsls	r2, r2, #3
20001c6e:	4694      	mov	ip, r2
20001c70:	44bc      	add	ip, r7
20001c72:	4463      	add	r3, ip
20001c74:	2205      	movs	r2, #5
20001c76:	609a      	str	r2, [r3, #8]
				trophy_burned = 0;
20001c78:	4b6d      	ldr	r3, [pc, #436]	; (20001e30 <main+0x1c34>)
20001c7a:	2200      	movs	r2, #0
20001c7c:	601a      	str	r2, [r3, #0]
				
				dragon.xPos = 130;
20001c7e:	4b6d      	ldr	r3, [pc, #436]	; (20001e34 <main+0x1c38>)
20001c80:	22ad      	movs	r2, #173	; 0xad
20001c82:	00d2      	lsls	r2, r2, #3
20001c84:	4694      	mov	ip, r2
20001c86:	44bc      	add	ip, r7
20001c88:	4463      	add	r3, ip
20001c8a:	2282      	movs	r2, #130	; 0x82
20001c8c:	605a      	str	r2, [r3, #4]
				dragon.yPos = 64-10-21;
20001c8e:	4b69      	ldr	r3, [pc, #420]	; (20001e34 <main+0x1c38>)
20001c90:	22ad      	movs	r2, #173	; 0xad
20001c92:	00d2      	lsls	r2, r2, #3
20001c94:	4694      	mov	ip, r2
20001c96:	44bc      	add	ip, r7
20001c98:	4463      	add	r3, ip
20001c9a:	2221      	movs	r2, #33	; 0x21
20001c9c:	609a      	str	r2, [r3, #8]
				dragonAlive = 1;
20001c9e:	2301      	movs	r3, #1
20001ca0:	22a8      	movs	r2, #168	; 0xa8
20001ca2:	00d2      	lsls	r2, r2, #3
20001ca4:	18ba      	adds	r2, r7, r2
20001ca6:	6013      	str	r3, [r2, #0]
				
				resetDIP();
20001ca8:	f000 ff84 	bl	20002bb4 <resetDIP>
				DIP.xPos = 100;
20001cac:	4b62      	ldr	r3, [pc, #392]	; (20001e38 <main+0x1c3c>)
20001cae:	22ad      	movs	r2, #173	; 0xad
20001cb0:	00d2      	lsls	r2, r2, #3
20001cb2:	4694      	mov	ip, r2
20001cb4:	44bc      	add	ip, r7
20001cb6:	4463      	add	r3, ip
20001cb8:	2264      	movs	r2, #100	; 0x64
20001cba:	605a      	str	r2, [r3, #4]
				DIP.yPos = 5;
20001cbc:	4b5e      	ldr	r3, [pc, #376]	; (20001e38 <main+0x1c3c>)
20001cbe:	22ad      	movs	r2, #173	; 0xad
20001cc0:	00d2      	lsls	r2, r2, #3
20001cc2:	4694      	mov	ip, r2
20001cc4:	44bc      	add	ip, r7
20001cc6:	4463      	add	r3, ip
20001cc8:	2205      	movs	r2, #5
20001cca:	609a      	str	r2, [r3, #8]
				DIP_burned = 0;
20001ccc:	4b5b      	ldr	r3, [pc, #364]	; (20001e3c <main+0x1c40>)
20001cce:	2200      	movs	r2, #0
20001cd0:	601a      	str	r2, [r3, #0]
				no_DIP = 0;
20001cd2:	2300      	movs	r3, #0
20001cd4:	22aa      	movs	r2, #170	; 0xaa
20001cd6:	00d2      	lsls	r2, r2, #3
20001cd8:	18ba      	adds	r2, r7, r2
20001cda:	6013      	str	r3, [r2, #0]
				
				lastFireTrigger = 0;
20001cdc:	2300      	movs	r3, #0
20001cde:	4a58      	ldr	r2, [pc, #352]	; (20001e40 <main+0x1c44>)
20001ce0:	18ba      	adds	r2, r7, r2
20001ce2:	6013      	str	r3, [r2, #0]
				
				playerReset();
20001ce4:	f000 fa48 	bl	20002178 <playerReset>
				player.xPos = 3;
20001ce8:	4b56      	ldr	r3, [pc, #344]	; (20001e44 <main+0x1c48>)
20001cea:	22ad      	movs	r2, #173	; 0xad
20001cec:	00d2      	lsls	r2, r2, #3
20001cee:	4694      	mov	ip, r2
20001cf0:	44bc      	add	ip, r7
20001cf2:	4463      	add	r3, ip
20001cf4:	2203      	movs	r2, #3
20001cf6:	605a      	str	r2, [r3, #4]
				player.yPos = 64-18-7; //player position
20001cf8:	4b52      	ldr	r3, [pc, #328]	; (20001e44 <main+0x1c48>)
20001cfa:	22ad      	movs	r2, #173	; 0xad
20001cfc:	00d2      	lsls	r2, r2, #3
20001cfe:	4694      	mov	ip, r2
20001d00:	44bc      	add	ip, r7
20001d02:	4463      	add	r3, ip
20001d04:	2227      	movs	r2, #39	; 0x27
20001d06:	609a      	str	r2, [r3, #8]
				//clear_ascii();
				ascii_write("                    ","                    ");
20001d08:	4a4f      	ldr	r2, [pc, #316]	; (20001e48 <main+0x1c4c>)
20001d0a:	4b4f      	ldr	r3, [pc, #316]	; (20001e48 <main+0x1c4c>)
20001d0c:	0011      	movs	r1, r2
20001d0e:	0018      	movs	r0, r3
20001d10:	f002 fe7e 	bl	20004a10 <ascii_write>
				break;
20001d14:	e06e      	b.n	20001df4 <main+0x1bf8>
				
				
			case WIN_SCREEN:
				draw_game_object( &roger );
20001d16:	4b4d      	ldr	r3, [pc, #308]	; (20001e4c <main+0x1c50>)
20001d18:	18fb      	adds	r3, r7, r3
20001d1a:	0018      	movs	r0, r3
20001d1c:	f002 fbcc 	bl	200044b8 <draw_game_object>
				if(roger.yPos > 1) {
20001d20:	4b3a      	ldr	r3, [pc, #232]	; (20001e0c <main+0x1c10>)
20001d22:	22ad      	movs	r2, #173	; 0xad
20001d24:	00d2      	lsls	r2, r2, #3
20001d26:	4694      	mov	ip, r2
20001d28:	44bc      	add	ip, r7
20001d2a:	4463      	add	r3, ip
20001d2c:	689b      	ldr	r3, [r3, #8]
20001d2e:	2b01      	cmp	r3, #1
20001d30:	dd0e      	ble.n	20001d50 <main+0x1b54>
					roger.yPos--;
20001d32:	4b36      	ldr	r3, [pc, #216]	; (20001e0c <main+0x1c10>)
20001d34:	22ad      	movs	r2, #173	; 0xad
20001d36:	00d2      	lsls	r2, r2, #3
20001d38:	4694      	mov	ip, r2
20001d3a:	44bc      	add	ip, r7
20001d3c:	4463      	add	r3, ip
20001d3e:	689b      	ldr	r3, [r3, #8]
20001d40:	1e5a      	subs	r2, r3, #1
20001d42:	4b32      	ldr	r3, [pc, #200]	; (20001e0c <main+0x1c10>)
20001d44:	21ad      	movs	r1, #173	; 0xad
20001d46:	00c9      	lsls	r1, r1, #3
20001d48:	468c      	mov	ip, r1
20001d4a:	44bc      	add	ip, r7
20001d4c:	4463      	add	r3, ip
20001d4e:	609a      	str	r2, [r3, #8]
				}
				show_frame(1);
20001d50:	2001      	movs	r0, #1
20001d52:	f002 fbf2 	bl	2000453a <show_frame>
				counter++;
20001d56:	4b28      	ldr	r3, [pc, #160]	; (20001df8 <main+0x1bfc>)
20001d58:	681b      	ldr	r3, [r3, #0]
20001d5a:	1c5a      	adds	r2, r3, #1
20001d5c:	4b26      	ldr	r3, [pc, #152]	; (20001df8 <main+0x1bfc>)
20001d5e:	601a      	str	r2, [r3, #0]
				if(counter > 150) {
20001d60:	4b25      	ldr	r3, [pc, #148]	; (20001df8 <main+0x1bfc>)
20001d62:	681b      	ldr	r3, [r3, #0]
20001d64:	2b96      	cmp	r3, #150	; 0x96
20001d66:	dd41      	ble.n	20001dec <main+0x1bf0>
					display(&textWin, 20);
20001d68:	2384      	movs	r3, #132	; 0x84
20001d6a:	005b      	lsls	r3, r3, #1
20001d6c:	18fb      	adds	r3, r7, r3
20001d6e:	2114      	movs	r1, #20
20001d70:	0018      	movs	r0, r3
20001d72:	f002 ff05 	bl	20004b80 <display>
				}
				break;
20001d76:	e039      	b.n	20001dec <main+0x1bf0>
				
			case GAME_OVER_SCREEN:
				draw_game_object(&game_over_witch);
20001d78:	2380      	movs	r3, #128	; 0x80
20001d7a:	00db      	lsls	r3, r3, #3
20001d7c:	18fb      	adds	r3, r7, r3
20001d7e:	0018      	movs	r0, r3
20001d80:	f002 fb9a 	bl	200044b8 <draw_game_object>
				show_frame(1);
20001d84:	2001      	movs	r0, #1
20001d86:	f002 fbd8 	bl	2000453a <show_frame>
				game_over_witch.update(&game_over_witch);
20001d8a:	4b31      	ldr	r3, [pc, #196]	; (20001e50 <main+0x1c54>)
20001d8c:	22ad      	movs	r2, #173	; 0xad
20001d8e:	00d2      	lsls	r2, r2, #3
20001d90:	4694      	mov	ip, r2
20001d92:	44bc      	add	ip, r7
20001d94:	4463      	add	r3, ip
20001d96:	68db      	ldr	r3, [r3, #12]
20001d98:	2280      	movs	r2, #128	; 0x80
20001d9a:	00d2      	lsls	r2, r2, #3
20001d9c:	18ba      	adds	r2, r7, r2
20001d9e:	0010      	movs	r0, r2
20001da0:	4798      	blx	r3
				
				game_over_counter++;
20001da2:	4b1b      	ldr	r3, [pc, #108]	; (20001e10 <main+0x1c14>)
20001da4:	18fb      	adds	r3, r7, r3
20001da6:	681b      	ldr	r3, [r3, #0]
20001da8:	3301      	adds	r3, #1
20001daa:	4a19      	ldr	r2, [pc, #100]	; (20001e10 <main+0x1c14>)
20001dac:	18ba      	adds	r2, r7, r2
20001dae:	6013      	str	r3, [r2, #0]
				if (game_over_counter > 5) {
20001db0:	4b17      	ldr	r3, [pc, #92]	; (20001e10 <main+0x1c14>)
20001db2:	18fb      	adds	r3, r7, r3
20001db4:	681b      	ldr	r3, [r3, #0]
20001db6:	2b05      	cmp	r3, #5
20001db8:	dd0c      	ble.n	20001dd4 <main+0x1bd8>
					textGameOver.display(&textGameOver, 15);
20001dba:	4b26      	ldr	r3, [pc, #152]	; (20001e54 <main+0x1c58>)
20001dbc:	22ad      	movs	r2, #173	; 0xad
20001dbe:	00d2      	lsls	r2, r2, #3
20001dc0:	4694      	mov	ip, r2
20001dc2:	44bc      	add	ip, r7
20001dc4:	4463      	add	r3, ip
20001dc6:	691b      	ldr	r3, [r3, #16]
20001dc8:	228e      	movs	r2, #142	; 0x8e
20001dca:	0052      	lsls	r2, r2, #1
20001dcc:	18ba      	adds	r2, r7, r2
20001dce:	210f      	movs	r1, #15
20001dd0:	0010      	movs	r0, r2
20001dd2:	4798      	blx	r3
				}
				
				if (game_over_counter > 70){
20001dd4:	4b0e      	ldr	r3, [pc, #56]	; (20001e10 <main+0x1c14>)
20001dd6:	18fb      	adds	r3, r7, r3
20001dd8:	681b      	ldr	r3, [r3, #0]
20001dda:	2b46      	cmp	r3, #70	; 0x46
20001ddc:	dd09      	ble.n	20001df2 <main+0x1bf6>
					current_screen = RESET_GAME;
20001dde:	4b07      	ldr	r3, [pc, #28]	; (20001dfc <main+0x1c00>)
20001de0:	220a      	movs	r2, #10
20001de2:	601a      	str	r2, [r3, #0]
				}
			break;
20001de4:	e005      	b.n	20001df2 <main+0x1bf6>
				break;
20001de6:	46c0      	nop			; (mov r8, r8)
20001de8:	f7fe fde4 	bl	200009b4 <main+0x7b8>
				break;
20001dec:	46c0      	nop			; (mov r8, r8)
20001dee:	f7fe fde1 	bl	200009b4 <main+0x7b8>
			break;
20001df2:	46c0      	nop			; (mov r8, r8)
		switch(current_screen) {
20001df4:	f7fe fdde 	bl	200009b4 <main+0x7b8>
20001df8:	2000573c 	andcs	r5, r0, ip, lsr r7
20001dfc:	20009b14 	andcs	r9, r0, r4, lsl fp
20001e00:	20005760 	andcs	r5, r0, r0, ror #14
20001e04:	0000053c 	andeq	r0, r0, ip, lsr r5
20001e08:	fffffe08 			; <UNDEFINED> instruction: 0xfffffe08
20001e0c:	fffffebc 			; <UNDEFINED> instruction: 0xfffffebc
20001e10:	00000564 	andeq	r0, r0, r4, ror #10
20001e14:	fffffd78 			; <UNDEFINED> instruction: 0xfffffd78
20001e18:	0000054c 	andeq	r0, r0, ip, asr #10
20001e1c:	0000055c 	andeq	r0, r0, ip, asr r5
20001e20:	00000554 	andeq	r0, r0, r4, asr r5
20001e24:	fffffbc8 			; <UNDEFINED> instruction: 0xfffffbc8
20001e28:	fffffdc0 			; <UNDEFINED> instruction: 0xfffffdc0
20001e2c:	fffffe2c 			; <UNDEFINED> instruction: 0xfffffe2c
20001e30:	20005754 	andcs	r5, r0, r4, asr r7
20001e34:	fffffd9c 			; <UNDEFINED> instruction: 0xfffffd9c
20001e38:	fffffd54 			; <UNDEFINED> instruction: 0xfffffd54
20001e3c:	2000575c 	andcs	r5, r0, ip, asr r7
20001e40:	00000544 	andeq	r0, r0, r4, asr #10
20001e44:	fffffd30 			; <UNDEFINED> instruction: 0xfffffd30
20001e48:	20015820 	andcs	r5, r1, r0, lsr #16
20001e4c:	00000424 	andeq	r0, r0, r4, lsr #8
20001e50:	fffffe98 			; <UNDEFINED> instruction: 0xfffffe98
20001e54:	fffffbb4 			; <UNDEFINED> instruction: 0xfffffbb4

20001e58 <abs>:
		
	}
	
}

int abs(int value) {
20001e58:	b580      	push	{r7, lr}
20001e5a:	b082      	sub	sp, #8
20001e5c:	af00      	add	r7, sp, #0
20001e5e:	6078      	str	r0, [r7, #4]
	if(value < 0) {
20001e60:	687b      	ldr	r3, [r7, #4]
20001e62:	2b00      	cmp	r3, #0
20001e64:	da02      	bge.n	20001e6c <abs+0x14>
		return -value;
20001e66:	687b      	ldr	r3, [r7, #4]
20001e68:	425b      	negs	r3, r3
20001e6a:	e000      	b.n	20001e6e <abs+0x16>
	}
	return value;
20001e6c:	687b      	ldr	r3, [r7, #4]
}
20001e6e:	0018      	movs	r0, r3
20001e70:	46bd      	mov	sp, r7
20001e72:	b002      	add	sp, #8
20001e74:	bd80      	pop	{r7, pc}
20001e76:	46c0      	nop			; (mov r8, r8)

20001e78 <render>:
GameObject* gameObjects[100];
int nGameObjects = 0;


void render(GameObject* this)
{
20001e78:	b580      	push	{r7, lr}
20001e7a:	b082      	sub	sp, #8
20001e7c:	af00      	add	r7, sp, #0
20001e7e:	6078      	str	r0, [r7, #4]
    
}
20001e80:	46c0      	nop			; (mov r8, r8)
20001e82:	46bd      	mov	sp, r7
20001e84:	b002      	add	sp, #8
20001e86:	bd80      	pop	{r7, pc}

20001e88 <gameObjectUpdate>:

void gameObjectUpdate(GameObject *this) {
20001e88:	b580      	push	{r7, lr}
20001e8a:	b082      	sub	sp, #8
20001e8c:	af00      	add	r7, sp, #0
20001e8e:	6078      	str	r0, [r7, #4]
	this->animation_counter++;
20001e90:	687b      	ldr	r3, [r7, #4]
20001e92:	6a1b      	ldr	r3, [r3, #32]
20001e94:	1c5a      	adds	r2, r3, #1
20001e96:	687b      	ldr	r3, [r7, #4]
20001e98:	621a      	str	r2, [r3, #32]
	if (this->animation_counter == this->animation_speed) {
20001e9a:	687b      	ldr	r3, [r7, #4]
20001e9c:	6a1a      	ldr	r2, [r3, #32]
20001e9e:	687b      	ldr	r3, [r7, #4]
20001ea0:	69db      	ldr	r3, [r3, #28]
20001ea2:	429a      	cmp	r2, r3
20001ea4:	d10f      	bne.n	20001ec6 <gameObjectUpdate+0x3e>
		this->animation_counter = 0;
20001ea6:	687b      	ldr	r3, [r7, #4]
20001ea8:	2200      	movs	r2, #0
20001eaa:	621a      	str	r2, [r3, #32]
		this->current_frame = (this->current_frame + 1) % this->n_frames;
20001eac:	687b      	ldr	r3, [r7, #4]
20001eae:	695b      	ldr	r3, [r3, #20]
20001eb0:	1c5a      	adds	r2, r3, #1
20001eb2:	687b      	ldr	r3, [r7, #4]
20001eb4:	699b      	ldr	r3, [r3, #24]
20001eb6:	0019      	movs	r1, r3
20001eb8:	0010      	movs	r0, r2
20001eba:	f003 fc39 	bl	20005730 <__aeabi_idivmod>
20001ebe:	000b      	movs	r3, r1
20001ec0:	001a      	movs	r2, r3
20001ec2:	687b      	ldr	r3, [r7, #4]
20001ec4:	615a      	str	r2, [r3, #20]
	}
}
20001ec6:	46c0      	nop			; (mov r8, r8)
20001ec8:	46bd      	mov	sp, r7
20001eca:	b002      	add	sp, #8
20001ecc:	bd80      	pop	{r7, pc}
	...

20001ed0 <initSprites>:
Image fire2Image;
Image fire3Image;
Image fire4Image;
Image fire5Image;
Image fireImages[5];
static void initSprites( void ) {	
20001ed0:	b580      	push	{r7, lr}
20001ed2:	b08c      	sub	sp, #48	; 0x30
20001ed4:	af00      	add	r7, sp, #0
	sprite *pointer0 = &tempFireBlack;
20001ed6:	4b3e      	ldr	r3, [pc, #248]	; (20001fd0 <initSprites+0x100>)
20001ed8:	62fb      	str	r3, [r7, #44]	; 0x2c
	load_sprite(pointer0, fire_black_2_bits, fire1_gray_width, fire1_gray_height);
20001eda:	493e      	ldr	r1, [pc, #248]	; (20001fd4 <initSprites+0x104>)
20001edc:	6af8      	ldr	r0, [r7, #44]	; 0x2c
20001ede:	230c      	movs	r3, #12
20001ee0:	2208      	movs	r2, #8
20001ee2:	f002 fb73 	bl	200045cc <load_sprite>
	fireBlack = pointer0;
20001ee6:	4b3c      	ldr	r3, [pc, #240]	; (20001fd8 <initSprites+0x108>)
20001ee8:	6afa      	ldr	r2, [r7, #44]	; 0x2c
20001eea:	601a      	str	r2, [r3, #0]
	
	sprite *pointer1 = &tempFire1Gray;
20001eec:	4b3b      	ldr	r3, [pc, #236]	; (20001fdc <initSprites+0x10c>)
20001eee:	62bb      	str	r3, [r7, #40]	; 0x28
	load_sprite(pointer1, fire1_gray_bits, fire1_gray_width, fire1_gray_height);
20001ef0:	493b      	ldr	r1, [pc, #236]	; (20001fe0 <initSprites+0x110>)
20001ef2:	6ab8      	ldr	r0, [r7, #40]	; 0x28
20001ef4:	230c      	movs	r3, #12
20001ef6:	2208      	movs	r2, #8
20001ef8:	f002 fb68 	bl	200045cc <load_sprite>
	fire1Gray = pointer1;
20001efc:	4b39      	ldr	r3, [pc, #228]	; (20001fe4 <initSprites+0x114>)
20001efe:	6aba      	ldr	r2, [r7, #40]	; 0x28
20001f00:	601a      	str	r2, [r3, #0]

	sprite *pointer2 = &tempFire1Light;
20001f02:	4b39      	ldr	r3, [pc, #228]	; (20001fe8 <initSprites+0x118>)
20001f04:	627b      	str	r3, [r7, #36]	; 0x24
	load_sprite(pointer2, fire1_light_bits, fire1_gray_width, fire1_gray_height);
20001f06:	4939      	ldr	r1, [pc, #228]	; (20001fec <initSprites+0x11c>)
20001f08:	6a78      	ldr	r0, [r7, #36]	; 0x24
20001f0a:	230c      	movs	r3, #12
20001f0c:	2208      	movs	r2, #8
20001f0e:	f002 fb5d 	bl	200045cc <load_sprite>
	fire1Light = pointer2;
20001f12:	4b37      	ldr	r3, [pc, #220]	; (20001ff0 <initSprites+0x120>)
20001f14:	6a7a      	ldr	r2, [r7, #36]	; 0x24
20001f16:	601a      	str	r2, [r3, #0]

	sprite *pointer3 = &tempFire2Gray;
20001f18:	4b36      	ldr	r3, [pc, #216]	; (20001ff4 <initSprites+0x124>)
20001f1a:	623b      	str	r3, [r7, #32]
	load_sprite(pointer3, fire2_gray_bits, fire1_gray_width, fire1_gray_height);
20001f1c:	4936      	ldr	r1, [pc, #216]	; (20001ff8 <initSprites+0x128>)
20001f1e:	6a38      	ldr	r0, [r7, #32]
20001f20:	230c      	movs	r3, #12
20001f22:	2208      	movs	r2, #8
20001f24:	f002 fb52 	bl	200045cc <load_sprite>
	fire2Gray = pointer3;
20001f28:	4b34      	ldr	r3, [pc, #208]	; (20001ffc <initSprites+0x12c>)
20001f2a:	6a3a      	ldr	r2, [r7, #32]
20001f2c:	601a      	str	r2, [r3, #0]

	sprite *pointer4 = &tempFire2Light;
20001f2e:	4b34      	ldr	r3, [pc, #208]	; (20002000 <initSprites+0x130>)
20001f30:	61fb      	str	r3, [r7, #28]
	load_sprite(pointer4, fire2_light_bits, fire1_gray_width, fire1_gray_height);
20001f32:	4934      	ldr	r1, [pc, #208]	; (20002004 <initSprites+0x134>)
20001f34:	69f8      	ldr	r0, [r7, #28]
20001f36:	230c      	movs	r3, #12
20001f38:	2208      	movs	r2, #8
20001f3a:	f002 fb47 	bl	200045cc <load_sprite>
	fire2Light = pointer4;
20001f3e:	4b32      	ldr	r3, [pc, #200]	; (20002008 <initSprites+0x138>)
20001f40:	69fa      	ldr	r2, [r7, #28]
20001f42:	601a      	str	r2, [r3, #0]

	sprite *pointer5 = &tempFire3Gray;
20001f44:	4b31      	ldr	r3, [pc, #196]	; (2000200c <initSprites+0x13c>)
20001f46:	61bb      	str	r3, [r7, #24]
	load_sprite(pointer5, fire3_gray_bits, fire1_gray_width, fire1_gray_height);
20001f48:	4931      	ldr	r1, [pc, #196]	; (20002010 <initSprites+0x140>)
20001f4a:	69b8      	ldr	r0, [r7, #24]
20001f4c:	230c      	movs	r3, #12
20001f4e:	2208      	movs	r2, #8
20001f50:	f002 fb3c 	bl	200045cc <load_sprite>
	fire3Gray = pointer5;
20001f54:	4b2f      	ldr	r3, [pc, #188]	; (20002014 <initSprites+0x144>)
20001f56:	69ba      	ldr	r2, [r7, #24]
20001f58:	601a      	str	r2, [r3, #0]

	sprite *pointer6 = &tempFire3Light;
20001f5a:	4b2f      	ldr	r3, [pc, #188]	; (20002018 <initSprites+0x148>)
20001f5c:	617b      	str	r3, [r7, #20]
	load_sprite(pointer6, fire3_light_bits, fire1_gray_width, fire1_gray_height);
20001f5e:	492f      	ldr	r1, [pc, #188]	; (2000201c <initSprites+0x14c>)
20001f60:	6978      	ldr	r0, [r7, #20]
20001f62:	230c      	movs	r3, #12
20001f64:	2208      	movs	r2, #8
20001f66:	f002 fb31 	bl	200045cc <load_sprite>
	fire3Light = pointer6;
20001f6a:	4b2d      	ldr	r3, [pc, #180]	; (20002020 <initSprites+0x150>)
20001f6c:	697a      	ldr	r2, [r7, #20]
20001f6e:	601a      	str	r2, [r3, #0]

	sprite *pointer7 = &tempFire4Gray;
20001f70:	4b2c      	ldr	r3, [pc, #176]	; (20002024 <initSprites+0x154>)
20001f72:	613b      	str	r3, [r7, #16]
	load_sprite(pointer7, fire4_gray_bits, fire1_gray_width, fire1_gray_height);
20001f74:	492c      	ldr	r1, [pc, #176]	; (20002028 <initSprites+0x158>)
20001f76:	6938      	ldr	r0, [r7, #16]
20001f78:	230c      	movs	r3, #12
20001f7a:	2208      	movs	r2, #8
20001f7c:	f002 fb26 	bl	200045cc <load_sprite>
	fire4Gray = pointer7;
20001f80:	4b2a      	ldr	r3, [pc, #168]	; (2000202c <initSprites+0x15c>)
20001f82:	693a      	ldr	r2, [r7, #16]
20001f84:	601a      	str	r2, [r3, #0]

	sprite *pointer8 = &tempFire4Light;
20001f86:	4b2a      	ldr	r3, [pc, #168]	; (20002030 <initSprites+0x160>)
20001f88:	60fb      	str	r3, [r7, #12]
	load_sprite(pointer8, fire4_light_bits, fire1_gray_width, fire1_gray_height);
20001f8a:	492a      	ldr	r1, [pc, #168]	; (20002034 <initSprites+0x164>)
20001f8c:	68f8      	ldr	r0, [r7, #12]
20001f8e:	230c      	movs	r3, #12
20001f90:	2208      	movs	r2, #8
20001f92:	f002 fb1b 	bl	200045cc <load_sprite>
	fire4Light = pointer8;
20001f96:	4b28      	ldr	r3, [pc, #160]	; (20002038 <initSprites+0x168>)
20001f98:	68fa      	ldr	r2, [r7, #12]
20001f9a:	601a      	str	r2, [r3, #0]

	sprite *pointer9 = &tempFire5Gray;
20001f9c:	4b27      	ldr	r3, [pc, #156]	; (2000203c <initSprites+0x16c>)
20001f9e:	60bb      	str	r3, [r7, #8]
	load_sprite(pointer9, fire5_gray_bits, fire1_gray_width, fire1_gray_height);
20001fa0:	4927      	ldr	r1, [pc, #156]	; (20002040 <initSprites+0x170>)
20001fa2:	68b8      	ldr	r0, [r7, #8]
20001fa4:	230c      	movs	r3, #12
20001fa6:	2208      	movs	r2, #8
20001fa8:	f002 fb10 	bl	200045cc <load_sprite>
	fire5Gray = pointer9;
20001fac:	4b25      	ldr	r3, [pc, #148]	; (20002044 <initSprites+0x174>)
20001fae:	68ba      	ldr	r2, [r7, #8]
20001fb0:	601a      	str	r2, [r3, #0]

	sprite *pointer10 = &tempFire5Light;
20001fb2:	4b25      	ldr	r3, [pc, #148]	; (20002048 <initSprites+0x178>)
20001fb4:	607b      	str	r3, [r7, #4]
	load_sprite(pointer10, fire5_light_bits, fire1_gray_width, fire1_gray_height);
20001fb6:	4925      	ldr	r1, [pc, #148]	; (2000204c <initSprites+0x17c>)
20001fb8:	6878      	ldr	r0, [r7, #4]
20001fba:	230c      	movs	r3, #12
20001fbc:	2208      	movs	r2, #8
20001fbe:	f002 fb05 	bl	200045cc <load_sprite>
	fire5Light = pointer10;
20001fc2:	4b23      	ldr	r3, [pc, #140]	; (20002050 <initSprites+0x180>)
20001fc4:	687a      	ldr	r2, [r7, #4]
20001fc6:	601a      	str	r2, [r3, #0]
}
20001fc8:	46c0      	nop			; (mov r8, r8)
20001fca:	46bd      	mov	sp, r7
20001fcc:	b00c      	add	sp, #48	; 0x30
20001fce:	bd80      	pop	{r7, pc}
20001fd0:	20005a38 	andcs	r5, r0, r8, lsr sl
20001fd4:	20009b28 	andcs	r9, r0, r8, lsr #22
20001fd8:	20005b30 	andcs	r5, r0, r0, lsr fp
20001fdc:	20005b24 	andcs	r5, r0, r4, lsr #22
20001fe0:	20009b34 	andcs	r9, r0, r4, lsr fp
20001fe4:	20005b48 	andcs	r5, r0, r8, asr #22
20001fe8:	20005b00 	andcs	r5, r0, r0, lsl #22
20001fec:	20009b40 	andcs	r9, r0, r0, asr #22
20001ff0:	20005a00 	andcs	r5, r0, r0, lsl #20
20001ff4:	20005a2c 	andcs	r5, r0, ip, lsr #20
20001ff8:	20009b4c 	andcs	r9, r0, ip, asr #22
20001ffc:	20005b44 	andcs	r5, r0, r4, asr #22
20002000:	20005b34 	andcs	r5, r0, r4, lsr fp
20002004:	20009b58 	andcs	r9, r0, r8, asr fp
20002008:	20005b1c 	andcs	r5, r0, ip, lsl fp
2000200c:	20005ae4 	andcs	r5, r0, r4, ror #21
20002010:	20009b64 	andcs	r9, r0, r4, ror #22
20002014:	20005a10 	andcs	r5, r0, r0, lsl sl
20002018:	20005a04 	andcs	r5, r0, r4, lsl #20
2000201c:	20009b70 	andcs	r9, r0, r0, ror fp
20002020:	20005b40 	andcs	r5, r0, r0, asr #22
20002024:	20005a14 	andcs	r5, r0, r4, lsl sl
20002028:	20009b7c 	andcs	r9, r0, ip, ror fp
2000202c:	20005afc 	strdcs	r5, [r0], -ip
20002030:	20005a50 	andcs	r5, r0, r0, asr sl
20002034:	20009b88 	andcs	r9, r0, r8, lsl #23
20002038:	20005a68 	andcs	r5, r0, r8, ror #20
2000203c:	20005ad8 	ldrdcs	r5, [r0], -r8
20002040:	20009b94 	mulcs	r0, r4, fp
20002044:	20005b18 	andcs	r5, r0, r8, lsl fp
20002048:	20005b0c 	andcs	r5, r0, ip, lsl #22
2000204c:	20009ba0 	andcs	r9, r0, r0, lsr #23
20002050:	20005b20 	andcs	r5, r0, r0, lsr #22

20002054 <init_fire>:
	
void init_fire( GameObject *fireObj ) {
20002054:	b590      	push	{r4, r7, lr}
20002056:	b083      	sub	sp, #12
20002058:	af00      	add	r7, sp, #0
2000205a:	6078      	str	r0, [r7, #4]
	static int firstTime = 1;
	if (firstTime) {
2000205c:	4b30      	ldr	r3, [pc, #192]	; (20002120 <init_fire+0xcc>)
2000205e:	681b      	ldr	r3, [r3, #0]
20002060:	2b00      	cmp	r3, #0
20002062:	d049      	beq.n	200020f8 <init_fire+0xa4>
		initSprites();
20002064:	f7ff ff34 	bl	20001ed0 <initSprites>
		firstTime = 0;			
20002068:	4b2d      	ldr	r3, [pc, #180]	; (20002120 <init_fire+0xcc>)
2000206a:	2200      	movs	r2, #0
2000206c:	601a      	str	r2, [r3, #0]

		fireImages[0] = fire1Image;
2000206e:	4b2d      	ldr	r3, [pc, #180]	; (20002124 <init_fire+0xd0>)
20002070:	4a2d      	ldr	r2, [pc, #180]	; (20002128 <init_fire+0xd4>)
20002072:	ca13      	ldmia	r2!, {r0, r1, r4}
20002074:	c313      	stmia	r3!, {r0, r1, r4}
		fireImages[1] = fire2Image;
20002076:	4b2b      	ldr	r3, [pc, #172]	; (20002124 <init_fire+0xd0>)
20002078:	4a2c      	ldr	r2, [pc, #176]	; (2000212c <init_fire+0xd8>)
2000207a:	330c      	adds	r3, #12
2000207c:	ca13      	ldmia	r2!, {r0, r1, r4}
2000207e:	c313      	stmia	r3!, {r0, r1, r4}
		fireImages[2] = fire3Image;
20002080:	4b28      	ldr	r3, [pc, #160]	; (20002124 <init_fire+0xd0>)
20002082:	4a2b      	ldr	r2, [pc, #172]	; (20002130 <init_fire+0xdc>)
20002084:	3318      	adds	r3, #24
20002086:	ca13      	ldmia	r2!, {r0, r1, r4}
20002088:	c313      	stmia	r3!, {r0, r1, r4}
		fireImages[3] = fire4Image;
2000208a:	4b26      	ldr	r3, [pc, #152]	; (20002124 <init_fire+0xd0>)
2000208c:	4a29      	ldr	r2, [pc, #164]	; (20002134 <init_fire+0xe0>)
2000208e:	3324      	adds	r3, #36	; 0x24
20002090:	ca13      	ldmia	r2!, {r0, r1, r4}
20002092:	c313      	stmia	r3!, {r0, r1, r4}
		fireImages[4] = fire5Image;
20002094:	4b23      	ldr	r3, [pc, #140]	; (20002124 <init_fire+0xd0>)
20002096:	4a28      	ldr	r2, [pc, #160]	; (20002138 <init_fire+0xe4>)
20002098:	3330      	adds	r3, #48	; 0x30
2000209a:	ca13      	ldmia	r2!, {r0, r1, r4}
2000209c:	c313      	stmia	r3!, {r0, r1, r4}
		
		load_image(&fireImages[0], fire1Gray, fire1Light, fireBlack);
2000209e:	4b27      	ldr	r3, [pc, #156]	; (2000213c <init_fire+0xe8>)
200020a0:	6819      	ldr	r1, [r3, #0]
200020a2:	4b27      	ldr	r3, [pc, #156]	; (20002140 <init_fire+0xec>)
200020a4:	681a      	ldr	r2, [r3, #0]
200020a6:	4b27      	ldr	r3, [pc, #156]	; (20002144 <init_fire+0xf0>)
200020a8:	681b      	ldr	r3, [r3, #0]
200020aa:	481e      	ldr	r0, [pc, #120]	; (20002124 <init_fire+0xd0>)
200020ac:	f002 fa7a 	bl	200045a4 <load_image>
		load_image(&fireImages[1], fire2Gray, fire2Light, fireBlack);
200020b0:	4b25      	ldr	r3, [pc, #148]	; (20002148 <init_fire+0xf4>)
200020b2:	6819      	ldr	r1, [r3, #0]
200020b4:	4b25      	ldr	r3, [pc, #148]	; (2000214c <init_fire+0xf8>)
200020b6:	681a      	ldr	r2, [r3, #0]
200020b8:	4b22      	ldr	r3, [pc, #136]	; (20002144 <init_fire+0xf0>)
200020ba:	681b      	ldr	r3, [r3, #0]
200020bc:	4824      	ldr	r0, [pc, #144]	; (20002150 <init_fire+0xfc>)
200020be:	f002 fa71 	bl	200045a4 <load_image>
		load_image(&fireImages[2], fire3Gray, fire3Light, fireBlack);
200020c2:	4b24      	ldr	r3, [pc, #144]	; (20002154 <init_fire+0x100>)
200020c4:	6819      	ldr	r1, [r3, #0]
200020c6:	4b24      	ldr	r3, [pc, #144]	; (20002158 <init_fire+0x104>)
200020c8:	681a      	ldr	r2, [r3, #0]
200020ca:	4b1e      	ldr	r3, [pc, #120]	; (20002144 <init_fire+0xf0>)
200020cc:	681b      	ldr	r3, [r3, #0]
200020ce:	4823      	ldr	r0, [pc, #140]	; (2000215c <init_fire+0x108>)
200020d0:	f002 fa68 	bl	200045a4 <load_image>
		load_image(&fireImages[3], fire4Gray, fire4Light, fireBlack);
200020d4:	4b22      	ldr	r3, [pc, #136]	; (20002160 <init_fire+0x10c>)
200020d6:	6819      	ldr	r1, [r3, #0]
200020d8:	4b22      	ldr	r3, [pc, #136]	; (20002164 <init_fire+0x110>)
200020da:	681a      	ldr	r2, [r3, #0]
200020dc:	4b19      	ldr	r3, [pc, #100]	; (20002144 <init_fire+0xf0>)
200020de:	681b      	ldr	r3, [r3, #0]
200020e0:	4821      	ldr	r0, [pc, #132]	; (20002168 <init_fire+0x114>)
200020e2:	f002 fa5f 	bl	200045a4 <load_image>
		load_image(&fireImages[4], fire5Gray, fire5Light, fireBlack);
200020e6:	4b21      	ldr	r3, [pc, #132]	; (2000216c <init_fire+0x118>)
200020e8:	6819      	ldr	r1, [r3, #0]
200020ea:	4b21      	ldr	r3, [pc, #132]	; (20002170 <init_fire+0x11c>)
200020ec:	681a      	ldr	r2, [r3, #0]
200020ee:	4b15      	ldr	r3, [pc, #84]	; (20002144 <init_fire+0xf0>)
200020f0:	681b      	ldr	r3, [r3, #0]
200020f2:	4820      	ldr	r0, [pc, #128]	; (20002174 <init_fire+0x120>)
200020f4:	f002 fa56 	bl	200045a4 <load_image>
	}
	
	fireObj->images = fireImages;
200020f8:	687b      	ldr	r3, [r7, #4]
200020fa:	4a0a      	ldr	r2, [pc, #40]	; (20002124 <init_fire+0xd0>)
200020fc:	601a      	str	r2, [r3, #0]

	fireObj->current_frame = 0;
200020fe:	687b      	ldr	r3, [r7, #4]
20002100:	2200      	movs	r2, #0
20002102:	615a      	str	r2, [r3, #20]
	fireObj->n_frames = 5;
20002104:	687b      	ldr	r3, [r7, #4]
20002106:	2205      	movs	r2, #5
20002108:	619a      	str	r2, [r3, #24]
	fireObj->animation_speed = 1;
2000210a:	687b      	ldr	r3, [r7, #4]
2000210c:	2201      	movs	r2, #1
2000210e:	61da      	str	r2, [r3, #28]
	fireObj->animation_counter = 0;
20002110:	687b      	ldr	r3, [r7, #4]
20002112:	2200      	movs	r2, #0
20002114:	621a      	str	r2, [r3, #32]
}
20002116:	46c0      	nop			; (mov r8, r8)
20002118:	46bd      	mov	sp, r7
2000211a:	b003      	add	sp, #12
2000211c:	bd90      	pop	{r4, r7, pc}
2000211e:	46c0      	nop			; (mov r8, r8)
20002120:	20009bac 	andcs	r9, r0, ip, lsr #23
20002124:	20005a9c 	mulcs	r0, ip, sl
20002128:	20005a5c 	andcs	r5, r0, ip, asr sl
2000212c:	20005a20 	andcs	r5, r0, r0, lsr #20
20002130:	20005a44 	andcs	r5, r0, r4, asr #20
20002134:	20005af0 	strdcs	r5, [r0], -r0
20002138:	20005a90 	mulcs	r0, r0, sl
2000213c:	20005b48 	andcs	r5, r0, r8, asr #22
20002140:	20005a00 	andcs	r5, r0, r0, lsl #20
20002144:	20005b30 	andcs	r5, r0, r0, lsr fp
20002148:	20005b44 	andcs	r5, r0, r4, asr #22
2000214c:	20005b1c 	andcs	r5, r0, ip, lsl fp
20002150:	20005aa8 	andcs	r5, r0, r8, lsr #21
20002154:	20005a10 	andcs	r5, r0, r0, lsl sl
20002158:	20005b40 	andcs	r5, r0, r0, asr #22
2000215c:	20005ab4 			; <UNDEFINED> instruction: 0x20005ab4
20002160:	20005afc 	strdcs	r5, [r0], -ip
20002164:	20005a68 	andcs	r5, r0, r8, ror #20
20002168:	20005ac0 	andcs	r5, r0, r0, asr #21
2000216c:	20005b18 	andcs	r5, r0, r8, lsl fp
20002170:	20005b20 	andcs	r5, r0, r0, lsr #22
20002174:	20005acc 	andcs	r5, r0, ip, asr #21

20002178 <playerReset>:
	static lastRightValue = 0;
	static lastLeftValue = 0; 
	static xSpeed = 0;
	static ySpeed = 0;

void playerReset(void){
20002178:	b580      	push	{r7, lr}
2000217a:	af00      	add	r7, sp, #0
	lastJumpValue = 0;
2000217c:	4b08      	ldr	r3, [pc, #32]	; (200021a0 <playerReset+0x28>)
2000217e:	2200      	movs	r2, #0
20002180:	601a      	str	r2, [r3, #0]
	lastRightValue = 0;
20002182:	4b08      	ldr	r3, [pc, #32]	; (200021a4 <playerReset+0x2c>)
20002184:	2200      	movs	r2, #0
20002186:	601a      	str	r2, [r3, #0]
	lastLeftValue = 0; 
20002188:	4b07      	ldr	r3, [pc, #28]	; (200021a8 <playerReset+0x30>)
2000218a:	2200      	movs	r2, #0
2000218c:	601a      	str	r2, [r3, #0]
	xSpeed = 0;
2000218e:	4b07      	ldr	r3, [pc, #28]	; (200021ac <playerReset+0x34>)
20002190:	2200      	movs	r2, #0
20002192:	601a      	str	r2, [r3, #0]
	ySpeed = 0;
20002194:	4b06      	ldr	r3, [pc, #24]	; (200021b0 <playerReset+0x38>)
20002196:	2200      	movs	r2, #0
20002198:	601a      	str	r2, [r3, #0]
}
2000219a:	46c0      	nop			; (mov r8, r8)
2000219c:	46bd      	mov	sp, r7
2000219e:	bd80      	pop	{r7, pc}
200021a0:	2000576c 	andcs	r5, r0, ip, ror #14
200021a4:	20005770 	andcs	r5, r0, r0, ror r7
200021a8:	20005774 	andcs	r5, r0, r4, ror r7
200021ac:	20005778 	andcs	r5, r0, r8, ror r7
200021b0:	2000577c 	andcs	r5, r0, ip, ror r7

200021b4 <playerUpdate>:

void playerUpdate(GameObject *this) {
200021b4:	b580      	push	{r7, lr}
200021b6:	b082      	sub	sp, #8
200021b8:	af00      	add	r7, sp, #0
200021ba:	6078      	str	r0, [r7, #4]
	
	// Animate
	this->animation_counter++;
200021bc:	687b      	ldr	r3, [r7, #4]
200021be:	6a1b      	ldr	r3, [r3, #32]
200021c0:	1c5a      	adds	r2, r3, #1
200021c2:	687b      	ldr	r3, [r7, #4]
200021c4:	621a      	str	r2, [r3, #32]
	if (this->animation_counter == this->animation_speed) {
200021c6:	687b      	ldr	r3, [r7, #4]
200021c8:	6a1a      	ldr	r2, [r3, #32]
200021ca:	687b      	ldr	r3, [r7, #4]
200021cc:	69db      	ldr	r3, [r3, #28]
200021ce:	429a      	cmp	r2, r3
200021d0:	d10f      	bne.n	200021f2 <playerUpdate+0x3e>
		this->animation_counter = 0;
200021d2:	687b      	ldr	r3, [r7, #4]
200021d4:	2200      	movs	r2, #0
200021d6:	621a      	str	r2, [r3, #32]
		this->current_frame = (this->current_frame + 1) % this->n_frames;
200021d8:	687b      	ldr	r3, [r7, #4]
200021da:	695b      	ldr	r3, [r3, #20]
200021dc:	1c5a      	adds	r2, r3, #1
200021de:	687b      	ldr	r3, [r7, #4]
200021e0:	699b      	ldr	r3, [r3, #24]
200021e2:	0019      	movs	r1, r3
200021e4:	0010      	movs	r0, r2
200021e6:	f003 faa3 	bl	20005730 <__aeabi_idivmod>
200021ea:	000b      	movs	r3, r1
200021ec:	001a      	movs	r2, r3
200021ee:	687b      	ldr	r3, [r7, #4]
200021f0:	615a      	str	r2, [r3, #20]
	}
	
	// Y position changes
	
	if (lastJumpValue != read_DIL_single(JUMP_TRIGGER) && (this->yPos == LIMIT_DOWN || this->yPos == PLATFORM_Y - PLAYER_HEIGHT)){
200021f2:	2005      	movs	r0, #5
200021f4:	f002 fa1a 	bl	2000462c <read_DIL_single>
200021f8:	0002      	movs	r2, r0
200021fa:	4b68      	ldr	r3, [pc, #416]	; (2000239c <playerUpdate+0x1e8>)
200021fc:	681b      	ldr	r3, [r3, #0]
200021fe:	429a      	cmp	r2, r3
20002200:	d00b      	beq.n	2000221a <playerUpdate+0x66>
20002202:	687b      	ldr	r3, [r7, #4]
20002204:	689b      	ldr	r3, [r3, #8]
20002206:	2b27      	cmp	r3, #39	; 0x27
20002208:	d003      	beq.n	20002212 <playerUpdate+0x5e>
2000220a:	687b      	ldr	r3, [r7, #4]
2000220c:	689b      	ldr	r3, [r3, #8]
2000220e:	2b05      	cmp	r3, #5
20002210:	d103      	bne.n	2000221a <playerUpdate+0x66>
		ySpeed = -(SPEED_ADD_Y);
20002212:	4b63      	ldr	r3, [pc, #396]	; (200023a0 <playerUpdate+0x1ec>)
20002214:	2204      	movs	r2, #4
20002216:	4252      	negs	r2, r2
20002218:	601a      	str	r2, [r3, #0]
	}
	
	if (this->yPos + ySpeed > LIMIT_DOWN){
2000221a:	687b      	ldr	r3, [r7, #4]
2000221c:	689a      	ldr	r2, [r3, #8]
2000221e:	4b60      	ldr	r3, [pc, #384]	; (200023a0 <playerUpdate+0x1ec>)
20002220:	681b      	ldr	r3, [r3, #0]
20002222:	18d3      	adds	r3, r2, r3
20002224:	2b27      	cmp	r3, #39	; 0x27
20002226:	dd10      	ble.n	2000224a <playerUpdate+0x96>
		this->yPos = LIMIT_DOWN;
20002228:	687b      	ldr	r3, [r7, #4]
2000222a:	2227      	movs	r2, #39	; 0x27
2000222c:	609a      	str	r2, [r3, #8]
		if (ySpeed == SPEED_ADD_Y + 1){
2000222e:	4b5c      	ldr	r3, [pc, #368]	; (200023a0 <playerUpdate+0x1ec>)
20002230:	681b      	ldr	r3, [r3, #0]
20002232:	2b05      	cmp	r3, #5
20002234:	d105      	bne.n	20002242 <playerUpdate+0x8e>
			ascii_write("*THUMP*","");
20002236:	4a5b      	ldr	r2, [pc, #364]	; (200023a4 <playerUpdate+0x1f0>)
20002238:	4b5b      	ldr	r3, [pc, #364]	; (200023a8 <playerUpdate+0x1f4>)
2000223a:	0011      	movs	r1, r2
2000223c:	0018      	movs	r0, r3
2000223e:	f002 fbe7 	bl	20004a10 <ascii_write>
		}
		ySpeed = 0;
20002242:	4b57      	ldr	r3, [pc, #348]	; (200023a0 <playerUpdate+0x1ec>)
20002244:	2200      	movs	r2, #0
20002246:	601a      	str	r2, [r3, #0]
20002248:	e02a      	b.n	200022a0 <playerUpdate+0xec>
	}
	else if (this->yPos + ySpeed > PLATFORM_Y - PLAYER_HEIGHT && this->yPos + ySpeed < PLATFORM_Y - PLAYER_HEIGHT + 2*SPEED_ADD_Y){
2000224a:	687b      	ldr	r3, [r7, #4]
2000224c:	689a      	ldr	r2, [r3, #8]
2000224e:	4b54      	ldr	r3, [pc, #336]	; (200023a0 <playerUpdate+0x1ec>)
20002250:	681b      	ldr	r3, [r3, #0]
20002252:	18d3      	adds	r3, r2, r3
20002254:	2b05      	cmp	r3, #5
20002256:	dd17      	ble.n	20002288 <playerUpdate+0xd4>
20002258:	687b      	ldr	r3, [r7, #4]
2000225a:	689a      	ldr	r2, [r3, #8]
2000225c:	4b50      	ldr	r3, [pc, #320]	; (200023a0 <playerUpdate+0x1ec>)
2000225e:	681b      	ldr	r3, [r3, #0]
20002260:	18d3      	adds	r3, r2, r3
20002262:	2b0c      	cmp	r3, #12
20002264:	dc10      	bgt.n	20002288 <playerUpdate+0xd4>
		this->yPos = PLATFORM_Y - PLAYER_HEIGHT;
20002266:	687b      	ldr	r3, [r7, #4]
20002268:	2205      	movs	r2, #5
2000226a:	609a      	str	r2, [r3, #8]
		if (ySpeed == SPEED_ADD_Y + 1){
2000226c:	4b4c      	ldr	r3, [pc, #304]	; (200023a0 <playerUpdate+0x1ec>)
2000226e:	681b      	ldr	r3, [r3, #0]
20002270:	2b05      	cmp	r3, #5
20002272:	d105      	bne.n	20002280 <playerUpdate+0xcc>
			ascii_write("*THUMP*","");
20002274:	4a4b      	ldr	r2, [pc, #300]	; (200023a4 <playerUpdate+0x1f0>)
20002276:	4b4c      	ldr	r3, [pc, #304]	; (200023a8 <playerUpdate+0x1f4>)
20002278:	0011      	movs	r1, r2
2000227a:	0018      	movs	r0, r3
2000227c:	f002 fbc8 	bl	20004a10 <ascii_write>
		}
		ySpeed = 0;
20002280:	4b47      	ldr	r3, [pc, #284]	; (200023a0 <playerUpdate+0x1ec>)
20002282:	2200      	movs	r2, #0
20002284:	601a      	str	r2, [r3, #0]
20002286:	e00b      	b.n	200022a0 <playerUpdate+0xec>
	}
	else{
		this->yPos+=ySpeed;
20002288:	687b      	ldr	r3, [r7, #4]
2000228a:	689a      	ldr	r2, [r3, #8]
2000228c:	4b44      	ldr	r3, [pc, #272]	; (200023a0 <playerUpdate+0x1ec>)
2000228e:	681b      	ldr	r3, [r3, #0]
20002290:	18d2      	adds	r2, r2, r3
20002292:	687b      	ldr	r3, [r7, #4]
20002294:	609a      	str	r2, [r3, #8]
		ySpeed++;
20002296:	4b42      	ldr	r3, [pc, #264]	; (200023a0 <playerUpdate+0x1ec>)
20002298:	681b      	ldr	r3, [r3, #0]
2000229a:	1c5a      	adds	r2, r3, #1
2000229c:	4b40      	ldr	r3, [pc, #256]	; (200023a0 <playerUpdate+0x1ec>)
2000229e:	601a      	str	r2, [r3, #0]
	}

	// X position changes
	
	if (!lastRightValue && read_DIL_single(RIGHT_TRIGGER)){ 
200022a0:	4b42      	ldr	r3, [pc, #264]	; (200023ac <playerUpdate+0x1f8>)
200022a2:	681b      	ldr	r3, [r3, #0]
200022a4:	2b00      	cmp	r3, #0
200022a6:	d109      	bne.n	200022bc <playerUpdate+0x108>
200022a8:	2000      	movs	r0, #0
200022aa:	f002 f9bf 	bl	2000462c <read_DIL_single>
200022ae:	1e03      	subs	r3, r0, #0
200022b0:	d004      	beq.n	200022bc <playerUpdate+0x108>
		xSpeed += SPEED_ADD_X;
200022b2:	4b3f      	ldr	r3, [pc, #252]	; (200023b0 <playerUpdate+0x1fc>)
200022b4:	681b      	ldr	r3, [r3, #0]
200022b6:	1cda      	adds	r2, r3, #3
200022b8:	4b3d      	ldr	r3, [pc, #244]	; (200023b0 <playerUpdate+0x1fc>)
200022ba:	601a      	str	r2, [r3, #0]
	}
	
	if (!lastLeftValue && read_DIL_single(LEFT_TRIGGER)){
200022bc:	4b3d      	ldr	r3, [pc, #244]	; (200023b4 <playerUpdate+0x200>)
200022be:	681b      	ldr	r3, [r3, #0]
200022c0:	2b00      	cmp	r3, #0
200022c2:	d109      	bne.n	200022d8 <playerUpdate+0x124>
200022c4:	2007      	movs	r0, #7
200022c6:	f002 f9b1 	bl	2000462c <read_DIL_single>
200022ca:	1e03      	subs	r3, r0, #0
200022cc:	d004      	beq.n	200022d8 <playerUpdate+0x124>
		xSpeed -= SPEED_ADD_X;
200022ce:	4b38      	ldr	r3, [pc, #224]	; (200023b0 <playerUpdate+0x1fc>)
200022d0:	681b      	ldr	r3, [r3, #0]
200022d2:	1eda      	subs	r2, r3, #3
200022d4:	4b36      	ldr	r3, [pc, #216]	; (200023b0 <playerUpdate+0x1fc>)
200022d6:	601a      	str	r2, [r3, #0]
	}
	
	if (((!lastLeftValue && read_DIL_single(LEFT_TRIGGER)) || (!lastRightValue && read_DIL_single(RIGHT_TRIGGER))) && this->yPos != PLATFORM_Y - PLAYER_HEIGHT && this->yPos != LIMIT_DOWN){
200022d8:	4b36      	ldr	r3, [pc, #216]	; (200023b4 <playerUpdate+0x200>)
200022da:	681b      	ldr	r3, [r3, #0]
200022dc:	2b00      	cmp	r3, #0
200022de:	d104      	bne.n	200022ea <playerUpdate+0x136>
200022e0:	2007      	movs	r0, #7
200022e2:	f002 f9a3 	bl	2000462c <read_DIL_single>
200022e6:	1e03      	subs	r3, r0, #0
200022e8:	d108      	bne.n	200022fc <playerUpdate+0x148>
200022ea:	4b30      	ldr	r3, [pc, #192]	; (200023ac <playerUpdate+0x1f8>)
200022ec:	681b      	ldr	r3, [r3, #0]
200022ee:	2b00      	cmp	r3, #0
200022f0:	d111      	bne.n	20002316 <playerUpdate+0x162>
200022f2:	2000      	movs	r0, #0
200022f4:	f002 f99a 	bl	2000462c <read_DIL_single>
200022f8:	1e03      	subs	r3, r0, #0
200022fa:	d00c      	beq.n	20002316 <playerUpdate+0x162>
200022fc:	687b      	ldr	r3, [r7, #4]
200022fe:	689b      	ldr	r3, [r3, #8]
20002300:	2b05      	cmp	r3, #5
20002302:	d008      	beq.n	20002316 <playerUpdate+0x162>
20002304:	687b      	ldr	r3, [r7, #4]
20002306:	689b      	ldr	r3, [r3, #8]
20002308:	2b27      	cmp	r3, #39	; 0x27
2000230a:	d004      	beq.n	20002316 <playerUpdate+0x162>
		xSpeed *=2;
2000230c:	4b28      	ldr	r3, [pc, #160]	; (200023b0 <playerUpdate+0x1fc>)
2000230e:	681b      	ldr	r3, [r3, #0]
20002310:	005a      	lsls	r2, r3, #1
20002312:	4b27      	ldr	r3, [pc, #156]	; (200023b0 <playerUpdate+0x1fc>)
20002314:	601a      	str	r2, [r3, #0]
	}
	
	if (this->xPos + xSpeed > LIMIT_RIGHT || this->xPos + xSpeed < LIMIT_LEFT){
20002316:	687b      	ldr	r3, [r7, #4]
20002318:	685a      	ldr	r2, [r3, #4]
2000231a:	4b25      	ldr	r3, [pc, #148]	; (200023b0 <playerUpdate+0x1fc>)
2000231c:	681b      	ldr	r3, [r3, #0]
2000231e:	18d3      	adds	r3, r2, r3
20002320:	2b6e      	cmp	r3, #110	; 0x6e
20002322:	dc06      	bgt.n	20002332 <playerUpdate+0x17e>
20002324:	687b      	ldr	r3, [r7, #4]
20002326:	685a      	ldr	r2, [r3, #4]
20002328:	4b21      	ldr	r3, [pc, #132]	; (200023b0 <playerUpdate+0x1fc>)
2000232a:	681b      	ldr	r3, [r3, #0]
2000232c:	18d3      	adds	r3, r2, r3
2000232e:	2b00      	cmp	r3, #0
20002330:	da04      	bge.n	2000233c <playerUpdate+0x188>
		xSpeed *= -1;	
20002332:	4b1f      	ldr	r3, [pc, #124]	; (200023b0 <playerUpdate+0x1fc>)
20002334:	681b      	ldr	r3, [r3, #0]
20002336:	425a      	negs	r2, r3
20002338:	4b1d      	ldr	r3, [pc, #116]	; (200023b0 <playerUpdate+0x1fc>)
2000233a:	601a      	str	r2, [r3, #0]
	}
	
	this->xPos += xSpeed;	
2000233c:	687b      	ldr	r3, [r7, #4]
2000233e:	685a      	ldr	r2, [r3, #4]
20002340:	4b1b      	ldr	r3, [pc, #108]	; (200023b0 <playerUpdate+0x1fc>)
20002342:	681b      	ldr	r3, [r3, #0]
20002344:	18d2      	adds	r2, r2, r3
20002346:	687b      	ldr	r3, [r7, #4]
20002348:	605a      	str	r2, [r3, #4]
	
	if (xSpeed > 0){
2000234a:	4b19      	ldr	r3, [pc, #100]	; (200023b0 <playerUpdate+0x1fc>)
2000234c:	681b      	ldr	r3, [r3, #0]
2000234e:	2b00      	cmp	r3, #0
20002350:	dd05      	ble.n	2000235e <playerUpdate+0x1aa>
		xSpeed--;
20002352:	4b17      	ldr	r3, [pc, #92]	; (200023b0 <playerUpdate+0x1fc>)
20002354:	681b      	ldr	r3, [r3, #0]
20002356:	1e5a      	subs	r2, r3, #1
20002358:	4b15      	ldr	r3, [pc, #84]	; (200023b0 <playerUpdate+0x1fc>)
2000235a:	601a      	str	r2, [r3, #0]
2000235c:	e008      	b.n	20002370 <playerUpdate+0x1bc>
	}
	else if (xSpeed < 0){
2000235e:	4b14      	ldr	r3, [pc, #80]	; (200023b0 <playerUpdate+0x1fc>)
20002360:	681b      	ldr	r3, [r3, #0]
20002362:	2b00      	cmp	r3, #0
20002364:	da04      	bge.n	20002370 <playerUpdate+0x1bc>
		xSpeed++;
20002366:	4b12      	ldr	r3, [pc, #72]	; (200023b0 <playerUpdate+0x1fc>)
20002368:	681b      	ldr	r3, [r3, #0]
2000236a:	1c5a      	adds	r2, r3, #1
2000236c:	4b10      	ldr	r3, [pc, #64]	; (200023b0 <playerUpdate+0x1fc>)
2000236e:	601a      	str	r2, [r3, #0]
	}
	
	// Prepare values
	lastRightValue = read_DIL_single(RIGHT_TRIGGER);
20002370:	2000      	movs	r0, #0
20002372:	f002 f95b 	bl	2000462c <read_DIL_single>
20002376:	0002      	movs	r2, r0
20002378:	4b0c      	ldr	r3, [pc, #48]	; (200023ac <playerUpdate+0x1f8>)
2000237a:	601a      	str	r2, [r3, #0]
	lastLeftValue = read_DIL_single(LEFT_TRIGGER);
2000237c:	2007      	movs	r0, #7
2000237e:	f002 f955 	bl	2000462c <read_DIL_single>
20002382:	0002      	movs	r2, r0
20002384:	4b0b      	ldr	r3, [pc, #44]	; (200023b4 <playerUpdate+0x200>)
20002386:	601a      	str	r2, [r3, #0]
	lastJumpValue = read_DIL_single(JUMP_TRIGGER);
20002388:	2005      	movs	r0, #5
2000238a:	f002 f94f 	bl	2000462c <read_DIL_single>
2000238e:	0002      	movs	r2, r0
20002390:	4b02      	ldr	r3, [pc, #8]	; (2000239c <playerUpdate+0x1e8>)
20002392:	601a      	str	r2, [r3, #0]
	
20002394:	46c0      	nop			; (mov r8, r8)
20002396:	46bd      	mov	sp, r7
20002398:	b002      	add	sp, #8
2000239a:	bd80      	pop	{r7, pc}
2000239c:	2000576c 	andcs	r5, r0, ip, ror #14
200023a0:	2000577c 	andcs	r5, r0, ip, ror r7
200023a4:	20015864 	andcs	r5, r1, r4, ror #16
200023a8:	20015868 	andcs	r5, r1, r8, ror #16
200023ac:	20005770 	andcs	r5, r0, r0, ror r7
200023b0:	20005778 	andcs	r5, r0, r8, ror r7
200023b4:	20005774 	andcs	r5, r0, r4, ror r7

200023b8 <initSprites>:
Image bird5Image;
Image bird6Image;
//Image bird7Image;
//Image bird8Image;
Image birdImages[6];
static void initSprites( void ) {	
200023b8:	b580      	push	{r7, lr}
200023ba:	b090      	sub	sp, #64	; 0x40
200023bc:	af00      	add	r7, sp, #0
	
	sprite *pointer11 = &tempBirdLight;
200023be:	4b54      	ldr	r3, [pc, #336]	; (20002510 <initSprites+0x158>)
200023c0:	63fb      	str	r3, [r7, #60]	; 0x3c
	load_sprite(pointer11, bird1_light_bits, bird1_black_width, bird1_black_height);
200023c2:	4954      	ldr	r1, [pc, #336]	; (20002514 <initSprites+0x15c>)
200023c4:	6bf8      	ldr	r0, [r7, #60]	; 0x3c
200023c6:	2319      	movs	r3, #25
200023c8:	2219      	movs	r2, #25
200023ca:	f002 f8ff 	bl	200045cc <load_sprite>
	bird1Light = pointer11;
200023ce:	4b52      	ldr	r3, [pc, #328]	; (20002518 <initSprites+0x160>)
200023d0:	6bfa      	ldr	r2, [r7, #60]	; 0x3c
200023d2:	601a      	str	r2, [r3, #0]
	sprite *pointer12 = &tempBirdGray;
200023d4:	4b51      	ldr	r3, [pc, #324]	; (2000251c <initSprites+0x164>)
200023d6:	63bb      	str	r3, [r7, #56]	; 0x38
	load_sprite(pointer12, bird1_gray_bits, bird1_black_width, bird1_black_height);
200023d8:	4951      	ldr	r1, [pc, #324]	; (20002520 <initSprites+0x168>)
200023da:	6bb8      	ldr	r0, [r7, #56]	; 0x38
200023dc:	2319      	movs	r3, #25
200023de:	2219      	movs	r2, #25
200023e0:	f002 f8f4 	bl	200045cc <load_sprite>
	bird1Gray = pointer12;
200023e4:	4b4f      	ldr	r3, [pc, #316]	; (20002524 <initSprites+0x16c>)
200023e6:	6bba      	ldr	r2, [r7, #56]	; 0x38
200023e8:	601a      	str	r2, [r3, #0]
	sprite *pointer13 = &tempBirdBlack;
200023ea:	4b4f      	ldr	r3, [pc, #316]	; (20002528 <initSprites+0x170>)
200023ec:	637b      	str	r3, [r7, #52]	; 0x34
	load_sprite(pointer13, bird1_black_bits, bird1_black_width, bird1_black_height);
200023ee:	494f      	ldr	r1, [pc, #316]	; (2000252c <initSprites+0x174>)
200023f0:	6b78      	ldr	r0, [r7, #52]	; 0x34
200023f2:	2319      	movs	r3, #25
200023f4:	2219      	movs	r2, #25
200023f6:	f002 f8e9 	bl	200045cc <load_sprite>
	bird1Black = pointer13;	
200023fa:	4b4d      	ldr	r3, [pc, #308]	; (20002530 <initSprites+0x178>)
200023fc:	6b7a      	ldr	r2, [r7, #52]	; 0x34
200023fe:	601a      	str	r2, [r3, #0]
	
	sprite *pointer14 = &tempBird2Light;
20002400:	4b4c      	ldr	r3, [pc, #304]	; (20002534 <initSprites+0x17c>)
20002402:	633b      	str	r3, [r7, #48]	; 0x30
	load_sprite(pointer14, bird2_light_bits, bird2_black_width, bird2_black_height);
20002404:	494c      	ldr	r1, [pc, #304]	; (20002538 <initSprites+0x180>)
20002406:	6b38      	ldr	r0, [r7, #48]	; 0x30
20002408:	2319      	movs	r3, #25
2000240a:	2219      	movs	r2, #25
2000240c:	f002 f8de 	bl	200045cc <load_sprite>
	bird2Light = pointer14;
20002410:	4b4a      	ldr	r3, [pc, #296]	; (2000253c <initSprites+0x184>)
20002412:	6b3a      	ldr	r2, [r7, #48]	; 0x30
20002414:	601a      	str	r2, [r3, #0]
	sprite *pointer15 = &tempBird2Gray;
20002416:	4b4a      	ldr	r3, [pc, #296]	; (20002540 <initSprites+0x188>)
20002418:	62fb      	str	r3, [r7, #44]	; 0x2c
	load_sprite(pointer15, bird2_gray_bits, bird2_black_width, bird2_black_height);
2000241a:	494a      	ldr	r1, [pc, #296]	; (20002544 <initSprites+0x18c>)
2000241c:	6af8      	ldr	r0, [r7, #44]	; 0x2c
2000241e:	2319      	movs	r3, #25
20002420:	2219      	movs	r2, #25
20002422:	f002 f8d3 	bl	200045cc <load_sprite>
	bird2Gray = pointer15;
20002426:	4b48      	ldr	r3, [pc, #288]	; (20002548 <initSprites+0x190>)
20002428:	6afa      	ldr	r2, [r7, #44]	; 0x2c
2000242a:	601a      	str	r2, [r3, #0]
	sprite *pointer16 = &tempBird2Black;
2000242c:	4b47      	ldr	r3, [pc, #284]	; (2000254c <initSprites+0x194>)
2000242e:	62bb      	str	r3, [r7, #40]	; 0x28
	load_sprite(pointer16, bird2_black_bits, bird2_black_width, bird2_black_height);
20002430:	4947      	ldr	r1, [pc, #284]	; (20002550 <initSprites+0x198>)
20002432:	6ab8      	ldr	r0, [r7, #40]	; 0x28
20002434:	2319      	movs	r3, #25
20002436:	2219      	movs	r2, #25
20002438:	f002 f8c8 	bl	200045cc <load_sprite>
	bird2Black = pointer16;
2000243c:	4b45      	ldr	r3, [pc, #276]	; (20002554 <initSprites+0x19c>)
2000243e:	6aba      	ldr	r2, [r7, #40]	; 0x28
20002440:	601a      	str	r2, [r3, #0]
	
	
	sprite *finalPointer = &tempBird3Light;
20002442:	4b45      	ldr	r3, [pc, #276]	; (20002558 <initSprites+0x1a0>)
20002444:	627b      	str	r3, [r7, #36]	; 0x24
	load_sprite(finalPointer, bird3_light_bits, bird3_black_width, bird3_black_height);
20002446:	4945      	ldr	r1, [pc, #276]	; (2000255c <initSprites+0x1a4>)
20002448:	6a78      	ldr	r0, [r7, #36]	; 0x24
2000244a:	2319      	movs	r3, #25
2000244c:	2219      	movs	r2, #25
2000244e:	f002 f8bd 	bl	200045cc <load_sprite>
	bird3Light = finalPointer;
20002452:	4b43      	ldr	r3, [pc, #268]	; (20002560 <initSprites+0x1a8>)
20002454:	6a7a      	ldr	r2, [r7, #36]	; 0x24
20002456:	601a      	str	r2, [r3, #0]
	sprite *pointer17 = &tempBird3Gray;
20002458:	4b42      	ldr	r3, [pc, #264]	; (20002564 <initSprites+0x1ac>)
2000245a:	623b      	str	r3, [r7, #32]
	load_sprite(pointer17, bird3_gray_bits, bird3_black_width, bird3_black_height);
2000245c:	4942      	ldr	r1, [pc, #264]	; (20002568 <initSprites+0x1b0>)
2000245e:	6a38      	ldr	r0, [r7, #32]
20002460:	2319      	movs	r3, #25
20002462:	2219      	movs	r2, #25
20002464:	f002 f8b2 	bl	200045cc <load_sprite>
	bird3Gray = pointer17;
20002468:	4b40      	ldr	r3, [pc, #256]	; (2000256c <initSprites+0x1b4>)
2000246a:	6a3a      	ldr	r2, [r7, #32]
2000246c:	601a      	str	r2, [r3, #0]
	sprite *pointer18 = &tempBird3Black;
2000246e:	4b40      	ldr	r3, [pc, #256]	; (20002570 <initSprites+0x1b8>)
20002470:	61fb      	str	r3, [r7, #28]
	load_sprite(pointer18, bird3_black_bits, bird3_black_width, bird3_black_height);
20002472:	4940      	ldr	r1, [pc, #256]	; (20002574 <initSprites+0x1bc>)
20002474:	69f8      	ldr	r0, [r7, #28]
20002476:	2319      	movs	r3, #25
20002478:	2219      	movs	r2, #25
2000247a:	f002 f8a7 	bl	200045cc <load_sprite>
	bird3Black = pointer18;	
2000247e:	4b3e      	ldr	r3, [pc, #248]	; (20002578 <initSprites+0x1c0>)
20002480:	69fa      	ldr	r2, [r7, #28]
20002482:	601a      	str	r2, [r3, #0]
	
	sprite *pointer19 = &tempBird4Light;
20002484:	4b3d      	ldr	r3, [pc, #244]	; (2000257c <initSprites+0x1c4>)
20002486:	61bb      	str	r3, [r7, #24]
	load_sprite(pointer19, bird4_light_bits, bird4_black_width, bird4_black_height);
20002488:	493d      	ldr	r1, [pc, #244]	; (20002580 <initSprites+0x1c8>)
2000248a:	69b8      	ldr	r0, [r7, #24]
2000248c:	2319      	movs	r3, #25
2000248e:	2219      	movs	r2, #25
20002490:	f002 f89c 	bl	200045cc <load_sprite>
	bird4Light = pointer19;
20002494:	4b3b      	ldr	r3, [pc, #236]	; (20002584 <initSprites+0x1cc>)
20002496:	69ba      	ldr	r2, [r7, #24]
20002498:	601a      	str	r2, [r3, #0]
	sprite *pointer20 = &tempBird4Gray;
2000249a:	4b3b      	ldr	r3, [pc, #236]	; (20002588 <initSprites+0x1d0>)
2000249c:	617b      	str	r3, [r7, #20]
	load_sprite(pointer20, bird4_gray_bits, bird4_black_width, bird4_black_height);
2000249e:	493b      	ldr	r1, [pc, #236]	; (2000258c <initSprites+0x1d4>)
200024a0:	6978      	ldr	r0, [r7, #20]
200024a2:	2319      	movs	r3, #25
200024a4:	2219      	movs	r2, #25
200024a6:	f002 f891 	bl	200045cc <load_sprite>
	bird4Gray = pointer20;
200024aa:	4b39      	ldr	r3, [pc, #228]	; (20002590 <initSprites+0x1d8>)
200024ac:	697a      	ldr	r2, [r7, #20]
200024ae:	601a      	str	r2, [r3, #0]
	sprite *pointer21 = &tempBird4Black;
200024b0:	4b38      	ldr	r3, [pc, #224]	; (20002594 <initSprites+0x1dc>)
200024b2:	613b      	str	r3, [r7, #16]
	load_sprite(pointer21, bird4_black_bits, bird4_black_width, bird4_black_height);
200024b4:	4938      	ldr	r1, [pc, #224]	; (20002598 <initSprites+0x1e0>)
200024b6:	6938      	ldr	r0, [r7, #16]
200024b8:	2319      	movs	r3, #25
200024ba:	2219      	movs	r2, #25
200024bc:	f002 f886 	bl	200045cc <load_sprite>
	bird4Black = pointer21;	
200024c0:	4b36      	ldr	r3, [pc, #216]	; (2000259c <initSprites+0x1e4>)
200024c2:	693a      	ldr	r2, [r7, #16]
200024c4:	601a      	str	r2, [r3, #0]
	
	sprite *pointer22 = &tempBird5Light;
200024c6:	4b36      	ldr	r3, [pc, #216]	; (200025a0 <initSprites+0x1e8>)
200024c8:	60fb      	str	r3, [r7, #12]
	load_sprite(pointer22, bird5_light_bits, bird5_black_width, bird5_black_height);
200024ca:	4936      	ldr	r1, [pc, #216]	; (200025a4 <initSprites+0x1ec>)
200024cc:	68f8      	ldr	r0, [r7, #12]
200024ce:	2319      	movs	r3, #25
200024d0:	2219      	movs	r2, #25
200024d2:	f002 f87b 	bl	200045cc <load_sprite>
	bird5Light = pointer22;
200024d6:	4b34      	ldr	r3, [pc, #208]	; (200025a8 <initSprites+0x1f0>)
200024d8:	68fa      	ldr	r2, [r7, #12]
200024da:	601a      	str	r2, [r3, #0]
	sprite *pointer23 = &tempBird5Gray;
200024dc:	4b33      	ldr	r3, [pc, #204]	; (200025ac <initSprites+0x1f4>)
200024de:	60bb      	str	r3, [r7, #8]
	load_sprite(pointer23, bird5_gray_bits, bird5_black_width, bird5_black_height);
200024e0:	4933      	ldr	r1, [pc, #204]	; (200025b0 <initSprites+0x1f8>)
200024e2:	68b8      	ldr	r0, [r7, #8]
200024e4:	2319      	movs	r3, #25
200024e6:	2219      	movs	r2, #25
200024e8:	f002 f870 	bl	200045cc <load_sprite>
	bird5Gray = pointer23;
200024ec:	4b31      	ldr	r3, [pc, #196]	; (200025b4 <initSprites+0x1fc>)
200024ee:	68ba      	ldr	r2, [r7, #8]
200024f0:	601a      	str	r2, [r3, #0]
	sprite *pointer24 = &tempBird5Black;
200024f2:	4b31      	ldr	r3, [pc, #196]	; (200025b8 <initSprites+0x200>)
200024f4:	607b      	str	r3, [r7, #4]
	load_sprite(pointer24, bird5_black_bits, bird5_black_width, bird5_black_height);
200024f6:	4931      	ldr	r1, [pc, #196]	; (200025bc <initSprites+0x204>)
200024f8:	6878      	ldr	r0, [r7, #4]
200024fa:	2319      	movs	r3, #25
200024fc:	2219      	movs	r2, #25
200024fe:	f002 f865 	bl	200045cc <load_sprite>
	bird5Black = pointer24;
20002502:	4b2f      	ldr	r3, [pc, #188]	; (200025c0 <initSprites+0x208>)
20002504:	687a      	ldr	r2, [r7, #4]
20002506:	601a      	str	r2, [r3, #0]
}
20002508:	46c0      	nop			; (mov r8, r8)
2000250a:	46bd      	mov	sp, r7
2000250c:	b010      	add	sp, #64	; 0x40
2000250e:	bd80      	pop	{r7, pc}
20002510:	20005c3c 	andcs	r5, r0, ip, lsr ip
20002514:	20009c78 	andcs	r9, r0, r8, ror ip
20002518:	20005c48 	andcs	r5, r0, r8, asr #24
2000251c:	20005bd8 	ldrdcs	r5, [r0], -r8
20002520:	20009c14 	andcs	r9, r0, r4, lsl ip
20002524:	20005b50 	andcs	r5, r0, r0, asr fp
20002528:	20005bc8 	andcs	r5, r0, r8, asr #23
2000252c:	20009bb0 			; <UNDEFINED> instruction: 0x20009bb0
20002530:	20005bb8 			; <UNDEFINED> instruction: 0x20005bb8
20002534:	20005c4c 	andcs	r5, r0, ip, asr #24
20002538:	20009da4 	andcs	r9, r0, r4, lsr #27
2000253c:	20005cec 	andcs	r5, r0, ip, ror #25
20002540:	20005bf4 	strdcs	r5, [r0], -r4
20002544:	20009d40 	andcs	r9, r0, r0, asr #26
20002548:	20005c38 	andcs	r5, r0, r8, lsr ip
2000254c:	20005cd4 	ldrdcs	r5, [r0], -r4
20002550:	20009cdc 	ldrdcs	r9, [r0], -ip
20002554:	20005bb4 			; <UNDEFINED> instruction: 0x20005bb4
20002558:	20005c70 	andcs	r5, r0, r0, ror ip
2000255c:	20009ed0 	ldrdcs	r9, [r0], -r0
20002560:	20005c00 	andcs	r5, r0, r0, lsl #24
20002564:	20005c7c 	andcs	r5, r0, ip, ror ip
20002568:	20009e6c 	andcs	r9, r0, ip, ror #28
2000256c:	20005bd4 	ldrdcs	r5, [r0], -r4
20002570:	20005c2c 	andcs	r5, r0, ip, lsr #24
20002574:	20009e08 	andcs	r9, r0, r8, lsl #28
20002578:	20005bac 	andcs	r5, r0, ip, lsr #23
2000257c:	20005c64 	andcs	r5, r0, r4, ror #24
20002580:	20009ffc 	strdcs	r9, [r0], -ip
20002584:	20005b4c 	andcs	r5, r0, ip, asr #22
20002588:	20005ce0 	andcs	r5, r0, r0, ror #25
2000258c:	20009f98 	mulcs	r0, r8, pc	; <UNPREDICTABLE>
20002590:	20005bb0 			; <UNDEFINED> instruction: 0x20005bb0
20002594:	20005b64 	andcs	r5, r0, r4, ror #22
20002598:	20009f34 	andcs	r9, r0, r4, lsr pc
2000259c:	20005cd0 	ldrdcs	r5, [r0], -r0
200025a0:	20005be8 	andcs	r5, r0, r8, ror #23
200025a4:	2000a128 	andcs	sl, r0, r8, lsr #2
200025a8:	20005c28 	andcs	r5, r0, r8, lsr #24
200025ac:	20005c04 	andcs	r5, r0, r4, lsl #24
200025b0:	2000a0c4 	andcs	sl, r0, r4, asr #1
200025b4:	20005be4 	andcs	r5, r0, r4, ror #23
200025b8:	20005c10 	andcs	r5, r0, r0, lsl ip
200025bc:	2000a060 	andcs	sl, r0, r0, rrx
200025c0:	20005b60 	andcs	r5, r0, r0, ror #22

200025c4 <init_bird>:
	
void init_bird( GameObject *birdObj ) {
200025c4:	b590      	push	{r4, r7, lr}
200025c6:	b083      	sub	sp, #12
200025c8:	af00      	add	r7, sp, #0
200025ca:	6078      	str	r0, [r7, #4]
	static int firstTime = 1;
	if (firstTime) {
200025cc:	4b37      	ldr	r3, [pc, #220]	; (200026ac <init_bird+0xe8>)
200025ce:	681b      	ldr	r3, [r3, #0]
200025d0:	2b00      	cmp	r3, #0
200025d2:	d057      	beq.n	20002684 <init_bird+0xc0>
		initSprites();
200025d4:	f7ff fef0 	bl	200023b8 <initSprites>
		firstTime = 0;			
200025d8:	4b34      	ldr	r3, [pc, #208]	; (200026ac <init_bird+0xe8>)
200025da:	2200      	movs	r2, #0
200025dc:	601a      	str	r2, [r3, #0]

		birdImages[0] = bird1Image;
200025de:	4b34      	ldr	r3, [pc, #208]	; (200026b0 <init_bird+0xec>)
200025e0:	4a34      	ldr	r2, [pc, #208]	; (200026b4 <init_bird+0xf0>)
200025e2:	ca13      	ldmia	r2!, {r0, r1, r4}
200025e4:	c313      	stmia	r3!, {r0, r1, r4}
		birdImages[1] = bird2Image;
200025e6:	4b32      	ldr	r3, [pc, #200]	; (200026b0 <init_bird+0xec>)
200025e8:	4a33      	ldr	r2, [pc, #204]	; (200026b8 <init_bird+0xf4>)
200025ea:	330c      	adds	r3, #12
200025ec:	ca13      	ldmia	r2!, {r0, r1, r4}
200025ee:	c313      	stmia	r3!, {r0, r1, r4}
		birdImages[2] = bird3Image;
200025f0:	4b2f      	ldr	r3, [pc, #188]	; (200026b0 <init_bird+0xec>)
200025f2:	4a32      	ldr	r2, [pc, #200]	; (200026bc <init_bird+0xf8>)
200025f4:	3318      	adds	r3, #24
200025f6:	ca13      	ldmia	r2!, {r0, r1, r4}
200025f8:	c313      	stmia	r3!, {r0, r1, r4}
		birdImages[3] = bird4Image;
200025fa:	4b2d      	ldr	r3, [pc, #180]	; (200026b0 <init_bird+0xec>)
200025fc:	4a30      	ldr	r2, [pc, #192]	; (200026c0 <init_bird+0xfc>)
200025fe:	3324      	adds	r3, #36	; 0x24
20002600:	ca13      	ldmia	r2!, {r0, r1, r4}
20002602:	c313      	stmia	r3!, {r0, r1, r4}
		birdImages[4] = bird5Image;
20002604:	4b2a      	ldr	r3, [pc, #168]	; (200026b0 <init_bird+0xec>)
20002606:	4a2f      	ldr	r2, [pc, #188]	; (200026c4 <init_bird+0x100>)
20002608:	3330      	adds	r3, #48	; 0x30
2000260a:	ca13      	ldmia	r2!, {r0, r1, r4}
2000260c:	c313      	stmia	r3!, {r0, r1, r4}
		birdImages[5] = bird6Image;
2000260e:	4b28      	ldr	r3, [pc, #160]	; (200026b0 <init_bird+0xec>)
20002610:	4a2d      	ldr	r2, [pc, #180]	; (200026c8 <init_bird+0x104>)
20002612:	333c      	adds	r3, #60	; 0x3c
20002614:	ca13      	ldmia	r2!, {r0, r1, r4}
20002616:	c313      	stmia	r3!, {r0, r1, r4}
//		birdImages[6] = bird7Image;
		//birdImages[7] = bird8Image;
		
		load_image(&birdImages[0], bird1Black, bird1Gray, bird1Light);
20002618:	4b2c      	ldr	r3, [pc, #176]	; (200026cc <init_bird+0x108>)
2000261a:	6819      	ldr	r1, [r3, #0]
2000261c:	4b2c      	ldr	r3, [pc, #176]	; (200026d0 <init_bird+0x10c>)
2000261e:	681a      	ldr	r2, [r3, #0]
20002620:	4b2c      	ldr	r3, [pc, #176]	; (200026d4 <init_bird+0x110>)
20002622:	681b      	ldr	r3, [r3, #0]
20002624:	4822      	ldr	r0, [pc, #136]	; (200026b0 <init_bird+0xec>)
20002626:	f001 ffbd 	bl	200045a4 <load_image>
		load_image(&birdImages[1], bird2Black, bird2Gray, bird2Light);
2000262a:	4b2b      	ldr	r3, [pc, #172]	; (200026d8 <init_bird+0x114>)
2000262c:	6819      	ldr	r1, [r3, #0]
2000262e:	4b2b      	ldr	r3, [pc, #172]	; (200026dc <init_bird+0x118>)
20002630:	681a      	ldr	r2, [r3, #0]
20002632:	4b2b      	ldr	r3, [pc, #172]	; (200026e0 <init_bird+0x11c>)
20002634:	681b      	ldr	r3, [r3, #0]
20002636:	482b      	ldr	r0, [pc, #172]	; (200026e4 <init_bird+0x120>)
20002638:	f001 ffb4 	bl	200045a4 <load_image>
		load_image(&birdImages[2], bird3Black, bird3Gray, bird3Light);
2000263c:	4b2a      	ldr	r3, [pc, #168]	; (200026e8 <init_bird+0x124>)
2000263e:	6819      	ldr	r1, [r3, #0]
20002640:	4b2a      	ldr	r3, [pc, #168]	; (200026ec <init_bird+0x128>)
20002642:	681a      	ldr	r2, [r3, #0]
20002644:	4b2a      	ldr	r3, [pc, #168]	; (200026f0 <init_bird+0x12c>)
20002646:	681b      	ldr	r3, [r3, #0]
20002648:	482a      	ldr	r0, [pc, #168]	; (200026f4 <init_bird+0x130>)
2000264a:	f001 ffab 	bl	200045a4 <load_image>
		load_image(&birdImages[3], bird4Black, bird4Gray, bird4Light);
2000264e:	4b2a      	ldr	r3, [pc, #168]	; (200026f8 <init_bird+0x134>)
20002650:	6819      	ldr	r1, [r3, #0]
20002652:	4b2a      	ldr	r3, [pc, #168]	; (200026fc <init_bird+0x138>)
20002654:	681a      	ldr	r2, [r3, #0]
20002656:	4b2a      	ldr	r3, [pc, #168]	; (20002700 <init_bird+0x13c>)
20002658:	681b      	ldr	r3, [r3, #0]
2000265a:	482a      	ldr	r0, [pc, #168]	; (20002704 <init_bird+0x140>)
2000265c:	f001 ffa2 	bl	200045a4 <load_image>
		load_image(&birdImages[4], bird5Black, bird5Gray, bird5Light);
20002660:	4b29      	ldr	r3, [pc, #164]	; (20002708 <init_bird+0x144>)
20002662:	6819      	ldr	r1, [r3, #0]
20002664:	4b29      	ldr	r3, [pc, #164]	; (2000270c <init_bird+0x148>)
20002666:	681a      	ldr	r2, [r3, #0]
20002668:	4b29      	ldr	r3, [pc, #164]	; (20002710 <init_bird+0x14c>)
2000266a:	681b      	ldr	r3, [r3, #0]
2000266c:	4829      	ldr	r0, [pc, #164]	; (20002714 <init_bird+0x150>)
2000266e:	f001 ff99 	bl	200045a4 <load_image>
		
		//load_image(&birdImages[7], bird2Black, bird2Gray, bird2Light);
		load_image(&birdImages[5], bird3Black, bird3Gray, bird3Light);
20002672:	4b1d      	ldr	r3, [pc, #116]	; (200026e8 <init_bird+0x124>)
20002674:	6819      	ldr	r1, [r3, #0]
20002676:	4b1d      	ldr	r3, [pc, #116]	; (200026ec <init_bird+0x128>)
20002678:	681a      	ldr	r2, [r3, #0]
2000267a:	4b1d      	ldr	r3, [pc, #116]	; (200026f0 <init_bird+0x12c>)
2000267c:	681b      	ldr	r3, [r3, #0]
2000267e:	4826      	ldr	r0, [pc, #152]	; (20002718 <init_bird+0x154>)
20002680:	f001 ff90 	bl	200045a4 <load_image>
		//load_image(&birdImages[5], bird4Black, bird4Gray, bird4Light);
	}
	
	birdObj->images = birdImages;
20002684:	687b      	ldr	r3, [r7, #4]
20002686:	4a0a      	ldr	r2, [pc, #40]	; (200026b0 <init_bird+0xec>)
20002688:	601a      	str	r2, [r3, #0]

	birdObj->current_frame = 0;
2000268a:	687b      	ldr	r3, [r7, #4]
2000268c:	2200      	movs	r2, #0
2000268e:	615a      	str	r2, [r3, #20]
	birdObj->n_frames = 6;
20002690:	687b      	ldr	r3, [r7, #4]
20002692:	2206      	movs	r2, #6
20002694:	619a      	str	r2, [r3, #24]
	birdObj->animation_speed = 1;
20002696:	687b      	ldr	r3, [r7, #4]
20002698:	2201      	movs	r2, #1
2000269a:	61da      	str	r2, [r3, #28]
	birdObj->animation_counter = 0;
2000269c:	687b      	ldr	r3, [r7, #4]
2000269e:	2200      	movs	r2, #0
200026a0:	621a      	str	r2, [r3, #32]
}
200026a2:	46c0      	nop			; (mov r8, r8)
200026a4:	46bd      	mov	sp, r7
200026a6:	b003      	add	sp, #12
200026a8:	bd90      	pop	{r4, r7, pc}
200026aa:	46c0      	nop			; (mov r8, r8)
200026ac:	2000a18c 	andcs	sl, r0, ip, lsl #3
200026b0:	20005c88 	andcs	r5, r0, r8, lsl #25
200026b4:	20005ba0 	andcs	r5, r0, r0, lsr #23
200026b8:	20005b70 	andcs	r5, r0, r0, ror fp
200026bc:	20005c58 	andcs	r5, r0, r8, asr ip
200026c0:	20005bbc 			; <UNDEFINED> instruction: 0x20005bbc
200026c4:	20005c1c 	andcs	r5, r0, ip, lsl ip
200026c8:	20005b54 	andcs	r5, r0, r4, asr fp
200026cc:	20005bb8 			; <UNDEFINED> instruction: 0x20005bb8
200026d0:	20005b50 	andcs	r5, r0, r0, asr fp
200026d4:	20005c48 	andcs	r5, r0, r8, asr #24
200026d8:	20005bb4 			; <UNDEFINED> instruction: 0x20005bb4
200026dc:	20005c38 	andcs	r5, r0, r8, lsr ip
200026e0:	20005cec 	andcs	r5, r0, ip, ror #25
200026e4:	20005c94 	mulcs	r0, r4, ip
200026e8:	20005bac 	andcs	r5, r0, ip, lsr #23
200026ec:	20005bd4 	ldrdcs	r5, [r0], -r4
200026f0:	20005c00 	andcs	r5, r0, r0, lsl #24
200026f4:	20005ca0 	andcs	r5, r0, r0, lsr #25
200026f8:	20005cd0 	ldrdcs	r5, [r0], -r0
200026fc:	20005bb0 			; <UNDEFINED> instruction: 0x20005bb0
20002700:	20005b4c 	andcs	r5, r0, ip, asr #22
20002704:	20005cac 	andcs	r5, r0, ip, lsr #25
20002708:	20005b60 	andcs	r5, r0, r0, ror #22
2000270c:	20005be4 	andcs	r5, r0, r4, ror #23
20002710:	20005c28 	andcs	r5, r0, r8, lsr #24
20002714:	20005cb8 			; <UNDEFINED> instruction: 0x20005cb8
20002718:	20005cc4 	andcs	r5, r0, r4, asr #25

2000271c <initSprites>:
Image witch1Image;
Image witch2Image;
Image witch3Image;
Image witch4Image;
Image witchImages[4];
static void initSprites( void ) {	
2000271c:	b580      	push	{r7, lr}
2000271e:	b08a      	sub	sp, #40	; 0x28
20002720:	af00      	add	r7, sp, #0
	
	sprite *pointer11 = &tempWitchLight;
20002722:	4b33      	ldr	r3, [pc, #204]	; (200027f0 <initSprites+0xd4>)
20002724:	627b      	str	r3, [r7, #36]	; 0x24
	load_sprite(pointer11, witch1_light_bits, witch1_black_width, witch1_black_height);
20002726:	4933      	ldr	r1, [pc, #204]	; (200027f4 <initSprites+0xd8>)
20002728:	6a78      	ldr	r0, [r7, #36]	; 0x24
2000272a:	2312      	movs	r3, #18
2000272c:	2212      	movs	r2, #18
2000272e:	f001 ff4d 	bl	200045cc <load_sprite>
	witch1Light = pointer11;
20002732:	4b31      	ldr	r3, [pc, #196]	; (200027f8 <initSprites+0xdc>)
20002734:	6a7a      	ldr	r2, [r7, #36]	; 0x24
20002736:	601a      	str	r2, [r3, #0]
	sprite *pointer12 = &tempWitchGray;
20002738:	4b30      	ldr	r3, [pc, #192]	; (200027fc <initSprites+0xe0>)
2000273a:	623b      	str	r3, [r7, #32]
	load_sprite(pointer12, witch1_gray_bits, witch1_black_width, witch1_black_height);
2000273c:	4930      	ldr	r1, [pc, #192]	; (20002800 <initSprites+0xe4>)
2000273e:	6a38      	ldr	r0, [r7, #32]
20002740:	2312      	movs	r3, #18
20002742:	2212      	movs	r2, #18
20002744:	f001 ff42 	bl	200045cc <load_sprite>
	witch1Gray = pointer12;
20002748:	4b2e      	ldr	r3, [pc, #184]	; (20002804 <initSprites+0xe8>)
2000274a:	6a3a      	ldr	r2, [r7, #32]
2000274c:	601a      	str	r2, [r3, #0]
	sprite *pointer13 = &tempWitchBlack;
2000274e:	4b2e      	ldr	r3, [pc, #184]	; (20002808 <initSprites+0xec>)
20002750:	61fb      	str	r3, [r7, #28]
	load_sprite(pointer13, witch1_black_bits, witch1_black_width, witch1_black_height);
20002752:	492e      	ldr	r1, [pc, #184]	; (2000280c <initSprites+0xf0>)
20002754:	69f8      	ldr	r0, [r7, #28]
20002756:	2312      	movs	r3, #18
20002758:	2212      	movs	r2, #18
2000275a:	f001 ff37 	bl	200045cc <load_sprite>
	witch1Black = pointer13;	
2000275e:	4b2c      	ldr	r3, [pc, #176]	; (20002810 <initSprites+0xf4>)
20002760:	69fa      	ldr	r2, [r7, #28]
20002762:	601a      	str	r2, [r3, #0]
	
	sprite *pointer14 = &tempWitch2Light;
20002764:	4b2b      	ldr	r3, [pc, #172]	; (20002814 <initSprites+0xf8>)
20002766:	61bb      	str	r3, [r7, #24]
	load_sprite(pointer14, witch2_light_bits, witch2_black_width, witch2_black_height);
20002768:	492b      	ldr	r1, [pc, #172]	; (20002818 <initSprites+0xfc>)
2000276a:	69b8      	ldr	r0, [r7, #24]
2000276c:	2312      	movs	r3, #18
2000276e:	2212      	movs	r2, #18
20002770:	f001 ff2c 	bl	200045cc <load_sprite>
	witch2Light = pointer14;
20002774:	4b29      	ldr	r3, [pc, #164]	; (2000281c <initSprites+0x100>)
20002776:	69ba      	ldr	r2, [r7, #24]
20002778:	601a      	str	r2, [r3, #0]
	sprite *pointer15 = &tempWitch2Gray;
2000277a:	4b29      	ldr	r3, [pc, #164]	; (20002820 <initSprites+0x104>)
2000277c:	617b      	str	r3, [r7, #20]
	load_sprite(pointer15, witch2_gray_bits, witch2_black_width, witch2_black_height);
2000277e:	4929      	ldr	r1, [pc, #164]	; (20002824 <initSprites+0x108>)
20002780:	6978      	ldr	r0, [r7, #20]
20002782:	2312      	movs	r3, #18
20002784:	2212      	movs	r2, #18
20002786:	f001 ff21 	bl	200045cc <load_sprite>
	witch2Gray = pointer15;
2000278a:	4b27      	ldr	r3, [pc, #156]	; (20002828 <initSprites+0x10c>)
2000278c:	697a      	ldr	r2, [r7, #20]
2000278e:	601a      	str	r2, [r3, #0]
	sprite *pointer16 = &tempWitch2Black;
20002790:	4b26      	ldr	r3, [pc, #152]	; (2000282c <initSprites+0x110>)
20002792:	613b      	str	r3, [r7, #16]
	load_sprite(pointer16, witch2_black_bits, witch2_black_width, witch2_black_height);
20002794:	4926      	ldr	r1, [pc, #152]	; (20002830 <initSprites+0x114>)
20002796:	6938      	ldr	r0, [r7, #16]
20002798:	2312      	movs	r3, #18
2000279a:	2212      	movs	r2, #18
2000279c:	f001 ff16 	bl	200045cc <load_sprite>
	witch2Black = pointer16;
200027a0:	4b24      	ldr	r3, [pc, #144]	; (20002834 <initSprites+0x118>)
200027a2:	693a      	ldr	r2, [r7, #16]
200027a4:	601a      	str	r2, [r3, #0]
	
	
	sprite *finalPointer = &tempWitch3Light;
200027a6:	4b24      	ldr	r3, [pc, #144]	; (20002838 <initSprites+0x11c>)
200027a8:	60fb      	str	r3, [r7, #12]
	load_sprite(finalPointer, witch3_light_bits, witch3_black_width, witch3_black_height);
200027aa:	4924      	ldr	r1, [pc, #144]	; (2000283c <initSprites+0x120>)
200027ac:	68f8      	ldr	r0, [r7, #12]
200027ae:	2312      	movs	r3, #18
200027b0:	2212      	movs	r2, #18
200027b2:	f001 ff0b 	bl	200045cc <load_sprite>
	witch3Light = finalPointer;
200027b6:	4b22      	ldr	r3, [pc, #136]	; (20002840 <initSprites+0x124>)
200027b8:	68fa      	ldr	r2, [r7, #12]
200027ba:	601a      	str	r2, [r3, #0]
	sprite *pointer17 = &tempWitch3Gray;
200027bc:	4b21      	ldr	r3, [pc, #132]	; (20002844 <initSprites+0x128>)
200027be:	60bb      	str	r3, [r7, #8]
	load_sprite(pointer17, witch3_gray_bits, witch3_black_width, witch3_black_height);
200027c0:	4921      	ldr	r1, [pc, #132]	; (20002848 <initSprites+0x12c>)
200027c2:	68b8      	ldr	r0, [r7, #8]
200027c4:	2312      	movs	r3, #18
200027c6:	2212      	movs	r2, #18
200027c8:	f001 ff00 	bl	200045cc <load_sprite>
	witch3Gray = pointer17;
200027cc:	4b1f      	ldr	r3, [pc, #124]	; (2000284c <initSprites+0x130>)
200027ce:	68ba      	ldr	r2, [r7, #8]
200027d0:	601a      	str	r2, [r3, #0]
	sprite *pointer18 = &tempWitch3Black;
200027d2:	4b1f      	ldr	r3, [pc, #124]	; (20002850 <initSprites+0x134>)
200027d4:	607b      	str	r3, [r7, #4]
	load_sprite(pointer18, witch3_black_bits, witch3_black_width, witch3_black_height);
200027d6:	491f      	ldr	r1, [pc, #124]	; (20002854 <initSprites+0x138>)
200027d8:	6878      	ldr	r0, [r7, #4]
200027da:	2312      	movs	r3, #18
200027dc:	2212      	movs	r2, #18
200027de:	f001 fef5 	bl	200045cc <load_sprite>
	witch3Black = pointer18;	
200027e2:	4b1d      	ldr	r3, [pc, #116]	; (20002858 <initSprites+0x13c>)
200027e4:	687a      	ldr	r2, [r7, #4]
200027e6:	601a      	str	r2, [r3, #0]
	
}
200027e8:	46c0      	nop			; (mov r8, r8)
200027ea:	46bd      	mov	sp, r7
200027ec:	b00a      	add	sp, #40	; 0x28
200027ee:	bd80      	pop	{r7, pc}
200027f0:	20005dd8 	ldrdcs	r5, [r0], -r8
200027f4:	2000a200 	andcs	sl, r0, r0, lsl #4
200027f8:	20005df0 	strdcs	r5, [r0], -r0
200027fc:	20005d68 	andcs	r5, r0, r8, ror #26
20002800:	2000a1c8 	andcs	sl, r0, r8, asr #3
20002804:	20005cf0 	strdcs	r5, [r0], -r0
20002808:	20005d40 	andcs	r5, r0, r0, asr #26
2000280c:	2000a190 	mulcs	r0, r0, r1
20002810:	20005dc4 	andcs	r5, r0, r4, asr #27
20002814:	20005de4 	andcs	r5, r0, r4, ror #27
20002818:	2000a2a8 	andcs	sl, r0, r8, lsr #5
2000281c:	20005cf4 	strdcs	r5, [r0], -r4
20002820:	20005d80 	andcs	r5, r0, r0, lsl #27
20002824:	2000a270 	andcs	sl, r0, r0, ror r2
20002828:	20005d64 	andcs	r5, r0, r4, ror #26
2000282c:	20005d34 	andcs	r5, r0, r4, lsr sp
20002830:	2000a238 	andcs	sl, r0, r8, lsr r2
20002834:	20005e00 	andcs	r5, r0, r0, lsl #28
20002838:	20005d4c 	andcs	r5, r0, ip, asr #26
2000283c:	2000a350 	andcs	sl, r0, r0, asr r3
20002840:	20005db4 			; <UNDEFINED> instruction: 0x20005db4
20002844:	20005db8 			; <UNDEFINED> instruction: 0x20005db8
20002848:	2000a318 	andcs	sl, r0, r8, lsl r3
2000284c:	20005dc8 	andcs	r5, r0, r8, asr #27
20002850:	20005d74 	andcs	r5, r0, r4, ror sp
20002854:	2000a2e0 	andcs	sl, r0, r0, ror #5
20002858:	20005d8c 	andcs	r5, r0, ip, lsl #27

2000285c <init_witch>:
	
void init_witch( GameObject *witchObj ) {
2000285c:	b590      	push	{r4, r7, lr}
2000285e:	b083      	sub	sp, #12
20002860:	af00      	add	r7, sp, #0
20002862:	6078      	str	r0, [r7, #4]
	static int firstTime = 1;
	if (firstTime) {
20002864:	4b29      	ldr	r3, [pc, #164]	; (2000290c <init_witch+0xb0>)
20002866:	681b      	ldr	r3, [r3, #0]
20002868:	2b00      	cmp	r3, #0
2000286a:	d03b      	beq.n	200028e4 <init_witch+0x88>
		initSprites();
2000286c:	f7ff ff56 	bl	2000271c <initSprites>
		firstTime = 0;			
20002870:	4b26      	ldr	r3, [pc, #152]	; (2000290c <init_witch+0xb0>)
20002872:	2200      	movs	r2, #0
20002874:	601a      	str	r2, [r3, #0]

		witchImages[0] = witch1Image;
20002876:	4b26      	ldr	r3, [pc, #152]	; (20002910 <init_witch+0xb4>)
20002878:	4a26      	ldr	r2, [pc, #152]	; (20002914 <init_witch+0xb8>)
2000287a:	ca13      	ldmia	r2!, {r0, r1, r4}
2000287c:	c313      	stmia	r3!, {r0, r1, r4}
		witchImages[1] = witch2Image;
2000287e:	4b24      	ldr	r3, [pc, #144]	; (20002910 <init_witch+0xb4>)
20002880:	4a25      	ldr	r2, [pc, #148]	; (20002918 <init_witch+0xbc>)
20002882:	330c      	adds	r3, #12
20002884:	ca13      	ldmia	r2!, {r0, r1, r4}
20002886:	c313      	stmia	r3!, {r0, r1, r4}
		witchImages[2] = witch3Image;
20002888:	4b21      	ldr	r3, [pc, #132]	; (20002910 <init_witch+0xb4>)
2000288a:	4a24      	ldr	r2, [pc, #144]	; (2000291c <init_witch+0xc0>)
2000288c:	3318      	adds	r3, #24
2000288e:	ca13      	ldmia	r2!, {r0, r1, r4}
20002890:	c313      	stmia	r3!, {r0, r1, r4}
		witchImages[3] = witch4Image;
20002892:	4b1f      	ldr	r3, [pc, #124]	; (20002910 <init_witch+0xb4>)
20002894:	4a22      	ldr	r2, [pc, #136]	; (20002920 <init_witch+0xc4>)
20002896:	3324      	adds	r3, #36	; 0x24
20002898:	ca13      	ldmia	r2!, {r0, r1, r4}
2000289a:	c313      	stmia	r3!, {r0, r1, r4}
		
		
		load_image(&witchImages[0], witch1Black, witch1Gray, witch1Light);
2000289c:	4b21      	ldr	r3, [pc, #132]	; (20002924 <init_witch+0xc8>)
2000289e:	6819      	ldr	r1, [r3, #0]
200028a0:	4b21      	ldr	r3, [pc, #132]	; (20002928 <init_witch+0xcc>)
200028a2:	681a      	ldr	r2, [r3, #0]
200028a4:	4b21      	ldr	r3, [pc, #132]	; (2000292c <init_witch+0xd0>)
200028a6:	681b      	ldr	r3, [r3, #0]
200028a8:	4819      	ldr	r0, [pc, #100]	; (20002910 <init_witch+0xb4>)
200028aa:	f001 fe7b 	bl	200045a4 <load_image>
		load_image(&witchImages[1], witch2Black, witch2Gray, witch2Light);
200028ae:	4b20      	ldr	r3, [pc, #128]	; (20002930 <init_witch+0xd4>)
200028b0:	6819      	ldr	r1, [r3, #0]
200028b2:	4b20      	ldr	r3, [pc, #128]	; (20002934 <init_witch+0xd8>)
200028b4:	681a      	ldr	r2, [r3, #0]
200028b6:	4b20      	ldr	r3, [pc, #128]	; (20002938 <init_witch+0xdc>)
200028b8:	681b      	ldr	r3, [r3, #0]
200028ba:	4820      	ldr	r0, [pc, #128]	; (2000293c <init_witch+0xe0>)
200028bc:	f001 fe72 	bl	200045a4 <load_image>
		load_image(&witchImages[2], witch3Black, witch3Gray, witch3Light);
200028c0:	4b1f      	ldr	r3, [pc, #124]	; (20002940 <init_witch+0xe4>)
200028c2:	6819      	ldr	r1, [r3, #0]
200028c4:	4b1f      	ldr	r3, [pc, #124]	; (20002944 <init_witch+0xe8>)
200028c6:	681a      	ldr	r2, [r3, #0]
200028c8:	4b1f      	ldr	r3, [pc, #124]	; (20002948 <init_witch+0xec>)
200028ca:	681b      	ldr	r3, [r3, #0]
200028cc:	481f      	ldr	r0, [pc, #124]	; (2000294c <init_witch+0xf0>)
200028ce:	f001 fe69 	bl	200045a4 <load_image>
		load_image(&witchImages[3], witch2Black, witch2Gray, witch2Light);
200028d2:	4b17      	ldr	r3, [pc, #92]	; (20002930 <init_witch+0xd4>)
200028d4:	6819      	ldr	r1, [r3, #0]
200028d6:	4b17      	ldr	r3, [pc, #92]	; (20002934 <init_witch+0xd8>)
200028d8:	681a      	ldr	r2, [r3, #0]
200028da:	4b17      	ldr	r3, [pc, #92]	; (20002938 <init_witch+0xdc>)
200028dc:	681b      	ldr	r3, [r3, #0]
200028de:	481c      	ldr	r0, [pc, #112]	; (20002950 <init_witch+0xf4>)
200028e0:	f001 fe60 	bl	200045a4 <load_image>
		
	}
	
	witchObj->images = witchImages;
200028e4:	687b      	ldr	r3, [r7, #4]
200028e6:	4a0a      	ldr	r2, [pc, #40]	; (20002910 <init_witch+0xb4>)
200028e8:	601a      	str	r2, [r3, #0]

	witchObj->current_frame = 0;
200028ea:	687b      	ldr	r3, [r7, #4]
200028ec:	2200      	movs	r2, #0
200028ee:	615a      	str	r2, [r3, #20]
	witchObj->n_frames = 4;
200028f0:	687b      	ldr	r3, [r7, #4]
200028f2:	2204      	movs	r2, #4
200028f4:	619a      	str	r2, [r3, #24]
	witchObj->animation_speed = 1;
200028f6:	687b      	ldr	r3, [r7, #4]
200028f8:	2201      	movs	r2, #1
200028fa:	61da      	str	r2, [r3, #28]
	witchObj->animation_counter = 0;
200028fc:	687b      	ldr	r3, [r7, #4]
200028fe:	2200      	movs	r2, #0
20002900:	621a      	str	r2, [r3, #32]
}
20002902:	46c0      	nop			; (mov r8, r8)
20002904:	46bd      	mov	sp, r7
20002906:	b003      	add	sp, #12
20002908:	bd90      	pop	{r4, r7, pc}
2000290a:	46c0      	nop			; (mov r8, r8)
2000290c:	2000a388 	andcs	sl, r0, r8, lsl #7
20002910:	20005cf8 	strdcs	r5, [r0], -r8
20002914:	20005dcc 	andcs	r5, r0, ip, asr #27
20002918:	20005d28 	andcs	r5, r0, r8, lsr #26
2000291c:	20005df4 	strdcs	r5, [r0], -r4
20002920:	20005d58 	andcs	r5, r0, r8, asr sp
20002924:	20005dc4 	andcs	r5, r0, r4, asr #27
20002928:	20005cf0 	strdcs	r5, [r0], -r0
2000292c:	20005df0 	strdcs	r5, [r0], -r0
20002930:	20005e00 	andcs	r5, r0, r0, lsl #28
20002934:	20005d64 	andcs	r5, r0, r4, ror #26
20002938:	20005cf4 	strdcs	r5, [r0], -r4
2000293c:	20005d04 	andcs	r5, r0, r4, lsl #26
20002940:	20005d8c 	andcs	r5, r0, ip, lsl #27
20002944:	20005dc8 	andcs	r5, r0, r8, asr #27
20002948:	20005db4 			; <UNDEFINED> instruction: 0x20005db4
2000294c:	20005d10 	andcs	r5, r0, r0, lsl sp
20002950:	20005d1c 	andcs	r5, r0, ip, lsl sp

20002954 <initSprites>:
Image DIP1Image;
Image DIP2Image;
Image DIP3Image;
Image DIP4Image;
Image DIPImages[4];
static void initSprites( void ) {	
20002954:	b580      	push	{r7, lr}
20002956:	b08a      	sub	sp, #40	; 0x28
20002958:	af00      	add	r7, sp, #0
	
	sprite *pointer11 = &tempDIPLight;
2000295a:	4b33      	ldr	r3, [pc, #204]	; (20002a28 <initSprites+0xd4>)
2000295c:	627b      	str	r3, [r7, #36]	; 0x24
	load_sprite(pointer11, witch1_light_bits, witch1_black_width, witch1_black_height);
2000295e:	4933      	ldr	r1, [pc, #204]	; (20002a2c <initSprites+0xd8>)
20002960:	6a78      	ldr	r0, [r7, #36]	; 0x24
20002962:	2312      	movs	r3, #18
20002964:	2212      	movs	r2, #18
20002966:	f001 fe31 	bl	200045cc <load_sprite>
	DIP1Light = pointer11;
2000296a:	4b31      	ldr	r3, [pc, #196]	; (20002a30 <initSprites+0xdc>)
2000296c:	6a7a      	ldr	r2, [r7, #36]	; 0x24
2000296e:	601a      	str	r2, [r3, #0]
	sprite *pointer12 = &tempDIPGray;
20002970:	4b30      	ldr	r3, [pc, #192]	; (20002a34 <initSprites+0xe0>)
20002972:	623b      	str	r3, [r7, #32]
	load_sprite(pointer12, witch1_gray_bits, witch1_black_width, witch1_black_height);
20002974:	4930      	ldr	r1, [pc, #192]	; (20002a38 <initSprites+0xe4>)
20002976:	6a38      	ldr	r0, [r7, #32]
20002978:	2312      	movs	r3, #18
2000297a:	2212      	movs	r2, #18
2000297c:	f001 fe26 	bl	200045cc <load_sprite>
	DIP1Gray = pointer12;
20002980:	4b2e      	ldr	r3, [pc, #184]	; (20002a3c <initSprites+0xe8>)
20002982:	6a3a      	ldr	r2, [r7, #32]
20002984:	601a      	str	r2, [r3, #0]
	sprite *pointer13 = &tempDIPBlack;
20002986:	4b2e      	ldr	r3, [pc, #184]	; (20002a40 <initSprites+0xec>)
20002988:	61fb      	str	r3, [r7, #28]
	load_sprite(pointer13, witch1_black_bits, witch1_black_width, witch1_black_height);
2000298a:	492e      	ldr	r1, [pc, #184]	; (20002a44 <initSprites+0xf0>)
2000298c:	69f8      	ldr	r0, [r7, #28]
2000298e:	2312      	movs	r3, #18
20002990:	2212      	movs	r2, #18
20002992:	f001 fe1b 	bl	200045cc <load_sprite>
	DIP1Black = pointer13;	
20002996:	4b2c      	ldr	r3, [pc, #176]	; (20002a48 <initSprites+0xf4>)
20002998:	69fa      	ldr	r2, [r7, #28]
2000299a:	601a      	str	r2, [r3, #0]
	
	sprite *pointer14 = &tempDIP2Light;
2000299c:	4b2b      	ldr	r3, [pc, #172]	; (20002a4c <initSprites+0xf8>)
2000299e:	61bb      	str	r3, [r7, #24]
	load_sprite(pointer14, witch2_light_bits, witch2_black_width, witch2_black_height);
200029a0:	492b      	ldr	r1, [pc, #172]	; (20002a50 <initSprites+0xfc>)
200029a2:	69b8      	ldr	r0, [r7, #24]
200029a4:	2312      	movs	r3, #18
200029a6:	2212      	movs	r2, #18
200029a8:	f001 fe10 	bl	200045cc <load_sprite>
	DIP2Light = pointer14;
200029ac:	4b29      	ldr	r3, [pc, #164]	; (20002a54 <initSprites+0x100>)
200029ae:	69ba      	ldr	r2, [r7, #24]
200029b0:	601a      	str	r2, [r3, #0]
	sprite *pointer15 = &tempDIP2Gray;
200029b2:	4b29      	ldr	r3, [pc, #164]	; (20002a58 <initSprites+0x104>)
200029b4:	617b      	str	r3, [r7, #20]
	load_sprite(pointer15, witch2_gray_bits, witch2_black_width, witch2_black_height);
200029b6:	4929      	ldr	r1, [pc, #164]	; (20002a5c <initSprites+0x108>)
200029b8:	6978      	ldr	r0, [r7, #20]
200029ba:	2312      	movs	r3, #18
200029bc:	2212      	movs	r2, #18
200029be:	f001 fe05 	bl	200045cc <load_sprite>
	DIP2Gray = pointer15;
200029c2:	4b27      	ldr	r3, [pc, #156]	; (20002a60 <initSprites+0x10c>)
200029c4:	697a      	ldr	r2, [r7, #20]
200029c6:	601a      	str	r2, [r3, #0]
	sprite *pointer16 = &tempDIP2Black;
200029c8:	4b26      	ldr	r3, [pc, #152]	; (20002a64 <initSprites+0x110>)
200029ca:	613b      	str	r3, [r7, #16]
	load_sprite(pointer16, witch2_black_bits, witch2_black_width, witch2_black_height);
200029cc:	4926      	ldr	r1, [pc, #152]	; (20002a68 <initSprites+0x114>)
200029ce:	6938      	ldr	r0, [r7, #16]
200029d0:	2312      	movs	r3, #18
200029d2:	2212      	movs	r2, #18
200029d4:	f001 fdfa 	bl	200045cc <load_sprite>
	DIP2Black = pointer16;
200029d8:	4b24      	ldr	r3, [pc, #144]	; (20002a6c <initSprites+0x118>)
200029da:	693a      	ldr	r2, [r7, #16]
200029dc:	601a      	str	r2, [r3, #0]
	
	
	sprite *finalPointer = &tempDIP3Light;
200029de:	4b24      	ldr	r3, [pc, #144]	; (20002a70 <initSprites+0x11c>)
200029e0:	60fb      	str	r3, [r7, #12]
	load_sprite(finalPointer, witch3_light_bits, witch3_black_width, witch3_black_height);
200029e2:	4924      	ldr	r1, [pc, #144]	; (20002a74 <initSprites+0x120>)
200029e4:	68f8      	ldr	r0, [r7, #12]
200029e6:	2312      	movs	r3, #18
200029e8:	2212      	movs	r2, #18
200029ea:	f001 fdef 	bl	200045cc <load_sprite>
	DIP3Light = finalPointer;
200029ee:	4b22      	ldr	r3, [pc, #136]	; (20002a78 <initSprites+0x124>)
200029f0:	68fa      	ldr	r2, [r7, #12]
200029f2:	601a      	str	r2, [r3, #0]
	sprite *pointer17 = &tempDIP3Gray;
200029f4:	4b21      	ldr	r3, [pc, #132]	; (20002a7c <initSprites+0x128>)
200029f6:	60bb      	str	r3, [r7, #8]
	load_sprite(pointer17, witch3_gray_bits, witch3_black_width, witch3_black_height);
200029f8:	4921      	ldr	r1, [pc, #132]	; (20002a80 <initSprites+0x12c>)
200029fa:	68b8      	ldr	r0, [r7, #8]
200029fc:	2312      	movs	r3, #18
200029fe:	2212      	movs	r2, #18
20002a00:	f001 fde4 	bl	200045cc <load_sprite>
	DIP3Gray = pointer17;
20002a04:	4b1f      	ldr	r3, [pc, #124]	; (20002a84 <initSprites+0x130>)
20002a06:	68ba      	ldr	r2, [r7, #8]
20002a08:	601a      	str	r2, [r3, #0]
	sprite *pointer18 = &tempDIP3Black;
20002a0a:	4b1f      	ldr	r3, [pc, #124]	; (20002a88 <initSprites+0x134>)
20002a0c:	607b      	str	r3, [r7, #4]
	load_sprite(pointer18, witch3_black_bits, witch3_black_width, witch3_black_height);
20002a0e:	491f      	ldr	r1, [pc, #124]	; (20002a8c <initSprites+0x138>)
20002a10:	6878      	ldr	r0, [r7, #4]
20002a12:	2312      	movs	r3, #18
20002a14:	2212      	movs	r2, #18
20002a16:	f001 fdd9 	bl	200045cc <load_sprite>
	DIP3Black = pointer18;	
20002a1a:	4b1d      	ldr	r3, [pc, #116]	; (20002a90 <initSprites+0x13c>)
20002a1c:	687a      	ldr	r2, [r7, #4]
20002a1e:	601a      	str	r2, [r3, #0]
	
}
20002a20:	46c0      	nop			; (mov r8, r8)
20002a22:	46bd      	mov	sp, r7
20002a24:	b00a      	add	sp, #40	; 0x28
20002a26:	bd80      	pop	{r7, pc}
20002a28:	20005e4c 	andcs	r5, r0, ip, asr #28
20002a2c:	2000a3fc 	strdcs	sl, [r0], -ip
20002a30:	20005eb8 			; <UNDEFINED> instruction: 0x20005eb8
20002a34:	20005f0c 	andcs	r5, r0, ip, lsl #30
20002a38:	2000a3c4 	andcs	sl, r0, r4, asr #7
20002a3c:	20005ee0 	andcs	r5, r0, r0, ror #29
20002a40:	20005ed4 	ldrdcs	r5, [r0], -r4
20002a44:	2000a38c 	andcs	sl, r0, ip, lsl #7
20002a48:	20005e48 	andcs	r5, r0, r8, asr #28
20002a4c:	20005f00 	andcs	r5, r0, r0, lsl #30
20002a50:	2000a4a4 	andcs	sl, r0, r4, lsr #9
20002a54:	20005ebc 			; <UNDEFINED> instruction: 0x20005ebc
20002a58:	20005e38 	andcs	r5, r0, r8, lsr lr
20002a5c:	2000a46c 	andcs	sl, r0, ip, ror #8
20002a60:	20005e34 	andcs	r5, r0, r4, lsr lr
20002a64:	20005e94 	mulcs	r0, r4, lr
20002a68:	2000a434 	andcs	sl, r0, r4, lsr r4
20002a6c:	20005ec4 	andcs	r5, r0, r4, asr #29
20002a70:	20005e58 	andcs	r5, r0, r8, asr lr
20002a74:	2000a54c 	andcs	sl, r0, ip, asr #10
20002a78:	20005ec0 	andcs	r5, r0, r0, asr #29
20002a7c:	20005ec8 	andcs	r5, r0, r8, asr #29
20002a80:	2000a514 	andcs	sl, r0, r4, lsl r5
20002a84:	20005ef0 	strdcs	r5, [r0], -r0
20002a88:	20005ee4 	andcs	r5, r0, r4, ror #29
20002a8c:	2000a4dc 	ldrdcs	sl, [r0], -ip
20002a90:	20005e44 	andcs	r5, r0, r4, asr #28

20002a94 <init_DIP>:
	
void init_DIP( GameObject *DIPObj ) {
20002a94:	b590      	push	{r4, r7, lr}
20002a96:	b083      	sub	sp, #12
20002a98:	af00      	add	r7, sp, #0
20002a9a:	6078      	str	r0, [r7, #4]
	static int firstTime = 1;
	if (firstTime) {
20002a9c:	4b29      	ldr	r3, [pc, #164]	; (20002b44 <init_DIP+0xb0>)
20002a9e:	681b      	ldr	r3, [r3, #0]
20002aa0:	2b00      	cmp	r3, #0
20002aa2:	d03b      	beq.n	20002b1c <init_DIP+0x88>
		initSprites();
20002aa4:	f7ff ff56 	bl	20002954 <initSprites>
		firstTime = 0;			
20002aa8:	4b26      	ldr	r3, [pc, #152]	; (20002b44 <init_DIP+0xb0>)
20002aaa:	2200      	movs	r2, #0
20002aac:	601a      	str	r2, [r3, #0]

		DIPImages[0] = DIP1Image;
20002aae:	4b26      	ldr	r3, [pc, #152]	; (20002b48 <init_DIP+0xb4>)
20002ab0:	4a26      	ldr	r2, [pc, #152]	; (20002b4c <init_DIP+0xb8>)
20002ab2:	ca13      	ldmia	r2!, {r0, r1, r4}
20002ab4:	c313      	stmia	r3!, {r0, r1, r4}
		DIPImages[1] = DIP2Image;
20002ab6:	4b24      	ldr	r3, [pc, #144]	; (20002b48 <init_DIP+0xb4>)
20002ab8:	4a25      	ldr	r2, [pc, #148]	; (20002b50 <init_DIP+0xbc>)
20002aba:	330c      	adds	r3, #12
20002abc:	ca13      	ldmia	r2!, {r0, r1, r4}
20002abe:	c313      	stmia	r3!, {r0, r1, r4}
		DIPImages[2] = DIP3Image;
20002ac0:	4b21      	ldr	r3, [pc, #132]	; (20002b48 <init_DIP+0xb4>)
20002ac2:	4a24      	ldr	r2, [pc, #144]	; (20002b54 <init_DIP+0xc0>)
20002ac4:	3318      	adds	r3, #24
20002ac6:	ca13      	ldmia	r2!, {r0, r1, r4}
20002ac8:	c313      	stmia	r3!, {r0, r1, r4}
		DIPImages[3] = DIP4Image;
20002aca:	4b1f      	ldr	r3, [pc, #124]	; (20002b48 <init_DIP+0xb4>)
20002acc:	4a22      	ldr	r2, [pc, #136]	; (20002b58 <init_DIP+0xc4>)
20002ace:	3324      	adds	r3, #36	; 0x24
20002ad0:	ca13      	ldmia	r2!, {r0, r1, r4}
20002ad2:	c313      	stmia	r3!, {r0, r1, r4}
		
		
		load_image(&DIPImages[0], DIP1Black, DIP1Light, DIP1Gray);
20002ad4:	4b21      	ldr	r3, [pc, #132]	; (20002b5c <init_DIP+0xc8>)
20002ad6:	6819      	ldr	r1, [r3, #0]
20002ad8:	4b21      	ldr	r3, [pc, #132]	; (20002b60 <init_DIP+0xcc>)
20002ada:	681a      	ldr	r2, [r3, #0]
20002adc:	4b21      	ldr	r3, [pc, #132]	; (20002b64 <init_DIP+0xd0>)
20002ade:	681b      	ldr	r3, [r3, #0]
20002ae0:	4819      	ldr	r0, [pc, #100]	; (20002b48 <init_DIP+0xb4>)
20002ae2:	f001 fd5f 	bl	200045a4 <load_image>
		load_image(&DIPImages[1], DIP2Black, DIP2Light, DIP2Gray);
20002ae6:	4b20      	ldr	r3, [pc, #128]	; (20002b68 <init_DIP+0xd4>)
20002ae8:	6819      	ldr	r1, [r3, #0]
20002aea:	4b20      	ldr	r3, [pc, #128]	; (20002b6c <init_DIP+0xd8>)
20002aec:	681a      	ldr	r2, [r3, #0]
20002aee:	4b20      	ldr	r3, [pc, #128]	; (20002b70 <init_DIP+0xdc>)
20002af0:	681b      	ldr	r3, [r3, #0]
20002af2:	4820      	ldr	r0, [pc, #128]	; (20002b74 <init_DIP+0xe0>)
20002af4:	f001 fd56 	bl	200045a4 <load_image>
		load_image(&DIPImages[2], DIP3Black, DIP3Light, DIP3Gray);
20002af8:	4b1f      	ldr	r3, [pc, #124]	; (20002b78 <init_DIP+0xe4>)
20002afa:	6819      	ldr	r1, [r3, #0]
20002afc:	4b1f      	ldr	r3, [pc, #124]	; (20002b7c <init_DIP+0xe8>)
20002afe:	681a      	ldr	r2, [r3, #0]
20002b00:	4b1f      	ldr	r3, [pc, #124]	; (20002b80 <init_DIP+0xec>)
20002b02:	681b      	ldr	r3, [r3, #0]
20002b04:	481f      	ldr	r0, [pc, #124]	; (20002b84 <init_DIP+0xf0>)
20002b06:	f001 fd4d 	bl	200045a4 <load_image>
		load_image(&DIPImages[3], DIP2Black, DIP2Light, DIP2Gray);
20002b0a:	4b17      	ldr	r3, [pc, #92]	; (20002b68 <init_DIP+0xd4>)
20002b0c:	6819      	ldr	r1, [r3, #0]
20002b0e:	4b17      	ldr	r3, [pc, #92]	; (20002b6c <init_DIP+0xd8>)
20002b10:	681a      	ldr	r2, [r3, #0]
20002b12:	4b17      	ldr	r3, [pc, #92]	; (20002b70 <init_DIP+0xdc>)
20002b14:	681b      	ldr	r3, [r3, #0]
20002b16:	481c      	ldr	r0, [pc, #112]	; (20002b88 <init_DIP+0xf4>)
20002b18:	f001 fd44 	bl	200045a4 <load_image>
		
	}
	
	DIPObj->images = DIPImages;
20002b1c:	687b      	ldr	r3, [r7, #4]
20002b1e:	4a0a      	ldr	r2, [pc, #40]	; (20002b48 <init_DIP+0xb4>)
20002b20:	601a      	str	r2, [r3, #0]

	DIPObj->current_frame = 0;
20002b22:	687b      	ldr	r3, [r7, #4]
20002b24:	2200      	movs	r2, #0
20002b26:	615a      	str	r2, [r3, #20]
	DIPObj->n_frames = 4;
20002b28:	687b      	ldr	r3, [r7, #4]
20002b2a:	2204      	movs	r2, #4
20002b2c:	619a      	str	r2, [r3, #24]
	DIPObj->animation_speed = 1;
20002b2e:	687b      	ldr	r3, [r7, #4]
20002b30:	2201      	movs	r2, #1
20002b32:	61da      	str	r2, [r3, #28]
	DIPObj->animation_counter = 0;
20002b34:	687b      	ldr	r3, [r7, #4]
20002b36:	2200      	movs	r2, #0
20002b38:	621a      	str	r2, [r3, #32]
}
20002b3a:	46c0      	nop			; (mov r8, r8)
20002b3c:	46bd      	mov	sp, r7
20002b3e:	b003      	add	sp, #12
20002b40:	bd90      	pop	{r4, r7, pc}
20002b42:	46c0      	nop			; (mov r8, r8)
20002b44:	2000a588 	andcs	sl, r0, r8, lsl #11
20002b48:	20005e64 	andcs	r5, r0, r4, ror #28
20002b4c:	20005eac 	andcs	r5, r0, ip, lsr #29
20002b50:	20005e28 	andcs	r5, r0, r8, lsr #28
20002b54:	20005ea0 	andcs	r5, r0, r0, lsr #29
20002b58:	20005ef4 	strdcs	r5, [r0], -r4
20002b5c:	20005e48 	andcs	r5, r0, r8, asr #28
20002b60:	20005eb8 			; <UNDEFINED> instruction: 0x20005eb8
20002b64:	20005ee0 	andcs	r5, r0, r0, ror #29
20002b68:	20005ec4 	andcs	r5, r0, r4, asr #29
20002b6c:	20005ebc 			; <UNDEFINED> instruction: 0x20005ebc
20002b70:	20005e34 	andcs	r5, r0, r4, lsr lr
20002b74:	20005e70 	andcs	r5, r0, r0, ror lr
20002b78:	20005e44 	andcs	r5, r0, r4, asr #28
20002b7c:	20005ec0 	andcs	r5, r0, r0, asr #29
20002b80:	20005ef0 	strdcs	r5, [r0], -r0
20002b84:	20005e7c 	andcs	r5, r0, ip, ror lr
20002b88:	20005e88 	andcs	r5, r0, r8, lsl #29

20002b8c <setPlayerPosition>:
static int playerPositionY = 0;
static int counter = 0;
static int direction = -1;
static int isRunning = 0;

void setPlayerPosition(int x, int y){
20002b8c:	b580      	push	{r7, lr}
20002b8e:	b082      	sub	sp, #8
20002b90:	af00      	add	r7, sp, #0
20002b92:	6078      	str	r0, [r7, #4]
20002b94:	6039      	str	r1, [r7, #0]
	playerPositionX = x;
20002b96:	4b05      	ldr	r3, [pc, #20]	; (20002bac <setPlayerPosition+0x20>)
20002b98:	687a      	ldr	r2, [r7, #4]
20002b9a:	601a      	str	r2, [r3, #0]
	playerPositionY = y;
20002b9c:	4b04      	ldr	r3, [pc, #16]	; (20002bb0 <setPlayerPosition+0x24>)
20002b9e:	683a      	ldr	r2, [r7, #0]
20002ba0:	601a      	str	r2, [r3, #0]
}
20002ba2:	46c0      	nop			; (mov r8, r8)
20002ba4:	46bd      	mov	sp, r7
20002ba6:	b002      	add	sp, #8
20002ba8:	bd80      	pop	{r7, pc}
20002baa:	46c0      	nop			; (mov r8, r8)
20002bac:	20005780 	andcs	r5, r0, r0, lsl #15
20002bb0:	20005784 	andcs	r5, r0, r4, lsl #15

20002bb4 <resetDIP>:

void resetDIP(void){
20002bb4:	b580      	push	{r7, lr}
20002bb6:	af00      	add	r7, sp, #0
	playerPositionX = 0;
20002bb8:	4b09      	ldr	r3, [pc, #36]	; (20002be0 <resetDIP+0x2c>)
20002bba:	2200      	movs	r2, #0
20002bbc:	601a      	str	r2, [r3, #0]
	playerPositionY = 0;
20002bbe:	4b09      	ldr	r3, [pc, #36]	; (20002be4 <resetDIP+0x30>)
20002bc0:	2200      	movs	r2, #0
20002bc2:	601a      	str	r2, [r3, #0]
	counter = 0;
20002bc4:	4b08      	ldr	r3, [pc, #32]	; (20002be8 <resetDIP+0x34>)
20002bc6:	2200      	movs	r2, #0
20002bc8:	601a      	str	r2, [r3, #0]
	direction = -1;
20002bca:	4b08      	ldr	r3, [pc, #32]	; (20002bec <resetDIP+0x38>)
20002bcc:	2201      	movs	r2, #1
20002bce:	4252      	negs	r2, r2
20002bd0:	601a      	str	r2, [r3, #0]
	isRunning = 0;
20002bd2:	4b07      	ldr	r3, [pc, #28]	; (20002bf0 <resetDIP+0x3c>)
20002bd4:	2200      	movs	r2, #0
20002bd6:	601a      	str	r2, [r3, #0]
}
20002bd8:	46c0      	nop			; (mov r8, r8)
20002bda:	46bd      	mov	sp, r7
20002bdc:	bd80      	pop	{r7, pc}
20002bde:	46c0      	nop			; (mov r8, r8)
20002be0:	20005780 	andcs	r5, r0, r0, lsl #15
20002be4:	20005784 	andcs	r5, r0, r4, lsl #15
20002be8:	20005788 	andcs	r5, r0, r8, lsl #15
20002bec:	2000a584 	andcs	sl, r0, r4, lsl #11
20002bf0:	2000578c 	andcs	r5, r0, ip, lsl #15

20002bf4 <DIPUpdate>:

void DIPUpdate(GameObject *this) {
20002bf4:	b580      	push	{r7, lr}
20002bf6:	b082      	sub	sp, #8
20002bf8:	af00      	add	r7, sp, #0
20002bfa:	6078      	str	r0, [r7, #4]
	gameObjectUpdate(this);
20002bfc:	687b      	ldr	r3, [r7, #4]
20002bfe:	0018      	movs	r0, r3
20002c00:	f7ff f942 	bl	20001e88 <gameObjectUpdate>
	counter++;
20002c04:	4b39      	ldr	r3, [pc, #228]	; (20002cec <DIPUpdate+0xf8>)
20002c06:	681b      	ldr	r3, [r3, #0]
20002c08:	1c5a      	adds	r2, r3, #1
20002c0a:	4b38      	ldr	r3, [pc, #224]	; (20002cec <DIPUpdate+0xf8>)
20002c0c:	601a      	str	r2, [r3, #0]
	
	if (!read_DIL_single(LIGHT_TRIGGER)){ // Only move if the light is off
20002c0e:	2006      	movs	r0, #6
20002c10:	f001 fd0c 	bl	2000462c <read_DIL_single>
20002c14:	1e03      	subs	r3, r0, #0
20002c16:	d165      	bne.n	20002ce4 <DIPUpdate+0xf0>
		
		if (this->yPos >= playerPositionY){
20002c18:	687b      	ldr	r3, [r7, #4]
20002c1a:	689a      	ldr	r2, [r3, #8]
20002c1c:	4b34      	ldr	r3, [pc, #208]	; (20002cf0 <DIPUpdate+0xfc>)
20002c1e:	681b      	ldr	r3, [r3, #0]
20002c20:	429a      	cmp	r2, r3
20002c22:	db03      	blt.n	20002c2c <DIPUpdate+0x38>
			isRunning = 1;
20002c24:	4b33      	ldr	r3, [pc, #204]	; (20002cf4 <DIPUpdate+0x100>)
20002c26:	2201      	movs	r2, #1
20002c28:	601a      	str	r2, [r3, #0]
20002c2a:	e023      	b.n	20002c74 <DIPUpdate+0x80>
		}
		else if ((playerPositionX + DIP_WIDTH >= this->xPos && playerPositionX <= this->xPos + DIP_WIDTH )) { // Move faster if player is below or on the same level
20002c2c:	4b32      	ldr	r3, [pc, #200]	; (20002cf8 <DIPUpdate+0x104>)
20002c2e:	681b      	ldr	r3, [r3, #0]
20002c30:	3312      	adds	r3, #18
20002c32:	001a      	movs	r2, r3
20002c34:	687b      	ldr	r3, [r7, #4]
20002c36:	685b      	ldr	r3, [r3, #4]
20002c38:	429a      	cmp	r2, r3
20002c3a:	db1b      	blt.n	20002c74 <DIPUpdate+0x80>
20002c3c:	687b      	ldr	r3, [r7, #4]
20002c3e:	685b      	ldr	r3, [r3, #4]
20002c40:	3312      	adds	r3, #18
20002c42:	001a      	movs	r2, r3
20002c44:	4b2c      	ldr	r3, [pc, #176]	; (20002cf8 <DIPUpdate+0x104>)
20002c46:	681b      	ldr	r3, [r3, #0]
20002c48:	429a      	cmp	r2, r3
20002c4a:	db13      	blt.n	20002c74 <DIPUpdate+0x80>
			isRunning = 1;
20002c4c:	4b29      	ldr	r3, [pc, #164]	; (20002cf4 <DIPUpdate+0x100>)
20002c4e:	2201      	movs	r2, #1
20002c50:	601a      	str	r2, [r3, #0]
			if (RIGHT_POINT - playerPositionX > playerPositionX - LEFT_POINT){
20002c52:	4b29      	ldr	r3, [pc, #164]	; (20002cf8 <DIPUpdate+0x104>)
20002c54:	681b      	ldr	r3, [r3, #0]
20002c56:	226b      	movs	r2, #107	; 0x6b
20002c58:	1ad2      	subs	r2, r2, r3
20002c5a:	4b27      	ldr	r3, [pc, #156]	; (20002cf8 <DIPUpdate+0x104>)
20002c5c:	681b      	ldr	r3, [r3, #0]
20002c5e:	3b2e      	subs	r3, #46	; 0x2e
20002c60:	429a      	cmp	r2, r3
20002c62:	dd03      	ble.n	20002c6c <DIPUpdate+0x78>
				direction = 1;
20002c64:	4b25      	ldr	r3, [pc, #148]	; (20002cfc <DIPUpdate+0x108>)
20002c66:	2201      	movs	r2, #1
20002c68:	601a      	str	r2, [r3, #0]
20002c6a:	e003      	b.n	20002c74 <DIPUpdate+0x80>
			}
			else{
				direction = -1;
20002c6c:	4b23      	ldr	r3, [pc, #140]	; (20002cfc <DIPUpdate+0x108>)
20002c6e:	2201      	movs	r2, #1
20002c70:	4252      	negs	r2, r2
20002c72:	601a      	str	r2, [r3, #0]
			}
		} 
		
		
		
		if (isRunning){
20002c74:	4b1f      	ldr	r3, [pc, #124]	; (20002cf4 <DIPUpdate+0x100>)
20002c76:	681b      	ldr	r3, [r3, #0]
20002c78:	2b00      	cmp	r3, #0
20002c7a:	d00a      	beq.n	20002c92 <DIPUpdate+0x9e>
			this->xPos += direction*3;
20002c7c:	687b      	ldr	r3, [r7, #4]
20002c7e:	6859      	ldr	r1, [r3, #4]
20002c80:	4b1e      	ldr	r3, [pc, #120]	; (20002cfc <DIPUpdate+0x108>)
20002c82:	681a      	ldr	r2, [r3, #0]
20002c84:	0013      	movs	r3, r2
20002c86:	005b      	lsls	r3, r3, #1
20002c88:	189b      	adds	r3, r3, r2
20002c8a:	18ca      	adds	r2, r1, r3
20002c8c:	687b      	ldr	r3, [r7, #4]
20002c8e:	605a      	str	r2, [r3, #4]
20002c90:	e012      	b.n	20002cb8 <DIPUpdate+0xc4>
		} else {
			this->xPos += (counter % 2)*direction;
20002c92:	687b      	ldr	r3, [r7, #4]
20002c94:	685a      	ldr	r2, [r3, #4]
20002c96:	4b15      	ldr	r3, [pc, #84]	; (20002cec <DIPUpdate+0xf8>)
20002c98:	681b      	ldr	r3, [r3, #0]
20002c9a:	4919      	ldr	r1, [pc, #100]	; (20002d00 <DIPUpdate+0x10c>)
20002c9c:	400b      	ands	r3, r1
20002c9e:	d504      	bpl.n	20002caa <DIPUpdate+0xb6>
20002ca0:	3b01      	subs	r3, #1
20002ca2:	2102      	movs	r1, #2
20002ca4:	4249      	negs	r1, r1
20002ca6:	430b      	orrs	r3, r1
20002ca8:	3301      	adds	r3, #1
20002caa:	0019      	movs	r1, r3
20002cac:	4b13      	ldr	r3, [pc, #76]	; (20002cfc <DIPUpdate+0x108>)
20002cae:	681b      	ldr	r3, [r3, #0]
20002cb0:	434b      	muls	r3, r1
20002cb2:	18d2      	adds	r2, r2, r3
20002cb4:	687b      	ldr	r3, [r7, #4]
20002cb6:	605a      	str	r2, [r3, #4]
		}
		
		if(this->xPos > RIGHT_POINT) {
20002cb8:	687b      	ldr	r3, [r7, #4]
20002cba:	685b      	ldr	r3, [r3, #4]
20002cbc:	2b6b      	cmp	r3, #107	; 0x6b
20002cbe:	dd07      	ble.n	20002cd0 <DIPUpdate+0xdc>
			isRunning = 0;
20002cc0:	4b0c      	ldr	r3, [pc, #48]	; (20002cf4 <DIPUpdate+0x100>)
20002cc2:	2200      	movs	r2, #0
20002cc4:	601a      	str	r2, [r3, #0]
			direction = -1;
20002cc6:	4b0d      	ldr	r3, [pc, #52]	; (20002cfc <DIPUpdate+0x108>)
20002cc8:	2201      	movs	r2, #1
20002cca:	4252      	negs	r2, r2
20002ccc:	601a      	str	r2, [r3, #0]
		} else if(this->xPos < LEFT_POINT) {
			isRunning = 0;
			direction = 1;
		}
	}
}
20002cce:	e009      	b.n	20002ce4 <DIPUpdate+0xf0>
		} else if(this->xPos < LEFT_POINT) {
20002cd0:	687b      	ldr	r3, [r7, #4]
20002cd2:	685b      	ldr	r3, [r3, #4]
20002cd4:	2b2d      	cmp	r3, #45	; 0x2d
20002cd6:	dc05      	bgt.n	20002ce4 <DIPUpdate+0xf0>
			isRunning = 0;
20002cd8:	4b06      	ldr	r3, [pc, #24]	; (20002cf4 <DIPUpdate+0x100>)
20002cda:	2200      	movs	r2, #0
20002cdc:	601a      	str	r2, [r3, #0]
			direction = 1;
20002cde:	4b07      	ldr	r3, [pc, #28]	; (20002cfc <DIPUpdate+0x108>)
20002ce0:	2201      	movs	r2, #1
20002ce2:	601a      	str	r2, [r3, #0]
}
20002ce4:	46c0      	nop			; (mov r8, r8)
20002ce6:	46bd      	mov	sp, r7
20002ce8:	b002      	add	sp, #8
20002cea:	bd80      	pop	{r7, pc}
20002cec:	20005788 	andcs	r5, r0, r8, lsl #15
20002cf0:	20005784 	andcs	r5, r0, r4, lsl #15
20002cf4:	2000578c 	andcs	r5, r0, ip, lsl #15
20002cf8:	20005780 	andcs	r5, r0, r0, lsl #15
20002cfc:	2000a584 	andcs	sl, r0, r4, lsl #11
20002d00:	80000001 	andhi	r0, r0, r1

20002d04 <initSprites>:
Image flame1Image;
Image flame2Image;
Image flame3Image;
Image flame4Image;
Image flameImages[4];
static void initSprites( void ) {	
20002d04:	b580      	push	{r7, lr}
20002d06:	b08c      	sub	sp, #48	; 0x30
20002d08:	af00      	add	r7, sp, #0
	
	sprite *pointer11 = &tempFlameLight;
20002d0a:	4b44      	ldr	r3, [pc, #272]	; (20002e1c <initSprites+0x118>)
20002d0c:	62fb      	str	r3, [r7, #44]	; 0x2c
	load_sprite(pointer11, flame1_light_bits, flame1_black_width, flame1_black_height);
20002d0e:	4944      	ldr	r1, [pc, #272]	; (20002e20 <initSprites+0x11c>)
20002d10:	6af8      	ldr	r0, [r7, #44]	; 0x2c
20002d12:	2327      	movs	r3, #39	; 0x27
20002d14:	2211      	movs	r2, #17
20002d16:	f001 fc59 	bl	200045cc <load_sprite>
	flame1Light = pointer11;
20002d1a:	4b42      	ldr	r3, [pc, #264]	; (20002e24 <initSprites+0x120>)
20002d1c:	6afa      	ldr	r2, [r7, #44]	; 0x2c
20002d1e:	601a      	str	r2, [r3, #0]
	sprite *pointer12 = &tempFlameGray;
20002d20:	4b41      	ldr	r3, [pc, #260]	; (20002e28 <initSprites+0x124>)
20002d22:	62bb      	str	r3, [r7, #40]	; 0x28
	load_sprite(pointer12, flame1_gray_bits, flame1_black_width, flame1_black_height);
20002d24:	4941      	ldr	r1, [pc, #260]	; (20002e2c <initSprites+0x128>)
20002d26:	6ab8      	ldr	r0, [r7, #40]	; 0x28
20002d28:	2327      	movs	r3, #39	; 0x27
20002d2a:	2211      	movs	r2, #17
20002d2c:	f001 fc4e 	bl	200045cc <load_sprite>
	flame1Gray = pointer12;
20002d30:	4b3f      	ldr	r3, [pc, #252]	; (20002e30 <initSprites+0x12c>)
20002d32:	6aba      	ldr	r2, [r7, #40]	; 0x28
20002d34:	601a      	str	r2, [r3, #0]
	sprite *pointer13 = &tempFlameBlack;
20002d36:	4b3f      	ldr	r3, [pc, #252]	; (20002e34 <initSprites+0x130>)
20002d38:	627b      	str	r3, [r7, #36]	; 0x24
	load_sprite(pointer13, flame1_black_bits, flame1_black_width, flame1_black_height);
20002d3a:	493f      	ldr	r1, [pc, #252]	; (20002e38 <initSprites+0x134>)
20002d3c:	6a78      	ldr	r0, [r7, #36]	; 0x24
20002d3e:	2327      	movs	r3, #39	; 0x27
20002d40:	2211      	movs	r2, #17
20002d42:	f001 fc43 	bl	200045cc <load_sprite>
	flame1Black = pointer13;	
20002d46:	4b3d      	ldr	r3, [pc, #244]	; (20002e3c <initSprites+0x138>)
20002d48:	6a7a      	ldr	r2, [r7, #36]	; 0x24
20002d4a:	601a      	str	r2, [r3, #0]
	
	sprite *pointer14 = &tempFlame2Light;
20002d4c:	4b3c      	ldr	r3, [pc, #240]	; (20002e40 <initSprites+0x13c>)
20002d4e:	623b      	str	r3, [r7, #32]
	load_sprite(pointer14, flame2_light_bits, flame2_black_width, flame2_black_height);
20002d50:	493c      	ldr	r1, [pc, #240]	; (20002e44 <initSprites+0x140>)
20002d52:	6a38      	ldr	r0, [r7, #32]
20002d54:	2327      	movs	r3, #39	; 0x27
20002d56:	2211      	movs	r2, #17
20002d58:	f001 fc38 	bl	200045cc <load_sprite>
	flame2Light = pointer14;
20002d5c:	4b3a      	ldr	r3, [pc, #232]	; (20002e48 <initSprites+0x144>)
20002d5e:	6a3a      	ldr	r2, [r7, #32]
20002d60:	601a      	str	r2, [r3, #0]
	sprite *pointer15 = &tempFlame2Gray;
20002d62:	4b3a      	ldr	r3, [pc, #232]	; (20002e4c <initSprites+0x148>)
20002d64:	61fb      	str	r3, [r7, #28]
	load_sprite(pointer15, flame2_gray_bits, flame2_black_width, flame2_black_height);
20002d66:	493a      	ldr	r1, [pc, #232]	; (20002e50 <initSprites+0x14c>)
20002d68:	69f8      	ldr	r0, [r7, #28]
20002d6a:	2327      	movs	r3, #39	; 0x27
20002d6c:	2211      	movs	r2, #17
20002d6e:	f001 fc2d 	bl	200045cc <load_sprite>
	flame2Gray = pointer15;
20002d72:	4b38      	ldr	r3, [pc, #224]	; (20002e54 <initSprites+0x150>)
20002d74:	69fa      	ldr	r2, [r7, #28]
20002d76:	601a      	str	r2, [r3, #0]
	sprite *pointer16 = &tempFlame2Black;
20002d78:	4b37      	ldr	r3, [pc, #220]	; (20002e58 <initSprites+0x154>)
20002d7a:	61bb      	str	r3, [r7, #24]
	load_sprite(pointer16, flame2_black_bits, flame2_black_width, flame2_black_height);
20002d7c:	4937      	ldr	r1, [pc, #220]	; (20002e5c <initSprites+0x158>)
20002d7e:	69b8      	ldr	r0, [r7, #24]
20002d80:	2327      	movs	r3, #39	; 0x27
20002d82:	2211      	movs	r2, #17
20002d84:	f001 fc22 	bl	200045cc <load_sprite>
	flame2Black = pointer16;
20002d88:	4b35      	ldr	r3, [pc, #212]	; (20002e60 <initSprites+0x15c>)
20002d8a:	69ba      	ldr	r2, [r7, #24]
20002d8c:	601a      	str	r2, [r3, #0]
	
	
	sprite *finalPointer = &tempFlame3Light;
20002d8e:	4b35      	ldr	r3, [pc, #212]	; (20002e64 <initSprites+0x160>)
20002d90:	617b      	str	r3, [r7, #20]
	load_sprite(finalPointer, flame3_light_bits, flame3_black_width, flame3_black_height);
20002d92:	4935      	ldr	r1, [pc, #212]	; (20002e68 <initSprites+0x164>)
20002d94:	6978      	ldr	r0, [r7, #20]
20002d96:	2327      	movs	r3, #39	; 0x27
20002d98:	2211      	movs	r2, #17
20002d9a:	f001 fc17 	bl	200045cc <load_sprite>
	flame3Light = finalPointer;
20002d9e:	4b33      	ldr	r3, [pc, #204]	; (20002e6c <initSprites+0x168>)
20002da0:	697a      	ldr	r2, [r7, #20]
20002da2:	601a      	str	r2, [r3, #0]
	sprite *pointer17 = &tempFlame3Gray;
20002da4:	4b32      	ldr	r3, [pc, #200]	; (20002e70 <initSprites+0x16c>)
20002da6:	613b      	str	r3, [r7, #16]
	load_sprite(pointer17, flame3_gray_bits, flame3_black_width, flame3_black_height);
20002da8:	4932      	ldr	r1, [pc, #200]	; (20002e74 <initSprites+0x170>)
20002daa:	6938      	ldr	r0, [r7, #16]
20002dac:	2327      	movs	r3, #39	; 0x27
20002dae:	2211      	movs	r2, #17
20002db0:	f001 fc0c 	bl	200045cc <load_sprite>
	flame3Gray = pointer17;
20002db4:	4b30      	ldr	r3, [pc, #192]	; (20002e78 <initSprites+0x174>)
20002db6:	693a      	ldr	r2, [r7, #16]
20002db8:	601a      	str	r2, [r3, #0]
	sprite *pointer18 = &tempFlame3Black;
20002dba:	4b30      	ldr	r3, [pc, #192]	; (20002e7c <initSprites+0x178>)
20002dbc:	60fb      	str	r3, [r7, #12]
	load_sprite(pointer18, flame3_black_bits, flame3_black_width, flame3_black_height);
20002dbe:	4930      	ldr	r1, [pc, #192]	; (20002e80 <initSprites+0x17c>)
20002dc0:	68f8      	ldr	r0, [r7, #12]
20002dc2:	2327      	movs	r3, #39	; 0x27
20002dc4:	2211      	movs	r2, #17
20002dc6:	f001 fc01 	bl	200045cc <load_sprite>
	flame3Black = pointer18;	
20002dca:	4b2e      	ldr	r3, [pc, #184]	; (20002e84 <initSprites+0x180>)
20002dcc:	68fa      	ldr	r2, [r7, #12]
20002dce:	601a      	str	r2, [r3, #0]
	
	sprite *pointer19 = &tempFlame4Light;
20002dd0:	4b2d      	ldr	r3, [pc, #180]	; (20002e88 <initSprites+0x184>)
20002dd2:	60bb      	str	r3, [r7, #8]
	load_sprite(pointer19, flame4_light_bits, flame4_black_width, flame4_black_height);
20002dd4:	492d      	ldr	r1, [pc, #180]	; (20002e8c <initSprites+0x188>)
20002dd6:	68b8      	ldr	r0, [r7, #8]
20002dd8:	2327      	movs	r3, #39	; 0x27
20002dda:	2211      	movs	r2, #17
20002ddc:	f001 fbf6 	bl	200045cc <load_sprite>
	flame4Light = pointer19;
20002de0:	4b2b      	ldr	r3, [pc, #172]	; (20002e90 <initSprites+0x18c>)
20002de2:	68ba      	ldr	r2, [r7, #8]
20002de4:	601a      	str	r2, [r3, #0]
	sprite *pointer20 = &tempFlame4Gray;
20002de6:	4b2b      	ldr	r3, [pc, #172]	; (20002e94 <initSprites+0x190>)
20002de8:	607b      	str	r3, [r7, #4]
	load_sprite(pointer20, flame4_gray_bits, flame4_black_width, flame4_black_height);
20002dea:	492b      	ldr	r1, [pc, #172]	; (20002e98 <initSprites+0x194>)
20002dec:	6878      	ldr	r0, [r7, #4]
20002dee:	2327      	movs	r3, #39	; 0x27
20002df0:	2211      	movs	r2, #17
20002df2:	f001 fbeb 	bl	200045cc <load_sprite>
	flame4Gray = pointer20;
20002df6:	4b29      	ldr	r3, [pc, #164]	; (20002e9c <initSprites+0x198>)
20002df8:	687a      	ldr	r2, [r7, #4]
20002dfa:	601a      	str	r2, [r3, #0]
	sprite *pointer21 = &tempFlame4Black;
20002dfc:	4b28      	ldr	r3, [pc, #160]	; (20002ea0 <initSprites+0x19c>)
20002dfe:	603b      	str	r3, [r7, #0]
	load_sprite(pointer21, flame4_black_bits, flame4_black_width, flame4_black_height);
20002e00:	4928      	ldr	r1, [pc, #160]	; (20002ea4 <initSprites+0x1a0>)
20002e02:	6838      	ldr	r0, [r7, #0]
20002e04:	2327      	movs	r3, #39	; 0x27
20002e06:	2211      	movs	r2, #17
20002e08:	f001 fbe0 	bl	200045cc <load_sprite>
	flame4Black = pointer21;	
20002e0c:	4b26      	ldr	r3, [pc, #152]	; (20002ea8 <initSprites+0x1a4>)
20002e0e:	683a      	ldr	r2, [r7, #0]
20002e10:	601a      	str	r2, [r3, #0]
	
}
20002e12:	46c0      	nop			; (mov r8, r8)
20002e14:	46bd      	mov	sp, r7
20002e16:	b00c      	add	sp, #48	; 0x30
20002e18:	bd80      	pop	{r7, pc}
20002e1a:	46c0      	nop			; (mov r8, r8)
20002e1c:	20006034 	andcs	r6, r0, r4, lsr r0
20002e20:	2000a67c 	andcs	sl, r0, ip, ror r6
20002e24:	20005fac 	andcs	r5, r0, ip, lsr #31
20002e28:	20005f18 	andcs	r5, r0, r8, lsl pc
20002e2c:	2000a604 	andcs	sl, r0, r4, lsl #12
20002e30:	20005fa8 	andcs	r5, r0, r8, lsr #31
20002e34:	20006048 	andcs	r6, r0, r8, asr #32
20002e38:	2000a58c 	andcs	sl, r0, ip, lsl #11
20002e3c:	20006030 	andcs	r6, r0, r0, lsr r0
20002e40:	20005f80 	andcs	r5, r0, r0, lsl #31
20002e44:	2000a7e4 	andcs	sl, r0, r4, ror #15
20002e48:	20006040 	andcs	r6, r0, r0, asr #32
20002e4c:	20005fe4 	andcs	r5, r0, r4, ror #31
20002e50:	2000a76c 	andcs	sl, r0, ip, ror #14
20002e54:	20005fa4 	andcs	r5, r0, r4, lsr #31
20002e58:	20005f98 	mulcs	r0, r8, pc	; <UNPREDICTABLE>
20002e5c:	2000a6f4 	strdcs	sl, [r0], -r4
20002e60:	20006058 	andcs	r6, r0, r8, asr r0
20002e64:	20005f40 	andcs	r5, r0, r0, asr #30
20002e68:	2000a94c 	andcs	sl, r0, ip, asr #18
20002e6c:	20005f3c 	andcs	r5, r0, ip, lsr pc
20002e70:	20005f8c 	andcs	r5, r0, ip, lsl #31
20002e74:	2000a8d4 	ldrdcs	sl, [r0], -r4
20002e78:	20005f58 	andcs	r5, r0, r8, asr pc
20002e7c:	20006020 	andcs	r6, r0, r0, lsr #32
20002e80:	2000a85c 	andcs	sl, r0, ip, asr r8
20002e84:	20006044 	andcs	r6, r0, r4, asr #32
20002e88:	20005f24 	andcs	r5, r0, r4, lsr #30
20002e8c:	2000aab4 			; <UNDEFINED> instruction: 0x2000aab4
20002e90:	20006054 	andcs	r6, r0, r4, asr r0
20002e94:	20005fbc 			; <UNDEFINED> instruction: 0x20005fbc
20002e98:	2000aa3c 	andcs	sl, r0, ip, lsr sl
20002e9c:	20005fc8 	andcs	r5, r0, r8, asr #31
20002ea0:	20005fb0 			; <UNDEFINED> instruction: 0x20005fb0
20002ea4:	2000a9c4 	andcs	sl, r0, r4, asr #19
20002ea8:	2000602c 	andcs	r6, r0, ip, lsr #32

20002eac <init_flame>:
	
void init_flame( GameObject *flameObj ) {
20002eac:	b590      	push	{r4, r7, lr}
20002eae:	b083      	sub	sp, #12
20002eb0:	af00      	add	r7, sp, #0
20002eb2:	6078      	str	r0, [r7, #4]
	static int firstTime = 1;
	if (firstTime) {
20002eb4:	4b29      	ldr	r3, [pc, #164]	; (20002f5c <init_flame+0xb0>)
20002eb6:	681b      	ldr	r3, [r3, #0]
20002eb8:	2b00      	cmp	r3, #0
20002eba:	d03b      	beq.n	20002f34 <init_flame+0x88>
		initSprites();
20002ebc:	f7ff ff22 	bl	20002d04 <initSprites>
		firstTime = 0;			
20002ec0:	4b26      	ldr	r3, [pc, #152]	; (20002f5c <init_flame+0xb0>)
20002ec2:	2200      	movs	r2, #0
20002ec4:	601a      	str	r2, [r3, #0]

		flameImages[0] = flame1Image;
20002ec6:	4b26      	ldr	r3, [pc, #152]	; (20002f60 <init_flame+0xb4>)
20002ec8:	4a26      	ldr	r2, [pc, #152]	; (20002f64 <init_flame+0xb8>)
20002eca:	ca13      	ldmia	r2!, {r0, r1, r4}
20002ecc:	c313      	stmia	r3!, {r0, r1, r4}
		flameImages[1] = flame2Image;
20002ece:	4b24      	ldr	r3, [pc, #144]	; (20002f60 <init_flame+0xb4>)
20002ed0:	4a25      	ldr	r2, [pc, #148]	; (20002f68 <init_flame+0xbc>)
20002ed2:	330c      	adds	r3, #12
20002ed4:	ca13      	ldmia	r2!, {r0, r1, r4}
20002ed6:	c313      	stmia	r3!, {r0, r1, r4}
		flameImages[2] = flame3Image;
20002ed8:	4b21      	ldr	r3, [pc, #132]	; (20002f60 <init_flame+0xb4>)
20002eda:	4a24      	ldr	r2, [pc, #144]	; (20002f6c <init_flame+0xc0>)
20002edc:	3318      	adds	r3, #24
20002ede:	ca13      	ldmia	r2!, {r0, r1, r4}
20002ee0:	c313      	stmia	r3!, {r0, r1, r4}
		flameImages[3] = flame4Image;
20002ee2:	4b1f      	ldr	r3, [pc, #124]	; (20002f60 <init_flame+0xb4>)
20002ee4:	4a22      	ldr	r2, [pc, #136]	; (20002f70 <init_flame+0xc4>)
20002ee6:	3324      	adds	r3, #36	; 0x24
20002ee8:	ca13      	ldmia	r2!, {r0, r1, r4}
20002eea:	c313      	stmia	r3!, {r0, r1, r4}
		
		load_image(&flameImages[0], flame1Black, flame1Gray, flame1Light);
20002eec:	4b21      	ldr	r3, [pc, #132]	; (20002f74 <init_flame+0xc8>)
20002eee:	6819      	ldr	r1, [r3, #0]
20002ef0:	4b21      	ldr	r3, [pc, #132]	; (20002f78 <init_flame+0xcc>)
20002ef2:	681a      	ldr	r2, [r3, #0]
20002ef4:	4b21      	ldr	r3, [pc, #132]	; (20002f7c <init_flame+0xd0>)
20002ef6:	681b      	ldr	r3, [r3, #0]
20002ef8:	4819      	ldr	r0, [pc, #100]	; (20002f60 <init_flame+0xb4>)
20002efa:	f001 fb53 	bl	200045a4 <load_image>
		load_image(&flameImages[1], flame2Black, flame2Gray, flame2Light);
20002efe:	4b20      	ldr	r3, [pc, #128]	; (20002f80 <init_flame+0xd4>)
20002f00:	6819      	ldr	r1, [r3, #0]
20002f02:	4b20      	ldr	r3, [pc, #128]	; (20002f84 <init_flame+0xd8>)
20002f04:	681a      	ldr	r2, [r3, #0]
20002f06:	4b20      	ldr	r3, [pc, #128]	; (20002f88 <init_flame+0xdc>)
20002f08:	681b      	ldr	r3, [r3, #0]
20002f0a:	4820      	ldr	r0, [pc, #128]	; (20002f8c <init_flame+0xe0>)
20002f0c:	f001 fb4a 	bl	200045a4 <load_image>
		load_image(&flameImages[2], flame3Black, flame3Gray, flame3Light);
20002f10:	4b1f      	ldr	r3, [pc, #124]	; (20002f90 <init_flame+0xe4>)
20002f12:	6819      	ldr	r1, [r3, #0]
20002f14:	4b1f      	ldr	r3, [pc, #124]	; (20002f94 <init_flame+0xe8>)
20002f16:	681a      	ldr	r2, [r3, #0]
20002f18:	4b1f      	ldr	r3, [pc, #124]	; (20002f98 <init_flame+0xec>)
20002f1a:	681b      	ldr	r3, [r3, #0]
20002f1c:	481f      	ldr	r0, [pc, #124]	; (20002f9c <init_flame+0xf0>)
20002f1e:	f001 fb41 	bl	200045a4 <load_image>
		load_image(&flameImages[3], flame4Black, flame4Gray, flame4Light);
20002f22:	4b1f      	ldr	r3, [pc, #124]	; (20002fa0 <init_flame+0xf4>)
20002f24:	6819      	ldr	r1, [r3, #0]
20002f26:	4b1f      	ldr	r3, [pc, #124]	; (20002fa4 <init_flame+0xf8>)
20002f28:	681a      	ldr	r2, [r3, #0]
20002f2a:	4b1f      	ldr	r3, [pc, #124]	; (20002fa8 <init_flame+0xfc>)
20002f2c:	681b      	ldr	r3, [r3, #0]
20002f2e:	481f      	ldr	r0, [pc, #124]	; (20002fac <init_flame+0x100>)
20002f30:	f001 fb38 	bl	200045a4 <load_image>
}
	
	flameObj->images = flameImages;
20002f34:	687b      	ldr	r3, [r7, #4]
20002f36:	4a0a      	ldr	r2, [pc, #40]	; (20002f60 <init_flame+0xb4>)
20002f38:	601a      	str	r2, [r3, #0]

	flameObj->current_frame = 0;
20002f3a:	687b      	ldr	r3, [r7, #4]
20002f3c:	2200      	movs	r2, #0
20002f3e:	615a      	str	r2, [r3, #20]
	flameObj->n_frames = 4;
20002f40:	687b      	ldr	r3, [r7, #4]
20002f42:	2204      	movs	r2, #4
20002f44:	619a      	str	r2, [r3, #24]
	flameObj->animation_speed = 1;
20002f46:	687b      	ldr	r3, [r7, #4]
20002f48:	2201      	movs	r2, #1
20002f4a:	61da      	str	r2, [r3, #28]
	flameObj->animation_counter = 0;
20002f4c:	687b      	ldr	r3, [r7, #4]
20002f4e:	2200      	movs	r2, #0
20002f50:	621a      	str	r2, [r3, #32]
}
20002f52:	46c0      	nop			; (mov r8, r8)
20002f54:	46bd      	mov	sp, r7
20002f56:	b003      	add	sp, #12
20002f58:	bd90      	pop	{r4, r7, pc}
20002f5a:	46c0      	nop			; (mov r8, r8)
20002f5c:	2000ab2c 	andcs	sl, r0, ip, lsr #22
20002f60:	20005ff0 	strdcs	r5, [r0], -r0
20002f64:	20005fd8 	ldrdcs	r5, [r0], -r8
20002f68:	20005f30 	andcs	r5, r0, r0, lsr pc
20002f6c:	20005f4c 	andcs	r5, r0, ip, asr #30
20002f70:	20005fcc 	andcs	r5, r0, ip, asr #31
20002f74:	20006030 	andcs	r6, r0, r0, lsr r0
20002f78:	20005fa8 	andcs	r5, r0, r8, lsr #31
20002f7c:	20005fac 	andcs	r5, r0, ip, lsr #31
20002f80:	20006058 	andcs	r6, r0, r8, asr r0
20002f84:	20005fa4 	andcs	r5, r0, r4, lsr #31
20002f88:	20006040 	andcs	r6, r0, r0, asr #32
20002f8c:	20005ffc 	strdcs	r5, [r0], -ip
20002f90:	20006044 	andcs	r6, r0, r4, asr #32
20002f94:	20005f58 	andcs	r5, r0, r8, asr pc
20002f98:	20005f3c 	andcs	r5, r0, ip, lsr pc
20002f9c:	20006008 	andcs	r6, r0, r8
20002fa0:	2000602c 	andcs	r6, r0, ip, lsr #32
20002fa4:	20005fc8 	andcs	r5, r0, r8, asr #31
20002fa8:	20006054 	andcs	r6, r0, r4, asr r0
20002fac:	20006014 	andcs	r6, r0, r4, lsl r0

20002fb0 <initSprites>:
Image boom12Image;
Image boom13Image;
Image boom14Image;
Image boom15Image;
Image boomImages[15];
static void initSprites( void ) {	
20002fb0:	b580      	push	{r7, lr}
20002fb2:	b092      	sub	sp, #72	; 0x48
20002fb4:	af00      	add	r7, sp, #0
	
	sprite *pointer11 = &tempBoomLight;
20002fb6:	4b65      	ldr	r3, [pc, #404]	; (2000314c <initSprites+0x19c>)
20002fb8:	647b      	str	r3, [r7, #68]	; 0x44
	load_sprite(pointer11, boom1_light_bits, boom1_black_width, boom1_black_height);
20002fba:	4965      	ldr	r1, [pc, #404]	; (20003150 <initSprites+0x1a0>)
20002fbc:	6c78      	ldr	r0, [r7, #68]	; 0x44
20002fbe:	2337      	movs	r3, #55	; 0x37
20002fc0:	226a      	movs	r2, #106	; 0x6a
20002fc2:	f001 fb03 	bl	200045cc <load_sprite>
	boom1Light = pointer11;
20002fc6:	4b63      	ldr	r3, [pc, #396]	; (20003154 <initSprites+0x1a4>)
20002fc8:	6c7a      	ldr	r2, [r7, #68]	; 0x44
20002fca:	601a      	str	r2, [r3, #0]
	sprite *pointer12 = &tempBoomGray;
20002fcc:	4b62      	ldr	r3, [pc, #392]	; (20003158 <initSprites+0x1a8>)
20002fce:	643b      	str	r3, [r7, #64]	; 0x40
	load_sprite(pointer12, boom1_gray_bits, boom1_black_width, boom1_black_height);
20002fd0:	4962      	ldr	r1, [pc, #392]	; (2000315c <initSprites+0x1ac>)
20002fd2:	6c38      	ldr	r0, [r7, #64]	; 0x40
20002fd4:	2337      	movs	r3, #55	; 0x37
20002fd6:	226a      	movs	r2, #106	; 0x6a
20002fd8:	f001 faf8 	bl	200045cc <load_sprite>
	boom1Gray = pointer12;
20002fdc:	4b60      	ldr	r3, [pc, #384]	; (20003160 <initSprites+0x1b0>)
20002fde:	6c3a      	ldr	r2, [r7, #64]	; 0x40
20002fe0:	601a      	str	r2, [r3, #0]
	sprite *pointer13 = &tempBoomBlack;
20002fe2:	4b60      	ldr	r3, [pc, #384]	; (20003164 <initSprites+0x1b4>)
20002fe4:	63fb      	str	r3, [r7, #60]	; 0x3c
	load_sprite(pointer13, boom1_black_bits, boom1_black_width, boom1_black_height);
20002fe6:	4960      	ldr	r1, [pc, #384]	; (20003168 <initSprites+0x1b8>)
20002fe8:	6bf8      	ldr	r0, [r7, #60]	; 0x3c
20002fea:	2337      	movs	r3, #55	; 0x37
20002fec:	226a      	movs	r2, #106	; 0x6a
20002fee:	f001 faed 	bl	200045cc <load_sprite>
	boom1Black = pointer13;	
20002ff2:	4b5e      	ldr	r3, [pc, #376]	; (2000316c <initSprites+0x1bc>)
20002ff4:	6bfa      	ldr	r2, [r7, #60]	; 0x3c
20002ff6:	601a      	str	r2, [r3, #0]
	
	sprite *pointer14 = &tempBoom2Light;
20002ff8:	4b5d      	ldr	r3, [pc, #372]	; (20003170 <initSprites+0x1c0>)
20002ffa:	63bb      	str	r3, [r7, #56]	; 0x38
	load_sprite(pointer14, boom2_light_bits, boom2_black_width, boom2_black_height);
20002ffc:	495d      	ldr	r1, [pc, #372]	; (20003174 <initSprites+0x1c4>)
20002ffe:	6bb8      	ldr	r0, [r7, #56]	; 0x38
20003000:	2337      	movs	r3, #55	; 0x37
20003002:	226a      	movs	r2, #106	; 0x6a
20003004:	f001 fae2 	bl	200045cc <load_sprite>
	boom2Light = pointer14;
20003008:	4b5b      	ldr	r3, [pc, #364]	; (20003178 <initSprites+0x1c8>)
2000300a:	6bba      	ldr	r2, [r7, #56]	; 0x38
2000300c:	601a      	str	r2, [r3, #0]
	sprite *pointer15 = &tempBoom2Gray;
2000300e:	4b5b      	ldr	r3, [pc, #364]	; (2000317c <initSprites+0x1cc>)
20003010:	637b      	str	r3, [r7, #52]	; 0x34
	load_sprite(pointer15, boom2_gray_bits, boom2_black_width, boom2_black_height);
20003012:	495b      	ldr	r1, [pc, #364]	; (20003180 <initSprites+0x1d0>)
20003014:	6b78      	ldr	r0, [r7, #52]	; 0x34
20003016:	2337      	movs	r3, #55	; 0x37
20003018:	226a      	movs	r2, #106	; 0x6a
2000301a:	f001 fad7 	bl	200045cc <load_sprite>
	boom2Gray = pointer15;
2000301e:	4b59      	ldr	r3, [pc, #356]	; (20003184 <initSprites+0x1d4>)
20003020:	6b7a      	ldr	r2, [r7, #52]	; 0x34
20003022:	601a      	str	r2, [r3, #0]
	sprite *pointer16 = &tempBoom2Black;
20003024:	4b58      	ldr	r3, [pc, #352]	; (20003188 <initSprites+0x1d8>)
20003026:	633b      	str	r3, [r7, #48]	; 0x30
	load_sprite(pointer16, boom2_black_bits, boom2_black_width, boom2_black_height);
20003028:	4958      	ldr	r1, [pc, #352]	; (2000318c <initSprites+0x1dc>)
2000302a:	6b38      	ldr	r0, [r7, #48]	; 0x30
2000302c:	2337      	movs	r3, #55	; 0x37
2000302e:	226a      	movs	r2, #106	; 0x6a
20003030:	f001 facc 	bl	200045cc <load_sprite>
	boom2Black = pointer16;
20003034:	4b56      	ldr	r3, [pc, #344]	; (20003190 <initSprites+0x1e0>)
20003036:	6b3a      	ldr	r2, [r7, #48]	; 0x30
20003038:	601a      	str	r2, [r3, #0]
	
	
	sprite *finalPointer = &tempBoom3Light;
2000303a:	4b56      	ldr	r3, [pc, #344]	; (20003194 <initSprites+0x1e4>)
2000303c:	62fb      	str	r3, [r7, #44]	; 0x2c
	load_sprite(finalPointer, boom3_light_bits, boom3_black_width, boom3_black_height);
2000303e:	4956      	ldr	r1, [pc, #344]	; (20003198 <initSprites+0x1e8>)
20003040:	6af8      	ldr	r0, [r7, #44]	; 0x2c
20003042:	2337      	movs	r3, #55	; 0x37
20003044:	226a      	movs	r2, #106	; 0x6a
20003046:	f001 fac1 	bl	200045cc <load_sprite>
	boom3Light = finalPointer;
2000304a:	4b54      	ldr	r3, [pc, #336]	; (2000319c <initSprites+0x1ec>)
2000304c:	6afa      	ldr	r2, [r7, #44]	; 0x2c
2000304e:	601a      	str	r2, [r3, #0]
	sprite *pointer17 = &tempBoom3Gray;
20003050:	4b53      	ldr	r3, [pc, #332]	; (200031a0 <initSprites+0x1f0>)
20003052:	62bb      	str	r3, [r7, #40]	; 0x28
	load_sprite(pointer17, boom3_gray_bits, boom3_black_width, boom3_black_height);
20003054:	4953      	ldr	r1, [pc, #332]	; (200031a4 <initSprites+0x1f4>)
20003056:	6ab8      	ldr	r0, [r7, #40]	; 0x28
20003058:	2337      	movs	r3, #55	; 0x37
2000305a:	226a      	movs	r2, #106	; 0x6a
2000305c:	f001 fab6 	bl	200045cc <load_sprite>
	boom3Gray = pointer17;
20003060:	4b51      	ldr	r3, [pc, #324]	; (200031a8 <initSprites+0x1f8>)
20003062:	6aba      	ldr	r2, [r7, #40]	; 0x28
20003064:	601a      	str	r2, [r3, #0]
	sprite *pointer18 = &tempBoom3Black;
20003066:	4b51      	ldr	r3, [pc, #324]	; (200031ac <initSprites+0x1fc>)
20003068:	627b      	str	r3, [r7, #36]	; 0x24
	load_sprite(pointer18, boom3_black_bits, boom3_black_width, boom3_black_height);
2000306a:	4951      	ldr	r1, [pc, #324]	; (200031b0 <initSprites+0x200>)
2000306c:	6a78      	ldr	r0, [r7, #36]	; 0x24
2000306e:	2337      	movs	r3, #55	; 0x37
20003070:	226a      	movs	r2, #106	; 0x6a
20003072:	f001 faab 	bl	200045cc <load_sprite>
	boom3Black = pointer18;	
20003076:	4b4f      	ldr	r3, [pc, #316]	; (200031b4 <initSprites+0x204>)
20003078:	6a7a      	ldr	r2, [r7, #36]	; 0x24
2000307a:	601a      	str	r2, [r3, #0]
	
	sprite *pointer19 = &tempBoom4Light;
2000307c:	4b4e      	ldr	r3, [pc, #312]	; (200031b8 <initSprites+0x208>)
2000307e:	623b      	str	r3, [r7, #32]
	load_sprite(pointer19, boom4_light_bits, boom4_black_width, boom4_black_height);
20003080:	494e      	ldr	r1, [pc, #312]	; (200031bc <initSprites+0x20c>)
20003082:	6a38      	ldr	r0, [r7, #32]
20003084:	2337      	movs	r3, #55	; 0x37
20003086:	226a      	movs	r2, #106	; 0x6a
20003088:	f001 faa0 	bl	200045cc <load_sprite>
	boom4Light = pointer19;
2000308c:	4b4c      	ldr	r3, [pc, #304]	; (200031c0 <initSprites+0x210>)
2000308e:	6a3a      	ldr	r2, [r7, #32]
20003090:	601a      	str	r2, [r3, #0]
	sprite *pointer20 = &tempBoom4Gray;
20003092:	4b4c      	ldr	r3, [pc, #304]	; (200031c4 <initSprites+0x214>)
20003094:	61fb      	str	r3, [r7, #28]
	load_sprite(pointer20, boom4_gray_bits, boom4_black_width, boom4_black_height);
20003096:	494c      	ldr	r1, [pc, #304]	; (200031c8 <initSprites+0x218>)
20003098:	69f8      	ldr	r0, [r7, #28]
2000309a:	2337      	movs	r3, #55	; 0x37
2000309c:	226a      	movs	r2, #106	; 0x6a
2000309e:	f001 fa95 	bl	200045cc <load_sprite>
	boom4Gray = pointer20;
200030a2:	4b4a      	ldr	r3, [pc, #296]	; (200031cc <initSprites+0x21c>)
200030a4:	69fa      	ldr	r2, [r7, #28]
200030a6:	601a      	str	r2, [r3, #0]
	sprite *pointer21 = &tempBoom4Black;
200030a8:	4b49      	ldr	r3, [pc, #292]	; (200031d0 <initSprites+0x220>)
200030aa:	61bb      	str	r3, [r7, #24]
	load_sprite(pointer21, boom4_black_bits, boom4_black_width, boom4_black_height);
200030ac:	4949      	ldr	r1, [pc, #292]	; (200031d4 <initSprites+0x224>)
200030ae:	69b8      	ldr	r0, [r7, #24]
200030b0:	2337      	movs	r3, #55	; 0x37
200030b2:	226a      	movs	r2, #106	; 0x6a
200030b4:	f001 fa8a 	bl	200045cc <load_sprite>
	boom4Black = pointer21;	
200030b8:	4b47      	ldr	r3, [pc, #284]	; (200031d8 <initSprites+0x228>)
200030ba:	69ba      	ldr	r2, [r7, #24]
200030bc:	601a      	str	r2, [r3, #0]
	
	sprite *pointer22 = &tempBoom5Light;
200030be:	4b47      	ldr	r3, [pc, #284]	; (200031dc <initSprites+0x22c>)
200030c0:	617b      	str	r3, [r7, #20]
	load_sprite(pointer22, boom5_light_bits, boom5_black_width, boom5_black_height);
200030c2:	4947      	ldr	r1, [pc, #284]	; (200031e0 <initSprites+0x230>)
200030c4:	6978      	ldr	r0, [r7, #20]
200030c6:	2337      	movs	r3, #55	; 0x37
200030c8:	226a      	movs	r2, #106	; 0x6a
200030ca:	f001 fa7f 	bl	200045cc <load_sprite>
	boom5Light = pointer22;
200030ce:	4b45      	ldr	r3, [pc, #276]	; (200031e4 <initSprites+0x234>)
200030d0:	697a      	ldr	r2, [r7, #20]
200030d2:	601a      	str	r2, [r3, #0]
	sprite *pointer23 = &tempBoom5Gray;
200030d4:	4b44      	ldr	r3, [pc, #272]	; (200031e8 <initSprites+0x238>)
200030d6:	613b      	str	r3, [r7, #16]
	load_sprite(pointer23, boom5_gray_bits, boom5_black_width, boom5_black_height);
200030d8:	4944      	ldr	r1, [pc, #272]	; (200031ec <initSprites+0x23c>)
200030da:	6938      	ldr	r0, [r7, #16]
200030dc:	2337      	movs	r3, #55	; 0x37
200030de:	226a      	movs	r2, #106	; 0x6a
200030e0:	f001 fa74 	bl	200045cc <load_sprite>
	boom5Gray = pointer23;
200030e4:	4b42      	ldr	r3, [pc, #264]	; (200031f0 <initSprites+0x240>)
200030e6:	693a      	ldr	r2, [r7, #16]
200030e8:	601a      	str	r2, [r3, #0]
	sprite *pointer24 = &tempBoom5Black;
200030ea:	4b42      	ldr	r3, [pc, #264]	; (200031f4 <initSprites+0x244>)
200030ec:	60fb      	str	r3, [r7, #12]
	load_sprite(pointer24, boom5_black_bits, boom5_black_width, boom5_black_height);
200030ee:	4942      	ldr	r1, [pc, #264]	; (200031f8 <initSprites+0x248>)
200030f0:	68f8      	ldr	r0, [r7, #12]
200030f2:	2337      	movs	r3, #55	; 0x37
200030f4:	226a      	movs	r2, #106	; 0x6a
200030f6:	f001 fa69 	bl	200045cc <load_sprite>
	boom5Black = pointer24;
200030fa:	4b40      	ldr	r3, [pc, #256]	; (200031fc <initSprites+0x24c>)
200030fc:	68fa      	ldr	r2, [r7, #12]
200030fe:	601a      	str	r2, [r3, #0]

	sprite *pointer25 = &tempBoom6Light;
20003100:	4b3f      	ldr	r3, [pc, #252]	; (20003200 <initSprites+0x250>)
20003102:	60bb      	str	r3, [r7, #8]
	load_sprite(pointer25, boom6_light_bits, boom6_black_width, boom6_black_height);
20003104:	493f      	ldr	r1, [pc, #252]	; (20003204 <initSprites+0x254>)
20003106:	68b8      	ldr	r0, [r7, #8]
20003108:	2337      	movs	r3, #55	; 0x37
2000310a:	226a      	movs	r2, #106	; 0x6a
2000310c:	f001 fa5e 	bl	200045cc <load_sprite>
	boom6Light = pointer25;
20003110:	4b3d      	ldr	r3, [pc, #244]	; (20003208 <initSprites+0x258>)
20003112:	68ba      	ldr	r2, [r7, #8]
20003114:	601a      	str	r2, [r3, #0]
	sprite *pointer26 = &tempBoom6Gray;
20003116:	4b3d      	ldr	r3, [pc, #244]	; (2000320c <initSprites+0x25c>)
20003118:	607b      	str	r3, [r7, #4]
	load_sprite(pointer26, boom6_gray_bits, boom6_black_width, boom6_black_height);
2000311a:	493d      	ldr	r1, [pc, #244]	; (20003210 <initSprites+0x260>)
2000311c:	6878      	ldr	r0, [r7, #4]
2000311e:	2337      	movs	r3, #55	; 0x37
20003120:	226a      	movs	r2, #106	; 0x6a
20003122:	f001 fa53 	bl	200045cc <load_sprite>
	boom6Gray = pointer26;
20003126:	4b3b      	ldr	r3, [pc, #236]	; (20003214 <initSprites+0x264>)
20003128:	687a      	ldr	r2, [r7, #4]
2000312a:	601a      	str	r2, [r3, #0]
	sprite *pointer27 = &tempBoom6Black;
2000312c:	4b3a      	ldr	r3, [pc, #232]	; (20003218 <initSprites+0x268>)
2000312e:	603b      	str	r3, [r7, #0]
	load_sprite(pointer27, boom6_black_bits, boom6_black_width, boom6_black_height);
20003130:	493a      	ldr	r1, [pc, #232]	; (2000321c <initSprites+0x26c>)
20003132:	6838      	ldr	r0, [r7, #0]
20003134:	2337      	movs	r3, #55	; 0x37
20003136:	226a      	movs	r2, #106	; 0x6a
20003138:	f001 fa48 	bl	200045cc <load_sprite>
	boom6Black = pointer27;
2000313c:	4b38      	ldr	r3, [pc, #224]	; (20003220 <initSprites+0x270>)
2000313e:	683a      	ldr	r2, [r7, #0]
20003140:	601a      	str	r2, [r3, #0]
}
20003142:	46c0      	nop			; (mov r8, r8)
20003144:	46bd      	mov	sp, r7
20003146:	b012      	add	sp, #72	; 0x48
20003148:	bd80      	pop	{r7, pc}
2000314a:	46c0      	nop			; (mov r8, r8)
2000314c:	20006074 	andcs	r6, r0, r4, ror r0
20003150:	2000b138 	andcs	fp, r0, r8, lsr r1
20003154:	200062e4 	andcs	r6, r0, r4, ror #5
20003158:	20006234 	andcs	r6, r0, r4, lsr r2
2000315c:	2000ae34 	andcs	sl, r0, r4, lsr lr
20003160:	20006280 	andcs	r6, r0, r0, lsl #5
20003164:	200062fc 	strdcs	r6, [r0], -ip
20003168:	2000ab30 	andcs	sl, r0, r0, lsr fp
2000316c:	20006244 	andcs	r6, r0, r4, asr #4
20003170:	200062cc 	andcs	r6, r0, ip, asr #5
20003174:	2000ba44 	andcs	fp, r0, r4, asr #20
20003178:	200062f8 	strdcs	r6, [r0], -r8
2000317c:	20006254 	andcs	r6, r0, r4, asr r2
20003180:	2000b740 	andcs	fp, r0, r0, asr #14
20003184:	20006240 	andcs	r6, r0, r0, asr #4
20003188:	20006068 	andcs	r6, r0, r8, rrx
2000318c:	2000b43c 	andcs	fp, r0, ip, lsr r4
20003190:	200062f4 	strdcs	r6, [r0], -r4
20003194:	20006140 	andcs	r6, r0, r0, asr #2
20003198:	2000c350 	andcs	ip, r0, r0, asr r3
2000319c:	200060a4 	andcs	r6, r0, r4, lsr #1
200031a0:	2000626c 	andcs	r6, r0, ip, ror #4
200031a4:	2000c04c 	andcs	ip, r0, ip, asr #32
200031a8:	200060fc 	strdcs	r6, [r0], -ip
200031ac:	20006218 	andcs	r6, r0, r8, lsl r2
200031b0:	2000bd48 	andcs	fp, r0, r8, asr #26
200031b4:	200060a8 	andcs	r6, r0, r8, lsr #1
200031b8:	20006100 	andcs	r6, r0, r0, lsl #2
200031bc:	2000cc5c 	andcs	ip, r0, ip, asr ip
200031c0:	200060c8 	andcs	r6, r0, r8, asr #1
200031c4:	20006260 	andcs	r6, r0, r0, ror #4
200031c8:	2000c958 	andcs	ip, r0, r8, asr r9
200031cc:	20006278 	andcs	r6, r0, r8, ror r2
200031d0:	200062c0 	andcs	r6, r0, r0, asr #5
200031d4:	2000c654 	andcs	ip, r0, r4, asr r6
200031d8:	20006224 	andcs	r6, r0, r4, lsr #4
200031dc:	200062b4 			; <UNDEFINED> instruction: 0x200062b4
200031e0:	2000d568 	andcs	sp, r0, r8, ror #10
200031e4:	2000627c 	andcs	r6, r0, ip, ror r2
200031e8:	2000605c 	andcs	r6, r0, ip, asr r0
200031ec:	2000d264 	andcs	sp, r0, r4, ror #4
200031f0:	2000610c 	andcs	r6, r0, ip, lsl #2
200031f4:	200062d8 	ldrdcs	r6, [r0], -r8
200031f8:	2000cf60 	andcs	ip, r0, r0, ror #30
200031fc:	200060c4 	andcs	r6, r0, r4, asr #1
20003200:	20006080 	andcs	r6, r0, r0, lsl #1
20003204:	2000de74 	andcs	sp, r0, r4, ror lr
20003208:	2000615c 	andcs	r6, r0, ip, asr r1
2000320c:	20006248 	andcs	r6, r0, r8, asr #4
20003210:	2000db70 	andcs	sp, r0, r0, ror fp
20003214:	2000614c 	andcs	r6, r0, ip, asr #2
20003218:	20006228 	andcs	r6, r0, r8, lsr #4
2000321c:	2000d86c 	andcs	sp, r0, ip, ror #16
20003220:	20006214 	andcs	r6, r0, r4, lsl r2

20003224 <init_boom>:
	
void init_boom( GameObject *boomObj ) {
20003224:	b590      	push	{r4, r7, lr}
20003226:	b083      	sub	sp, #12
20003228:	af00      	add	r7, sp, #0
2000322a:	6078      	str	r0, [r7, #4]
	static int firstTime = 1;
	if (firstTime) {
2000322c:	4b7a      	ldr	r3, [pc, #488]	; (20003418 <init_boom+0x1f4>)
2000322e:	681b      	ldr	r3, [r3, #0]
20003230:	2b00      	cmp	r3, #0
20003232:	d100      	bne.n	20003236 <init_boom+0x12>
20003234:	e0dd      	b.n	200033f2 <init_boom+0x1ce>
		initSprites();
20003236:	f7ff febb 	bl	20002fb0 <initSprites>
		firstTime = 0;			
2000323a:	4b77      	ldr	r3, [pc, #476]	; (20003418 <init_boom+0x1f4>)
2000323c:	2200      	movs	r2, #0
2000323e:	601a      	str	r2, [r3, #0]

		boomImages[0] = boom1Image;
20003240:	4b76      	ldr	r3, [pc, #472]	; (2000341c <init_boom+0x1f8>)
20003242:	4a77      	ldr	r2, [pc, #476]	; (20003420 <init_boom+0x1fc>)
20003244:	ca13      	ldmia	r2!, {r0, r1, r4}
20003246:	c313      	stmia	r3!, {r0, r1, r4}
		boomImages[1] = boom2Image;
20003248:	4b74      	ldr	r3, [pc, #464]	; (2000341c <init_boom+0x1f8>)
2000324a:	4a76      	ldr	r2, [pc, #472]	; (20003424 <init_boom+0x200>)
2000324c:	330c      	adds	r3, #12
2000324e:	ca13      	ldmia	r2!, {r0, r1, r4}
20003250:	c313      	stmia	r3!, {r0, r1, r4}
		boomImages[2] = boom3Image;
20003252:	4b72      	ldr	r3, [pc, #456]	; (2000341c <init_boom+0x1f8>)
20003254:	4a74      	ldr	r2, [pc, #464]	; (20003428 <init_boom+0x204>)
20003256:	3318      	adds	r3, #24
20003258:	ca13      	ldmia	r2!, {r0, r1, r4}
2000325a:	c313      	stmia	r3!, {r0, r1, r4}
		boomImages[3] = boom4Image;
2000325c:	4b6f      	ldr	r3, [pc, #444]	; (2000341c <init_boom+0x1f8>)
2000325e:	4a73      	ldr	r2, [pc, #460]	; (2000342c <init_boom+0x208>)
20003260:	3324      	adds	r3, #36	; 0x24
20003262:	ca13      	ldmia	r2!, {r0, r1, r4}
20003264:	c313      	stmia	r3!, {r0, r1, r4}
		boomImages[4] = boom5Image;
20003266:	4b6d      	ldr	r3, [pc, #436]	; (2000341c <init_boom+0x1f8>)
20003268:	4a71      	ldr	r2, [pc, #452]	; (20003430 <init_boom+0x20c>)
2000326a:	3330      	adds	r3, #48	; 0x30
2000326c:	ca13      	ldmia	r2!, {r0, r1, r4}
2000326e:	c313      	stmia	r3!, {r0, r1, r4}
		boomImages[5] = boom6Image;
20003270:	4b6a      	ldr	r3, [pc, #424]	; (2000341c <init_boom+0x1f8>)
20003272:	4a70      	ldr	r2, [pc, #448]	; (20003434 <init_boom+0x210>)
20003274:	333c      	adds	r3, #60	; 0x3c
20003276:	ca13      	ldmia	r2!, {r0, r1, r4}
20003278:	c313      	stmia	r3!, {r0, r1, r4}
		boomImages[6] = boom7Image;
2000327a:	4b68      	ldr	r3, [pc, #416]	; (2000341c <init_boom+0x1f8>)
2000327c:	4a6e      	ldr	r2, [pc, #440]	; (20003438 <init_boom+0x214>)
2000327e:	3348      	adds	r3, #72	; 0x48
20003280:	ca13      	ldmia	r2!, {r0, r1, r4}
20003282:	c313      	stmia	r3!, {r0, r1, r4}
		boomImages[7] = boom8Image;
20003284:	4b65      	ldr	r3, [pc, #404]	; (2000341c <init_boom+0x1f8>)
20003286:	4a6d      	ldr	r2, [pc, #436]	; (2000343c <init_boom+0x218>)
20003288:	3354      	adds	r3, #84	; 0x54
2000328a:	ca13      	ldmia	r2!, {r0, r1, r4}
2000328c:	c313      	stmia	r3!, {r0, r1, r4}
		boomImages[8] = boom9Image;
2000328e:	4b63      	ldr	r3, [pc, #396]	; (2000341c <init_boom+0x1f8>)
20003290:	4a6b      	ldr	r2, [pc, #428]	; (20003440 <init_boom+0x21c>)
20003292:	3360      	adds	r3, #96	; 0x60
20003294:	ca13      	ldmia	r2!, {r0, r1, r4}
20003296:	c313      	stmia	r3!, {r0, r1, r4}
		boomImages[9] = boom10Image;
20003298:	4b60      	ldr	r3, [pc, #384]	; (2000341c <init_boom+0x1f8>)
2000329a:	4a6a      	ldr	r2, [pc, #424]	; (20003444 <init_boom+0x220>)
2000329c:	336c      	adds	r3, #108	; 0x6c
2000329e:	ca13      	ldmia	r2!, {r0, r1, r4}
200032a0:	c313      	stmia	r3!, {r0, r1, r4}
		boomImages[10] = boom11Image;
200032a2:	4b5e      	ldr	r3, [pc, #376]	; (2000341c <init_boom+0x1f8>)
200032a4:	4a68      	ldr	r2, [pc, #416]	; (20003448 <init_boom+0x224>)
200032a6:	3378      	adds	r3, #120	; 0x78
200032a8:	ca13      	ldmia	r2!, {r0, r1, r4}
200032aa:	c313      	stmia	r3!, {r0, r1, r4}
		boomImages[11] = boom12Image;
200032ac:	4b5b      	ldr	r3, [pc, #364]	; (2000341c <init_boom+0x1f8>)
200032ae:	2284      	movs	r2, #132	; 0x84
200032b0:	4966      	ldr	r1, [pc, #408]	; (2000344c <init_boom+0x228>)
200032b2:	189b      	adds	r3, r3, r2
200032b4:	000a      	movs	r2, r1
200032b6:	ca13      	ldmia	r2!, {r0, r1, r4}
200032b8:	c313      	stmia	r3!, {r0, r1, r4}
		boomImages[12] = boom13Image;
200032ba:	4b58      	ldr	r3, [pc, #352]	; (2000341c <init_boom+0x1f8>)
200032bc:	2290      	movs	r2, #144	; 0x90
200032be:	4964      	ldr	r1, [pc, #400]	; (20003450 <init_boom+0x22c>)
200032c0:	189b      	adds	r3, r3, r2
200032c2:	000a      	movs	r2, r1
200032c4:	ca13      	ldmia	r2!, {r0, r1, r4}
200032c6:	c313      	stmia	r3!, {r0, r1, r4}
		boomImages[13] = boom14Image;
200032c8:	4b54      	ldr	r3, [pc, #336]	; (2000341c <init_boom+0x1f8>)
200032ca:	229c      	movs	r2, #156	; 0x9c
200032cc:	4961      	ldr	r1, [pc, #388]	; (20003454 <init_boom+0x230>)
200032ce:	189b      	adds	r3, r3, r2
200032d0:	000a      	movs	r2, r1
200032d2:	ca13      	ldmia	r2!, {r0, r1, r4}
200032d4:	c313      	stmia	r3!, {r0, r1, r4}
		boomImages[14] = boom15Image;
200032d6:	4b51      	ldr	r3, [pc, #324]	; (2000341c <init_boom+0x1f8>)
200032d8:	22a8      	movs	r2, #168	; 0xa8
200032da:	495f      	ldr	r1, [pc, #380]	; (20003458 <init_boom+0x234>)
200032dc:	189b      	adds	r3, r3, r2
200032de:	000a      	movs	r2, r1
200032e0:	ca13      	ldmia	r2!, {r0, r1, r4}
200032e2:	c313      	stmia	r3!, {r0, r1, r4}
		
		load_image(&boomImages[0], boom1Black, boom1Gray, boom1Light);
200032e4:	4b5d      	ldr	r3, [pc, #372]	; (2000345c <init_boom+0x238>)
200032e6:	6819      	ldr	r1, [r3, #0]
200032e8:	4b5d      	ldr	r3, [pc, #372]	; (20003460 <init_boom+0x23c>)
200032ea:	681a      	ldr	r2, [r3, #0]
200032ec:	4b5d      	ldr	r3, [pc, #372]	; (20003464 <init_boom+0x240>)
200032ee:	681b      	ldr	r3, [r3, #0]
200032f0:	484a      	ldr	r0, [pc, #296]	; (2000341c <init_boom+0x1f8>)
200032f2:	f001 f957 	bl	200045a4 <load_image>
		load_image(&boomImages[1], boom2Black, boom2Gray, boom2Light);
200032f6:	4b5c      	ldr	r3, [pc, #368]	; (20003468 <init_boom+0x244>)
200032f8:	6819      	ldr	r1, [r3, #0]
200032fa:	4b5c      	ldr	r3, [pc, #368]	; (2000346c <init_boom+0x248>)
200032fc:	681a      	ldr	r2, [r3, #0]
200032fe:	4b5c      	ldr	r3, [pc, #368]	; (20003470 <init_boom+0x24c>)
20003300:	681b      	ldr	r3, [r3, #0]
20003302:	485c      	ldr	r0, [pc, #368]	; (20003474 <init_boom+0x250>)
20003304:	f001 f94e 	bl	200045a4 <load_image>
		load_image(&boomImages[2], boom3Black, boom3Gray, boom3Light);
20003308:	4b5b      	ldr	r3, [pc, #364]	; (20003478 <init_boom+0x254>)
2000330a:	6819      	ldr	r1, [r3, #0]
2000330c:	4b5b      	ldr	r3, [pc, #364]	; (2000347c <init_boom+0x258>)
2000330e:	681a      	ldr	r2, [r3, #0]
20003310:	4b5b      	ldr	r3, [pc, #364]	; (20003480 <init_boom+0x25c>)
20003312:	681b      	ldr	r3, [r3, #0]
20003314:	485b      	ldr	r0, [pc, #364]	; (20003484 <init_boom+0x260>)
20003316:	f001 f945 	bl	200045a4 <load_image>
		load_image(&boomImages[3], boom4Black, boom4Gray, boom4Light);
2000331a:	4b5b      	ldr	r3, [pc, #364]	; (20003488 <init_boom+0x264>)
2000331c:	6819      	ldr	r1, [r3, #0]
2000331e:	4b5b      	ldr	r3, [pc, #364]	; (2000348c <init_boom+0x268>)
20003320:	681a      	ldr	r2, [r3, #0]
20003322:	4b5b      	ldr	r3, [pc, #364]	; (20003490 <init_boom+0x26c>)
20003324:	681b      	ldr	r3, [r3, #0]
20003326:	485b      	ldr	r0, [pc, #364]	; (20003494 <init_boom+0x270>)
20003328:	f001 f93c 	bl	200045a4 <load_image>
		load_image(&boomImages[4], boom5Black, boom5Gray, boom5Light);
2000332c:	4b5a      	ldr	r3, [pc, #360]	; (20003498 <init_boom+0x274>)
2000332e:	6819      	ldr	r1, [r3, #0]
20003330:	4b5a      	ldr	r3, [pc, #360]	; (2000349c <init_boom+0x278>)
20003332:	681a      	ldr	r2, [r3, #0]
20003334:	4b5a      	ldr	r3, [pc, #360]	; (200034a0 <init_boom+0x27c>)
20003336:	681b      	ldr	r3, [r3, #0]
20003338:	485a      	ldr	r0, [pc, #360]	; (200034a4 <init_boom+0x280>)
2000333a:	f001 f933 	bl	200045a4 <load_image>
		load_image(&boomImages[5], boom6Black, boom6Gray, boom6Light);
2000333e:	4b5a      	ldr	r3, [pc, #360]	; (200034a8 <init_boom+0x284>)
20003340:	6819      	ldr	r1, [r3, #0]
20003342:	4b5a      	ldr	r3, [pc, #360]	; (200034ac <init_boom+0x288>)
20003344:	681a      	ldr	r2, [r3, #0]
20003346:	4b5a      	ldr	r3, [pc, #360]	; (200034b0 <init_boom+0x28c>)
20003348:	681b      	ldr	r3, [r3, #0]
2000334a:	485a      	ldr	r0, [pc, #360]	; (200034b4 <init_boom+0x290>)
2000334c:	f001 f92a 	bl	200045a4 <load_image>
		load_image(&boomImages[6], boom6Black, boom6Gray, boom6Light);
20003350:	4b55      	ldr	r3, [pc, #340]	; (200034a8 <init_boom+0x284>)
20003352:	6819      	ldr	r1, [r3, #0]
20003354:	4b55      	ldr	r3, [pc, #340]	; (200034ac <init_boom+0x288>)
20003356:	681a      	ldr	r2, [r3, #0]
20003358:	4b55      	ldr	r3, [pc, #340]	; (200034b0 <init_boom+0x28c>)
2000335a:	681b      	ldr	r3, [r3, #0]
2000335c:	4856      	ldr	r0, [pc, #344]	; (200034b8 <init_boom+0x294>)
2000335e:	f001 f921 	bl	200045a4 <load_image>
		load_image(&boomImages[7], boom6Black, boom6Gray, boom6Light);
20003362:	4b51      	ldr	r3, [pc, #324]	; (200034a8 <init_boom+0x284>)
20003364:	6819      	ldr	r1, [r3, #0]
20003366:	4b51      	ldr	r3, [pc, #324]	; (200034ac <init_boom+0x288>)
20003368:	681a      	ldr	r2, [r3, #0]
2000336a:	4b51      	ldr	r3, [pc, #324]	; (200034b0 <init_boom+0x28c>)
2000336c:	681b      	ldr	r3, [r3, #0]
2000336e:	4853      	ldr	r0, [pc, #332]	; (200034bc <init_boom+0x298>)
20003370:	f001 f918 	bl	200045a4 <load_image>
		load_image(&boomImages[8], boom6Black, boom6Gray, boom6Light);
20003374:	4b4c      	ldr	r3, [pc, #304]	; (200034a8 <init_boom+0x284>)
20003376:	6819      	ldr	r1, [r3, #0]
20003378:	4b4c      	ldr	r3, [pc, #304]	; (200034ac <init_boom+0x288>)
2000337a:	681a      	ldr	r2, [r3, #0]
2000337c:	4b4c      	ldr	r3, [pc, #304]	; (200034b0 <init_boom+0x28c>)
2000337e:	681b      	ldr	r3, [r3, #0]
20003380:	484f      	ldr	r0, [pc, #316]	; (200034c0 <init_boom+0x29c>)
20003382:	f001 f90f 	bl	200045a4 <load_image>
		load_image(&boomImages[9], boom6Black, boom6Gray, boom6Light);
20003386:	4b48      	ldr	r3, [pc, #288]	; (200034a8 <init_boom+0x284>)
20003388:	6819      	ldr	r1, [r3, #0]
2000338a:	4b48      	ldr	r3, [pc, #288]	; (200034ac <init_boom+0x288>)
2000338c:	681a      	ldr	r2, [r3, #0]
2000338e:	4b48      	ldr	r3, [pc, #288]	; (200034b0 <init_boom+0x28c>)
20003390:	681b      	ldr	r3, [r3, #0]
20003392:	484c      	ldr	r0, [pc, #304]	; (200034c4 <init_boom+0x2a0>)
20003394:	f001 f906 	bl	200045a4 <load_image>
		load_image(&boomImages[10], boom6Black, boom6Gray, boom6Light);
20003398:	4b43      	ldr	r3, [pc, #268]	; (200034a8 <init_boom+0x284>)
2000339a:	6819      	ldr	r1, [r3, #0]
2000339c:	4b43      	ldr	r3, [pc, #268]	; (200034ac <init_boom+0x288>)
2000339e:	681a      	ldr	r2, [r3, #0]
200033a0:	4b43      	ldr	r3, [pc, #268]	; (200034b0 <init_boom+0x28c>)
200033a2:	681b      	ldr	r3, [r3, #0]
200033a4:	4848      	ldr	r0, [pc, #288]	; (200034c8 <init_boom+0x2a4>)
200033a6:	f001 f8fd 	bl	200045a4 <load_image>
		load_image(&boomImages[11], boom6Black, boom6Gray, boom6Light);
200033aa:	4b3f      	ldr	r3, [pc, #252]	; (200034a8 <init_boom+0x284>)
200033ac:	6819      	ldr	r1, [r3, #0]
200033ae:	4b3f      	ldr	r3, [pc, #252]	; (200034ac <init_boom+0x288>)
200033b0:	681a      	ldr	r2, [r3, #0]
200033b2:	4b3f      	ldr	r3, [pc, #252]	; (200034b0 <init_boom+0x28c>)
200033b4:	681b      	ldr	r3, [r3, #0]
200033b6:	4845      	ldr	r0, [pc, #276]	; (200034cc <init_boom+0x2a8>)
200033b8:	f001 f8f4 	bl	200045a4 <load_image>
		load_image(&boomImages[12], boom6Black, boom6Gray, boom6Light);
200033bc:	4b3a      	ldr	r3, [pc, #232]	; (200034a8 <init_boom+0x284>)
200033be:	6819      	ldr	r1, [r3, #0]
200033c0:	4b3a      	ldr	r3, [pc, #232]	; (200034ac <init_boom+0x288>)
200033c2:	681a      	ldr	r2, [r3, #0]
200033c4:	4b3a      	ldr	r3, [pc, #232]	; (200034b0 <init_boom+0x28c>)
200033c6:	681b      	ldr	r3, [r3, #0]
200033c8:	4841      	ldr	r0, [pc, #260]	; (200034d0 <init_boom+0x2ac>)
200033ca:	f001 f8eb 	bl	200045a4 <load_image>
		load_image(&boomImages[13], boom6Black, boom6Gray, boom6Light);
200033ce:	4b36      	ldr	r3, [pc, #216]	; (200034a8 <init_boom+0x284>)
200033d0:	6819      	ldr	r1, [r3, #0]
200033d2:	4b36      	ldr	r3, [pc, #216]	; (200034ac <init_boom+0x288>)
200033d4:	681a      	ldr	r2, [r3, #0]
200033d6:	4b36      	ldr	r3, [pc, #216]	; (200034b0 <init_boom+0x28c>)
200033d8:	681b      	ldr	r3, [r3, #0]
200033da:	483e      	ldr	r0, [pc, #248]	; (200034d4 <init_boom+0x2b0>)
200033dc:	f001 f8e2 	bl	200045a4 <load_image>
		load_image(&boomImages[14], boom6Black, boom6Gray, boom6Light);
200033e0:	4b31      	ldr	r3, [pc, #196]	; (200034a8 <init_boom+0x284>)
200033e2:	6819      	ldr	r1, [r3, #0]
200033e4:	4b31      	ldr	r3, [pc, #196]	; (200034ac <init_boom+0x288>)
200033e6:	681a      	ldr	r2, [r3, #0]
200033e8:	4b31      	ldr	r3, [pc, #196]	; (200034b0 <init_boom+0x28c>)
200033ea:	681b      	ldr	r3, [r3, #0]
200033ec:	483a      	ldr	r0, [pc, #232]	; (200034d8 <init_boom+0x2b4>)
200033ee:	f001 f8d9 	bl	200045a4 <load_image>
	}
	
	boomObj->images = boomImages;
200033f2:	687b      	ldr	r3, [r7, #4]
200033f4:	4a09      	ldr	r2, [pc, #36]	; (2000341c <init_boom+0x1f8>)
200033f6:	601a      	str	r2, [r3, #0]

	boomObj->current_frame = 0;
200033f8:	687b      	ldr	r3, [r7, #4]
200033fa:	2200      	movs	r2, #0
200033fc:	615a      	str	r2, [r3, #20]
	boomObj->n_frames = 15;
200033fe:	687b      	ldr	r3, [r7, #4]
20003400:	220f      	movs	r2, #15
20003402:	619a      	str	r2, [r3, #24]
	boomObj->animation_speed = 1;
20003404:	687b      	ldr	r3, [r7, #4]
20003406:	2201      	movs	r2, #1
20003408:	61da      	str	r2, [r3, #28]
	boomObj->animation_counter = 0;
2000340a:	687b      	ldr	r3, [r7, #4]
2000340c:	2200      	movs	r2, #0
2000340e:	621a      	str	r2, [r3, #32]
}
20003410:	46c0      	nop			; (mov r8, r8)
20003412:	46bd      	mov	sp, r7
20003414:	b003      	add	sp, #12
20003416:	bd90      	pop	{r4, r7, pc}
20003418:	2000e178 	andcs	lr, r0, r8, ror r1
2000341c:	20006160 	andcs	r6, r0, r0, ror #2
20003420:	20006290 	mulcs	r0, r0, r2
20003424:	200060b8 	strhcs	r6, [r0], -r8
20003428:	200062a8 	andcs	r6, r0, r8, lsr #5
2000342c:	200060ac 	andcs	r6, r0, ip, lsr #1
20003430:	200060f0 	strdcs	r6, [r0], -r0
20003434:	20006134 	andcs	r6, r0, r4, lsr r1
20003438:	2000629c 	mulcs	r0, ip, r2
2000343c:	200060e4 	andcs	r6, r0, r4, ror #1
20003440:	2000608c 	andcs	r6, r0, ip, lsl #1
20003444:	200060cc 	andcs	r6, r0, ip, asr #1
20003448:	20006284 	andcs	r6, r0, r4, lsl #5
2000344c:	20006098 	mulcs	r0, r8, r0
20003450:	20006150 	andcs	r6, r0, r0, asr r1
20003454:	200060d8 	ldrdcs	r6, [r0], -r8
20003458:	200062e8 	andcs	r6, r0, r8, ror #5
2000345c:	20006244 	andcs	r6, r0, r4, asr #4
20003460:	20006280 	andcs	r6, r0, r0, lsl #5
20003464:	200062e4 	andcs	r6, r0, r4, ror #5
20003468:	200062f4 	strdcs	r6, [r0], -r4
2000346c:	20006240 	andcs	r6, r0, r0, asr #4
20003470:	200062f8 	strdcs	r6, [r0], -r8
20003474:	2000616c 	andcs	r6, r0, ip, ror #2
20003478:	200060a8 	andcs	r6, r0, r8, lsr #1
2000347c:	200060fc 	strdcs	r6, [r0], -ip
20003480:	200060a4 	andcs	r6, r0, r4, lsr #1
20003484:	20006178 	andcs	r6, r0, r8, ror r1
20003488:	20006224 	andcs	r6, r0, r4, lsr #4
2000348c:	20006278 	andcs	r6, r0, r8, ror r2
20003490:	200060c8 	andcs	r6, r0, r8, asr #1
20003494:	20006184 	andcs	r6, r0, r4, lsl #3
20003498:	200060c4 	andcs	r6, r0, r4, asr #1
2000349c:	2000610c 	andcs	r6, r0, ip, lsl #2
200034a0:	2000627c 	andcs	r6, r0, ip, ror r2
200034a4:	20006190 	mulcs	r0, r0, r1
200034a8:	20006214 	andcs	r6, r0, r4, lsl r2
200034ac:	2000614c 	andcs	r6, r0, ip, asr #2
200034b0:	2000615c 	andcs	r6, r0, ip, asr r1
200034b4:	2000619c 	mulcs	r0, ip, r1
200034b8:	200061a8 	andcs	r6, r0, r8, lsr #3
200034bc:	200061b4 			; <UNDEFINED> instruction: 0x200061b4
200034c0:	200061c0 	andcs	r6, r0, r0, asr #3
200034c4:	200061cc 	andcs	r6, r0, ip, asr #3
200034c8:	200061d8 	ldrdcs	r6, [r0], -r8
200034cc:	200061e4 	andcs	r6, r0, r4, ror #3
200034d0:	200061f0 	strdcs	r6, [r0], -r0
200034d4:	200061fc 	strdcs	r6, [r0], -ip
200034d8:	20006208 	andcs	r6, r0, r8, lsl #4

200034dc <initSprites>:
Image dragon1Image;
Image dragon2Image;
Image dragon3Image;
Image dragon4Image;
Image dragonImages[4];
static void initSprites( void ) {	
200034dc:	b580      	push	{r7, lr}
200034de:	b08a      	sub	sp, #40	; 0x28
200034e0:	af00      	add	r7, sp, #0
	
	sprite *pointer11 = &tempDragonLight;
200034e2:	4b33      	ldr	r3, [pc, #204]	; (200035b0 <initSprites+0xd4>)
200034e4:	627b      	str	r3, [r7, #36]	; 0x24
	load_sprite(pointer11, dragon1_light_bits, dragon1_black_width, dragon1_black_height);
200034e6:	4933      	ldr	r1, [pc, #204]	; (200035b4 <initSprites+0xd8>)
200034e8:	6a78      	ldr	r0, [r7, #36]	; 0x24
200034ea:	2317      	movs	r3, #23
200034ec:	2240      	movs	r2, #64	; 0x40
200034ee:	f001 f86d 	bl	200045cc <load_sprite>
	dragon1Light = pointer11;
200034f2:	4b31      	ldr	r3, [pc, #196]	; (200035b8 <initSprites+0xdc>)
200034f4:	6a7a      	ldr	r2, [r7, #36]	; 0x24
200034f6:	601a      	str	r2, [r3, #0]
	sprite *pointer12 = &tempDragonGray;
200034f8:	4b30      	ldr	r3, [pc, #192]	; (200035bc <initSprites+0xe0>)
200034fa:	623b      	str	r3, [r7, #32]
	load_sprite(pointer12, dragon1_gray_bits, dragon1_black_width, dragon1_black_height);
200034fc:	4930      	ldr	r1, [pc, #192]	; (200035c0 <initSprites+0xe4>)
200034fe:	6a38      	ldr	r0, [r7, #32]
20003500:	2317      	movs	r3, #23
20003502:	2240      	movs	r2, #64	; 0x40
20003504:	f001 f862 	bl	200045cc <load_sprite>
	dragon1Gray = pointer12;
20003508:	4b2e      	ldr	r3, [pc, #184]	; (200035c4 <initSprites+0xe8>)
2000350a:	6a3a      	ldr	r2, [r7, #32]
2000350c:	601a      	str	r2, [r3, #0]
	sprite *pointer13 = &tempDragonBlack;
2000350e:	4b2e      	ldr	r3, [pc, #184]	; (200035c8 <initSprites+0xec>)
20003510:	61fb      	str	r3, [r7, #28]
	load_sprite(pointer13, dragon1_black_bits, dragon1_black_width, dragon1_black_height);
20003512:	492e      	ldr	r1, [pc, #184]	; (200035cc <initSprites+0xf0>)
20003514:	69f8      	ldr	r0, [r7, #28]
20003516:	2317      	movs	r3, #23
20003518:	2240      	movs	r2, #64	; 0x40
2000351a:	f001 f857 	bl	200045cc <load_sprite>
	dragon1Black = pointer13;	
2000351e:	4b2c      	ldr	r3, [pc, #176]	; (200035d0 <initSprites+0xf4>)
20003520:	69fa      	ldr	r2, [r7, #28]
20003522:	601a      	str	r2, [r3, #0]
	
	sprite *pointer14 = &tempDragon2Light;
20003524:	4b2b      	ldr	r3, [pc, #172]	; (200035d4 <initSprites+0xf8>)
20003526:	61bb      	str	r3, [r7, #24]
	load_sprite(pointer14, dragon2_light_bits, dragon2_black_width, dragon2_black_height);
20003528:	492b      	ldr	r1, [pc, #172]	; (200035d8 <initSprites+0xfc>)
2000352a:	69b8      	ldr	r0, [r7, #24]
2000352c:	2317      	movs	r3, #23
2000352e:	2240      	movs	r2, #64	; 0x40
20003530:	f001 f84c 	bl	200045cc <load_sprite>
	dragon2Light = pointer14;
20003534:	4b29      	ldr	r3, [pc, #164]	; (200035dc <initSprites+0x100>)
20003536:	69ba      	ldr	r2, [r7, #24]
20003538:	601a      	str	r2, [r3, #0]
	sprite *pointer15 = &tempDragon2Gray;
2000353a:	4b29      	ldr	r3, [pc, #164]	; (200035e0 <initSprites+0x104>)
2000353c:	617b      	str	r3, [r7, #20]
	load_sprite(pointer15, dragon2_gray_bits, dragon2_black_width, dragon2_black_height);
2000353e:	4929      	ldr	r1, [pc, #164]	; (200035e4 <initSprites+0x108>)
20003540:	6978      	ldr	r0, [r7, #20]
20003542:	2317      	movs	r3, #23
20003544:	2240      	movs	r2, #64	; 0x40
20003546:	f001 f841 	bl	200045cc <load_sprite>
	dragon2Gray = pointer15;
2000354a:	4b27      	ldr	r3, [pc, #156]	; (200035e8 <initSprites+0x10c>)
2000354c:	697a      	ldr	r2, [r7, #20]
2000354e:	601a      	str	r2, [r3, #0]
	sprite *pointer16 = &tempDragon2Black;
20003550:	4b26      	ldr	r3, [pc, #152]	; (200035ec <initSprites+0x110>)
20003552:	613b      	str	r3, [r7, #16]
	load_sprite(pointer16, dragon2_black_bits, dragon2_black_width, dragon2_black_height);
20003554:	4926      	ldr	r1, [pc, #152]	; (200035f0 <initSprites+0x114>)
20003556:	6938      	ldr	r0, [r7, #16]
20003558:	2317      	movs	r3, #23
2000355a:	2240      	movs	r2, #64	; 0x40
2000355c:	f001 f836 	bl	200045cc <load_sprite>
	dragon2Black = pointer16;
20003560:	4b24      	ldr	r3, [pc, #144]	; (200035f4 <initSprites+0x118>)
20003562:	693a      	ldr	r2, [r7, #16]
20003564:	601a      	str	r2, [r3, #0]
	
	
	sprite *finalPointer = &tempDragon3Light;
20003566:	4b24      	ldr	r3, [pc, #144]	; (200035f8 <initSprites+0x11c>)
20003568:	60fb      	str	r3, [r7, #12]
	load_sprite(finalPointer, dragon3_light_bits, dragon3_black_width, dragon3_black_height);
2000356a:	4924      	ldr	r1, [pc, #144]	; (200035fc <initSprites+0x120>)
2000356c:	68f8      	ldr	r0, [r7, #12]
2000356e:	2317      	movs	r3, #23
20003570:	2240      	movs	r2, #64	; 0x40
20003572:	f001 f82b 	bl	200045cc <load_sprite>
	dragon3Light = finalPointer;
20003576:	4b22      	ldr	r3, [pc, #136]	; (20003600 <initSprites+0x124>)
20003578:	68fa      	ldr	r2, [r7, #12]
2000357a:	601a      	str	r2, [r3, #0]
	sprite *pointer17 = &tempDragon3Gray;
2000357c:	4b21      	ldr	r3, [pc, #132]	; (20003604 <initSprites+0x128>)
2000357e:	60bb      	str	r3, [r7, #8]
	load_sprite(pointer17, dragon3_gray_bits, dragon3_black_width, dragon3_black_height);
20003580:	4921      	ldr	r1, [pc, #132]	; (20003608 <initSprites+0x12c>)
20003582:	68b8      	ldr	r0, [r7, #8]
20003584:	2317      	movs	r3, #23
20003586:	2240      	movs	r2, #64	; 0x40
20003588:	f001 f820 	bl	200045cc <load_sprite>
	dragon3Gray = pointer17;
2000358c:	4b1f      	ldr	r3, [pc, #124]	; (2000360c <initSprites+0x130>)
2000358e:	68ba      	ldr	r2, [r7, #8]
20003590:	601a      	str	r2, [r3, #0]
	sprite *pointer18 = &tempDragon3Black;
20003592:	4b1f      	ldr	r3, [pc, #124]	; (20003610 <initSprites+0x134>)
20003594:	607b      	str	r3, [r7, #4]
	load_sprite(pointer18, dragon3_black_bits, dragon3_black_width, dragon3_black_height);
20003596:	491f      	ldr	r1, [pc, #124]	; (20003614 <initSprites+0x138>)
20003598:	6878      	ldr	r0, [r7, #4]
2000359a:	2317      	movs	r3, #23
2000359c:	2240      	movs	r2, #64	; 0x40
2000359e:	f001 f815 	bl	200045cc <load_sprite>
	dragon3Black = pointer18;	
200035a2:	4b1d      	ldr	r3, [pc, #116]	; (20003618 <initSprites+0x13c>)
200035a4:	687a      	ldr	r2, [r7, #4]
200035a6:	601a      	str	r2, [r3, #0]
	
}
200035a8:	46c0      	nop			; (mov r8, r8)
200035aa:	46bd      	mov	sp, r7
200035ac:	b00a      	add	sp, #40	; 0x28
200035ae:	bd80      	pop	{r7, pc}
200035b0:	200063c8 	andcs	r6, r0, r8, asr #7
200035b4:	2000e2ec 	andcs	lr, r0, ip, ror #5
200035b8:	20006378 	andcs	r6, r0, r8, ror r3
200035bc:	200063ec 	andcs	r6, r0, ip, ror #7
200035c0:	2000e234 	andcs	lr, r0, r4, lsr r2
200035c4:	20006324 	andcs	r6, r0, r4, lsr #6
200035c8:	200063d4 	ldrdcs	r6, [r0], -r4
200035cc:	2000e17c 	andcs	lr, r0, ip, ror r1
200035d0:	20006308 	andcs	r6, r0, r8, lsl #6
200035d4:	20006338 	andcs	r6, r0, r8, lsr r3
200035d8:	2000e514 	andcs	lr, r0, r4, lsl r5
200035dc:	200063c4 	andcs	r6, r0, r4, asr #7
200035e0:	2000637c 	andcs	r6, r0, ip, ror r3
200035e4:	2000e45c 	andcs	lr, r0, ip, asr r4
200035e8:	20006334 	andcs	r6, r0, r4, lsr r3
200035ec:	200063a4 	andcs	r6, r0, r4, lsr #7
200035f0:	2000e3a4 	andcs	lr, r0, r4, lsr #7
200035f4:	20006388 	andcs	r6, r0, r8, lsl #7
200035f8:	20006398 	mulcs	r0, r8, r3
200035fc:	2000e73c 	andcs	lr, r0, ip, lsr r7
20003600:	200063b0 			; <UNDEFINED> instruction: 0x200063b0
20003604:	2000630c 	andcs	r6, r0, ip, lsl #6
20003608:	2000e684 	andcs	lr, r0, r4, lsl #13
2000360c:	20006374 	andcs	r6, r0, r4, ror r3
20003610:	2000638c 	andcs	r6, r0, ip, lsl #7
20003614:	2000e5cc 	andcs	lr, r0, ip, asr #11
20003618:	200063c0 	andcs	r6, r0, r0, asr #7

2000361c <init_dragon>:
	
void init_dragon( GameObject *dragonObj ) {
2000361c:	b590      	push	{r4, r7, lr}
2000361e:	b083      	sub	sp, #12
20003620:	af00      	add	r7, sp, #0
20003622:	6078      	str	r0, [r7, #4]
	static int firstTime = 1;
	if (firstTime) {
20003624:	4b29      	ldr	r3, [pc, #164]	; (200036cc <init_dragon+0xb0>)
20003626:	681b      	ldr	r3, [r3, #0]
20003628:	2b00      	cmp	r3, #0
2000362a:	d03b      	beq.n	200036a4 <init_dragon+0x88>
		initSprites();
2000362c:	f7ff ff56 	bl	200034dc <initSprites>
		firstTime = 0;			
20003630:	4b26      	ldr	r3, [pc, #152]	; (200036cc <init_dragon+0xb0>)
20003632:	2200      	movs	r2, #0
20003634:	601a      	str	r2, [r3, #0]

		dragonImages[0] = dragon1Image;
20003636:	4b26      	ldr	r3, [pc, #152]	; (200036d0 <init_dragon+0xb4>)
20003638:	4a26      	ldr	r2, [pc, #152]	; (200036d4 <init_dragon+0xb8>)
2000363a:	ca13      	ldmia	r2!, {r0, r1, r4}
2000363c:	c313      	stmia	r3!, {r0, r1, r4}
		dragonImages[1] = dragon2Image;
2000363e:	4b24      	ldr	r3, [pc, #144]	; (200036d0 <init_dragon+0xb4>)
20003640:	4a25      	ldr	r2, [pc, #148]	; (200036d8 <init_dragon+0xbc>)
20003642:	330c      	adds	r3, #12
20003644:	ca13      	ldmia	r2!, {r0, r1, r4}
20003646:	c313      	stmia	r3!, {r0, r1, r4}
		dragonImages[2] = dragon3Image;
20003648:	4b21      	ldr	r3, [pc, #132]	; (200036d0 <init_dragon+0xb4>)
2000364a:	4a24      	ldr	r2, [pc, #144]	; (200036dc <init_dragon+0xc0>)
2000364c:	3318      	adds	r3, #24
2000364e:	ca13      	ldmia	r2!, {r0, r1, r4}
20003650:	c313      	stmia	r3!, {r0, r1, r4}
		dragonImages[3] = dragon4Image;
20003652:	4b1f      	ldr	r3, [pc, #124]	; (200036d0 <init_dragon+0xb4>)
20003654:	4a22      	ldr	r2, [pc, #136]	; (200036e0 <init_dragon+0xc4>)
20003656:	3324      	adds	r3, #36	; 0x24
20003658:	ca13      	ldmia	r2!, {r0, r1, r4}
2000365a:	c313      	stmia	r3!, {r0, r1, r4}
		
		load_image(&dragonImages[0], dragon1Black, dragon1Gray, dragon1Light);
2000365c:	4b21      	ldr	r3, [pc, #132]	; (200036e4 <init_dragon+0xc8>)
2000365e:	6819      	ldr	r1, [r3, #0]
20003660:	4b21      	ldr	r3, [pc, #132]	; (200036e8 <init_dragon+0xcc>)
20003662:	681a      	ldr	r2, [r3, #0]
20003664:	4b21      	ldr	r3, [pc, #132]	; (200036ec <init_dragon+0xd0>)
20003666:	681b      	ldr	r3, [r3, #0]
20003668:	4819      	ldr	r0, [pc, #100]	; (200036d0 <init_dragon+0xb4>)
2000366a:	f000 ff9b 	bl	200045a4 <load_image>
		load_image(&dragonImages[2], dragon2Black, dragon2Gray, dragon2Light);
2000366e:	4b20      	ldr	r3, [pc, #128]	; (200036f0 <init_dragon+0xd4>)
20003670:	6819      	ldr	r1, [r3, #0]
20003672:	4b20      	ldr	r3, [pc, #128]	; (200036f4 <init_dragon+0xd8>)
20003674:	681a      	ldr	r2, [r3, #0]
20003676:	4b20      	ldr	r3, [pc, #128]	; (200036f8 <init_dragon+0xdc>)
20003678:	681b      	ldr	r3, [r3, #0]
2000367a:	4820      	ldr	r0, [pc, #128]	; (200036fc <init_dragon+0xe0>)
2000367c:	f000 ff92 	bl	200045a4 <load_image>
		load_image(&dragonImages[1], dragon3Black, dragon3Gray, dragon3Light);
20003680:	4b1f      	ldr	r3, [pc, #124]	; (20003700 <init_dragon+0xe4>)
20003682:	6819      	ldr	r1, [r3, #0]
20003684:	4b1f      	ldr	r3, [pc, #124]	; (20003704 <init_dragon+0xe8>)
20003686:	681a      	ldr	r2, [r3, #0]
20003688:	4b1f      	ldr	r3, [pc, #124]	; (20003708 <init_dragon+0xec>)
2000368a:	681b      	ldr	r3, [r3, #0]
2000368c:	481f      	ldr	r0, [pc, #124]	; (2000370c <init_dragon+0xf0>)
2000368e:	f000 ff89 	bl	200045a4 <load_image>
		load_image(&dragonImages[3], dragon3Black, dragon3Gray, dragon3Light);
20003692:	4b1b      	ldr	r3, [pc, #108]	; (20003700 <init_dragon+0xe4>)
20003694:	6819      	ldr	r1, [r3, #0]
20003696:	4b1b      	ldr	r3, [pc, #108]	; (20003704 <init_dragon+0xe8>)
20003698:	681a      	ldr	r2, [r3, #0]
2000369a:	4b1b      	ldr	r3, [pc, #108]	; (20003708 <init_dragon+0xec>)
2000369c:	681b      	ldr	r3, [r3, #0]
2000369e:	481c      	ldr	r0, [pc, #112]	; (20003710 <init_dragon+0xf4>)
200036a0:	f000 ff80 	bl	200045a4 <load_image>
			
	}
	
	dragonObj->images = dragonImages;
200036a4:	687b      	ldr	r3, [r7, #4]
200036a6:	4a0a      	ldr	r2, [pc, #40]	; (200036d0 <init_dragon+0xb4>)
200036a8:	601a      	str	r2, [r3, #0]

	dragonObj->current_frame = 0;
200036aa:	687b      	ldr	r3, [r7, #4]
200036ac:	2200      	movs	r2, #0
200036ae:	615a      	str	r2, [r3, #20]
	dragonObj->n_frames = 4;
200036b0:	687b      	ldr	r3, [r7, #4]
200036b2:	2204      	movs	r2, #4
200036b4:	619a      	str	r2, [r3, #24]
	dragonObj->animation_speed = 3;
200036b6:	687b      	ldr	r3, [r7, #4]
200036b8:	2203      	movs	r2, #3
200036ba:	61da      	str	r2, [r3, #28]
	dragonObj->animation_counter = 0;
200036bc:	687b      	ldr	r3, [r7, #4]
200036be:	2200      	movs	r2, #0
200036c0:	621a      	str	r2, [r3, #32]
}
200036c2:	46c0      	nop			; (mov r8, r8)
200036c4:	46bd      	mov	sp, r7
200036c6:	b003      	add	sp, #12
200036c8:	bd90      	pop	{r4, r7, pc}
200036ca:	46c0      	nop			; (mov r8, r8)
200036cc:	2000e7f4 	strdcs	lr, [r0], -r4
200036d0:	20006344 	andcs	r6, r0, r4, asr #6
200036d4:	200063e0 	andcs	r6, r0, r0, ror #7
200036d8:	20006328 	andcs	r6, r0, r8, lsr #6
200036dc:	200063b4 			; <UNDEFINED> instruction: 0x200063b4
200036e0:	20006318 	andcs	r6, r0, r8, lsl r3
200036e4:	20006308 	andcs	r6, r0, r8, lsl #6
200036e8:	20006324 	andcs	r6, r0, r4, lsr #6
200036ec:	20006378 	andcs	r6, r0, r8, ror r3
200036f0:	20006388 	andcs	r6, r0, r8, lsl #7
200036f4:	20006334 	andcs	r6, r0, r4, lsr r3
200036f8:	200063c4 	andcs	r6, r0, r4, asr #7
200036fc:	2000635c 	andcs	r6, r0, ip, asr r3
20003700:	200063c0 	andcs	r6, r0, r0, asr #7
20003704:	20006374 	andcs	r6, r0, r4, ror r3
20003708:	200063b0 			; <UNDEFINED> instruction: 0x200063b0
2000370c:	20006350 	andcs	r6, r0, r0, asr r3
20003710:	20006368 	andcs	r6, r0, r8, ror #6

20003714 <delay_250ns>:
#include "graphics.h"


void delay_250ns(void){
20003714:	b580      	push	{r7, lr}
20003716:	af00      	add	r7, sp, #0
	/* SystemCoreClock = 168000000 */
	*STK_CTRL = 0;
20003718:	4b0c      	ldr	r3, [pc, #48]	; (2000374c <delay_250ns+0x38>)
2000371a:	2200      	movs	r2, #0
2000371c:	601a      	str	r2, [r3, #0]
	*STK_LOAD = ( (168/4) -1);
2000371e:	4b0c      	ldr	r3, [pc, #48]	; (20003750 <delay_250ns+0x3c>)
20003720:	2229      	movs	r2, #41	; 0x29
20003722:	601a      	str	r2, [r3, #0]
	*STK_VAL = 0;
20003724:	4b0b      	ldr	r3, [pc, #44]	; (20003754 <delay_250ns+0x40>)
20003726:	2200      	movs	r2, #0
20003728:	601a      	str	r2, [r3, #0]
	*STK_CTRL = 5;
2000372a:	4b08      	ldr	r3, [pc, #32]	; (2000374c <delay_250ns+0x38>)
2000372c:	2205      	movs	r2, #5
2000372e:	601a      	str	r2, [r3, #0]
	while( (*STK_CTRL & 0x10000)== 0 ){}
20003730:	46c0      	nop			; (mov r8, r8)
20003732:	4b06      	ldr	r3, [pc, #24]	; (2000374c <delay_250ns+0x38>)
20003734:	681a      	ldr	r2, [r3, #0]
20003736:	2380      	movs	r3, #128	; 0x80
20003738:	025b      	lsls	r3, r3, #9
2000373a:	4013      	ands	r3, r2
2000373c:	d0f9      	beq.n	20003732 <delay_250ns+0x1e>
	*STK_CTRL = 0;
2000373e:	4b03      	ldr	r3, [pc, #12]	; (2000374c <delay_250ns+0x38>)
20003740:	2200      	movs	r2, #0
20003742:	601a      	str	r2, [r3, #0]
}
20003744:	46c0      	nop			; (mov r8, r8)
20003746:	46bd      	mov	sp, r7
20003748:	bd80      	pop	{r7, pc}
2000374a:	46c0      	nop			; (mov r8, r8)
2000374c:	e000e010 	and	lr, r0, r0, lsl r0
20003750:	e000e014 	and	lr, r0, r4, lsl r0
20003754:	e000e018 	and	lr, r0, r8, lsl r0

20003758 <delay_500ns>:

void delay_500ns(void){
20003758:	b580      	push	{r7, lr}
2000375a:	af00      	add	r7, sp, #0
	/* SystemCoreClock = 168000000 */
	*STK_CTRL = 0;
2000375c:	4b0c      	ldr	r3, [pc, #48]	; (20003790 <delay_500ns+0x38>)
2000375e:	2200      	movs	r2, #0
20003760:	601a      	str	r2, [r3, #0]
	*STK_LOAD = ( (168/2) -1);
20003762:	4b0c      	ldr	r3, [pc, #48]	; (20003794 <delay_500ns+0x3c>)
20003764:	2253      	movs	r2, #83	; 0x53
20003766:	601a      	str	r2, [r3, #0]
	*STK_VAL = 0;
20003768:	4b0b      	ldr	r3, [pc, #44]	; (20003798 <delay_500ns+0x40>)
2000376a:	2200      	movs	r2, #0
2000376c:	601a      	str	r2, [r3, #0]
	*STK_CTRL = 5;
2000376e:	4b08      	ldr	r3, [pc, #32]	; (20003790 <delay_500ns+0x38>)
20003770:	2205      	movs	r2, #5
20003772:	601a      	str	r2, [r3, #0]
	while( (*STK_CTRL & 0x10000)== 0 ){}
20003774:	46c0      	nop			; (mov r8, r8)
20003776:	4b06      	ldr	r3, [pc, #24]	; (20003790 <delay_500ns+0x38>)
20003778:	681a      	ldr	r2, [r3, #0]
2000377a:	2380      	movs	r3, #128	; 0x80
2000377c:	025b      	lsls	r3, r3, #9
2000377e:	4013      	ands	r3, r2
20003780:	d0f9      	beq.n	20003776 <delay_500ns+0x1e>
	*STK_CTRL = 0;
20003782:	4b03      	ldr	r3, [pc, #12]	; (20003790 <delay_500ns+0x38>)
20003784:	2200      	movs	r2, #0
20003786:	601a      	str	r2, [r3, #0]
}
20003788:	46c0      	nop			; (mov r8, r8)
2000378a:	46bd      	mov	sp, r7
2000378c:	bd80      	pop	{r7, pc}
2000378e:	46c0      	nop			; (mov r8, r8)
20003790:	e000e010 	and	lr, r0, r0, lsl r0
20003794:	e000e014 	and	lr, r0, r4, lsl r0
20003798:	e000e018 	and	lr, r0, r8, lsl r0

2000379c <delay_micro>:

void delay_micro(unsigned int us){
2000379c:	b580      	push	{r7, lr}
2000379e:	b082      	sub	sp, #8
200037a0:	af00      	add	r7, sp, #0
200037a2:	6078      	str	r0, [r7, #4]
	while(us--) {
200037a4:	e007      	b.n	200037b6 <delay_micro+0x1a>
		delay_250ns();
200037a6:	f7ff ffb5 	bl	20003714 <delay_250ns>
		delay_250ns();
200037aa:	f7ff ffb3 	bl	20003714 <delay_250ns>
		delay_250ns();
200037ae:	f7ff ffb1 	bl	20003714 <delay_250ns>
		delay_250ns();
200037b2:	f7ff ffaf 	bl	20003714 <delay_250ns>
	while(us--) {
200037b6:	687b      	ldr	r3, [r7, #4]
200037b8:	1e5a      	subs	r2, r3, #1
200037ba:	607a      	str	r2, [r7, #4]
200037bc:	2b00      	cmp	r3, #0
200037be:	d1f2      	bne.n	200037a6 <delay_micro+0xa>
	}
}
200037c0:	46c0      	nop			; (mov r8, r8)
200037c2:	46bd      	mov	sp, r7
200037c4:	b002      	add	sp, #8
200037c6:	bd80      	pop	{r7, pc}

200037c8 <delay_milli>:

void delay_milli(unsigned int ms){
200037c8:	b580      	push	{r7, lr}
200037ca:	b082      	sub	sp, #8
200037cc:	af00      	add	r7, sp, #0
200037ce:	6078      	str	r0, [r7, #4]
	#ifdef SIMULATOR
		while(ms--)
			delay_micro(1);
	#else
		while(ms--)
200037d0:	e004      	b.n	200037dc <delay_milli+0x14>
			delay_micro(1000);
200037d2:	23fa      	movs	r3, #250	; 0xfa
200037d4:	009b      	lsls	r3, r3, #2
200037d6:	0018      	movs	r0, r3
200037d8:	f7ff ffe0 	bl	2000379c <delay_micro>
		while(ms--)
200037dc:	687b      	ldr	r3, [r7, #4]
200037de:	1e5a      	subs	r2, r3, #1
200037e0:	607a      	str	r2, [r7, #4]
200037e2:	2b00      	cmp	r3, #0
200037e4:	d1f5      	bne.n	200037d2 <delay_milli+0xa>
	#endif
}
200037e6:	46c0      	nop			; (mov r8, r8)
200037e8:	46bd      	mov	sp, r7
200037ea:	b002      	add	sp, #8
200037ec:	bd80      	pop	{r7, pc}

200037ee <clear_thisBackBuffer>:
uint8_t draw_buffer_black_light[1024]; // 128 * 64 / 8
uint8_t draw_buffer_black_gray_light[1024]; // 128 * 64 / 8
uint8_t backBuffer[1024]; // 128 * 64 / 8
uint8_t backBufferGray[1024]; // 128 * 64 / 8
uint8_t backBufferLight[1024]; // 128 * 64 / 8
void clear_thisBackBuffer(uint8_t *buffer) {
200037ee:	b580      	push	{r7, lr}
200037f0:	b084      	sub	sp, #16
200037f2:	af00      	add	r7, sp, #0
200037f4:	6078      	str	r0, [r7, #4]
	int i;
	for (i = 0; i < 1024; i++)
200037f6:	2300      	movs	r3, #0
200037f8:	60fb      	str	r3, [r7, #12]
200037fa:	e007      	b.n	2000380c <clear_thisBackBuffer+0x1e>
		buffer[i] = 0;
200037fc:	68fb      	ldr	r3, [r7, #12]
200037fe:	687a      	ldr	r2, [r7, #4]
20003800:	18d3      	adds	r3, r2, r3
20003802:	2200      	movs	r2, #0
20003804:	701a      	strb	r2, [r3, #0]
	for (i = 0; i < 1024; i++)
20003806:	68fb      	ldr	r3, [r7, #12]
20003808:	3301      	adds	r3, #1
2000380a:	60fb      	str	r3, [r7, #12]
2000380c:	68fb      	ldr	r3, [r7, #12]
2000380e:	4a03      	ldr	r2, [pc, #12]	; (2000381c <clear_thisBackBuffer+0x2e>)
20003810:	4293      	cmp	r3, r2
20003812:	ddf3      	ble.n	200037fc <clear_thisBackBuffer+0xe>
}
20003814:	46c0      	nop			; (mov r8, r8)
20003816:	46bd      	mov	sp, r7
20003818:	b004      	add	sp, #16
2000381a:	bd80      	pop	{r7, pc}
2000381c:	000003ff 	strdeq	r0, [r0], -pc	; <UNPREDICTABLE>

20003820 <clear_backBuffer>:
void clear_backBuffer() {
20003820:	b580      	push	{r7, lr}
20003822:	af00      	add	r7, sp, #0
	clear_thisBackBuffer(backBuffer);
20003824:	4b03      	ldr	r3, [pc, #12]	; (20003834 <clear_backBuffer+0x14>)
20003826:	0018      	movs	r0, r3
20003828:	f7ff ffe1 	bl	200037ee <clear_thisBackBuffer>
}
2000382c:	46c0      	nop			; (mov r8, r8)
2000382e:	46bd      	mov	sp, r7
20003830:	bd80      	pop	{r7, pc}
20003832:	46c0      	nop			; (mov r8, r8)
20003834:	20006c1c 	andcs	r6, r0, ip, lsl ip

20003838 <clear_all_backBuffers>:
void clear_all_backBuffers() {
20003838:	b580      	push	{r7, lr}
2000383a:	af00      	add	r7, sp, #0
	clear_thisBackBuffer(backBuffer);
2000383c:	4b07      	ldr	r3, [pc, #28]	; (2000385c <clear_all_backBuffers+0x24>)
2000383e:	0018      	movs	r0, r3
20003840:	f7ff ffd5 	bl	200037ee <clear_thisBackBuffer>
	clear_thisBackBuffer(backBufferGray);
20003844:	4b06      	ldr	r3, [pc, #24]	; (20003860 <clear_all_backBuffers+0x28>)
20003846:	0018      	movs	r0, r3
20003848:	f7ff ffd1 	bl	200037ee <clear_thisBackBuffer>
	clear_thisBackBuffer(backBufferLight);
2000384c:	4b05      	ldr	r3, [pc, #20]	; (20003864 <clear_all_backBuffers+0x2c>)
2000384e:	0018      	movs	r0, r3
20003850:	f7ff ffcd 	bl	200037ee <clear_thisBackBuffer>
}
20003854:	46c0      	nop			; (mov r8, r8)
20003856:	46bd      	mov	sp, r7
20003858:	bd80      	pop	{r7, pc}
2000385a:	46c0      	nop			; (mov r8, r8)
2000385c:	20006c1c 	andcs	r6, r0, ip, lsl ip
20003860:	2000641c 	andcs	r6, r0, ip, lsl r4
20003864:	20007c1c 	andcs	r7, r0, ip, lsl ip

20003868 <graphic_ctrl_bit_set>:

/* välj grafik-display och ettställ de bitar som är 1 i x */
static void graphic_ctrl_bit_set( uint8_t x) {
20003868:	b580      	push	{r7, lr}
2000386a:	b084      	sub	sp, #16
2000386c:	af00      	add	r7, sp, #0
2000386e:	0002      	movs	r2, r0
20003870:	1dfb      	adds	r3, r7, #7
20003872:	701a      	strb	r2, [r3, #0]
	uint8_t c;
	c = *portOdrLow;
20003874:	4a0f      	ldr	r2, [pc, #60]	; (200038b4 <graphic_ctrl_bit_set+0x4c>)
20003876:	230f      	movs	r3, #15
20003878:	18fb      	adds	r3, r7, r3
2000387a:	7812      	ldrb	r2, [r2, #0]
2000387c:	701a      	strb	r2, [r3, #0]
	c |= x;
2000387e:	230f      	movs	r3, #15
20003880:	18fb      	adds	r3, r7, r3
20003882:	220f      	movs	r2, #15
20003884:	18b9      	adds	r1, r7, r2
20003886:	1dfa      	adds	r2, r7, #7
20003888:	7809      	ldrb	r1, [r1, #0]
2000388a:	7812      	ldrb	r2, [r2, #0]
2000388c:	430a      	orrs	r2, r1
2000388e:	701a      	strb	r2, [r3, #0]
	c &= ~B_SELECT; //Graphic display istället för alphanum
20003890:	230f      	movs	r3, #15
20003892:	18fb      	adds	r3, r7, r3
20003894:	220f      	movs	r2, #15
20003896:	18ba      	adds	r2, r7, r2
20003898:	7812      	ldrb	r2, [r2, #0]
2000389a:	2104      	movs	r1, #4
2000389c:	438a      	bics	r2, r1
2000389e:	701a      	strb	r2, [r3, #0]
	*portOdrLow = c;
200038a0:	4a04      	ldr	r2, [pc, #16]	; (200038b4 <graphic_ctrl_bit_set+0x4c>)
200038a2:	230f      	movs	r3, #15
200038a4:	18fb      	adds	r3, r7, r3
200038a6:	781b      	ldrb	r3, [r3, #0]
200038a8:	7013      	strb	r3, [r2, #0]
}
200038aa:	46c0      	nop			; (mov r8, r8)
200038ac:	46bd      	mov	sp, r7
200038ae:	b004      	add	sp, #16
200038b0:	bd80      	pop	{r7, pc}
200038b2:	46c0      	nop			; (mov r8, r8)
200038b4:	40021014 	andmi	r1, r2, r4, lsl r0

200038b8 <graphic_ctrl_bit_clear>:
/* välj grafik-display och nollställ de bitar som är 1 i x */
static void graphic_ctrl_bit_clear( uint8_t x) {
200038b8:	b580      	push	{r7, lr}
200038ba:	b084      	sub	sp, #16
200038bc:	af00      	add	r7, sp, #0
200038be:	0002      	movs	r2, r0
200038c0:	1dfb      	adds	r3, r7, #7
200038c2:	701a      	strb	r2, [r3, #0]
	uint8_t c;
	c = *portOdrLow;
200038c4:	4a11      	ldr	r2, [pc, #68]	; (2000390c <graphic_ctrl_bit_clear+0x54>)
200038c6:	230f      	movs	r3, #15
200038c8:	18fb      	adds	r3, r7, r3
200038ca:	7812      	ldrb	r2, [r2, #0]
200038cc:	701a      	strb	r2, [r3, #0]
	c &= ~x;
200038ce:	1dfb      	adds	r3, r7, #7
200038d0:	781b      	ldrb	r3, [r3, #0]
200038d2:	b25b      	sxtb	r3, r3
200038d4:	43db      	mvns	r3, r3
200038d6:	b25b      	sxtb	r3, r3
200038d8:	220f      	movs	r2, #15
200038da:	18ba      	adds	r2, r7, r2
200038dc:	7812      	ldrb	r2, [r2, #0]
200038de:	b252      	sxtb	r2, r2
200038e0:	4013      	ands	r3, r2
200038e2:	b25a      	sxtb	r2, r3
200038e4:	230f      	movs	r3, #15
200038e6:	18fb      	adds	r3, r7, r3
200038e8:	701a      	strb	r2, [r3, #0]
	c &= ~B_SELECT; //Graphic display istället för alphanum
200038ea:	230f      	movs	r3, #15
200038ec:	18fb      	adds	r3, r7, r3
200038ee:	220f      	movs	r2, #15
200038f0:	18ba      	adds	r2, r7, r2
200038f2:	7812      	ldrb	r2, [r2, #0]
200038f4:	2104      	movs	r1, #4
200038f6:	438a      	bics	r2, r1
200038f8:	701a      	strb	r2, [r3, #0]
	*portOdrLow = c;
200038fa:	4a04      	ldr	r2, [pc, #16]	; (2000390c <graphic_ctrl_bit_clear+0x54>)
200038fc:	230f      	movs	r3, #15
200038fe:	18fb      	adds	r3, r7, r3
20003900:	781b      	ldrb	r3, [r3, #0]
20003902:	7013      	strb	r3, [r2, #0]
}
20003904:	46c0      	nop			; (mov r8, r8)
20003906:	46bd      	mov	sp, r7
20003908:	b004      	add	sp, #16
2000390a:	bd80      	pop	{r7, pc}
2000390c:	40021014 	andmi	r1, r2, r4, lsl r0

20003910 <select_controller>:
void select_controller( uint8_t controller) {
20003910:	b580      	push	{r7, lr}
20003912:	b082      	sub	sp, #8
20003914:	af00      	add	r7, sp, #0
20003916:	0002      	movs	r2, r0
20003918:	1dfb      	adds	r3, r7, #7
2000391a:	701a      	strb	r2, [r3, #0]
	switch (controller) {
2000391c:	1dfb      	adds	r3, r7, #7
2000391e:	781b      	ldrb	r3, [r3, #0]
20003920:	2b08      	cmp	r3, #8
20003922:	d00f      	beq.n	20003944 <select_controller+0x34>
20003924:	dc02      	bgt.n	2000392c <select_controller+0x1c>
20003926:	2b00      	cmp	r3, #0
20003928:	d005      	beq.n	20003936 <select_controller+0x26>
		case (B_CS1|B_CS2): 
			graphic_ctrl_bit_set(B_CS1); 
			graphic_ctrl_bit_set(B_CS2); 
			break;
	}
}
2000392a:	e020      	b.n	2000396e <select_controller+0x5e>
	switch (controller) {
2000392c:	2b10      	cmp	r3, #16
2000392e:	d010      	beq.n	20003952 <select_controller+0x42>
20003930:	2b18      	cmp	r3, #24
20003932:	d015      	beq.n	20003960 <select_controller+0x50>
}
20003934:	e01b      	b.n	2000396e <select_controller+0x5e>
			graphic_ctrl_bit_clear(B_CS1); 
20003936:	2008      	movs	r0, #8
20003938:	f7ff ffbe 	bl	200038b8 <graphic_ctrl_bit_clear>
			graphic_ctrl_bit_clear(B_CS2); 
2000393c:	2010      	movs	r0, #16
2000393e:	f7ff ffbb 	bl	200038b8 <graphic_ctrl_bit_clear>
			break;
20003942:	e014      	b.n	2000396e <select_controller+0x5e>
			graphic_ctrl_bit_set(B_CS1); 
20003944:	2008      	movs	r0, #8
20003946:	f7ff ff8f 	bl	20003868 <graphic_ctrl_bit_set>
			graphic_ctrl_bit_clear(B_CS2); 
2000394a:	2010      	movs	r0, #16
2000394c:	f7ff ffb4 	bl	200038b8 <graphic_ctrl_bit_clear>
			break;
20003950:	e00d      	b.n	2000396e <select_controller+0x5e>
			graphic_ctrl_bit_clear(B_CS1); 
20003952:	2008      	movs	r0, #8
20003954:	f7ff ffb0 	bl	200038b8 <graphic_ctrl_bit_clear>
			graphic_ctrl_bit_set(B_CS2); 
20003958:	2010      	movs	r0, #16
2000395a:	f7ff ff85 	bl	20003868 <graphic_ctrl_bit_set>
			break;
2000395e:	e006      	b.n	2000396e <select_controller+0x5e>
			graphic_ctrl_bit_set(B_CS1); 
20003960:	2008      	movs	r0, #8
20003962:	f7ff ff81 	bl	20003868 <graphic_ctrl_bit_set>
			graphic_ctrl_bit_set(B_CS2); 
20003966:	2010      	movs	r0, #16
20003968:	f7ff ff7e 	bl	20003868 <graphic_ctrl_bit_set>
			break;
2000396c:	46c0      	nop			; (mov r8, r8)
}
2000396e:	46c0      	nop			; (mov r8, r8)
20003970:	46bd      	mov	sp, r7
20003972:	b002      	add	sp, #8
20003974:	bd80      	pop	{r7, pc}

20003976 <graphic_wait_ready>:

void graphic_wait_ready( void ) {
20003976:	b580      	push	{r7, lr}
20003978:	b082      	sub	sp, #8
2000397a:	af00      	add	r7, sp, #0
	uint8_t c;
	graphic_ctrl_bit_clear(B_E);
2000397c:	2040      	movs	r0, #64	; 0x40
2000397e:	f7ff ff9b 	bl	200038b8 <graphic_ctrl_bit_clear>
	*portModer = 0x00005555;
20003982:	4b14      	ldr	r3, [pc, #80]	; (200039d4 <graphic_wait_ready+0x5e>)
20003984:	4a14      	ldr	r2, [pc, #80]	; (200039d8 <graphic_wait_ready+0x62>)
20003986:	601a      	str	r2, [r3, #0]
	graphic_ctrl_bit_clear(B_RS);
20003988:	2001      	movs	r0, #1
2000398a:	f7ff ff95 	bl	200038b8 <graphic_ctrl_bit_clear>
	graphic_ctrl_bit_set(B_RW);
2000398e:	2002      	movs	r0, #2
20003990:	f7ff ff6a 	bl	20003868 <graphic_ctrl_bit_set>
	delay_500ns();
20003994:	f7ff fee0 	bl	20003758 <delay_500ns>
	
	while(1) {
		graphic_ctrl_bit_set(B_E);
20003998:	2040      	movs	r0, #64	; 0x40
2000399a:	f7ff ff65 	bl	20003868 <graphic_ctrl_bit_set>
		delay_500ns();
2000399e:	f7ff fedb 	bl	20003758 <delay_500ns>
		c = *portIdrHigh & LCD_BUSY; //...
200039a2:	4b0e      	ldr	r3, [pc, #56]	; (200039dc <graphic_wait_ready+0x66>)
200039a4:	781b      	ldrb	r3, [r3, #0]
200039a6:	b2da      	uxtb	r2, r3
200039a8:	1dfb      	adds	r3, r7, #7
200039aa:	217f      	movs	r1, #127	; 0x7f
200039ac:	438a      	bics	r2, r1
200039ae:	701a      	strb	r2, [r3, #0]
		graphic_ctrl_bit_clear(B_E);
200039b0:	2040      	movs	r0, #64	; 0x40
200039b2:	f7ff ff81 	bl	200038b8 <graphic_ctrl_bit_clear>
		delay_500ns();
200039b6:	f7ff fecf 	bl	20003758 <delay_500ns>
		/*if (*portIdrHigh & 0x80 == 0x80) {
			break; }*/
		if (c == 0) break;
200039ba:	1dfb      	adds	r3, r7, #7
200039bc:	781b      	ldrb	r3, [r3, #0]
200039be:	2b00      	cmp	r3, #0
200039c0:	d000      	beq.n	200039c4 <graphic_wait_ready+0x4e>
		graphic_ctrl_bit_set(B_E);
200039c2:	e7e9      	b.n	20003998 <graphic_wait_ready+0x22>
		if (c == 0) break;
200039c4:	46c0      	nop			; (mov r8, r8)
	}
	//graphic_ctrl_bit_set(B_E); //<--
	*portModer = 0x55555555;	
200039c6:	4b03      	ldr	r3, [pc, #12]	; (200039d4 <graphic_wait_ready+0x5e>)
200039c8:	4a05      	ldr	r2, [pc, #20]	; (200039e0 <graphic_wait_ready+0x6a>)
200039ca:	601a      	str	r2, [r3, #0]
}
200039cc:	46c0      	nop			; (mov r8, r8)
200039ce:	46bd      	mov	sp, r7
200039d0:	b002      	add	sp, #8
200039d2:	bd80      	pop	{r7, pc}
200039d4:	40021000 	andmi	r1, r2, r0
200039d8:	00005555 	andeq	r5, r0, r5, asr r5
200039dc:	40021011 	andmi	r1, r2, r1, lsl r0
200039e0:	55555555 	ldrbpl	r5, [r5, #-1365]	; 0xfffffaab

200039e4 <graphic_read>:

static uint8_t graphic_read(uint8_t controller) {
200039e4:	b580      	push	{r7, lr}
200039e6:	b084      	sub	sp, #16
200039e8:	af00      	add	r7, sp, #0
200039ea:	0002      	movs	r2, r0
200039ec:	1dfb      	adds	r3, r7, #7
200039ee:	701a      	strb	r2, [r3, #0]
	graphic_ctrl_bit_clear(B_E);
200039f0:	2040      	movs	r0, #64	; 0x40
200039f2:	f7ff ff61 	bl	200038b8 <graphic_ctrl_bit_clear>
	*portModer = 0x00005555;
200039f6:	4b1c      	ldr	r3, [pc, #112]	; (20003a68 <graphic_read+0x84>)
200039f8:	4a1c      	ldr	r2, [pc, #112]	; (20003a6c <graphic_read+0x88>)
200039fa:	601a      	str	r2, [r3, #0]
	graphic_ctrl_bit_set(B_RS);
200039fc:	2001      	movs	r0, #1
200039fe:	f7ff ff33 	bl	20003868 <graphic_ctrl_bit_set>
	graphic_ctrl_bit_set(B_RW);
20003a02:	2002      	movs	r0, #2
20003a04:	f7ff ff30 	bl	20003868 <graphic_ctrl_bit_set>
	select_controller(controller);
20003a08:	1dfb      	adds	r3, r7, #7
20003a0a:	781b      	ldrb	r3, [r3, #0]
20003a0c:	0018      	movs	r0, r3
20003a0e:	f7ff ff7f 	bl	20003910 <select_controller>
	delay_500ns();
20003a12:	f7ff fea1 	bl	20003758 <delay_500ns>
	graphic_ctrl_bit_set(B_E);
20003a16:	2040      	movs	r0, #64	; 0x40
20003a18:	f7ff ff26 	bl	20003868 <graphic_ctrl_bit_set>
	delay_500ns();
20003a1c:	f7ff fe9c 	bl	20003758 <delay_500ns>
	unsigned char rv = *portIdrHigh;
20003a20:	4a13      	ldr	r2, [pc, #76]	; (20003a70 <graphic_read+0x8c>)
20003a22:	230f      	movs	r3, #15
20003a24:	18fb      	adds	r3, r7, r3
20003a26:	7812      	ldrb	r2, [r2, #0]
20003a28:	701a      	strb	r2, [r3, #0]
	graphic_ctrl_bit_clear(B_E);
20003a2a:	2040      	movs	r0, #64	; 0x40
20003a2c:	f7ff ff44 	bl	200038b8 <graphic_ctrl_bit_clear>
	*portModer = 0x55555555;
20003a30:	4b0d      	ldr	r3, [pc, #52]	; (20003a68 <graphic_read+0x84>)
20003a32:	4a10      	ldr	r2, [pc, #64]	; (20003a74 <graphic_read+0x90>)
20003a34:	601a      	str	r2, [r3, #0]
	
	if(controller == B_CS1) {
20003a36:	1dfb      	adds	r3, r7, #7
20003a38:	781b      	ldrb	r3, [r3, #0]
20003a3a:	2b08      	cmp	r3, #8
20003a3c:	d104      	bne.n	20003a48 <graphic_read+0x64>
		select_controller(B_CS1);
20003a3e:	2008      	movs	r0, #8
20003a40:	f7ff ff66 	bl	20003910 <select_controller>
		graphic_wait_ready();
20003a44:	f7ff ff97 	bl	20003976 <graphic_wait_ready>
	}
	if(controller == B_CS2) {
20003a48:	1dfb      	adds	r3, r7, #7
20003a4a:	781b      	ldrb	r3, [r3, #0]
20003a4c:	2b10      	cmp	r3, #16
20003a4e:	d104      	bne.n	20003a5a <graphic_read+0x76>
		select_controller(B_CS2);
20003a50:	2010      	movs	r0, #16
20003a52:	f7ff ff5d 	bl	20003910 <select_controller>
		graphic_wait_ready();
20003a56:	f7ff ff8e 	bl	20003976 <graphic_wait_ready>
	}
	
	return rv;
20003a5a:	230f      	movs	r3, #15
20003a5c:	18fb      	adds	r3, r7, r3
20003a5e:	781b      	ldrb	r3, [r3, #0]
}
20003a60:	0018      	movs	r0, r3
20003a62:	46bd      	mov	sp, r7
20003a64:	b004      	add	sp, #16
20003a66:	bd80      	pop	{r7, pc}
20003a68:	40021000 	andmi	r1, r2, r0
20003a6c:	00005555 	andeq	r5, r0, r5, asr r5
20003a70:	40021011 	andmi	r1, r2, r1, lsl r0
20003a74:	55555555 	ldrbpl	r5, [r5, #-1365]	; 0xfffffaab

20003a78 <graphic_read_data>:

graphic_read_data(uint8_t controller) {
20003a78:	b580      	push	{r7, lr}
20003a7a:	b082      	sub	sp, #8
20003a7c:	af00      	add	r7, sp, #0
20003a7e:	0002      	movs	r2, r0
20003a80:	1dfb      	adds	r3, r7, #7
20003a82:	701a      	strb	r2, [r3, #0]
	graphic_read(controller);
20003a84:	1dfb      	adds	r3, r7, #7
20003a86:	781b      	ldrb	r3, [r3, #0]
20003a88:	0018      	movs	r0, r3
20003a8a:	f7ff ffab 	bl	200039e4 <graphic_read>
	graphic_read(controller);
20003a8e:	1dfb      	adds	r3, r7, #7
20003a90:	781b      	ldrb	r3, [r3, #0]
20003a92:	0018      	movs	r0, r3
20003a94:	f7ff ffa6 	bl	200039e4 <graphic_read>
}
20003a98:	46c0      	nop			; (mov r8, r8)
20003a9a:	0018      	movs	r0, r3
20003a9c:	46bd      	mov	sp, r7
20003a9e:	b002      	add	sp, #8
20003aa0:	bd80      	pop	{r7, pc}

20003aa2 <graphic_write>:

void graphic_write(uint8_t value, uint8_t controller) {
20003aa2:	b580      	push	{r7, lr}
20003aa4:	b082      	sub	sp, #8
20003aa6:	af00      	add	r7, sp, #0
20003aa8:	0002      	movs	r2, r0
20003aaa:	1dfb      	adds	r3, r7, #7
20003aac:	701a      	strb	r2, [r3, #0]
20003aae:	1dbb      	adds	r3, r7, #6
20003ab0:	1c0a      	adds	r2, r1, #0
20003ab2:	701a      	strb	r2, [r3, #0]
	*portOdrHigh = value; //I
20003ab4:	4a19      	ldr	r2, [pc, #100]	; (20003b1c <graphic_write+0x7a>)
20003ab6:	1dfb      	adds	r3, r7, #7
20003ab8:	781b      	ldrb	r3, [r3, #0]
20003aba:	7013      	strb	r3, [r2, #0]
	select_controller(controller);
20003abc:	1dbb      	adds	r3, r7, #6
20003abe:	781b      	ldrb	r3, [r3, #0]
20003ac0:	0018      	movs	r0, r3
20003ac2:	f7ff ff25 	bl	20003910 <select_controller>
	delay_500ns();
20003ac6:	f7ff fe47 	bl	20003758 <delay_500ns>
	graphic_ctrl_bit_set(B_E);
20003aca:	2040      	movs	r0, #64	; 0x40
20003acc:	f7ff fecc 	bl	20003868 <graphic_ctrl_bit_set>
	delay_500ns();
20003ad0:	f7ff fe42 	bl	20003758 <delay_500ns>
	graphic_ctrl_bit_clear(B_E);
20003ad4:	2040      	movs	r0, #64	; 0x40
20003ad6:	f7ff feef 	bl	200038b8 <graphic_ctrl_bit_clear>
	
	if(controller & B_CS1) {
20003ada:	1dbb      	adds	r3, r7, #6
20003adc:	781b      	ldrb	r3, [r3, #0]
20003ade:	2208      	movs	r2, #8
20003ae0:	4013      	ands	r3, r2
20003ae2:	d004      	beq.n	20003aee <graphic_write+0x4c>
		select_controller(B_CS1);
20003ae4:	2008      	movs	r0, #8
20003ae6:	f7ff ff13 	bl	20003910 <select_controller>
		graphic_wait_ready();
20003aea:	f7ff ff44 	bl	20003976 <graphic_wait_ready>
	}
	if(controller & B_CS2) {
20003aee:	1dbb      	adds	r3, r7, #6
20003af0:	781b      	ldrb	r3, [r3, #0]
20003af2:	2210      	movs	r2, #16
20003af4:	4013      	ands	r3, r2
20003af6:	d004      	beq.n	20003b02 <graphic_write+0x60>
		select_controller(B_CS2);
20003af8:	2010      	movs	r0, #16
20003afa:	f7ff ff09 	bl	20003910 <select_controller>
		graphic_wait_ready();
20003afe:	f7ff ff3a 	bl	20003976 <graphic_wait_ready>
	}
	
	*portOdrHigh = 0;	//I
20003b02:	4b06      	ldr	r3, [pc, #24]	; (20003b1c <graphic_write+0x7a>)
20003b04:	2200      	movs	r2, #0
20003b06:	701a      	strb	r2, [r3, #0]
	graphic_ctrl_bit_set(B_E);
20003b08:	2040      	movs	r0, #64	; 0x40
20003b0a:	f7ff fead 	bl	20003868 <graphic_ctrl_bit_set>
	select_controller(0);
20003b0e:	2000      	movs	r0, #0
20003b10:	f7ff fefe 	bl	20003910 <select_controller>
}
20003b14:	46c0      	nop			; (mov r8, r8)
20003b16:	46bd      	mov	sp, r7
20003b18:	b002      	add	sp, #8
20003b1a:	bd80      	pop	{r7, pc}
20003b1c:	40021015 	andmi	r1, r2, r5, lsl r0

20003b20 <graphic_write_command>:
void graphic_write_command(uint8_t command, uint8_t controller) {
20003b20:	b580      	push	{r7, lr}
20003b22:	b082      	sub	sp, #8
20003b24:	af00      	add	r7, sp, #0
20003b26:	0002      	movs	r2, r0
20003b28:	1dfb      	adds	r3, r7, #7
20003b2a:	701a      	strb	r2, [r3, #0]
20003b2c:	1dbb      	adds	r3, r7, #6
20003b2e:	1c0a      	adds	r2, r1, #0
20003b30:	701a      	strb	r2, [r3, #0]
	graphic_ctrl_bit_clear(B_E);
20003b32:	2040      	movs	r0, #64	; 0x40
20003b34:	f7ff fec0 	bl	200038b8 <graphic_ctrl_bit_clear>
	select_controller(controller);
20003b38:	1dbb      	adds	r3, r7, #6
20003b3a:	781b      	ldrb	r3, [r3, #0]
20003b3c:	0018      	movs	r0, r3
20003b3e:	f7ff fee7 	bl	20003910 <select_controller>
	graphic_ctrl_bit_clear(B_RS);
20003b42:	2001      	movs	r0, #1
20003b44:	f7ff feb8 	bl	200038b8 <graphic_ctrl_bit_clear>
	graphic_ctrl_bit_clear(B_RW);
20003b48:	2002      	movs	r0, #2
20003b4a:	f7ff feb5 	bl	200038b8 <graphic_ctrl_bit_clear>
	graphic_write(command, controller);
20003b4e:	1dbb      	adds	r3, r7, #6
20003b50:	781a      	ldrb	r2, [r3, #0]
20003b52:	1dfb      	adds	r3, r7, #7
20003b54:	781b      	ldrb	r3, [r3, #0]
20003b56:	0011      	movs	r1, r2
20003b58:	0018      	movs	r0, r3
20003b5a:	f7ff ffa2 	bl	20003aa2 <graphic_write>
}
20003b5e:	46c0      	nop			; (mov r8, r8)
20003b60:	46bd      	mov	sp, r7
20003b62:	b002      	add	sp, #8
20003b64:	bd80      	pop	{r7, pc}

20003b66 <graphic_write_data>:
void graphic_write_data(uint8_t command, uint8_t controller) {
20003b66:	b580      	push	{r7, lr}
20003b68:	b082      	sub	sp, #8
20003b6a:	af00      	add	r7, sp, #0
20003b6c:	0002      	movs	r2, r0
20003b6e:	1dfb      	adds	r3, r7, #7
20003b70:	701a      	strb	r2, [r3, #0]
20003b72:	1dbb      	adds	r3, r7, #6
20003b74:	1c0a      	adds	r2, r1, #0
20003b76:	701a      	strb	r2, [r3, #0]
	graphic_ctrl_bit_clear(B_E);
20003b78:	2040      	movs	r0, #64	; 0x40
20003b7a:	f7ff fe9d 	bl	200038b8 <graphic_ctrl_bit_clear>
	select_controller(controller);
20003b7e:	1dbb      	adds	r3, r7, #6
20003b80:	781b      	ldrb	r3, [r3, #0]
20003b82:	0018      	movs	r0, r3
20003b84:	f7ff fec4 	bl	20003910 <select_controller>
	graphic_ctrl_bit_set(B_RS);
20003b88:	2001      	movs	r0, #1
20003b8a:	f7ff fe6d 	bl	20003868 <graphic_ctrl_bit_set>
	graphic_ctrl_bit_clear(B_RW);
20003b8e:	2002      	movs	r0, #2
20003b90:	f7ff fe92 	bl	200038b8 <graphic_ctrl_bit_clear>
	graphic_write(command, controller);
20003b94:	1dbb      	adds	r3, r7, #6
20003b96:	781a      	ldrb	r2, [r3, #0]
20003b98:	1dfb      	adds	r3, r7, #7
20003b9a:	781b      	ldrb	r3, [r3, #0]
20003b9c:	0011      	movs	r1, r2
20003b9e:	0018      	movs	r0, r3
20003ba0:	f7ff ff7f 	bl	20003aa2 <graphic_write>
}
20003ba4:	46c0      	nop			; (mov r8, r8)
20003ba6:	46bd      	mov	sp, r7
20003ba8:	b002      	add	sp, #8
20003baa:	bd80      	pop	{r7, pc}

20003bac <graphic_initialize>:

void graphic_initialize( void ) {
20003bac:	b580      	push	{r7, lr}
20003bae:	af00      	add	r7, sp, #0
	graphic_ctrl_bit_set(B_E);
20003bb0:	2040      	movs	r0, #64	; 0x40
20003bb2:	f7ff fe59 	bl	20003868 <graphic_ctrl_bit_set>
	delay_micro(10);
20003bb6:	200a      	movs	r0, #10
20003bb8:	f7ff fdf0 	bl	2000379c <delay_micro>
	
	graphic_ctrl_bit_clear(B_CS1);
20003bbc:	2008      	movs	r0, #8
20003bbe:	f7ff fe7b 	bl	200038b8 <graphic_ctrl_bit_clear>
	graphic_ctrl_bit_clear(B_CS2);
20003bc2:	2010      	movs	r0, #16
20003bc4:	f7ff fe78 	bl	200038b8 <graphic_ctrl_bit_clear>
	graphic_ctrl_bit_clear(B_RST);
20003bc8:	2020      	movs	r0, #32
20003bca:	f7ff fe75 	bl	200038b8 <graphic_ctrl_bit_clear>
	graphic_ctrl_bit_clear(B_E);
20003bce:	2040      	movs	r0, #64	; 0x40
20003bd0:	f7ff fe72 	bl	200038b8 <graphic_ctrl_bit_clear>
	//#define SIMULATOR
	delay_milli(30);
20003bd4:	201e      	movs	r0, #30
20003bd6:	f7ff fdf7 	bl	200037c8 <delay_milli>
	graphic_ctrl_bit_set(B_RST);
20003bda:	2020      	movs	r0, #32
20003bdc:	f7ff fe44 	bl	20003868 <graphic_ctrl_bit_set>
	delay_milli(100); //...
20003be0:	2064      	movs	r0, #100	; 0x64
20003be2:	f7ff fdf1 	bl	200037c8 <delay_milli>
	
	graphic_write_command(LCD_OFF, B_CS1|B_CS2);
20003be6:	2118      	movs	r1, #24
20003be8:	203e      	movs	r0, #62	; 0x3e
20003bea:	f7ff ff99 	bl	20003b20 <graphic_write_command>
	graphic_write_command(LCD_ON, B_CS1|B_CS2);
20003bee:	2118      	movs	r1, #24
20003bf0:	203f      	movs	r0, #63	; 0x3f
20003bf2:	f7ff ff95 	bl	20003b20 <graphic_write_command>
	graphic_write_command(LCD_DISP_START, B_CS1|B_CS2);
20003bf6:	2118      	movs	r1, #24
20003bf8:	20c0      	movs	r0, #192	; 0xc0
20003bfa:	f7ff ff91 	bl	20003b20 <graphic_write_command>
	graphic_write_command(LCD_SET_ADD, B_CS1|B_CS2);
20003bfe:	2118      	movs	r1, #24
20003c00:	2040      	movs	r0, #64	; 0x40
20003c02:	f7ff ff8d 	bl	20003b20 <graphic_write_command>
	graphic_write_command(LCD_SET_PAGE, B_CS1|B_CS2);
20003c06:	2118      	movs	r1, #24
20003c08:	20b8      	movs	r0, #184	; 0xb8
20003c0a:	f7ff ff89 	bl	20003b20 <graphic_write_command>
	select_controller(0);
20003c0e:	2000      	movs	r0, #0
20003c10:	f7ff fe7e 	bl	20003910 <select_controller>
}
20003c14:	46c0      	nop			; (mov r8, r8)
20003c16:	46bd      	mov	sp, r7
20003c18:	bd80      	pop	{r7, pc}

20003c1a <graphic_clear_screen>:
void graphic_clear_screen( void ) {	//Annat i slidesen
20003c1a:	b580      	push	{r7, lr}
20003c1c:	b082      	sub	sp, #8
20003c1e:	af00      	add	r7, sp, #0
	uint8_t page;
	for (page = 0; page < 8; page++) {
20003c20:	1dfb      	adds	r3, r7, #7
20003c22:	2200      	movs	r2, #0
20003c24:	701a      	strb	r2, [r3, #0]
20003c26:	e023      	b.n	20003c70 <graphic_clear_screen+0x56>
		graphic_write_command(LCD_SET_PAGE | page, B_CS1|B_CS2);
20003c28:	1dfb      	adds	r3, r7, #7
20003c2a:	781b      	ldrb	r3, [r3, #0]
20003c2c:	2248      	movs	r2, #72	; 0x48
20003c2e:	4252      	negs	r2, r2
20003c30:	4313      	orrs	r3, r2
20003c32:	b2db      	uxtb	r3, r3
20003c34:	2118      	movs	r1, #24
20003c36:	0018      	movs	r0, r3
20003c38:	f7ff ff72 	bl	20003b20 <graphic_write_command>
		graphic_write_command(LCD_SET_ADD | 0, B_CS1|B_CS2);
20003c3c:	2118      	movs	r1, #24
20003c3e:	2040      	movs	r0, #64	; 0x40
20003c40:	f7ff ff6e 	bl	20003b20 <graphic_write_command>
		uint8_t add;
		for (add = 0; add < 64; add++) {
20003c44:	1dbb      	adds	r3, r7, #6
20003c46:	2200      	movs	r2, #0
20003c48:	701a      	strb	r2, [r3, #0]
20003c4a:	e008      	b.n	20003c5e <graphic_clear_screen+0x44>
			graphic_write_data(0, B_CS1|B_CS2);
20003c4c:	2118      	movs	r1, #24
20003c4e:	2000      	movs	r0, #0
20003c50:	f7ff ff89 	bl	20003b66 <graphic_write_data>
		for (add = 0; add < 64; add++) {
20003c54:	1dbb      	adds	r3, r7, #6
20003c56:	781a      	ldrb	r2, [r3, #0]
20003c58:	1dbb      	adds	r3, r7, #6
20003c5a:	3201      	adds	r2, #1
20003c5c:	701a      	strb	r2, [r3, #0]
20003c5e:	1dbb      	adds	r3, r7, #6
20003c60:	781b      	ldrb	r3, [r3, #0]
20003c62:	2b3f      	cmp	r3, #63	; 0x3f
20003c64:	d9f2      	bls.n	20003c4c <graphic_clear_screen+0x32>
	for (page = 0; page < 8; page++) {
20003c66:	1dfb      	adds	r3, r7, #7
20003c68:	781a      	ldrb	r2, [r3, #0]
20003c6a:	1dfb      	adds	r3, r7, #7
20003c6c:	3201      	adds	r2, #1
20003c6e:	701a      	strb	r2, [r3, #0]
20003c70:	1dfb      	adds	r3, r7, #7
20003c72:	781b      	ldrb	r3, [r3, #0]
20003c74:	2b07      	cmp	r3, #7
20003c76:	d9d7      	bls.n	20003c28 <graphic_clear_screen+0xe>
		}
	}
}
20003c78:	46c0      	nop			; (mov r8, r8)
20003c7a:	46bd      	mov	sp, r7
20003c7c:	b002      	add	sp, #8
20003c7e:	bd80      	pop	{r7, pc}

20003c80 <pixel>:

/** Color: 1=light 2=gray 3=black*/
void pixel(int x, int y, int set, int color) {
20003c80:	b580      	push	{r7, lr}
20003c82:	b086      	sub	sp, #24
20003c84:	af00      	add	r7, sp, #0
20003c86:	60f8      	str	r0, [r7, #12]
20003c88:	60b9      	str	r1, [r7, #8]
20003c8a:	607a      	str	r2, [r7, #4]
20003c8c:	603b      	str	r3, [r7, #0]
	uint8_t mask;
	int index = 0;
20003c8e:	2300      	movs	r3, #0
20003c90:	613b      	str	r3, [r7, #16]
	if( (x > 128 ) || (x < 1) || (y > 64) || (y < 1) ) 
20003c92:	68fb      	ldr	r3, [r7, #12]
20003c94:	2b80      	cmp	r3, #128	; 0x80
20003c96:	dd00      	ble.n	20003c9a <pixel+0x1a>
20003c98:	e0a6      	b.n	20003de8 <pixel+0x168>
20003c9a:	68fb      	ldr	r3, [r7, #12]
20003c9c:	2b00      	cmp	r3, #0
20003c9e:	dc00      	bgt.n	20003ca2 <pixel+0x22>
20003ca0:	e0a2      	b.n	20003de8 <pixel+0x168>
20003ca2:	68bb      	ldr	r3, [r7, #8]
20003ca4:	2b40      	cmp	r3, #64	; 0x40
20003ca6:	dd00      	ble.n	20003caa <pixel+0x2a>
20003ca8:	e09e      	b.n	20003de8 <pixel+0x168>
20003caa:	68bb      	ldr	r3, [r7, #8]
20003cac:	2b00      	cmp	r3, #0
20003cae:	dc00      	bgt.n	20003cb2 <pixel+0x32>
20003cb0:	e09a      	b.n	20003de8 <pixel+0x168>
		return;
	mask = 1 << ((y-1)%8);
20003cb2:	68bb      	ldr	r3, [r7, #8]
20003cb4:	3b01      	subs	r3, #1
20003cb6:	4a4e      	ldr	r2, [pc, #312]	; (20003df0 <pixel+0x170>)
20003cb8:	4013      	ands	r3, r2
20003cba:	d504      	bpl.n	20003cc6 <pixel+0x46>
20003cbc:	3b01      	subs	r3, #1
20003cbe:	2208      	movs	r2, #8
20003cc0:	4252      	negs	r2, r2
20003cc2:	4313      	orrs	r3, r2
20003cc4:	3301      	adds	r3, #1
20003cc6:	001a      	movs	r2, r3
20003cc8:	2301      	movs	r3, #1
20003cca:	4093      	lsls	r3, r2
20003ccc:	001a      	movs	r2, r3
20003cce:	2317      	movs	r3, #23
20003cd0:	18fb      	adds	r3, r7, r3
20003cd2:	701a      	strb	r2, [r3, #0]
	if(x > 64) {
20003cd4:	68fb      	ldr	r3, [r7, #12]
20003cd6:	2b40      	cmp	r3, #64	; 0x40
20003cd8:	dd05      	ble.n	20003ce6 <pixel+0x66>
		x -= 65;
20003cda:	68fb      	ldr	r3, [r7, #12]
20003cdc:	3b41      	subs	r3, #65	; 0x41
20003cde:	60fb      	str	r3, [r7, #12]
		index = 512;
20003ce0:	2380      	movs	r3, #128	; 0x80
20003ce2:	009b      	lsls	r3, r3, #2
20003ce4:	613b      	str	r3, [r7, #16]
	}
	index += x + ((y-1)/8)*64;
20003ce6:	68bb      	ldr	r3, [r7, #8]
20003ce8:	3b01      	subs	r3, #1
20003cea:	2b00      	cmp	r3, #0
20003cec:	da00      	bge.n	20003cf0 <pixel+0x70>
20003cee:	3307      	adds	r3, #7
20003cf0:	10db      	asrs	r3, r3, #3
20003cf2:	019a      	lsls	r2, r3, #6
20003cf4:	68fb      	ldr	r3, [r7, #12]
20003cf6:	18d3      	adds	r3, r2, r3
20003cf8:	693a      	ldr	r2, [r7, #16]
20003cfa:	18d3      	adds	r3, r2, r3
20003cfc:	613b      	str	r3, [r7, #16]

	if(set == 0)
20003cfe:	687b      	ldr	r3, [r7, #4]
20003d00:	2b00      	cmp	r3, #0
20003d02:	d106      	bne.n	20003d12 <pixel+0x92>
		mask = ~mask;
20003d04:	2317      	movs	r3, #23
20003d06:	18fb      	adds	r3, r7, r3
20003d08:	2217      	movs	r2, #23
20003d0a:	18ba      	adds	r2, r7, r2
20003d0c:	7812      	ldrb	r2, [r2, #0]
20003d0e:	43d2      	mvns	r2, r2
20003d10:	701a      	strb	r2, [r3, #0]

	switch (color) {
20003d12:	683b      	ldr	r3, [r7, #0]
20003d14:	2b02      	cmp	r3, #2
20003d16:	d024      	beq.n	20003d62 <pixel+0xe2>
20003d18:	2b03      	cmp	r3, #3
20003d1a:	d043      	beq.n	20003da4 <pixel+0x124>
20003d1c:	2b01      	cmp	r3, #1
20003d1e:	d164      	bne.n	20003dea <pixel+0x16a>
		case 1:	
			if(set)
20003d20:	687b      	ldr	r3, [r7, #4]
20003d22:	2b00      	cmp	r3, #0
20003d24:	d00e      	beq.n	20003d44 <pixel+0xc4>
				backBufferLight[index] |= mask;
20003d26:	4a33      	ldr	r2, [pc, #204]	; (20003df4 <pixel+0x174>)
20003d28:	693b      	ldr	r3, [r7, #16]
20003d2a:	18d3      	adds	r3, r2, r3
20003d2c:	781a      	ldrb	r2, [r3, #0]
20003d2e:	2317      	movs	r3, #23
20003d30:	18fb      	adds	r3, r7, r3
20003d32:	781b      	ldrb	r3, [r3, #0]
20003d34:	4313      	orrs	r3, r2
20003d36:	b2d9      	uxtb	r1, r3
20003d38:	4a2e      	ldr	r2, [pc, #184]	; (20003df4 <pixel+0x174>)
20003d3a:	693b      	ldr	r3, [r7, #16]
20003d3c:	18d3      	adds	r3, r2, r3
20003d3e:	1c0a      	adds	r2, r1, #0
20003d40:	701a      	strb	r2, [r3, #0]
			else
				backBufferLight[index] &= mask;
			break;
20003d42:	e052      	b.n	20003dea <pixel+0x16a>
				backBufferLight[index] &= mask;
20003d44:	4a2b      	ldr	r2, [pc, #172]	; (20003df4 <pixel+0x174>)
20003d46:	693b      	ldr	r3, [r7, #16]
20003d48:	18d3      	adds	r3, r2, r3
20003d4a:	781b      	ldrb	r3, [r3, #0]
20003d4c:	2217      	movs	r2, #23
20003d4e:	18ba      	adds	r2, r7, r2
20003d50:	7812      	ldrb	r2, [r2, #0]
20003d52:	4013      	ands	r3, r2
20003d54:	b2d9      	uxtb	r1, r3
20003d56:	4a27      	ldr	r2, [pc, #156]	; (20003df4 <pixel+0x174>)
20003d58:	693b      	ldr	r3, [r7, #16]
20003d5a:	18d3      	adds	r3, r2, r3
20003d5c:	1c0a      	adds	r2, r1, #0
20003d5e:	701a      	strb	r2, [r3, #0]
			break;
20003d60:	e043      	b.n	20003dea <pixel+0x16a>
		
		case 2:	
			if(set)
20003d62:	687b      	ldr	r3, [r7, #4]
20003d64:	2b00      	cmp	r3, #0
20003d66:	d00e      	beq.n	20003d86 <pixel+0x106>
				backBufferGray[index] |= mask;
20003d68:	4a23      	ldr	r2, [pc, #140]	; (20003df8 <pixel+0x178>)
20003d6a:	693b      	ldr	r3, [r7, #16]
20003d6c:	18d3      	adds	r3, r2, r3
20003d6e:	781a      	ldrb	r2, [r3, #0]
20003d70:	2317      	movs	r3, #23
20003d72:	18fb      	adds	r3, r7, r3
20003d74:	781b      	ldrb	r3, [r3, #0]
20003d76:	4313      	orrs	r3, r2
20003d78:	b2d9      	uxtb	r1, r3
20003d7a:	4a1f      	ldr	r2, [pc, #124]	; (20003df8 <pixel+0x178>)
20003d7c:	693b      	ldr	r3, [r7, #16]
20003d7e:	18d3      	adds	r3, r2, r3
20003d80:	1c0a      	adds	r2, r1, #0
20003d82:	701a      	strb	r2, [r3, #0]
			else
				backBufferGray[index] &= mask;
			break;
20003d84:	e031      	b.n	20003dea <pixel+0x16a>
				backBufferGray[index] &= mask;
20003d86:	4a1c      	ldr	r2, [pc, #112]	; (20003df8 <pixel+0x178>)
20003d88:	693b      	ldr	r3, [r7, #16]
20003d8a:	18d3      	adds	r3, r2, r3
20003d8c:	781b      	ldrb	r3, [r3, #0]
20003d8e:	2217      	movs	r2, #23
20003d90:	18ba      	adds	r2, r7, r2
20003d92:	7812      	ldrb	r2, [r2, #0]
20003d94:	4013      	ands	r3, r2
20003d96:	b2d9      	uxtb	r1, r3
20003d98:	4a17      	ldr	r2, [pc, #92]	; (20003df8 <pixel+0x178>)
20003d9a:	693b      	ldr	r3, [r7, #16]
20003d9c:	18d3      	adds	r3, r2, r3
20003d9e:	1c0a      	adds	r2, r1, #0
20003da0:	701a      	strb	r2, [r3, #0]
			break;
20003da2:	e022      	b.n	20003dea <pixel+0x16a>
		
		case 3:	
			if(set)
20003da4:	687b      	ldr	r3, [r7, #4]
20003da6:	2b00      	cmp	r3, #0
20003da8:	d00e      	beq.n	20003dc8 <pixel+0x148>
				backBuffer[index] |= mask;
20003daa:	4a14      	ldr	r2, [pc, #80]	; (20003dfc <pixel+0x17c>)
20003dac:	693b      	ldr	r3, [r7, #16]
20003dae:	18d3      	adds	r3, r2, r3
20003db0:	781a      	ldrb	r2, [r3, #0]
20003db2:	2317      	movs	r3, #23
20003db4:	18fb      	adds	r3, r7, r3
20003db6:	781b      	ldrb	r3, [r3, #0]
20003db8:	4313      	orrs	r3, r2
20003dba:	b2d9      	uxtb	r1, r3
20003dbc:	4a0f      	ldr	r2, [pc, #60]	; (20003dfc <pixel+0x17c>)
20003dbe:	693b      	ldr	r3, [r7, #16]
20003dc0:	18d3      	adds	r3, r2, r3
20003dc2:	1c0a      	adds	r2, r1, #0
20003dc4:	701a      	strb	r2, [r3, #0]
			else
				backBuffer[index] &= mask;
			break;
20003dc6:	e010      	b.n	20003dea <pixel+0x16a>
				backBuffer[index] &= mask;
20003dc8:	4a0c      	ldr	r2, [pc, #48]	; (20003dfc <pixel+0x17c>)
20003dca:	693b      	ldr	r3, [r7, #16]
20003dcc:	18d3      	adds	r3, r2, r3
20003dce:	781b      	ldrb	r3, [r3, #0]
20003dd0:	2217      	movs	r2, #23
20003dd2:	18ba      	adds	r2, r7, r2
20003dd4:	7812      	ldrb	r2, [r2, #0]
20003dd6:	4013      	ands	r3, r2
20003dd8:	b2d9      	uxtb	r1, r3
20003dda:	4a08      	ldr	r2, [pc, #32]	; (20003dfc <pixel+0x17c>)
20003ddc:	693b      	ldr	r3, [r7, #16]
20003dde:	18d3      	adds	r3, r2, r3
20003de0:	1c0a      	adds	r2, r1, #0
20003de2:	701a      	strb	r2, [r3, #0]
			break;
20003de4:	46c0      	nop			; (mov r8, r8)
20003de6:	e000      	b.n	20003dea <pixel+0x16a>
		return;
20003de8:	46c0      	nop			; (mov r8, r8)
			
	}

}
20003dea:	46bd      	mov	sp, r7
20003dec:	b006      	add	sp, #24
20003dee:	bd80      	pop	{r7, pc}
20003df0:	80000007 	andhi	r0, r0, r7
20003df4:	20007c1c 	andcs	r7, r0, ip, lsl ip
20003df8:	2000641c 	andcs	r6, r0, ip, lsl r4
20003dfc:	20006c1c 	andcs	r6, r0, ip, lsl ip

20003e00 <fill_screen>:

void fill_screen(int pixels) {
20003e00:	b580      	push	{r7, lr}
20003e02:	b084      	sub	sp, #16
20003e04:	af00      	add	r7, sp, #0
20003e06:	6078      	str	r0, [r7, #4]
	int row, col;
	for(row = 1; row < 65; row++) {
20003e08:	2301      	movs	r3, #1
20003e0a:	60fb      	str	r3, [r7, #12]
20003e0c:	e017      	b.n	20003e3e <fill_screen+0x3e>
		for(col = 1; col < 129; col++) {
20003e0e:	2301      	movs	r3, #1
20003e10:	60bb      	str	r3, [r7, #8]
20003e12:	e00e      	b.n	20003e32 <fill_screen+0x32>
			pixel(col, row, 1, 3);
20003e14:	68f9      	ldr	r1, [r7, #12]
20003e16:	68b8      	ldr	r0, [r7, #8]
20003e18:	2303      	movs	r3, #3
20003e1a:	2201      	movs	r2, #1
20003e1c:	f7ff ff30 	bl	20003c80 <pixel>
			if(pixels <= 0)
20003e20:	687b      	ldr	r3, [r7, #4]
20003e22:	2b00      	cmp	r3, #0
20003e24:	dd0f      	ble.n	20003e46 <fill_screen+0x46>
				return;
			pixels--;
20003e26:	687b      	ldr	r3, [r7, #4]
20003e28:	3b01      	subs	r3, #1
20003e2a:	607b      	str	r3, [r7, #4]
		for(col = 1; col < 129; col++) {
20003e2c:	68bb      	ldr	r3, [r7, #8]
20003e2e:	3301      	adds	r3, #1
20003e30:	60bb      	str	r3, [r7, #8]
20003e32:	68bb      	ldr	r3, [r7, #8]
20003e34:	2b80      	cmp	r3, #128	; 0x80
20003e36:	dded      	ble.n	20003e14 <fill_screen+0x14>
	for(row = 1; row < 65; row++) {
20003e38:	68fb      	ldr	r3, [r7, #12]
20003e3a:	3301      	adds	r3, #1
20003e3c:	60fb      	str	r3, [r7, #12]
20003e3e:	68fb      	ldr	r3, [r7, #12]
20003e40:	2b40      	cmp	r3, #64	; 0x40
20003e42:	dde4      	ble.n	20003e0e <fill_screen+0xe>
20003e44:	e000      	b.n	20003e48 <fill_screen+0x48>
				return;
20003e46:	46c0      	nop			; (mov r8, r8)
		}
	}
}
20003e48:	46bd      	mov	sp, r7
20003e4a:	b004      	add	sp, #16
20003e4c:	bd80      	pop	{r7, pc}

20003e4e <pixel2>:

void pixel2(int x, int y, int set) {
20003e4e:	b580      	push	{r7, lr}
20003e50:	b088      	sub	sp, #32
20003e52:	af00      	add	r7, sp, #0
20003e54:	60f8      	str	r0, [r7, #12]
20003e56:	60b9      	str	r1, [r7, #8]
20003e58:	607a      	str	r2, [r7, #4]
	uint8_t mask, c, controller;
	int index;
	if((x < 1) || (y < 1) || (x > 128) || (y > 64)) return;
20003e5a:	68fb      	ldr	r3, [r7, #12]
20003e5c:	2b00      	cmp	r3, #0
20003e5e:	dc00      	bgt.n	20003e62 <pixel2+0x14>
20003e60:	e0bc      	b.n	20003fdc <pixel2+0x18e>
20003e62:	68bb      	ldr	r3, [r7, #8]
20003e64:	2b00      	cmp	r3, #0
20003e66:	dc00      	bgt.n	20003e6a <pixel2+0x1c>
20003e68:	e0b8      	b.n	20003fdc <pixel2+0x18e>
20003e6a:	68fb      	ldr	r3, [r7, #12]
20003e6c:	2b80      	cmp	r3, #128	; 0x80
20003e6e:	dd00      	ble.n	20003e72 <pixel2+0x24>
20003e70:	e0b4      	b.n	20003fdc <pixel2+0x18e>
20003e72:	68bb      	ldr	r3, [r7, #8]
20003e74:	2b40      	cmp	r3, #64	; 0x40
20003e76:	dd00      	ble.n	20003e7a <pixel2+0x2c>
20003e78:	e0b0      	b.n	20003fdc <pixel2+0x18e>
	index = (y-1)/8;
20003e7a:	68bb      	ldr	r3, [r7, #8]
20003e7c:	3b01      	subs	r3, #1
20003e7e:	2b00      	cmp	r3, #0
20003e80:	da00      	bge.n	20003e84 <pixel2+0x36>
20003e82:	3307      	adds	r3, #7
20003e84:	10db      	asrs	r3, r3, #3
20003e86:	61bb      	str	r3, [r7, #24]
	switch( (y-1)%8 ) {
20003e88:	68bb      	ldr	r3, [r7, #8]
20003e8a:	3b01      	subs	r3, #1
20003e8c:	4a55      	ldr	r2, [pc, #340]	; (20003fe4 <pixel2+0x196>)
20003e8e:	4013      	ands	r3, r2
20003e90:	d504      	bpl.n	20003e9c <pixel2+0x4e>
20003e92:	3b01      	subs	r3, #1
20003e94:	2208      	movs	r2, #8
20003e96:	4252      	negs	r2, r2
20003e98:	4313      	orrs	r3, r2
20003e9a:	3301      	adds	r3, #1
20003e9c:	2b07      	cmp	r3, #7
20003e9e:	d82c      	bhi.n	20003efa <pixel2+0xac>
20003ea0:	009a      	lsls	r2, r3, #2
20003ea2:	4b51      	ldr	r3, [pc, #324]	; (20003fe8 <pixel2+0x19a>)
20003ea4:	18d3      	adds	r3, r2, r3
20003ea6:	681b      	ldr	r3, [r3, #0]
20003ea8:	469f      	mov	pc, r3
		case 0: mask = 1; break;
20003eaa:	231f      	movs	r3, #31
20003eac:	18fb      	adds	r3, r7, r3
20003eae:	2201      	movs	r2, #1
20003eb0:	701a      	strb	r2, [r3, #0]
20003eb2:	e022      	b.n	20003efa <pixel2+0xac>
		case 1: mask = 2; break;
20003eb4:	231f      	movs	r3, #31
20003eb6:	18fb      	adds	r3, r7, r3
20003eb8:	2202      	movs	r2, #2
20003eba:	701a      	strb	r2, [r3, #0]
20003ebc:	e01d      	b.n	20003efa <pixel2+0xac>
		case 2: mask = 4; break;
20003ebe:	231f      	movs	r3, #31
20003ec0:	18fb      	adds	r3, r7, r3
20003ec2:	2204      	movs	r2, #4
20003ec4:	701a      	strb	r2, [r3, #0]
20003ec6:	e018      	b.n	20003efa <pixel2+0xac>
		case 3: mask = 8; break;
20003ec8:	231f      	movs	r3, #31
20003eca:	18fb      	adds	r3, r7, r3
20003ecc:	2208      	movs	r2, #8
20003ece:	701a      	strb	r2, [r3, #0]
20003ed0:	e013      	b.n	20003efa <pixel2+0xac>
		case 4: mask = 0x10; break;
20003ed2:	231f      	movs	r3, #31
20003ed4:	18fb      	adds	r3, r7, r3
20003ed6:	2210      	movs	r2, #16
20003ed8:	701a      	strb	r2, [r3, #0]
20003eda:	e00e      	b.n	20003efa <pixel2+0xac>
		case 5: mask = 0x20; break;
20003edc:	231f      	movs	r3, #31
20003ede:	18fb      	adds	r3, r7, r3
20003ee0:	2220      	movs	r2, #32
20003ee2:	701a      	strb	r2, [r3, #0]
20003ee4:	e009      	b.n	20003efa <pixel2+0xac>
		case 6: mask = 0x40; break;
20003ee6:	231f      	movs	r3, #31
20003ee8:	18fb      	adds	r3, r7, r3
20003eea:	2240      	movs	r2, #64	; 0x40
20003eec:	701a      	strb	r2, [r3, #0]
20003eee:	e004      	b.n	20003efa <pixel2+0xac>
		case 7: mask = 0x80; break;
20003ef0:	231f      	movs	r3, #31
20003ef2:	18fb      	adds	r3, r7, r3
20003ef4:	2280      	movs	r2, #128	; 0x80
20003ef6:	701a      	strb	r2, [r3, #0]
20003ef8:	46c0      	nop			; (mov r8, r8)
	}
	
	if(set == 0)
20003efa:	687b      	ldr	r3, [r7, #4]
20003efc:	2b00      	cmp	r3, #0
20003efe:	d106      	bne.n	20003f0e <pixel2+0xc0>
		mask = ~mask;
20003f00:	231f      	movs	r3, #31
20003f02:	18fb      	adds	r3, r7, r3
20003f04:	221f      	movs	r2, #31
20003f06:	18ba      	adds	r2, r7, r2
20003f08:	7812      	ldrb	r2, [r2, #0]
20003f0a:	43d2      	mvns	r2, r2
20003f0c:	701a      	strb	r2, [r3, #0]
	
	if(x > 64){
20003f0e:	68fb      	ldr	r3, [r7, #12]
20003f10:	2b40      	cmp	r3, #64	; 0x40
20003f12:	dd07      	ble.n	20003f24 <pixel2+0xd6>
		controller = B_CS2;
20003f14:	231e      	movs	r3, #30
20003f16:	18fb      	adds	r3, r7, r3
20003f18:	2210      	movs	r2, #16
20003f1a:	701a      	strb	r2, [r3, #0]
		x = x - 65;
20003f1c:	68fb      	ldr	r3, [r7, #12]
20003f1e:	3b41      	subs	r3, #65	; 0x41
20003f20:	60fb      	str	r3, [r7, #12]
20003f22:	e006      	b.n	20003f32 <pixel2+0xe4>
	} else {
		controller = B_CS1;
20003f24:	231e      	movs	r3, #30
20003f26:	18fb      	adds	r3, r7, r3
20003f28:	2208      	movs	r2, #8
20003f2a:	701a      	strb	r2, [r3, #0]
		x = x-1;
20003f2c:	68fb      	ldr	r3, [r7, #12]
20003f2e:	3b01      	subs	r3, #1
20003f30:	60fb      	str	r3, [r7, #12]
	}
	graphic_write_command(LCD_SET_ADD | x, controller );
20003f32:	68fb      	ldr	r3, [r7, #12]
20003f34:	b25b      	sxtb	r3, r3
20003f36:	2240      	movs	r2, #64	; 0x40
20003f38:	4313      	orrs	r3, r2
20003f3a:	b25b      	sxtb	r3, r3
20003f3c:	b2da      	uxtb	r2, r3
20003f3e:	231e      	movs	r3, #30
20003f40:	18fb      	adds	r3, r7, r3
20003f42:	781b      	ldrb	r3, [r3, #0]
20003f44:	0019      	movs	r1, r3
20003f46:	0010      	movs	r0, r2
20003f48:	f7ff fdea 	bl	20003b20 <graphic_write_command>
	graphic_write_command(LCD_SET_PAGE | index, controller );
20003f4c:	69bb      	ldr	r3, [r7, #24]
20003f4e:	b25b      	sxtb	r3, r3
20003f50:	2248      	movs	r2, #72	; 0x48
20003f52:	4252      	negs	r2, r2
20003f54:	4313      	orrs	r3, r2
20003f56:	b25b      	sxtb	r3, r3
20003f58:	b2da      	uxtb	r2, r3
20003f5a:	231e      	movs	r3, #30
20003f5c:	18fb      	adds	r3, r7, r3
20003f5e:	781b      	ldrb	r3, [r3, #0]
20003f60:	0019      	movs	r1, r3
20003f62:	0010      	movs	r0, r2
20003f64:	f7ff fddc 	bl	20003b20 <graphic_write_command>
	
	c = graphic_read_data(controller);
20003f68:	231e      	movs	r3, #30
20003f6a:	18fb      	adds	r3, r7, r3
20003f6c:	781b      	ldrb	r3, [r3, #0]
20003f6e:	0018      	movs	r0, r3
20003f70:	f7ff fd82 	bl	20003a78 <graphic_read_data>
20003f74:	0002      	movs	r2, r0
20003f76:	2317      	movs	r3, #23
20003f78:	18fb      	adds	r3, r7, r3
20003f7a:	701a      	strb	r2, [r3, #0]
	graphic_write_command(LCD_SET_ADD | x, controller);
20003f7c:	68fb      	ldr	r3, [r7, #12]
20003f7e:	b25b      	sxtb	r3, r3
20003f80:	2240      	movs	r2, #64	; 0x40
20003f82:	4313      	orrs	r3, r2
20003f84:	b25b      	sxtb	r3, r3
20003f86:	b2da      	uxtb	r2, r3
20003f88:	231e      	movs	r3, #30
20003f8a:	18fb      	adds	r3, r7, r3
20003f8c:	781b      	ldrb	r3, [r3, #0]
20003f8e:	0019      	movs	r1, r3
20003f90:	0010      	movs	r0, r2
20003f92:	f7ff fdc5 	bl	20003b20 <graphic_write_command>
	
	if(set)
20003f96:	687b      	ldr	r3, [r7, #4]
20003f98:	2b00      	cmp	r3, #0
20003f9a:	d00a      	beq.n	20003fb2 <pixel2+0x164>
		mask = mask | c;
20003f9c:	231f      	movs	r3, #31
20003f9e:	18fb      	adds	r3, r7, r3
20003fa0:	221f      	movs	r2, #31
20003fa2:	18b9      	adds	r1, r7, r2
20003fa4:	2217      	movs	r2, #23
20003fa6:	18ba      	adds	r2, r7, r2
20003fa8:	7809      	ldrb	r1, [r1, #0]
20003faa:	7812      	ldrb	r2, [r2, #0]
20003fac:	430a      	orrs	r2, r1
20003fae:	701a      	strb	r2, [r3, #0]
20003fb0:	e009      	b.n	20003fc6 <pixel2+0x178>
	else
		mask = mask & c;
20003fb2:	231f      	movs	r3, #31
20003fb4:	18fb      	adds	r3, r7, r3
20003fb6:	221f      	movs	r2, #31
20003fb8:	18ba      	adds	r2, r7, r2
20003fba:	2117      	movs	r1, #23
20003fbc:	1879      	adds	r1, r7, r1
20003fbe:	7812      	ldrb	r2, [r2, #0]
20003fc0:	7809      	ldrb	r1, [r1, #0]
20003fc2:	400a      	ands	r2, r1
20003fc4:	701a      	strb	r2, [r3, #0]
	
	graphic_write_data(mask, controller);
20003fc6:	231e      	movs	r3, #30
20003fc8:	18fb      	adds	r3, r7, r3
20003fca:	781a      	ldrb	r2, [r3, #0]
20003fcc:	231f      	movs	r3, #31
20003fce:	18fb      	adds	r3, r7, r3
20003fd0:	781b      	ldrb	r3, [r3, #0]
20003fd2:	0011      	movs	r1, r2
20003fd4:	0018      	movs	r0, r3
20003fd6:	f7ff fdc6 	bl	20003b66 <graphic_write_data>
20003fda:	e000      	b.n	20003fde <pixel2+0x190>
	if((x < 1) || (y < 1) || (x > 128) || (y > 64)) return;
20003fdc:	46c0      	nop			; (mov r8, r8)
}
20003fde:	46bd      	mov	sp, r7
20003fe0:	b008      	add	sp, #32
20003fe2:	bd80      	pop	{r7, pc}
20003fe4:	80000007 	andhi	r0, r0, r7
20003fe8:	20015870 	andcs	r5, r1, r0, ror r8

20003fec <graphic_draw_screen>:

void graphic_draw_screen(uint8_t *buffer) {
20003fec:	b580      	push	{r7, lr}
20003fee:	b086      	sub	sp, #24
20003ff0:	af00      	add	r7, sp, #0
20003ff2:	6078      	str	r0, [r7, #4]
	uint8_t i, j, controller, c;
	unsigned int k = 0;
20003ff4:	2300      	movs	r3, #0
20003ff6:	613b      	str	r3, [r7, #16]
	for(c = 0; c < 2; c++) {
20003ff8:	2315      	movs	r3, #21
20003ffa:	18fb      	adds	r3, r7, r3
20003ffc:	2200      	movs	r2, #0
20003ffe:	701a      	strb	r2, [r3, #0]
20004000:	e056      	b.n	200040b0 <graphic_draw_screen+0xc4>
		controller = (c == 0) ? B_CS1 : B_CS2;
20004002:	2315      	movs	r3, #21
20004004:	18fb      	adds	r3, r7, r3
20004006:	781b      	ldrb	r3, [r3, #0]
20004008:	2b00      	cmp	r3, #0
2000400a:	d101      	bne.n	20004010 <graphic_draw_screen+0x24>
2000400c:	2208      	movs	r2, #8
2000400e:	e000      	b.n	20004012 <graphic_draw_screen+0x26>
20004010:	2210      	movs	r2, #16
20004012:	230f      	movs	r3, #15
20004014:	18fb      	adds	r3, r7, r3
20004016:	701a      	strb	r2, [r3, #0]
		for(j = 0; j < 8; j++) {
20004018:	2316      	movs	r3, #22
2000401a:	18fb      	adds	r3, r7, r3
2000401c:	2200      	movs	r2, #0
2000401e:	701a      	strb	r2, [r3, #0]
20004020:	e03a      	b.n	20004098 <graphic_draw_screen+0xac>
			graphic_write_command(LCD_SET_PAGE | j, controller);
20004022:	2316      	movs	r3, #22
20004024:	18fb      	adds	r3, r7, r3
20004026:	781b      	ldrb	r3, [r3, #0]
20004028:	2248      	movs	r2, #72	; 0x48
2000402a:	4252      	negs	r2, r2
2000402c:	4313      	orrs	r3, r2
2000402e:	b2da      	uxtb	r2, r3
20004030:	230f      	movs	r3, #15
20004032:	18fb      	adds	r3, r7, r3
20004034:	781b      	ldrb	r3, [r3, #0]
20004036:	0019      	movs	r1, r3
20004038:	0010      	movs	r0, r2
2000403a:	f7ff fd71 	bl	20003b20 <graphic_write_command>
			graphic_write_command(LCD_SET_ADD | 0, controller);
2000403e:	230f      	movs	r3, #15
20004040:	18fb      	adds	r3, r7, r3
20004042:	781b      	ldrb	r3, [r3, #0]
20004044:	0019      	movs	r1, r3
20004046:	2040      	movs	r0, #64	; 0x40
20004048:	f7ff fd6a 	bl	20003b20 <graphic_write_command>
			for(i = 0; i <= 63; i++, k++) {
2000404c:	2317      	movs	r3, #23
2000404e:	18fb      	adds	r3, r7, r3
20004050:	2200      	movs	r2, #0
20004052:	701a      	strb	r2, [r3, #0]
20004054:	e014      	b.n	20004080 <graphic_draw_screen+0x94>
				graphic_write_data(buffer[k], controller);
20004056:	687a      	ldr	r2, [r7, #4]
20004058:	693b      	ldr	r3, [r7, #16]
2000405a:	18d3      	adds	r3, r2, r3
2000405c:	781a      	ldrb	r2, [r3, #0]
2000405e:	230f      	movs	r3, #15
20004060:	18fb      	adds	r3, r7, r3
20004062:	781b      	ldrb	r3, [r3, #0]
20004064:	0019      	movs	r1, r3
20004066:	0010      	movs	r0, r2
20004068:	f7ff fd7d 	bl	20003b66 <graphic_write_data>
			for(i = 0; i <= 63; i++, k++) {
2000406c:	2317      	movs	r3, #23
2000406e:	18fb      	adds	r3, r7, r3
20004070:	781a      	ldrb	r2, [r3, #0]
20004072:	2317      	movs	r3, #23
20004074:	18fb      	adds	r3, r7, r3
20004076:	3201      	adds	r2, #1
20004078:	701a      	strb	r2, [r3, #0]
2000407a:	693b      	ldr	r3, [r7, #16]
2000407c:	3301      	adds	r3, #1
2000407e:	613b      	str	r3, [r7, #16]
20004080:	2317      	movs	r3, #23
20004082:	18fb      	adds	r3, r7, r3
20004084:	781b      	ldrb	r3, [r3, #0]
20004086:	2b3f      	cmp	r3, #63	; 0x3f
20004088:	d9e5      	bls.n	20004056 <graphic_draw_screen+0x6a>
		for(j = 0; j < 8; j++) {
2000408a:	2316      	movs	r3, #22
2000408c:	18fb      	adds	r3, r7, r3
2000408e:	781a      	ldrb	r2, [r3, #0]
20004090:	2316      	movs	r3, #22
20004092:	18fb      	adds	r3, r7, r3
20004094:	3201      	adds	r2, #1
20004096:	701a      	strb	r2, [r3, #0]
20004098:	2316      	movs	r3, #22
2000409a:	18fb      	adds	r3, r7, r3
2000409c:	781b      	ldrb	r3, [r3, #0]
2000409e:	2b07      	cmp	r3, #7
200040a0:	d9bf      	bls.n	20004022 <graphic_draw_screen+0x36>
	for(c = 0; c < 2; c++) {
200040a2:	2315      	movs	r3, #21
200040a4:	18fb      	adds	r3, r7, r3
200040a6:	781a      	ldrb	r2, [r3, #0]
200040a8:	2315      	movs	r3, #21
200040aa:	18fb      	adds	r3, r7, r3
200040ac:	3201      	adds	r2, #1
200040ae:	701a      	strb	r2, [r3, #0]
200040b0:	2315      	movs	r3, #21
200040b2:	18fb      	adds	r3, r7, r3
200040b4:	781b      	ldrb	r3, [r3, #0]
200040b6:	2b01      	cmp	r3, #1
200040b8:	d9a3      	bls.n	20004002 <graphic_draw_screen+0x16>
			}
		}
	}
}
200040ba:	46c0      	nop			; (mov r8, r8)
200040bc:	46bd      	mov	sp, r7
200040be:	b006      	add	sp, #24
200040c0:	bd80      	pop	{r7, pc}

200040c2 <draw_sprite>:


void grayScaleTest( void );


void draw_sprite(sprite* s, int x, int y, int set, int color) {
200040c2:	b5b0      	push	{r4, r5, r7, lr}
200040c4:	b08a      	sub	sp, #40	; 0x28
200040c6:	af00      	add	r7, sp, #0
200040c8:	60f8      	str	r0, [r7, #12]
200040ca:	60b9      	str	r1, [r7, #8]
200040cc:	607a      	str	r2, [r7, #4]
200040ce:	603b      	str	r3, [r7, #0]
	int i,j,k, width_in_bytes;
	if (s->width % 8 == 0)
200040d0:	68fb      	ldr	r3, [r7, #12]
200040d2:	681b      	ldr	r3, [r3, #0]
200040d4:	2207      	movs	r2, #7
200040d6:	4013      	ands	r3, r2
200040d8:	d104      	bne.n	200040e4 <draw_sprite+0x22>
		width_in_bytes = s->width / 8;
200040da:	68fb      	ldr	r3, [r7, #12]
200040dc:	681b      	ldr	r3, [r3, #0]
200040de:	08db      	lsrs	r3, r3, #3
200040e0:	61bb      	str	r3, [r7, #24]
200040e2:	e004      	b.n	200040ee <draw_sprite+0x2c>
	else
		width_in_bytes = (s->width / 8) + 1;
200040e4:	68fb      	ldr	r3, [r7, #12]
200040e6:	681b      	ldr	r3, [r3, #0]
200040e8:	08db      	lsrs	r3, r3, #3
200040ea:	3301      	adds	r3, #1
200040ec:	61bb      	str	r3, [r7, #24]
	for (i = 0; i < s->height; i++)
200040ee:	2300      	movs	r3, #0
200040f0:	627b      	str	r3, [r7, #36]	; 0x24
200040f2:	e06a      	b.n	200041ca <draw_sprite+0x108>
		for (j = 0; j < width_in_bytes; j++) {
200040f4:	2300      	movs	r3, #0
200040f6:	623b      	str	r3, [r7, #32]
200040f8:	e060      	b.n	200041bc <draw_sprite+0xfa>
			unsigned char byte = s->data[i * width_in_bytes + j];
200040fa:	68fb      	ldr	r3, [r7, #12]
200040fc:	689b      	ldr	r3, [r3, #8]
200040fe:	6a7a      	ldr	r2, [r7, #36]	; 0x24
20004100:	69b9      	ldr	r1, [r7, #24]
20004102:	4351      	muls	r1, r2
20004104:	6a3a      	ldr	r2, [r7, #32]
20004106:	188a      	adds	r2, r1, r2
20004108:	189a      	adds	r2, r3, r2
2000410a:	2317      	movs	r3, #23
2000410c:	18fb      	adds	r3, r7, r3
2000410e:	7812      	ldrb	r2, [r2, #0]
20004110:	701a      	strb	r2, [r3, #0]
			for (k =0; k < 8; k++) {
20004112:	2300      	movs	r3, #0
20004114:	61fb      	str	r3, [r7, #28]
20004116:	e04b      	b.n	200041b0 <draw_sprite+0xee>
				if (byte & (1 << k)){
20004118:	2317      	movs	r3, #23
2000411a:	18fb      	adds	r3, r7, r3
2000411c:	781a      	ldrb	r2, [r3, #0]
2000411e:	69fb      	ldr	r3, [r7, #28]
20004120:	411a      	asrs	r2, r3
20004122:	0013      	movs	r3, r2
20004124:	2201      	movs	r2, #1
20004126:	4013      	ands	r3, r2
20004128:	d03f      	beq.n	200041aa <draw_sprite+0xe8>
					pixel(8 * j + k + x + 1, i + y + 1, set, color);
2000412a:	6a3b      	ldr	r3, [r7, #32]
2000412c:	00da      	lsls	r2, r3, #3
2000412e:	69fb      	ldr	r3, [r7, #28]
20004130:	18d2      	adds	r2, r2, r3
20004132:	68bb      	ldr	r3, [r7, #8]
20004134:	18d3      	adds	r3, r2, r3
20004136:	1c58      	adds	r0, r3, #1
20004138:	6a7a      	ldr	r2, [r7, #36]	; 0x24
2000413a:	687b      	ldr	r3, [r7, #4]
2000413c:	18d3      	adds	r3, r2, r3
2000413e:	1c59      	adds	r1, r3, #1
20004140:	6bbb      	ldr	r3, [r7, #56]	; 0x38
20004142:	683a      	ldr	r2, [r7, #0]
20004144:	f7ff fd9c 	bl	20003c80 <pixel>
					
					if(set) {	//Remove the other colors from this pixel
20004148:	683b      	ldr	r3, [r7, #0]
2000414a:	2b00      	cmp	r3, #0
2000414c:	d02d      	beq.n	200041aa <draw_sprite+0xe8>
						pixel(8 * j + k + x + 1, i + y + 1, 0, (color+1) % 3);
2000414e:	6a3b      	ldr	r3, [r7, #32]
20004150:	00da      	lsls	r2, r3, #3
20004152:	69fb      	ldr	r3, [r7, #28]
20004154:	18d2      	adds	r2, r2, r3
20004156:	68bb      	ldr	r3, [r7, #8]
20004158:	18d3      	adds	r3, r2, r3
2000415a:	1c5c      	adds	r4, r3, #1
2000415c:	6a7a      	ldr	r2, [r7, #36]	; 0x24
2000415e:	687b      	ldr	r3, [r7, #4]
20004160:	18d3      	adds	r3, r2, r3
20004162:	1c5d      	adds	r5, r3, #1
20004164:	6bbb      	ldr	r3, [r7, #56]	; 0x38
20004166:	3301      	adds	r3, #1
20004168:	2103      	movs	r1, #3
2000416a:	0018      	movs	r0, r3
2000416c:	f001 fae0 	bl	20005730 <__aeabi_idivmod>
20004170:	000b      	movs	r3, r1
20004172:	2200      	movs	r2, #0
20004174:	0029      	movs	r1, r5
20004176:	0020      	movs	r0, r4
20004178:	f7ff fd82 	bl	20003c80 <pixel>
						pixel(8 * j + k + x + 1, i + y + 1, 0, (color+2) % 3);
2000417c:	6a3b      	ldr	r3, [r7, #32]
2000417e:	00da      	lsls	r2, r3, #3
20004180:	69fb      	ldr	r3, [r7, #28]
20004182:	18d2      	adds	r2, r2, r3
20004184:	68bb      	ldr	r3, [r7, #8]
20004186:	18d3      	adds	r3, r2, r3
20004188:	1c5c      	adds	r4, r3, #1
2000418a:	6a7a      	ldr	r2, [r7, #36]	; 0x24
2000418c:	687b      	ldr	r3, [r7, #4]
2000418e:	18d3      	adds	r3, r2, r3
20004190:	1c5d      	adds	r5, r3, #1
20004192:	6bbb      	ldr	r3, [r7, #56]	; 0x38
20004194:	3302      	adds	r3, #2
20004196:	2103      	movs	r1, #3
20004198:	0018      	movs	r0, r3
2000419a:	f001 fac9 	bl	20005730 <__aeabi_idivmod>
2000419e:	000b      	movs	r3, r1
200041a0:	2200      	movs	r2, #0
200041a2:	0029      	movs	r1, r5
200041a4:	0020      	movs	r0, r4
200041a6:	f7ff fd6b 	bl	20003c80 <pixel>
			for (k =0; k < 8; k++) {
200041aa:	69fb      	ldr	r3, [r7, #28]
200041ac:	3301      	adds	r3, #1
200041ae:	61fb      	str	r3, [r7, #28]
200041b0:	69fb      	ldr	r3, [r7, #28]
200041b2:	2b07      	cmp	r3, #7
200041b4:	ddb0      	ble.n	20004118 <draw_sprite+0x56>
		for (j = 0; j < width_in_bytes; j++) {
200041b6:	6a3b      	ldr	r3, [r7, #32]
200041b8:	3301      	adds	r3, #1
200041ba:	623b      	str	r3, [r7, #32]
200041bc:	6a3a      	ldr	r2, [r7, #32]
200041be:	69bb      	ldr	r3, [r7, #24]
200041c0:	429a      	cmp	r2, r3
200041c2:	db9a      	blt.n	200040fa <draw_sprite+0x38>
	for (i = 0; i < s->height; i++)
200041c4:	6a7b      	ldr	r3, [r7, #36]	; 0x24
200041c6:	3301      	adds	r3, #1
200041c8:	627b      	str	r3, [r7, #36]	; 0x24
200041ca:	68fb      	ldr	r3, [r7, #12]
200041cc:	685a      	ldr	r2, [r3, #4]
200041ce:	6a7b      	ldr	r3, [r7, #36]	; 0x24
200041d0:	429a      	cmp	r2, r3
200041d2:	d88f      	bhi.n	200040f4 <draw_sprite+0x32>
					}
				}
			}
		}
}
200041d4:	46c0      	nop			; (mov r8, r8)
200041d6:	46bd      	mov	sp, r7
200041d8:	b00a      	add	sp, #40	; 0x28
200041da:	bdb0      	pop	{r4, r5, r7, pc}

200041dc <fillRectangle>:

void fillRectangle( int x, int y, int width, int height ){
200041dc:	b580      	push	{r7, lr}
200041de:	b086      	sub	sp, #24
200041e0:	af00      	add	r7, sp, #0
200041e2:	60f8      	str	r0, [r7, #12]
200041e4:	60b9      	str	r1, [r7, #8]
200041e6:	607a      	str	r2, [r7, #4]
200041e8:	603b      	str	r3, [r7, #0]
	int i;
	int j;
	for (i = x; i < x + width; i++) {
200041ea:	68fb      	ldr	r3, [r7, #12]
200041ec:	617b      	str	r3, [r7, #20]
200041ee:	e014      	b.n	2000421a <fillRectangle+0x3e>
		for (j = y; j < y + height; j++) {
200041f0:	68bb      	ldr	r3, [r7, #8]
200041f2:	613b      	str	r3, [r7, #16]
200041f4:	e008      	b.n	20004208 <fillRectangle+0x2c>
			pixel(i, j, 1, 3);
200041f6:	6939      	ldr	r1, [r7, #16]
200041f8:	6978      	ldr	r0, [r7, #20]
200041fa:	2303      	movs	r3, #3
200041fc:	2201      	movs	r2, #1
200041fe:	f7ff fd3f 	bl	20003c80 <pixel>
		for (j = y; j < y + height; j++) {
20004202:	693b      	ldr	r3, [r7, #16]
20004204:	3301      	adds	r3, #1
20004206:	613b      	str	r3, [r7, #16]
20004208:	68ba      	ldr	r2, [r7, #8]
2000420a:	683b      	ldr	r3, [r7, #0]
2000420c:	18d2      	adds	r2, r2, r3
2000420e:	693b      	ldr	r3, [r7, #16]
20004210:	429a      	cmp	r2, r3
20004212:	dcf0      	bgt.n	200041f6 <fillRectangle+0x1a>
	for (i = x; i < x + width; i++) {
20004214:	697b      	ldr	r3, [r7, #20]
20004216:	3301      	adds	r3, #1
20004218:	617b      	str	r3, [r7, #20]
2000421a:	68fa      	ldr	r2, [r7, #12]
2000421c:	687b      	ldr	r3, [r7, #4]
2000421e:	18d2      	adds	r2, r2, r3
20004220:	697b      	ldr	r3, [r7, #20]
20004222:	429a      	cmp	r2, r3
20004224:	dce4      	bgt.n	200041f0 <fillRectangle+0x14>
		}
	}
}
20004226:	46c0      	nop			; (mov r8, r8)
20004228:	46bd      	mov	sp, r7
2000422a:	b006      	add	sp, #24
2000422c:	bd80      	pop	{r7, pc}

2000422e <clearRectangle>:

void clearRectangle( int x, int y, int width, int height ){
2000422e:	b580      	push	{r7, lr}
20004230:	b086      	sub	sp, #24
20004232:	af00      	add	r7, sp, #0
20004234:	60f8      	str	r0, [r7, #12]
20004236:	60b9      	str	r1, [r7, #8]
20004238:	607a      	str	r2, [r7, #4]
2000423a:	603b      	str	r3, [r7, #0]
	int i;
	int j;
	for (i = x; i < x + width; i++) {
2000423c:	68fb      	ldr	r3, [r7, #12]
2000423e:	617b      	str	r3, [r7, #20]
20004240:	e014      	b.n	2000426c <clearRectangle+0x3e>
		for (j = y; j < y + height; j++) {
20004242:	68bb      	ldr	r3, [r7, #8]
20004244:	613b      	str	r3, [r7, #16]
20004246:	e008      	b.n	2000425a <clearRectangle+0x2c>
			pixel(i, j, 0, 3);
20004248:	6939      	ldr	r1, [r7, #16]
2000424a:	6978      	ldr	r0, [r7, #20]
2000424c:	2303      	movs	r3, #3
2000424e:	2200      	movs	r2, #0
20004250:	f7ff fd16 	bl	20003c80 <pixel>
		for (j = y; j < y + height; j++) {
20004254:	693b      	ldr	r3, [r7, #16]
20004256:	3301      	adds	r3, #1
20004258:	613b      	str	r3, [r7, #16]
2000425a:	68ba      	ldr	r2, [r7, #8]
2000425c:	683b      	ldr	r3, [r7, #0]
2000425e:	18d2      	adds	r2, r2, r3
20004260:	693b      	ldr	r3, [r7, #16]
20004262:	429a      	cmp	r2, r3
20004264:	dcf0      	bgt.n	20004248 <clearRectangle+0x1a>
	for (i = x; i < x + width; i++) {
20004266:	697b      	ldr	r3, [r7, #20]
20004268:	3301      	adds	r3, #1
2000426a:	617b      	str	r3, [r7, #20]
2000426c:	68fa      	ldr	r2, [r7, #12]
2000426e:	687b      	ldr	r3, [r7, #4]
20004270:	18d2      	adds	r2, r2, r3
20004272:	697b      	ldr	r3, [r7, #20]
20004274:	429a      	cmp	r2, r3
20004276:	dce4      	bgt.n	20004242 <clearRectangle+0x14>
		}
	}
}
20004278:	46c0      	nop			; (mov r8, r8)
2000427a:	46bd      	mov	sp, r7
2000427c:	b006      	add	sp, #24
2000427e:	bd80      	pop	{r7, pc}

20004280 <grayScaleTest>:


void grayScaleTest( void ) {
20004280:	b590      	push	{r4, r7, lr}
20004282:	b087      	sub	sp, #28
20004284:	af00      	add	r7, sp, #0
	int x = 10;
20004286:	230a      	movs	r3, #10
20004288:	617b      	str	r3, [r7, #20]
	int y = 10;
2000428a:	230a      	movs	r3, #10
2000428c:	613b      	str	r3, [r7, #16]
	int width = 70;
2000428e:	2346      	movs	r3, #70	; 0x46
20004290:	60fb      	str	r3, [r7, #12]
	int height = 50;
20004292:	2332      	movs	r3, #50	; 0x32
20004294:	60bb      	str	r3, [r7, #8]
	
	int x2 = 50;
20004296:	2332      	movs	r3, #50	; 0x32
20004298:	607b      	str	r3, [r7, #4]
	
	fillRectangle(x, y, width, height);
2000429a:	68bb      	ldr	r3, [r7, #8]
2000429c:	68fa      	ldr	r2, [r7, #12]
2000429e:	6939      	ldr	r1, [r7, #16]
200042a0:	6978      	ldr	r0, [r7, #20]
200042a2:	f7ff ff9b 	bl	200041dc <fillRectangle>
	
	int i;
	int k = 5;
200042a6:	2305      	movs	r3, #5
200042a8:	603b      	str	r3, [r7, #0]
	while(1) {
		clear_backBuffer();
200042aa:	f7ff fab9 	bl	20003820 <clear_backBuffer>
		fillRectangle(x, y, width, height);
200042ae:	68bb      	ldr	r3, [r7, #8]
200042b0:	68fa      	ldr	r2, [r7, #12]
200042b2:	6939      	ldr	r1, [r7, #16]
200042b4:	6978      	ldr	r0, [r7, #20]
200042b6:	f7ff ff91 	bl	200041dc <fillRectangle>
		clearRectangle(x+2+2, y+1, width-k, height-k); //outer square
200042ba:	697b      	ldr	r3, [r7, #20]
200042bc:	1d18      	adds	r0, r3, #4
200042be:	693b      	ldr	r3, [r7, #16]
200042c0:	1c59      	adds	r1, r3, #1
200042c2:	68fa      	ldr	r2, [r7, #12]
200042c4:	683b      	ldr	r3, [r7, #0]
200042c6:	1ad4      	subs	r4, r2, r3
200042c8:	68ba      	ldr	r2, [r7, #8]
200042ca:	683b      	ldr	r3, [r7, #0]
200042cc:	1ad3      	subs	r3, r2, r3
200042ce:	0022      	movs	r2, r4
200042d0:	f7ff ffad 	bl	2000422e <clearRectangle>
		clearRectangle(x+2+k, y+2, width-4-k, height-4-k); //inner square
200042d4:	697b      	ldr	r3, [r7, #20]
200042d6:	1c9a      	adds	r2, r3, #2
200042d8:	683b      	ldr	r3, [r7, #0]
200042da:	18d0      	adds	r0, r2, r3
200042dc:	693b      	ldr	r3, [r7, #16]
200042de:	1c99      	adds	r1, r3, #2
200042e0:	68fb      	ldr	r3, [r7, #12]
200042e2:	1f1a      	subs	r2, r3, #4
200042e4:	683b      	ldr	r3, [r7, #0]
200042e6:	1ad4      	subs	r4, r2, r3
200042e8:	68bb      	ldr	r3, [r7, #8]
200042ea:	1f1a      	subs	r2, r3, #4
200042ec:	683b      	ldr	r3, [r7, #0]
200042ee:	1ad3      	subs	r3, r2, r3
200042f0:	0022      	movs	r2, r4
200042f2:	f7ff ff9c 	bl	2000422e <clearRectangle>
		graphic_draw_screen(draw_buffer_black);
200042f6:	4b2d      	ldr	r3, [pc, #180]	; (200043ac <grayScaleTest+0x12c>)
200042f8:	0018      	movs	r0, r3
200042fa:	f7ff fe77 	bl	20003fec <graphic_draw_screen>
		clear_backBuffer();
200042fe:	f7ff fa8f 	bl	20003820 <clear_backBuffer>
		fillRectangle(x, y, width, height);
20004302:	68bb      	ldr	r3, [r7, #8]
20004304:	68fa      	ldr	r2, [r7, #12]
20004306:	6939      	ldr	r1, [r7, #16]
20004308:	6978      	ldr	r0, [r7, #20]
2000430a:	f7ff ff67 	bl	200041dc <fillRectangle>
		
		fillRectangle(x+2+2, y+1, width-k, height-k); //outer white square
2000430e:	697b      	ldr	r3, [r7, #20]
20004310:	1d18      	adds	r0, r3, #4
20004312:	693b      	ldr	r3, [r7, #16]
20004314:	1c59      	adds	r1, r3, #1
20004316:	68fa      	ldr	r2, [r7, #12]
20004318:	683b      	ldr	r3, [r7, #0]
2000431a:	1ad4      	subs	r4, r2, r3
2000431c:	68ba      	ldr	r2, [r7, #8]
2000431e:	683b      	ldr	r3, [r7, #0]
20004320:	1ad3      	subs	r3, r2, r3
20004322:	0022      	movs	r2, r4
20004324:	f7ff ff5a 	bl	200041dc <fillRectangle>
		fillRectangle(x+2+k, y+2, width-4-k, height-4-k); //inner square
20004328:	697b      	ldr	r3, [r7, #20]
2000432a:	1c9a      	adds	r2, r3, #2
2000432c:	683b      	ldr	r3, [r7, #0]
2000432e:	18d0      	adds	r0, r2, r3
20004330:	693b      	ldr	r3, [r7, #16]
20004332:	1c99      	adds	r1, r3, #2
20004334:	68fb      	ldr	r3, [r7, #12]
20004336:	1f1a      	subs	r2, r3, #4
20004338:	683b      	ldr	r3, [r7, #0]
2000433a:	1ad4      	subs	r4, r2, r3
2000433c:	68bb      	ldr	r3, [r7, #8]
2000433e:	1f1a      	subs	r2, r3, #4
20004340:	683b      	ldr	r3, [r7, #0]
20004342:	1ad3      	subs	r3, r2, r3
20004344:	0022      	movs	r2, r4
20004346:	f7ff ff49 	bl	200041dc <fillRectangle>
		clearRectangle(x+12, y+5, 5, 5);
2000434a:	697b      	ldr	r3, [r7, #20]
2000434c:	330c      	adds	r3, #12
2000434e:	0018      	movs	r0, r3
20004350:	693b      	ldr	r3, [r7, #16]
20004352:	1d59      	adds	r1, r3, #5
20004354:	2305      	movs	r3, #5
20004356:	2205      	movs	r2, #5
20004358:	f7ff ff69 	bl	2000422e <clearRectangle>
		
		graphic_draw_screen(draw_buffer_black);
2000435c:	4b13      	ldr	r3, [pc, #76]	; (200043ac <grayScaleTest+0x12c>)
2000435e:	0018      	movs	r0, r3
20004360:	f7ff fe44 	bl	20003fec <graphic_draw_screen>
		delay_milli(20);
20004364:	2014      	movs	r0, #20
20004366:	f7ff fa2f 	bl	200037c8 <delay_milli>
		
		clear_backBuffer();
2000436a:	f7ff fa59 	bl	20003820 <clear_backBuffer>
		fillRectangle(x, y, width, height);
2000436e:	68bb      	ldr	r3, [r7, #8]
20004370:	68fa      	ldr	r2, [r7, #12]
20004372:	6939      	ldr	r1, [r7, #16]
20004374:	6978      	ldr	r0, [r7, #20]
20004376:	f7ff ff31 	bl	200041dc <fillRectangle>
		clearRectangle(x+2+k, y+2, width-4-k, height-4-k); //inner square
2000437a:	697b      	ldr	r3, [r7, #20]
2000437c:	1c9a      	adds	r2, r3, #2
2000437e:	683b      	ldr	r3, [r7, #0]
20004380:	18d0      	adds	r0, r2, r3
20004382:	693b      	ldr	r3, [r7, #16]
20004384:	1c99      	adds	r1, r3, #2
20004386:	68fb      	ldr	r3, [r7, #12]
20004388:	1f1a      	subs	r2, r3, #4
2000438a:	683b      	ldr	r3, [r7, #0]
2000438c:	1ad4      	subs	r4, r2, r3
2000438e:	68bb      	ldr	r3, [r7, #8]
20004390:	1f1a      	subs	r2, r3, #4
20004392:	683b      	ldr	r3, [r7, #0]
20004394:	1ad3      	subs	r3, r2, r3
20004396:	0022      	movs	r2, r4
20004398:	f7ff ff49 	bl	2000422e <clearRectangle>
		graphic_draw_screen(draw_buffer_black);
2000439c:	4b03      	ldr	r3, [pc, #12]	; (200043ac <grayScaleTest+0x12c>)
2000439e:	0018      	movs	r0, r3
200043a0:	f7ff fe24 	bl	20003fec <graphic_draw_screen>
		
		delay_milli(20);
200043a4:	2014      	movs	r0, #20
200043a6:	f7ff fa0f 	bl	200037c8 <delay_milli>
		clear_backBuffer();
200043aa:	e77e      	b.n	200042aa <grayScaleTest+0x2a>
200043ac:	2000741c 	andcs	r7, r0, ip, lsl r4

200043b0 <set_up_draw_buffers>:
	}
}

/** Should prepare the different drawing buffers, before the drawing of each frame.*/
void set_up_draw_buffers( void ) {
200043b0:	b580      	push	{r7, lr}
200043b2:	b082      	sub	sp, #8
200043b4:	af00      	add	r7, sp, #0
	int i;
	for(i = 0; i < 1024; i++) {
200043b6:	2300      	movs	r3, #0
200043b8:	607b      	str	r3, [r7, #4]
200043ba:	e065      	b.n	20004488 <set_up_draw_buffers+0xd8>
		draw_buffer_black[i] = backBuffer[i] & (~backBufferGray[i] & ~backBufferLight[i]); //Had to work a bit on these
200043bc:	4a36      	ldr	r2, [pc, #216]	; (20004498 <set_up_draw_buffers+0xe8>)
200043be:	687b      	ldr	r3, [r7, #4]
200043c0:	18d3      	adds	r3, r2, r3
200043c2:	781b      	ldrb	r3, [r3, #0]
200043c4:	b25b      	sxtb	r3, r3
200043c6:	4935      	ldr	r1, [pc, #212]	; (2000449c <set_up_draw_buffers+0xec>)
200043c8:	687a      	ldr	r2, [r7, #4]
200043ca:	188a      	adds	r2, r1, r2
200043cc:	7811      	ldrb	r1, [r2, #0]
200043ce:	4834      	ldr	r0, [pc, #208]	; (200044a0 <set_up_draw_buffers+0xf0>)
200043d0:	687a      	ldr	r2, [r7, #4]
200043d2:	1882      	adds	r2, r0, r2
200043d4:	7812      	ldrb	r2, [r2, #0]
200043d6:	430a      	orrs	r2, r1
200043d8:	b2d2      	uxtb	r2, r2
200043da:	b252      	sxtb	r2, r2
200043dc:	43d2      	mvns	r2, r2
200043de:	b252      	sxtb	r2, r2
200043e0:	4013      	ands	r3, r2
200043e2:	b25b      	sxtb	r3, r3
200043e4:	b2d9      	uxtb	r1, r3
200043e6:	4a2f      	ldr	r2, [pc, #188]	; (200044a4 <set_up_draw_buffers+0xf4>)
200043e8:	687b      	ldr	r3, [r7, #4]
200043ea:	18d3      	adds	r3, r2, r3
200043ec:	1c0a      	adds	r2, r1, #0
200043ee:	701a      	strb	r2, [r3, #0]
		draw_buffer_black_gray[i] = (backBuffer[i] | backBufferGray[i]) & ~backBufferLight[i]; //in order to make it possible
200043f0:	4a29      	ldr	r2, [pc, #164]	; (20004498 <set_up_draw_buffers+0xe8>)
200043f2:	687b      	ldr	r3, [r7, #4]
200043f4:	18d3      	adds	r3, r2, r3
200043f6:	781a      	ldrb	r2, [r3, #0]
200043f8:	4928      	ldr	r1, [pc, #160]	; (2000449c <set_up_draw_buffers+0xec>)
200043fa:	687b      	ldr	r3, [r7, #4]
200043fc:	18cb      	adds	r3, r1, r3
200043fe:	781b      	ldrb	r3, [r3, #0]
20004400:	4313      	orrs	r3, r2
20004402:	b2db      	uxtb	r3, r3
20004404:	b25b      	sxtb	r3, r3
20004406:	4926      	ldr	r1, [pc, #152]	; (200044a0 <set_up_draw_buffers+0xf0>)
20004408:	687a      	ldr	r2, [r7, #4]
2000440a:	188a      	adds	r2, r1, r2
2000440c:	7812      	ldrb	r2, [r2, #0]
2000440e:	b252      	sxtb	r2, r2
20004410:	43d2      	mvns	r2, r2
20004412:	b252      	sxtb	r2, r2
20004414:	4013      	ands	r3, r2
20004416:	b25b      	sxtb	r3, r3
20004418:	b2d9      	uxtb	r1, r3
2000441a:	4a23      	ldr	r2, [pc, #140]	; (200044a8 <set_up_draw_buffers+0xf8>)
2000441c:	687b      	ldr	r3, [r7, #4]
2000441e:	18d3      	adds	r3, r2, r3
20004420:	1c0a      	adds	r2, r1, #0
20004422:	701a      	strb	r2, [r3, #0]
		draw_buffer_black_light[i] = (backBuffer[i] | backBufferLight[i]) & ~backBufferGray[i]; //to show a lighter sprite
20004424:	4a1c      	ldr	r2, [pc, #112]	; (20004498 <set_up_draw_buffers+0xe8>)
20004426:	687b      	ldr	r3, [r7, #4]
20004428:	18d3      	adds	r3, r2, r3
2000442a:	781a      	ldrb	r2, [r3, #0]
2000442c:	491c      	ldr	r1, [pc, #112]	; (200044a0 <set_up_draw_buffers+0xf0>)
2000442e:	687b      	ldr	r3, [r7, #4]
20004430:	18cb      	adds	r3, r1, r3
20004432:	781b      	ldrb	r3, [r3, #0]
20004434:	4313      	orrs	r3, r2
20004436:	b2db      	uxtb	r3, r3
20004438:	b25b      	sxtb	r3, r3
2000443a:	4918      	ldr	r1, [pc, #96]	; (2000449c <set_up_draw_buffers+0xec>)
2000443c:	687a      	ldr	r2, [r7, #4]
2000443e:	188a      	adds	r2, r1, r2
20004440:	7812      	ldrb	r2, [r2, #0]
20004442:	b252      	sxtb	r2, r2
20004444:	43d2      	mvns	r2, r2
20004446:	b252      	sxtb	r2, r2
20004448:	4013      	ands	r3, r2
2000444a:	b25b      	sxtb	r3, r3
2000444c:	b2d9      	uxtb	r1, r3
2000444e:	4a17      	ldr	r2, [pc, #92]	; (200044ac <set_up_draw_buffers+0xfc>)
20004450:	687b      	ldr	r3, [r7, #4]
20004452:	18d3      	adds	r3, r2, r3
20004454:	1c0a      	adds	r2, r1, #0
20004456:	701a      	strb	r2, [r3, #0]
		draw_buffer_black_gray_light[i] = backBuffer[i] | backBufferGray[i] | backBufferLight[i]; //on top of a darker one.
20004458:	4a0f      	ldr	r2, [pc, #60]	; (20004498 <set_up_draw_buffers+0xe8>)
2000445a:	687b      	ldr	r3, [r7, #4]
2000445c:	18d3      	adds	r3, r2, r3
2000445e:	781a      	ldrb	r2, [r3, #0]
20004460:	490e      	ldr	r1, [pc, #56]	; (2000449c <set_up_draw_buffers+0xec>)
20004462:	687b      	ldr	r3, [r7, #4]
20004464:	18cb      	adds	r3, r1, r3
20004466:	781b      	ldrb	r3, [r3, #0]
20004468:	4313      	orrs	r3, r2
2000446a:	b2da      	uxtb	r2, r3
2000446c:	490c      	ldr	r1, [pc, #48]	; (200044a0 <set_up_draw_buffers+0xf0>)
2000446e:	687b      	ldr	r3, [r7, #4]
20004470:	18cb      	adds	r3, r1, r3
20004472:	781b      	ldrb	r3, [r3, #0]
20004474:	4313      	orrs	r3, r2
20004476:	b2d9      	uxtb	r1, r3
20004478:	4a0d      	ldr	r2, [pc, #52]	; (200044b0 <set_up_draw_buffers+0x100>)
2000447a:	687b      	ldr	r3, [r7, #4]
2000447c:	18d3      	adds	r3, r2, r3
2000447e:	1c0a      	adds	r2, r1, #0
20004480:	701a      	strb	r2, [r3, #0]
	for(i = 0; i < 1024; i++) {
20004482:	687b      	ldr	r3, [r7, #4]
20004484:	3301      	adds	r3, #1
20004486:	607b      	str	r3, [r7, #4]
20004488:	687b      	ldr	r3, [r7, #4]
2000448a:	4a0a      	ldr	r2, [pc, #40]	; (200044b4 <set_up_draw_buffers+0x104>)
2000448c:	4293      	cmp	r3, r2
2000448e:	dd95      	ble.n	200043bc <set_up_draw_buffers+0xc>
	}
}
20004490:	46c0      	nop			; (mov r8, r8)
20004492:	46bd      	mov	sp, r7
20004494:	b002      	add	sp, #8
20004496:	bd80      	pop	{r7, pc}
20004498:	20006c1c 	andcs	r6, r0, ip, lsl ip
2000449c:	2000641c 	andcs	r6, r0, ip, lsl r4
200044a0:	20007c1c 	andcs	r7, r0, ip, lsl ip
200044a4:	2000741c 	andcs	r7, r0, ip, lsl r4
200044a8:	2000681c 	andcs	r6, r0, ip, lsl r8
200044ac:	2000701c 	andcs	r7, r0, ip, lsl r0
200044b0:	2000781c 	andcs	r7, r0, ip, lsl r8
200044b4:	000003ff 	strdeq	r0, [r0], -pc	; <UNPREDICTABLE>

200044b8 <draw_game_object>:

void draw_game_object(GameObject *gObj) {
200044b8:	b580      	push	{r7, lr}
200044ba:	b086      	sub	sp, #24
200044bc:	af02      	add	r7, sp, #8
200044be:	6078      	str	r0, [r7, #4]
	int frame = gObj->current_frame;
200044c0:	687b      	ldr	r3, [r7, #4]
200044c2:	695b      	ldr	r3, [r3, #20]
200044c4:	60fb      	str	r3, [r7, #12]
	draw_sprite(gObj->images[frame].blackImage, gObj->xPos, gObj->yPos, 1, 3);
200044c6:	687b      	ldr	r3, [r7, #4]
200044c8:	6819      	ldr	r1, [r3, #0]
200044ca:	68fa      	ldr	r2, [r7, #12]
200044cc:	0013      	movs	r3, r2
200044ce:	005b      	lsls	r3, r3, #1
200044d0:	189b      	adds	r3, r3, r2
200044d2:	009b      	lsls	r3, r3, #2
200044d4:	18cb      	adds	r3, r1, r3
200044d6:	6818      	ldr	r0, [r3, #0]
200044d8:	687b      	ldr	r3, [r7, #4]
200044da:	6859      	ldr	r1, [r3, #4]
200044dc:	687b      	ldr	r3, [r7, #4]
200044de:	689a      	ldr	r2, [r3, #8]
200044e0:	2303      	movs	r3, #3
200044e2:	9300      	str	r3, [sp, #0]
200044e4:	2301      	movs	r3, #1
200044e6:	f7ff fdec 	bl	200040c2 <draw_sprite>
	draw_sprite(gObj->images[frame].grayImage, gObj->xPos, gObj->yPos, 1, 2);
200044ea:	687b      	ldr	r3, [r7, #4]
200044ec:	6819      	ldr	r1, [r3, #0]
200044ee:	68fa      	ldr	r2, [r7, #12]
200044f0:	0013      	movs	r3, r2
200044f2:	005b      	lsls	r3, r3, #1
200044f4:	189b      	adds	r3, r3, r2
200044f6:	009b      	lsls	r3, r3, #2
200044f8:	18cb      	adds	r3, r1, r3
200044fa:	6858      	ldr	r0, [r3, #4]
200044fc:	687b      	ldr	r3, [r7, #4]
200044fe:	6859      	ldr	r1, [r3, #4]
20004500:	687b      	ldr	r3, [r7, #4]
20004502:	689a      	ldr	r2, [r3, #8]
20004504:	2302      	movs	r3, #2
20004506:	9300      	str	r3, [sp, #0]
20004508:	2301      	movs	r3, #1
2000450a:	f7ff fdda 	bl	200040c2 <draw_sprite>
	draw_sprite(gObj->images[frame].lightImage, gObj->xPos, gObj->yPos, 1, 1);
2000450e:	687b      	ldr	r3, [r7, #4]
20004510:	6819      	ldr	r1, [r3, #0]
20004512:	68fa      	ldr	r2, [r7, #12]
20004514:	0013      	movs	r3, r2
20004516:	005b      	lsls	r3, r3, #1
20004518:	189b      	adds	r3, r3, r2
2000451a:	009b      	lsls	r3, r3, #2
2000451c:	18cb      	adds	r3, r1, r3
2000451e:	6898      	ldr	r0, [r3, #8]
20004520:	687b      	ldr	r3, [r7, #4]
20004522:	6859      	ldr	r1, [r3, #4]
20004524:	687b      	ldr	r3, [r7, #4]
20004526:	689a      	ldr	r2, [r3, #8]
20004528:	2301      	movs	r3, #1
2000452a:	9300      	str	r3, [sp, #0]
2000452c:	2301      	movs	r3, #1
2000452e:	f7ff fdc8 	bl	200040c2 <draw_sprite>
}
20004532:	46c0      	nop			; (mov r8, r8)
20004534:	46bd      	mov	sp, r7
20004536:	b004      	add	sp, #16
20004538:	bd80      	pop	{r7, pc}

2000453a <show_frame>:


void show_frame(int frame_length) {
2000453a:	b580      	push	{r7, lr}
2000453c:	b082      	sub	sp, #8
2000453e:	af00      	add	r7, sp, #0
20004540:	6078      	str	r0, [r7, #4]
	set_up_draw_buffers();
20004542:	f7ff ff35 	bl	200043b0 <set_up_draw_buffers>
	
	while(frame_length--) {
20004546:	e01b      	b.n	20004580 <show_frame+0x46>
		graphic_draw_screen(draw_buffer_black_gray_light);
20004548:	4b13      	ldr	r3, [pc, #76]	; (20004598 <show_frame+0x5e>)
2000454a:	0018      	movs	r0, r3
2000454c:	f7ff fd4e 	bl	20003fec <graphic_draw_screen>
		delay_milli(1);
20004550:	2001      	movs	r0, #1
20004552:	f7ff f939 	bl	200037c8 <delay_milli>
		
		graphic_draw_screen(draw_buffer_black);
20004556:	4b11      	ldr	r3, [pc, #68]	; (2000459c <show_frame+0x62>)
20004558:	0018      	movs	r0, r3
2000455a:	f7ff fd47 	bl	20003fec <graphic_draw_screen>
		delay_milli(1);
2000455e:	2001      	movs	r0, #1
20004560:	f7ff f932 	bl	200037c8 <delay_milli>
		
		graphic_draw_screen(draw_buffer_black_gray);
20004564:	4b0e      	ldr	r3, [pc, #56]	; (200045a0 <show_frame+0x66>)
20004566:	0018      	movs	r0, r3
20004568:	f7ff fd40 	bl	20003fec <graphic_draw_screen>
		delay_milli(1);
2000456c:	2001      	movs	r0, #1
2000456e:	f7ff f92b 	bl	200037c8 <delay_milli>
		
		graphic_draw_screen(draw_buffer_black);
20004572:	4b0a      	ldr	r3, [pc, #40]	; (2000459c <show_frame+0x62>)
20004574:	0018      	movs	r0, r3
20004576:	f7ff fd39 	bl	20003fec <graphic_draw_screen>
		delay_milli(1);
2000457a:	2001      	movs	r0, #1
2000457c:	f7ff f924 	bl	200037c8 <delay_milli>
	while(frame_length--) {
20004580:	687b      	ldr	r3, [r7, #4]
20004582:	1e5a      	subs	r2, r3, #1
20004584:	607a      	str	r2, [r7, #4]
20004586:	2b00      	cmp	r3, #0
20004588:	d1de      	bne.n	20004548 <show_frame+0xe>
	}
	
	clear_all_backBuffers();	//Maybe we could be more effective by only clearing the necessary stuff,
2000458a:	f7ff f955 	bl	20003838 <clear_all_backBuffers>
								//but let's keep it like this if it works.
2000458e:	46c0      	nop			; (mov r8, r8)
20004590:	46bd      	mov	sp, r7
20004592:	b002      	add	sp, #8
20004594:	bd80      	pop	{r7, pc}
20004596:	46c0      	nop			; (mov r8, r8)
20004598:	2000781c 	andcs	r7, r0, ip, lsl r8
2000459c:	2000741c 	andcs	r7, r0, ip, lsl r4
200045a0:	2000681c 	andcs	r6, r0, ip, lsl r8

200045a4 <load_image>:
#include "image.h"

void load_image( Image *image, sprite *blackImage, sprite *grayImage, sprite *lightImage ) {
200045a4:	b580      	push	{r7, lr}
200045a6:	b084      	sub	sp, #16
200045a8:	af00      	add	r7, sp, #0
200045aa:	60f8      	str	r0, [r7, #12]
200045ac:	60b9      	str	r1, [r7, #8]
200045ae:	607a      	str	r2, [r7, #4]
200045b0:	603b      	str	r3, [r7, #0]
	image->blackImage = blackImage;
200045b2:	68fb      	ldr	r3, [r7, #12]
200045b4:	68ba      	ldr	r2, [r7, #8]
200045b6:	601a      	str	r2, [r3, #0]
	image->grayImage = grayImage;
200045b8:	68fb      	ldr	r3, [r7, #12]
200045ba:	687a      	ldr	r2, [r7, #4]
200045bc:	605a      	str	r2, [r3, #4]
	image->lightImage = lightImage;
200045be:	68fb      	ldr	r3, [r7, #12]
200045c0:	683a      	ldr	r2, [r7, #0]
200045c2:	609a      	str	r2, [r3, #8]
}
200045c4:	46c0      	nop			; (mov r8, r8)
200045c6:	46bd      	mov	sp, r7
200045c8:	b004      	add	sp, #16
200045ca:	bd80      	pop	{r7, pc}

200045cc <load_sprite>:
#include "sprite.h"

void load_sprite(sprite* s, unsigned char* data, int width, int height)
{
200045cc:	b580      	push	{r7, lr}
200045ce:	b084      	sub	sp, #16
200045d0:	af00      	add	r7, sp, #0
200045d2:	60f8      	str	r0, [r7, #12]
200045d4:	60b9      	str	r1, [r7, #8]
200045d6:	607a      	str	r2, [r7, #4]
200045d8:	603b      	str	r3, [r7, #0]
	s->width = width;
200045da:	687a      	ldr	r2, [r7, #4]
200045dc:	68fb      	ldr	r3, [r7, #12]
200045de:	601a      	str	r2, [r3, #0]
	s->height = height;
200045e0:	683a      	ldr	r2, [r7, #0]
200045e2:	68fb      	ldr	r3, [r7, #12]
200045e4:	605a      	str	r2, [r3, #4]
	s->data = data;
200045e6:	68fb      	ldr	r3, [r7, #12]
200045e8:	68ba      	ldr	r2, [r7, #8]
200045ea:	609a      	str	r2, [r3, #8]
}
200045ec:	46c0      	nop			; (mov r8, r8)
200045ee:	46bd      	mov	sp, r7
200045f0:	b004      	add	sp, #16
200045f2:	bd80      	pop	{r7, pc}

200045f4 <set_up_DIL>:
#include "gpio.h"

/** Sets up PE0-7 as inports and PE8-15 as outports. */
void set_up_DIL( void ) {
200045f4:	b580      	push	{r7, lr}
200045f6:	af00      	add	r7, sp, #0
	GPIO_D.Moder = 0x55550000;
200045f8:	4b02      	ldr	r3, [pc, #8]	; (20004604 <set_up_DIL+0x10>)
200045fa:	4a03      	ldr	r2, [pc, #12]	; (20004608 <set_up_DIL+0x14>)
200045fc:	601a      	str	r2, [r3, #0]
}
200045fe:	46c0      	nop			; (mov r8, r8)
20004600:	46bd      	mov	sp, r7
20004602:	bd80      	pop	{r7, pc}
20004604:	40020c00 	andmi	r0, r2, r0, lsl #24
20004608:	55550000 	ldrbpl	r0, [r5, #-0]

2000460c <read_DIL>:

char read_DIL( void ) {
2000460c:	b580      	push	{r7, lr}
2000460e:	af00      	add	r7, sp, #0
	GPIO_D.odrHigh = GPIO_D.idrLow; //Show on bargraph
20004610:	4b05      	ldr	r3, [pc, #20]	; (20004628 <read_DIL+0x1c>)
20004612:	4a05      	ldr	r2, [pc, #20]	; (20004628 <read_DIL+0x1c>)
20004614:	7c12      	ldrb	r2, [r2, #16]
20004616:	b2d2      	uxtb	r2, r2
20004618:	755a      	strb	r2, [r3, #21]
	return GPIO_D.idrLow;
2000461a:	4b03      	ldr	r3, [pc, #12]	; (20004628 <read_DIL+0x1c>)
2000461c:	7c1b      	ldrb	r3, [r3, #16]
2000461e:	b2db      	uxtb	r3, r3
}
20004620:	0018      	movs	r0, r3
20004622:	46bd      	mov	sp, r7
20004624:	bd80      	pop	{r7, pc}
20004626:	46c0      	nop			; (mov r8, r8)
20004628:	40020c00 	andmi	r0, r2, r0, lsl #24

2000462c <read_DIL_single>:


int read_DIL_single( int bit ) {
2000462c:	b590      	push	{r4, r7, lr}
2000462e:	b085      	sub	sp, #20
20004630:	af00      	add	r7, sp, #0
20004632:	6078      	str	r0, [r7, #4]
	char DIL = read_DIL();
20004634:	230f      	movs	r3, #15
20004636:	18fc      	adds	r4, r7, r3
20004638:	f7ff ffe8 	bl	2000460c <read_DIL>
2000463c:	0003      	movs	r3, r0
2000463e:	7023      	strb	r3, [r4, #0]
	if (DIL & (1<<bit)) {
20004640:	230f      	movs	r3, #15
20004642:	18fb      	adds	r3, r7, r3
20004644:	781a      	ldrb	r2, [r3, #0]
20004646:	687b      	ldr	r3, [r7, #4]
20004648:	411a      	asrs	r2, r3
2000464a:	0013      	movs	r3, r2
2000464c:	2201      	movs	r2, #1
2000464e:	4013      	ands	r3, r2
20004650:	d001      	beq.n	20004656 <read_DIL_single+0x2a>
		return 1;
20004652:	2301      	movs	r3, #1
20004654:	e000      	b.n	20004658 <read_DIL_single+0x2c>
	} else {
		return 0;
20004656:	2300      	movs	r3, #0
	}
20004658:	0018      	movs	r0, r3
2000465a:	46bd      	mov	sp, r7
2000465c:	b005      	add	sp, #20
2000465e:	bd90      	pop	{r4, r7, pc}

20004660 <ascii_ctrl_bit_set>:
void ascii_write_data(unsigned char data);
unsigned char ascii_read_status(void);
unsigned char ascii_read_data(void);


void ascii_ctrl_bit_set(unsigned char x){
20004660:	b580      	push	{r7, lr}
20004662:	b084      	sub	sp, #16
20004664:	af00      	add	r7, sp, #0
20004666:	0002      	movs	r2, r0
20004668:	1dfb      	adds	r3, r7, #7
2000466a:	701a      	strb	r2, [r3, #0]
//adressera ASCii-displayen och ettstÃƒÂ¤ll de bitar som ÃƒÂ¤r 1 i x
	unsigned char c;
	c = *portOdrLow;
2000466c:	4a0c      	ldr	r2, [pc, #48]	; (200046a0 <ascii_ctrl_bit_set+0x40>)
2000466e:	230f      	movs	r3, #15
20004670:	18fb      	adds	r3, r7, r3
20004672:	7812      	ldrb	r2, [r2, #0]
20004674:	701a      	strb	r2, [r3, #0]
	c |= (B_SELECT | x);
20004676:	1dfa      	adds	r2, r7, #7
20004678:	230f      	movs	r3, #15
2000467a:	18fb      	adds	r3, r7, r3
2000467c:	7812      	ldrb	r2, [r2, #0]
2000467e:	781b      	ldrb	r3, [r3, #0]
20004680:	4313      	orrs	r3, r2
20004682:	b2da      	uxtb	r2, r3
20004684:	230f      	movs	r3, #15
20004686:	18fb      	adds	r3, r7, r3
20004688:	2104      	movs	r1, #4
2000468a:	430a      	orrs	r2, r1
2000468c:	701a      	strb	r2, [r3, #0]
	*portOdrLow = c;
2000468e:	4a04      	ldr	r2, [pc, #16]	; (200046a0 <ascii_ctrl_bit_set+0x40>)
20004690:	230f      	movs	r3, #15
20004692:	18fb      	adds	r3, r7, r3
20004694:	781b      	ldrb	r3, [r3, #0]
20004696:	7013      	strb	r3, [r2, #0]
}
20004698:	46c0      	nop			; (mov r8, r8)
2000469a:	46bd      	mov	sp, r7
2000469c:	b004      	add	sp, #16
2000469e:	bd80      	pop	{r7, pc}
200046a0:	40021014 	andmi	r1, r2, r4, lsl r0

200046a4 <ascii_ctrl_bit_clear>:

void ascii_ctrl_bit_clear(unsigned char x){
200046a4:	b580      	push	{r7, lr}
200046a6:	b084      	sub	sp, #16
200046a8:	af00      	add	r7, sp, #0
200046aa:	0002      	movs	r2, r0
200046ac:	1dfb      	adds	r3, r7, #7
200046ae:	701a      	strb	r2, [r3, #0]
//adressera ASCii-displayen och nollstÃ¤ll de bitar som Ã¤r 1 i x
	unsigned char c;
	c = *portOdrLow;
200046b0:	4a0f      	ldr	r2, [pc, #60]	; (200046f0 <ascii_ctrl_bit_clear+0x4c>)
200046b2:	230f      	movs	r3, #15
200046b4:	18fb      	adds	r3, r7, r3
200046b6:	7812      	ldrb	r2, [r2, #0]
200046b8:	701a      	strb	r2, [r3, #0]
	c = (B_SELECT | c & ~x);
200046ba:	1dfb      	adds	r3, r7, #7
200046bc:	781b      	ldrb	r3, [r3, #0]
200046be:	b25b      	sxtb	r3, r3
200046c0:	43db      	mvns	r3, r3
200046c2:	b25b      	sxtb	r3, r3
200046c4:	220f      	movs	r2, #15
200046c6:	18ba      	adds	r2, r7, r2
200046c8:	7812      	ldrb	r2, [r2, #0]
200046ca:	b252      	sxtb	r2, r2
200046cc:	4013      	ands	r3, r2
200046ce:	b25b      	sxtb	r3, r3
200046d0:	2204      	movs	r2, #4
200046d2:	4313      	orrs	r3, r2
200046d4:	b25a      	sxtb	r2, r3
200046d6:	230f      	movs	r3, #15
200046d8:	18fb      	adds	r3, r7, r3
200046da:	701a      	strb	r2, [r3, #0]
	*portOdrLow = c;
200046dc:	4a04      	ldr	r2, [pc, #16]	; (200046f0 <ascii_ctrl_bit_clear+0x4c>)
200046de:	230f      	movs	r3, #15
200046e0:	18fb      	adds	r3, r7, r3
200046e2:	781b      	ldrb	r3, [r3, #0]
200046e4:	7013      	strb	r3, [r2, #0]
}
200046e6:	46c0      	nop			; (mov r8, r8)
200046e8:	46bd      	mov	sp, r7
200046ea:	b004      	add	sp, #16
200046ec:	bd80      	pop	{r7, pc}
200046ee:	46c0      	nop			; (mov r8, r8)
200046f0:	40021014 	andmi	r1, r2, r4, lsl r0

200046f4 <ascii_write_cmd>:

void ascii_write_cmd(unsigned char command){
200046f4:	b580      	push	{r7, lr}
200046f6:	b082      	sub	sp, #8
200046f8:	af00      	add	r7, sp, #0
200046fa:	0002      	movs	r2, r0
200046fc:	1dfb      	adds	r3, r7, #7
200046fe:	701a      	strb	r2, [r3, #0]
	ascii_ctrl_bit_clear(B_RS);
20004700:	2001      	movs	r0, #1
20004702:	f7ff ffcf 	bl	200046a4 <ascii_ctrl_bit_clear>
	ascii_ctrl_bit_clear(B_RW);
20004706:	2002      	movs	r0, #2
20004708:	f7ff ffcc 	bl	200046a4 <ascii_ctrl_bit_clear>
	ascii_write_controller(command);
2000470c:	1dfb      	adds	r3, r7, #7
2000470e:	781b      	ldrb	r3, [r3, #0]
20004710:	0018      	movs	r0, r3
20004712:	f000 f86d 	bl	200047f0 <ascii_write_controller>
}
20004716:	46c0      	nop			; (mov r8, r8)
20004718:	46bd      	mov	sp, r7
2000471a:	b002      	add	sp, #8
2000471c:	bd80      	pop	{r7, pc}

2000471e <ascii_write_data>:

void ascii_write_data(unsigned char data){
2000471e:	b580      	push	{r7, lr}
20004720:	b082      	sub	sp, #8
20004722:	af00      	add	r7, sp, #0
20004724:	0002      	movs	r2, r0
20004726:	1dfb      	adds	r3, r7, #7
20004728:	701a      	strb	r2, [r3, #0]
	ascii_ctrl_bit_set(B_RS);
2000472a:	2001      	movs	r0, #1
2000472c:	f7ff ff98 	bl	20004660 <ascii_ctrl_bit_set>
	ascii_ctrl_bit_clear(B_RW);
20004730:	2002      	movs	r0, #2
20004732:	f7ff ffb7 	bl	200046a4 <ascii_ctrl_bit_clear>
	ascii_write_controller(data);
20004736:	1dfb      	adds	r3, r7, #7
20004738:	781b      	ldrb	r3, [r3, #0]
2000473a:	0018      	movs	r0, r3
2000473c:	f000 f858 	bl	200047f0 <ascii_write_controller>
}
20004740:	46c0      	nop			; (mov r8, r8)
20004742:	46bd      	mov	sp, r7
20004744:	b002      	add	sp, #8
20004746:	bd80      	pop	{r7, pc}

20004748 <ascii_read_status>:

unsigned char ascii_read_status(void){
20004748:	b590      	push	{r4, r7, lr}
2000474a:	b083      	sub	sp, #12
2000474c:	af00      	add	r7, sp, #0
	//sÃƒÂ¤tt Port E bit15-8 som ingÃƒÂ¥ngar
	*portModer &= 0x0000FFFF;
2000474e:	4b11      	ldr	r3, [pc, #68]	; (20004794 <ascii_read_status+0x4c>)
20004750:	4a10      	ldr	r2, [pc, #64]	; (20004794 <ascii_read_status+0x4c>)
20004752:	6812      	ldr	r2, [r2, #0]
20004754:	0412      	lsls	r2, r2, #16
20004756:	0c12      	lsrs	r2, r2, #16
20004758:	601a      	str	r2, [r3, #0]
	ascii_ctrl_bit_clear(B_RS);
2000475a:	2001      	movs	r0, #1
2000475c:	f7ff ffa2 	bl	200046a4 <ascii_ctrl_bit_clear>
	ascii_ctrl_bit_set(B_RW);
20004760:	2002      	movs	r0, #2
20004762:	f7ff ff7d 	bl	20004660 <ascii_ctrl_bit_set>
	unsigned char rv = ascii_read_controller();
20004766:	1dfc      	adds	r4, r7, #7
20004768:	f000 f85a 	bl	20004820 <ascii_read_controller>
2000476c:	0003      	movs	r3, r0
2000476e:	7023      	strb	r3, [r4, #0]
	//sÃƒÂ¤tt Port E bit15-8 som utgÃƒÂ¥ngar
	*portModer &= 0x0000FFFF;
20004770:	4b08      	ldr	r3, [pc, #32]	; (20004794 <ascii_read_status+0x4c>)
20004772:	4a08      	ldr	r2, [pc, #32]	; (20004794 <ascii_read_status+0x4c>)
20004774:	6812      	ldr	r2, [r2, #0]
20004776:	0412      	lsls	r2, r2, #16
20004778:	0c12      	lsrs	r2, r2, #16
2000477a:	601a      	str	r2, [r3, #0]
	*portModer |= 0x55550000;
2000477c:	4b05      	ldr	r3, [pc, #20]	; (20004794 <ascii_read_status+0x4c>)
2000477e:	4a05      	ldr	r2, [pc, #20]	; (20004794 <ascii_read_status+0x4c>)
20004780:	6812      	ldr	r2, [r2, #0]
20004782:	4905      	ldr	r1, [pc, #20]	; (20004798 <ascii_read_status+0x50>)
20004784:	430a      	orrs	r2, r1
20004786:	601a      	str	r2, [r3, #0]
	return rv;
20004788:	1dfb      	adds	r3, r7, #7
2000478a:	781b      	ldrb	r3, [r3, #0]
}
2000478c:	0018      	movs	r0, r3
2000478e:	46bd      	mov	sp, r7
20004790:	b003      	add	sp, #12
20004792:	bd90      	pop	{r4, r7, pc}
20004794:	40021000 	andmi	r1, r2, r0
20004798:	55550000 	ldrbpl	r0, [r5, #-0]

2000479c <ascii_read_data>:

unsigned char ascii_read_data(void){
2000479c:	b590      	push	{r4, r7, lr}
2000479e:	b083      	sub	sp, #12
200047a0:	af00      	add	r7, sp, #0
	//sÃƒÂ¤tt Port E bit15-8 som ingÃƒÂ¥ngar
	*portModer &= 0x0000FFFF;
200047a2:	4b11      	ldr	r3, [pc, #68]	; (200047e8 <ascii_read_data+0x4c>)
200047a4:	4a10      	ldr	r2, [pc, #64]	; (200047e8 <ascii_read_data+0x4c>)
200047a6:	6812      	ldr	r2, [r2, #0]
200047a8:	0412      	lsls	r2, r2, #16
200047aa:	0c12      	lsrs	r2, r2, #16
200047ac:	601a      	str	r2, [r3, #0]
	ascii_ctrl_bit_set(B_RS);
200047ae:	2001      	movs	r0, #1
200047b0:	f7ff ff56 	bl	20004660 <ascii_ctrl_bit_set>
	ascii_ctrl_bit_set(B_RW);
200047b4:	2002      	movs	r0, #2
200047b6:	f7ff ff53 	bl	20004660 <ascii_ctrl_bit_set>
	unsigned char rv = ascii_read_controller();
200047ba:	1dfc      	adds	r4, r7, #7
200047bc:	f000 f830 	bl	20004820 <ascii_read_controller>
200047c0:	0003      	movs	r3, r0
200047c2:	7023      	strb	r3, [r4, #0]
	//sÃƒÂ¤tt Port E bit15-8 som utgÃƒÂ¥ngar
	*portModer &= 0x0000FFFF;
200047c4:	4b08      	ldr	r3, [pc, #32]	; (200047e8 <ascii_read_data+0x4c>)
200047c6:	4a08      	ldr	r2, [pc, #32]	; (200047e8 <ascii_read_data+0x4c>)
200047c8:	6812      	ldr	r2, [r2, #0]
200047ca:	0412      	lsls	r2, r2, #16
200047cc:	0c12      	lsrs	r2, r2, #16
200047ce:	601a      	str	r2, [r3, #0]
	*portModer |= 0x55550000;
200047d0:	4b05      	ldr	r3, [pc, #20]	; (200047e8 <ascii_read_data+0x4c>)
200047d2:	4a05      	ldr	r2, [pc, #20]	; (200047e8 <ascii_read_data+0x4c>)
200047d4:	6812      	ldr	r2, [r2, #0]
200047d6:	4905      	ldr	r1, [pc, #20]	; (200047ec <ascii_read_data+0x50>)
200047d8:	430a      	orrs	r2, r1
200047da:	601a      	str	r2, [r3, #0]
	return rv;
200047dc:	1dfb      	adds	r3, r7, #7
200047de:	781b      	ldrb	r3, [r3, #0]
}
200047e0:	0018      	movs	r0, r3
200047e2:	46bd      	mov	sp, r7
200047e4:	b003      	add	sp, #12
200047e6:	bd90      	pop	{r4, r7, pc}
200047e8:	40021000 	andmi	r1, r2, r0
200047ec:	55550000 	ldrbpl	r0, [r5, #-0]

200047f0 <ascii_write_controller>:

void ascii_write_controller(unsigned char c){
200047f0:	b580      	push	{r7, lr}
200047f2:	b082      	sub	sp, #8
200047f4:	af00      	add	r7, sp, #0
200047f6:	0002      	movs	r2, r0
200047f8:	1dfb      	adds	r3, r7, #7
200047fa:	701a      	strb	r2, [r3, #0]
	ascii_ctrl_bit_set(B_E);
200047fc:	2040      	movs	r0, #64	; 0x40
200047fe:	f7ff ff2f 	bl	20004660 <ascii_ctrl_bit_set>
	*portOdrHigh = c;
20004802:	4a06      	ldr	r2, [pc, #24]	; (2000481c <ascii_write_controller+0x2c>)
20004804:	1dfb      	adds	r3, r7, #7
20004806:	781b      	ldrb	r3, [r3, #0]
20004808:	7013      	strb	r3, [r2, #0]
	delay_250ns();
2000480a:	f7fe ff83 	bl	20003714 <delay_250ns>
	ascii_ctrl_bit_clear(B_E);
2000480e:	2040      	movs	r0, #64	; 0x40
20004810:	f7ff ff48 	bl	200046a4 <ascii_ctrl_bit_clear>
}
20004814:	46c0      	nop			; (mov r8, r8)
20004816:	46bd      	mov	sp, r7
20004818:	b002      	add	sp, #8
2000481a:	bd80      	pop	{r7, pc}
2000481c:	40021015 	andmi	r1, r2, r5, lsl r0

20004820 <ascii_read_controller>:

unsigned char ascii_read_controller(void){
20004820:	b580      	push	{r7, lr}
20004822:	b082      	sub	sp, #8
20004824:	af00      	add	r7, sp, #0
	unsigned char c;
	ascii_ctrl_bit_set(B_E);
20004826:	2040      	movs	r0, #64	; 0x40
20004828:	f7ff ff1a 	bl	20004660 <ascii_ctrl_bit_set>
	delay_250ns();
2000482c:	f7fe ff72 	bl	20003714 <delay_250ns>
	delay_250ns();
20004830:	f7fe ff70 	bl	20003714 <delay_250ns>
	c = *portIdrHigh;
20004834:	4a06      	ldr	r2, [pc, #24]	; (20004850 <ascii_read_controller+0x30>)
20004836:	1dfb      	adds	r3, r7, #7
20004838:	7812      	ldrb	r2, [r2, #0]
2000483a:	701a      	strb	r2, [r3, #0]
	ascii_ctrl_bit_clear(B_E);
2000483c:	2040      	movs	r0, #64	; 0x40
2000483e:	f7ff ff31 	bl	200046a4 <ascii_ctrl_bit_clear>
	return c;
20004842:	1dfb      	adds	r3, r7, #7
20004844:	781b      	ldrb	r3, [r3, #0]
}
20004846:	0018      	movs	r0, r3
20004848:	46bd      	mov	sp, r7
2000484a:	b002      	add	sp, #8
2000484c:	bd80      	pop	{r7, pc}
2000484e:	46c0      	nop			; (mov r8, r8)
20004850:	40021011 	andmi	r1, r2, r1, lsl r0

20004854 <ascii_write_char>:

void ascii_write_char(unsigned char c){
20004854:	b580      	push	{r7, lr}
20004856:	b082      	sub	sp, #8
20004858:	af00      	add	r7, sp, #0
2000485a:	0002      	movs	r2, r0
2000485c:	1dfb      	adds	r3, r7, #7
2000485e:	701a      	strb	r2, [r3, #0]
		while((ascii_read_status() & 0x80) == 0x80){} //VÃƒÂ¤nta tills displayed ÃƒÂ¤r redo
20004860:	46c0      	nop			; (mov r8, r8)
20004862:	f7ff ff71 	bl	20004748 <ascii_read_status>
20004866:	0003      	movs	r3, r0
20004868:	001a      	movs	r2, r3
2000486a:	2380      	movs	r3, #128	; 0x80
2000486c:	4013      	ands	r3, r2
2000486e:	2b80      	cmp	r3, #128	; 0x80
20004870:	d0f7      	beq.n	20004862 <ascii_write_char+0xe>
		delay_micro(8); //latenstid
20004872:	2008      	movs	r0, #8
20004874:	f7fe ff92 	bl	2000379c <delay_micro>
		ascii_write_data(c);
20004878:	1dfb      	adds	r3, r7, #7
2000487a:	781b      	ldrb	r3, [r3, #0]
2000487c:	0018      	movs	r0, r3
2000487e:	f7ff ff4e 	bl	2000471e <ascii_write_data>
		delay_micro(50); //istÃƒÂ¤llet fÃƒÂ¶r 43us
20004882:	2032      	movs	r0, #50	; 0x32
20004884:	f7fe ff8a 	bl	2000379c <delay_micro>
}
20004888:	46c0      	nop			; (mov r8, r8)
2000488a:	46bd      	mov	sp, r7
2000488c:	b002      	add	sp, #8
2000488e:	bd80      	pop	{r7, pc}

20004890 <ascii_goToXY>:

void ascii_goToXY(unsigned char row, unsigned char column){
20004890:	b580      	push	{r7, lr}
20004892:	b084      	sub	sp, #16
20004894:	af00      	add	r7, sp, #0
20004896:	0002      	movs	r2, r0
20004898:	1dfb      	adds	r3, r7, #7
2000489a:	701a      	strb	r2, [r3, #0]
2000489c:	1dbb      	adds	r3, r7, #6
2000489e:	1c0a      	adds	r2, r1, #0
200048a0:	701a      	strb	r2, [r3, #0]
	unsigned char address = row-1;
200048a2:	230f      	movs	r3, #15
200048a4:	18fb      	adds	r3, r7, r3
200048a6:	1dfa      	adds	r2, r7, #7
200048a8:	7812      	ldrb	r2, [r2, #0]
200048aa:	3a01      	subs	r2, #1
200048ac:	701a      	strb	r2, [r3, #0]
	if(column == 2){
200048ae:	1dbb      	adds	r3, r7, #6
200048b0:	781b      	ldrb	r3, [r3, #0]
200048b2:	2b02      	cmp	r3, #2
200048b4:	d106      	bne.n	200048c4 <ascii_goToXY+0x34>
		address += 0x40;
200048b6:	230f      	movs	r3, #15
200048b8:	18fb      	adds	r3, r7, r3
200048ba:	220f      	movs	r2, #15
200048bc:	18ba      	adds	r2, r7, r2
200048be:	7812      	ldrb	r2, [r2, #0]
200048c0:	3240      	adds	r2, #64	; 0x40
200048c2:	701a      	strb	r2, [r3, #0]
	}
	ascii_write_cmd(0x80 | address);
200048c4:	230f      	movs	r3, #15
200048c6:	18fb      	adds	r3, r7, r3
200048c8:	781b      	ldrb	r3, [r3, #0]
200048ca:	2280      	movs	r2, #128	; 0x80
200048cc:	4252      	negs	r2, r2
200048ce:	4313      	orrs	r3, r2
200048d0:	b2db      	uxtb	r3, r3
200048d2:	0018      	movs	r0, r3
200048d4:	f7ff ff0e 	bl	200046f4 <ascii_write_cmd>
}
200048d8:	46c0      	nop			; (mov r8, r8)
200048da:	46bd      	mov	sp, r7
200048dc:	b004      	add	sp, #16
200048de:	bd80      	pop	{r7, pc}

200048e0 <ascii_init>:

void ascii_init(void){
200048e0:	b580      	push	{r7, lr}
200048e2:	af00      	add	r7, sp, #0
	//initiera displayen:
		while((ascii_read_status() & 0x80) == 0x80){} //VÃ¤nta tills displayed Ã¤r redo
200048e4:	46c0      	nop			; (mov r8, r8)
200048e6:	f7ff ff2f 	bl	20004748 <ascii_read_status>
200048ea:	0003      	movs	r3, r0
200048ec:	001a      	movs	r2, r3
200048ee:	2380      	movs	r3, #128	; 0x80
200048f0:	4013      	ands	r3, r2
200048f2:	2b80      	cmp	r3, #128	; 0x80
200048f4:	d0f7      	beq.n	200048e6 <ascii_init+0x6>
		delay_micro(20); //latenstid 
200048f6:	2014      	movs	r0, #20
200048f8:	f7fe ff50 	bl	2000379c <delay_micro>
		ascii_write_cmd(0x38); //Function set (39us), 000011NFXX, N = antal rader = 2, F = -->0=5x8<--, 1=5x11
200048fc:	2038      	movs	r0, #56	; 0x38
200048fe:	f7ff fef9 	bl	200046f4 <ascii_write_cmd>
		delay_micro(100); //istÃƒÂ¤llet fÃƒÂ¶r 39us
20004902:	2064      	movs	r0, #100	; 0x64
20004904:	f7fe ff4a 	bl	2000379c <delay_micro>
		
	// clear display
		while((ascii_read_status() & 0x80) == 0x80){} //VÃƒÂ¤nta tills displayed ÃƒÂ¤r redo
20004908:	46c0      	nop			; (mov r8, r8)
2000490a:	f7ff ff1d 	bl	20004748 <ascii_read_status>
2000490e:	0003      	movs	r3, r0
20004910:	001a      	movs	r2, r3
20004912:	2380      	movs	r3, #128	; 0x80
20004914:	4013      	ands	r3, r2
20004916:	2b80      	cmp	r3, #128	; 0x80
20004918:	d0f7      	beq.n	2000490a <ascii_init+0x2a>
		delay_micro(20); //latenstid
2000491a:	2014      	movs	r0, #20
2000491c:	f7fe ff3e 	bl	2000379c <delay_micro>
		ascii_write_cmd(0x01); 
20004920:	2001      	movs	r0, #1
20004922:	f7ff fee7 	bl	200046f4 <ascii_write_cmd>
		delay_micro(100); //istÃƒÂ¤llet fÃƒÂ¶r 39us
20004926:	2064      	movs	r0, #100	; 0x64
20004928:	f7fe ff38 	bl	2000379c <delay_micro>

	//display control:
		while((ascii_read_status() & 0x80) == 0x80){} //VÃƒÂ¤nta tills displayed ÃƒÂ¤r redo
2000492c:	46c0      	nop			; (mov r8, r8)
2000492e:	f7ff ff0b 	bl	20004748 <ascii_read_status>
20004932:	0003      	movs	r3, r0
20004934:	001a      	movs	r2, r3
20004936:	2380      	movs	r3, #128	; 0x80
20004938:	4013      	ands	r3, r2
2000493a:	2b80      	cmp	r3, #128	; 0x80
2000493c:	d0f7      	beq.n	2000492e <ascii_init+0x4e>
		delay_micro(20); //latenstid
2000493e:	2014      	movs	r0, #20
20004940:	f7fe ff2c 	bl	2000379c <delay_micro>
		ascii_write_cmd(0x0C); //000001 + XXX. X:ena = 0:av / 1:pÃƒÂ¥ -  SkÃƒÂ¤rm/MarkÃƒÂ¶r/BlinkaMarkÃƒÂ¶ren
20004944:	200c      	movs	r0, #12
20004946:	f7ff fed5 	bl	200046f4 <ascii_write_cmd>
		delay_micro(100); //istÃƒÂ¤llet fÃƒÂ¶r 39us
2000494a:	2064      	movs	r0, #100	; 0x64
2000494c:	f7fe ff26 	bl	2000379c <delay_micro>
		
	// entry mode set
		while((ascii_read_status() & 0x80) == 0x80){} //VÃƒÂ¤nta tills displayed ÃƒÂ¤r redo
20004950:	46c0      	nop			; (mov r8, r8)
20004952:	f7ff fef9 	bl	20004748 <ascii_read_status>
20004956:	0003      	movs	r3, r0
20004958:	001a      	movs	r2, r3
2000495a:	2380      	movs	r3, #128	; 0x80
2000495c:	4013      	ands	r3, r2
2000495e:	2b80      	cmp	r3, #128	; 0x80
20004960:	d0f7      	beq.n	20004952 <ascii_init+0x72>
		delay_micro(20); //latenstid
20004962:	2014      	movs	r0, #20
20004964:	f7fe ff1a 	bl	2000379c <delay_micro>
		ascii_write_cmd(0x06); //00000001 + XY. X=0: markÃƒÂ¶ren vÃƒÂ¤nst. || X=1: marÃƒÂ¶kren hÃƒÂ¶g. - Y=0: skift av || Y=1: skift pÃƒÂ¥
20004968:	2006      	movs	r0, #6
2000496a:	f7ff fec3 	bl	200046f4 <ascii_write_cmd>
		delay_micro(100); //istÃƒÂ¤llet fÃƒÂ¶r 39us
2000496e:	2064      	movs	r0, #100	; 0x64
20004970:	f7fe ff14 	bl	2000379c <delay_micro>
		
		
}
20004974:	46c0      	nop			; (mov r8, r8)
20004976:	46bd      	mov	sp, r7
20004978:	bd80      	pop	{r7, pc}

2000497a <init_application>:

void init_application(void){
2000497a:	b580      	push	{r7, lr}
2000497c:	af00      	add	r7, sp, #0
	#ifdef USBDM
		*((unsigned long *) 0x40023830) = 0x18; //startar klockor pÃ¥ port D och E
		//__asm volatile ("LDR R0, =0x08000209\n BLX R0 \n"); //initiera PLL
	#endif
	//"initierar Port E med anvÃƒÂ¤ndning med LCD-modulen, dvs. sÃƒÂ¥vÃƒÂ¤l port E0-7 som E8-15 sÃƒÂ¤tts till utgÃƒÂ¥ngar
	* portModer = 0x55555555;
2000497e:	4b03      	ldr	r3, [pc, #12]	; (2000498c <init_application+0x12>)
20004980:	4a03      	ldr	r2, [pc, #12]	; (20004990 <init_application+0x16>)
20004982:	601a      	str	r2, [r3, #0]
}
20004984:	46c0      	nop			; (mov r8, r8)
20004986:	46bd      	mov	sp, r7
20004988:	bd80      	pop	{r7, pc}
2000498a:	46c0      	nop			; (mov r8, r8)
2000498c:	40021000 	andmi	r1, r2, r0
20004990:	55555555 	ldrbpl	r5, [r5, #-1365]	; 0xfffffaab

20004994 <set_up_ascii>:

void set_up_ascii( void ) {
20004994:	b580      	push	{r7, lr}
20004996:	af00      	add	r7, sp, #0
	init_application();
20004998:	f7ff ffef 	bl	2000497a <init_application>
	ascii_init();
2000499c:	f7ff ffa0 	bl	200048e0 <ascii_init>
}
200049a0:	46c0      	nop			; (mov r8, r8)
200049a2:	46bd      	mov	sp, r7
200049a4:	bd80      	pop	{r7, pc}

200049a6 <clear_ascii>:

void clear_ascii( void ) {
200049a6:	b590      	push	{r4, r7, lr}
200049a8:	b089      	sub	sp, #36	; 0x24
200049aa:	af00      	add	r7, sp, #0
	char *s;
	char clear[] = "                    ";
200049ac:	1d3b      	adds	r3, r7, #4
200049ae:	4a17      	ldr	r2, [pc, #92]	; (20004a0c <clear_ascii+0x66>)
200049b0:	ca13      	ldmia	r2!, {r0, r1, r4}
200049b2:	c313      	stmia	r3!, {r0, r1, r4}
200049b4:	ca03      	ldmia	r2!, {r0, r1}
200049b6:	c303      	stmia	r3!, {r0, r1}
200049b8:	7812      	ldrb	r2, [r2, #0]
200049ba:	701a      	strb	r2, [r3, #0]
	
	s = clear;
200049bc:	1d3b      	adds	r3, r7, #4
200049be:	61fb      	str	r3, [r7, #28]
	ascii_goToXY(1,1);
200049c0:	2101      	movs	r1, #1
200049c2:	2001      	movs	r0, #1
200049c4:	f7ff ff64 	bl	20004890 <ascii_goToXY>
	while(*s){
200049c8:	e006      	b.n	200049d8 <clear_ascii+0x32>
		ascii_write_char(*s++);
200049ca:	69fb      	ldr	r3, [r7, #28]
200049cc:	1c5a      	adds	r2, r3, #1
200049ce:	61fa      	str	r2, [r7, #28]
200049d0:	781b      	ldrb	r3, [r3, #0]
200049d2:	0018      	movs	r0, r3
200049d4:	f7ff ff3e 	bl	20004854 <ascii_write_char>
	while(*s){
200049d8:	69fb      	ldr	r3, [r7, #28]
200049da:	781b      	ldrb	r3, [r3, #0]
200049dc:	2b00      	cmp	r3, #0
200049de:	d1f4      	bne.n	200049ca <clear_ascii+0x24>
	}
	s = clear;
200049e0:	1d3b      	adds	r3, r7, #4
200049e2:	61fb      	str	r3, [r7, #28]
	ascii_goToXY(1,2);
200049e4:	2102      	movs	r1, #2
200049e6:	2001      	movs	r0, #1
200049e8:	f7ff ff52 	bl	20004890 <ascii_goToXY>
	while(*s){
200049ec:	e006      	b.n	200049fc <clear_ascii+0x56>
		ascii_write_char(*s++);
200049ee:	69fb      	ldr	r3, [r7, #28]
200049f0:	1c5a      	adds	r2, r3, #1
200049f2:	61fa      	str	r2, [r7, #28]
200049f4:	781b      	ldrb	r3, [r3, #0]
200049f6:	0018      	movs	r0, r3
200049f8:	f7ff ff2c 	bl	20004854 <ascii_write_char>
	while(*s){
200049fc:	69fb      	ldr	r3, [r7, #28]
200049fe:	781b      	ldrb	r3, [r3, #0]
20004a00:	2b00      	cmp	r3, #0
20004a02:	d1f4      	bne.n	200049ee <clear_ascii+0x48>
	}
}
20004a04:	46c0      	nop			; (mov r8, r8)
20004a06:	46bd      	mov	sp, r7
20004a08:	b009      	add	sp, #36	; 0x24
20004a0a:	bd90      	pop	{r4, r7, pc}
20004a0c:	20015890 	mulcs	r1, r0, r8

20004a10 <ascii_write>:

void ascii_write(char *row1, char *row2) {
20004a10:	b580      	push	{r7, lr}
20004a12:	b082      	sub	sp, #8
20004a14:	af00      	add	r7, sp, #0
20004a16:	6078      	str	r0, [r7, #4]
20004a18:	6039      	str	r1, [r7, #0]
	clear_ascii();
20004a1a:	f7ff ffc4 	bl	200049a6 <clear_ascii>
	
	ascii_goToXY(1,1);
20004a1e:	2101      	movs	r1, #1
20004a20:	2001      	movs	r0, #1
20004a22:	f7ff ff35 	bl	20004890 <ascii_goToXY>
	while(*row1){
20004a26:	e006      	b.n	20004a36 <ascii_write+0x26>
		ascii_write_char(*row1++);
20004a28:	687b      	ldr	r3, [r7, #4]
20004a2a:	1c5a      	adds	r2, r3, #1
20004a2c:	607a      	str	r2, [r7, #4]
20004a2e:	781b      	ldrb	r3, [r3, #0]
20004a30:	0018      	movs	r0, r3
20004a32:	f7ff ff0f 	bl	20004854 <ascii_write_char>
	while(*row1){
20004a36:	687b      	ldr	r3, [r7, #4]
20004a38:	781b      	ldrb	r3, [r3, #0]
20004a3a:	2b00      	cmp	r3, #0
20004a3c:	d1f4      	bne.n	20004a28 <ascii_write+0x18>
	}	
	ascii_goToXY(1,2);
20004a3e:	2102      	movs	r1, #2
20004a40:	2001      	movs	r0, #1
20004a42:	f7ff ff25 	bl	20004890 <ascii_goToXY>
	while(*row2){
20004a46:	e006      	b.n	20004a56 <ascii_write+0x46>
		ascii_write_char(*row2++);
20004a48:	683b      	ldr	r3, [r7, #0]
20004a4a:	1c5a      	adds	r2, r3, #1
20004a4c:	603a      	str	r2, [r7, #0]
20004a4e:	781b      	ldrb	r3, [r3, #0]
20004a50:	0018      	movs	r0, r3
20004a52:	f7ff feff 	bl	20004854 <ascii_write_char>
	while(*row2){
20004a56:	683b      	ldr	r3, [r7, #0]
20004a58:	781b      	ldrb	r3, [r3, #0]
20004a5a:	2b00      	cmp	r3, #0
20004a5c:	d1f4      	bne.n	20004a48 <ascii_write+0x38>
	}
	
	ascii_goToXY(21,1);
20004a5e:	2101      	movs	r1, #1
20004a60:	2015      	movs	r0, #21
20004a62:	f7ff ff15 	bl	20004890 <ascii_goToXY>
}
20004a66:	46c0      	nop			; (mov r8, r8)
20004a68:	46bd      	mov	sp, r7
20004a6a:	b002      	add	sp, #8
20004a6c:	bd80      	pop	{r7, pc}

20004a6e <ascii_write_part>:

void ascii_write_part(char *row1, char *row2, int limit1, int limit2) {
20004a6e:	b580      	push	{r7, lr}
20004a70:	b086      	sub	sp, #24
20004a72:	af00      	add	r7, sp, #0
20004a74:	60f8      	str	r0, [r7, #12]
20004a76:	60b9      	str	r1, [r7, #8]
20004a78:	607a      	str	r2, [r7, #4]
20004a7a:	603b      	str	r3, [r7, #0]
	clear_ascii();
20004a7c:	f7ff ff93 	bl	200049a6 <clear_ascii>
	
	ascii_goToXY(1,1);
20004a80:	2101      	movs	r1, #1
20004a82:	2001      	movs	r0, #1
20004a84:	f7ff ff04 	bl	20004890 <ascii_goToXY>
	int i = 0;
20004a88:	2300      	movs	r3, #0
20004a8a:	617b      	str	r3, [r7, #20]
	if(limit1 > 0) {
20004a8c:	687b      	ldr	r3, [r7, #4]
20004a8e:	2b00      	cmp	r3, #0
20004a90:	dd11      	ble.n	20004ab6 <ascii_write_part+0x48>
		while(*row1 && (i++ < limit1)){
20004a92:	e006      	b.n	20004aa2 <ascii_write_part+0x34>
			ascii_write_char(*row1++);
20004a94:	68fb      	ldr	r3, [r7, #12]
20004a96:	1c5a      	adds	r2, r3, #1
20004a98:	60fa      	str	r2, [r7, #12]
20004a9a:	781b      	ldrb	r3, [r3, #0]
20004a9c:	0018      	movs	r0, r3
20004a9e:	f7ff fed9 	bl	20004854 <ascii_write_char>
		while(*row1 && (i++ < limit1)){
20004aa2:	68fb      	ldr	r3, [r7, #12]
20004aa4:	781b      	ldrb	r3, [r3, #0]
20004aa6:	2b00      	cmp	r3, #0
20004aa8:	d005      	beq.n	20004ab6 <ascii_write_part+0x48>
20004aaa:	697b      	ldr	r3, [r7, #20]
20004aac:	1c5a      	adds	r2, r3, #1
20004aae:	617a      	str	r2, [r7, #20]
20004ab0:	687a      	ldr	r2, [r7, #4]
20004ab2:	4293      	cmp	r3, r2
20004ab4:	dbee      	blt.n	20004a94 <ascii_write_part+0x26>
		}			
	}

	ascii_goToXY(1,2);
20004ab6:	2102      	movs	r1, #2
20004ab8:	2001      	movs	r0, #1
20004aba:	f7ff fee9 	bl	20004890 <ascii_goToXY>
	i = 0;
20004abe:	2300      	movs	r3, #0
20004ac0:	617b      	str	r3, [r7, #20]
	if(limit2 > 0) {
20004ac2:	683b      	ldr	r3, [r7, #0]
20004ac4:	2b00      	cmp	r3, #0
20004ac6:	dd11      	ble.n	20004aec <ascii_write_part+0x7e>
		while(*row2 && (i++ < limit2)){
20004ac8:	e006      	b.n	20004ad8 <ascii_write_part+0x6a>
			ascii_write_char(*row2++);
20004aca:	68bb      	ldr	r3, [r7, #8]
20004acc:	1c5a      	adds	r2, r3, #1
20004ace:	60ba      	str	r2, [r7, #8]
20004ad0:	781b      	ldrb	r3, [r3, #0]
20004ad2:	0018      	movs	r0, r3
20004ad4:	f7ff febe 	bl	20004854 <ascii_write_char>
		while(*row2 && (i++ < limit2)){
20004ad8:	68bb      	ldr	r3, [r7, #8]
20004ada:	781b      	ldrb	r3, [r3, #0]
20004adc:	2b00      	cmp	r3, #0
20004ade:	d005      	beq.n	20004aec <ascii_write_part+0x7e>
20004ae0:	697b      	ldr	r3, [r7, #20]
20004ae2:	1c5a      	adds	r2, r3, #1
20004ae4:	617a      	str	r2, [r7, #20]
20004ae6:	683a      	ldr	r2, [r7, #0]
20004ae8:	4293      	cmp	r3, r2
20004aea:	dbee      	blt.n	20004aca <ascii_write_part+0x5c>
		}
	}
	
	ascii_goToXY(21,1);
20004aec:	2101      	movs	r1, #1
20004aee:	2015      	movs	r0, #21
20004af0:	f7ff fece 	bl	20004890 <ascii_goToXY>
}
20004af4:	46c0      	nop			; (mov r8, r8)
20004af6:	46bd      	mov	sp, r7
20004af8:	b006      	add	sp, #24
20004afa:	bd80      	pop	{r7, pc}

20004afc <ascii_test>:



void ascii_test(void) {
20004afc:	b590      	push	{r4, r7, lr}
20004afe:	b08b      	sub	sp, #44	; 0x2c
20004b00:	af00      	add	r7, sp, #0
	char *s;
	char test1[] = "Alfanumerisk";
20004b02:	2314      	movs	r3, #20
20004b04:	18fb      	adds	r3, r7, r3
20004b06:	4a1c      	ldr	r2, [pc, #112]	; (20004b78 <ascii_test+0x7c>)
20004b08:	ca13      	ldmia	r2!, {r0, r1, r4}
20004b0a:	c313      	stmia	r3!, {r0, r1, r4}
20004b0c:	7812      	ldrb	r2, [r2, #0]
20004b0e:	701a      	strb	r2, [r3, #0]
	char test2[] = "hardåäöare suger";
20004b10:	003b      	movs	r3, r7
20004b12:	4a1a      	ldr	r2, [pc, #104]	; (20004b7c <ascii_test+0x80>)
20004b14:	ca13      	ldmia	r2!, {r0, r1, r4}
20004b16:	c313      	stmia	r3!, {r0, r1, r4}
20004b18:	ca03      	ldmia	r2!, {r0, r1}
20004b1a:	c303      	stmia	r3!, {r0, r1}
	
	init_application();
20004b1c:	f7ff ff2d 	bl	2000497a <init_application>
	ascii_init();
20004b20:	f7ff fede 	bl	200048e0 <ascii_init>
	ascii_goToXY(1,1);
20004b24:	2101      	movs	r1, #1
20004b26:	2001      	movs	r0, #1
20004b28:	f7ff feb2 	bl	20004890 <ascii_goToXY>
	s = test1;
20004b2c:	2314      	movs	r3, #20
20004b2e:	18fb      	adds	r3, r7, r3
20004b30:	627b      	str	r3, [r7, #36]	; 0x24
	while(*s){
20004b32:	e006      	b.n	20004b42 <ascii_test+0x46>
		ascii_write_char(*s++);
20004b34:	6a7b      	ldr	r3, [r7, #36]	; 0x24
20004b36:	1c5a      	adds	r2, r3, #1
20004b38:	627a      	str	r2, [r7, #36]	; 0x24
20004b3a:	781b      	ldrb	r3, [r3, #0]
20004b3c:	0018      	movs	r0, r3
20004b3e:	f7ff fe89 	bl	20004854 <ascii_write_char>
	while(*s){
20004b42:	6a7b      	ldr	r3, [r7, #36]	; 0x24
20004b44:	781b      	ldrb	r3, [r3, #0]
20004b46:	2b00      	cmp	r3, #0
20004b48:	d1f4      	bne.n	20004b34 <ascii_test+0x38>
	}
	ascii_goToXY(1,2);
20004b4a:	2102      	movs	r1, #2
20004b4c:	2001      	movs	r0, #1
20004b4e:	f7ff fe9f 	bl	20004890 <ascii_goToXY>
	s = test2;
20004b52:	003b      	movs	r3, r7
20004b54:	627b      	str	r3, [r7, #36]	; 0x24
	while(*s){
20004b56:	e006      	b.n	20004b66 <ascii_test+0x6a>
		ascii_write_char(*s++);
20004b58:	6a7b      	ldr	r3, [r7, #36]	; 0x24
20004b5a:	1c5a      	adds	r2, r3, #1
20004b5c:	627a      	str	r2, [r7, #36]	; 0x24
20004b5e:	781b      	ldrb	r3, [r3, #0]
20004b60:	0018      	movs	r0, r3
20004b62:	f7ff fe77 	bl	20004854 <ascii_write_char>
	while(*s){
20004b66:	6a7b      	ldr	r3, [r7, #36]	; 0x24
20004b68:	781b      	ldrb	r3, [r3, #0]
20004b6a:	2b00      	cmp	r3, #0
20004b6c:	d1f4      	bne.n	20004b58 <ascii_test+0x5c>
	}
	return 0;
20004b6e:	46c0      	nop			; (mov r8, r8)
20004b70:	46bd      	mov	sp, r7
20004b72:	b00b      	add	sp, #44	; 0x2c
20004b74:	bd90      	pop	{r4, r7, pc}
20004b76:	46c0      	nop			; (mov r8, r8)
20004b78:	200158a8 	andcs	r5, r1, r8, lsr #17
20004b7c:	200158b8 			; <UNDEFINED> instruction: 0x200158b8

20004b80 <display>:
#include "slow_text.h"
#include "ascii_display.h"

void display(SlowText *this, int length_of_row1) {
20004b80:	b580      	push	{r7, lr}
20004b82:	b084      	sub	sp, #16
20004b84:	af00      	add	r7, sp, #0
20004b86:	6078      	str	r0, [r7, #4]
20004b88:	6039      	str	r1, [r7, #0]
	int limit1 = this->counter / this->speed;
20004b8a:	687b      	ldr	r3, [r7, #4]
20004b8c:	689a      	ldr	r2, [r3, #8]
20004b8e:	687b      	ldr	r3, [r7, #4]
20004b90:	68db      	ldr	r3, [r3, #12]
20004b92:	0019      	movs	r1, r3
20004b94:	0010      	movs	r0, r2
20004b96:	f000 fce5 	bl	20005564 <__divsi3>
20004b9a:	0003      	movs	r3, r0
20004b9c:	60fb      	str	r3, [r7, #12]
	int limit2 = this->counter / this->speed - length_of_row1;
20004b9e:	687b      	ldr	r3, [r7, #4]
20004ba0:	689a      	ldr	r2, [r3, #8]
20004ba2:	687b      	ldr	r3, [r7, #4]
20004ba4:	68db      	ldr	r3, [r3, #12]
20004ba6:	0019      	movs	r1, r3
20004ba8:	0010      	movs	r0, r2
20004baa:	f000 fcdb 	bl	20005564 <__divsi3>
20004bae:	0003      	movs	r3, r0
20004bb0:	001a      	movs	r2, r3
20004bb2:	683b      	ldr	r3, [r7, #0]
20004bb4:	1ad3      	subs	r3, r2, r3
20004bb6:	60bb      	str	r3, [r7, #8]
	ascii_write_part(this->row1, this->row2, limit1, limit2);
20004bb8:	687b      	ldr	r3, [r7, #4]
20004bba:	6818      	ldr	r0, [r3, #0]
20004bbc:	687b      	ldr	r3, [r7, #4]
20004bbe:	6859      	ldr	r1, [r3, #4]
20004bc0:	68bb      	ldr	r3, [r7, #8]
20004bc2:	68fa      	ldr	r2, [r7, #12]
20004bc4:	f7ff ff53 	bl	20004a6e <ascii_write_part>
	
	this->counter++;
20004bc8:	687b      	ldr	r3, [r7, #4]
20004bca:	689b      	ldr	r3, [r3, #8]
20004bcc:	1c5a      	adds	r2, r3, #1
20004bce:	687b      	ldr	r3, [r7, #4]
20004bd0:	609a      	str	r2, [r3, #8]
}
20004bd2:	46c0      	nop			; (mov r8, r8)
20004bd4:	46bd      	mov	sp, r7
20004bd6:	b004      	add	sp, #16
20004bd8:	bd80      	pop	{r7, pc}

20004bda <init_slow_text>:

void init_slow_text(SlowText *obj, char *row1, char *row2, int speed) {
20004bda:	b580      	push	{r7, lr}
20004bdc:	b084      	sub	sp, #16
20004bde:	af00      	add	r7, sp, #0
20004be0:	60f8      	str	r0, [r7, #12]
20004be2:	60b9      	str	r1, [r7, #8]
20004be4:	607a      	str	r2, [r7, #4]
20004be6:	603b      	str	r3, [r7, #0]
	obj->row1 = row1;
20004be8:	68fb      	ldr	r3, [r7, #12]
20004bea:	68ba      	ldr	r2, [r7, #8]
20004bec:	601a      	str	r2, [r3, #0]
	obj->row2 = row2;
20004bee:	68fb      	ldr	r3, [r7, #12]
20004bf0:	687a      	ldr	r2, [r7, #4]
20004bf2:	605a      	str	r2, [r3, #4]
	obj->speed = speed;
20004bf4:	68fb      	ldr	r3, [r7, #12]
20004bf6:	683a      	ldr	r2, [r7, #0]
20004bf8:	60da      	str	r2, [r3, #12]
	obj->counter = 0;
20004bfa:	68fb      	ldr	r3, [r7, #12]
20004bfc:	2200      	movs	r2, #0
20004bfe:	609a      	str	r2, [r3, #8]
	obj->display = display;
20004c00:	68fb      	ldr	r3, [r7, #12]
20004c02:	4a03      	ldr	r2, [pc, #12]	; (20004c10 <init_slow_text+0x36>)
20004c04:	611a      	str	r2, [r3, #16]
20004c06:	46c0      	nop			; (mov r8, r8)
20004c08:	46bd      	mov	sp, r7
20004c0a:	b004      	add	sp, #16
20004c0c:	bd80      	pop	{r7, pc}
20004c0e:	46c0      	nop			; (mov r8, r8)
20004c10:	20004b81 	andcs	r4, r0, r1, lsl #23

20004c14 <initSprites>:


GameObject indoorsObj;
Image indoorsImage;
Image indoorsImages[1];
static void initSprites( void ) {	
20004c14:	b580      	push	{r7, lr}
20004c16:	b084      	sub	sp, #16
20004c18:	af00      	add	r7, sp, #0
	
	sprite *pointer11 = &tempIndoorsLight;
20004c1a:	4b12      	ldr	r3, [pc, #72]	; (20004c64 <initSprites+0x50>)
20004c1c:	60fb      	str	r3, [r7, #12]
	load_sprite(pointer11, indoors_light_bits, indoors_black_width, indoors_black_height);
20004c1e:	4912      	ldr	r1, [pc, #72]	; (20004c68 <initSprites+0x54>)
20004c20:	68f8      	ldr	r0, [r7, #12]
20004c22:	2340      	movs	r3, #64	; 0x40
20004c24:	2280      	movs	r2, #128	; 0x80
20004c26:	f7ff fcd1 	bl	200045cc <load_sprite>
	indoorsLight = pointer11;
20004c2a:	4b10      	ldr	r3, [pc, #64]	; (20004c6c <initSprites+0x58>)
20004c2c:	68fa      	ldr	r2, [r7, #12]
20004c2e:	601a      	str	r2, [r3, #0]
	sprite *pointer12 = &tempIndoorsGray;
20004c30:	4b0f      	ldr	r3, [pc, #60]	; (20004c70 <initSprites+0x5c>)
20004c32:	60bb      	str	r3, [r7, #8]
	load_sprite(pointer12, indoors_gray_bits, indoors_black_width, indoors_black_height);
20004c34:	490f      	ldr	r1, [pc, #60]	; (20004c74 <initSprites+0x60>)
20004c36:	68b8      	ldr	r0, [r7, #8]
20004c38:	2340      	movs	r3, #64	; 0x40
20004c3a:	2280      	movs	r2, #128	; 0x80
20004c3c:	f7ff fcc6 	bl	200045cc <load_sprite>
	indoorsGray = pointer12;
20004c40:	4b0d      	ldr	r3, [pc, #52]	; (20004c78 <initSprites+0x64>)
20004c42:	68ba      	ldr	r2, [r7, #8]
20004c44:	601a      	str	r2, [r3, #0]
	sprite *pointer13 = &tempIndoorsBlack;
20004c46:	4b0d      	ldr	r3, [pc, #52]	; (20004c7c <initSprites+0x68>)
20004c48:	607b      	str	r3, [r7, #4]
	load_sprite(pointer13, indoors_black_bits, indoors_black_width, indoors_black_height);
20004c4a:	490d      	ldr	r1, [pc, #52]	; (20004c80 <initSprites+0x6c>)
20004c4c:	6878      	ldr	r0, [r7, #4]
20004c4e:	2340      	movs	r3, #64	; 0x40
20004c50:	2280      	movs	r2, #128	; 0x80
20004c52:	f7ff fcbb 	bl	200045cc <load_sprite>
	indoorsBlack = pointer13;	
20004c56:	4b0b      	ldr	r3, [pc, #44]	; (20004c84 <initSprites+0x70>)
20004c58:	687a      	ldr	r2, [r7, #4]
20004c5a:	601a      	str	r2, [r3, #0]
	
}
20004c5c:	46c0      	nop			; (mov r8, r8)
20004c5e:	46bd      	mov	sp, r7
20004c60:	b004      	add	sp, #16
20004c62:	bd80      	pop	{r7, pc}
20004c64:	20008028 	andcs	r8, r0, r8, lsr #32
20004c68:	2000eff8 	strdcs	lr, [r0], -r8
20004c6c:	20008084 	andcs	r8, r0, r4, lsl #1
20004c70:	2000801c 	andcs	r8, r0, ip, lsl r0
20004c74:	2000ebf8 	strdcs	lr, [r0], -r8
20004c78:	20008040 	andcs	r8, r0, r0, asr #32
20004c7c:	20008034 	andcs	r8, r0, r4, lsr r0
20004c80:	2000e7f8 	strdcs	lr, [r0], -r8
20004c84:	20008074 	andcs	r8, r0, r4, ror r0

20004c88 <init_indoors>:
	
void init_indoors( GameObject *indoorsObj ) {
20004c88:	b590      	push	{r4, r7, lr}
20004c8a:	b083      	sub	sp, #12
20004c8c:	af00      	add	r7, sp, #0
20004c8e:	6078      	str	r0, [r7, #4]
	static int firstTime = 1;
	if (firstTime) {
20004c90:	4b14      	ldr	r3, [pc, #80]	; (20004ce4 <init_indoors+0x5c>)
20004c92:	681b      	ldr	r3, [r3, #0]
20004c94:	2b00      	cmp	r3, #0
20004c96:	d011      	beq.n	20004cbc <init_indoors+0x34>
		initSprites();
20004c98:	f7ff ffbc 	bl	20004c14 <initSprites>
		firstTime = 0;			
20004c9c:	4b11      	ldr	r3, [pc, #68]	; (20004ce4 <init_indoors+0x5c>)
20004c9e:	2200      	movs	r2, #0
20004ca0:	601a      	str	r2, [r3, #0]

		indoorsImages[0] = indoorsImage;
20004ca2:	4b11      	ldr	r3, [pc, #68]	; (20004ce8 <init_indoors+0x60>)
20004ca4:	4a11      	ldr	r2, [pc, #68]	; (20004cec <init_indoors+0x64>)
20004ca6:	ca13      	ldmia	r2!, {r0, r1, r4}
20004ca8:	c313      	stmia	r3!, {r0, r1, r4}
		
		load_image(&indoorsImages[0], indoorsBlack, indoorsGray, indoorsLight);
20004caa:	4b11      	ldr	r3, [pc, #68]	; (20004cf0 <init_indoors+0x68>)
20004cac:	6819      	ldr	r1, [r3, #0]
20004cae:	4b11      	ldr	r3, [pc, #68]	; (20004cf4 <init_indoors+0x6c>)
20004cb0:	681a      	ldr	r2, [r3, #0]
20004cb2:	4b11      	ldr	r3, [pc, #68]	; (20004cf8 <init_indoors+0x70>)
20004cb4:	681b      	ldr	r3, [r3, #0]
20004cb6:	480c      	ldr	r0, [pc, #48]	; (20004ce8 <init_indoors+0x60>)
20004cb8:	f7ff fc74 	bl	200045a4 <load_image>
	}
	
	indoorsObj->images = indoorsImages;
20004cbc:	687b      	ldr	r3, [r7, #4]
20004cbe:	4a0a      	ldr	r2, [pc, #40]	; (20004ce8 <init_indoors+0x60>)
20004cc0:	601a      	str	r2, [r3, #0]

	indoorsObj->current_frame = 0;
20004cc2:	687b      	ldr	r3, [r7, #4]
20004cc4:	2200      	movs	r2, #0
20004cc6:	615a      	str	r2, [r3, #20]
	indoorsObj->n_frames = 1;
20004cc8:	687b      	ldr	r3, [r7, #4]
20004cca:	2201      	movs	r2, #1
20004ccc:	619a      	str	r2, [r3, #24]
	indoorsObj->animation_speed = 1;
20004cce:	687b      	ldr	r3, [r7, #4]
20004cd0:	2201      	movs	r2, #1
20004cd2:	61da      	str	r2, [r3, #28]
	indoorsObj->animation_counter = 0;
20004cd4:	687b      	ldr	r3, [r7, #4]
20004cd6:	2200      	movs	r2, #0
20004cd8:	621a      	str	r2, [r3, #32]
}
20004cda:	46c0      	nop			; (mov r8, r8)
20004cdc:	46bd      	mov	sp, r7
20004cde:	b003      	add	sp, #12
20004ce0:	bd90      	pop	{r4, r7, pc}
20004ce2:	46c0      	nop			; (mov r8, r8)
20004ce4:	2000f3f8 	strdcs	pc, [r0], -r8
20004ce8:	20008068 	andcs	r8, r0, r8, rrx
20004cec:	20008078 	andcs	r8, r0, r8, ror r0
20004cf0:	20008074 	andcs	r8, r0, r4, ror r0
20004cf4:	20008040 	andcs	r8, r0, r0, asr #32
20004cf8:	20008084 	andcs	r8, r0, r4, lsl #1

20004cfc <initSprites>:


GameObject indoors2Obj;
Image indoors2Image;
Image indoors2Images[1];
static void initSprites( void ) {	
20004cfc:	b580      	push	{r7, lr}
20004cfe:	b084      	sub	sp, #16
20004d00:	af00      	add	r7, sp, #0
	
	sprite *pointer11 = &tempIndoors2Light;
20004d02:	4b12      	ldr	r3, [pc, #72]	; (20004d4c <initSprites+0x50>)
20004d04:	60fb      	str	r3, [r7, #12]
	load_sprite(pointer11, indoors2_light_bits, indoors2_black_width, indoors2_black_height);
20004d06:	4912      	ldr	r1, [pc, #72]	; (20004d50 <initSprites+0x54>)
20004d08:	68f8      	ldr	r0, [r7, #12]
20004d0a:	2340      	movs	r3, #64	; 0x40
20004d0c:	2280      	movs	r2, #128	; 0x80
20004d0e:	f7ff fc5d 	bl	200045cc <load_sprite>
	indoors2Light = pointer11;
20004d12:	4b10      	ldr	r3, [pc, #64]	; (20004d54 <initSprites+0x58>)
20004d14:	68fa      	ldr	r2, [r7, #12]
20004d16:	601a      	str	r2, [r3, #0]
	sprite *pointer12 = &tempIndoors2Gray;
20004d18:	4b0f      	ldr	r3, [pc, #60]	; (20004d58 <initSprites+0x5c>)
20004d1a:	60bb      	str	r3, [r7, #8]
	load_sprite(pointer12, indoors2_gray_bits, indoors2_black_width, indoors2_black_height);
20004d1c:	490f      	ldr	r1, [pc, #60]	; (20004d5c <initSprites+0x60>)
20004d1e:	68b8      	ldr	r0, [r7, #8]
20004d20:	2340      	movs	r3, #64	; 0x40
20004d22:	2280      	movs	r2, #128	; 0x80
20004d24:	f7ff fc52 	bl	200045cc <load_sprite>
	indoors2Gray = pointer12;
20004d28:	4b0d      	ldr	r3, [pc, #52]	; (20004d60 <initSprites+0x64>)
20004d2a:	68ba      	ldr	r2, [r7, #8]
20004d2c:	601a      	str	r2, [r3, #0]
	sprite *pointer13 = &tempIndoors2Black;
20004d2e:	4b0d      	ldr	r3, [pc, #52]	; (20004d64 <initSprites+0x68>)
20004d30:	607b      	str	r3, [r7, #4]
	load_sprite(pointer13, indoors2_black_bits, indoors2_black_width, indoors2_black_height);
20004d32:	490d      	ldr	r1, [pc, #52]	; (20004d68 <initSprites+0x6c>)
20004d34:	6878      	ldr	r0, [r7, #4]
20004d36:	2340      	movs	r3, #64	; 0x40
20004d38:	2280      	movs	r2, #128	; 0x80
20004d3a:	f7ff fc47 	bl	200045cc <load_sprite>
	indoors2Black = pointer13;	
20004d3e:	4b0b      	ldr	r3, [pc, #44]	; (20004d6c <initSprites+0x70>)
20004d40:	687a      	ldr	r2, [r7, #4]
20004d42:	601a      	str	r2, [r3, #0]
	
}
20004d44:	46c0      	nop			; (mov r8, r8)
20004d46:	46bd      	mov	sp, r7
20004d48:	b004      	add	sp, #16
20004d4a:	bd80      	pop	{r7, pc}
20004d4c:	200080e4 	andcs	r8, r0, r4, ror #1
20004d50:	2000fbfc 	strdcs	pc, [r0], -ip
20004d54:	200080d4 	ldrdcs	r8, [r0], -r4
20004d58:	200080c8 	andcs	r8, r0, r8, asr #1
20004d5c:	2000f7fc 	strdcs	pc, [r0], -ip
20004d60:	200080ac 	andcs	r8, r0, ip, lsr #1
20004d64:	200080d8 	ldrdcs	r8, [r0], -r8	; <UNPREDICTABLE>
20004d68:	2000f3fc 	strdcs	pc, [r0], -ip
20004d6c:	200080f0 	strdcs	r8, [r0], -r0

20004d70 <init_indoors2>:
	
void init_indoors2( GameObject *indoors2Obj ) {
20004d70:	b590      	push	{r4, r7, lr}
20004d72:	b083      	sub	sp, #12
20004d74:	af00      	add	r7, sp, #0
20004d76:	6078      	str	r0, [r7, #4]
	static int firstTime = 1;
	if (firstTime) {
20004d78:	4b14      	ldr	r3, [pc, #80]	; (20004dcc <init_indoors2+0x5c>)
20004d7a:	681b      	ldr	r3, [r3, #0]
20004d7c:	2b00      	cmp	r3, #0
20004d7e:	d011      	beq.n	20004da4 <init_indoors2+0x34>
		initSprites();
20004d80:	f7ff ffbc 	bl	20004cfc <initSprites>
		firstTime = 0;			
20004d84:	4b11      	ldr	r3, [pc, #68]	; (20004dcc <init_indoors2+0x5c>)
20004d86:	2200      	movs	r2, #0
20004d88:	601a      	str	r2, [r3, #0]

		indoors2Images[0] = indoors2Image;
20004d8a:	4b11      	ldr	r3, [pc, #68]	; (20004dd0 <init_indoors2+0x60>)
20004d8c:	4a11      	ldr	r2, [pc, #68]	; (20004dd4 <init_indoors2+0x64>)
20004d8e:	ca13      	ldmia	r2!, {r0, r1, r4}
20004d90:	c313      	stmia	r3!, {r0, r1, r4}
		
		load_image(&indoors2Images[0], indoors2Black, indoors2Gray, indoors2Light);
20004d92:	4b11      	ldr	r3, [pc, #68]	; (20004dd8 <init_indoors2+0x68>)
20004d94:	6819      	ldr	r1, [r3, #0]
20004d96:	4b11      	ldr	r3, [pc, #68]	; (20004ddc <init_indoors2+0x6c>)
20004d98:	681a      	ldr	r2, [r3, #0]
20004d9a:	4b11      	ldr	r3, [pc, #68]	; (20004de0 <init_indoors2+0x70>)
20004d9c:	681b      	ldr	r3, [r3, #0]
20004d9e:	480c      	ldr	r0, [pc, #48]	; (20004dd0 <init_indoors2+0x60>)
20004da0:	f7ff fc00 	bl	200045a4 <load_image>
	}
	
	indoors2Obj->images = indoors2Images;
20004da4:	687b      	ldr	r3, [r7, #4]
20004da6:	4a0a      	ldr	r2, [pc, #40]	; (20004dd0 <init_indoors2+0x60>)
20004da8:	601a      	str	r2, [r3, #0]

	indoors2Obj->current_frame = 0;
20004daa:	687b      	ldr	r3, [r7, #4]
20004dac:	2200      	movs	r2, #0
20004dae:	615a      	str	r2, [r3, #20]
	indoors2Obj->n_frames = 1;
20004db0:	687b      	ldr	r3, [r7, #4]
20004db2:	2201      	movs	r2, #1
20004db4:	619a      	str	r2, [r3, #24]
	indoors2Obj->animation_speed = 1;
20004db6:	687b      	ldr	r3, [r7, #4]
20004db8:	2201      	movs	r2, #1
20004dba:	61da      	str	r2, [r3, #28]
	indoors2Obj->animation_counter = 0;
20004dbc:	687b      	ldr	r3, [r7, #4]
20004dbe:	2200      	movs	r2, #0
20004dc0:	621a      	str	r2, [r3, #32]
}
20004dc2:	46c0      	nop			; (mov r8, r8)
20004dc4:	46bd      	mov	sp, r7
20004dc6:	b003      	add	sp, #12
20004dc8:	bd90      	pop	{r4, r7, pc}
20004dca:	46c0      	nop			; (mov r8, r8)
20004dcc:	2000fffc 	strdcs	pc, [r0], -ip
20004dd0:	200080b0 	strhcs	r8, [r0], -r0
20004dd4:	200080bc 	strhcs	r8, [r0], -ip
20004dd8:	200080f0 	strdcs	r8, [r0], -r0
20004ddc:	200080ac 	andcs	r8, r0, ip, lsr #1
20004de0:	200080d4 	ldrdcs	r8, [r0], -r4

20004de4 <initSprites>:


GameObject trophyObj;
Image trophyImage;
Image trophyImages[1];
static void initSprites( void ) {	
20004de4:	b580      	push	{r7, lr}
20004de6:	b084      	sub	sp, #16
20004de8:	af00      	add	r7, sp, #0
	
	sprite *pointer11 = &tempTrophyLight;
20004dea:	4b12      	ldr	r3, [pc, #72]	; (20004e34 <initSprites+0x50>)
20004dec:	60fb      	str	r3, [r7, #12]
	load_sprite(pointer11, trophy_light_bits, trophy_black_width, trophy_black_height);
20004dee:	4912      	ldr	r1, [pc, #72]	; (20004e38 <initSprites+0x54>)
20004df0:	68f8      	ldr	r0, [r7, #12]
20004df2:	2311      	movs	r3, #17
20004df4:	220b      	movs	r2, #11
20004df6:	f7ff fbe9 	bl	200045cc <load_sprite>
	trophyLight = pointer11;
20004dfa:	4b10      	ldr	r3, [pc, #64]	; (20004e3c <initSprites+0x58>)
20004dfc:	68fa      	ldr	r2, [r7, #12]
20004dfe:	601a      	str	r2, [r3, #0]
	sprite *pointer12 = &tempTrophyGray;
20004e00:	4b0f      	ldr	r3, [pc, #60]	; (20004e40 <initSprites+0x5c>)
20004e02:	60bb      	str	r3, [r7, #8]
	load_sprite(pointer12, trophy_gray_bits, trophy_black_width, trophy_black_height);
20004e04:	490f      	ldr	r1, [pc, #60]	; (20004e44 <initSprites+0x60>)
20004e06:	68b8      	ldr	r0, [r7, #8]
20004e08:	2311      	movs	r3, #17
20004e0a:	220b      	movs	r2, #11
20004e0c:	f7ff fbde 	bl	200045cc <load_sprite>
	trophyGray = pointer12;
20004e10:	4b0d      	ldr	r3, [pc, #52]	; (20004e48 <initSprites+0x64>)
20004e12:	68ba      	ldr	r2, [r7, #8]
20004e14:	601a      	str	r2, [r3, #0]
	sprite *pointer13 = &tempTrophyBlack;
20004e16:	4b0d      	ldr	r3, [pc, #52]	; (20004e4c <initSprites+0x68>)
20004e18:	607b      	str	r3, [r7, #4]
	load_sprite(pointer13, trophy_black_bits, trophy_black_width, trophy_black_height);
20004e1a:	490d      	ldr	r1, [pc, #52]	; (20004e50 <initSprites+0x6c>)
20004e1c:	6878      	ldr	r0, [r7, #4]
20004e1e:	2311      	movs	r3, #17
20004e20:	220b      	movs	r2, #11
20004e22:	f7ff fbd3 	bl	200045cc <load_sprite>
	trophyBlack = pointer13;	
20004e26:	4b0b      	ldr	r3, [pc, #44]	; (20004e54 <initSprites+0x70>)
20004e28:	687a      	ldr	r2, [r7, #4]
20004e2a:	601a      	str	r2, [r3, #0]
	
}
20004e2c:	46c0      	nop			; (mov r8, r8)
20004e2e:	46bd      	mov	sp, r7
20004e30:	b004      	add	sp, #16
20004e32:	bd80      	pop	{r7, pc}
20004e34:	20008110 	andcs	r8, r0, r0, lsl r1
20004e38:	20010048 	andcs	r0, r1, r8, asr #32
20004e3c:	2000815c 	andcs	r8, r0, ip, asr r1
20004e40:	20008150 	andcs	r8, r0, r0, asr r1
20004e44:	20010024 	andcs	r0, r1, r4, lsr #32
20004e48:	20008140 	andcs	r8, r0, r0, asr #2
20004e4c:	20008144 	andcs	r8, r0, r4, asr #2
20004e50:	20010000 	andcs	r0, r1, r0
20004e54:	20008100 	andcs	r8, r0, r0, lsl #2

20004e58 <init_trophy>:
	
void init_trophy( GameObject *trophyObj ) {
20004e58:	b590      	push	{r4, r7, lr}
20004e5a:	b083      	sub	sp, #12
20004e5c:	af00      	add	r7, sp, #0
20004e5e:	6078      	str	r0, [r7, #4]
	static int firstTime = 1;
	if (firstTime) {
20004e60:	4b14      	ldr	r3, [pc, #80]	; (20004eb4 <init_trophy+0x5c>)
20004e62:	681b      	ldr	r3, [r3, #0]
20004e64:	2b00      	cmp	r3, #0
20004e66:	d011      	beq.n	20004e8c <init_trophy+0x34>
		initSprites();
20004e68:	f7ff ffbc 	bl	20004de4 <initSprites>
		firstTime = 0;			
20004e6c:	4b11      	ldr	r3, [pc, #68]	; (20004eb4 <init_trophy+0x5c>)
20004e6e:	2200      	movs	r2, #0
20004e70:	601a      	str	r2, [r3, #0]

		trophyImages[0] = trophyImage;
20004e72:	4b11      	ldr	r3, [pc, #68]	; (20004eb8 <init_trophy+0x60>)
20004e74:	4a11      	ldr	r2, [pc, #68]	; (20004ebc <init_trophy+0x64>)
20004e76:	ca13      	ldmia	r2!, {r0, r1, r4}
20004e78:	c313      	stmia	r3!, {r0, r1, r4}
		
		load_image(&trophyImages[0], trophyBlack, trophyGray, trophyLight);
20004e7a:	4b11      	ldr	r3, [pc, #68]	; (20004ec0 <init_trophy+0x68>)
20004e7c:	6819      	ldr	r1, [r3, #0]
20004e7e:	4b11      	ldr	r3, [pc, #68]	; (20004ec4 <init_trophy+0x6c>)
20004e80:	681a      	ldr	r2, [r3, #0]
20004e82:	4b11      	ldr	r3, [pc, #68]	; (20004ec8 <init_trophy+0x70>)
20004e84:	681b      	ldr	r3, [r3, #0]
20004e86:	480c      	ldr	r0, [pc, #48]	; (20004eb8 <init_trophy+0x60>)
20004e88:	f7ff fb8c 	bl	200045a4 <load_image>
	}
	
	trophyObj->images = trophyImages;
20004e8c:	687b      	ldr	r3, [r7, #4]
20004e8e:	4a0a      	ldr	r2, [pc, #40]	; (20004eb8 <init_trophy+0x60>)
20004e90:	601a      	str	r2, [r3, #0]

	trophyObj->current_frame = 0;
20004e92:	687b      	ldr	r3, [r7, #4]
20004e94:	2200      	movs	r2, #0
20004e96:	615a      	str	r2, [r3, #20]
	trophyObj->n_frames = 1;
20004e98:	687b      	ldr	r3, [r7, #4]
20004e9a:	2201      	movs	r2, #1
20004e9c:	619a      	str	r2, [r3, #24]
	trophyObj->animation_speed = 1;
20004e9e:	687b      	ldr	r3, [r7, #4]
20004ea0:	2201      	movs	r2, #1
20004ea2:	61da      	str	r2, [r3, #28]
	trophyObj->animation_counter = 0;
20004ea4:	687b      	ldr	r3, [r7, #4]
20004ea6:	2200      	movs	r2, #0
20004ea8:	621a      	str	r2, [r3, #32]
}
20004eaa:	46c0      	nop			; (mov r8, r8)
20004eac:	46bd      	mov	sp, r7
20004eae:	b003      	add	sp, #12
20004eb0:	bd90      	pop	{r4, r7, pc}
20004eb2:	46c0      	nop			; (mov r8, r8)
20004eb4:	2001006c 	andcs	r0, r1, ip, rrx
20004eb8:	200080f4 	strdcs	r8, [r0], -r4
20004ebc:	20008104 	andcs	r8, r0, r4, lsl #2
20004ec0:	20008100 	andcs	r8, r0, r0, lsl #2
20004ec4:	20008140 	andcs	r8, r0, r0, asr #2
20004ec8:	2000815c 	andcs	r8, r0, ip, asr r1

20004ecc <initSprites>:


GameObject rogerObj;
Image rogerImage;
Image rogerImages[1];
static void initSprites( void ) {	
20004ecc:	b580      	push	{r7, lr}
20004ece:	b084      	sub	sp, #16
20004ed0:	af00      	add	r7, sp, #0
	
	sprite *pointer11 = &tempRogerLight;
20004ed2:	4b12      	ldr	r3, [pc, #72]	; (20004f1c <initSprites+0x50>)
20004ed4:	60fb      	str	r3, [r7, #12]
	load_sprite(pointer11, roger_light_bits, roger_black_width, roger_black_height);
20004ed6:	4912      	ldr	r1, [pc, #72]	; (20004f20 <initSprites+0x54>)
20004ed8:	68f8      	ldr	r0, [r7, #12]
20004eda:	2340      	movs	r3, #64	; 0x40
20004edc:	2280      	movs	r2, #128	; 0x80
20004ede:	f7ff fb75 	bl	200045cc <load_sprite>
	rogerLight = pointer11;
20004ee2:	4b10      	ldr	r3, [pc, #64]	; (20004f24 <initSprites+0x58>)
20004ee4:	68fa      	ldr	r2, [r7, #12]
20004ee6:	601a      	str	r2, [r3, #0]
	sprite *pointer12 = &tempRogerGray;
20004ee8:	4b0f      	ldr	r3, [pc, #60]	; (20004f28 <initSprites+0x5c>)
20004eea:	60bb      	str	r3, [r7, #8]
	load_sprite(pointer12, roger_gray_bits, roger_black_width, roger_black_height);
20004eec:	490f      	ldr	r1, [pc, #60]	; (20004f2c <initSprites+0x60>)
20004eee:	68b8      	ldr	r0, [r7, #8]
20004ef0:	2340      	movs	r3, #64	; 0x40
20004ef2:	2280      	movs	r2, #128	; 0x80
20004ef4:	f7ff fb6a 	bl	200045cc <load_sprite>
	rogerGray = pointer12;
20004ef8:	4b0d      	ldr	r3, [pc, #52]	; (20004f30 <initSprites+0x64>)
20004efa:	68ba      	ldr	r2, [r7, #8]
20004efc:	601a      	str	r2, [r3, #0]
	sprite *pointer13 = &tempRogerBlack;
20004efe:	4b0d      	ldr	r3, [pc, #52]	; (20004f34 <initSprites+0x68>)
20004f00:	607b      	str	r3, [r7, #4]
	load_sprite(pointer13, roger_black_bits, roger_black_width, roger_black_height);
20004f02:	490d      	ldr	r1, [pc, #52]	; (20004f38 <initSprites+0x6c>)
20004f04:	6878      	ldr	r0, [r7, #4]
20004f06:	2340      	movs	r3, #64	; 0x40
20004f08:	2280      	movs	r2, #128	; 0x80
20004f0a:	f7ff fb5f 	bl	200045cc <load_sprite>
	rogerBlack = pointer13;	
20004f0e:	4b0b      	ldr	r3, [pc, #44]	; (20004f3c <initSprites+0x70>)
20004f10:	687a      	ldr	r2, [r7, #4]
20004f12:	601a      	str	r2, [r3, #0]
	
}
20004f14:	46c0      	nop			; (mov r8, r8)
20004f16:	46bd      	mov	sp, r7
20004f18:	b004      	add	sp, #16
20004f1a:	bd80      	pop	{r7, pc}
20004f1c:	2000817c 	andcs	r8, r0, ip, ror r1
20004f20:	20010870 	andcs	r0, r1, r0, ror r8
20004f24:	20008188 	andcs	r8, r0, r8, lsl #3
20004f28:	20008170 	andcs	r8, r0, r0, ror r1
20004f2c:	20010470 	andcs	r0, r1, r0, ror r4
20004f30:	2000816c 	andcs	r8, r0, ip, ror #2
20004f34:	200081b0 			; <UNDEFINED> instruction: 0x200081b0
20004f38:	20010070 	andcs	r0, r1, r0, ror r0
20004f3c:	200081bc 			; <UNDEFINED> instruction: 0x200081bc

20004f40 <init_roger>:
	
void init_roger( GameObject *rogerObj ) {
20004f40:	b590      	push	{r4, r7, lr}
20004f42:	b083      	sub	sp, #12
20004f44:	af00      	add	r7, sp, #0
20004f46:	6078      	str	r0, [r7, #4]
	static int firstTime = 1;
	if (firstTime) {
20004f48:	4b14      	ldr	r3, [pc, #80]	; (20004f9c <init_roger+0x5c>)
20004f4a:	681b      	ldr	r3, [r3, #0]
20004f4c:	2b00      	cmp	r3, #0
20004f4e:	d011      	beq.n	20004f74 <init_roger+0x34>
		initSprites();
20004f50:	f7ff ffbc 	bl	20004ecc <initSprites>
		firstTime = 0;			
20004f54:	4b11      	ldr	r3, [pc, #68]	; (20004f9c <init_roger+0x5c>)
20004f56:	2200      	movs	r2, #0
20004f58:	601a      	str	r2, [r3, #0]

		rogerImages[0] = rogerImage;
20004f5a:	4b11      	ldr	r3, [pc, #68]	; (20004fa0 <init_roger+0x60>)
20004f5c:	4a11      	ldr	r2, [pc, #68]	; (20004fa4 <init_roger+0x64>)
20004f5e:	ca13      	ldmia	r2!, {r0, r1, r4}
20004f60:	c313      	stmia	r3!, {r0, r1, r4}
		
		load_image(&rogerImages[0], rogerBlack, rogerGray, rogerLight);
20004f62:	4b11      	ldr	r3, [pc, #68]	; (20004fa8 <init_roger+0x68>)
20004f64:	6819      	ldr	r1, [r3, #0]
20004f66:	4b11      	ldr	r3, [pc, #68]	; (20004fac <init_roger+0x6c>)
20004f68:	681a      	ldr	r2, [r3, #0]
20004f6a:	4b11      	ldr	r3, [pc, #68]	; (20004fb0 <init_roger+0x70>)
20004f6c:	681b      	ldr	r3, [r3, #0]
20004f6e:	480c      	ldr	r0, [pc, #48]	; (20004fa0 <init_roger+0x60>)
20004f70:	f7ff fb18 	bl	200045a4 <load_image>
	}
	
	rogerObj->images = rogerImages;
20004f74:	687b      	ldr	r3, [r7, #4]
20004f76:	4a0a      	ldr	r2, [pc, #40]	; (20004fa0 <init_roger+0x60>)
20004f78:	601a      	str	r2, [r3, #0]

	rogerObj->current_frame = 0;
20004f7a:	687b      	ldr	r3, [r7, #4]
20004f7c:	2200      	movs	r2, #0
20004f7e:	615a      	str	r2, [r3, #20]
	rogerObj->n_frames = 1;
20004f80:	687b      	ldr	r3, [r7, #4]
20004f82:	2201      	movs	r2, #1
20004f84:	619a      	str	r2, [r3, #24]
	rogerObj->animation_speed = 1;
20004f86:	687b      	ldr	r3, [r7, #4]
20004f88:	2201      	movs	r2, #1
20004f8a:	61da      	str	r2, [r3, #28]
	rogerObj->animation_counter = 0;
20004f8c:	687b      	ldr	r3, [r7, #4]
20004f8e:	2200      	movs	r2, #0
20004f90:	621a      	str	r2, [r3, #32]
}
20004f92:	46c0      	nop			; (mov r8, r8)
20004f94:	46bd      	mov	sp, r7
20004f96:	b003      	add	sp, #12
20004f98:	bd90      	pop	{r4, r7, pc}
20004f9a:	46c0      	nop			; (mov r8, r8)
20004f9c:	20010c70 	andcs	r0, r1, r0, ror ip
20004fa0:	200081c0 	andcs	r8, r0, r0, asr #3
20004fa4:	20008160 	andcs	r8, r0, r0, ror #2
20004fa8:	200081bc 			; <UNDEFINED> instruction: 0x200081bc
20004fac:	2000816c 	andcs	r8, r0, ip, ror #2
20004fb0:	20008188 	andcs	r8, r0, r8, lsl #3

20004fb4 <initSprites>:
Image game_over_witch9Image;
Image game_over_witch10Image;
Image game_over_witch11Image;
Image game_over_witch12Image;*/
Image game_over_witchImages[6];
static void initSprites( void ) {	
20004fb4:	b580      	push	{r7, lr}
20004fb6:	b092      	sub	sp, #72	; 0x48
20004fb8:	af00      	add	r7, sp, #0
	
	sprite *pointer11 = &tempgame_over_witchLight;
20004fba:	4b65      	ldr	r3, [pc, #404]	; (20005150 <initSprites+0x19c>)
20004fbc:	647b      	str	r3, [r7, #68]	; 0x44
	load_sprite(pointer11, game_over_witch1_light_bits, game_over_witch1_black_width, game_over_witch1_black_height);
20004fbe:	4965      	ldr	r1, [pc, #404]	; (20005154 <initSprites+0x1a0>)
20004fc0:	6c78      	ldr	r0, [r7, #68]	; 0x44
20004fc2:	2340      	movs	r3, #64	; 0x40
20004fc4:	2280      	movs	r2, #128	; 0x80
20004fc6:	f7ff fb01 	bl	200045cc <load_sprite>
	game_over_witch1Light = pointer11;
20004fca:	4b63      	ldr	r3, [pc, #396]	; (20005158 <initSprites+0x1a4>)
20004fcc:	6c7a      	ldr	r2, [r7, #68]	; 0x44
20004fce:	601a      	str	r2, [r3, #0]
	sprite *pointer12 = &tempgame_over_witchGray;
20004fd0:	4b62      	ldr	r3, [pc, #392]	; (2000515c <initSprites+0x1a8>)
20004fd2:	643b      	str	r3, [r7, #64]	; 0x40
	load_sprite(pointer12, game_over_witch1_gray_bits, game_over_witch1_black_width, game_over_witch1_black_height);
20004fd4:	4962      	ldr	r1, [pc, #392]	; (20005160 <initSprites+0x1ac>)
20004fd6:	6c38      	ldr	r0, [r7, #64]	; 0x40
20004fd8:	2340      	movs	r3, #64	; 0x40
20004fda:	2280      	movs	r2, #128	; 0x80
20004fdc:	f7ff faf6 	bl	200045cc <load_sprite>
	game_over_witch1Gray = pointer12;
20004fe0:	4b60      	ldr	r3, [pc, #384]	; (20005164 <initSprites+0x1b0>)
20004fe2:	6c3a      	ldr	r2, [r7, #64]	; 0x40
20004fe4:	601a      	str	r2, [r3, #0]
	sprite *pointer13 = &tempgame_over_witchBlack;
20004fe6:	4b60      	ldr	r3, [pc, #384]	; (20005168 <initSprites+0x1b4>)
20004fe8:	63fb      	str	r3, [r7, #60]	; 0x3c
	load_sprite(pointer13, game_over_witch1_black_bits, game_over_witch1_black_width, game_over_witch1_black_height);
20004fea:	4960      	ldr	r1, [pc, #384]	; (2000516c <initSprites+0x1b8>)
20004fec:	6bf8      	ldr	r0, [r7, #60]	; 0x3c
20004fee:	2340      	movs	r3, #64	; 0x40
20004ff0:	2280      	movs	r2, #128	; 0x80
20004ff2:	f7ff faeb 	bl	200045cc <load_sprite>
	game_over_witch1Black = pointer13;	
20004ff6:	4b5e      	ldr	r3, [pc, #376]	; (20005170 <initSprites+0x1bc>)
20004ff8:	6bfa      	ldr	r2, [r7, #60]	; 0x3c
20004ffa:	601a      	str	r2, [r3, #0]
	
	sprite *pointer14 = &tempgame_over_witch2Light;
20004ffc:	4b5d      	ldr	r3, [pc, #372]	; (20005174 <initSprites+0x1c0>)
20004ffe:	63bb      	str	r3, [r7, #56]	; 0x38
	load_sprite(pointer14, game_over_witch2_light_bits, game_over_witch2_black_width, game_over_witch2_black_height);
20005000:	495d      	ldr	r1, [pc, #372]	; (20005178 <initSprites+0x1c4>)
20005002:	6bb8      	ldr	r0, [r7, #56]	; 0x38
20005004:	2340      	movs	r3, #64	; 0x40
20005006:	2280      	movs	r2, #128	; 0x80
20005008:	f7ff fae0 	bl	200045cc <load_sprite>
	game_over_witch2Light = pointer14;
2000500c:	4b5b      	ldr	r3, [pc, #364]	; (2000517c <initSprites+0x1c8>)
2000500e:	6bba      	ldr	r2, [r7, #56]	; 0x38
20005010:	601a      	str	r2, [r3, #0]
	sprite *pointer15 = &tempgame_over_witch2Gray;
20005012:	4b5b      	ldr	r3, [pc, #364]	; (20005180 <initSprites+0x1cc>)
20005014:	637b      	str	r3, [r7, #52]	; 0x34
	load_sprite(pointer15, game_over_witch2_gray_bits, game_over_witch2_black_width, game_over_witch2_black_height);
20005016:	495b      	ldr	r1, [pc, #364]	; (20005184 <initSprites+0x1d0>)
20005018:	6b78      	ldr	r0, [r7, #52]	; 0x34
2000501a:	2340      	movs	r3, #64	; 0x40
2000501c:	2280      	movs	r2, #128	; 0x80
2000501e:	f7ff fad5 	bl	200045cc <load_sprite>
	game_over_witch2Gray = pointer15;
20005022:	4b59      	ldr	r3, [pc, #356]	; (20005188 <initSprites+0x1d4>)
20005024:	6b7a      	ldr	r2, [r7, #52]	; 0x34
20005026:	601a      	str	r2, [r3, #0]
	sprite *pointer16 = &tempgame_over_witch2Black;
20005028:	4b58      	ldr	r3, [pc, #352]	; (2000518c <initSprites+0x1d8>)
2000502a:	633b      	str	r3, [r7, #48]	; 0x30
	load_sprite(pointer16, game_over_witch2_black_bits, game_over_witch2_black_width, game_over_witch2_black_height);
2000502c:	4958      	ldr	r1, [pc, #352]	; (20005190 <initSprites+0x1dc>)
2000502e:	6b38      	ldr	r0, [r7, #48]	; 0x30
20005030:	2340      	movs	r3, #64	; 0x40
20005032:	2280      	movs	r2, #128	; 0x80
20005034:	f7ff faca 	bl	200045cc <load_sprite>
	game_over_witch2Black = pointer16;
20005038:	4b56      	ldr	r3, [pc, #344]	; (20005194 <initSprites+0x1e0>)
2000503a:	6b3a      	ldr	r2, [r7, #48]	; 0x30
2000503c:	601a      	str	r2, [r3, #0]
	
	
	sprite *finalPointer = &tempgame_over_witch3Light;
2000503e:	4b56      	ldr	r3, [pc, #344]	; (20005198 <initSprites+0x1e4>)
20005040:	62fb      	str	r3, [r7, #44]	; 0x2c
	load_sprite(finalPointer, game_over_witch3_light_bits, game_over_witch3_black_width, game_over_witch3_black_height);
20005042:	4956      	ldr	r1, [pc, #344]	; (2000519c <initSprites+0x1e8>)
20005044:	6af8      	ldr	r0, [r7, #44]	; 0x2c
20005046:	2340      	movs	r3, #64	; 0x40
20005048:	2280      	movs	r2, #128	; 0x80
2000504a:	f7ff fabf 	bl	200045cc <load_sprite>
	game_over_witch3Light = finalPointer;
2000504e:	4b54      	ldr	r3, [pc, #336]	; (200051a0 <initSprites+0x1ec>)
20005050:	6afa      	ldr	r2, [r7, #44]	; 0x2c
20005052:	601a      	str	r2, [r3, #0]
	sprite *pointer17 = &tempgame_over_witch3Gray;
20005054:	4b53      	ldr	r3, [pc, #332]	; (200051a4 <initSprites+0x1f0>)
20005056:	62bb      	str	r3, [r7, #40]	; 0x28
	load_sprite(pointer17, game_over_witch3_gray_bits, game_over_witch3_black_width, game_over_witch3_black_height);
20005058:	4953      	ldr	r1, [pc, #332]	; (200051a8 <initSprites+0x1f4>)
2000505a:	6ab8      	ldr	r0, [r7, #40]	; 0x28
2000505c:	2340      	movs	r3, #64	; 0x40
2000505e:	2280      	movs	r2, #128	; 0x80
20005060:	f7ff fab4 	bl	200045cc <load_sprite>
	game_over_witch3Gray = pointer17;
20005064:	4b51      	ldr	r3, [pc, #324]	; (200051ac <initSprites+0x1f8>)
20005066:	6aba      	ldr	r2, [r7, #40]	; 0x28
20005068:	601a      	str	r2, [r3, #0]
	sprite *pointer18 = &tempgame_over_witch3Black;
2000506a:	4b51      	ldr	r3, [pc, #324]	; (200051b0 <initSprites+0x1fc>)
2000506c:	627b      	str	r3, [r7, #36]	; 0x24
	load_sprite(pointer18, game_over_witch3_black_bits, game_over_witch3_black_width, game_over_witch3_black_height);
2000506e:	4951      	ldr	r1, [pc, #324]	; (200051b4 <initSprites+0x200>)
20005070:	6a78      	ldr	r0, [r7, #36]	; 0x24
20005072:	2340      	movs	r3, #64	; 0x40
20005074:	2280      	movs	r2, #128	; 0x80
20005076:	f7ff faa9 	bl	200045cc <load_sprite>
	game_over_witch3Black = pointer18;	
2000507a:	4b4f      	ldr	r3, [pc, #316]	; (200051b8 <initSprites+0x204>)
2000507c:	6a7a      	ldr	r2, [r7, #36]	; 0x24
2000507e:	601a      	str	r2, [r3, #0]
	
	sprite *pointer19 = &tempgame_over_witch4Light;
20005080:	4b4e      	ldr	r3, [pc, #312]	; (200051bc <initSprites+0x208>)
20005082:	623b      	str	r3, [r7, #32]
	load_sprite(pointer19, game_over_witch4_light_bits, game_over_witch4_black_width, game_over_witch4_black_height);
20005084:	494e      	ldr	r1, [pc, #312]	; (200051c0 <initSprites+0x20c>)
20005086:	6a38      	ldr	r0, [r7, #32]
20005088:	2340      	movs	r3, #64	; 0x40
2000508a:	2280      	movs	r2, #128	; 0x80
2000508c:	f7ff fa9e 	bl	200045cc <load_sprite>
	game_over_witch4Light = pointer19;
20005090:	4b4c      	ldr	r3, [pc, #304]	; (200051c4 <initSprites+0x210>)
20005092:	6a3a      	ldr	r2, [r7, #32]
20005094:	601a      	str	r2, [r3, #0]
	sprite *pointer20 = &tempgame_over_witch4Gray;
20005096:	4b4c      	ldr	r3, [pc, #304]	; (200051c8 <initSprites+0x214>)
20005098:	61fb      	str	r3, [r7, #28]
	load_sprite(pointer20, game_over_witch4_gray_bits, game_over_witch4_black_width, game_over_witch4_black_height);
2000509a:	494c      	ldr	r1, [pc, #304]	; (200051cc <initSprites+0x218>)
2000509c:	69f8      	ldr	r0, [r7, #28]
2000509e:	2340      	movs	r3, #64	; 0x40
200050a0:	2280      	movs	r2, #128	; 0x80
200050a2:	f7ff fa93 	bl	200045cc <load_sprite>
	game_over_witch4Gray = pointer20;
200050a6:	4b4a      	ldr	r3, [pc, #296]	; (200051d0 <initSprites+0x21c>)
200050a8:	69fa      	ldr	r2, [r7, #28]
200050aa:	601a      	str	r2, [r3, #0]
	sprite *pointer21 = &tempgame_over_witch4Black;
200050ac:	4b49      	ldr	r3, [pc, #292]	; (200051d4 <initSprites+0x220>)
200050ae:	61bb      	str	r3, [r7, #24]
	load_sprite(pointer21, game_over_witch4_black_bits, game_over_witch4_black_width, game_over_witch4_black_height);
200050b0:	4949      	ldr	r1, [pc, #292]	; (200051d8 <initSprites+0x224>)
200050b2:	69b8      	ldr	r0, [r7, #24]
200050b4:	2340      	movs	r3, #64	; 0x40
200050b6:	2280      	movs	r2, #128	; 0x80
200050b8:	f7ff fa88 	bl	200045cc <load_sprite>
	game_over_witch4Black = pointer21;	
200050bc:	4b47      	ldr	r3, [pc, #284]	; (200051dc <initSprites+0x228>)
200050be:	69ba      	ldr	r2, [r7, #24]
200050c0:	601a      	str	r2, [r3, #0]
	
	sprite *pointer22 = &tempgame_over_witch5Light;
200050c2:	4b47      	ldr	r3, [pc, #284]	; (200051e0 <initSprites+0x22c>)
200050c4:	617b      	str	r3, [r7, #20]
	load_sprite(pointer22, game_over_witch5_light_bits, game_over_witch5_black_width, game_over_witch5_black_height);
200050c6:	4947      	ldr	r1, [pc, #284]	; (200051e4 <initSprites+0x230>)
200050c8:	6978      	ldr	r0, [r7, #20]
200050ca:	2340      	movs	r3, #64	; 0x40
200050cc:	2280      	movs	r2, #128	; 0x80
200050ce:	f7ff fa7d 	bl	200045cc <load_sprite>
	game_over_witch5Light = pointer22;
200050d2:	4b45      	ldr	r3, [pc, #276]	; (200051e8 <initSprites+0x234>)
200050d4:	697a      	ldr	r2, [r7, #20]
200050d6:	601a      	str	r2, [r3, #0]
	sprite *pointer23 = &tempgame_over_witch5Gray;
200050d8:	4b44      	ldr	r3, [pc, #272]	; (200051ec <initSprites+0x238>)
200050da:	613b      	str	r3, [r7, #16]
	load_sprite(pointer23, game_over_witch5_gray_bits, game_over_witch5_black_width, game_over_witch5_black_height);
200050dc:	4944      	ldr	r1, [pc, #272]	; (200051f0 <initSprites+0x23c>)
200050de:	6938      	ldr	r0, [r7, #16]
200050e0:	2340      	movs	r3, #64	; 0x40
200050e2:	2280      	movs	r2, #128	; 0x80
200050e4:	f7ff fa72 	bl	200045cc <load_sprite>
	game_over_witch5Gray = pointer23;
200050e8:	4b42      	ldr	r3, [pc, #264]	; (200051f4 <initSprites+0x240>)
200050ea:	693a      	ldr	r2, [r7, #16]
200050ec:	601a      	str	r2, [r3, #0]
	sprite *pointer24 = &tempgame_over_witch5Black;
200050ee:	4b42      	ldr	r3, [pc, #264]	; (200051f8 <initSprites+0x244>)
200050f0:	60fb      	str	r3, [r7, #12]
	load_sprite(pointer24, game_over_witch5_black_bits, game_over_witch5_black_width, game_over_witch5_black_height);
200050f2:	4942      	ldr	r1, [pc, #264]	; (200051fc <initSprites+0x248>)
200050f4:	68f8      	ldr	r0, [r7, #12]
200050f6:	2340      	movs	r3, #64	; 0x40
200050f8:	2280      	movs	r2, #128	; 0x80
200050fa:	f7ff fa67 	bl	200045cc <load_sprite>
	game_over_witch5Black = pointer24;
200050fe:	4b40      	ldr	r3, [pc, #256]	; (20005200 <initSprites+0x24c>)
20005100:	68fa      	ldr	r2, [r7, #12]
20005102:	601a      	str	r2, [r3, #0]
	
	sprite *pointer25 = &tempgame_over_witch6Light;
20005104:	4b3f      	ldr	r3, [pc, #252]	; (20005204 <initSprites+0x250>)
20005106:	60bb      	str	r3, [r7, #8]
	load_sprite(pointer25, game_over_witch6_light_bits, game_over_witch6_black_width, game_over_witch6_black_height);
20005108:	493f      	ldr	r1, [pc, #252]	; (20005208 <initSprites+0x254>)
2000510a:	68b8      	ldr	r0, [r7, #8]
2000510c:	2340      	movs	r3, #64	; 0x40
2000510e:	2280      	movs	r2, #128	; 0x80
20005110:	f7ff fa5c 	bl	200045cc <load_sprite>
	game_over_witch6Light = pointer25;
20005114:	4b3d      	ldr	r3, [pc, #244]	; (2000520c <initSprites+0x258>)
20005116:	68ba      	ldr	r2, [r7, #8]
20005118:	601a      	str	r2, [r3, #0]
	sprite *pointer26 = &tempgame_over_witch6Gray;
2000511a:	4b3d      	ldr	r3, [pc, #244]	; (20005210 <initSprites+0x25c>)
2000511c:	607b      	str	r3, [r7, #4]
	load_sprite(pointer26, game_over_witch6_gray_bits, game_over_witch6_black_width, game_over_witch6_black_height);
2000511e:	493d      	ldr	r1, [pc, #244]	; (20005214 <initSprites+0x260>)
20005120:	6878      	ldr	r0, [r7, #4]
20005122:	2340      	movs	r3, #64	; 0x40
20005124:	2280      	movs	r2, #128	; 0x80
20005126:	f7ff fa51 	bl	200045cc <load_sprite>
	game_over_witch6Gray = pointer26;
2000512a:	4b3b      	ldr	r3, [pc, #236]	; (20005218 <initSprites+0x264>)
2000512c:	687a      	ldr	r2, [r7, #4]
2000512e:	601a      	str	r2, [r3, #0]
	sprite *pointer27 = &tempgame_over_witch6Black;
20005130:	4b3a      	ldr	r3, [pc, #232]	; (2000521c <initSprites+0x268>)
20005132:	603b      	str	r3, [r7, #0]
	load_sprite(pointer27, game_over_witch6_black_bits, game_over_witch6_black_width, game_over_witch6_black_height);
20005134:	493a      	ldr	r1, [pc, #232]	; (20005220 <initSprites+0x26c>)
20005136:	6838      	ldr	r0, [r7, #0]
20005138:	2340      	movs	r3, #64	; 0x40
2000513a:	2280      	movs	r2, #128	; 0x80
2000513c:	f7ff fa46 	bl	200045cc <load_sprite>
	game_over_witch6Black = pointer27;
20005140:	4b38      	ldr	r3, [pc, #224]	; (20005224 <initSprites+0x270>)
20005142:	683a      	ldr	r2, [r7, #0]
20005144:	601a      	str	r2, [r3, #0]
	load_sprite(pointer, game_over_witch12_gray_bits, game_over_witch12_black_width, game_over_witch12_black_height);
	game_over_witch12Gray = pointer;
	*pointer = &tempgame_over_witch12Black;
	load_sprite(pointer, game_over_witch12_black_bits, game_over_witch12_black_width, game_over_witch12_black_height);
	game_over_witch12Black = pointer;*/
}
20005146:	46c0      	nop			; (mov r8, r8)
20005148:	46bd      	mov	sp, r7
2000514a:	b012      	add	sp, #72	; 0x48
2000514c:	bd80      	pop	{r7, pc}
2000514e:	46c0      	nop			; (mov r8, r8)
20005150:	200082cc 	andcs	r8, r0, ip, asr #5
20005154:	20011474 	andcs	r1, r1, r4, ror r4
20005158:	20008230 	andcs	r8, r0, r0, lsr r2
2000515c:	20008294 	mulcs	r0, r4, r2
20005160:	20011074 	andcs	r1, r1, r4, ror r0
20005164:	20008318 	andcs	r8, r0, r8, lsl r3
20005168:	20008208 	andcs	r8, r0, r8, lsl #4
2000516c:	20010c74 	andcs	r0, r1, r4, ror ip
20005170:	200082f8 	strdcs	r8, [r0], -r8	; <UNPREDICTABLE>
20005174:	20008240 	andcs	r8, r0, r0, asr #4
20005178:	20012074 	andcs	r2, r1, r4, ror r0
2000517c:	200081e0 	andcs	r8, r0, r0, ror #3
20005180:	20008234 	andcs	r8, r0, r4, lsr r2
20005184:	20011c74 	andcs	r1, r1, r4, ror ip
20005188:	200082b8 			; <UNDEFINED> instruction: 0x200082b8
2000518c:	20008220 	andcs	r8, r0, r0, lsr #4
20005190:	20011874 	andcs	r1, r1, r4, ror r8
20005194:	2000831c 	andcs	r8, r0, ip, lsl r3
20005198:	200082e0 	andcs	r8, r0, r0, ror #5
2000519c:	20012c74 	andcs	r2, r1, r4, ror ip
200051a0:	200081dc 	ldrdcs	r8, [r0], -ip
200051a4:	200081f0 	strdcs	r8, [r0], -r0
200051a8:	20012874 	andcs	r2, r1, r4, ror r8
200051ac:	200082c8 	andcs	r8, r0, r8, asr #5
200051b0:	200082fc 	strdcs	r8, [r0], -ip
200051b4:	20012474 	andcs	r2, r1, r4, ror r4
200051b8:	2000834c 	andcs	r8, r0, ip, asr #6
200051bc:	200082a0 	andcs	r8, r0, r0, lsr #5
200051c0:	20013874 	andcs	r3, r1, r4, ror r8
200051c4:	2000833c 	andcs	r8, r0, ip, lsr r3
200051c8:	20008214 	andcs	r8, r0, r4, lsl r2
200051cc:	20013474 	andcs	r3, r1, r4, ror r4
200051d0:	2000822c 	andcs	r8, r0, ip, lsr #4
200051d4:	2000835c 	andcs	r8, r0, ip, asr r3
200051d8:	20013074 	andcs	r3, r1, r4, ror r0
200051dc:	20008308 	andcs	r8, r0, r8, lsl #6
200051e0:	200082bc 			; <UNDEFINED> instruction: 0x200082bc
200051e4:	20014474 	andcs	r4, r1, r4, ror r4
200051e8:	20008378 	andcs	r8, r0, r8, ror r3
200051ec:	20008368 	andcs	r8, r0, r8, ror #6
200051f0:	20014074 	andcs	r4, r1, r4, ror r0
200051f4:	2000832c 	andcs	r8, r0, ip, lsr #6
200051f8:	200082ec 	andcs	r8, r0, ip, ror #5
200051fc:	20013c74 	andcs	r3, r1, r4, ror ip
20005200:	200082d8 	ldrdcs	r8, [r0], -r8	; <UNPREDICTABLE>
20005204:	200082ac 	andcs	r8, r0, ip, lsr #5
20005208:	20015074 	andcs	r5, r1, r4, ror r0
2000520c:	200081d8 	ldrdcs	r8, [r0], -r8	; <UNPREDICTABLE>
20005210:	20008330 	andcs	r8, r0, r0, lsr r3
20005214:	20014c74 	andcs	r4, r1, r4, ror ip
20005218:	20008374 	andcs	r8, r0, r4, ror r3
2000521c:	20008350 	andcs	r8, r0, r0, asr r3
20005220:	20014874 	andcs	r4, r1, r4, ror r8
20005224:	200082dc 	ldrdcs	r8, [r0], -ip

20005228 <init_game_over_witch>:
	
void init_game_over_witch( GameObject *game_over_witchObj ) {
20005228:	b590      	push	{r4, r7, lr}
2000522a:	b083      	sub	sp, #12
2000522c:	af00      	add	r7, sp, #0
2000522e:	6078      	str	r0, [r7, #4]
	static int firstTime = 1;
	if (firstTime) {
20005230:	4b37      	ldr	r3, [pc, #220]	; (20005310 <init_game_over_witch+0xe8>)
20005232:	681b      	ldr	r3, [r3, #0]
20005234:	2b00      	cmp	r3, #0
20005236:	d057      	beq.n	200052e8 <init_game_over_witch+0xc0>
		initSprites();
20005238:	f7ff febc 	bl	20004fb4 <initSprites>
		firstTime = 0;			
2000523c:	4b34      	ldr	r3, [pc, #208]	; (20005310 <init_game_over_witch+0xe8>)
2000523e:	2200      	movs	r2, #0
20005240:	601a      	str	r2, [r3, #0]

		game_over_witchImages[0] = game_over_witch1Image;
20005242:	4b34      	ldr	r3, [pc, #208]	; (20005314 <init_game_over_witch+0xec>)
20005244:	4a34      	ldr	r2, [pc, #208]	; (20005318 <init_game_over_witch+0xf0>)
20005246:	ca13      	ldmia	r2!, {r0, r1, r4}
20005248:	c313      	stmia	r3!, {r0, r1, r4}
		game_over_witchImages[1] = game_over_witch2Image;
2000524a:	4b32      	ldr	r3, [pc, #200]	; (20005314 <init_game_over_witch+0xec>)
2000524c:	4a33      	ldr	r2, [pc, #204]	; (2000531c <init_game_over_witch+0xf4>)
2000524e:	330c      	adds	r3, #12
20005250:	ca13      	ldmia	r2!, {r0, r1, r4}
20005252:	c313      	stmia	r3!, {r0, r1, r4}
		game_over_witchImages[2] = game_over_witch3Image;
20005254:	4b2f      	ldr	r3, [pc, #188]	; (20005314 <init_game_over_witch+0xec>)
20005256:	4a32      	ldr	r2, [pc, #200]	; (20005320 <init_game_over_witch+0xf8>)
20005258:	3318      	adds	r3, #24
2000525a:	ca13      	ldmia	r2!, {r0, r1, r4}
2000525c:	c313      	stmia	r3!, {r0, r1, r4}
		game_over_witchImages[3] = game_over_witch4Image;
2000525e:	4b2d      	ldr	r3, [pc, #180]	; (20005314 <init_game_over_witch+0xec>)
20005260:	4a30      	ldr	r2, [pc, #192]	; (20005324 <init_game_over_witch+0xfc>)
20005262:	3324      	adds	r3, #36	; 0x24
20005264:	ca13      	ldmia	r2!, {r0, r1, r4}
20005266:	c313      	stmia	r3!, {r0, r1, r4}
		game_over_witchImages[4] = game_over_witch5Image;
20005268:	4b2a      	ldr	r3, [pc, #168]	; (20005314 <init_game_over_witch+0xec>)
2000526a:	4a2f      	ldr	r2, [pc, #188]	; (20005328 <init_game_over_witch+0x100>)
2000526c:	3330      	adds	r3, #48	; 0x30
2000526e:	ca13      	ldmia	r2!, {r0, r1, r4}
20005270:	c313      	stmia	r3!, {r0, r1, r4}
		game_over_witchImages[5] = game_over_witch6Image;
20005272:	4b28      	ldr	r3, [pc, #160]	; (20005314 <init_game_over_witch+0xec>)
20005274:	4a2d      	ldr	r2, [pc, #180]	; (2000532c <init_game_over_witch+0x104>)
20005276:	333c      	adds	r3, #60	; 0x3c
20005278:	ca13      	ldmia	r2!, {r0, r1, r4}
2000527a:	c313      	stmia	r3!, {r0, r1, r4}
		game_over_witchImages[8] = game_over_witch9Image;
		game_over_witchImages[9] = game_over_witch10Image;
		game_over_witchImages[10] = game_over_witch11Image;
		game_over_witchImages[11] = game_over_witch12Image;*/
		
		load_image(&game_over_witchImages[0], game_over_witch1Black, game_over_witch1Gray, game_over_witch1Light);
2000527c:	4b2c      	ldr	r3, [pc, #176]	; (20005330 <init_game_over_witch+0x108>)
2000527e:	6819      	ldr	r1, [r3, #0]
20005280:	4b2c      	ldr	r3, [pc, #176]	; (20005334 <init_game_over_witch+0x10c>)
20005282:	681a      	ldr	r2, [r3, #0]
20005284:	4b2c      	ldr	r3, [pc, #176]	; (20005338 <init_game_over_witch+0x110>)
20005286:	681b      	ldr	r3, [r3, #0]
20005288:	4822      	ldr	r0, [pc, #136]	; (20005314 <init_game_over_witch+0xec>)
2000528a:	f7ff f98b 	bl	200045a4 <load_image>
		load_image(&game_over_witchImages[1], game_over_witch2Black, game_over_witch2Gray, game_over_witch2Light);
2000528e:	4b2b      	ldr	r3, [pc, #172]	; (2000533c <init_game_over_witch+0x114>)
20005290:	6819      	ldr	r1, [r3, #0]
20005292:	4b2b      	ldr	r3, [pc, #172]	; (20005340 <init_game_over_witch+0x118>)
20005294:	681a      	ldr	r2, [r3, #0]
20005296:	4b2b      	ldr	r3, [pc, #172]	; (20005344 <init_game_over_witch+0x11c>)
20005298:	681b      	ldr	r3, [r3, #0]
2000529a:	482b      	ldr	r0, [pc, #172]	; (20005348 <init_game_over_witch+0x120>)
2000529c:	f7ff f982 	bl	200045a4 <load_image>
		load_image(&game_over_witchImages[2], game_over_witch3Black, game_over_witch3Gray, game_over_witch3Light);
200052a0:	4b2a      	ldr	r3, [pc, #168]	; (2000534c <init_game_over_witch+0x124>)
200052a2:	6819      	ldr	r1, [r3, #0]
200052a4:	4b2a      	ldr	r3, [pc, #168]	; (20005350 <init_game_over_witch+0x128>)
200052a6:	681a      	ldr	r2, [r3, #0]
200052a8:	4b2a      	ldr	r3, [pc, #168]	; (20005354 <init_game_over_witch+0x12c>)
200052aa:	681b      	ldr	r3, [r3, #0]
200052ac:	482a      	ldr	r0, [pc, #168]	; (20005358 <init_game_over_witch+0x130>)
200052ae:	f7ff f979 	bl	200045a4 <load_image>
		load_image(&game_over_witchImages[3], game_over_witch4Black, game_over_witch4Gray, game_over_witch4Light);
200052b2:	4b2a      	ldr	r3, [pc, #168]	; (2000535c <init_game_over_witch+0x134>)
200052b4:	6819      	ldr	r1, [r3, #0]
200052b6:	4b2a      	ldr	r3, [pc, #168]	; (20005360 <init_game_over_witch+0x138>)
200052b8:	681a      	ldr	r2, [r3, #0]
200052ba:	4b2a      	ldr	r3, [pc, #168]	; (20005364 <init_game_over_witch+0x13c>)
200052bc:	681b      	ldr	r3, [r3, #0]
200052be:	482a      	ldr	r0, [pc, #168]	; (20005368 <init_game_over_witch+0x140>)
200052c0:	f7ff f970 	bl	200045a4 <load_image>
		load_image(&game_over_witchImages[4], game_over_witch5Black, game_over_witch5Gray, game_over_witch5Light);
200052c4:	4b29      	ldr	r3, [pc, #164]	; (2000536c <init_game_over_witch+0x144>)
200052c6:	6819      	ldr	r1, [r3, #0]
200052c8:	4b29      	ldr	r3, [pc, #164]	; (20005370 <init_game_over_witch+0x148>)
200052ca:	681a      	ldr	r2, [r3, #0]
200052cc:	4b29      	ldr	r3, [pc, #164]	; (20005374 <init_game_over_witch+0x14c>)
200052ce:	681b      	ldr	r3, [r3, #0]
200052d0:	4829      	ldr	r0, [pc, #164]	; (20005378 <init_game_over_witch+0x150>)
200052d2:	f7ff f967 	bl	200045a4 <load_image>
		load_image(&game_over_witchImages[5], game_over_witch6Black, game_over_witch6Gray, game_over_witch6Light);
200052d6:	4b29      	ldr	r3, [pc, #164]	; (2000537c <init_game_over_witch+0x154>)
200052d8:	6819      	ldr	r1, [r3, #0]
200052da:	4b29      	ldr	r3, [pc, #164]	; (20005380 <init_game_over_witch+0x158>)
200052dc:	681a      	ldr	r2, [r3, #0]
200052de:	4b29      	ldr	r3, [pc, #164]	; (20005384 <init_game_over_witch+0x15c>)
200052e0:	681b      	ldr	r3, [r3, #0]
200052e2:	4829      	ldr	r0, [pc, #164]	; (20005388 <init_game_over_witch+0x160>)
200052e4:	f7ff f95e 	bl	200045a4 <load_image>
		load_image(&game_over_witchImages[9], game_over_witch10Black, game_over_witch10Gray, game_over_witch10Light);
		load_image(&game_over_witchImages[10], game_over_witch11Black, game_over_witch11Gray, game_over_witch11Light);
		load_image(&game_over_witchImages[11], game_over_witch12Black, game_over_witch12Gray, game_over_witch12Light);*/
	}
	
	game_over_witchObj->images = game_over_witchImages;
200052e8:	687b      	ldr	r3, [r7, #4]
200052ea:	4a0a      	ldr	r2, [pc, #40]	; (20005314 <init_game_over_witch+0xec>)
200052ec:	601a      	str	r2, [r3, #0]

	game_over_witchObj->current_frame = 0;
200052ee:	687b      	ldr	r3, [r7, #4]
200052f0:	2200      	movs	r2, #0
200052f2:	615a      	str	r2, [r3, #20]
	game_over_witchObj->n_frames = 6;
200052f4:	687b      	ldr	r3, [r7, #4]
200052f6:	2206      	movs	r2, #6
200052f8:	619a      	str	r2, [r3, #24]
	game_over_witchObj->animation_speed = 1;
200052fa:	687b      	ldr	r3, [r7, #4]
200052fc:	2201      	movs	r2, #1
200052fe:	61da      	str	r2, [r3, #28]
	game_over_witchObj->animation_counter = 0;
20005300:	687b      	ldr	r3, [r7, #4]
20005302:	2200      	movs	r2, #0
20005304:	621a      	str	r2, [r3, #32]
}
20005306:	46c0      	nop			; (mov r8, r8)
20005308:	46bd      	mov	sp, r7
2000530a:	b003      	add	sp, #12
2000530c:	bd90      	pop	{r4, r7, pc}
2000530e:	46c0      	nop			; (mov r8, r8)
20005310:	20015474 	andcs	r5, r1, r4, ror r4
20005314:	2000824c 	andcs	r8, r0, ip, asr #4
20005318:	20008320 	andcs	r8, r0, r0, lsr #6
2000531c:	200081fc 	strdcs	r8, [r0], -ip
20005320:	20008340 	andcs	r8, r0, r0, asr #6
20005324:	2000830c 	andcs	r8, r0, ip, lsl #6
20005328:	200081e4 	andcs	r8, r0, r4, ror #3
2000532c:	200081cc 	andcs	r8, r0, ip, asr #3
20005330:	200082f8 	strdcs	r8, [r0], -r8	; <UNPREDICTABLE>
20005334:	20008318 	andcs	r8, r0, r8, lsl r3
20005338:	20008230 	andcs	r8, r0, r0, lsr r2
2000533c:	2000831c 	andcs	r8, r0, ip, lsl r3
20005340:	200082b8 			; <UNDEFINED> instruction: 0x200082b8
20005344:	200081e0 	andcs	r8, r0, r0, ror #3
20005348:	20008258 	andcs	r8, r0, r8, asr r2
2000534c:	2000834c 	andcs	r8, r0, ip, asr #6
20005350:	200082c8 	andcs	r8, r0, r8, asr #5
20005354:	200081dc 	ldrdcs	r8, [r0], -ip
20005358:	20008264 	andcs	r8, r0, r4, ror #4
2000535c:	20008308 	andcs	r8, r0, r8, lsl #6
20005360:	2000822c 	andcs	r8, r0, ip, lsr #4
20005364:	2000833c 	andcs	r8, r0, ip, lsr r3
20005368:	20008270 	andcs	r8, r0, r0, ror r2
2000536c:	200082d8 	ldrdcs	r8, [r0], -r8	; <UNPREDICTABLE>
20005370:	2000832c 	andcs	r8, r0, ip, lsr #6
20005374:	20008378 	andcs	r8, r0, r8, ror r3
20005378:	2000827c 	andcs	r8, r0, ip, ror r2
2000537c:	200082dc 	ldrdcs	r8, [r0], -ip
20005380:	20008374 	andcs	r8, r0, r4, ror r3
20005384:	200081d8 	ldrdcs	r8, [r0], -r8	; <UNPREDICTABLE>
20005388:	20008288 	andcs	r8, r0, r8, lsl #5

2000538c <initSprites>:


GameObject stoneObj;
Image stoneImage;
Image stoneImages[1];
static void initSprites( void ) {	
2000538c:	b580      	push	{r7, lr}
2000538e:	b084      	sub	sp, #16
20005390:	af00      	add	r7, sp, #0
	
	sprite *pointer11 = &tempStoneLight;
20005392:	4b12      	ldr	r3, [pc, #72]	; (200053dc <initSprites+0x50>)
20005394:	60fb      	str	r3, [r7, #12]
	load_sprite(pointer11, stone_light_bits, stone_black_width, stone_black_height);
20005396:	4912      	ldr	r1, [pc, #72]	; (200053e0 <initSprites+0x54>)
20005398:	68f8      	ldr	r0, [r7, #12]
2000539a:	2317      	movs	r3, #23
2000539c:	2218      	movs	r2, #24
2000539e:	f7ff f915 	bl	200045cc <load_sprite>
	stoneLight = pointer11;
200053a2:	4b10      	ldr	r3, [pc, #64]	; (200053e4 <initSprites+0x58>)
200053a4:	68fa      	ldr	r2, [r7, #12]
200053a6:	601a      	str	r2, [r3, #0]
	sprite *pointer12 = &tempStoneGray;
200053a8:	4b0f      	ldr	r3, [pc, #60]	; (200053e8 <initSprites+0x5c>)
200053aa:	60bb      	str	r3, [r7, #8]
	load_sprite(pointer12, stone_gray_bits, stone_black_width, stone_black_height);
200053ac:	490f      	ldr	r1, [pc, #60]	; (200053ec <initSprites+0x60>)
200053ae:	68b8      	ldr	r0, [r7, #8]
200053b0:	2317      	movs	r3, #23
200053b2:	2218      	movs	r2, #24
200053b4:	f7ff f90a 	bl	200045cc <load_sprite>
	stoneGray = pointer12;
200053b8:	4b0d      	ldr	r3, [pc, #52]	; (200053f0 <initSprites+0x64>)
200053ba:	68ba      	ldr	r2, [r7, #8]
200053bc:	601a      	str	r2, [r3, #0]
	sprite *pointer13 = &tempStoneBlack;
200053be:	4b0d      	ldr	r3, [pc, #52]	; (200053f4 <initSprites+0x68>)
200053c0:	607b      	str	r3, [r7, #4]
	load_sprite(pointer13, stone_black_bits, stone_black_width, stone_black_height);
200053c2:	490d      	ldr	r1, [pc, #52]	; (200053f8 <initSprites+0x6c>)
200053c4:	6878      	ldr	r0, [r7, #4]
200053c6:	2317      	movs	r3, #23
200053c8:	2218      	movs	r2, #24
200053ca:	f7ff f8ff 	bl	200045cc <load_sprite>
	stoneBlack = pointer13;	
200053ce:	4b0b      	ldr	r3, [pc, #44]	; (200053fc <initSprites+0x70>)
200053d0:	687a      	ldr	r2, [r7, #4]
200053d2:	601a      	str	r2, [r3, #0]
	
}
200053d4:	46c0      	nop			; (mov r8, r8)
200053d6:	46bd      	mov	sp, r7
200053d8:	b004      	add	sp, #16
200053da:	bd80      	pop	{r7, pc}
200053dc:	20008390 	mulcs	r0, r0, r3
200053e0:	20015508 	andcs	r5, r1, r8, lsl #10
200053e4:	2000838c 	andcs	r8, r0, ip, lsl #7
200053e8:	20008380 	andcs	r8, r0, r0, lsl #7
200053ec:	200154c0 	andcs	r5, r1, r0, asr #9
200053f0:	2000837c 	andcs	r8, r0, ip, ror r3
200053f4:	200083d0 	ldrdcs	r8, [r0], -r0
200053f8:	20015478 	andcs	r5, r1, r8, ror r4
200053fc:	200083cc 	andcs	r8, r0, ip, asr #7

20005400 <init_stone>:
	
void init_stone( GameObject *stoneObj ) {
20005400:	b590      	push	{r4, r7, lr}
20005402:	b083      	sub	sp, #12
20005404:	af00      	add	r7, sp, #0
20005406:	6078      	str	r0, [r7, #4]
	static int firstTime = 1;
	if (firstTime) {
20005408:	4b14      	ldr	r3, [pc, #80]	; (2000545c <init_stone+0x5c>)
2000540a:	681b      	ldr	r3, [r3, #0]
2000540c:	2b00      	cmp	r3, #0
2000540e:	d011      	beq.n	20005434 <init_stone+0x34>
		initSprites();
20005410:	f7ff ffbc 	bl	2000538c <initSprites>
		firstTime = 0;			
20005414:	4b11      	ldr	r3, [pc, #68]	; (2000545c <init_stone+0x5c>)
20005416:	2200      	movs	r2, #0
20005418:	601a      	str	r2, [r3, #0]

		stoneImages[0] = stoneImage;
2000541a:	4b11      	ldr	r3, [pc, #68]	; (20005460 <init_stone+0x60>)
2000541c:	4a11      	ldr	r2, [pc, #68]	; (20005464 <init_stone+0x64>)
2000541e:	ca13      	ldmia	r2!, {r0, r1, r4}
20005420:	c313      	stmia	r3!, {r0, r1, r4}
		
		load_image(&stoneImages[0], stoneBlack, stoneGray, stoneLight);
20005422:	4b11      	ldr	r3, [pc, #68]	; (20005468 <init_stone+0x68>)
20005424:	6819      	ldr	r1, [r3, #0]
20005426:	4b11      	ldr	r3, [pc, #68]	; (2000546c <init_stone+0x6c>)
20005428:	681a      	ldr	r2, [r3, #0]
2000542a:	4b11      	ldr	r3, [pc, #68]	; (20005470 <init_stone+0x70>)
2000542c:	681b      	ldr	r3, [r3, #0]
2000542e:	480c      	ldr	r0, [pc, #48]	; (20005460 <init_stone+0x60>)
20005430:	f7ff f8b8 	bl	200045a4 <load_image>
	}
	
	stoneObj->images = stoneImages;
20005434:	687b      	ldr	r3, [r7, #4]
20005436:	4a0a      	ldr	r2, [pc, #40]	; (20005460 <init_stone+0x60>)
20005438:	601a      	str	r2, [r3, #0]

	stoneObj->current_frame = 0;
2000543a:	687b      	ldr	r3, [r7, #4]
2000543c:	2200      	movs	r2, #0
2000543e:	615a      	str	r2, [r3, #20]
	stoneObj->n_frames = 1;
20005440:	687b      	ldr	r3, [r7, #4]
20005442:	2201      	movs	r2, #1
20005444:	619a      	str	r2, [r3, #24]
	stoneObj->animation_speed = 1;
20005446:	687b      	ldr	r3, [r7, #4]
20005448:	2201      	movs	r2, #1
2000544a:	61da      	str	r2, [r3, #28]
	stoneObj->animation_counter = 0;
2000544c:	687b      	ldr	r3, [r7, #4]
2000544e:	2200      	movs	r2, #0
20005450:	621a      	str	r2, [r3, #32]
}
20005452:	46c0      	nop			; (mov r8, r8)
20005454:	46bd      	mov	sp, r7
20005456:	b003      	add	sp, #12
20005458:	bd90      	pop	{r4, r7, pc}
2000545a:	46c0      	nop			; (mov r8, r8)
2000545c:	20015558 	andcs	r5, r1, r8, asr r5
20005460:	200083dc 	ldrdcs	r8, [r0], -ip
20005464:	200083c0 	andcs	r8, r0, r0, asr #7
20005468:	200083cc 	andcs	r8, r0, ip, asr #7
2000546c:	2000837c 	andcs	r8, r0, ip, ror r3
20005470:	2000838c 	andcs	r8, r0, ip, lsl #7

20005474 <reset_Stone>:
int stone_speed = 0;
int stone_bounces = 3;
int stone_gravity = 1;
int stone_stoneCount = 0;

void reset_Stone( void ) {
20005474:	b580      	push	{r7, lr}
20005476:	af00      	add	r7, sp, #0
	 stone_fall_1 = 0;
20005478:	4b08      	ldr	r3, [pc, #32]	; (2000549c <reset_Stone+0x28>)
2000547a:	2200      	movs	r2, #0
2000547c:	601a      	str	r2, [r3, #0]
	 stone_speed = 0;
2000547e:	4b08      	ldr	r3, [pc, #32]	; (200054a0 <reset_Stone+0x2c>)
20005480:	2200      	movs	r2, #0
20005482:	601a      	str	r2, [r3, #0]
	 stone_bounces = 3;
20005484:	4b07      	ldr	r3, [pc, #28]	; (200054a4 <reset_Stone+0x30>)
20005486:	2203      	movs	r2, #3
20005488:	601a      	str	r2, [r3, #0]
	 stone_gravity = 1;
2000548a:	4b07      	ldr	r3, [pc, #28]	; (200054a8 <reset_Stone+0x34>)
2000548c:	2201      	movs	r2, #1
2000548e:	601a      	str	r2, [r3, #0]
	 stone_stoneCount = 0;
20005490:	4b06      	ldr	r3, [pc, #24]	; (200054ac <reset_Stone+0x38>)
20005492:	2200      	movs	r2, #0
20005494:	601a      	str	r2, [r3, #0]
}
20005496:	46c0      	nop			; (mov r8, r8)
20005498:	46bd      	mov	sp, r7
2000549a:	bd80      	pop	{r7, pc}
2000549c:	20005790 	mulcs	r0, r0, r7
200054a0:	20005794 	mulcs	r0, r4, r7
200054a4:	20015550 	andcs	r5, r1, r0, asr r5
200054a8:	20015554 	andcs	r5, r1, r4, asr r5
200054ac:	20005798 	mulcs	r0, r8, r7

200054b0 <stoneUpdate>:


void stoneUpdate( GameObject *this ) {
200054b0:	b580      	push	{r7, lr}
200054b2:	b082      	sub	sp, #8
200054b4:	af00      	add	r7, sp, #0
200054b6:	6078      	str	r0, [r7, #4]
	if(!stone_fall_1 && read_DIL_single(STONE_TRIGGER)){
200054b8:	4b24      	ldr	r3, [pc, #144]	; (2000554c <stoneUpdate+0x9c>)
200054ba:	681b      	ldr	r3, [r3, #0]
200054bc:	2b00      	cmp	r3, #0
200054be:	d107      	bne.n	200054d0 <stoneUpdate+0x20>
200054c0:	2002      	movs	r0, #2
200054c2:	f7ff f8b3 	bl	2000462c <read_DIL_single>
200054c6:	1e03      	subs	r3, r0, #0
200054c8:	d002      	beq.n	200054d0 <stoneUpdate+0x20>
		stone_fall_1 = 1;
200054ca:	4b20      	ldr	r3, [pc, #128]	; (2000554c <stoneUpdate+0x9c>)
200054cc:	2201      	movs	r2, #1
200054ce:	601a      	str	r2, [r3, #0]
	}
		
	stone_stoneCount++;
200054d0:	4b1f      	ldr	r3, [pc, #124]	; (20005550 <stoneUpdate+0xa0>)
200054d2:	681b      	ldr	r3, [r3, #0]
200054d4:	1c5a      	adds	r2, r3, #1
200054d6:	4b1e      	ldr	r3, [pc, #120]	; (20005550 <stoneUpdate+0xa0>)
200054d8:	601a      	str	r2, [r3, #0]
	if(stone_fall_1) {
200054da:	4b1c      	ldr	r3, [pc, #112]	; (2000554c <stoneUpdate+0x9c>)
200054dc:	681b      	ldr	r3, [r3, #0]
200054de:	2b00      	cmp	r3, #0
200054e0:	d02f      	beq.n	20005542 <stoneUpdate+0x92>
		stone_speed += stone_gravity * (stone_stoneCount % 2);
200054e2:	4b1b      	ldr	r3, [pc, #108]	; (20005550 <stoneUpdate+0xa0>)
200054e4:	681b      	ldr	r3, [r3, #0]
200054e6:	4a1b      	ldr	r2, [pc, #108]	; (20005554 <stoneUpdate+0xa4>)
200054e8:	4013      	ands	r3, r2
200054ea:	d504      	bpl.n	200054f6 <stoneUpdate+0x46>
200054ec:	3b01      	subs	r3, #1
200054ee:	2202      	movs	r2, #2
200054f0:	4252      	negs	r2, r2
200054f2:	4313      	orrs	r3, r2
200054f4:	3301      	adds	r3, #1
200054f6:	001a      	movs	r2, r3
200054f8:	4b17      	ldr	r3, [pc, #92]	; (20005558 <stoneUpdate+0xa8>)
200054fa:	681b      	ldr	r3, [r3, #0]
200054fc:	435a      	muls	r2, r3
200054fe:	4b17      	ldr	r3, [pc, #92]	; (2000555c <stoneUpdate+0xac>)
20005500:	681b      	ldr	r3, [r3, #0]
20005502:	18d2      	adds	r2, r2, r3
20005504:	4b15      	ldr	r3, [pc, #84]	; (2000555c <stoneUpdate+0xac>)
20005506:	601a      	str	r2, [r3, #0]
		
		this->yPos += stone_speed;
20005508:	687b      	ldr	r3, [r7, #4]
2000550a:	689a      	ldr	r2, [r3, #8]
2000550c:	4b13      	ldr	r3, [pc, #76]	; (2000555c <stoneUpdate+0xac>)
2000550e:	681b      	ldr	r3, [r3, #0]
20005510:	18d2      	adds	r2, r2, r3
20005512:	687b      	ldr	r3, [r7, #4]
20005514:	609a      	str	r2, [r3, #8]
		if(stone_bounces && this->yPos > 53-23) {
20005516:	4b12      	ldr	r3, [pc, #72]	; (20005560 <stoneUpdate+0xb0>)
20005518:	681b      	ldr	r3, [r3, #0]
2000551a:	2b00      	cmp	r3, #0
2000551c:	d011      	beq.n	20005542 <stoneUpdate+0x92>
2000551e:	687b      	ldr	r3, [r7, #4]
20005520:	689b      	ldr	r3, [r3, #8]
20005522:	2b1e      	cmp	r3, #30
20005524:	dd0d      	ble.n	20005542 <stoneUpdate+0x92>
			stone_speed = -(2 * stone_bounces);
20005526:	4b0e      	ldr	r3, [pc, #56]	; (20005560 <stoneUpdate+0xb0>)
20005528:	681a      	ldr	r2, [r3, #0]
2000552a:	0013      	movs	r3, r2
2000552c:	07db      	lsls	r3, r3, #31
2000552e:	1a9b      	subs	r3, r3, r2
20005530:	005b      	lsls	r3, r3, #1
20005532:	001a      	movs	r2, r3
20005534:	4b09      	ldr	r3, [pc, #36]	; (2000555c <stoneUpdate+0xac>)
20005536:	601a      	str	r2, [r3, #0]
			stone_bounces--;
20005538:	4b09      	ldr	r3, [pc, #36]	; (20005560 <stoneUpdate+0xb0>)
2000553a:	681b      	ldr	r3, [r3, #0]
2000553c:	1e5a      	subs	r2, r3, #1
2000553e:	4b08      	ldr	r3, [pc, #32]	; (20005560 <stoneUpdate+0xb0>)
20005540:	601a      	str	r2, [r3, #0]
		}
	}
}
20005542:	46c0      	nop			; (mov r8, r8)
20005544:	46bd      	mov	sp, r7
20005546:	b002      	add	sp, #8
20005548:	bd80      	pop	{r7, pc}
2000554a:	46c0      	nop			; (mov r8, r8)
2000554c:	20005790 	mulcs	r0, r0, r7
20005550:	20005798 	mulcs	r0, r8, r7
20005554:	80000001 	andhi	r0, r0, r1
20005558:	20015554 	andcs	r5, r1, r4, asr r5
2000555c:	20005794 	mulcs	r0, r4, r7
20005560:	20015550 	andcs	r5, r1, r0, asr r5

20005564 <__divsi3>:
20005564:	4603      	mov	r3, r0
20005566:	430b      	orrs	r3, r1
20005568:	d47f      	bmi.n	2000566a <__divsi3+0x106>
2000556a:	2200      	movs	r2, #0
2000556c:	0843      	lsrs	r3, r0, #1
2000556e:	428b      	cmp	r3, r1
20005570:	d374      	bcc.n	2000565c <__divsi3+0xf8>
20005572:	0903      	lsrs	r3, r0, #4
20005574:	428b      	cmp	r3, r1
20005576:	d35f      	bcc.n	20005638 <__divsi3+0xd4>
20005578:	0a03      	lsrs	r3, r0, #8
2000557a:	428b      	cmp	r3, r1
2000557c:	d344      	bcc.n	20005608 <__divsi3+0xa4>
2000557e:	0b03      	lsrs	r3, r0, #12
20005580:	428b      	cmp	r3, r1
20005582:	d328      	bcc.n	200055d6 <__divsi3+0x72>
20005584:	0c03      	lsrs	r3, r0, #16
20005586:	428b      	cmp	r3, r1
20005588:	d30d      	bcc.n	200055a6 <__divsi3+0x42>
2000558a:	22ff      	movs	r2, #255	; 0xff
2000558c:	0209      	lsls	r1, r1, #8
2000558e:	ba12      	rev	r2, r2
20005590:	0c03      	lsrs	r3, r0, #16
20005592:	428b      	cmp	r3, r1
20005594:	d302      	bcc.n	2000559c <__divsi3+0x38>
20005596:	1212      	asrs	r2, r2, #8
20005598:	0209      	lsls	r1, r1, #8
2000559a:	d065      	beq.n	20005668 <__divsi3+0x104>
2000559c:	0b03      	lsrs	r3, r0, #12
2000559e:	428b      	cmp	r3, r1
200055a0:	d319      	bcc.n	200055d6 <__divsi3+0x72>
200055a2:	e000      	b.n	200055a6 <__divsi3+0x42>
200055a4:	0a09      	lsrs	r1, r1, #8
200055a6:	0bc3      	lsrs	r3, r0, #15
200055a8:	428b      	cmp	r3, r1
200055aa:	d301      	bcc.n	200055b0 <__divsi3+0x4c>
200055ac:	03cb      	lsls	r3, r1, #15
200055ae:	1ac0      	subs	r0, r0, r3
200055b0:	4152      	adcs	r2, r2
200055b2:	0b83      	lsrs	r3, r0, #14
200055b4:	428b      	cmp	r3, r1
200055b6:	d301      	bcc.n	200055bc <__divsi3+0x58>
200055b8:	038b      	lsls	r3, r1, #14
200055ba:	1ac0      	subs	r0, r0, r3
200055bc:	4152      	adcs	r2, r2
200055be:	0b43      	lsrs	r3, r0, #13
200055c0:	428b      	cmp	r3, r1
200055c2:	d301      	bcc.n	200055c8 <__divsi3+0x64>
200055c4:	034b      	lsls	r3, r1, #13
200055c6:	1ac0      	subs	r0, r0, r3
200055c8:	4152      	adcs	r2, r2
200055ca:	0b03      	lsrs	r3, r0, #12
200055cc:	428b      	cmp	r3, r1
200055ce:	d301      	bcc.n	200055d4 <__divsi3+0x70>
200055d0:	030b      	lsls	r3, r1, #12
200055d2:	1ac0      	subs	r0, r0, r3
200055d4:	4152      	adcs	r2, r2
200055d6:	0ac3      	lsrs	r3, r0, #11
200055d8:	428b      	cmp	r3, r1
200055da:	d301      	bcc.n	200055e0 <__divsi3+0x7c>
200055dc:	02cb      	lsls	r3, r1, #11
200055de:	1ac0      	subs	r0, r0, r3
200055e0:	4152      	adcs	r2, r2
200055e2:	0a83      	lsrs	r3, r0, #10
200055e4:	428b      	cmp	r3, r1
200055e6:	d301      	bcc.n	200055ec <__divsi3+0x88>
200055e8:	028b      	lsls	r3, r1, #10
200055ea:	1ac0      	subs	r0, r0, r3
200055ec:	4152      	adcs	r2, r2
200055ee:	0a43      	lsrs	r3, r0, #9
200055f0:	428b      	cmp	r3, r1
200055f2:	d301      	bcc.n	200055f8 <__divsi3+0x94>
200055f4:	024b      	lsls	r3, r1, #9
200055f6:	1ac0      	subs	r0, r0, r3
200055f8:	4152      	adcs	r2, r2
200055fa:	0a03      	lsrs	r3, r0, #8
200055fc:	428b      	cmp	r3, r1
200055fe:	d301      	bcc.n	20005604 <__divsi3+0xa0>
20005600:	020b      	lsls	r3, r1, #8
20005602:	1ac0      	subs	r0, r0, r3
20005604:	4152      	adcs	r2, r2
20005606:	d2cd      	bcs.n	200055a4 <__divsi3+0x40>
20005608:	09c3      	lsrs	r3, r0, #7
2000560a:	428b      	cmp	r3, r1
2000560c:	d301      	bcc.n	20005612 <__divsi3+0xae>
2000560e:	01cb      	lsls	r3, r1, #7
20005610:	1ac0      	subs	r0, r0, r3
20005612:	4152      	adcs	r2, r2
20005614:	0983      	lsrs	r3, r0, #6
20005616:	428b      	cmp	r3, r1
20005618:	d301      	bcc.n	2000561e <__divsi3+0xba>
2000561a:	018b      	lsls	r3, r1, #6
2000561c:	1ac0      	subs	r0, r0, r3
2000561e:	4152      	adcs	r2, r2
20005620:	0943      	lsrs	r3, r0, #5
20005622:	428b      	cmp	r3, r1
20005624:	d301      	bcc.n	2000562a <__divsi3+0xc6>
20005626:	014b      	lsls	r3, r1, #5
20005628:	1ac0      	subs	r0, r0, r3
2000562a:	4152      	adcs	r2, r2
2000562c:	0903      	lsrs	r3, r0, #4
2000562e:	428b      	cmp	r3, r1
20005630:	d301      	bcc.n	20005636 <__divsi3+0xd2>
20005632:	010b      	lsls	r3, r1, #4
20005634:	1ac0      	subs	r0, r0, r3
20005636:	4152      	adcs	r2, r2
20005638:	08c3      	lsrs	r3, r0, #3
2000563a:	428b      	cmp	r3, r1
2000563c:	d301      	bcc.n	20005642 <__divsi3+0xde>
2000563e:	00cb      	lsls	r3, r1, #3
20005640:	1ac0      	subs	r0, r0, r3
20005642:	4152      	adcs	r2, r2
20005644:	0883      	lsrs	r3, r0, #2
20005646:	428b      	cmp	r3, r1
20005648:	d301      	bcc.n	2000564e <__divsi3+0xea>
2000564a:	008b      	lsls	r3, r1, #2
2000564c:	1ac0      	subs	r0, r0, r3
2000564e:	4152      	adcs	r2, r2
20005650:	0843      	lsrs	r3, r0, #1
20005652:	428b      	cmp	r3, r1
20005654:	d301      	bcc.n	2000565a <__divsi3+0xf6>
20005656:	004b      	lsls	r3, r1, #1
20005658:	1ac0      	subs	r0, r0, r3
2000565a:	4152      	adcs	r2, r2
2000565c:	1a41      	subs	r1, r0, r1
2000565e:	d200      	bcs.n	20005662 <__divsi3+0xfe>
20005660:	4601      	mov	r1, r0
20005662:	4152      	adcs	r2, r2
20005664:	4610      	mov	r0, r2
20005666:	4770      	bx	lr
20005668:	e05d      	b.n	20005726 <__divsi3+0x1c2>
2000566a:	0fca      	lsrs	r2, r1, #31
2000566c:	d000      	beq.n	20005670 <__divsi3+0x10c>
2000566e:	4249      	negs	r1, r1
20005670:	1003      	asrs	r3, r0, #32
20005672:	d300      	bcc.n	20005676 <__divsi3+0x112>
20005674:	4240      	negs	r0, r0
20005676:	4053      	eors	r3, r2
20005678:	2200      	movs	r2, #0
2000567a:	469c      	mov	ip, r3
2000567c:	0903      	lsrs	r3, r0, #4
2000567e:	428b      	cmp	r3, r1
20005680:	d32d      	bcc.n	200056de <__divsi3+0x17a>
20005682:	0a03      	lsrs	r3, r0, #8
20005684:	428b      	cmp	r3, r1
20005686:	d312      	bcc.n	200056ae <__divsi3+0x14a>
20005688:	22fc      	movs	r2, #252	; 0xfc
2000568a:	0189      	lsls	r1, r1, #6
2000568c:	ba12      	rev	r2, r2
2000568e:	0a03      	lsrs	r3, r0, #8
20005690:	428b      	cmp	r3, r1
20005692:	d30c      	bcc.n	200056ae <__divsi3+0x14a>
20005694:	0189      	lsls	r1, r1, #6
20005696:	1192      	asrs	r2, r2, #6
20005698:	428b      	cmp	r3, r1
2000569a:	d308      	bcc.n	200056ae <__divsi3+0x14a>
2000569c:	0189      	lsls	r1, r1, #6
2000569e:	1192      	asrs	r2, r2, #6
200056a0:	428b      	cmp	r3, r1
200056a2:	d304      	bcc.n	200056ae <__divsi3+0x14a>
200056a4:	0189      	lsls	r1, r1, #6
200056a6:	d03a      	beq.n	2000571e <__divsi3+0x1ba>
200056a8:	1192      	asrs	r2, r2, #6
200056aa:	e000      	b.n	200056ae <__divsi3+0x14a>
200056ac:	0989      	lsrs	r1, r1, #6
200056ae:	09c3      	lsrs	r3, r0, #7
200056b0:	428b      	cmp	r3, r1
200056b2:	d301      	bcc.n	200056b8 <__divsi3+0x154>
200056b4:	01cb      	lsls	r3, r1, #7
200056b6:	1ac0      	subs	r0, r0, r3
200056b8:	4152      	adcs	r2, r2
200056ba:	0983      	lsrs	r3, r0, #6
200056bc:	428b      	cmp	r3, r1
200056be:	d301      	bcc.n	200056c4 <__divsi3+0x160>
200056c0:	018b      	lsls	r3, r1, #6
200056c2:	1ac0      	subs	r0, r0, r3
200056c4:	4152      	adcs	r2, r2
200056c6:	0943      	lsrs	r3, r0, #5
200056c8:	428b      	cmp	r3, r1
200056ca:	d301      	bcc.n	200056d0 <__divsi3+0x16c>
200056cc:	014b      	lsls	r3, r1, #5
200056ce:	1ac0      	subs	r0, r0, r3
200056d0:	4152      	adcs	r2, r2
200056d2:	0903      	lsrs	r3, r0, #4
200056d4:	428b      	cmp	r3, r1
200056d6:	d301      	bcc.n	200056dc <__divsi3+0x178>
200056d8:	010b      	lsls	r3, r1, #4
200056da:	1ac0      	subs	r0, r0, r3
200056dc:	4152      	adcs	r2, r2
200056de:	08c3      	lsrs	r3, r0, #3
200056e0:	428b      	cmp	r3, r1
200056e2:	d301      	bcc.n	200056e8 <__divsi3+0x184>
200056e4:	00cb      	lsls	r3, r1, #3
200056e6:	1ac0      	subs	r0, r0, r3
200056e8:	4152      	adcs	r2, r2
200056ea:	0883      	lsrs	r3, r0, #2
200056ec:	428b      	cmp	r3, r1
200056ee:	d301      	bcc.n	200056f4 <__divsi3+0x190>
200056f0:	008b      	lsls	r3, r1, #2
200056f2:	1ac0      	subs	r0, r0, r3
200056f4:	4152      	adcs	r2, r2
200056f6:	d2d9      	bcs.n	200056ac <__divsi3+0x148>
200056f8:	0843      	lsrs	r3, r0, #1
200056fa:	428b      	cmp	r3, r1
200056fc:	d301      	bcc.n	20005702 <__divsi3+0x19e>
200056fe:	004b      	lsls	r3, r1, #1
20005700:	1ac0      	subs	r0, r0, r3
20005702:	4152      	adcs	r2, r2
20005704:	1a41      	subs	r1, r0, r1
20005706:	d200      	bcs.n	2000570a <__divsi3+0x1a6>
20005708:	4601      	mov	r1, r0
2000570a:	4663      	mov	r3, ip
2000570c:	4152      	adcs	r2, r2
2000570e:	105b      	asrs	r3, r3, #1
20005710:	4610      	mov	r0, r2
20005712:	d301      	bcc.n	20005718 <__divsi3+0x1b4>
20005714:	4240      	negs	r0, r0
20005716:	2b00      	cmp	r3, #0
20005718:	d500      	bpl.n	2000571c <__divsi3+0x1b8>
2000571a:	4249      	negs	r1, r1
2000571c:	4770      	bx	lr
2000571e:	4663      	mov	r3, ip
20005720:	105b      	asrs	r3, r3, #1
20005722:	d300      	bcc.n	20005726 <__divsi3+0x1c2>
20005724:	4240      	negs	r0, r0
20005726:	b501      	push	{r0, lr}
20005728:	2000      	movs	r0, #0
2000572a:	f000 f805 	bl	20005738 <__aeabi_idiv0>
2000572e:	bd02      	pop	{r1, pc}

20005730 <__aeabi_idivmod>:
20005730:	2900      	cmp	r1, #0
20005732:	d0f8      	beq.n	20005726 <__divsi3+0x1c2>
20005734:	e716      	b.n	20005564 <__divsi3>
20005736:	4770      	bx	lr

20005738 <__aeabi_idiv0>:
20005738:	4770      	bx	lr
2000573a:	46c0      	nop			; (mov r8, r8)

2000573c <counter>:
2000573c:	00000000 	andeq	r0, r0, r0

20005740 <i.4337>:
20005740:	00000000 	andeq	r0, r0, r0

20005744 <j.4343>:
20005744:	00000000 	andeq	r0, r0, r0

20005748 <distance_player_fire.4342>:
20005748:	00000000 	andeq	r0, r0, r0

2000574c <distance_player_stone.4347>:
2000574c:	00000000 	andeq	r0, r0, r0

20005750 <distance_hair_trophy.4350>:
20005750:	00000000 	andeq	r0, r0, r0

20005754 <trophy_burned.4349>:
20005754:	00000000 	andeq	r0, r0, r0

20005758 <distance_hair_DIP.4352>:
20005758:	00000000 	andeq	r0, r0, r0

2000575c <DIP_burned.4351>:
2000575c:	00000000 	andeq	r0, r0, r0

20005760 <test.4354>:
20005760:	00000000 	andeq	r0, r0, r0

20005764 <k.4348>:
20005764:	00000000 	andeq	r0, r0, r0

20005768 <nGameObjects>:
20005768:	00000000 	andeq	r0, r0, r0

2000576c <lastJumpValue>:
2000576c:	00000000 	andeq	r0, r0, r0

20005770 <lastRightValue>:
20005770:	00000000 	andeq	r0, r0, r0

20005774 <lastLeftValue>:
20005774:	00000000 	andeq	r0, r0, r0

20005778 <xSpeed>:
20005778:	00000000 	andeq	r0, r0, r0

2000577c <ySpeed>:
2000577c:	00000000 	andeq	r0, r0, r0

20005780 <playerPositionX>:
20005780:	00000000 	andeq	r0, r0, r0

20005784 <playerPositionY>:
20005784:	00000000 	andeq	r0, r0, r0

20005788 <counter>:
20005788:	00000000 	andeq	r0, r0, r0

2000578c <isRunning>:
2000578c:	00000000 	andeq	r0, r0, r0

20005790 <stone_fall_1>:
20005790:	00000000 	andeq	r0, r0, r0

20005794 <stone_speed>:
20005794:	00000000 	andeq	r0, r0, r0

20005798 <stone_stoneCount>:
20005798:	00000000 	andeq	r0, r0, r0

2000579c <monster>:
2000579c:	00000000 	andeq	r0, r0, r0

200057a0 <tempCastleBlack>:
	...

200057ac <tempPressGray>:
	...

200057b8 <tempTitleGray>:
	...

200057c4 <castleBlack>:
200057c4:	00000000 	andeq	r0, r0, r0

200057c8 <tempMonster>:
	...

200057d4 <pressLight>:
200057d4:	00000000 	andeq	r0, r0, r0

200057d8 <tempTitleBlack>:
	...

200057e4 <bg>:
200057e4:	00000000 	andeq	r0, r0, r0

200057e8 <tempMonsterGray>:
	...

200057f4 <tempTitleLight>:
	...

20005800 <castleLight>:
20005800:	00000000 	andeq	r0, r0, r0

20005804 <tempPressLight>:
	...

20005810 <tempCastleLight>:
	...

2000581c <pressGray>:
2000581c:	00000000 	andeq	r0, r0, r0

20005820 <tempMonsterLight>:
	...

2000582c <tempPressBlack>:
	...

20005838 <titleGray>:
20005838:	00000000 	andeq	r0, r0, r0

2000583c <tempCastleGray>:
	...

20005848 <monsterLight>:
20005848:	00000000 	andeq	r0, r0, r0

2000584c <titleLight>:
2000584c:	00000000 	andeq	r0, r0, r0

20005850 <castleGray>:
20005850:	00000000 	andeq	r0, r0, r0

20005854 <random_seed>:
20005854:	00000000 	andeq	r0, r0, r0

20005858 <pressBlack>:
20005858:	00000000 	andeq	r0, r0, r0

2000585c <monsterGray>:
2000585c:	00000000 	andeq	r0, r0, r0

20005860 <tempBg>:
	...

2000586c <titleBlack>:
2000586c:	00000000 	andeq	r0, r0, r0

20005870 <gameObjects>:
	...

20005a00 <fire1Light>:
20005a00:	00000000 	andeq	r0, r0, r0

20005a04 <tempFire3Light>:
	...

20005a10 <fire3Gray>:
20005a10:	00000000 	andeq	r0, r0, r0

20005a14 <tempFire4Gray>:
	...

20005a20 <fire2Image>:
	...

20005a2c <tempFire2Gray>:
	...

20005a38 <tempFireBlack>:
	...

20005a44 <fire3Image>:
	...

20005a50 <tempFire4Light>:
	...

20005a5c <fire1Image>:
	...

20005a68 <fire4Light>:
20005a68:	00000000 	andeq	r0, r0, r0

20005a6c <fireObj>:
	...

20005a90 <fire5Image>:
	...

20005a9c <fireImages>:
	...

20005ad8 <tempFire5Gray>:
	...

20005ae4 <tempFire3Gray>:
	...

20005af0 <fire4Image>:
	...

20005afc <fire4Gray>:
20005afc:	00000000 	andeq	r0, r0, r0

20005b00 <tempFire1Light>:
	...

20005b0c <tempFire5Light>:
	...

20005b18 <fire5Gray>:
20005b18:	00000000 	andeq	r0, r0, r0

20005b1c <fire2Light>:
20005b1c:	00000000 	andeq	r0, r0, r0

20005b20 <fire5Light>:
20005b20:	00000000 	andeq	r0, r0, r0

20005b24 <tempFire1Gray>:
	...

20005b30 <fireBlack>:
20005b30:	00000000 	andeq	r0, r0, r0

20005b34 <tempFire2Light>:
	...

20005b40 <fire3Light>:
20005b40:	00000000 	andeq	r0, r0, r0

20005b44 <fire2Gray>:
20005b44:	00000000 	andeq	r0, r0, r0

20005b48 <fire1Gray>:
20005b48:	00000000 	andeq	r0, r0, r0

20005b4c <bird4Light>:
20005b4c:	00000000 	andeq	r0, r0, r0

20005b50 <bird1Gray>:
20005b50:	00000000 	andeq	r0, r0, r0

20005b54 <bird6Image>:
	...

20005b60 <bird5Black>:
20005b60:	00000000 	andeq	r0, r0, r0

20005b64 <tempBird4Black>:
	...

20005b70 <bird2Image>:
	...

20005b7c <birdObj>:
	...

20005ba0 <bird1Image>:
	...

20005bac <bird3Black>:
20005bac:	00000000 	andeq	r0, r0, r0

20005bb0 <bird4Gray>:
20005bb0:	00000000 	andeq	r0, r0, r0

20005bb4 <bird2Black>:
20005bb4:	00000000 	andeq	r0, r0, r0

20005bb8 <bird1Black>:
20005bb8:	00000000 	andeq	r0, r0, r0

20005bbc <bird4Image>:
	...

20005bc8 <tempBirdBlack>:
	...

20005bd4 <bird3Gray>:
20005bd4:	00000000 	andeq	r0, r0, r0

20005bd8 <tempBirdGray>:
	...

20005be4 <bird5Gray>:
20005be4:	00000000 	andeq	r0, r0, r0

20005be8 <tempBird5Light>:
	...

20005bf4 <tempBird2Gray>:
	...

20005c00 <bird3Light>:
20005c00:	00000000 	andeq	r0, r0, r0

20005c04 <tempBird5Gray>:
	...

20005c10 <tempBird5Black>:
	...

20005c1c <bird5Image>:
	...

20005c28 <bird5Light>:
20005c28:	00000000 	andeq	r0, r0, r0

20005c2c <tempBird3Black>:
	...

20005c38 <bird2Gray>:
20005c38:	00000000 	andeq	r0, r0, r0

20005c3c <tempBirdLight>:
	...

20005c48 <bird1Light>:
20005c48:	00000000 	andeq	r0, r0, r0

20005c4c <tempBird2Light>:
	...

20005c58 <bird3Image>:
	...

20005c64 <tempBird4Light>:
	...

20005c70 <tempBird3Light>:
	...

20005c7c <tempBird3Gray>:
	...

20005c88 <birdImages>:
	...

20005cd0 <bird4Black>:
20005cd0:	00000000 	andeq	r0, r0, r0

20005cd4 <tempBird2Black>:
	...

20005ce0 <tempBird4Gray>:
	...

20005cec <bird2Light>:
20005cec:	00000000 	andeq	r0, r0, r0

20005cf0 <witch1Gray>:
20005cf0:	00000000 	andeq	r0, r0, r0

20005cf4 <witch2Light>:
20005cf4:	00000000 	andeq	r0, r0, r0

20005cf8 <witchImages>:
	...

20005d28 <witch2Image>:
	...

20005d34 <tempWitch2Black>:
	...

20005d40 <tempWitchBlack>:
	...

20005d4c <tempWitch3Light>:
	...

20005d58 <witch4Image>:
	...

20005d64 <witch2Gray>:
20005d64:	00000000 	andeq	r0, r0, r0

20005d68 <tempWitchGray>:
	...

20005d74 <tempWitch3Black>:
	...

20005d80 <tempWitch2Gray>:
	...

20005d8c <witch3Black>:
20005d8c:	00000000 	andeq	r0, r0, r0

20005d90 <witchObj>:
	...

20005db4 <witch3Light>:
20005db4:	00000000 	andeq	r0, r0, r0

20005db8 <tempWitch3Gray>:
	...

20005dc4 <witch1Black>:
20005dc4:	00000000 	andeq	r0, r0, r0

20005dc8 <witch3Gray>:
20005dc8:	00000000 	andeq	r0, r0, r0

20005dcc <witch1Image>:
	...

20005dd8 <tempWitchLight>:
	...

20005de4 <tempWitch2Light>:
	...

20005df0 <witch1Light>:
20005df0:	00000000 	andeq	r0, r0, r0

20005df4 <witch3Image>:
	...

20005e00 <witch2Black>:
20005e00:	00000000 	andeq	r0, r0, r0

20005e04 <DIPObj>:
	...

20005e28 <DIP2Image>:
	...

20005e34 <DIP2Gray>:
20005e34:	00000000 	andeq	r0, r0, r0

20005e38 <tempDIP2Gray>:
	...

20005e44 <DIP3Black>:
20005e44:	00000000 	andeq	r0, r0, r0

20005e48 <DIP1Black>:
20005e48:	00000000 	andeq	r0, r0, r0

20005e4c <tempDIPLight>:
	...

20005e58 <tempDIP3Light>:
	...

20005e64 <DIPImages>:
	...

20005e94 <tempDIP2Black>:
	...

20005ea0 <DIP3Image>:
	...

20005eac <DIP1Image>:
	...

20005eb8 <DIP1Light>:
20005eb8:	00000000 	andeq	r0, r0, r0

20005ebc <DIP2Light>:
20005ebc:	00000000 	andeq	r0, r0, r0

20005ec0 <DIP3Light>:
20005ec0:	00000000 	andeq	r0, r0, r0

20005ec4 <DIP2Black>:
20005ec4:	00000000 	andeq	r0, r0, r0

20005ec8 <tempDIP3Gray>:
	...

20005ed4 <tempDIPBlack>:
	...

20005ee0 <DIP1Gray>:
20005ee0:	00000000 	andeq	r0, r0, r0

20005ee4 <tempDIP3Black>:
	...

20005ef0 <DIP3Gray>:
20005ef0:	00000000 	andeq	r0, r0, r0

20005ef4 <DIP4Image>:
	...

20005f00 <tempDIP2Light>:
	...

20005f0c <tempDIPGray>:
	...

20005f18 <tempFlameGray>:
	...

20005f24 <tempFlame4Light>:
	...

20005f30 <flame2Image>:
	...

20005f3c <flame3Light>:
20005f3c:	00000000 	andeq	r0, r0, r0

20005f40 <tempFlame3Light>:
	...

20005f4c <flame3Image>:
	...

20005f58 <flame3Gray>:
20005f58:	00000000 	andeq	r0, r0, r0

20005f5c <flameObj>:
	...

20005f80 <tempFlame2Light>:
	...

20005f8c <tempFlame3Gray>:
	...

20005f98 <tempFlame2Black>:
	...

20005fa4 <flame2Gray>:
20005fa4:	00000000 	andeq	r0, r0, r0

20005fa8 <flame1Gray>:
20005fa8:	00000000 	andeq	r0, r0, r0

20005fac <flame1Light>:
20005fac:	00000000 	andeq	r0, r0, r0

20005fb0 <tempFlame4Black>:
	...

20005fbc <tempFlame4Gray>:
	...

20005fc8 <flame4Gray>:
20005fc8:	00000000 	andeq	r0, r0, r0

20005fcc <flame4Image>:
	...

20005fd8 <flame1Image>:
	...

20005fe4 <tempFlame2Gray>:
	...

20005ff0 <flameImages>:
	...

20006020 <tempFlame3Black>:
	...

2000602c <flame4Black>:
2000602c:	00000000 	andeq	r0, r0, r0

20006030 <flame1Black>:
20006030:	00000000 	andeq	r0, r0, r0

20006034 <tempFlameLight>:
	...

20006040 <flame2Light>:
20006040:	00000000 	andeq	r0, r0, r0

20006044 <flame3Black>:
20006044:	00000000 	andeq	r0, r0, r0

20006048 <tempFlameBlack>:
	...

20006054 <flame4Light>:
20006054:	00000000 	andeq	r0, r0, r0

20006058 <flame2Black>:
20006058:	00000000 	andeq	r0, r0, r0

2000605c <tempBoom5Gray>:
	...

20006068 <tempBoom2Black>:
	...

20006074 <tempBoomLight>:
	...

20006080 <tempBoom6Light>:
	...

2000608c <boom9Image>:
	...

20006098 <boom12Image>:
	...

200060a4 <boom3Light>:
200060a4:	00000000 	andeq	r0, r0, r0

200060a8 <boom3Black>:
200060a8:	00000000 	andeq	r0, r0, r0

200060ac <boom4Image>:
	...

200060b8 <boom2Image>:
	...

200060c4 <boom5Black>:
200060c4:	00000000 	andeq	r0, r0, r0

200060c8 <boom4Light>:
200060c8:	00000000 	andeq	r0, r0, r0

200060cc <boom10Image>:
	...

200060d8 <boom14Image>:
	...

200060e4 <boom8Image>:
	...

200060f0 <boom5Image>:
	...

200060fc <boom3Gray>:
200060fc:	00000000 	andeq	r0, r0, r0

20006100 <tempBoom4Light>:
	...

2000610c <boom5Gray>:
2000610c:	00000000 	andeq	r0, r0, r0

20006110 <boomObj>:
	...

20006134 <boom6Image>:
	...

20006140 <tempBoom3Light>:
	...

2000614c <boom6Gray>:
2000614c:	00000000 	andeq	r0, r0, r0

20006150 <boom13Image>:
	...

2000615c <boom6Light>:
2000615c:	00000000 	andeq	r0, r0, r0

20006160 <boomImages>:
	...

20006214 <boom6Black>:
20006214:	00000000 	andeq	r0, r0, r0

20006218 <tempBoom3Black>:
	...

20006224 <boom4Black>:
20006224:	00000000 	andeq	r0, r0, r0

20006228 <tempBoom6Black>:
	...

20006234 <tempBoomGray>:
	...

20006240 <boom2Gray>:
20006240:	00000000 	andeq	r0, r0, r0

20006244 <boom1Black>:
20006244:	00000000 	andeq	r0, r0, r0

20006248 <tempBoom6Gray>:
	...

20006254 <tempBoom2Gray>:
	...

20006260 <tempBoom4Gray>:
	...

2000626c <tempBoom3Gray>:
	...

20006278 <boom4Gray>:
20006278:	00000000 	andeq	r0, r0, r0

2000627c <boom5Light>:
2000627c:	00000000 	andeq	r0, r0, r0

20006280 <boom1Gray>:
20006280:	00000000 	andeq	r0, r0, r0

20006284 <boom11Image>:
	...

20006290 <boom1Image>:
	...

2000629c <boom7Image>:
	...

200062a8 <boom3Image>:
	...

200062b4 <tempBoom5Light>:
	...

200062c0 <tempBoom4Black>:
	...

200062cc <tempBoom2Light>:
	...

200062d8 <tempBoom5Black>:
	...

200062e4 <boom1Light>:
200062e4:	00000000 	andeq	r0, r0, r0

200062e8 <boom15Image>:
	...

200062f4 <boom2Black>:
200062f4:	00000000 	andeq	r0, r0, r0

200062f8 <boom2Light>:
200062f8:	00000000 	andeq	r0, r0, r0

200062fc <tempBoomBlack>:
	...

20006308 <dragon1Black>:
20006308:	00000000 	andeq	r0, r0, r0

2000630c <tempDragon3Gray>:
	...

20006318 <dragon4Image>:
	...

20006324 <dragon1Gray>:
20006324:	00000000 	andeq	r0, r0, r0

20006328 <dragon2Image>:
	...

20006334 <dragon2Gray>:
20006334:	00000000 	andeq	r0, r0, r0

20006338 <tempDragon2Light>:
	...

20006344 <dragonImages>:
	...

20006374 <dragon3Gray>:
20006374:	00000000 	andeq	r0, r0, r0

20006378 <dragon1Light>:
20006378:	00000000 	andeq	r0, r0, r0

2000637c <tempDragon2Gray>:
	...

20006388 <dragon2Black>:
20006388:	00000000 	andeq	r0, r0, r0

2000638c <tempDragon3Black>:
	...

20006398 <tempDragon3Light>:
	...

200063a4 <tempDragon2Black>:
	...

200063b0 <dragon3Light>:
200063b0:	00000000 	andeq	r0, r0, r0

200063b4 <dragon3Image>:
	...

200063c0 <dragon3Black>:
200063c0:	00000000 	andeq	r0, r0, r0

200063c4 <dragon2Light>:
200063c4:	00000000 	andeq	r0, r0, r0

200063c8 <tempDragonLight>:
	...

200063d4 <tempDragonBlack>:
	...

200063e0 <dragon1Image>:
	...

200063ec <tempDragonGray>:
	...

200063f8 <dragonObj>:
	...

2000641c <backBufferGray>:
	...

2000681c <draw_buffer_black_gray>:
	...

20006c1c <backBuffer>:
	...

2000701c <draw_buffer_black_light>:
	...

2000741c <draw_buffer_black>:
	...

2000781c <draw_buffer_black_gray_light>:
	...

20007c1c <backBufferLight>:
	...

2000801c <tempIndoorsGray>:
	...

20008028 <tempIndoorsLight>:
	...

20008034 <tempIndoorsBlack>:
	...

20008040 <indoorsGray>:
20008040:	00000000 	andeq	r0, r0, r0

20008044 <indoorsObj>:
	...

20008068 <indoorsImages>:
	...

20008074 <indoorsBlack>:
20008074:	00000000 	andeq	r0, r0, r0

20008078 <indoorsImage>:
	...

20008084 <indoorsLight>:
20008084:	00000000 	andeq	r0, r0, r0

20008088 <indoors2Obj>:
	...

200080ac <indoors2Gray>:
200080ac:	00000000 	andeq	r0, r0, r0

200080b0 <indoors2Images>:
	...

200080bc <indoors2Image>:
	...

200080c8 <tempIndoors2Gray>:
	...

200080d4 <indoors2Light>:
200080d4:	00000000 	andeq	r0, r0, r0

200080d8 <tempIndoors2Black>:
	...

200080e4 <tempIndoors2Light>:
	...

200080f0 <indoors2Black>:
200080f0:	00000000 	andeq	r0, r0, r0

200080f4 <trophyImages>:
	...

20008100 <trophyBlack>:
20008100:	00000000 	andeq	r0, r0, r0

20008104 <trophyImage>:
	...

20008110 <tempTrophyLight>:
	...

2000811c <trophyObj>:
	...

20008140 <trophyGray>:
20008140:	00000000 	andeq	r0, r0, r0

20008144 <tempTrophyBlack>:
	...

20008150 <tempTrophyGray>:
	...

2000815c <trophyLight>:
2000815c:	00000000 	andeq	r0, r0, r0

20008160 <rogerImage>:
	...

2000816c <rogerGray>:
2000816c:	00000000 	andeq	r0, r0, r0

20008170 <tempRogerGray>:
	...

2000817c <tempRogerLight>:
	...

20008188 <rogerLight>:
20008188:	00000000 	andeq	r0, r0, r0

2000818c <rogerObj>:
	...

200081b0 <tempRogerBlack>:
	...

200081bc <rogerBlack>:
200081bc:	00000000 	andeq	r0, r0, r0

200081c0 <rogerImages>:
	...

200081cc <game_over_witch6Image>:
	...

200081d8 <game_over_witch6Light>:
200081d8:	00000000 	andeq	r0, r0, r0

200081dc <game_over_witch3Light>:
200081dc:	00000000 	andeq	r0, r0, r0

200081e0 <game_over_witch2Light>:
200081e0:	00000000 	andeq	r0, r0, r0

200081e4 <game_over_witch5Image>:
	...

200081f0 <tempgame_over_witch3Gray>:
	...

200081fc <game_over_witch2Image>:
	...

20008208 <tempgame_over_witchBlack>:
	...

20008214 <tempgame_over_witch4Gray>:
	...

20008220 <tempgame_over_witch2Black>:
	...

2000822c <game_over_witch4Gray>:
2000822c:	00000000 	andeq	r0, r0, r0

20008230 <game_over_witch1Light>:
20008230:	00000000 	andeq	r0, r0, r0

20008234 <tempgame_over_witch2Gray>:
	...

20008240 <tempgame_over_witch2Light>:
	...

2000824c <game_over_witchImages>:
	...

20008294 <tempgame_over_witchGray>:
	...

200082a0 <tempgame_over_witch4Light>:
	...

200082ac <tempgame_over_witch6Light>:
	...

200082b8 <game_over_witch2Gray>:
200082b8:	00000000 	andeq	r0, r0, r0

200082bc <tempgame_over_witch5Light>:
	...

200082c8 <game_over_witch3Gray>:
200082c8:	00000000 	andeq	r0, r0, r0

200082cc <tempgame_over_witchLight>:
	...

200082d8 <game_over_witch5Black>:
200082d8:	00000000 	andeq	r0, r0, r0

200082dc <game_over_witch6Black>:
200082dc:	00000000 	andeq	r0, r0, r0

200082e0 <tempgame_over_witch3Light>:
	...

200082ec <tempgame_over_witch5Black>:
	...

200082f8 <game_over_witch1Black>:
200082f8:	00000000 	andeq	r0, r0, r0

200082fc <tempgame_over_witch3Black>:
	...

20008308 <game_over_witch4Black>:
20008308:	00000000 	andeq	r0, r0, r0

2000830c <game_over_witch4Image>:
	...

20008318 <game_over_witch1Gray>:
20008318:	00000000 	andeq	r0, r0, r0

2000831c <game_over_witch2Black>:
2000831c:	00000000 	andeq	r0, r0, r0

20008320 <game_over_witch1Image>:
	...

2000832c <game_over_witch5Gray>:
2000832c:	00000000 	andeq	r0, r0, r0

20008330 <tempgame_over_witch6Gray>:
	...

2000833c <game_over_witch4Light>:
2000833c:	00000000 	andeq	r0, r0, r0

20008340 <game_over_witch3Image>:
	...

2000834c <game_over_witch3Black>:
2000834c:	00000000 	andeq	r0, r0, r0

20008350 <tempgame_over_witch6Black>:
	...

2000835c <tempgame_over_witch4Black>:
	...

20008368 <tempgame_over_witch5Gray>:
	...

20008374 <game_over_witch6Gray>:
20008374:	00000000 	andeq	r0, r0, r0

20008378 <game_over_witch5Light>:
20008378:	00000000 	andeq	r0, r0, r0

2000837c <stoneGray>:
2000837c:	00000000 	andeq	r0, r0, r0

20008380 <tempStoneGray>:
	...

2000838c <stoneLight>:
2000838c:	00000000 	andeq	r0, r0, r0

20008390 <tempStoneLight>:
	...

2000839c <stoneObj>:
	...

200083c0 <stoneImage>:
	...

200083cc <stoneBlack>:
200083cc:	00000000 	andeq	r0, r0, r0

200083d0 <tempStoneBlack>:
	...

200083dc <stoneImages>:
	...

200083e8 <monster_black_bits>:
	...
200083f8:	0001c000 	andeq	ip, r1, r0
200083fc:	00023000 	andeq	r3, r2, r0
20008400:	00021000 	andeq	r1, r2, r0
20008404:	00060800 	andeq	r0, r6, r0, lsl #16
20008408:	00040800 	andeq	r0, r4, r0, lsl #16
2000840c:	00040800 	andeq	r0, r4, r0, lsl #16
20008410:	00092800 	andeq	r2, r9, r0, lsl #16
20008414:	00092800 	andeq	r2, r9, r0, lsl #16
20008418:	00100400 	andseq	r0, r0, r0, lsl #8
2000841c:	00100400 	andseq	r0, r0, r0, lsl #8
20008420:	00200200 	eoreq	r0, r0, r0, lsl #4
20008424:	00661b00 	rsbeq	r1, r6, r0, lsl #22
20008428:	0043b100 	subeq	fp, r3, r0, lsl #2
2000842c:	0080e080 	addeq	lr, r0, r0, lsl #1
20008430:	01800080 	orreq	r0, r0, r0, lsl #1
20008434:	01000040 	tsteq	r0, r0, asr #32
20008438:	02000040 	andeq	r0, r0, #64	; 0x40
2000843c:	02000060 	andeq	r0, r0, #96	; 0x60
20008440:	02000020 	andeq	r0, r0, #32
20008444:	03ff03e0 	mvnseq	r0, #224, 6	; 0x80000003
20008448:	0001fc00 	andeq	pc, r1, r0, lsl #24
	...

20008460 <monster_light_bits>:
	...
20008474:	00010000 	andeq	r0, r1, r0
20008478:	00018000 	andeq	r8, r1, r0
2000847c:	0001f000 	andeq	pc, r1, r0
20008480:	0001f000 	andeq	pc, r1, r0
20008484:	00009000 	andeq	r9, r0, r0
20008488:	00009000 	andeq	r9, r0, r0
2000848c:	0000d000 	andeq	sp, r0, r0
20008490:	0001f800 	andeq	pc, r1, r0, lsl #16
20008494:	0003f800 	andeq	pc, r3, r0, lsl #16
20008498:	0003fc00 	andeq	pc, r3, r0, lsl #24
2000849c:	0001e400 	andeq	lr, r1, r0, lsl #8
200084a0:	00044c00 	andeq	r4, r4, r0, lsl #24
200084a4:	00060c00 	andeq	r0, r6, r0, lsl #24
200084a8:	0006ee00 	andeq	lr, r6, r0, lsl #28
200084ac:	000ffe00 	andeq	pc, pc, r0, lsl #28
200084b0:	000f3f00 	andeq	r3, pc, r0, lsl #30
200084b4:	00000780 	andeq	r0, r0, r0, lsl #15
200084b8:	000003c0 	andeq	r0, r0, r0, asr #7
	...

200084d8 <monster_gray_bits>:
	...
200084f8:	00020000 	andeq	r0, r2, r0
200084fc:	00000000 	andeq	r0, r0, r0
20008500:	00040000 	andeq	r0, r4, r0
20008504:	00060000 	andeq	r0, r6, r0
20008508:	000e0000 	andeq	r0, lr, r0
2000850c:	000c0000 	andeq	r0, ip, r0
20008510:	001c0000 	andseq	r0, ip, r0
20008514:	00180000 	andseq	r0, r8, r0
20008518:	00380000 	eorseq	r0, r8, r0
2000851c:	00780000 	rsbseq	r0, r8, r0
20008520:	00780000 	rsbseq	r0, r8, r0
20008524:	00f00000 	rscseq	r0, r0, r0
20008528:	01f0c000 	mvnseq	ip, r0
2000852c:	01fff800 	mvnseq	pc, r0, lsl #16
20008530:	01fffc00 	mvnseq	pc, r0, lsl #24
20008534:	0000fc00 	andeq	pc, r0, r0, lsl #24
	...

20008550 <press_black_bits>:
	...
20008588:	001c0000 	andseq	r0, ip, r0
2000858c:	00000000 	andeq	r0, r0, r0
20008590:	00240000 	eoreq	r0, r4, r0
20008594:	00000000 	andeq	r0, r0, r0
20008598:	00440000 	subeq	r0, r4, r0
2000859c:	00000000 	andeq	r0, r0, r0
200085a0:	c5240000 	strgt	r0, [r4, #-0]!
200085a4:	00000198 	muleq	r0, r8, r1
200085a8:	2b1c0000 	blcs	207085b0 <firstTime.4108+0x6f3058>
200085ac:	00000045 	andeq	r0, r0, r5, asr #32
200085b0:	e1040000 	mrs	r0, (UNDEF: 4)
200085b4:	000000cd 	andeq	r0, r0, sp, asr #1
200085b8:	21040000 	mrscs	r0, (UNDEF: 4)
200085bc:	00000110 	andeq	r0, r0, r0, lsl r1
200085c0:	c1040000 	mrsgt	r0, (UNDEF: 4)
200085c4:	000000cc 	andeq	r0, r0, ip, asr #1
	...
200085f4:	00000004 	andeq	r0, r0, r4
200085f8:	00000000 	andeq	r0, r0, r0
200085fc:	00000004 	andeq	r0, r0, r4
20008600:	00000000 	andeq	r0, r0, r0
20008604:	00000004 	andeq	r0, r0, r4
20008608:	0494e000 	ldreq	lr, [r4], #0
2000860c:	00009334 	andeq	r9, r0, r4, lsr r3
20008610:	04ac9000 	strteq	r9, [ip], #0
20008614:	00009494 	muleq	r0, r4, r4
20008618:	04a49000 	strteq	r9, [r4], #0
2000861c:	0000978c 	andeq	r9, r0, ip, lsl #15
20008620:	04a49000 	strteq	r9, [r4], #0
20008624:	00009094 	muleq	r0, r4, r0
20008628:	07256000 	streq	r6, [r5, -r0]!
2000862c:	0000e324 	andeq	lr, r0, r4, lsr #6
20008630:	04000000 	streq	r0, [r0], #-0
20008634:	00008000 	andeq	r8, r0, r0
20008638:	04000000 	streq	r0, [r0], #-0
2000863c:	00008000 	andeq	r8, r0, r0
20008640:	03000000 	movweq	r0, #0
20008644:	00006000 	andeq	r6, r0, r0
	...

20008668 <press_light_bits>:
	...
200086a8:	00000200 	andeq	r0, r0, r0, lsl #4
200086ac:	00000000 	andeq	r0, r0, r0
200086b0:	00000700 	andeq	r0, r0, r0, lsl #14
200086b4:	00000000 	andeq	r0, r0, r0
200086b8:	00000200 	andeq	r0, r0, r0, lsl #4
	...
200086fc:	00800000 	addeq	r0, r0, r0
20008700:	00000000 	andeq	r0, r0, r0
20008704:	01c00000 	biceq	r0, r0, r0
20008708:	00000000 	andeq	r0, r0, r0
2000870c:	00800000 	addeq	r0, r0, r0
20008710:	00000010 	andeq	r0, r0, r0, lsl r0
20008714:	00000000 	andeq	r0, r0, r0
20008718:	00000038 	andeq	r0, r0, r8, lsr r0
2000871c:	00000000 	andeq	r0, r0, r0
20008720:	00000010 	andeq	r0, r0, r0, lsl r0
	...

20008780 <press_gray_bits>:
	...
200087c0:	00180000 	andseq	r0, r8, r0
200087c4:	00000000 	andeq	r0, r0, r0
200087c8:	00380000 	eorseq	r0, r8, r0
200087cc:	00000000 	andeq	r0, r0, r0
200087d0:	00580000 	subseq	r0, r8, r0
200087d4:	00000020 	andeq	r0, r0, r0, lsr #32
200087d8:	d4200000 	strtle	r0, [r0], #-0
200087dc:	0000039a 	muleq	r0, sl, r3
200087e0:	0a380000 	beq	20e087e8 <firstTime.4108+0xdf3290>
200087e4:	00000102 	andeq	r0, r0, r2, lsl #2
200087e8:	c2080000 	andgt	r0, r8, #0
200087ec:	00000223 	andeq	r0, r0, r3, lsr #4
200087f0:	02080000 	andeq	r0, r8, #0
200087f4:	00000311 	andeq	r0, r0, r1, lsl r3
200087f8:	c1080000 	mrsgt	r0, (UNDEF: 8)
200087fc:	000001dd 	ldrdeq	r0, [r0], -sp
	...
2000882c:	00000008 	andeq	r0, r0, r8
20008830:	00000000 	andeq	r0, r0, r0
20008834:	00000008 	andeq	r0, r0, r8
20008838:	00000000 	andeq	r0, r0, r0
2000883c:	00000008 	andeq	r0, r0, r8
20008840:	09116000 	ldmdbeq	r1, {sp, lr}
20008844:	00012328 	andeq	r2, r1, r8, lsr #6
20008848:	09596000 	ldmdbeq	r9, {sp, lr}^
2000884c:	00012810 	andeq	r2, r1, r0, lsl r8
20008850:	0b492000 	bleq	21250858 <firstTime.4108+0x123b300>
20008854:	00012f08 	andeq	r2, r1, r8, lsl #30
20008858:	08488000 	stmdaeq	r8, {pc}^
2000885c:	00010458 	andeq	r0, r1, r8, asr r4
20008860:	0b6be000 	bleq	21b00868 <firstTime.4108+0x1aeb310>
20008864:	00016768 	andeq	r6, r1, r8, ror #14
20008868:	08000000 	stmdaeq	r0, {}	; <UNPREDICTABLE>
2000886c:	00010000 	andeq	r0, r1, r0
20008870:	0c000000 	stceq	0, cr0, [r0], {-0}
20008874:	00018000 	andeq	r8, r1, r0
20008878:	06000000 	streq	r0, [r0], -r0
2000887c:	0000c000 	andeq	ip, r0, r0
	...

20008898 <castle_black_bits>:
20008898:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
2000889c:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
200088a0:	000007ff 	strdeq	r0, [r0], -pc	; <UNPREDICTABLE>
200088a4:	00000000 	andeq	r0, r0, r0
200088a8:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
200088ac:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
200088b0:	000001ff 	strdeq	r0, [r0], -pc	; <UNPREDICTABLE>
200088b4:	00000000 	andeq	r0, r0, r0
200088b8:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
200088bc:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
200088c0:	00000001 	andeq	r0, r0, r1
200088c4:	00000000 	andeq	r0, r0, r0
200088c8:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
200088cc:	7fffffff 	svcvc	0x00ffffff
	...
200088d8:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
200088dc:	3fffffff 	svccc	0x00ffffff
	...
200088e8:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
200088ec:	1fffffff 	svcne	0x00ffffff
	...
200088f8:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
200088fc:	07ffffff 			; <UNDEFINED> instruction: 0x07ffffff
	...
20008908:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
2000890c:	03ffffff 	mvnseq	pc, #1020	; 0x3fc
	...
20008918:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
2000891c:	01ffffff 	ldrsheq	pc, [pc, #255]	; 20008a23 <castle_black_bits+0x18b>	; <UNPREDICTABLE>
	...
20008928:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
2000892c:	00ffffff 	ldrshteq	pc, [pc], #255	; <UNPREDICTABLE>
	...
20008938:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
2000893c:	007fffff 	ldrshteq	pc, [pc], #-255	; <UNPREDICTABLE>
	...
20008948:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
2000894c:	003fffff 	ldrshteq	pc, [pc], -pc	; <UNPREDICTABLE>
	...
20008958:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
2000895c:	003fffff 	ldrshteq	pc, [pc], -pc	; <UNPREDICTABLE>
	...
20008968:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
2000896c:	003fffff 	ldrshteq	pc, [pc], -pc	; <UNPREDICTABLE>
	...
20008978:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
2000897c:	001fffff 			; <UNDEFINED> instruction: 0x001fffff
	...
20008988:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
2000898c:	001fffff 			; <UNDEFINED> instruction: 0x001fffff
	...
20008998:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
2000899c:	000fffff 	strdeq	pc, [pc], -pc	; <UNPREDICTABLE>
	...
200089a8:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
200089ac:	000fffff 	strdeq	pc, [pc], -pc	; <UNPREDICTABLE>
	...
200089b8:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
200089bc:	0007ffff 	strdeq	pc, [r7], -pc	; <UNPREDICTABLE>
	...
200089c8:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
200089cc:	0003ffff 	strdeq	pc, [r3], -pc	; <UNPREDICTABLE>
	...
200089d8:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
200089dc:	0003ffff 	strdeq	pc, [r3], -pc	; <UNPREDICTABLE>
	...
200089e8:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
200089ec:	0003ffff 	strdeq	pc, [r3], -pc	; <UNPREDICTABLE>
	...
200089f8:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
200089fc:	0003ffff 	strdeq	pc, [r3], -pc	; <UNPREDICTABLE>
20008a00:	04900000 	ldreq	r0, [r0], #0
20008a04:	00000000 	andeq	r0, r0, r0
20008a08:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
20008a0c:	0003ffff 	strdeq	pc, [r3], -pc	; <UNPREDICTABLE>
20008a10:	0b680000 	bleq	21a08a18 <firstTime.4108+0x19f34c0>
20008a14:	00000000 	andeq	r0, r0, r0
20008a18:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
20008a1c:	0001ffff 	strdeq	pc, [r1], -pc	; <UNPREDICTABLE>
20008a20:	08080000 	stmdaeq	r8, {}	; <UNPREDICTABLE>
20008a24:	00000000 	andeq	r0, r0, r0
20008a28:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
20008a2c:	0001ffff 	strdeq	pc, [r1], -pc	; <UNPREDICTABLE>
20008a30:	08080000 	stmdaeq	r8, {}	; <UNPREDICTABLE>
20008a34:	00000092 	muleq	r0, r2, r0
20008a38:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
20008a3c:	0001ffff 	strdeq	pc, [r1], -pc	; <UNPREDICTABLE>
20008a40:	04100000 	ldreq	r0, [r0], #-0
20008a44:	0000016d 	andeq	r0, r0, sp, ror #2
20008a48:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
20008a4c:	0001ffff 	strdeq	pc, [r1], -pc	; <UNPREDICTABLE>
20008a50:	04101240 	ldreq	r1, [r0], #-576	; 0xfffffdc0
20008a54:	00000101 	andeq	r0, r0, r1, lsl #2
20008a58:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
20008a5c:	0000ffff 	strdeq	pc, [r0], -pc	; <UNPREDICTABLE>
20008a60:	04102da0 	ldreq	r2, [r0], #-3488	; 0xfffff260
20008a64:	00000101 	andeq	r0, r0, r1, lsl #2
20008a68:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
20008a6c:	0000ffff 	strdeq	pc, [r0], -pc	; <UNPREDICTABLE>
20008a70:	04102020 	ldreq	r2, [r0], #-32	; 0xffffffe0
20008a74:	00000101 	andeq	r0, r0, r1, lsl #2
20008a78:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
20008a7c:	0000ffff 	strdeq	pc, [r0], -pc	; <UNPREDICTABLE>
20008a80:	04102020 	ldreq	r2, [r0], #-32	; 0xffffffe0
20008a84:	00000101 	andeq	r0, r0, r1, lsl #2
20008a88:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
20008a8c:	0000ffff 	strdeq	pc, [r0], -pc	; <UNPREDICTABLE>
20008a90:	04101040 	ldreq	r1, [r0], #-64	; 0xffffffc0
20008a94:	00000082 	andeq	r0, r0, r2, lsl #1
20008a98:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
20008a9c:	0000ffff 	strdeq	pc, [r0], -pc	; <UNPREDICTABLE>
20008aa0:	04101040 	ldreq	r1, [r0], #-64	; 0xffffffc0
20008aa4:	00000092 	muleq	r0, r2, r0
20008aa8:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
20008aac:	0000ffff 	strdeq	pc, [r0], -pc	; <UNPREDICTABLE>
20008ab0:	04101040 	ldreq	r1, [r0], #-64	; 0xffffffc0
20008ab4:	012400a2 	smulwbeq	r4, r2, r0
20008ab8:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
20008abc:	00007fff 	strdeq	r7, [r0], -pc	; <UNPREDICTABLE>
20008ac0:	04101040 	ldreq	r1, [r0], #-64	; 0xffffffc0
20008ac4:	02da00a2 	sbcseq	r0, sl, #162	; 0xa2
20008ac8:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
20008acc:	00004fff 	strdeq	r4, [r0], -pc	; <UNPREDICTABLE>
20008ad0:	04101040 	ldreq	r1, [r0], #-64	; 0xffffffc0
20008ad4:	020200a2 	andeq	r0, r2, #162	; 0xa2
20008ad8:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
20008adc:	000007ff 	strdeq	r0, [r0], -pc	; <UNPREDICTABLE>
20008ae0:	08081040 	stmdaeq	r8, {r6, ip}
20008ae4:	0202009a 	andeq	r0, r2, #154	; 0x9a
20008ae8:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
20008aec:	000003ff 	strdeq	r0, [r0], -pc	; <UNPREDICTABLE>
20008af0:	08082020 	stmdaeq	r8, {r5, sp}
20008af4:	01040082 	smlabbeq	r4, r2, r0, r0
20008af8:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
20008afc:	000003ff 	strdeq	r0, [r0], -pc	; <UNPREDICTABLE>
20008b00:	48082020 	stmdami	r8, {r5, sp}
20008b04:	01040102 	tsteq	r4, r2, lsl #2
20008b08:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
20008b0c:	000003ff 	strdeq	r0, [r0], -pc	; <UNPREDICTABLE>
20008b10:	b0082020 	andlt	r2, r8, r0, lsr #32
20008b14:	01040101 	tsteq	r4, r1, lsl #2
20008b18:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
20008b1c:	000001ff 	strdeq	r0, [r0], -pc	; <UNPREDICTABLE>
20008b20:	00082220 	andeq	r2, r8, r0, lsr #4
20008b24:	01040100 	mrseq	r0, (UNDEF: 20)
20008b28:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
20008b2c:	000001ff 	strdeq	r0, [r0], -pc	; <UNPREDICTABLE>
20008b30:	00882420 	addeq	r2, r8, r0, lsr #8
20008b34:	01040100 	mrseq	r0, (UNDEF: 20)
20008b38:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
20008b3c:	000000ff 	strdeq	r0, [r0], -pc	; <UNPREDICTABLE>
20008b40:	01082420 	tsteq	r8, r0, lsr #8
20008b44:	01045a00 	tsteq	r4, r0, lsl #20
20008b48:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
20008b4c:	0000007f 	andeq	r0, r0, pc, ror r0
20008b50:	01082420 	tsteq	r8, r0, lsr #8
20008b54:	0104a400 	tsteq	r4, r0, lsl #8
20008b58:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
20008b5c:	00000001 	andeq	r0, r0, r1
20008b60:	010b2320 	tsteq	fp, r0, lsr #6
20008b64:	01030001 	tsteq	r3, r1
20008b68:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
20008b6c:	00000000 	andeq	r0, r0, r0
20008b70:	00c4c020 	sbceq	ip, r4, r0, lsr #32
20008b74:	02000002 	andeq	r0, r0, #2
20008b78:	3fffffff 	svccc	0x00ffffff
20008b7c:	00000000 	andeq	r0, r0, r0
20008b80:	00000020 	andeq	r0, r0, r0, lsr #32
20008b84:	02200002 	eoreq	r0, r0, #2
20008b88:	3fffffff 	svccc	0x00ffffff
20008b8c:	00000000 	andeq	r0, r0, r0
20008b90:	00000020 	andeq	r0, r0, r0, lsr #32
20008b94:	02400002 	subeq	r0, r0, #2
20008b98:	1fffffff 	svcne	0x00ffffff
20008b9c:	00000000 	andeq	r0, r0, r0
20008ba0:	80000020 	andhi	r0, r0, r0, lsr #32
20008ba4:	02400001 	subeq	r0, r0, #1
20008ba8:	1fffffff 	svcne	0x00ffffff
20008bac:	00000000 	andeq	r0, r0, r0
20008bb0:	00000010 	andeq	r0, r0, r0, lsl r0
20008bb4:	02400000 	subeq	r0, r0, #0
20008bb8:	0fffffff 	svceq	0x00ffffff
20008bbc:	00000000 	andeq	r0, r0, r0
20008bc0:	00000010 	andeq	r0, r0, r0, lsl r0
20008bc4:	02300000 	eorseq	r0, r0, #0
20008bc8:	0fffffff 	svceq	0x00ffffff
20008bcc:	00000000 	andeq	r0, r0, r0
20008bd0:	00000010 	andeq	r0, r0, r0, lsl r0
20008bd4:	02000000 	andeq	r0, r0, #0
20008bd8:	07ffffff 			; <UNDEFINED> instruction: 0x07ffffff
20008bdc:	00000000 	andeq	r0, r0, r0
20008be0:	00000010 	andeq	r0, r0, r0, lsl r0
20008be4:	04000000 	streq	r0, [r0], #-0
20008be8:	03ffffff 	mvnseq	pc, #1020	; 0x3fc
20008bec:	00000000 	andeq	r0, r0, r0
20008bf0:	00000010 	andeq	r0, r0, r0, lsl r0
20008bf4:	04000000 	streq	r0, [r0], #-0
20008bf8:	01ffffff 	ldrsheq	pc, [pc, #255]	; 20008cff <castle_gray_bits+0x67>	; <UNPREDICTABLE>
20008bfc:	00000000 	andeq	r0, r0, r0
20008c00:	00000008 	andeq	r0, r0, r8
20008c04:	04000000 	streq	r0, [r0], #-0
20008c08:	01ffffff 	ldrsheq	pc, [pc, #255]	; 20008d0f <castle_gray_bits+0x77>	; <UNPREDICTABLE>
20008c0c:	00000000 	andeq	r0, r0, r0
20008c10:	00000008 	andeq	r0, r0, r8
20008c14:	04000000 	streq	r0, [r0], #-0
20008c18:	00ffffff 	ldrshteq	pc, [pc], #255	; <UNPREDICTABLE>
20008c1c:	00000000 	andeq	r0, r0, r0
20008c20:	00000008 	andeq	r0, r0, r8
20008c24:	060001c0 	streq	r0, [r0], -r0, asr #3
20008c28:	00ffffff 	ldrshteq	pc, [pc], #255	; <UNPREDICTABLE>
20008c2c:	00000000 	andeq	r0, r0, r0
20008c30:	00000008 	andeq	r0, r0, r8
20008c34:	04000220 	streq	r0, [r0], #-544	; 0xfffffde0
20008c38:	007fffff 	ldrshteq	pc, [pc], #-255	; <UNPREDICTABLE>
20008c3c:	00000000 	andeq	r0, r0, r0
20008c40:	00000008 	andeq	r0, r0, r8
20008c44:	04100400 	ldreq	r0, [r0], #-1024	; 0xfffffc00
20008c48:	003fffff 	ldrshteq	pc, [pc], -pc	; <UNPREDICTABLE>
20008c4c:	00000000 	andeq	r0, r0, r0
20008c50:	00000008 	andeq	r0, r0, r8
20008c54:	04a00400 	strteq	r0, [r0], #1024	; 0x400
20008c58:	001fffff 			; <UNDEFINED> instruction: 0x001fffff
20008c5c:	00000000 	andeq	r0, r0, r0
20008c60:	00000008 	andeq	r0, r0, r8
20008c64:	04000400 	streq	r0, [r0], #-1024	; 0xfffffc00
20008c68:	0007ffff 	strdeq	pc, [r7], -pc	; <UNPREDICTABLE>
20008c6c:	00000000 	andeq	r0, r0, r0
20008c70:	00000008 	andeq	r0, r0, r8
20008c74:	07400400 	strbeq	r0, [r0, -r0, lsl #8]
20008c78:	0001ffff 	strdeq	pc, [r1], -pc	; <UNPREDICTABLE>
20008c7c:	00000000 	andeq	r0, r0, r0
20008c80:	00000008 	andeq	r0, r0, r8
20008c84:	04000400 	streq	r0, [r0], #-1024	; 0xfffffc00
20008c88:	0000ffff 	strdeq	pc, [r0], -pc	; <UNPREDICTABLE>
20008c8c:	00000000 	andeq	r0, r0, r0
20008c90:	00000008 	andeq	r0, r0, r8
20008c94:	04000400 	streq	r0, [r0], #-1024	; 0xfffffc00

20008c98 <castle_gray_bits>:
	...
20008ca0:	fffff800 	vcmla.f32	d31, d15, d0[0], #270
20008ca4:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
	...
20008cb0:	fffffe00 			; <UNDEFINED> instruction: 0xfffffe00
20008cb4:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
	...
20008cc0:	fffffffe 			; <UNDEFINED> instruction: 0xfffffffe
20008cc4:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
20008cc8:	00000000 	andeq	r0, r0, r0
20008ccc:	80000000 	andhi	r0, r0, r0
20008cd0:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
20008cd4:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
20008cd8:	00000000 	andeq	r0, r0, r0
20008cdc:	c0000000 	andgt	r0, r0, r0
20008ce0:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
20008ce4:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
20008ce8:	00000000 	andeq	r0, r0, r0
20008cec:	e0000000 	and	r0, r0, r0
20008cf0:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
20008cf4:	ffffffbf 			; <UNDEFINED> instruction: 0xffffffbf
20008cf8:	00000000 	andeq	r0, r0, r0
20008cfc:	f8000000 			; <UNDEFINED> instruction: 0xf8000000
20008d00:	f3ffcfff 			; <UNDEFINED> instruction: 0xf3ffcfff
20008d04:	ffffffbf 			; <UNDEFINED> instruction: 0xffffffbf
20008d08:	00000000 	andeq	r0, r0, r0
20008d0c:	fc000000 	stc2	0, cr0, [r0], {-0}
20008d10:	f1ff8fff 			; <UNDEFINED> instruction: 0xf1ff8fff
20008d14:	fff9ff3f 			; <UNDEFINED> instruction: 0xfff9ff3f
20008d18:	00000000 	andeq	r0, r0, r0
20008d1c:	fe000000 	cdp2	0, 0, cr0, cr0, cr0, {0}
20008d20:	f0ff8fef 			; <UNDEFINED> instruction: 0xf0ff8fef
20008d24:	fff9fe1f 			; <UNDEFINED> instruction: 0xfff9fe1f
20008d28:	00000000 	andeq	r0, r0, r0
20008d2c:	ff000000 			; <UNDEFINED> instruction: 0xff000000
20008d30:	e0ff87ef 	rscs	r8, pc, pc, ror #15
20008d34:	fff9fe1f 			; <UNDEFINED> instruction: 0xfff9fe1f
20008d38:	00000000 	andeq	r0, r0, r0
20008d3c:	ff800000 			; <UNDEFINED> instruction: 0xff800000
20008d40:	c07e07e7 	rsbsgt	r0, lr, r7, ror #15
20008d44:	ffe0fc1f 			; <UNDEFINED> instruction: 0xffe0fc1f
20008d48:	00000000 	andeq	r0, r0, r0
20008d4c:	ffc00000 			; <UNDEFINED> instruction: 0xffc00000
20008d50:	001c07e7 	andseq	r0, ip, r7, ror #15
20008d54:	ffe0380e 	vcmla.f32	d19, d0, d14[0], #170
20008d58:	00000000 	andeq	r0, r0, r0
20008d5c:	ffc00000 			; <UNDEFINED> instruction: 0xffc00000
20008d60:	000003e3 	andeq	r0, r0, r3, ror #7
20008d64:	f7c00000 			; <UNDEFINED> instruction: 0xf7c00000
20008d68:	00000000 	andeq	r0, r0, r0
20008d6c:	ffc00000 			; <UNDEFINED> instruction: 0xffc00000
20008d70:	000001c3 	andeq	r0, r0, r3, asr #3
20008d74:	e7800000 	str	r0, [r0, r0]
20008d78:	00000000 	andeq	r0, r0, r0
20008d7c:	ffe00000 			; <UNDEFINED> instruction: 0xffe00000
20008d80:	00000003 	andeq	r0, r0, r3
20008d84:	c3800000 	orrgt	r0, r0, #0
20008d88:	00000000 	andeq	r0, r0, r0
20008d8c:	ffe00000 			; <UNDEFINED> instruction: 0xffe00000
20008d90:	00000001 	andeq	r0, r0, r1
20008d94:	c0000000 	andgt	r0, r0, r0
20008d98:	00000000 	andeq	r0, r0, r0
20008d9c:	9ff00000 	svcls	0x00f00000	; IMB
20008da0:	00000001 	andeq	r0, r0, r1
20008da4:	80000000 	andhi	r0, r0, r0
20008da8:	00000000 	andeq	r0, r0, r0
20008dac:	8ff00000 	svchi	0x00f00000	; IMB
20008db0:	00000000 	andeq	r0, r0, r0
20008db4:	80000000 	andhi	r0, r0, r0
20008db8:	00000000 	andeq	r0, r0, r0
20008dbc:	8ff80000 	svchi	0x00f80000
	...
20008dcc:	0ffc0000 	svceq	0x00fc0000
	...
20008ddc:	0ffc0000 	svceq	0x00fc0000
	...
20008dec:	0ffc0000 	svceq	0x00fc0000
	...
20008dfc:	0ffc0000 	svceq	0x00fc0000
	...
20008e0c:	0ffc0000 	svceq	0x00fc0000
	...
20008e1c:	07fe0000 	ldrbeq	r0, [lr, r0]!
	...
20008e2c:	07fe0000 	ldrbeq	r0, [lr, r0]!
	...
20008e3c:	07fe0000 	ldrbeq	r0, [lr, r0]!
20008e40:	03800000 	orreq	r0, r0, #0
	...
20008e4c:	03fe0000 	mvnseq	r0, #0
20008e50:	02000000 	andeq	r0, r0, #0
	...
20008e5c:	03ff0000 	mvnseq	r0, #0
20008e60:	02000000 	andeq	r0, r0, #0
	...
20008e6c:	03ff0000 	mvnseq	r0, #0
20008e70:	02000000 	andeq	r0, r0, #0
	...
20008e7c:	03ff0000 	mvnseq	r0, #0
20008e80:	02000000 	andeq	r0, r0, #0
	...
20008e8c:	03ff0000 	mvnseq	r0, #0
20008e90:	02800c00 	addeq	r0, r0, #0, 24
20008e94:	00000060 	andeq	r0, r0, r0, rrx
20008e98:	00000000 	andeq	r0, r0, r0
20008e9c:	03ff0000 	mvnseq	r0, #0
20008ea0:	03000800 	movweq	r0, #2048	; 0x800
20008ea4:	00000040 	andeq	r0, r0, r0, asr #32
20008ea8:	00000000 	andeq	r0, r0, r0
20008eac:	03ff0000 	mvnseq	r0, #0
20008eb0:	03000800 	movweq	r0, #2048	; 0x800
20008eb4:	00000040 	andeq	r0, r0, r0, asr #32
20008eb8:	00000000 	andeq	r0, r0, r0
20008ebc:	03ff8000 	mvnseq	r8, #0
20008ec0:	03000a00 	movweq	r0, #2560	; 0xa00
20008ec4:	00000040 	andeq	r0, r0, r0, asr #32
20008ec8:	00000000 	andeq	r0, r0, r0
20008ecc:	01ffb000 	mvnseq	fp, r0
20008ed0:	03000c00 	movweq	r0, #3072	; 0xc00
20008ed4:	00000040 	andeq	r0, r0, r0, asr #32
20008ed8:	00000000 	andeq	r0, r0, r0
20008edc:	01fff800 	mvnseq	pc, r0, lsl #16
20008ee0:	07800c00 	streq	r0, [r0, r0, lsl #24]
20008ee4:	00000060 	andeq	r0, r0, r0, rrx
20008ee8:	00000000 	andeq	r0, r0, r0
20008eec:	01fffc00 	mvnseq	pc, r0, lsl #24
20008ef0:	04001800 	streq	r1, [r0], #-2048	; 0xfffff800
20008ef4:	00c00058 	sbceq	r0, r0, r8, asr r0
20008ef8:	00000000 	andeq	r0, r0, r0
20008efc:	00fffc00 	rscseq	pc, pc, r0, lsl #24
20008f00:	06001400 	streq	r1, [r0], -r0, lsl #8
20008f04:	00c000c0 	sbceq	r0, r0, r0, asr #1
20008f08:	00000000 	andeq	r0, r0, r0
20008f0c:	007ffc00 	rsbseq	pc, pc, r0, lsl #24
20008f10:	45001000 	strmi	r1, [r0, #-0]
20008f14:	008000a0 	addeq	r0, r0, r0, lsr #1
20008f18:	00000000 	andeq	r0, r0, r0
20008f1c:	007ffe00 	rsbseq	pc, pc, r0, lsl #28
20008f20:	80001000 	andhi	r1, r0, r0
20008f24:	008000c1 	addeq	r0, r0, r1, asr #1
20008f28:	00000000 	andeq	r0, r0, r0
20008f2c:	003ffe00 	eorseq	pc, pc, r0, lsl #28
20008f30:	00001000 	andeq	r1, r0, r0
20008f34:	00a000f0 	strdeq	r0, [r0], r0	; <UNPREDICTABLE>
20008f38:	00000000 	andeq	r0, r0, r0
20008f3c:	003fff00 	eorseq	pc, pc, r0, lsl #30
20008f40:	00001000 	andeq	r1, r0, r0
20008f44:	00c000e0 	sbceq	r0, r0, r0, ror #1
20008f48:	00000000 	andeq	r0, r0, r0
20008f4c:	001fff80 	andseq	pc, pc, r0, lsl #31
20008f50:	02001800 	andeq	r1, r0, #0, 16
20008f54:	00c000c0 	sbceq	r0, r0, r0, asr #1
20008f58:	00000000 	andeq	r0, r0, r0
20008f5c:	0019fffe 			; <UNDEFINED> instruction: 0x0019fffe
20008f60:	02001400 	andeq	r1, r0, #0, 8
20008f64:	00803000 	addeq	r3, r0, r0
20008f68:	00000000 	andeq	r0, r0, r0
20008f6c:	0018ffff 			; <UNDEFINED> instruction: 0x0018ffff
20008f70:	05033f00 	streq	r3, [r3, #-3840]	; 0xfffff100
20008f74:	01000000 	mrseq	r0, (UNDEF: 0)
20008f78:	c0000000 	andgt	r0, r0, r0
20008f7c:	0008ffff 	strdeq	pc, [r8], -pc	; <UNPREDICTABLE>
20008f80:	00c0e400 	sbceq	lr, r0, r0, lsl #8
20008f84:	01000004 	tsteq	r0, r4
20008f88:	c0000000 	andgt	r0, r0, r0
20008f8c:	00007fff 	strdeq	r7, [r0], -pc	; <UNPREDICTABLE>
20008f90:	00002000 	andeq	r2, r0, r0
20008f94:	01000008 	tsteq	r0, r8
20008f98:	e0000000 	and	r0, r0, r0
20008f9c:	00007fff 	strdeq	r7, [r0], -pc	; <UNPREDICTABLE>
20008fa0:	00001000 	andeq	r1, r0, r0
20008fa4:	01000006 	tsteq	r0, r6
20008fa8:	e0000000 	and	r0, r0, r0
20008fac:	00003fff 	strdeq	r3, [r0], -pc	; <UNPREDICTABLE>
20008fb0:	80000000 	andhi	r0, r0, r0
20008fb4:	01800001 	orreq	r0, r0, r1
20008fb8:	f0000000 			; <UNDEFINED> instruction: 0xf0000000
20008fbc:	00003fff 	strdeq	r3, [r0], -pc	; <UNPREDICTABLE>
20008fc0:	00400000 	subeq	r0, r0, r0
20008fc4:	01400000 	mrseq	r0, (UNDEF: 64)
20008fc8:	f0000000 			; <UNDEFINED> instruction: 0xf0000000
20008fcc:	00001fff 	strdeq	r1, [r0], -pc	; <UNPREDICTABLE>
20008fd0:	03800000 	orreq	r0, r0, #0
20008fd4:	01300000 	teqeq	r0, r0
20008fd8:	f8000000 			; <UNDEFINED> instruction: 0xf8000000
20008fdc:	00001bff 	strdeq	r1, [r0], -pc	; <UNPREDICTABLE>
20008fe0:	10e00000 	rscne	r0, r0, r0
20008fe4:	03000000 	movweq	r0, #0
20008fe8:	fc000000 	stc2	0, cr0, [r0], {-0}
20008fec:	000001ff 	strdeq	r0, [r0], -pc	; <UNPREDICTABLE>
20008ff0:	0f800000 	svceq	0x00800000
20008ff4:	03900000 	orrseq	r0, r0, #0
20008ff8:	fe000000 	cdp2	0, 0, cr0, cr0, cr0, {0}
20008ffc:	000001ff 	strdeq	r0, [r0], -pc	; <UNPREDICTABLE>
20009000:	00000000 	andeq	r0, r0, r0
20009004:	03e00000 	mvneq	r0, #0
20009008:	fe000000 	cdp2	0, 0, cr0, cr0, cr0, {0}
2000900c:	000000ff 	strdeq	r0, [r0], -pc	; <UNPREDICTABLE>
20009010:	00000000 	andeq	r0, r0, r0
20009014:	03f40000 	mvnseq	r0, #0
20009018:	ff000000 			; <UNDEFINED> instruction: 0xff000000
2000901c:	000000ff 	strdeq	r0, [r0], -pc	; <UNPREDICTABLE>
20009020:	00002000 	andeq	r2, r0, r0
20009024:	01f80000 	mvnseq	r0, r0
20009028:	ff000000 			; <UNDEFINED> instruction: 0xff000000
2000902c:	0000007f 	andeq	r0, r0, pc, ror r0
20009030:	0010c000 	andseq	ip, r0, r0
20009034:	03f80000 	mvnseq	r0, #0
20009038:	ff800000 			; <UNDEFINED> instruction: 0xff800000
2000903c:	0000003f 	andeq	r0, r0, pc, lsr r0
20009040:	000f0000 	andeq	r0, pc, r0
20009044:	03e000e0 	mvneq	r0, #224	; 0xe0
20009048:	ffc00000 			; <UNDEFINED> instruction: 0xffc00000
2000904c:	0000001f 	andeq	r0, r0, pc, lsl r0
20009050:	00026000 	andeq	r6, r2, r0
20009054:	035001f0 	cmpeq	r0, #240, 2	; 0x3c
20009058:	ffe00000 			; <UNDEFINED> instruction: 0xffe00000
2000905c:	0000001f 	andeq	r0, r0, pc, lsl r0
20009060:	00118000 	andseq	r8, r1, r0
20009064:	03ec01f0 	mvneq	r0, #240, 2	; 0x3c
20009068:	fff80000 			; <UNDEFINED> instruction: 0xfff80000
2000906c:	0000000f 	andeq	r0, r0, pc
20009070:	200e0000 	andcs	r0, lr, r0
20009074:	00a022f0 	strdeq	r2, [r0], r0	; <UNPREDICTABLE>
20009078:	fffe0000 			; <UNDEFINED> instruction: 0xfffe0000
2000907c:	00000007 	andeq	r0, r0, r7
20009080:	18000000 	stmdane	r0, {}	; <UNPREDICTABLE>
20009084:	03c0c170 	biceq	ip, r0, #112, 2
20009088:	ffff0000 			; <UNDEFINED> instruction: 0xffff0000
2000908c:	00000003 	andeq	r0, r0, r3
20009090:	e4000000 	str	r0, [r0], #-0
20009094:	03c270f3 	biceq	r7, r2, #243	; 0xf3

20009098 <castle_light_bits>:
	...
200090f4:	00000040 	andeq	r0, r0, r0, asr #32
	...
20009100:	0c003000 	stceq	0, cr3, [r0], {-0}
20009104:	00000040 	andeq	r0, r0, r0, asr #32
	...
20009110:	0e007000 	cdpeq	0, 0, cr7, cr0, cr0, {0}
20009114:	000600c0 	andeq	r0, r6, r0, asr #1
	...
20009120:	0f007010 	svceq	0x00007010
20009124:	000601e0 	andeq	r0, r6, r0, ror #3
	...
20009130:	1f007810 	svcne	0x00007810
20009134:	000601e0 	andeq	r0, r6, r0, ror #3
	...
20009140:	3f81f818 	svccc	0x0081f818
20009144:	001f03e0 	andseq	r0, pc, r0, ror #7
	...
20009150:	ffe3f818 			; <UNDEFINED> instruction: 0xffe3f818
20009154:	001fc7f1 			; <UNDEFINED> instruction: 0x001fc7f1
	...
20009160:	fffffc1c 			; <UNDEFINED> instruction: 0xfffffc1c
20009164:	083fffff 	ldmdaeq	pc!, {r0, r1, r2, r3, r4, r5, r6, r7, r8, r9, sl, fp, ip, sp, lr, pc}	; <UNPREDICTABLE>
	...
20009170:	fffffe3c 			; <UNDEFINED> instruction: 0xfffffe3c
20009174:	187fffff 	ldmdane	pc!, {r0, r1, r2, r3, r4, r5, r6, r7, r8, r9, sl, fp, ip, sp, lr, pc}^	; <UNPREDICTABLE>
	...
20009180:	fffffffc 			; <UNDEFINED> instruction: 0xfffffffc
20009184:	3c7fffff 	ldclcc	15, cr15, [pc], #-1020	; 20008d90 <castle_gray_bits+0xf8>
	...
20009190:	fffffffe 			; <UNDEFINED> instruction: 0xfffffffe
20009194:	3fffffff 	svccc	0x00ffffff
20009198:	00000000 	andeq	r0, r0, r0
2000919c:	60000000 	andvs	r0, r0, r0
200091a0:	fffffffe 			; <UNDEFINED> instruction: 0xfffffffe
200091a4:	7fffffff 	svcvc	0x00ffffff
200091a8:	00000000 	andeq	r0, r0, r0
200091ac:	70000000 	andvc	r0, r0, r0
200091b0:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
200091b4:	7fffffff 	svcvc	0x00ffffff
200091b8:	00000000 	andeq	r0, r0, r0
200091bc:	70000000 	andvc	r0, r0, r0
200091c0:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
200091c4:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
200091c8:	00000000 	andeq	r0, r0, r0
200091cc:	f0000000 			; <UNDEFINED> instruction: 0xf0000000
200091d0:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
200091d4:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
200091d8:	00000000 	andeq	r0, r0, r0
200091dc:	f0000000 			; <UNDEFINED> instruction: 0xf0000000
200091e0:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
200091e4:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
200091e8:	00000000 	andeq	r0, r0, r0
200091ec:	f0000000 			; <UNDEFINED> instruction: 0xf0000000
200091f0:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
200091f4:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
200091f8:	00000000 	andeq	r0, r0, r0
200091fc:	f0000000 			; <UNDEFINED> instruction: 0xf0000000
20009200:	fb6fffff 	blx	21c09206 <firstTime.4108+0x1bf3cae>
20009204:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
20009208:	00000000 	andeq	r0, r0, r0
2000920c:	f0000000 			; <UNDEFINED> instruction: 0xf0000000
20009210:	f007ffff 			; <UNDEFINED> instruction: 0xf007ffff
20009214:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
20009218:	00000000 	andeq	r0, r0, r0
2000921c:	f8000000 			; <UNDEFINED> instruction: 0xf8000000
20009220:	f407ffff 			; <UNDEFINED> instruction: 0xf407ffff
20009224:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
20009228:	00000000 	andeq	r0, r0, r0
2000922c:	f8000000 			; <UNDEFINED> instruction: 0xf8000000
20009230:	f007ffff 			; <UNDEFINED> instruction: 0xf007ffff
20009234:	ffffff6d 			; <UNDEFINED> instruction: 0xffffff6d
20009238:	00000000 	andeq	r0, r0, r0
2000923c:	f8000000 			; <UNDEFINED> instruction: 0xf8000000
20009240:	f80fffff 			; <UNDEFINED> instruction: 0xf80fffff
20009244:	fffffe00 			; <UNDEFINED> instruction: 0xfffffe00
20009248:	00000000 	andeq	r0, r0, r0
2000924c:	fc000000 	stc2	0, cr0, [r0], {-0}
20009250:	f80fedbf 			; <UNDEFINED> instruction: 0xf80fedbf
20009254:	fffffe00 			; <UNDEFINED> instruction: 0xfffffe00
20009258:	00000000 	andeq	r0, r0, r0
2000925c:	fc000000 	stc2	0, cr0, [r0], {-0}
20009260:	f80fc01f 			; <UNDEFINED> instruction: 0xf80fc01f
20009264:	fffffe80 			; <UNDEFINED> instruction: 0xfffffe80
20009268:	00000000 	andeq	r0, r0, r0
2000926c:	fc000000 	stc2	0, cr0, [r0], {-0}
20009270:	f90fc81f 			; <UNDEFINED> instruction: 0xf90fc81f
20009274:	fffffe80 			; <UNDEFINED> instruction: 0xfffffe80
20009278:	00000000 	andeq	r0, r0, r0
2000927c:	fc000000 	stc2	0, cr0, [r0], {-0}
20009280:	f90fd41f 			; <UNDEFINED> instruction: 0xf90fd41f
20009284:	fffffe00 			; <UNDEFINED> instruction: 0xfffffe00
20009288:	00000000 	andeq	r0, r0, r0
2000928c:	fc000000 	stc2	0, cr0, [r0], {-0}
20009290:	f90fe03f 			; <UNDEFINED> instruction: 0xf90fe03f
20009294:	ffffff01 			; <UNDEFINED> instruction: 0xffffff01
20009298:	00000000 	andeq	r0, r0, r0
2000929c:	fc000000 	stc2	0, cr0, [r0], {-0}
200092a0:	f88fe03f 			; <UNDEFINED> instruction: 0xf88fe03f
200092a4:	ffffff01 			; <UNDEFINED> instruction: 0xffffff01
200092a8:	00000000 	andeq	r0, r0, r0
200092ac:	fc000000 	stc2	0, cr0, [r0], {-0}
200092b0:	f88fe03f 			; <UNDEFINED> instruction: 0xf88fe03f
200092b4:	fedbff19 	mrc2	15, 6, pc, cr11, cr9, {0}
200092b8:	00000000 	andeq	r0, r0, r0
200092bc:	fc000000 	stc2	0, cr0, [r0], {-0}
200092c0:	f80fe03f 			; <UNDEFINED> instruction: 0xf80fe03f
200092c4:	fd01ff11 	stc2	15, cr15, [r1, #-68]	; 0xffffffbc
200092c8:	00000000 	andeq	r0, r0, r0
200092cc:	fe000000 	cdp2	0, 0, cr0, cr0, cr0, {0}
200092d0:	f80fe03f 			; <UNDEFINED> instruction: 0xf80fe03f
200092d4:	fd01ff19 	stc2	15, cr15, [r1, #-100]	; 0xffffff9c
200092d8:	00000000 	andeq	r0, r0, r0
200092dc:	fe000000 	cdp2	0, 0, cr0, cr0, cr0, {0}
200092e0:	f007e03f 			; <UNDEFINED> instruction: 0xf007e03f
200092e4:	fc01ff01 	stc2	15, cr15, [r1], {1}
200092e8:	00000000 	andeq	r0, r0, r0
200092ec:	fe000000 	cdp2	0, 0, cr0, cr0, cr0, {0}
200092f0:	f007c01f 			; <UNDEFINED> instruction: 0xf007c01f
200092f4:	fe03ff01 	cdp2	15, 0, cr15, cr3, cr1, {0}
200092f8:	00000000 	andeq	r0, r0, r0
200092fc:	ff000000 			; <UNDEFINED> instruction: 0xff000000
20009300:	b007c01f 	andlt	ip, r7, pc, lsl r0
20009304:	fe03fe01 	cdp2	14, 0, cr15, cr3, cr1, {0}
20009308:	00000000 	andeq	r0, r0, r0
2000930c:	ff800000 			; <UNDEFINED> instruction: 0xff800000
20009310:	0007c01f 	andeq	ip, r7, pc, lsl r0
20009314:	fe03fe00 	cdp2	14, 0, cr15, cr3, cr0, {0}
20009318:	00000000 	andeq	r0, r0, r0
2000931c:	ff800000 			; <UNDEFINED> instruction: 0xff800000
20009320:	0007c01f 	andeq	ip, r7, pc, lsl r0
20009324:	fe03fe10 	mcr2	14, 0, pc, cr3, cr0, {0}	; <UNPREDICTABLE>
20009328:	00000000 	andeq	r0, r0, r0
2000932c:	ffc00000 			; <UNDEFINED> instruction: 0xffc00000
20009330:	0007c21f 	andeq	ip, r7, pc, lsl r2
20009334:	fe03fe00 	cdp2	14, 0, cr15, cr3, cr0, {0}
20009338:	00000000 	andeq	r0, r0, r0
2000933c:	ffc00000 			; <UNDEFINED> instruction: 0xffc00000
20009340:	0087c31f 	addeq	ip, r7, pc, lsl r3
20009344:	fe03a400 	cdp2	4, 0, cr10, cr3, cr0, {0}
20009348:	00000000 	andeq	r0, r0, r0
2000934c:	ffe00000 			; <UNDEFINED> instruction: 0xffe00000
20009350:	00c7c31f 	sbceq	ip, r7, pc, lsl r3
20009354:	fe030000 	cdp2	0, 0, cr0, cr3, cr0, {0}
20009358:	00000000 	andeq	r0, r0, r0
2000935c:	ffe60000 			; <UNDEFINED> instruction: 0xffe60000
20009360:	00c4c01f 	sbceq	ip, r4, pc, lsl r0
20009364:	fe000000 	cdp2	0, 0, cr0, cr0, cr0, {0}
20009368:	00000000 	andeq	r0, r0, r0
2000936c:	ffe70000 			; <UNDEFINED> instruction: 0xffe70000
20009370:	8000001f 	andhi	r0, r0, pc, lsl r0
20009374:	fc000001 	stc2	0, cr0, [r0], {1}
20009378:	00000000 	andeq	r0, r0, r0
2000937c:	fff70000 			; <UNDEFINED> instruction: 0xfff70000
20009380:	8000001f 	andhi	r0, r0, pc, lsl r0
20009384:	fc000009 	stc2	0, cr0, [r0], {9}
20009388:	00000000 	andeq	r0, r0, r0
2000938c:	ffff8000 			; <UNDEFINED> instruction: 0xffff8000
20009390:	8000001f 	andhi	r0, r0, pc, lsl r0
20009394:	fc200001 	stc2	0, cr0, [r0], #-4
20009398:	00000000 	andeq	r0, r0, r0
2000939c:	ffff8000 			; <UNDEFINED> instruction: 0xffff8000
200093a0:	0000001f 	andeq	r0, r0, pc, lsl r0
200093a4:	fc300000 	ldc2	0, cr0, [r0], #-0
200093a8:	00000000 	andeq	r0, r0, r0
200093ac:	ffffc000 			; <UNDEFINED> instruction: 0xffffc000
200093b0:	0000000f 	andeq	r0, r0, pc
200093b4:	fc300000 	ldc2	0, cr0, [r0], #-0
200093b8:	00000000 	andeq	r0, r0, r0
200093bc:	ffffc000 			; <UNDEFINED> instruction: 0xffffc000
200093c0:	0000000f 	andeq	r0, r0, pc
200093c4:	fc000000 	stc2	0, cr0, [r0], {-0}
200093c8:	00000000 	andeq	r0, r0, r0
200093cc:	ffffe000 			; <UNDEFINED> instruction: 0xffffe000
200093d0:	1000000f 	andne	r0, r0, pc
200093d4:	fc000000 	stc2	0, cr0, [r0], {-0}
200093d8:	00000000 	andeq	r0, r0, r0
200093dc:	ffffe400 			; <UNDEFINED> instruction: 0xffffe400
200093e0:	0800000f 	stmdaeq	r0, {r0, r1, r2, r3}
200093e4:	f8080000 			; <UNDEFINED> instruction: 0xf8080000
200093e8:	00000000 	andeq	r0, r0, r0
200093ec:	fffffe00 			; <UNDEFINED> instruction: 0xfffffe00
200093f0:	0000000f 	andeq	r0, r0, pc
200093f4:	f8000000 			; <UNDEFINED> instruction: 0xf8000000
200093f8:	00000000 	andeq	r0, r0, r0
200093fc:	fffffe00 			; <UNDEFINED> instruction: 0xfffffe00
20009400:	00000007 	andeq	r0, r0, r7
20009404:	f8020000 			; <UNDEFINED> instruction: 0xf8020000
20009408:	00000000 	andeq	r0, r0, r0
2000940c:	ffffff00 			; <UNDEFINED> instruction: 0xffffff00
20009410:	00000007 	andeq	r0, r0, r7
20009414:	f8020000 			; <UNDEFINED> instruction: 0xf8020000
20009418:	00000000 	andeq	r0, r0, r0
2000941c:	ffffff00 			; <UNDEFINED> instruction: 0xffffff00
20009420:	00100007 	andseq	r0, r0, r7
20009424:	f8040000 			; <UNDEFINED> instruction: 0xf8040000
20009428:	00000000 	andeq	r0, r0, r0
2000942c:	ffffff80 			; <UNDEFINED> instruction: 0xffffff80
20009430:	00080007 	andeq	r0, r8, r7
20009434:	f80001c0 			; <UNDEFINED> instruction: 0xf80001c0
20009438:	00000000 	andeq	r0, r0, r0
2000943c:	ffffffc0 			; <UNDEFINED> instruction: 0xffffffc0
20009440:	00000007 	andeq	r0, r0, r7
20009444:	f8080300 			; <UNDEFINED> instruction: 0xf8080300
20009448:	00000000 	andeq	r0, r0, r0
2000944c:	ffffffe0 			; <UNDEFINED> instruction: 0xffffffe0
20009450:	00200007 	eoreq	r0, r0, r7
20009454:	f8080200 			; <UNDEFINED> instruction: 0xf8080200
20009458:	00000000 	andeq	r0, r0, r0
2000945c:	ffffffe0 			; <UNDEFINED> instruction: 0xffffffe0
20009460:	00000007 	andeq	r0, r0, r7
20009464:	f8000200 			; <UNDEFINED> instruction: 0xf8000200
20009468:	00000000 	andeq	r0, r0, r0
2000946c:	fffffff0 			; <UNDEFINED> instruction: 0xfffffff0
20009470:	00000007 	andeq	r0, r0, r7
20009474:	f8000100 			; <UNDEFINED> instruction: 0xf8000100
20009478:	00000000 	andeq	r0, r0, r0
2000947c:	fffffff8 			; <UNDEFINED> instruction: 0xfffffff8
20009480:	01000007 	tsteq	r0, r7
20009484:	f8100280 			; <UNDEFINED> instruction: 0xf8100280
20009488:	00000000 	andeq	r0, r0, r0
2000948c:	fffffffc 			; <UNDEFINED> instruction: 0xfffffffc
20009490:	02000007 	andeq	r0, r0, #7
20009494:	f8000300 			; <UNDEFINED> instruction: 0xf8000300

20009498 <title_light_bits>:
	...
200094b4:	00000400 	andeq	r0, r0, r0, lsl #8
200094b8:	30000000 	andcc	r0, r0, r0
200094bc:	f80f9e06 			; <UNDEFINED> instruction: 0xf80f9e06
200094c0:	06300000 	ldrteq	r0, [r0], -r0
200094c4:	00cb8cba 	strheq	r8, [fp], #202	; 0xca
200094c8:	ba033000 	blt	200d54d0 <firstTime.4108+0xbff78>
200094cc:	0000eb4f 	andeq	lr, r0, pc, asr #22
200094d0:	439ef3f0 	orrsmi	pc, lr, #240, 6	; 0xc0000003
200094d4:	f000003a 			; <UNDEFINED> instruction: 0xf000003a
200094d8:	5a478e9b 	bpl	211ecf4c <firstTime.4108+0x11d79f4>
200094dc:	9b300000 	blls	20c094e4 <firstTime.4108+0xbf3f8c>
200094e0:	019bcd36 	orrseq	ip, fp, r6, lsr sp
200094e4:	66db3000 	ldrbvs	r3, [fp], r0
200094e8:	000319d9 	ldrdeq	r1, [r3], -r9
200094ec:	19667330 	stmdbne	r6!, {r4, r5, r8, r9, ip, sp, lr}^
200094f0:	30000310 	andcc	r0, r0, r0, lsl r3
200094f4:	00000001 	andeq	r0, r0, r1
200094f8:	80000000 	andhi	r0, r0, r0
200094fc:	001d3e7b 	andseq	r3, sp, fp, ror lr
20009500:	0ac00000 	beq	1f009508 <startup-0xff6af8>
20009504:	00000528 	andeq	r0, r0, r8, lsr #10
20009508:	ec3a4000 	ldc	0, cr4, [sl], #-0
2000950c:	0000000d 	andeq	r0, r0, sp
20009510:	05240bc0 	streq	r0, [r4, #-3008]!	; 0xfffff440
20009514:	00f00000 	rscseq	r0, r0, r0
20009518:	001c0000 	andseq	r0, ip, r0
2000951c:	03ebb000 	mvneq	fp, #0
20009520:	00000000 	andeq	r0, r0, r0
20009524:	0c032330 	stceq	3, cr2, [r3], {48}	; 0x30
20009528:	300123e4 	andcc	r2, r1, r4, ror #7
2000952c:	940c1b2a 	strls	r1, [ip], #-2858	; 0xfffff4d6
20009530:	ea300120 	b	20c099b8 <firstTime.4108+0xbf4460>
20009534:	ec860c3d 	stc	12, cr0, [r6], {61}	; 0x3d
20009538:	06ea3001 	strbteq	r3, [sl], r1
2000953c:	01e69648 	mvneq	r9, r8, asr #12
20009540:	4b9e6b30 	blmi	1e7a4208 <startup-0x185bdf8>
20009544:	30012696 	mulcc	r1, r6, r6
20009548:	92bbb06b 	adcsls	fp, fp, #107	; 0x6b
2000954c:	69f00126 	ldmibvs	r0!, {r1, r2, r5, r8}^
20009550:	2691b832 			; <UNDEFINED> instruction: 0x2691b832
20009554:	1e687001 	cdpne	0, 6, cr7, cr8, cr1, {0}
20009558:	010e9110 	tsteq	lr, r0, lsl r1
	...

2000956c <title_gray_bits>:
	...
20009574:	40000000 	andmi	r0, r0, r0
20009578:	0f840000 	svceq	0x00840000
2000957c:	00b0c3fe 	ldrshteq	ip, [r0], lr
20009580:	fffff800 	vcmla.f32	d31, d15, d0[0], #270
20009584:	001f8f1f 	andseq	r8, pc, pc, lsl pc	; <UNPREDICTABLE>
20009588:	fffffbf8 			; <UNDEFINED> instruction: 0xfffffbf8
2000958c:	c8001fff 	stmdagt	r0, {r0, r1, r2, r3, r4, r5, r6, r7, r8, r9, sl, fp, ip}
20009590:	07f061f9 			; <UNDEFINED> instruction: 0x07f061f9
20009594:	f1cc001f 			; <UNDEFINED> instruction: 0xf1cc001f
20009598:	be347305 	cdplt	3, 3, cr7, cr4, cr5, {0}
2000959c:	05f0ce00 	ldrbeq	ip, [r0, #3584]!	; 0xe00
200095a0:	007e1430 	rsbseq	r1, lr, r0, lsr r4
200095a4:	2041080f 	subcs	r0, r1, pc, lsl #16
200095a8:	0e003e01 	cdpeq	14, 0, cr3, cr0, cr1, {0}
200095ac:	01384060 	teqeq	r8, r0, rrx
200095b0:	600c001e 	andvs	r0, ip, lr, lsl r0
200095b4:	1c4030c0 	mcrrne	0, 12, r3, r0, cr0
200095b8:	10208c00 	eorne	r8, r0, r0, lsl #24
200095bc:	0038c024 	eorseq	ip, r8, r4, lsr #32
200095c0:	0411088c 	ldreq	r0, [r1], #-2188	; 0xfffff774
200095c4:	c800f8ce 	stmdagt	r0, {r1, r2, r3, r6, r7, fp, ip, sp, lr, pc}
200095c8:	ffe6990c 			; <UNDEFINED> instruction: 0xffe6990c
200095cc:	7cfa0178 	ldfvce	f0, [sl], #480	; 0x1e0
200095d0:	3fe0c184 	svccc	0x00e0c184
200095d4:	013ff400 	teqeq	pc, r0, lsl #8	; <UNPREDICTABLE>
200095d8:	001fc0c7 	andseq	ip, pc, r7, asr #1
200095dc:	03c03ff0 	biceq	r3, r0, #240, 30	; 0x3c0
200095e0:	fc0007e0 	stc2	7, cr0, [r0], {224}	; 0xe0
200095e4:	e003803f 	and	r8, r3, pc, lsr r0
200095e8:	7f0c009f 	svcvc	0x000c009f
200095ec:	ffc1fbe4 			; <UNDEFINED> instruction: 0xffc1fbe4
200095f0:	fc140c03 	ldc2	12, cr0, [r4], {3}
200095f4:	03ffc7ff 	mvnseq	ip, #66846720	; 0x3fc0000
200095f8:	f3fc1c0c 	vdup.32	d17, d12[1]
200095fc:	0e02dc1b 	mcreq	12, 0, sp, cr2, cr11, {0}
20009600:	63f3e490 	mvnsvs	lr, #144, 8	; 0x90000000
20009604:	018e0218 	orreq	r0, lr, r8, lsl r2
20009608:	1251e382 	subsne	lr, r1, #134217730	; 0x8000002
2000960c:	88018e02 	stmdahi	r1, {r1, r9, sl, fp, pc}
20009610:	020061a7 	andeq	r6, r0, #-1073741783	; 0xc0000029
20009614:	2460008e 	strbtcs	r0, [r0], #-142	; 0xffffff72
20009618:	8e021041 	cdphi	0, 0, cr1, cr2, cr1, {2}
2000961c:	41000300 	mrsmi	r0, LR_irq
20009620:	000e0290 	muleq	lr, r0, r2
20009624:	9048008d 	subls	r0, r8, sp, lsl #1
20009628:	81040c02 	tsthi	r4, r2, lsl #24
2000962c:	02a04c87 	adceq	r4, r0, #34560	; 0x8700
20009630:	cffffffc 	svcgt	0x00fffffc
20009634:	8203e2fc 	andhi	lr, r3, #252, 4	; 0xc000000f
20009638:	e3f81c07 	mvns	r1, #1792	; 0x700
2000963c:	000001ff 	strdeq	r0, [r0], -pc	; <UNPREDICTABLE>

20009640 <title_black_bits>:
	...
20009668:	08000000 	stmdaeq	r0, {}	; <UNPREDICTABLE>
2000966c:	01000040 	tsteq	r0, r0, asr #32
20009670:	400c0000 	andmi	r0, ip, r0
20009674:	00010080 	andeq	r0, r1, r0, lsl #1
20009678:	9c200400 	cfstrsls	mvf0, [r0], #-0
2000967c:	000001c4 	andeq	r0, r0, r4, asr #3
20009680:	a4803104 	strge	r3, [r0], #260	; 0x104
20009684:	04c00001 	strbeq	r0, [r0], #1
20009688:	02240209 	eoreq	r0, r4, #-1879048192	; 0x90000000
2000968c:	89044000 	stmdbhi	r4, {lr}
20009690:	00042602 	andeq	r2, r4, r2, lsl #12
20009694:	e2888440 	add	r8, r8, #64, 8	; 0x40000000
20009698:	00000421 	andeq	r0, r0, r1, lsr #8
2000969c:	001966f2 			; <UNDEFINED> instruction: 0x001966f2
200096a0:	03000007 	movweq	r0, #7
200096a4:	00020000 	andeq	r0, r2, r0
200096a8:	f4000000 	vst4.8	{d0-d3}, [r0], r0
200096ac:	00003a10 	andeq	r3, r0, r0, lsl sl
200096b0:	10058000 	andne	r8, r5, r0
200096b4:	00000012 	andeq	r0, r0, r2, lsl r0
200096b8:	1ad87400 	bne	1f6266c0 <startup-0x9d9940>
200096bc:	80000000 	andhi	r0, r0, r0
200096c0:	0022041b 	eoreq	r0, r2, fp, lsl r4
200096c4:	00004000 	andeq	r4, r0, r0
200096c8:	00003800 	andeq	r3, r0, r0, lsl #16
200096cc:	0000c0c0 	andeq	ip, r0, r0, asr #1
200096d0:	c0000000 	andgt	r0, r0, r0
200096d4:	08000045 	stmdaeq	r0, {r0, r2, r6}
200096d8:	144000c7 	strbne	r0, [r0], #-199	; 0xffffff39
200096dc:	01281040 			; <UNDEFINED> instruction: 0x01281040
200096e0:	71144000 	tstvc	r4, r0
200096e4:	00190810 	andseq	r0, r9, r0, lsl r8
200096e8:	90019440 	andls	r9, r1, r0, asr #8
200096ec:	4000c928 	andmi	ip, r0, r8, lsr #18
200096f0:	2c444c94 	mcrrcs	12, 9, r4, r4, cr4
200096f4:	96000049 	strls	r0, [r0], -r9, asr #32
200096f8:	49264740 	stmdbmi	r6!, {r6, r8, r9, sl, lr}
200096fc:	60938000 	addsvs	r8, r3, r0
20009700:	00512268 	subseq	r2, r1, r8, ror #4
20009704:	30000000 	andcc	r0, r0, r0
20009708:	00001d03 	andeq	r1, r0, r3, lsl #26
	...

20009714 <bg_bits>:
	...
20009724:	fff80000 			; <UNDEFINED> instruction: 0xfff80000
20009728:	0000001f 	andeq	r0, r0, pc, lsl r0
	...
20009734:	fffe0000 			; <UNDEFINED> instruction: 0xfffe0000
20009738:	000003ff 	strdeq	r0, [r0], -pc	; <UNPREDICTABLE>
	...
20009744:	ffff0000 			; <UNDEFINED> instruction: 0xffff0000
20009748:	00001fff 	strdeq	r1, [r0], -pc	; <UNPREDICTABLE>
	...
20009754:	ffff8000 			; <UNDEFINED> instruction: 0xffff8000
20009758:	0000ffff 	strdeq	pc, [r0], -pc	; <UNPREDICTABLE>
	...
20009764:	ffff8000 			; <UNDEFINED> instruction: 0xffff8000
20009768:	0007ffff 	strdeq	pc, [r7], -pc	; <UNPREDICTABLE>
	...
20009774:	ffffc000 			; <UNDEFINED> instruction: 0xffffc000
20009778:	003fffff 	ldrshteq	pc, [pc], -pc	; <UNPREDICTABLE>
	...
20009784:	ffffe000 			; <UNDEFINED> instruction: 0xffffe000
20009788:	01ffffff 	ldrsheq	pc, [pc, #255]	; 2000988f <bg_bits+0x17b>	; <UNPREDICTABLE>
2000978c:	0001f000 	andeq	pc, r1, r0
20009790:	00000000 	andeq	r0, r0, r0
20009794:	007fe000 	rsbseq	lr, pc, r0
20009798:	0ffffffe 	svceq	0x00fffffe
2000979c:	0003f800 	andeq	pc, r3, r0, lsl #16
200097a0:	00000000 	andeq	r0, r0, r0
200097a4:	003fe000 	eorseq	lr, pc, r0
200097a8:	7fffffc0 	svcvc	0x00ffffc0
200097ac:	0003f800 	andeq	pc, r3, r0, lsl #16
200097b0:	001f8000 	andseq	r8, pc, r0
200097b4:	001fe000 	andseq	lr, pc, r0
200097b8:	fffffe00 			; <UNDEFINED> instruction: 0xfffffe00
200097bc:	0003f801 	andeq	pc, r3, r1, lsl #16
200097c0:	003fc000 	eorseq	ip, pc, r0
200097c4:	003fe000 	eorseq	lr, pc, r0
200097c8:	fffff000 			; <UNDEFINED> instruction: 0xfffff000
200097cc:	3f83f807 	svccc	0x0083f807
200097d0:	003fe000 	eorseq	lr, pc, r0
200097d4:	01ffe000 	mvnseq	lr, r0
200097d8:	ffff8000 			; <UNDEFINED> instruction: 0xffff8000
200097dc:	7fc3f80f 	svcvc	0x00c3f80f
200097e0:	003fe7f8 	ldrshteq	lr, [pc], -r8
200097e4:	07ffe000 	ldrbeq	lr, [pc, r0]!
200097e8:	fffc0000 			; <UNDEFINED> instruction: 0xfffc0000
200097ec:	7fe1f01f 	svcvc	0x00e1f01f
200097f0:	003ffffc 	ldrshteq	pc, [pc], -ip	; <UNPREDICTABLE>
200097f4:	3fffc000 	svccc	0x00ffc000
200097f8:	ffe00000 			; <UNDEFINED> instruction: 0xffe00000
200097fc:	7ff0003f 	svcvc	0x00f0003f
20009800:	007ffffc 	ldrshteq	pc, [pc], #-252	; <UNPREDICTABLE>
20009804:	ffffc000 			; <UNDEFINED> instruction: 0xffffc000
20009808:	ff000000 			; <UNDEFINED> instruction: 0xff000000
2000980c:	7ff8007f 	svcvc	0x00f8007f
20009810:	3ffffffc 	svccc	0x00fffffc
20009814:	ffffc000 			; <UNDEFINED> instruction: 0xffffc000
20009818:	f8000003 			; <UNDEFINED> instruction: 0xf8000003
2000981c:	7ffc00ff 	svcvc	0x00fc00ff
20009820:	7ffffffc 	svcvc	0x00fffffc
20009824:	ffff8000 			; <UNDEFINED> instruction: 0xffff8000
20009828:	e000000f 	and	r0, r0, pc
2000982c:	7ffe01ff 	svcvc	0x00fe01ff
20009830:	fffffffc 			; <UNDEFINED> instruction: 0xfffffffc
20009834:	fffc0000 			; <UNDEFINED> instruction: 0xfffc0000
20009838:	8000001f 	andhi	r0, r0, pc, lsl r0
2000983c:	7fff01ff 	svcvc	0x00ff01ff
20009840:	fffffffc 			; <UNDEFINED> instruction: 0xfffffffc
20009844:	ffe00000 			; <UNDEFINED> instruction: 0xffe00000
20009848:	0000007f 	andeq	r0, r0, pc, ror r0
2000984c:	7fff83ff 	svcvc	0x00ff83ff
20009850:	fffffff8 			; <UNDEFINED> instruction: 0xfffffff8
20009854:	ff800000 			; <UNDEFINED> instruction: 0xff800000
20009858:	000000ff 	strdeq	r0, [r0], -pc	; <UNPREDICTABLE>
2000985c:	7fffc3fe 	svcvc	0x00ffc3fe
20009860:	ffffffe0 			; <UNDEFINED> instruction: 0xffffffe0
20009864:	fc7ffff0 	ldc2l	15, cr15, [pc], #-960	; 200094ac <title_light_bits+0x14>
20009868:	07c001ff 			; <UNDEFINED> instruction: 0x07c001ff
2000986c:	7fffe7fc 	svcvc	0x00ffe7fc
20009870:	ffffffc0 			; <UNDEFINED> instruction: 0xffffffc0
20009874:	f0fffffe 			; <UNDEFINED> instruction: 0xf0fffffe
20009878:	0fe007ff 	svceq	0x00e007ff
2000987c:	7ffff7fc 	svcvc	0x00fff7fc
20009880:	ffffff80 			; <UNDEFINED> instruction: 0xffffff80
20009884:	c0ffffff 	ldrshtgt	pc, [pc], #255	; <UNPREDICTABLE>
20009888:	0fe00fff 	svceq	0x00e00fff
2000988c:	7ffffff8 	svcvc	0x00fffff8
20009890:	ffffff00 			; <UNDEFINED> instruction: 0xffffff00
20009894:	01ffffff 	ldrsheq	pc, [pc, #255]	; 2000999b <bg_bits+0x287>	; <UNPREDICTABLE>
20009898:	0fe01fff 	svceq	0x00e01fff
2000989c:	7ffffff8 	svcvc	0x00fffff8
200098a0:	7ffffc00 	svcvc	0x00fffc00
200098a4:	01ffffff 	ldrsheq	pc, [pc, #255]	; 200099ab <bg_bits+0x297>	; <UNPREDICTABLE>
200098a8:	0fe03ffe 	svceq	0x00e03ffe
200098ac:	3fdffff0 	svccc	0x00dffff0
200098b0:	3ffffe00 	svccc	0x00fffe00
200098b4:	01ffffff 	ldrsheq	pc, [pc, #255]	; 200099bb <bg_bits+0x2a7>	; <UNPREDICTABLE>
200098b8:	0fe03ff8 	svceq	0x00e03ff8
200098bc:	3fe7fff0 	svccc	0x00e7fff0
200098c0:	07fffe00 	ldrbeq	pc, [pc, r0, lsl #28]!	; <UNPREDICTABLE>
200098c4:	03ffffff 	mvnseq	pc, #1020	; 0x3fc
200098c8:	07c07ff0 			; <UNDEFINED> instruction: 0x07c07ff0
200098cc:	1fe7fff0 	svcne	0x00e7fff0
200098d0:	0ffffe00 	svceq	0x00fffe00
200098d4:	03fc00ff 	mvnseq	r0, #255	; 0xff
200098d8:	0000ffe0 	andeq	pc, r0, r0, ror #31
200098dc:	1ff3ffe0 	svcne	0x00f3ffe0
200098e0:	1ffffe00 	svcne	0x00fffe00
200098e4:	03fc001f 	mvnseq	r0, #31
200098e8:	0001ff80 	andeq	pc, r1, r0, lsl #31
200098ec:	1ff9ffe0 	svcne	0x00f9ffe0
200098f0:	3ffffe00 	svccc	0x00fffe00
200098f4:	03fc0007 	mvnseq	r0, #7
200098f8:	0001ff80 	andeq	pc, r1, r0, lsl #31
200098fc:	0ffcffe0 	svceq	0x00fcffe0
20009900:	3ffdfe00 	svccc	0x00fdfe00
20009904:	07f80007 	ldrbeq	r0, [r8, r7]!
20009908:	0003ff00 	andeq	pc, r3, r0, lsl #30
2000990c:	0ffe7ff0 	svceq	0x00fe7ff0
20009910:	3ffcfe00 	svccc	0x00fcfe00
20009914:	07f80003 	ldrbeq	r0, [r8, r3]!
20009918:	0007fe00 	andeq	pc, r7, r0, lsl #28
2000991c:	07fe7ff8 			; <UNDEFINED> instruction: 0x07fe7ff8
20009920:	3ff8fe00 	svccc	0x00f8fe00
20009924:	0ff80003 	svceq	0x00f80003
20009928:	0007fc00 	andeq	pc, r7, r0, lsl #24
2000992c:	03fffffc 	mvnseq	pc, #252, 30	; 0x3f0
20009930:	3ff87c00 	svccc	0x00f87c00
20009934:	0ff80003 	svceq	0x00f80003
20009938:	0007fc00 	andeq	pc, r7, r0, lsl #24
2000993c:	01fffffe 	ldrsheq	pc, [pc, #254]	; 20009a42 <bg_bits+0x32e>	; <UNPREDICTABLE>
20009940:	1ff00000 	svcne	0x00f00000	; IMB
20009944:	0ff00007 	svceq	0x00f00007
20009948:	000ff800 	andeq	pc, pc, r0, lsl #16
2000994c:	01ffffff 	ldrsheq	pc, [pc, #255]	; 20009a53 <bg_bits+0x33f>	; <UNPREDICTABLE>
20009950:	07f0003e 			; <UNDEFINED> instruction: 0x07f0003e
20009954:	0ff00007 	svceq	0x00f00007
20009958:	800ff000 	andhi	pc, pc, r0
2000995c:	00ffffff 	ldrshteq	pc, [pc], #255	; <UNPREDICTABLE>
20009960:	03e0007f 	mvneq	r0, #127	; 0x7f
20009964:	0fe00007 	svceq	0x00e00007
20009968:	c00ff000 	andgt	pc, pc, r0
2000996c:	007fffff 	ldrshteq	pc, [pc], #-255	; <UNPREDICTABLE>
20009970:	0000007f 	andeq	r0, r0, pc, ror r0
20009974:	0fe00007 	svceq	0x00e00007
20009978:	e00ff000 	and	pc, pc, r0
2000997c:	007ffeff 	ldrshteq	pc, [pc], #-239	; <UNPREDICTABLE>
20009980:	0000007f 	andeq	r0, r0, pc, ror r0
20009984:	0fe00007 	svceq	0x00e00007
20009988:	f00ff000 			; <UNDEFINED> instruction: 0xf00ff000
2000998c:	003ffe7f 	eorseq	pc, pc, pc, ror lr	; <UNPREDICTABLE>
20009990:	0000007f 	andeq	r0, r0, pc, ror r0
20009994:	0fe00007 	svceq	0x00e00007
20009998:	f80ff000 			; <UNDEFINED> instruction: 0xf80ff000
2000999c:	001ffc3f 	andseq	pc, pc, pc, lsr ip	; <UNPREDICTABLE>
200099a0:	0000007f 	andeq	r0, r0, pc, ror r0
200099a4:	1fe0000f 	svcne	0x00e0000f
200099a8:	fc0ff000 	stc2	0, cr15, [pc], {-0}
200099ac:	000ff81f 	andeq	pc, pc, pc, lsl r8	; <UNPREDICTABLE>
200099b0:	0000003e 	andeq	r0, r0, lr, lsr r0
200099b4:	1fe0000f 	svcne	0x00e0000f
200099b8:	fc07f000 	stc2	0, cr15, [r7], {-0}
200099bc:	0007f00f 	andeq	pc, r7, pc
200099c0:	00000000 	andeq	r0, r0, r0
200099c4:	1fe0000f 	svcne	0x00e0000f
200099c8:	fc07f000 	stc2	0, cr15, [r7], {-0}
200099cc:	00000007 	andeq	r0, r0, r7
200099d0:	00000000 	andeq	r0, r0, r0
200099d4:	1fe0000f 	svcne	0x00e0000f
200099d8:	fc07f800 	stc2	8, cr15, [r7], {-0}
200099dc:	00000003 	andeq	r0, r0, r3
200099e0:	000ff800 	andeq	pc, pc, r0, lsl #16
200099e4:	1fc0001f 	svcne	0x00c0001f
200099e8:	fc07fc00 	stc2	12, cr15, [r7], {-0}
200099ec:	00000001 	andeq	r0, r0, r1
200099f0:	001ffc00 	andseq	pc, pc, r0, lsl #24
200099f4:	1fc0003f 	svcne	0x00c0003f
200099f8:	fc07ff80 	stc2	15, cr15, [r7], {128}	; 0x80
200099fc:	00000001 	andeq	r0, r0, r1
20009a00:	003fff00 	eorseq	pc, pc, r0, lsl #30
20009a04:	3fc0003f 	svccc	0x00c0003f
20009a08:	fc07fffc 	stc2	15, cr15, [r7], {252}	; 0xfc
20009a0c:	00000001 	andeq	r0, r0, r1
20009a10:	007fff80 	rsbseq	pc, pc, r0, lsl #31
20009a14:	ffc0003f 			; <UNDEFINED> instruction: 0xffc0003f
20009a18:	fc03ffff 	stc2	15, cr15, [r3], {255}	; 0xff
20009a1c:	00000001 	andeq	r0, r0, r1
20009a20:	00ffffe0 	rscseq	pc, pc, r0, ror #31
20009a24:	ffc0007f 			; <UNDEFINED> instruction: 0xffc0007f
20009a28:	fc01ffff 	stc2	15, cr15, [r1], {255}	; 0xff
20009a2c:	00000007 	andeq	r0, r0, r7
20009a30:	03fffff0 	mvnseq	pc, #240, 30	; 0x3c0
20009a34:	ffc0007f 			; <UNDEFINED> instruction: 0xffc0007f
20009a38:	fc00ffff 	stc2	15, cr15, [r0], {255}	; 0xff
20009a3c:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
20009a40:	07fffff8 			; <UNDEFINED> instruction: 0x07fffff8
20009a44:	ffc0007f 			; <UNDEFINED> instruction: 0xffc0007f
20009a48:	fc007fff 	stc2	15, cr7, [r0], {255}	; 0xff
20009a4c:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
20009a50:	07ff7ffd 			; <UNDEFINED> instruction: 0x07ff7ffd
20009a54:	ff80007f 			; <UNDEFINED> instruction: 0xff80007f
20009a58:	fc003fff 	stc2	15, cr3, [r0], {255}	; 0xff
20009a5c:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
20009a60:	0ffe3fff 	svceq	0x00fe3fff
20009a64:	ff1f007f 			; <UNDEFINED> instruction: 0xff1f007f
20009a68:	f80007ff 			; <UNDEFINED> instruction: 0xf80007ff
20009a6c:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
20009a70:	1ffc3fff 	svcne	0x00fc3fff
20009a74:	fc3f807f 	ldc2	0, cr8, [pc], #-508	; 20009880 <bg_bits+0x16c>
20009a78:	f800003f 			; <UNDEFINED> instruction: 0xf800003f
20009a7c:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
20009a80:	1ff83fff 	svcne	0x00f83fff
20009a84:	003f807f 	eorseq	r8, pc, pc, ror r0	; <UNPREDICTABLE>
20009a88:	f0000000 			; <UNDEFINED> instruction: 0xf0000000
20009a8c:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
20009a90:	3ff03fff 	svccc	0x00f03fff
20009a94:	003f807f 	eorseq	r8, pc, pc, ror r0	; <UNPREDICTABLE>
20009a98:	c0000000 	andgt	r0, r0, r0
20009a9c:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
20009aa0:	7fe03fff 	svcvc	0x00e03fff
20009aa4:	003f803f 	eorseq	r8, pc, pc, lsr r0	; <UNPREDICTABLE>
20009aa8:	00000000 	andeq	r0, r0, r0
20009aac:	f8000000 			; <UNDEFINED> instruction: 0xf8000000
20009ab0:	7fc03fff 	svcvc	0x00c03fff
20009ab4:	003f803f 	eorseq	r8, pc, pc, lsr r0	; <UNPREDICTABLE>
20009ab8:	fffff000 			; <UNDEFINED> instruction: 0xfffff000
20009abc:	f800000f 			; <UNDEFINED> instruction: 0xf800000f
20009ac0:	ffc01fff 			; <UNDEFINED> instruction: 0xffc01fff
20009ac4:	001f003f 	andseq	r0, pc, pc, lsr r0	; <UNPREDICTABLE>
20009ac8:	fffff800 	vcmla.f32	d31, d15, d0[0], #270
20009acc:	f8007fff 			; <UNDEFINED> instruction: 0xf8007fff
20009ad0:	ff801fff 			; <UNDEFINED> instruction: 0xff801fff
20009ad4:	0000003f 	andeq	r0, r0, pc, lsr r0
20009ad8:	fffff800 	vcmla.f32	d31, d15, d0[0], #270
20009adc:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
20009ae0:	ff801fff 			; <UNDEFINED> instruction: 0xff801fff
20009ae4:	0000003f 	andeq	r0, r0, pc, lsr r0
20009ae8:	fffff800 	vcmla.f32	d31, d15, d0[0], #270
20009aec:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
20009af0:	ff001fff 			; <UNDEFINED> instruction: 0xff001fff
20009af4:	0000003f 	andeq	r0, r0, pc, lsr r0
20009af8:	fffff800 	vcmla.f32	d31, d15, d0[0], #270
20009afc:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
20009b00:	fe001fff 	mcr2	15, 0, r1, cr0, cr15, {7}
20009b04:	0000003f 	andeq	r0, r0, pc, lsr r0
20009b08:	fffff800 	vcmla.f32	d31, d15, d0[0], #270
20009b0c:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
20009b10:	fe001fff 	mcr2	15, 0, r1, cr0, cr15, {7}

20009b14 <current_screen>:
20009b14:	00000001 	andeq	r0, r0, r1

20009b18 <delay_until_text.4335>:
20009b18:	00000082 	andeq	r0, r0, r2, lsl #1

20009b1c <long_text.4333>:
20009b1c:	00000028 	andeq	r0, r0, r8, lsr #32

20009b20 <short_text.4334>:
20009b20:	00000014 	andeq	r0, r0, r4, lsl r0

20009b24 <last_climb_value.4341>:
20009b24:	00000064 	andeq	r0, r0, r4, rrx

20009b28 <fire_black_2_bits>:
	...
20009b30:	18000000 	stmdane	r0, {}	; <UNPREDICTABLE>

20009b34 <fire1_gray_bits>:
20009b34:	00000000 	andeq	r0, r0, r0
20009b38:	06000804 	streq	r0, [r0], -r4, lsl #16
20009b3c:	02494204 	subeq	r4, r9, #4, 4	; 0x40000000

20009b40 <fire1_light_bits>:
20009b40:	00002000 	andeq	r2, r0, r0
20009b44:	48000010 	stmdami	r0, {r4}
20009b48:	2c243020 	stccs	0, cr3, [r4], #-128	; 0xffffff80

20009b4c <fire2_gray_bits>:
20009b4c:	00000000 	andeq	r0, r0, r0
20009b50:	10220000 	eorne	r0, r2, r0
20009b54:	00420444 	subeq	r0, r2, r4, asr #8

20009b58 <fire2_light_bits>:
20009b58:	04200000 	strteq	r0, [r0], #-0
20009b5c:	240c0010 	strcs	r0, [ip], #-16
20009b60:	123c6008 	eorsne	r6, ip, #8

20009b64 <fire3_gray_bits>:
20009b64:	00000000 	andeq	r0, r0, r0
20009b68:	24100802 	ldrcs	r0, [r0], #-2050	; 0xfffff7fe
20009b6c:	00020260 	andeq	r0, r2, r0, ror #4

20009b70 <fire3_light_bits>:
20009b70:	10200000 	eorne	r0, r0, r0
20009b74:	18040400 	stmdane	r4, {sl}
20009b78:	143c5812 	ldrtne	r5, [ip], #-2066	; 0xfffff7ee

20009b7c <fire4_gray_bits>:
20009b7c:	08000000 	stmdaeq	r0, {}	; <UNPREDICTABLE>
20009b80:	10320000 	eorsne	r0, r2, r0
20009b84:	02400012 	subeq	r0, r0, #18

20009b88 <fire4_light_bits>:
20009b88:	00001000 	andeq	r1, r0, r0
20009b8c:	04082000 	streq	r2, [r8], #-0
20009b90:	24283a0c 	strtcs	r3, [r8], #-2572	; 0xfffff5f4

20009b94 <fire5_gray_bits>:
20009b94:	00000000 	andeq	r0, r0, r0
20009b98:	22001020 	andcs	r1, r0, #32
20009b9c:	04044206 	streq	r4, [r4], #-518	; 0xfffffdfa

20009ba0 <fire5_light_bits>:
20009ba0:	00040000 	andeq	r0, r4, r0
20009ba4:	04240800 	strteq	r0, [r4], #-2048	; 0xfffff800
20009ba8:	502a1810 	eorpl	r1, sl, r0, lsl r8

20009bac <firstTime.4076>:
20009bac:	00000001 	andeq	r0, r0, r1

20009bb0 <bird1_black_bits>:
	...
20009bc0:	00010040 	andeq	r0, r1, r0, asr #32
20009bc4:	00118060 	andseq	r8, r1, r0, rrx
20009bc8:	00118060 	andseq	r8, r1, r0, rrx
20009bcc:	001b80ec 	andseq	r8, fp, ip, ror #1
20009bd0:	003f81fc 	ldrshteq	r8, [pc], -ip
20009bd4:	007fe1f8 	ldrshteq	lr, [pc], #-24
20009bd8:	007ff3f8 	ldrshteq	pc, [pc], #-56	; <UNPREDICTABLE>
20009bdc:	003ffff8 	ldrshteq	pc, [pc], -r8	; <UNPREDICTABLE>
20009be0:	003fedf8 	ldrshteq	lr, [pc], -r8
20009be4:	001ff1f0 			; <UNDEFINED> instruction: 0x001ff1f0
20009be8:	000ff0e0 	andeq	pc, pc, r0, ror #1
20009bec:	0007ff80 	andeq	pc, r7, r0, lsl #31
20009bf0:	00007c00 	andeq	r7, r0, r0, lsl #24
20009bf4:	00008800 	andeq	r8, r0, r0, lsl #16
20009bf8:	00033000 	andeq	r3, r3, r0
20009bfc:	00011000 	andeq	r1, r1, r0
	...

20009c14 <bird1_gray_bits>:
	...
20009c48:	00000e00 	andeq	r0, r0, r0, lsl #28
20009c4c:	00000f00 	andeq	r0, r0, r0, lsl #30
	...

20009c78 <bird1_light_bits>:
	...
20009ca8:	00001200 	andeq	r1, r0, r0, lsl #4
	...

20009cdc <bird2_black_bits>:
	...
20009cf4:	000b0000 	andeq	r0, fp, r0
20009cf8:	001e0028 	andseq	r0, lr, r8, lsr #32
20009cfc:	003e0068 	eorseq	r0, lr, r8, rrx
20009d00:	003e007c 	eorseq	r0, lr, ip, ror r0
20009d04:	003e007c 	eorseq	r0, lr, ip, ror r0
20009d08:	007e007c 	rsbseq	r0, lr, ip, ror r0
20009d0c:	007e7cfc 	ldrshteq	r7, [lr], #-204	; 0xffffff34
20009d10:	007ffff8 	ldrshteq	pc, [pc], #-248	; <UNPREDICTABLE>
20009d14:	003fd7f0 	ldrshteq	sp, [pc], -r0
20009d18:	003fc3c0 	eorseq	ip, pc, r0, asr #7
20009d1c:	000fc100 	andeq	ip, pc, r0, lsl #2
20009d20:	00007000 	andeq	r7, r0, r0
20009d24:	0000a000 	andeq	sl, r0, r0
20009d28:	0001e000 	andeq	lr, r1, r0
20009d2c:	0000a000 	andeq	sl, r0, r0
20009d30:	00008000 	andeq	r8, r0, r0
	...

20009d40 <bird2_gray_bits>:
	...
20009d7c:	00003c00 	andeq	r3, r0, r0, lsl #24
20009d80:	00003e00 	andeq	r3, r0, r0, lsl #28
	...

20009da4 <bird2_light_bits>:
	...
20009ddc:	00002800 	andeq	r2, r0, r0, lsl #16
	...

20009e08 <bird3_black_bits>:
	...
20009e28:	00280000 	eoreq	r0, r8, r0
20009e2c:	00680020 	rsbeq	r0, r8, r0, lsr #32
20009e30:	00f80038 	rscseq	r0, r8, r8, lsr r0
20009e34:	00fc0038 	rscseq	r0, ip, r8, lsr r0
20009e38:	00fc007c 	rscseq	r0, ip, ip, ror r0
20009e3c:	00fe3dfe 	ldrshteq	r3, [lr], #222	; 0xde
20009e40:	00fffffe 	ldrshteq	pc, [pc], #254	; <UNPREDICTABLE>
20009e44:	007febfc 	ldrshteq	lr, [pc], #-188
20009e48:	003ff1f0 	ldrshteq	pc, [pc], -r0	; <UNPREDICTABLE>
20009e4c:	001ff0c0 	andseq	pc, pc, r0, asr #1
20009e50:	0001e800 	andeq	lr, r1, r0, lsl #16
20009e54:	00005000 	andeq	r5, r0, r0
20009e58:	0000f000 	andeq	pc, r0, r0
20009e5c:	00009000 	andeq	r9, r0, r0
	...

20009e6c <bird3_gray_bits>:
	...
20009eac:	00000e00 	andeq	r0, r0, r0, lsl #28
20009eb0:	00000f00 	andeq	r0, r0, r0, lsl #30
	...

20009ed0 <bird3_light_bits>:
	...
20009f0c:	00001400 	andeq	r1, r0, r0, lsl #8
	...

20009f34 <bird4_black_bits>:
	...
20009f68:	00007800 	andeq	r7, r0, r0, lsl #16
20009f6c:	0000ff80 	andeq	pc, r0, r0, lsl #31
20009f70:	0003d7f4 	strdeq	sp, [r3], -r4
20009f74:	008fe3fc 	strdeq	lr, [pc], ip
20009f78:	01ffc1fc 	ldrsheq	ip, [pc, #28]	; 20009f9c <bird4_gray_bits+0x4>
20009f7c:	00ffd9f8 	ldrshteq	sp, [pc], #152
20009f80:	007fb0f0 	ldrshteq	fp, [pc], #-0
20009f84:	007ea000 	rsbseq	sl, lr, r0
20009f88:	00792000 	rsbseq	r2, r9, r0
20009f8c:	00300000 	eorseq	r0, r0, r0
	...

20009f98 <bird4_gray_bits>:
	...
20009fd8:	00001c00 	andeq	r1, r0, r0, lsl #24
20009fdc:	00003e00 	andeq	r3, r0, r0, lsl #28
	...

20009ffc <bird4_light_bits>:
	...
2000a038:	00002800 	andeq	r2, r0, r0, lsl #16
	...

2000a060 <bird5_black_bits>:
	...
2000a08c:	00001c00 	andeq	r1, r0, r0, lsl #24
2000a090:	0000ff00 	andeq	pc, r0, r0, lsl #30
2000a094:	0003eb00 	andeq	lr, r3, r0, lsl #22
2000a098:	0007f180 	andeq	pc, r7, r0, lsl #3
2000a09c:	000ff080 	andeq	pc, pc, r0, lsl #1
2000a0a0:	000fff80 	andeq	pc, pc, r0, lsl #31
2000a0a4:	001fd3c0 	andseq	sp, pc, r0, asr #7
2000a0a8:	003fa3c0 	eorseq	sl, pc, r0, asr #7
2000a0ac:	003fa3c0 	eorseq	sl, pc, r0, asr #7
2000a0b0:	003fd3c0 	eorseq	sp, pc, r0, asr #7
2000a0b4:	003e8380 	eorseq	r8, lr, r0, lsl #7
2000a0b8:	00778580 	rsbseq	r8, r7, r0, lsl #11
2000a0bc:	00610000 	rsbeq	r0, r1, r0
2000a0c0:	00000000 	andeq	r0, r0, r0

2000a0c4 <bird5_gray_bits>:
	...
2000a0fc:	00000e00 	andeq	r0, r0, r0, lsl #28
2000a100:	00000f00 	andeq	r0, r0, r0, lsl #30
	...

2000a128 <bird5_light_bits>:
	...
2000a15c:	00001400 	andeq	r1, r0, r0, lsl #8
	...

2000a18c <firstTime.4093>:
2000a18c:	00000001 	andeq	r0, r0, r1

2000a190 <witch1_black_bits>:
2000a190:	200001f8 	strdcs	r0, [r0], -r8
2000a194:	03400001 	movteq	r0, #1
2000a198:	00074000 	andeq	r4, r7, r0
2000a19c:	20000720 	andcs	r0, r0, r0, lsr #14
2000a1a0:	3ff80066 	svccc	0x00f80066
2000a1a4:	00044000 	andeq	r4, r4, r0
2000a1a8:	40000440 	andmi	r0, r0, r0, asr #8
2000a1ac:	03800004 	orreq	r0, r0, #4
2000a1b0:	00064000 	andeq	r4, r6, r0
2000a1b4:	20000640 	andcs	r0, r0, r0, asr #12
2000a1b8:	0e200006 	cdpeq	0, 2, cr0, cr0, cr6, {0}
2000a1bc:	000e1000 	andeq	r1, lr, r0
2000a1c0:	f8000c10 			; <UNDEFINED> instruction: 0xf8000c10
2000a1c4:	0000001f 	andeq	r0, r0, pc, lsl r0

2000a1c8 <witch1_gray_bits>:
2000a1c8:	c0000000 	andgt	r0, r0, r0
2000a1cc:	00800000 	addeq	r0, r0, r0
2000a1d0:	00008000 	andeq	r8, r0, r0
2000a1d4:	c00000c0 	andgt	r0, r0, r0, asr #1
2000a1d8:	00000001 	andeq	r0, r0, r1
	...
2000a1e8:	00018000 	andeq	r8, r1, r0
2000a1ec:	c0000180 	andgt	r0, r0, r0, lsl #3
2000a1f0:	01c00001 	biceq	r0, r0, r1
2000a1f4:	0001e000 	andeq	lr, r1, r0
2000a1f8:	000003e0 	andeq	r0, r0, r0, ror #7
2000a1fc:	00000000 	andeq	r0, r0, r0

2000a200 <witch1_light_bits>:
	...
2000a214:	00038000 	andeq	r8, r3, r0
2000a218:	80000380 	andhi	r0, r0, r0, lsl #7
2000a21c:	00000003 	andeq	r0, r0, r3
	...

2000a238 <witch2_black_bits>:
2000a238:	f8000000 			; <UNDEFINED> instruction: 0xf8000000
2000a23c:	01200001 			; <UNDEFINED> instruction: 0x01200001
2000a240:	00034000 	andeq	r4, r3, r0
2000a244:	20000740 	andcs	r0, r0, r0, asr #14
2000a248:	66200007 	strtvs	r0, [r0], -r7
2000a24c:	003ff800 	eorseq	pc, pc, r0, lsl #16
2000a250:	40000440 	andmi	r0, r0, r0, asr #8
2000a254:	04400004 	strbeq	r0, [r0], #-4
2000a258:	00038000 	andeq	r8, r3, r0
2000a25c:	20000660 	andcs	r0, r0, r0, ror #12
2000a260:	0e100006 	cdpeq	0, 1, cr0, cr0, cr6, {0}
2000a264:	001c0800 	andseq	r0, ip, r0, lsl #16
2000a268:	fc001c08 	stc2	12, cr1, [r0], {8}
2000a26c:	0000003f 	andeq	r0, r0, pc, lsr r0

2000a270 <witch2_gray_bits>:
2000a270:	00000000 	andeq	r0, r0, r0
2000a274:	00c00000 	sbceq	r0, r0, r0
2000a278:	00008000 	andeq	r8, r0, r0
2000a27c:	c0000080 	andgt	r0, r0, r0, lsl #1
2000a280:	01c00000 	biceq	r0, r0, r0
	...
2000a294:	c0000180 	andgt	r0, r0, r0, lsl #3
2000a298:	01e00001 	mvneq	r0, r1
2000a29c:	0003f000 	andeq	pc, r3, r0
2000a2a0:	000003f0 	strdeq	r0, [r0], -r0	; <UNPREDICTABLE>
2000a2a4:	00000000 	andeq	r0, r0, r0

2000a2a8 <witch2_light_bits>:
	...
2000a2c0:	80000380 	andhi	r0, r0, r0, lsl #7
2000a2c4:	03800003 	orreq	r0, r0, #3
	...

2000a2e0 <witch3_black_bits>:
2000a2e0:	f8000000 			; <UNDEFINED> instruction: 0xf8000000
2000a2e4:	01200001 			; <UNDEFINED> instruction: 0x01200001
2000a2e8:	00034000 	andeq	r4, r3, r0
2000a2ec:	20000740 	andcs	r0, r0, r0, asr #14
2000a2f0:	66200007 	strtvs	r0, [r0], -r7
2000a2f4:	003ff800 	eorseq	pc, pc, r0, lsl #16
2000a2f8:	40000440 	andmi	r0, r0, r0, asr #8
2000a2fc:	04400004 	strbeq	r0, [r0], #-4
2000a300:	00038000 	andeq	r8, r3, r0
2000a304:	10000660 	andne	r0, r0, r0, ror #12
2000a308:	1c08000e 	stcne	0, cr0, [r8], {14}
2000a30c:	00380800 	eorseq	r0, r8, r0, lsl #16
2000a310:	fe003804 	vcmla.f16	d3, d0, d4[0], #0
2000a314:	0000007f 	andeq	r0, r0, pc, ror r0

2000a318 <witch3_gray_bits>:
2000a318:	00000000 	andeq	r0, r0, r0
2000a31c:	00c00000 	sbceq	r0, r0, r0
2000a320:	00008000 	andeq	r8, r0, r0
2000a324:	c0000080 	andgt	r0, r0, r0, lsl #1
2000a328:	01c00000 	biceq	r0, r0, r0
	...
2000a33c:	e0000180 	and	r0, r0, r0, lsl #3
2000a340:	03f00001 	mvnseq	r0, #1
2000a344:	0007f000 	andeq	pc, r7, r0
2000a348:	000007f8 	strdeq	r0, [r0], -r8
2000a34c:	00000000 	andeq	r0, r0, r0

2000a350 <witch3_light_bits>:
	...
2000a368:	80000380 	andhi	r0, r0, r0, lsl #7
2000a36c:	03800003 	orreq	r0, r0, #3
	...

2000a388 <firstTime.4067>:
2000a388:	00000001 	andeq	r0, r0, r1

2000a38c <witch1_black_bits>:
2000a38c:	200001f8 	strdcs	r0, [r0], -r8
2000a390:	03400001 	movteq	r0, #1
2000a394:	00074000 	andeq	r4, r7, r0
2000a398:	20000720 	andcs	r0, r0, r0, lsr #14
2000a39c:	3ff80066 	svccc	0x00f80066
2000a3a0:	00044000 	andeq	r4, r4, r0
2000a3a4:	40000440 	andmi	r0, r0, r0, asr #8
2000a3a8:	03800004 	orreq	r0, r0, #4
2000a3ac:	00064000 	andeq	r4, r6, r0
2000a3b0:	20000640 	andcs	r0, r0, r0, asr #12
2000a3b4:	0e200006 	cdpeq	0, 2, cr0, cr0, cr6, {0}
2000a3b8:	000e1000 	andeq	r1, lr, r0
2000a3bc:	f8000c10 			; <UNDEFINED> instruction: 0xf8000c10
2000a3c0:	0000001f 	andeq	r0, r0, pc, lsl r0

2000a3c4 <witch1_gray_bits>:
2000a3c4:	c0000000 	andgt	r0, r0, r0
2000a3c8:	00800000 	addeq	r0, r0, r0
2000a3cc:	00008000 	andeq	r8, r0, r0
2000a3d0:	c00000c0 	andgt	r0, r0, r0, asr #1
2000a3d4:	00000001 	andeq	r0, r0, r1
	...
2000a3e4:	00018000 	andeq	r8, r1, r0
2000a3e8:	c0000180 	andgt	r0, r0, r0, lsl #3
2000a3ec:	01c00001 	biceq	r0, r0, r1
2000a3f0:	0001e000 	andeq	lr, r1, r0
2000a3f4:	000003e0 	andeq	r0, r0, r0, ror #7
2000a3f8:	00000000 	andeq	r0, r0, r0

2000a3fc <witch1_light_bits>:
	...
2000a410:	00038000 	andeq	r8, r3, r0
2000a414:	80000380 	andhi	r0, r0, r0, lsl #7
2000a418:	00000003 	andeq	r0, r0, r3
	...

2000a434 <witch2_black_bits>:
2000a434:	f8000000 			; <UNDEFINED> instruction: 0xf8000000
2000a438:	01200001 			; <UNDEFINED> instruction: 0x01200001
2000a43c:	00034000 	andeq	r4, r3, r0
2000a440:	20000740 	andcs	r0, r0, r0, asr #14
2000a444:	66200007 	strtvs	r0, [r0], -r7
2000a448:	003ff800 	eorseq	pc, pc, r0, lsl #16
2000a44c:	40000440 	andmi	r0, r0, r0, asr #8
2000a450:	04400004 	strbeq	r0, [r0], #-4
2000a454:	00038000 	andeq	r8, r3, r0
2000a458:	20000660 	andcs	r0, r0, r0, ror #12
2000a45c:	0e100006 	cdpeq	0, 1, cr0, cr0, cr6, {0}
2000a460:	001c0800 	andseq	r0, ip, r0, lsl #16
2000a464:	fc001c08 	stc2	12, cr1, [r0], {8}
2000a468:	0000003f 	andeq	r0, r0, pc, lsr r0

2000a46c <witch2_gray_bits>:
2000a46c:	00000000 	andeq	r0, r0, r0
2000a470:	00c00000 	sbceq	r0, r0, r0
2000a474:	00008000 	andeq	r8, r0, r0
2000a478:	c0000080 	andgt	r0, r0, r0, lsl #1
2000a47c:	01c00000 	biceq	r0, r0, r0
	...
2000a490:	c0000180 	andgt	r0, r0, r0, lsl #3
2000a494:	01e00001 	mvneq	r0, r1
2000a498:	0003f000 	andeq	pc, r3, r0
2000a49c:	000003f0 	strdeq	r0, [r0], -r0	; <UNPREDICTABLE>
2000a4a0:	00000000 	andeq	r0, r0, r0

2000a4a4 <witch2_light_bits>:
	...
2000a4bc:	80000380 	andhi	r0, r0, r0, lsl #7
2000a4c0:	03800003 	orreq	r0, r0, #3
	...

2000a4dc <witch3_black_bits>:
2000a4dc:	f8000000 			; <UNDEFINED> instruction: 0xf8000000
2000a4e0:	01200001 			; <UNDEFINED> instruction: 0x01200001
2000a4e4:	00034000 	andeq	r4, r3, r0
2000a4e8:	20000740 	andcs	r0, r0, r0, asr #14
2000a4ec:	66200007 	strtvs	r0, [r0], -r7
2000a4f0:	003ff800 	eorseq	pc, pc, r0, lsl #16
2000a4f4:	40000440 	andmi	r0, r0, r0, asr #8
2000a4f8:	04400004 	strbeq	r0, [r0], #-4
2000a4fc:	00038000 	andeq	r8, r3, r0
2000a500:	10000660 	andne	r0, r0, r0, ror #12
2000a504:	1c08000e 	stcne	0, cr0, [r8], {14}
2000a508:	00380800 	eorseq	r0, r8, r0, lsl #16
2000a50c:	fe003804 	vcmla.f16	d3, d0, d4[0], #0
2000a510:	0000007f 	andeq	r0, r0, pc, ror r0

2000a514 <witch3_gray_bits>:
2000a514:	00000000 	andeq	r0, r0, r0
2000a518:	00c00000 	sbceq	r0, r0, r0
2000a51c:	00008000 	andeq	r8, r0, r0
2000a520:	c0000080 	andgt	r0, r0, r0, lsl #1
2000a524:	01c00000 	biceq	r0, r0, r0
	...
2000a538:	e0000180 	and	r0, r0, r0, lsl #3
2000a53c:	03f00001 	mvnseq	r0, #1
2000a540:	0007f000 	andeq	pc, r7, r0
2000a544:	000007f8 	strdeq	r0, [r0], -r8
2000a548:	00000000 	andeq	r0, r0, r0

2000a54c <witch3_light_bits>:
	...
2000a564:	80000380 	andhi	r0, r0, r0, lsl #7
2000a568:	03800003 	orreq	r0, r0, #3
	...

2000a584 <direction>:
2000a584:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff

2000a588 <firstTime.4144>:
2000a588:	00000001 	andeq	r0, r0, r1

2000a58c <flame1_black_bits>:
2000a58c:	80000000 	andhi	r0, r0, r0
2000a590:	00000008 	andeq	r0, r0, r8
2000a594:	00004800 	andeq	r4, r0, r0, lsl #16
2000a598:	48004a08 	stmdami	r0, {r3, r9, fp, lr}
2000a59c:	02400002 	subeq	r0, r0, #2
2000a5a0:	00541400 	subseq	r1, r4, r0, lsl #8
2000a5a4:	22005040 	andcs	r5, r0, #64	; 0x40
2000a5a8:	a01200b0 	ldrhge	r0, [r2], -r0	; <UNPREDICTABLE>
2000a5ac:	00011200 	andeq	r1, r1, r0, lsl #4
2000a5b0:	01001000 	mrseq	r1, (UNDEF: 0)
2000a5b4:	01000000 	mrseq	r0, (UNDEF: 0)
2000a5b8:	00210001 	eoreq	r0, r1, r1
2000a5bc:	40000042 	andmi	r0, r0, r2, asr #32
2000a5c0:	20410000 	subcs	r0, r1, r0
2000a5c4:	01200101 			; <UNDEFINED> instruction: 0x01200101
2000a5c8:	12012001 	andne	r2, r1, #1
2000a5cc:	90400000 	subls	r0, r0, r0
2000a5d0:	00800200 	addeq	r0, r0, r0, lsl #4
2000a5d4:	04008000 	streq	r8, [r0], #-0
2000a5d8:	20080001 	andcs	r0, r8, r1
2000a5dc:	00080800 	andeq	r0, r8, r0, lsl #16
	...
2000a5e8:	00001000 	andeq	r1, r0, r0
2000a5ec:	3200001c 	andcc	r0, r0, #28
2000a5f0:	002f0000 	eoreq	r0, pc, r0
2000a5f4:	00003f00 	andeq	r3, r0, r0, lsl #30
2000a5f8:	01000007 	tsteq	r0, r7
2000a5fc:	00010000 	andeq	r0, r1, r0
2000a600:	00000000 	andeq	r0, r0, r0

2000a604 <flame1_gray_bits>:
	...
2000a624:	00080000 	andeq	r0, r8, r0
2000a628:	00000000 	andeq	r0, r0, r0
2000a62c:	00900008 	addseq	r0, r0, r8
2000a630:	0002a000 	andeq	sl, r2, r0
2000a634:	b0001bb0 			; <UNDEFINED> instruction: 0xb0001bb0
2000a638:	0fb0001f 	svceq	0x00b0001f
2000a63c:	000fe000 	andeq	lr, pc, r0
2000a640:	e0000fe0 	and	r0, r0, r0, ror #31
2000a644:	0fa0000f 	svceq	0x00a0000f
2000a648:	0007e000 	andeq	lr, r7, r0
2000a64c:	800003c0 	andhi	r0, r0, r0, asr #7
2000a650:	07c00002 	strbeq	r0, [r0, r2]
2000a654:	00078000 	andeq	r8, r7, r0
2000a658:	80000380 	andhi	r0, r0, r0, lsl #7
2000a65c:	09800003 	stmibeq	r0, {r0, r1}
2000a660:	00018000 	andeq	r8, r1, r0
2000a664:	0c000000 	stceq	0, cr0, [r0], {-0}
2000a668:	00100000 	andseq	r0, r0, r0
	...

2000a67c <flame1_light_bits>:
	...
2000a684:	00080000 	andeq	r0, r8, r0
2000a688:	80000080 	andhi	r0, r0, r0, lsl #1
2000a68c:	0c88000c 	stceq	0, cr0, [r8], {12}
2000a690:	00098800 	andeq	r8, r9, r0, lsl #16
2000a694:	c8000db8 	stmdagt	r0, {r3, r4, r5, r7, r8, sl, fp}
2000a698:	5fe8004d 	svcpl	0x00e8004d
2000a69c:	00f6e800 	rscseq	lr, r6, r0, lsl #16
2000a6a0:	fc00eff8 	stc2	15, cr14, [r0], {248}	; 0xf8
2000a6a4:	fe6c00f7 	mcr2	0, 3, r0, cr12, cr7, {7}
2000a6a8:	00dc5c00 	sbcseq	r5, ip, r0, lsl #24
2000a6ac:	0c00e40c 	cfstrseq	mvf14, [r0], {12}
2000a6b0:	d00e01e0 	andle	r0, lr, r0, ror #3
2000a6b4:	00d01e00 	sbcseq	r1, r0, r0, lsl #28
2000a6b8:	0c00d01a 	stceq	0, cr13, [r0], {26}
2000a6bc:	600e00f0 	strdvs	r0, [lr], -r0	; <UNPREDICTABLE>
2000a6c0:	00681c00 	rsbeq	r1, r8, r0, lsl #24
2000a6c4:	70003c3c 	andvc	r3, r0, ip, lsr ip
2000a6c8:	1830003c 	ldmdane	r0!, {r2, r3, r4, r5}
2000a6cc:	00307000 	eorseq	r7, r0, r0
2000a6d0:	78003c78 	stmdavc	r0, {r3, r4, r5, r6, sl, fp, ip, sp}
2000a6d4:	16700038 			; <UNDEFINED> instruction: 0x16700038
2000a6d8:	001e6000 	andseq	r6, lr, r0
2000a6dc:	c0000fe0 	andgt	r0, r0, r0, ror #31
2000a6e0:	0fc0000f 	svceq	0x00c0000f
	...

2000a6f4 <flame2_black_bits>:
2000a6f4:	00000000 	andeq	r0, r0, r0
2000a6f8:	40040042 	andmi	r0, r4, r2, asr #32
2000a6fc:	00044400 	andeq	r4, r4, r0, lsl #8
2000a700:	04000440 	streq	r0, [r0], #-1088	; 0xfffffbc0
2000a704:	22a00022 	adccs	r0, r0, #34	; 0x22
2000a708:	00aaa800 	adceq	sl, sl, r0, lsl #16
2000a70c:	00009108 	andeq	r9, r0, r8, lsl #2
2000a710:	84800090 	strhi	r0, [r0], #144	; 0x90
2000a714:	00040400 	andeq	r0, r4, r0, lsl #8
2000a718:	20008004 	andcs	r8, r0, r4
2000a71c:	00850090 	umulleq	r0, r5, r0, r0
2000a720:	01000000 	mrseq	r0, (UNDEF: 0)
2000a724:	20000002 	andcs	r0, r0, r2
2000a728:	84200084 	strthi	r0, [r0], #-132	; 0xffffff7c
2000a72c:	00000200 	andeq	r0, r0, r0, lsl #4
2000a730:	02004004 	andeq	r4, r0, #4
2000a734:	a00a0080 	andge	r0, sl, r0, lsl #1
2000a738:	00240800 	eoreq	r0, r4, r0, lsl #16
2000a73c:	08002048 	stmdaeq	r0, {r3, r6, sp}
2000a740:	00000000 	andeq	r0, r0, r0
2000a744:	00101000 	andseq	r1, r0, r0
2000a748:	00004050 	andeq	r4, r0, r0, asr r0
2000a74c:	10000040 	andne	r0, r0, r0, asr #32
2000a750:	00001000 	andeq	r1, r0, r0
2000a754:	3200001c 	andcc	r0, r0, #28
2000a758:	002f0000 	eoreq	r0, pc, r0
2000a75c:	00003f00 	andeq	r3, r0, r0, lsl #30
2000a760:	01000007 	tsteq	r0, r7
2000a764:	00010000 	andeq	r0, r1, r0
2000a768:	00000000 	andeq	r0, r0, r0

2000a76c <flame2_gray_bits>:
	...
2000a78c:	00002000 	andeq	r2, r0, r0
2000a790:	40000010 	andmi	r0, r0, r0, lsl r0
2000a794:	27600002 	strbcs	r0, [r0, -r2]!
2000a798:	001fe000 	andseq	lr, pc, r0
2000a79c:	c0000fe0 	andgt	r0, r0, r0, ror #31
2000a7a0:	0bc00003 	bleq	1f00a7b4 <startup-0xff584c>
2000a7a4:	000fe000 	andeq	lr, pc, r0
2000a7a8:	c0000fd0 	ldrdgt	r0, [r0], -r0	; <UNPREDICTABLE>
2000a7ac:	0fc0000f 	svceq	0x00c0000f
2000a7b0:	0003e000 	andeq	lr, r3, r0
2000a7b4:	c00007a0 	andgt	r0, r0, r0, lsr #15
2000a7b8:	0b800007 	bleq	1e00a7dc <startup-0x1ff5824>
2000a7bc:	0003c000 	andeq	ip, r3, r0
2000a7c0:	80000380 	andhi	r0, r0, r0, lsl #7
2000a7c4:	03800003 	orreq	r0, r0, #3
2000a7c8:	00000000 	andeq	r0, r0, r0
2000a7cc:	0c000000 	stceq	0, cr0, [r0], {-0}
2000a7d0:	00100000 	andseq	r0, r0, r0
	...

2000a7e4 <flame2_light_bits>:
	...
2000a7ec:	00020000 	andeq	r0, r2, r0
2000a7f0:	20000220 	andcs	r0, r0, r0, lsr #4
2000a7f4:	05400005 	strbeq	r0, [r0, #-5]
2000a7f8:	00054000 	andeq	r4, r5, r0
2000a7fc:	fc0026f4 	stc2	6, cr2, [r0], {244}	; 0xf4
2000a800:	137c0027 	cmnne	ip, #39	; 0x27
2000a804:	00fbda00 	rscseq	sp, fp, r0, lsl #20
2000a808:	9e007fea 	cdpls	15, 0, cr7, cr0, cr10, {7}
2000a80c:	d818006d 	ldmdale	r8, {r0, r2, r3, r5, r6}
2000a810:	00e01c00 	rsceq	r1, r0, r0, lsl #24
2000a814:	1e00f01c 	mcrne	0, 0, pc, cr0, cr12, {0}	; <UNPREDICTABLE>
2000a818:	701e0078 	andsvc	r0, lr, r8, ror r0
2000a81c:	00f01c00 	rscseq	r1, r0, r0, lsl #24
2000a820:	3c003028 	stccc	0, cr3, [r0], {40}	; 0x28
2000a824:	50240070 	eorpl	r0, r4, r0, ror r0
2000a828:	01d81001 	bicseq	r1, r8, r1
2000a82c:	30004810 	andcc	r4, r0, r0, lsl r8
2000a830:	34780038 	ldrbtcc	r0, [r8], #-56	; 0xffffffc8
2000a834:	002c2000 	eoreq	r2, ip, r0
2000a838:	50003c20 	andpl	r3, r0, r0, lsr #24
2000a83c:	0c700038 	ldcleq	0, cr0, [r0], #-224	; 0xffffff20
2000a840:	001fe000 	andseq	lr, pc, r0
2000a844:	c0000fe0 	andgt	r0, r0, r0, ror #31
2000a848:	0fc0000f 	svceq	0x00c0000f
	...

2000a85c <flame3_black_bits>:
2000a85c:	02000400 	andeq	r0, r0, #0, 8
2000a860:	04000000 	streq	r0, [r0], #-0
2000a864:	00044000 	andeq	r4, r4, r0
2000a868:	a4000404 	strge	r0, [r0], #-1028	; 0xfffffbfc
2000a86c:	52a00098 	adcpl	r0, r0, #152	; 0x98
2000a870:	01028a00 	tsteq	r2, r0, lsl #20
2000a874:	00012028 	andeq	r2, r1, r8, lsr #32
2000a878:	00020100 	andeq	r0, r2, r0, lsl #2
2000a87c:	01028200 	mrseq	r8, R10_usr
2000a880:	80000092 	mulhi	r0, r2, r0
2000a884:	00810000 	addeq	r0, r1, r0
2000a888:	01400901 	cmpeq	r0, r1, lsl #18
2000a88c:	01004008 	tsteq	r0, r8
2000a890:	02000002 	andeq	r0, r0, #2
2000a894:	01004001 	tsteq	r0, r1
2000a898:	02000002 	andeq	r0, r0, #2
2000a89c:	a1000000 	mrsge	r0, (UNDEF: 0)
2000a8a0:	00002400 	andeq	r2, r0, r0, lsl #8
2000a8a4:	10004000 	andne	r4, r0, r0
2000a8a8:	40000044 	andmi	r0, r0, r4, asr #32
2000a8ac:	00400800 	subeq	r0, r0, r0, lsl #16
2000a8b0:	00000808 	andeq	r0, r0, r8, lsl #16
2000a8b4:	00000000 	andeq	r0, r0, r0
2000a8b8:	00001000 	andeq	r1, r0, r0
2000a8bc:	3200001c 	andcc	r0, r0, #28
2000a8c0:	002f0000 	eoreq	r0, pc, r0
2000a8c4:	00003f00 	andeq	r3, r0, r0, lsl #30
2000a8c8:	01000007 	tsteq	r0, r7
2000a8cc:	00010000 	andeq	r0, r1, r0
2000a8d0:	00000000 	andeq	r0, r0, r0

2000a8d4 <flame3_gray_bits>:
	...
2000a8f4:	00002000 	andeq	r2, r0, r0
2000a8f8:	00000040 	andeq	r0, r0, r0, asr #32
2000a8fc:	17600023 	strbne	r0, [r0, -r3, lsr #32]!
2000a900:	0017e000 	andseq	lr, r7, r0
2000a904:	e0000fe0 	and	r0, r0, r0, ror #31
2000a908:	3de0003d 	stclcc	0, cr0, [r0, #244]!	; 0xf4
2000a90c:	001fa000 	andseq	sl, pc, r0
2000a910:	f0001fe8 			; <UNDEFINED> instruction: 0xf0001fe8
2000a914:	0ee0000f 	cdpeq	0, 14, cr0, cr0, cr15, {0}
2000a918:	000fc000 	andeq	ip, pc, r0
2000a91c:	c0000fe0 	andgt	r0, r0, r0, ror #31
2000a920:	17c0000b 	strbne	r0, [r0, fp]
2000a924:	00078000 	andeq	r8, r7, r0
2000a928:	80000780 	andhi	r0, r0, r0, lsl #15
2000a92c:	03400003 	movteq	r0, #3
2000a930:	00030000 	andeq	r0, r3, r0
2000a934:	0c000000 	stceq	0, cr0, [r0], {-0}
2000a938:	00100000 	andseq	r0, r0, r0
	...

2000a94c <flame3_light_bits>:
2000a94c:	00000000 	andeq	r0, r0, r0
2000a950:	00400000 	subeq	r0, r0, r0
2000a954:	00020000 	andeq	r0, r2, r0
2000a958:	40000240 	andmi	r0, r0, r0, asr #4
2000a95c:	014c0002 	cmpeq	ip, r2
2000a960:	00317400 	eorseq	r7, r1, r0, lsl #8
2000a964:	fc0017d4 	stc2	7, cr1, [r0], {212}	; 0xd4
2000a968:	bff8003f 	svclt	0x00f8003f
2000a96c:	00fd5800 	rscseq	r5, sp, r0, lsl #16
2000a970:	7800ff28 	stmdavc	r0, {r3, r5, r8, r9, sl, fp, ip, sp, lr, pc}
2000a974:	e81c00dc 	ldmda	ip, {r2, r3, r4, r6, r7}
2000a978:	00a81600 	adceq	r1, r8, r0, lsl #12
2000a97c:	1e00b016 	mcrne	0, 0, fp, cr0, cr6, {0}
2000a980:	c01e00c0 	andsgt	r0, lr, r0, asr #1
2000a984:	00e01c00 	rsceq	r1, r0, r0, lsl #24
2000a988:	0c00c014 	stceq	0, cr12, [r0], {20}
2000a98c:	401c00f0 	ldrshmi	r0, [ip], -r0	; <UNPREDICTABLE>
2000a990:	00f01800 	rscseq	r1, r0, r0, lsl #16
2000a994:	2800b01c 	stmdacs	r0, {r2, r3, r4, ip, sp, pc}
2000a998:	283c0030 	ldmdacs	ip!, {r4, r5}
2000a99c:	00385400 	eorseq	r5, r8, r0, lsl #8
2000a9a0:	70003070 	andvc	r3, r0, r0, ror r0
2000a9a4:	3cb0001c 	ldccc	0, cr0, [r0], #112	; 0x70
2000a9a8:	003ce000 	eorseq	lr, ip, r0
2000a9ac:	c0001fe0 	andgt	r1, r0, r0, ror #31
2000a9b0:	0fc0000f 	svceq	0x00c0000f
	...

2000a9c4 <flame4_black_bits>:
2000a9c4:	00000100 	andeq	r0, r0, r0, lsl #2
2000a9c8:	10820000 	addne	r0, r2, r0
2000a9cc:	00008000 	andeq	r8, r0, r0
2000a9d0:	000028c8 	andeq	r2, r0, r8, asr #17
2000a9d4:	05540004 	ldrbeq	r0, [r4, #-4]
2000a9d8:	00a55400 	adceq	r5, r5, r0, lsl #8
2000a9dc:	08002420 	stmdaeq	r0, {r5, sl, sp}
2000a9e0:	50000082 	andpl	r0, r0, r2, lsl #1
2000a9e4:	01000400 	tsteq	r0, r0, lsl #8
2000a9e8:	00010444 	andeq	r0, r1, r4, asr #8
2000a9ec:	84120124 	ldrhi	r0, [r2], #-292	; 0xfffffedc
2000a9f0:	00841000 	addeq	r1, r4, r0
2000a9f4:	01008001 	tsteq	r0, r1
2000a9f8:	200100a0 	andcs	r0, r1, r0, lsr #1
2000a9fc:	01000000 	mrseq	r0, (UNDEF: 0)
2000aa00:	00000022 	andeq	r0, r0, r2, lsr #32
2000aa04:	80020000 	andhi	r0, r2, r0
2000aa08:	00808a00 	addeq	r8, r0, r0, lsl #20
2000aa0c:	04004000 	streq	r4, [r0], #-0
2000aa10:	20440000 	subcs	r0, r4, r0
2000aa14:	00200000 	eoreq	r0, r0, r0
2000aa18:	00000008 	andeq	r0, r0, r8
2000aa1c:	00000010 	andeq	r0, r0, r0, lsl r0
2000aa20:	00001000 	andeq	r1, r0, r0
2000aa24:	3200001c 	andcc	r0, r0, #28
2000aa28:	002f0000 	eoreq	r0, pc, r0
2000aa2c:	00003f00 	andeq	r3, r0, r0, lsl #30
2000aa30:	01000007 	tsteq	r0, r7
2000aa34:	00010000 	andeq	r0, r1, r0
2000aa38:	00000000 	andeq	r0, r0, r0

2000aa3c <flame4_gray_bits>:
	...
2000aa60:	40000000 	andmi	r0, r0, r0
2000aa64:	08200010 	stmdaeq	r0!, {r4}
2000aa68:	0008c000 	andeq	ip, r8, r0
2000aa6c:	f0000fc4 			; <UNDEFINED> instruction: 0xf0000fc4
2000aa70:	1ff80007 	svcne	0x00f80007
2000aa74:	001ff000 	andseq	pc, pc, r0
2000aa78:	f0001fd0 			; <UNDEFINED> instruction: 0xf0001fd0
2000aa7c:	1fc0001f 	svcne	0x00c0001f
2000aa80:	001f5000 	andseq	r5, pc, r0
2000aa84:	e0000fe0 	and	r0, r0, r0, ror #31
2000aa88:	07800007 	streq	r0, [r0, r7]
2000aa8c:	00078000 	andeq	r8, r7, r0
2000aa90:	00000780 	andeq	r0, r0, r0, lsl #15
2000aa94:	0300000b 	movweq	r0, #11
2000aa98:	00010000 	andeq	r0, r1, r0
2000aa9c:	0c000000 	stceq	0, cr0, [r0], {-0}
2000aaa0:	00100000 	andseq	r0, r0, r0
	...

2000aab4 <flame4_light_bits>:
	...
2000aabc:	00040000 	andeq	r0, r4, r0
2000aac0:	40000400 	andmi	r0, r0, r0, lsl #8
2000aac4:	c8800048 	stmgt	r0, {r3, r6}
2000aac8:	00488000 	subeq	r8, r8, r0
2000aacc:	e4004ac4 	str	r4, [r0], #-2756	; 0xfffff53c
2000aad0:	2fec007d 	svccs	0x00ec007d
2000aad4:	00fff800 	rscseq	pc, pc, r0, lsl #16
2000aad8:	be00fbb8 	vmovlt.16	d16[0], pc
2000aadc:	73cc00cb 	bicvc	r0, ip, #203	; 0xcb
2000aae0:	00732e00 	rsbseq	r2, r3, r0, lsl #28
2000aae4:	0e00703a 	mcreq	0, 0, r7, cr0, cr10, {1}
2000aae8:	c0060050 	andgt	r0, r6, r0, asr r0
2000aaec:	00e00e00 	rsceq	r0, r0, r0, lsl #28
2000aaf0:	0e00a00c 	cdpeq	0, 0, cr10, cr0, cr12, {0}
2000aaf4:	601c00e0 	andsvs	r0, ip, r0, ror #1
2000aaf8:	00602400 	rsbeq	r2, r0, r0, lsl #8
2000aafc:	1800301c 	stmdane	r0, {r2, r3, r4, ip, sp}
2000ab00:	50380078 	eorspl	r0, r8, r8, ror r0
2000ab04:	00587000 	subseq	r7, r8, r0
2000ab08:	f0003830 			; <UNDEFINED> instruction: 0xf0003830
2000ab0c:	1cf00024 	ldclne	0, cr0, [r0], #144	; 0x90
2000ab10:	001ee000 	andseq	lr, lr, r0
2000ab14:	c0001fe0 	andgt	r1, r0, r0, ror #31
2000ab18:	0fc0000f 	svceq	0x00c0000f
	...

2000ab2c <firstTime.4079>:
2000ab2c:	00000001 	andeq	r0, r0, r1

2000ab30 <boom1_black_bits>:
	...
2000ac94:	0000003e 	andeq	r0, r0, lr, lsr r0
	...
2000aca0:	00630000 	rsbeq	r0, r3, r0
	...
2000acac:	80000000 	andhi	r0, r0, r0
2000acb0:	00000043 	andeq	r0, r0, r3, asr #32
	...
2000acbc:	00638000 	rsbeq	r8, r3, r0
	...
2000acc8:	80000000 	andhi	r0, r0, r0
2000accc:	0000003f 	andeq	r0, r0, pc, lsr r0
	...
2000acd8:	001f0000 	andseq	r0, pc, r0
	...

2000ae34 <boom1_gray_bits>:
	...
2000afa4:	00040000 	andeq	r0, r4, r0
	...
2000afb4:	00000024 	andeq	r0, r0, r4, lsr #32
	...
2000afc0:	001c0000 	andseq	r0, ip, r0
	...

2000b138 <boom1_light_bits>:
	...
2000b2a8:	00180000 	andseq	r0, r8, r0
	...
2000b2b8:	00000018 	andeq	r0, r0, r8, lsl r0
	...

2000b43c <boom2_black_bits>:
	...
2000b558:	00007c00 	andeq	r7, r0, r0, lsl #24
	...
2000b564:	fe000000 	cdp2	0, 0, cr0, cr0, cr0, {0}
2000b568:	00000038 	andeq	r0, r0, r8, lsr r0
	...
2000b574:	0fffff00 	svceq	0x00ffff00
	...
2000b580:	ff800000 			; <UNDEFINED> instruction: 0xff800000
2000b584:	00001fff 	strdeq	r1, [r0], -pc	; <UNPREDICTABLE>
	...
2000b590:	3ffeff80 	svccc	0x00feff80
	...
2000b59c:	ffc00000 			; <UNDEFINED> instruction: 0xffc00000
2000b5a0:	00007f00 	andeq	r7, r0, r0, lsl #30
	...
2000b5ac:	7c01ffc0 	stcvc	15, cr15, [r1], {192}	; 0xc0
	...
2000b5b8:	ff800000 			; <UNDEFINED> instruction: 0xff800000
2000b5bc:	0000ff01 	andeq	pc, r0, r1, lsl #30
	...
2000b5c8:	fff1f800 	vcmla.f32	d31, d1, d0[0], #270
	...
2000b5d4:	f8000000 			; <UNDEFINED> instruction: 0xf8000000
2000b5d8:	0000ffff 	strdeq	pc, [r0], -pc	; <UNPREDICTABLE>
	...
2000b5e4:	fffff000 			; <UNDEFINED> instruction: 0xfffff000
	...
2000b5f0:	f8000000 			; <UNDEFINED> instruction: 0xf8000000
2000b5f4:	0000603f 	andeq	r6, r0, pc, lsr r0
	...
2000b600:	001ffc00 	andseq	pc, pc, r0, lsl #24
	...
2000b60c:	fc000000 	stc2	0, cr0, [r0], {-0}
2000b610:	0000000f 	andeq	r0, r0, pc
	...
2000b61c:	0003fc00 	andeq	pc, r3, r0, lsl #24
	...
2000b628:	f8000000 			; <UNDEFINED> instruction: 0xf8000000
2000b62c:	00000001 	andeq	r0, r0, r1
	...

2000b740 <boom2_gray_bits>:
	...
2000b894:	00010000 	andeq	r0, r1, r0
	...
2000b8a4:	0000000f 	andeq	r0, r0, pc
	...
2000b8b0:	03020000 	movweq	r0, #8192	; 0x2000
	...
2000b8c0:	000000fe 	strdeq	r0, [r0], -lr
	...
2000b8cc:	000e0000 	andeq	r0, lr, r0
	...

2000ba44 <boom2_light_bits>:
	...
2000bba8:	000000f0 	strdeq	r0, [r0], -r0	; <UNPREDICTABLE>
	...
2000bbb4:	00fc0000 	rscseq	r0, ip, r0
	...

2000bd48 <boom3_black_bits>:
	...
2000be1c:	000e0000 	andeq	r0, lr, r0
	...
2000be28:	80000000 	andhi	r0, r0, r0
2000be2c:	000001ff 	strdeq	r0, [r0], -pc	; <UNPREDICTABLE>
	...
2000be38:	03ffc000 	mvnseq	ip, #0
	...
2000be44:	e0000000 	and	r0, r0, r0
2000be48:	000007ff 	strdeq	r0, [r0], -pc	; <UNPREDICTABLE>
2000be4c:	000001fc 	strdeq	r0, [r0], -ip
2000be50:	00000000 	andeq	r0, r0, r0
2000be54:	1f8ff000 	svcne	0x008ff000
2000be58:	03ff0000 	mvnseq	r0, #0
2000be5c:	00000000 	andeq	r0, r0, r0
2000be60:	f0000000 			; <UNDEFINED> instruction: 0xf0000000
2000be64:	e0003e1f 	and	r3, r0, pc, lsl lr
2000be68:	000007ff 	strdeq	r0, [r0], -pc	; <UNPREDICTABLE>
2000be6c:	00000000 	andeq	r0, r0, r0
2000be70:	783ff000 	ldmdavc	pc!, {ip, sp, lr, pc}	; <UNPREDICTABLE>
2000be74:	07fff800 	ldrbeq	pc, [pc, r0, lsl #16]!	; <UNPREDICTABLE>
2000be78:	00000000 	andeq	r0, r0, r0
2000be7c:	f0000000 			; <UNDEFINED> instruction: 0xf0000000
2000be80:	fc00f8ff 	stc2	8, cr15, [r0], {255}	; 0xff
2000be84:	000007ff 	strdeq	r0, [r0], -pc	; <UNPREDICTABLE>
2000be88:	00000000 	andeq	r0, r0, r0
2000be8c:	ffffe000 			; <UNDEFINED> instruction: 0xffffe000
2000be90:	0fe03e00 	svceq	0x00e03e00
2000be94:	00000000 	andeq	r0, r0, r0
2000be98:	c0000000 	andgt	r0, r0, r0
2000be9c:	0700ffff 			; <UNDEFINED> instruction: 0x0700ffff
2000bea0:	00001fe0 	andeq	r1, r0, r0, ror #31
2000bea4:	00000000 	andeq	r0, r0, r0
2000bea8:	3fffc000 	svccc	0x00ffc000
2000beac:	3fe00300 	svccc	0x00e00300
2000beb0:	00000000 	andeq	r0, r0, r0
2000beb4:	e0000000 	and	r0, r0, r0
2000beb8:	ff1c07ff 			; <UNDEFINED> instruction: 0xff1c07ff
2000bebc:	00003fff 	strdeq	r3, [r0], -pc	; <UNPREDICTABLE>
2000bec0:	00000000 	andeq	r0, r0, r0
2000bec4:	81ffc000 	mvnshi	ip, r0
2000bec8:	3fffff3f 	svccc	0x00ffff3f
	...
2000bed4:	fe7fc07f 	mrc2	0, 3, ip, cr15, cr15, {3}
2000bed8:	00003fff 	strdeq	r3, [r0], -pc	; <UNPREDICTABLE>
2000bedc:	00000000 	andeq	r0, r0, r0
2000bee0:	e0000000 	and	r0, r0, r0
2000bee4:	0ffff87f 	svceq	0x00fff87f
	...
2000bef0:	007df800 	rsbseq	pc, sp, r0, lsl #16
2000bef4:	000007fe 	strdeq	r0, [r0], -lr
2000bef8:	00000000 	andeq	r0, r0, r0
2000befc:	fc000000 	stc2	0, cr0, [r0], {-0}
2000bf00:	03fc00f8 	mvnseq	r0, #248	; 0xf8
	...
2000bf0c:	01f87e00 	mvnseq	r7, r0, lsl #28
2000bf10:	00000030 	andeq	r0, r0, r0, lsr r0
2000bf14:	00000000 	andeq	r0, r0, r0
2000bf18:	7f800000 	svcvc	0x00800000
2000bf1c:	000003f8 	strdeq	r0, [r0], -r8
	...
2000bf28:	07fc7fc0 	ldrbeq	r7, [ip, r0, asr #31]!
	...
2000bf34:	fff00000 			; <UNDEFINED> instruction: 0xfff00000	; IMB
2000bf38:	000007ff 	strdeq	r0, [r0], -pc	; <UNPREDICTABLE>
	...
2000bf44:	07fffff0 			; <UNDEFINED> instruction: 0x07fffff0
	...
2000bf50:	ffc00000 			; <UNDEFINED> instruction: 0xffc00000
2000bf54:	000007ff 	strdeq	r0, [r0], -pc	; <UNPREDICTABLE>
	...
2000bf60:	03ffbe00 	mvnseq	fp, #0, 28
	...
2000bf70:	000003fe 	strdeq	r0, [r0], -lr
	...
2000bf7c:	01f00000 	mvnseq	r0, r0
	...

2000c04c <boom3_gray_bits>:
	...
2000c158:	00700000 	rsbseq	r0, r0, r0
	...
2000c168:	00000020 	andeq	r0, r0, r0, lsr #32
	...
2000c174:	04c00000 	strbeq	r0, [r0], #0
	...
2000c184:	00000700 	andeq	r0, r0, r0, lsl #14
	...
2000c194:	0010c000 	andseq	ip, r0, r0
	...
2000c1a0:	78000000 	stmdavc	r0, {}	; <UNPREDICTABLE>
2000c1a4:	00000010 	andeq	r0, r0, r0, lsl r0
	...
2000c1b0:	001ffc00 	andseq	pc, pc, r0, lsl #24
	...
2000c1f4:	00020000 	andeq	r0, r2, r0
	...
2000c204:	00000001 	andeq	r0, r0, r1
	...
2000c210:	00018000 	andeq	r8, r1, r0
	...
2000c21c:	80000000 	andhi	r0, r0, r0
2000c220:	00000007 	andeq	r0, r0, r7
	...
2000c22c:	00038000 	andeq	r8, r3, r0
	...

2000c350 <boom3_light_bits>:
	...
2000c46c:	000001c0 	andeq	r0, r0, r0, asr #3
	...
2000c478:	03000000 	movweq	r0, #0
	...
2000c498:	000f0000 	andeq	r0, pc, r0
	...
2000c4a4:	80000000 	andhi	r0, r0, r0
2000c4a8:	0000000f 	andeq	r0, r0, pc
	...
2000c508:	00000006 	andeq	r0, r0, r6
	...
2000c514:	00060000 	andeq	r0, r6, r0
	...

2000c654 <boom4_black_bits>:
	...
2000c6b0:	00000060 	andeq	r0, r0, r0, rrx
2000c6b4:	00000000 	andeq	r0, r0, r0
2000c6b8:	7c000000 	stcvc	0, cr0, [r0], {-0}
2000c6bc:	00200000 	eoreq	r0, r0, r0
	...
2000c6c8:	0001fc00 	andeq	pc, r1, r0, lsl #24
	...
2000c6d4:	f8000000 			; <UNDEFINED> instruction: 0xf8000000
2000c6d8:	00000003 	andeq	r0, r0, r3
	...
2000c6e4:	0003f000 	andeq	pc, r3, r0
	...
2000c6f0:	607ff000 	rsbsvs	pc, pc, r0
2000c6f4:	f8000007 			; <UNDEFINED> instruction: 0xf8000007
2000c6f8:	00000001 	andeq	r0, r0, r1
2000c6fc:	ff81c000 			; <UNDEFINED> instruction: 0xff81c000
2000c700:	0007e1ff 	strdeq	lr, [r7], -pc	; <UNPREDICTABLE>
2000c704:	0783ff80 	streq	pc, [r3, r0, lsl #31]
2000c708:	c0000000 	andgt	r0, r0, r0
2000c70c:	f3ffff81 			; <UNDEFINED> instruction: 0xf3ffff81
2000c710:	ffffe003 			; <UNDEFINED> instruction: 0xffffe003
2000c714:	00000783 	andeq	r0, r0, r3, lsl #15
2000c718:	ff80c000 			; <UNDEFINED> instruction: 0xff80c000
2000c71c:	f003f7ff 			; <UNDEFINED> instruction: 0xf003f7ff
2000c720:	0787ffff 			; <UNDEFINED> instruction: 0x0787ffff
2000c724:	00000000 	andeq	r0, r0, r0
2000c728:	f7c3ff80 			; <UNDEFINED> instruction: 0xf7c3ff80
2000c72c:	cffff003 	svcgt	0x00fff003
2000c730:	00000787 	andeq	r0, r0, r7, lsl #15
2000c734:	ff800000 			; <UNDEFINED> instruction: 0xff800000
2000c738:	f001efe3 			; <UNDEFINED> instruction: 0xf001efe3
2000c73c:	030787ff 	movweq	r8, #30719	; 0x77ff
2000c740:	00000000 	andeq	r0, r0, r0
2000c744:	8ff0ff80 	svchi	0x00f0ff80
2000c748:	87fff001 	ldrbhi	pc, [pc, r1]!	; <UNPREDICTABLE>
2000c74c:	00000003 	andeq	r0, r0, r3
2000c750:	7f800000 	svcvc	0x00800000
2000c754:	e0000ff8 	strd	r0, [r0], -r8
2000c758:	00c387ff 	strdeq	r8, [r3], #127	; 0x7f
2000c75c:	00000000 	andeq	r0, r0, r0
2000c760:	07ffff80 	ldrbeq	pc, [pc, r0, lsl #31]!	; <UNPREDICTABLE>
2000c764:	c7fff800 	ldrbgt	pc, [pc, r0, lsl #16]!	; <UNPREDICTABLE>
2000c768:	000000c3 	andeq	r0, r0, r3, asr #1
2000c76c:	ffc00000 			; <UNDEFINED> instruction: 0xffc00000
2000c770:	fc0003ff 	stc2	3, cr0, [r0], {255}	; 0xff
2000c774:	0001e3ff 	strdeq	lr, [r1], -pc	; <UNPREDICTABLE>
2000c778:	c0000000 	andgt	r0, r0, r0
2000c77c:	039fffc0 	orrseq	pc, pc, #192, 30	; 0x300
2000c780:	f9fffc00 			; <UNDEFINED> instruction: 0xf9fffc00
2000c784:	00000000 	andeq	r0, r0, r0
2000c788:	ffe0c000 			; <UNDEFINED> instruction: 0xffe0c000
2000c78c:	fc007807 	stc2	8, cr7, [r0], {7}
2000c790:	00007fff 	strdeq	r7, [r0], -pc	; <UNPREDICTABLE>
2000c794:	00000000 	andeq	r0, r0, r0
2000c798:	7e03ffe0 	cdpvc	15, 0, cr15, cr3, cr0, {7}
2000c79c:	3ffffc00 	svccc	0x00fffc00
2000c7a0:	0000001c 	andeq	r0, r0, ip, lsl r0
2000c7a4:	ffc00000 			; <UNDEFINED> instruction: 0xffc00000
2000c7a8:	fc00ff00 	stc2	15, cr15, [r0], {-0}
2000c7ac:	007e1fff 	ldrshteq	r1, [lr], #-255	; 0xffffff01
2000c7b0:	00000000 	andeq	r0, r0, r0
2000c7b4:	7f803f00 	svcvc	0x00803f00
2000c7b8:	3ffe3800 	svccc	0x00fe3800
2000c7bc:	000000fe 	strdeq	r0, [r0], -lr
2000c7c0:	00000000 	andeq	r0, r0, r0
2000c7c4:	02007f80 	andeq	r7, r0, #128, 30	; 0x200
2000c7c8:	00fe1ff8 	ldrshteq	r1, [lr], #248	; 0xf8
2000c7cc:	00000000 	andeq	r0, r0, r0
2000c7d0:	7f800000 	svcvc	0x00800000
2000c7d4:	1ff00700 	svcne	0x00f00700
2000c7d8:	000000ee 	andeq	r0, r0, lr, ror #1
2000c7dc:	00000000 	andeq	r0, r0, r0
2000c7e0:	0787ff80 	streq	pc, [r7, r0, lsl #31]
2000c7e4:	006607e0 	rsbeq	r0, r6, r0, ror #15
2000c7e8:	00000000 	andeq	r0, r0, r0
2000c7ec:	ff83c000 			; <UNDEFINED> instruction: 0xff83c000
2000c7f0:	00000fc3 	andeq	r0, r0, r3, asr #31
2000c7f4:	00000076 	andeq	r0, r0, r6, ror r0
2000c7f8:	e0000000 	and	r0, r0, r0
2000c7fc:	0fffffc3 	svceq	0x00ffffc3
2000c800:	003f0000 	eorseq	r0, pc, r0
2000c804:	00000000 	andeq	r0, r0, r0
2000c808:	ffe3f000 			; <UNDEFINED> instruction: 0xffe3f000
2000c80c:	80000fff 	strdhi	r0, [r0], -pc	; <UNPREDICTABLE>
2000c810:	0000003f 	andeq	r0, r0, pc, lsr r0
2000c814:	f0000000 			; <UNDEFINED> instruction: 0xf0000000
2000c818:	0ffffff3 	svceq	0x00fffff3
2000c81c:	003f81fe 	ldrshteq	r8, [pc], -lr
2000c820:	00000000 	andeq	r0, r0, r0
2000c824:	9ffbe000 	svcls	0x00fbe000
2000c828:	81ff03ff 	ldrshhi	r0, [pc, #63]	; 2000c86f <boom4_black_bits+0x21b>
2000c82c:	0000001f 	andeq	r0, r0, pc, lsl r0
2000c830:	00000000 	andeq	r0, r0, r0
2000c834:	00ff1ff8 	ldrshteq	r1, [pc], #248
2000c838:	000001ff 	strdeq	r0, [r0], -pc	; <UNPREDICTABLE>
2000c83c:	00000000 	andeq	r0, r0, r0
2000c840:	3ff80000 	svccc	0x00f80000
2000c844:	00fe001f 	rscseq	r0, lr, pc, lsl r0
	...
2000c850:	001e7ff8 			; <UNDEFINED> instruction: 0x001e7ff8
2000c854:	000000fc 	strdeq	r0, [r0], -ip
2000c858:	00000000 	andeq	r0, r0, r0
2000c85c:	fffc0000 			; <UNDEFINED> instruction: 0xfffc0000
2000c860:	0078003f 	rsbseq	r0, r8, pc, lsr r0
	...
2000c86c:	007ffffc 	ldrshteq	pc, [pc], #-252	; <UNPREDICTABLE>
	...
2000c878:	fffe0000 			; <UNDEFINED> instruction: 0xfffe0000
2000c87c:	0000007f 	andeq	r0, r0, pc, ror r0
2000c880:	00000000 	andeq	r0, r0, r0
2000c884:	04000000 	streq	r0, [r0], #-0
2000c888:	007fc07e 	rsbseq	ip, pc, lr, ror r0	; <UNPREDICTABLE>
	...
2000c894:	001e0000 	andseq	r0, lr, r0
2000c898:	0000007f 	andeq	r0, r0, pc, ror r0
	...
2000c8a4:	1c3c1e0c 	ldcne	14, cr1, [ip], #-48	; 0xffffffd0
	...
2000c8b0:	ff000000 			; <UNDEFINED> instruction: 0xff000000
2000c8b4:	00007c00 	andeq	r7, r0, r0, lsl #24
	...
2000c8c0:	fc01ff00 	stc2	15, cr15, [r1], {-0}
	...
2000c8cc:	ff000000 			; <UNDEFINED> instruction: 0xff000000
2000c8d0:	0000fc01 	andeq	pc, r0, r1, lsl #24
	...
2000c8dc:	fc01fc00 	stc2	12, cr15, [r1], {-0}
2000c8e0:	00000001 	andeq	r0, r0, r1
2000c8e4:	00000000 	andeq	r0, r0, r0
2000c8e8:	e0000000 	and	r0, r0, r0
2000c8ec:	0000f801 	andeq	pc, r0, r1, lsl #16
	...

2000c958 <boom4_gray_bits>:
	...
2000c9f4:	80000000 	andhi	r0, r0, r0
	...
2000ca2c:	002c0000 	eoreq	r0, ip, r0
2000ca30:	30000000 	andcc	r0, r0, r0
	...
2000ca3c:	00000004 	andeq	r0, r0, r4
2000ca40:	00001800 	andeq	r1, r0, r0, lsl #16
2000ca44:	00000000 	andeq	r0, r0, r0
2000ca48:	000f0000 	andeq	r0, pc, r0
2000ca4c:	58000000 	stmdapl	r0, {}	; <UNPREDICTABLE>
2000ca50:	00000000 	andeq	r0, r0, r0
2000ca54:	80000000 	andhi	r0, r0, r0
2000ca58:	00000007 	andeq	r0, r0, r7
2000ca5c:	00005800 	andeq	r5, r0, r0, lsl #16
	...
2000ca68:	38000000 	stmdacc	r0, {}	; <UNPREDICTABLE>
	...
2000ca78:	00001c00 	andeq	r1, r0, r0, lsl #24
	...
2000ca84:	06000000 	streq	r0, [r0], -r0
	...
2000cac8:	01c00000 	biceq	r0, r0, r0
	...
2000cad8:	00000020 	andeq	r0, r0, r0, lsr #32
2000cadc:	00000010 	andeq	r0, r0, r0, lsl r0
2000cae0:	00000000 	andeq	r0, r0, r0
2000cae4:	00380000 	eorseq	r0, r8, r0
2000cae8:	00180000 	andseq	r0, r8, r0
	...
2000caf4:	0000003c 	andeq	r0, r0, ip, lsr r0
2000caf8:	00000008 	andeq	r0, r0, r8
	...
2000cb28:	60000000 	andvs	r0, r0, r0
	...
2000cb38:	00006000 	andeq	r6, r0, r0
	...
2000cb44:	c0000000 	andgt	r0, r0, r0
	...
2000cb54:	00018000 	andeq	r8, r1, r0
	...

2000cc5c <boom4_light_bits>:
	...
2000cd30:	00100000 	andseq	r0, r0, r0
	...
2000cd40:	00000018 	andeq	r0, r0, r8, lsl r0
2000cd44:	00006000 	andeq	r6, r0, r0
	...
2000cd50:	20000000 	andcs	r0, r0, r0
	...
2000cd60:	00002000 	andeq	r2, r0, r0
	...
2000cddc:	000000c0 	andeq	r0, r0, r0, asr #1
	...
2000cde8:	00400000 	subeq	r0, r0, r0
	...
2000ce3c:	00008000 	andeq	r8, r0, r0
	...

2000cf60 <boom5_black_bits>:
	...
2000cfbc:	00000060 	andeq	r0, r0, r0, rrx
2000cfc0:	00000000 	andeq	r0, r0, r0
2000cfc4:	7c000000 	stcvc	0, cr0, [r0], {-0}
2000cfc8:	00200000 	eoreq	r0, r0, r0
	...
2000cfd4:	0001fc00 	andeq	pc, r1, r0, lsl #24
2000cfd8:	00000020 	andeq	r0, r0, r0, lsr #32
2000cfdc:	00000000 	andeq	r0, r0, r0
2000cfe0:	f8000000 			; <UNDEFINED> instruction: 0xf8000000
2000cfe4:	00000003 	andeq	r0, r0, r3
	...
2000cff0:	0003f000 	andeq	pc, r3, r0
	...
2000cffc:	607ff000 	rsbsvs	pc, pc, r0
2000d000:	f8000006 			; <UNDEFINED> instruction: 0xf8000006
2000d004:	00000001 	andeq	r0, r0, r1
2000d008:	ff81c000 			; <UNDEFINED> instruction: 0xff81c000
2000d00c:	0006e1ff 	strdeq	lr, [r6], -pc	; <UNPREDICTABLE>
2000d010:	0783ff80 	streq	pc, [r3, r0, lsl #31]
2000d014:	c0000000 	andgt	r0, r0, r0
2000d018:	f3ffff81 			; <UNDEFINED> instruction: 0xf3ffff81
2000d01c:	ffffe00e 			; <UNDEFINED> instruction: 0xffffe00e
2000d020:	00000783 	andeq	r0, r0, r3, lsl #15
2000d024:	ff80c000 			; <UNDEFINED> instruction: 0xff80c000
2000d028:	f007f7ff 			; <UNDEFINED> instruction: 0xf007f7ff
2000d02c:	0787ffff 			; <UNDEFINED> instruction: 0x0787ffff
2000d030:	00000000 	andeq	r0, r0, r0
2000d034:	f7f1ff80 			; <UNDEFINED> instruction: 0xf7f1ff80
2000d038:	cffff007 	svcgt	0x00fff007
2000d03c:	00000787 	andeq	r0, r0, r7, lsl #15
2000d040:	ff800000 			; <UNDEFINED> instruction: 0xff800000
2000d044:	f003eff0 			; <UNDEFINED> instruction: 0xf003eff0
2000d048:	0707c3ff 			; <UNDEFINED> instruction: 0x0707c3ff
2000d04c:	00000000 	andeq	r0, r0, r0
2000d050:	cff0ff80 	svcgt	0x00f0ff80
2000d054:	c3fff003 	mvnsgt	pc, #3
2000d058:	00000603 	andeq	r0, r0, r3, lsl #12
2000d05c:	7f800000 	svcvc	0x00800000
2000d060:	e0038ff8 	strd	r8, [r3], -r8	; <UNPREDICTABLE>
2000d064:	04c3e3ff 	strbeq	lr, [r3], #1023	; 0x3ff
2000d068:	00000000 	andeq	r0, r0, r0
2000d06c:	07f87f80 	ldrbeq	r7, [r8, r0, lsl #31]!
2000d070:	e3fff803 	mvns	pc, #196608	; 0x30000
2000d074:	000004c3 	andeq	r0, r0, r3, asr #9
2000d078:	3fc00000 	svccc	0x00c00000
2000d07c:	fc0003ff 	stc2	3, cr0, [r0], {255}	; 0xff
2000d080:	0481f3ff 	streq	pc, [r1], #1023	; 0x3ff
2000d084:	c0000000 	andgt	r0, r0, r0
2000d088:	03bfffc0 			; <UNDEFINED> instruction: 0x03bfffc0
2000d08c:	f9fffc00 			; <UNDEFINED> instruction: 0xf9fffc00
2000d090:	00000081 	andeq	r0, r0, r1, lsl #1
2000d094:	ffe0c000 			; <UNDEFINED> instruction: 0xffe0c000
2000d098:	fc00781f 	stc2	8, cr7, [r0], {31}
2000d09c:	0001fcff 	strdeq	pc, [r1], -pc	; <UNPREDICTABLE>
2000d0a0:	40000000 	andmi	r0, r0, r0
2000d0a4:	7e07ffe0 	cdpvc	15, 0, cr15, cr7, cr0, {7}
2000d0a8:	3ffffc00 	svccc	0x00fffc00
2000d0ac:	0000001c 	andeq	r0, r0, ip, lsl r0
2000d0b0:	ffc04000 			; <UNDEFINED> instruction: 0xffc04000
2000d0b4:	fc00ff07 	stc2	15, cr15, [r0], {7}
2000d0b8:	007e1fff 	ldrshteq	r1, [lr], #-255	; 0xffffff01
2000d0bc:	00000000 	andeq	r0, r0, r0
2000d0c0:	7f83ffc0 	svcvc	0x0083ffc0
2000d0c4:	3ffe7800 	svccc	0x00fe7800
2000d0c8:	000000fe 	strdeq	r0, [r0], -lr
2000d0cc:	ff800000 			; <UNDEFINED> instruction: 0xff800000
2000d0d0:	63007f81 	movwvs	r7, #3969	; 0xf81
2000d0d4:	00fe1ff8 	ldrshteq	r1, [lr], #248	; 0xf8
2000d0d8:	00000000 	andeq	r0, r0, r0
2000d0dc:	7f803f00 	svcvc	0x00803f00
2000d0e0:	1ff06700 	svcne	0x00f06700
2000d0e4:	000000f6 	strdeq	r0, [r0], -r6
2000d0e8:	02000000 	andeq	r0, r0, #0
2000d0ec:	4781ff80 	strmi	pc, [r1, r0, lsl #31]
2000d0f0:	00660fe0 	rsbeq	r0, r6, r0, ror #31
2000d0f4:	00000000 	andeq	r0, r0, r0
2000d0f8:	ff83c000 			; <UNDEFINED> instruction: 0xff83c000
2000d0fc:	0e004fc0 	cdpeq	15, 0, cr4, cr0, cr0, {6}
2000d100:	00000066 	andeq	r0, r0, r6, rrx
2000d104:	e0000000 	and	r0, r0, r0
2000d108:	0ff07fc3 	svceq	0x00f07fc3
2000d10c:	00770c00 	rsbseq	r0, r7, r0, lsl #24
2000d110:	00000000 	andeq	r0, r0, r0
2000d114:	7fe3f000 	svcvc	0x00e3f000
2000d118:	8c000fff 	stchi	15, cr0, [r0], {255}	; 0xff
2000d11c:	0000007f 	andeq	r0, r0, pc, ror r0
2000d120:	f0000000 			; <UNDEFINED> instruction: 0xf0000000
2000d124:	0ffffff3 	svceq	0x00fffff3
2000d128:	007f81fe 	ldrshteq	r8, [pc], #-30
2000d12c:	00000000 	andeq	r0, r0, r0
2000d130:	fffbe000 			; <UNDEFINED> instruction: 0xfffbe000
2000d134:	81ff03ff 	ldrshhi	r0, [pc, #63]	; 2000d17b <boom5_black_bits+0x21b>
2000d138:	0000007f 	andeq	r0, r0, pc, ror r0
2000d13c:	00000000 	andeq	r0, r0, r0
2000d140:	00ff1ff8 	ldrshteq	r1, [pc], #248
2000d144:	006f01ff 	strdeq	r0, [pc], #-31	; <UNPREDICTABLE>
2000d148:	00000000 	andeq	r0, r0, r0
2000d14c:	0ff80000 	svceq	0x00f80000
2000d150:	00fe001e 	rscseq	r0, lr, lr, lsl r0
2000d154:	00000042 	andeq	r0, r0, r2, asr #32
2000d158:	00000000 	andeq	r0, r0, r0
2000d15c:	001e7ff8 			; <UNDEFINED> instruction: 0x001e7ff8
2000d160:	004200fe 	strdeq	r0, [r2], #-14
2000d164:	00000000 	andeq	r0, r0, r0
2000d168:	fffc0000 			; <UNDEFINED> instruction: 0xfffc0000
2000d16c:	007c003c 	rsbseq	r0, ip, ip, lsr r0
	...
2000d178:	007ffffc 	ldrshteq	pc, [pc], #-252	; <UNPREDICTABLE>
2000d17c:	0000001c 	andeq	r0, r0, ip, lsl r0
2000d180:	00000000 	andeq	r0, r0, r0
2000d184:	fffe0000 			; <UNDEFINED> instruction: 0xfffe0000
2000d188:	000c007f 	andeq	r0, ip, pc, ror r0
2000d18c:	00000000 	andeq	r0, r0, r0
2000d190:	04000000 	streq	r0, [r0], #-0
2000d194:	007fc07e 	rsbseq	ip, pc, lr, ror r0	; <UNPREDICTABLE>
2000d198:	0000000c 	andeq	r0, r0, ip
2000d19c:	00000000 	andeq	r0, r0, r0
2000d1a0:	001e0000 	andseq	r0, lr, r0
2000d1a4:	0000007f 	andeq	r0, r0, pc, ror r0
	...
2000d1b0:	1c3c1e0e 	ldcne	14, cr1, [ip], #-56	; 0xffffffc8
	...
2000d1bc:	ff0c0000 			; <UNDEFINED> instruction: 0xff0c0000
2000d1c0:	00007c00 	andeq	r7, r0, r0, lsl #24
	...
2000d1cc:	fc01ff0c 	stc2	15, cr15, [r1], {12}
	...
2000d1d8:	ff040000 			; <UNDEFINED> instruction: 0xff040000
2000d1dc:	0000fc01 	andeq	pc, r0, r1, lsl #24
	...
2000d1e8:	fc01fc00 	stc2	12, cr15, [r1], {-0}
2000d1ec:	00000001 	andeq	r0, r0, r1
2000d1f0:	00000000 	andeq	r0, r0, r0
2000d1f4:	f0000000 			; <UNDEFINED> instruction: 0xf0000000
2000d1f8:	0000f801 	andeq	pc, r0, r1, lsl #16
	...
2000d204:	9801f000 	stmdals	r1, {ip, sp, lr, pc}
	...
2000d210:	c0000000 	andgt	r0, r0, r0
2000d214:	00001000 	andeq	r1, r0, r0
	...
2000d220:	10000000 	andne	r0, r0, r0
	...

2000d264 <boom5_gray_bits>:
	...
2000d300:	80000000 	andhi	r0, r0, r0
	...
2000d310:	00010000 	andeq	r0, r1, r0
	...
2000d320:	00000001 	andeq	r0, r0, r1
	...
2000d338:	000e0000 	andeq	r0, lr, r0
2000d33c:	20000000 	andcs	r0, r0, r0
	...
2000d348:	00000007 	andeq	r0, r0, r7
2000d34c:	00000c00 	andeq	r0, r0, r0, lsl #24
2000d350:	00000000 	andeq	r0, r0, r0
2000d354:	00030000 	andeq	r0, r3, r0
2000d358:	0c000000 	stceq	0, cr0, [r0], {-0}
2000d35c:	00000000 	andeq	r0, r0, r0
2000d360:	80000000 	andhi	r0, r0, r0
2000d364:	00000001 	andeq	r0, r0, r1
2000d368:	00000400 	andeq	r0, r0, r0, lsl #8
2000d36c:	00000000 	andeq	r0, r0, r0
2000d370:	00058000 	andeq	r8, r5, r0
2000d374:	14000000 	strne	r0, [r0], #-0
2000d378:	00000000 	andeq	r0, r0, r0
2000d37c:	c0000000 	andgt	r0, r0, r0
2000d380:	00000000 	andeq	r0, r0, r0
2000d384:	00000c00 	andeq	r0, r0, r0, lsl #24
	...
2000d390:	06000000 	streq	r0, [r0], -r0
	...
2000d3a0:	00000300 	andeq	r0, r0, r0, lsl #6
	...
2000d3d4:	00e80000 	rsceq	r0, r8, r0
	...
2000d3e4:	0000008c 	andeq	r0, r0, ip, lsl #1
2000d3e8:	00000008 	andeq	r0, r0, r8
2000d3ec:	00000000 	andeq	r0, r0, r0
2000d3f0:	00060000 	andeq	r0, r6, r0
2000d3f4:	00080000 	andeq	r0, r8, r0
	...
2000d400:	0000003f 	andeq	r0, r0, pc, lsr r0
2000d404:	00000018 	andeq	r0, r0, r8, lsl r0
2000d408:	00000000 	andeq	r0, r0, r0
2000d40c:	000f8000 	andeq	r8, pc, r0
2000d410:	00080000 	andeq	r0, r8, r0
2000d414:	00000000 	andeq	r0, r0, r0
2000d418:	80000000 	andhi	r0, r0, r0
	...
2000d444:	00002000 	andeq	r2, r0, r0
	...
2000d450:	f0000000 			; <UNDEFINED> instruction: 0xf0000000
2000d454:	00000001 	andeq	r0, r0, r1
	...
2000d460:	00018000 	andeq	r8, r1, r0
	...
2000d470:	00000003 	andeq	r0, r0, r3
	...

2000d568 <boom5_light_bits>:
	...
2000d608:	00000001 	andeq	r0, r0, r1
	...
2000d640:	10000000 	andne	r0, r0, r0
	...
2000d64c:	00000008 	andeq	r0, r0, r8
2000d650:	00003000 	andeq	r3, r0, r0
2000d654:	00000000 	andeq	r0, r0, r0
2000d658:	000c0000 	andeq	r0, ip, r0
2000d65c:	30000000 	andcc	r0, r0, r0
	...
2000d668:	00000006 	andeq	r0, r0, r6
2000d66c:	00001800 	andeq	r1, r0, r0, lsl #16
2000d670:	00000000 	andeq	r0, r0, r0
2000d674:	00020000 	andeq	r0, r2, r0
2000d678:	08000000 	stmdaeq	r0, {}	; <UNPREDICTABLE>
	...
2000d6e8:	00000070 	andeq	r0, r0, r0, ror r0
	...
2000d6f4:	00780000 	rsbseq	r0, r8, r0
2000d6f8:	00100000 	andseq	r0, r0, r0
	...
2000d748:	0000c000 	andeq	ip, r0, r0
	...

2000d86c <boom6_black_bits>:
	...
2000d8c8:	00000060 	andeq	r0, r0, r0, rrx
2000d8cc:	00000000 	andeq	r0, r0, r0
2000d8d0:	7c000000 	stcvc	0, cr0, [r0], {-0}
2000d8d4:	00200000 	eoreq	r0, r0, r0
	...
2000d8e0:	0001fc00 	andeq	pc, r1, r0, lsl #24
2000d8e4:	00000020 	andeq	r0, r0, r0, lsr #32
2000d8e8:	00000000 	andeq	r0, r0, r0
2000d8ec:	f8000000 			; <UNDEFINED> instruction: 0xf8000000
2000d8f0:	00200003 	eoreq	r0, r0, r3
	...
2000d8fc:	0003f000 	andeq	pc, r3, r0
	...
2000d908:	607ff000 	rsbsvs	pc, pc, r0
2000d90c:	f8000006 			; <UNDEFINED> instruction: 0xf8000006
2000d910:	00000001 	andeq	r0, r0, r1
2000d914:	ff81c000 			; <UNDEFINED> instruction: 0xff81c000
2000d918:	000661ff 	strdeq	r6, [r6], -pc	; <UNPREDICTABLE>
2000d91c:	0783ff80 	streq	pc, [r3, r0, lsl #31]
2000d920:	c0000000 	andgt	r0, r0, r0
2000d924:	73ffff81 	mvnsvc	pc, #516	; 0x204
2000d928:	ffffe00e 			; <UNDEFINED> instruction: 0xffffe00e
2000d92c:	00000783 	andeq	r0, r0, r3, lsl #15
2000d930:	ff80c000 			; <UNDEFINED> instruction: 0xff80c000
2000d934:	f00ef7f8 			; <UNDEFINED> instruction: 0xf00ef7f8
2000d938:	0787ffff 			; <UNDEFINED> instruction: 0x0787ffff
2000d93c:	40000000 	andmi	r0, r0, r0
2000d940:	f7f03f80 			; <UNDEFINED> instruction: 0xf7f03f80
2000d944:	e3fff007 	mvns	pc, #7
2000d948:	00000787 	andeq	r0, r0, r7, lsl #15
2000d94c:	1f800000 	svcne	0x00800000
2000d950:	f007efe0 			; <UNDEFINED> instruction: 0xf007efe0
2000d954:	0707c1ff 			; <UNDEFINED> instruction: 0x0707c1ff
2000d958:	00000000 	andeq	r0, r0, r0
2000d95c:	cfe01f80 	svcgt	0x00e01f80
2000d960:	c1fff003 	mvnsgt	pc, r3
2000d964:	00000603 	andeq	r0, r0, r3, lsl #12
2000d968:	1f800000 	svcne	0x00800000
2000d96c:	f0038ff0 			; <UNDEFINED> instruction: 0xf0038ff0
2000d970:	04c3c1ff 	strbeq	ip, [r3], #511	; 0x1ff
2000d974:	00000000 	andeq	r0, r0, r0
2000d978:	07fc1f80 	ldrbeq	r1, [ip, r0, lsl #31]!
2000d97c:	c1fff803 	mvnsgt	pc, r3, lsl #16
2000d980:	000004c3 	andeq	r0, r0, r3, asr #9
2000d984:	1fc00000 	svcne	0x00c00000
2000d988:	fc0203ff 	stc2	3, cr0, [r2], {255}	; 0xff
2000d98c:	04c1c0ff 	strbeq	ip, [r1], #255	; 0xff
2000d990:	c0000000 	andgt	r0, r0, r0
2000d994:	03bfffc0 			; <UNDEFINED> instruction: 0x03bfffc0
2000d998:	f07ffc00 			; <UNDEFINED> instruction: 0xf07ffc00
2000d99c:	00000481 	andeq	r0, r0, r1, lsl #9
2000d9a0:	ffe0c000 			; <UNDEFINED> instruction: 0xffe0c000
2000d9a4:	fc00799f 	stc2	9, cr7, [r0], {159}	; 0x9f	; <UNPREDICTABLE>
2000d9a8:	0081f87f 	addeq	pc, r1, pc, ror r8	; <UNPREDICTABLE>
2000d9ac:	40000000 	andmi	r0, r0, r0
2000d9b0:	7e87ffe0 	cdpvc	15, 8, cr15, cr7, cr0, {7}
2000d9b4:	387ffc00 	ldmdacc	pc!, {sl, fp, ip, sp, lr, pc}^	; <UNPREDICTABLE>
2000d9b8:	0000001c 	andeq	r0, r0, ip, lsl r0
2000d9bc:	ffc04000 			; <UNDEFINED> instruction: 0xffc04000
2000d9c0:	fc00ff07 	stc2	15, cr15, [r0], {7}
2000d9c4:	007e1fff 	ldrshteq	r1, [lr], #-255	; 0xffffff01
2000d9c8:	40000000 	andmi	r0, r0, r0
2000d9cc:	7f83ffc0 	svcvc	0x0083ffc0
2000d9d0:	3ffe7800 	svccc	0x00fe7800
2000d9d4:	000000fe 	strdeq	r0, [r0], -lr
2000d9d8:	ff800000 			; <UNDEFINED> instruction: 0xff800000
2000d9dc:	63007f81 	movwvs	r7, #3969	; 0xf81
2000d9e0:	00ee1ff8 	strdeq	r1, [lr], #248	; 0xf8	; <UNPREDICTABLE>
2000d9e4:	00000000 	andeq	r0, r0, r0
2000d9e8:	7f803f00 	svcvc	0x00803f00
2000d9ec:	1ff06600 	svcne	0x00f06600
2000d9f0:	000000e6 	andeq	r0, r0, r6, ror #1
2000d9f4:	07000000 	streq	r0, [r0, -r0]
2000d9f8:	4600ff80 	strmi	pc, [r0], -r0, lsl #31
2000d9fc:	00660fe0 	rsbeq	r0, r6, r0, ror #31
2000da00:	00000000 	andeq	r0, r0, r0
2000da04:	3f83c300 	svccc	0x0083c300
2000da08:	0e004f80 	cdpeq	15, 0, cr4, cr0, cr0, {4}
2000da0c:	00000066 	andeq	r0, r0, r6, rrx
2000da10:	e3000000 	movw	r0, #0
2000da14:	0ff03fc3 	svceq	0x00f03fc3
2000da18:	007f0c00 	rsbseq	r0, pc, r0, lsl #24
2000da1c:	00000000 	andeq	r0, r0, r0
2000da20:	ffe3f300 			; <UNDEFINED> instruction: 0xffe3f300
2000da24:	8c000fff 	stchi	15, cr0, [r0], {255}	; 0xff
2000da28:	0000007f 	andeq	r0, r0, pc, ror r0
2000da2c:	f1000000 	cps	#0
2000da30:	0ffffff3 	svceq	0x00fffff3
2000da34:	007f89fe 	ldrshteq	r8, [pc], #-158
2000da38:	00000000 	andeq	r0, r0, r0
2000da3c:	3ffbe000 	svccc	0x00fbe000
2000da40:	89ff03ff 	ldmibhi	pc!, {r0, r1, r2, r3, r4, r5, r6, r7, r8, r9}^	; <UNPREDICTABLE>
2000da44:	0000007f 	andeq	r0, r0, pc, ror r0
2000da48:	80000000 	andhi	r0, r0, r0
2000da4c:	00ff1ffb 	ldrshteq	r1, [pc], #251
2000da50:	006f01ff 	strdeq	r0, [pc], #-31	; <UNPREDICTABLE>
2000da54:	00000000 	andeq	r0, r0, r0
2000da58:	0ff98000 	svceq	0x00f98000
2000da5c:	00fe001e 	rscseq	r0, lr, lr, lsl r0
2000da60:	00000066 	andeq	r0, r0, r6, rrx
2000da64:	80000000 	andhi	r0, r0, r0
2000da68:	001e3ff8 			; <UNDEFINED> instruction: 0x001e3ff8
2000da6c:	004200fe 	strdeq	r0, [r2], #-14
2000da70:	00000000 	andeq	r0, r0, r0
2000da74:	fffc0000 			; <UNDEFINED> instruction: 0xfffc0000
2000da78:	007c003c 	rsbseq	r0, ip, ip, lsr r0
2000da7c:	00000042 	andeq	r0, r0, r2, asr #32
2000da80:	00000000 	andeq	r0, r0, r0
2000da84:	0079fffc 	ldrshteq	pc, [r9], #-252	; 0xffffff04	; <UNPREDICTABLE>
2000da88:	0002001c 	andeq	r0, r2, ip, lsl r0
2000da8c:	00000000 	andeq	r0, r0, r0
2000da90:	fffe0000 			; <UNDEFINED> instruction: 0xfffe0000
2000da94:	000c007f 	andeq	r0, ip, pc, ror r0
2000da98:	00000002 	andeq	r0, r0, r2
2000da9c:	04000000 	streq	r0, [r0], #-0
2000daa0:	007fc07e 	rsbseq	ip, pc, lr, ror r0	; <UNPREDICTABLE>
2000daa4:	0000000c 	andeq	r0, r0, ip
2000daa8:	00000000 	andeq	r0, r0, r0
2000daac:	003e0400 	eorseq	r0, lr, r0, lsl #8
2000dab0:	0004007f 	andeq	r0, r4, pc, ror r0
	...
2000dabc:	1c3c1e1e 	ldcne	14, cr1, [ip], #-120	; 0xffffff88
2000dac0:	00000004 	andeq	r0, r0, r4
2000dac4:	00000000 	andeq	r0, r0, r0
2000dac8:	ff1c0000 			; <UNDEFINED> instruction: 0xff1c0000
2000dacc:	00007c00 	andeq	r7, r0, r0, lsl #24
	...
2000dad8:	fc01ff1c 	stc2	15, cr15, [r1], {28}
	...
2000dae4:	ff0c0000 			; <UNDEFINED> instruction: 0xff0c0000
2000dae8:	0000fc01 	andeq	pc, r0, r1, lsl #24
	...
2000daf4:	fc01fc08 	stc2	12, cr15, [r1], {8}
2000daf8:	00000001 	andeq	r0, r0, r1
2000dafc:	00000000 	andeq	r0, r0, r0
2000db00:	f0080000 			; <UNDEFINED> instruction: 0xf0080000
2000db04:	0000f801 	andeq	pc, r0, r1, lsl #16
	...
2000db10:	d801f008 	stmdale	r1, {r3, ip, sp, lr, pc}
	...
2000db1c:	e0000000 	and	r0, r0, r0
2000db20:	00009000 	andeq	r9, r0, r0
	...
2000db2c:	90006000 	andls	r6, r0, r0
	...
2000db38:	40000000 	andmi	r0, r0, r0
2000db3c:	00001000 	andeq	r1, r0, r0
	...
2000db48:	00004000 	andeq	r4, r0, r0
	...

2000db70 <boom6_gray_bits>:
	...
2000dc0c:	80000000 	andhi	r0, r0, r0
	...
2000dc1c:	00008000 	andeq	r8, r0, r0
	...
2000dc28:	80000000 	andhi	r0, r0, r0
2000dc2c:	00000001 	andeq	r0, r0, r1
	...
2000dc38:	00010007 	andeq	r0, r1, r7
	...
2000dc44:	0008c000 	andeq	ip, r8, r0
2000dc48:	1c000000 	stcne	0, cr0, [r0], {-0}
2000dc4c:	00000000 	andeq	r0, r0, r0
2000dc50:	e0000000 	and	r0, r0, r0
2000dc54:	00000018 	andeq	r0, r0, r8, lsl r0
2000dc58:	00002600 	andeq	r2, r0, r0, lsl #12
2000dc5c:	00000000 	andeq	r0, r0, r0
2000dc60:	00136000 	andseq	r6, r3, r0
2000dc64:	2e000000 	cdpcs	0, 0, cr0, cr0, cr0, {0}
2000dc68:	00000000 	andeq	r0, r0, r0
2000dc6c:	e0000000 	and	r0, r0, r0
2000dc70:	0000000f 	andeq	r0, r0, pc
2000dc74:	00002600 	andeq	r2, r0, r0, lsl #12
2000dc78:	00000000 	andeq	r0, r0, r0
2000dc7c:	0003e000 	andeq	lr, r3, r0
2000dc80:	26000000 	strcs	r0, [r0], -r0
2000dc84:	00000000 	andeq	r0, r0, r0
2000dc88:	e0000000 	and	r0, r0, r0
2000dc8c:	00000000 	andeq	r0, r0, r0
2000dc90:	00003300 	andeq	r3, r0, r0, lsl #6
	...
2000dc9c:	09800000 	stmibeq	r0, {}	; <UNPREDICTABLE>
	...
2000dcac:	00000780 	andeq	r0, r0, r0, lsl #15
	...
2000dcb8:	07800000 	streq	r0, [r0, r0]
	...
2000dcd4:	000000f0 	strdeq	r0, [r0], -r0	; <UNPREDICTABLE>
	...
2000dce0:	008c0000 	addeq	r0, ip, r0
2000dce4:	00100000 	andseq	r0, r0, r0
	...
2000dcf0:	00000106 	andeq	r0, r0, r6, lsl #2
2000dcf4:	00000008 	andeq	r0, r0, r8
2000dcf8:	00000000 	andeq	r0, r0, r0
2000dcfc:	01630000 	cmneq	r3, r0
2000dd00:	00080000 	andeq	r0, r8, r0
2000dd04:	00000000 	andeq	r0, r0, r0
2000dd08:	c0000000 	andgt	r0, r0, r0
2000dd0c:	0000007f 	andeq	r0, r0, pc, ror r0
2000dd10:	00000018 	andeq	r0, r0, r8, lsl r0
2000dd14:	00000000 	andeq	r0, r0, r0
2000dd18:	000fc000 	andeq	ip, pc, r0
	...
2000dd40:	c0000000 	andgt	r0, r0, r0
	...
2000dd50:	00002000 	andeq	r2, r0, r0
	...
2000dd5c:	70000000 	andvc	r0, r0, r0
	...
2000dd6c:	0001c000 	andeq	ip, r1, r0
	...
2000dd7c:	00000003 	andeq	r0, r0, r3
	...
2000dd88:	00060000 	andeq	r0, r6, r0
	...

2000de74 <boom6_light_bits>:
	...
2000df14:	00000001 	andeq	r0, r0, r1
	...
2000df20:	00010000 	andeq	r0, r1, r0
	...
2000df48:	00070000 	andeq	r0, r7, r0
	...
2000df58:	00000007 	andeq	r0, r0, r7
2000df5c:	00001800 	andeq	r1, r0, r0, lsl #16
2000df60:	00000000 	andeq	r0, r0, r0
2000df64:	000c8000 	andeq	r8, ip, r0
2000df68:	10000000 	andne	r0, r0, r0
	...
2000df78:	00001800 	andeq	r1, r0, r0, lsl #16
	...
2000df84:	18000000 	stmdane	r0, {}	; <UNPREDICTABLE>
	...
2000df94:	00000c00 	andeq	r0, r0, r0, lsl #24
	...
2000dfa0:	06000000 	streq	r0, [r0], -r0
	...
2000dfe4:	00700000 	rsbseq	r0, r0, r0
	...
2000dff4:	000000f8 	strdeq	r0, [r0], -r8
2000dff8:	00000010 	andeq	r0, r0, r0, lsl r0
2000dffc:	00000000 	andeq	r0, r0, r0
2000e000:	009c0000 	addseq	r0, ip, r0
2000e004:	00100000 	andseq	r0, r0, r0
	...
2000e054:	0000c000 	andeq	ip, r0, r0
	...
2000e060:	80000000 	andhi	r0, r0, r0
2000e064:	00000001 	andeq	r0, r0, r1
	...

2000e178 <firstTime.4114>:
2000e178:	00000001 	andeq	r0, r0, r1

2000e17c <dragon1_black_bits>:
	...
2000e18c:	0000001c 	andeq	r0, r0, ip, lsl r0
2000e190:	00000000 	andeq	r0, r0, r0
2000e194:	00000023 	andeq	r0, r0, r3, lsr #32
2000e198:	00000000 	andeq	r0, r0, r0
2000e19c:	0000004c 	andeq	r0, r0, ip, asr #32
2000e1a0:	00000000 	andeq	r0, r0, r0
2000e1a4:	00000090 	muleq	r0, r0, r0
2000e1a8:	00000000 	andeq	r0, r0, r0
2000e1ac:	000000a0 	andeq	r0, r0, r0, lsr #1
2000e1b0:	00000000 	andeq	r0, r0, r0
2000e1b4:	007f0ca0 	rsbseq	r0, pc, r0, lsr #25
2000e1b8:	007f8000 	rsbseq	r8, pc, r0
2000e1bc:	0380f320 	orreq	pc, r0, #32, 6	; 0x80000000
2000e1c0:	00c0e000 	sbceq	lr, r0, r0
2000e1c4:	0e000040 	cdpeq	0, 0, cr0, cr0, cr0, {2}
2000e1c8:	03803800 	orreq	r3, r0, #0, 16
2000e1cc:	38000640 	stmdacc	r0, {r6, r9, sl}
2000e1d0:	0e000f00 	cdpeq	15, 0, cr0, cr0, cr0, {0}
2000e1d4:	e0780c80 	rsbs	r0, r8, r0, lsl #25
2000e1d8:	180001c0 	stmdane	r0, {r6, r7, r8}
2000e1dc:	80cc0100 	sbchi	r0, ip, r0, lsl #2
2000e1e0:	200f8063 	andcs	r8, pc, r3, rrx
2000e1e4:	03830100 	orreq	r0, r3, #0, 2
2000e1e8:	e038f03e 	eors	pc, r8, lr, lsr r0	; <UNPREDICTABLE>
2000e1ec:	0e00f880 	cdpeq	8, 0, cr15, cr0, cr0, {4}
2000e1f0:	00e01800 	rsceq	r1, r0, r0, lsl #16
2000e1f4:	38000480 	stmdacc	r0, {r7, sl}
2000e1f8:	03000c00 	movweq	r0, #3072	; 0xc00
2000e1fc:	e0000240 	and	r0, r0, r0, asr #4
2000e200:	0e000600 	cfmadd32eq	mvax0, mvfx0, mvfx0, mvfx0
2000e204:	80000220 	andhi	r0, r0, r0, lsr #4
2000e208:	f8000383 			; <UNDEFINED> instruction: 0xf8000383
2000e20c:	00000120 	andeq	r0, r0, r0, lsr #2
2000e210:	8000007c 	andhi	r0, r0, ip, ror r0
2000e214:	00000110 	andeq	r0, r0, r0, lsl r1
2000e218:	00000000 	andeq	r0, r0, r0
2000e21c:	000000ce 	andeq	r0, r0, lr, asr #1
2000e220:	00000000 	andeq	r0, r0, r0
2000e224:	00000021 	andeq	r0, r0, r1, lsr #32
2000e228:	00000000 	andeq	r0, r0, r0
2000e22c:	0000001e 	andeq	r0, r0, lr, lsl r0
2000e230:	00000000 	andeq	r0, r0, r0

2000e234 <dragon1_gray_bits>:
	...
2000e24c:	0000001c 	andeq	r0, r0, ip, lsl r0
2000e250:	00000000 	andeq	r0, r0, r0
2000e254:	00000030 	andeq	r0, r0, r0, lsr r0
2000e258:	00000000 	andeq	r0, r0, r0
2000e25c:	00000060 	andeq	r0, r0, r0, rrx
2000e260:	00000000 	andeq	r0, r0, r0
2000e264:	00000040 	andeq	r0, r0, r0, asr #32
2000e268:	00000000 	andeq	r0, r0, r0
2000e26c:	00000040 	andeq	r0, r0, r0, asr #32
2000e270:	00000000 	andeq	r0, r0, r0
2000e274:	00000cc0 	andeq	r0, r0, r0, asr #25
2000e278:	00000000 	andeq	r0, r0, r0
2000e27c:	00731f80 	rsbseq	r1, r3, r0, lsl #31
2000e280:	000e0000 	andeq	r0, lr, r0
2000e284:	00feb180 	rscseq	fp, lr, r0, lsl #3
2000e288:	00f7c000 	rscseq	ip, r7, r0
2000e28c:	0387f300 	orreq	pc, r7, #0, 6
2000e290:	00ffe000 	rscseq	lr, pc, r0
2000e294:	1d03fe00 	stcne	14, cr15, [r3, #-0]
2000e298:	03f07e00 	mvnseq	r7, #0, 28
2000e29c:	3c00fe00 	stccc	14, cr15, [r0], {-0}
2000e2a0:	0dc00d00 	stcleq	13, cr0, [r0]
2000e2a4:	f0000700 			; <UNDEFINED> instruction: 0xf0000700
2000e2a8:	3f0007c1 	svccc	0x000007c1
2000e2ac:	c0000300 	andgt	r0, r0, r0, lsl #6
2000e2b0:	fc0003b7 	stc2	3, cr0, [r0], {183}	; 0xb7
2000e2b4:	00000180 	andeq	r0, r0, r0, lsl #3
2000e2b8:	f00001ff 			; <UNDEFINED> instruction: 0xf00001ff
2000e2bc:	000001c0 	andeq	r0, r0, r0, asr #3
2000e2c0:	0000007c 	andeq	r0, r0, ip, ror r0
2000e2c4:	000000c0 	andeq	r0, r0, r0, asr #1
2000e2c8:	00000000 	andeq	r0, r0, r0
2000e2cc:	000000e0 	andeq	r0, r0, r0, ror #1
2000e2d0:	00000000 	andeq	r0, r0, r0
2000e2d4:	00000030 	andeq	r0, r0, r0, lsr r0
2000e2d8:	00000000 	andeq	r0, r0, r0
2000e2dc:	0000001e 	andeq	r0, r0, lr, lsl r0
	...

2000e2ec <dragon1_light_bits>:
	...
2000e30c:	00000002 	andeq	r0, r0, r2
2000e310:	00000000 	andeq	r0, r0, r0
2000e314:	00000008 	andeq	r0, r0, r8
	...
2000e324:	00000010 	andeq	r0, r0, r0, lsl r0
2000e328:	00000000 	andeq	r0, r0, r0
2000e32c:	007f0000 	rsbseq	r0, pc, r0
2000e330:	003f0000 	eorseq	r0, pc, r0
2000e334:	018ce020 	orreq	lr, ip, r0, lsr #32
2000e338:	0071c000 	rsbseq	ip, r1, r0
2000e33c:	07014000 	streq	r4, [r1, -r0]
2000e340:	01083000 	mrseq	r3, (UNDEF: 8)
2000e344:	1c000040 	stcne	0, cr0, [r0], {64}	; 0x40
2000e348:	07001e00 	streq	r1, [r0, -r0, lsl #28]
2000e34c:	62000000 	andvs	r0, r0, #0
2000e350:	1c000180 	stfnes	f0, [r0], {128}	; 0x80
2000e354:	c0000080 	andgt	r0, r0, r0, lsl #1
2000e358:	120002c1 	andne	r0, r0, #268435468	; 0x1000000c
2000e35c:	00000000 	andeq	r0, r0, r0
2000e360:	c000003e 	andgt	r0, r0, lr, lsr r0
2000e364:	00000040 	andeq	r0, r0, r0, asr #32
2000e368:	00000048 	andeq	r0, r0, r8, asr #32
	...
2000e374:	00000010 	andeq	r0, r0, r0, lsl r0
	...
2000e384:	00000008 	andeq	r0, r0, r8
	...

2000e3a4 <dragon2_black_bits>:
2000e3a4:	0000001c 	andeq	r0, r0, ip, lsl r0
2000e3a8:	00000000 	andeq	r0, r0, r0
2000e3ac:	00000023 	andeq	r0, r0, r3, lsr #32
2000e3b0:	00000000 	andeq	r0, r0, r0
2000e3b4:	0000004c 	andeq	r0, r0, ip, asr #32
2000e3b8:	00000000 	andeq	r0, r0, r0
2000e3bc:	00000090 	muleq	r0, r0, r0
2000e3c0:	00000000 	andeq	r0, r0, r0
2000e3c4:	000000a0 	andeq	r0, r0, r0, lsr #1
2000e3c8:	00000000 	andeq	r0, r0, r0
2000e3cc:	00000ca0 	andeq	r0, r0, r0, lsr #25
2000e3d0:	000001fc 	strdeq	r0, [r0], -ip
2000e3d4:	80001320 	andhi	r1, r0, r0, lsr #6
2000e3d8:	00000e03 	andeq	r0, r0, r3, lsl #28
2000e3dc:	c000e040 	andgt	lr, r0, r0, asr #32
2000e3e0:	e0003800 	and	r3, r0, r0, lsl #16
2000e3e4:	30030640 	andcc	r0, r3, r0, asr #12
2000e3e8:	3c00e000 	stccc	0, cr14, [r0], {-0}
2000e3ec:	180e0c80 	stmdane	lr, {r7, sl, fp}
2000e3f0:	070381e0 	streq	r8, [r3, -r0, ror #3]
2000e3f4:	0c380100 	ldfeqs	f0, [r8], #-0
2000e3f8:	018e0330 	orreq	r0, lr, r0, lsr r3
2000e3fc:	07e00100 	strbeq	r0, [r0, r0, lsl #2]!
2000e400:	c0f80e18 	rscsgt	r0, r8, r8, lsl lr
2000e404:	00003880 	andeq	r3, r0, r0, lsl #17
2000e408:	6000380c 	andvs	r3, r0, ip, lsl #16
2000e40c:	0000e480 	andeq	lr, r0, r0, lsl #9
2000e410:	3000e006 	andcc	lr, r0, r6
2000e414:	80038240 	andhi	r8, r3, r0, asr #4
2000e418:	18038003 	stmdane	r3, {r0, r1, pc}
2000e41c:	f01e0220 			; <UNDEFINED> instruction: 0xf01e0220
2000e420:	0e0e0000 	cdpeq	0, 0, cr0, cr14, cr0, {0}
2000e424:	0fe00120 	svceq	0x00e00120
2000e428:	01f00000 	mvnseq	r0, r0
2000e42c:	00000110 	andeq	r0, r0, r0, lsl r1
2000e430:	00000000 	andeq	r0, r0, r0
2000e434:	000000ce 	andeq	r0, r0, lr, asr #1
2000e438:	00000000 	andeq	r0, r0, r0
2000e43c:	00000021 	andeq	r0, r0, r1, lsr #32
2000e440:	00000000 	andeq	r0, r0, r0
2000e444:	0000001e 	andeq	r0, r0, lr, lsl r0
	...

2000e45c <dragon2_gray_bits>:
	...
2000e464:	0000001c 	andeq	r0, r0, ip, lsl r0
2000e468:	00000000 	andeq	r0, r0, r0
2000e46c:	00000030 	andeq	r0, r0, r0, lsr r0
2000e470:	00000000 	andeq	r0, r0, r0
2000e474:	00000060 	andeq	r0, r0, r0, rrx
2000e478:	00000000 	andeq	r0, r0, r0
2000e47c:	00000040 	andeq	r0, r0, r0, asr #32
2000e480:	00000000 	andeq	r0, r0, r0
2000e484:	00000040 	andeq	r0, r0, r0, asr #32
2000e488:	00000000 	andeq	r0, r0, r0
2000e48c:	00000cc0 	andeq	r0, r0, r0, asr #25
2000e490:	00000000 	andeq	r0, r0, r0
2000e494:	00001f80 	andeq	r1, r0, r0, lsl #31
2000e498:	000001cc 	andeq	r0, r0, ip, asr #3
2000e49c:	00001180 	andeq	r1, r0, r0, lsl #3
2000e4a0:	000003fe 	strdeq	r0, [r0], -lr
2000e4a4:	00007300 	andeq	r7, r0, r0, lsl #6
2000e4a8:	80000e1f 	andhi	r0, r0, pc, lsl lr
2000e4ac:	8000fe00 	andhi	pc, r0, r0, lsl #28
2000e4b0:	f800740f 			; <UNDEFINED> instruction: 0xf800740f
2000e4b4:	e001fe00 	and	pc, r1, r0, lsl #28
2000e4b8:	3c01f007 	stccc	0, cr15, [r1], {7}
2000e4bc:	f80fc700 			; <UNDEFINED> instruction: 0xf80fc700
2000e4c0:	1f07c003 	svcne	0x0007c003
2000e4c4:	ebff0300 	bl	1ffcf0cc <startup-0x30f34>
2000e4c8:	0edf0001 	cdpeq	0, 13, cr0, cr15, cr1, {0}
2000e4cc:	7ffc0180 	svcvc	0x00fc0180
2000e4d0:	07fc0000 	ldrbeq	r0, [ip, r0]!
2000e4d4:	0fe001c0 	svceq	0x00e001c0
2000e4d8:	01f00000 	mvnseq	r0, r0
2000e4dc:	000000c0 	andeq	r0, r0, r0, asr #1
2000e4e0:	00000000 	andeq	r0, r0, r0
2000e4e4:	000000e0 	andeq	r0, r0, r0, ror #1
2000e4e8:	00000000 	andeq	r0, r0, r0
2000e4ec:	00000030 	andeq	r0, r0, r0, lsr r0
2000e4f0:	00000000 	andeq	r0, r0, r0
2000e4f4:	0000001e 	andeq	r0, r0, lr, lsl r0
	...

2000e514 <dragon2_light_bits>:
	...
2000e524:	00000002 	andeq	r0, r0, r2
2000e528:	00000000 	andeq	r0, r0, r0
2000e52c:	00000008 	andeq	r0, r0, r8
	...
2000e53c:	00000010 	andeq	r0, r0, r0, lsl r0
	...
2000e548:	000001fc 	strdeq	r0, [r0], -ip
2000e54c:	00000020 	andeq	r0, r0, r0, lsr #32
2000e550:	00000633 	andeq	r0, r0, r3, lsr r6
2000e554:	c000e000 	andgt	lr, r0, r0
2000e558:	c0001c01 	andgt	r1, r0, r1, lsl #24
2000e55c:	e0018040 	and	r8, r1, r0, asr #32
2000e560:	78007000 	stmdavc	r0, {ip, sp, lr}
2000e564:	70070000 	andvc	r0, r7, r0
2000e568:	06018800 	streq	r8, [r1], -r0, lsl #16
2000e56c:	181e0080 	ldmdane	lr, {r7}
2000e570:	03060000 	movweq	r0, #24576	; 0x6000
2000e574:	07f00000 	ldrbeq	r0, [r0, r0]!
2000e578:	00f80000 	rscseq	r0, r8, r0
2000e57c:	14000040 	strne	r0, [r0], #-64	; 0xffffffc0
2000e580:	01200000 			; <UNDEFINED> instruction: 0x01200000
	...
2000e58c:	00000010 	andeq	r0, r0, r0, lsl r0
	...
2000e59c:	00000008 	andeq	r0, r0, r8
	...

2000e5cc <dragon3_black_bits>:
	...
2000e5d4:	0000001c 	andeq	r0, r0, ip, lsl r0
2000e5d8:	00000000 	andeq	r0, r0, r0
2000e5dc:	00000023 	andeq	r0, r0, r3, lsr #32
2000e5e0:	00000000 	andeq	r0, r0, r0
2000e5e4:	0000004c 	andeq	r0, r0, ip, asr #32
2000e5e8:	00000000 	andeq	r0, r0, r0
2000e5ec:	00000090 	muleq	r0, r0, r0
2000e5f0:	00000000 	andeq	r0, r0, r0
2000e5f4:	000000a0 	andeq	r0, r0, r0, lsr #1
2000e5f8:	00000000 	andeq	r0, r0, r0
2000e5fc:	f8000ca0 			; <UNDEFINED> instruction: 0xf8000ca0
2000e600:	fc000003 	stc2	0, cr0, [r0], {3}
2000e604:	07003320 	streq	r3, [r0, -r0, lsr #6]
2000e608:	0600001c 			; <UNDEFINED> instruction: 0x0600001c
2000e60c:	01804040 	orreq	r4, r0, r0, asr #32
2000e610:	03c00070 	biceq	r0, r0, #112	; 0x70
2000e614:	00618640 	rsbeq	r8, r1, r0, asr #12
2000e618:	007801c0 	rsbseq	r0, r8, r0, asr #3
2000e61c:	c01e0c80 	andsgt	r0, lr, r0, lsl #25
2000e620:	700e0703 	andvc	r0, lr, r3, lsl #14
2000e624:	60000100 	andvs	r0, r0, r0, lsl #2
2000e628:	ce031c06 	cdpgt	12, 0, cr1, cr3, cr6, {0}
2000e62c:	30000100 	andcc	r0, r0, r0, lsl #2
2000e630:	0181f01c 	orreq	pc, r1, ip, lsl r0	; <UNPREDICTABLE>
2000e634:	18001880 	stmdane	r0, {r7, fp, ip}
2000e638:	00c00070 	sbceq	r0, r0, r0, ror r0
2000e63c:	0c002480 	cfstrseq	mvf2, [r0], {128}	; 0x80
2000e640:	006001c0 	rsbeq	r0, r0, r0, asr #3
2000e644:	0700c240 	streq	ip, [r0, -r0, asr #4]
2000e648:	00300700 	eorseq	r0, r0, r0, lsl #14
2000e64c:	01c70220 	biceq	r0, r7, r0, lsr #4
2000e650:	001c1c00 	andseq	r1, ip, r0, lsl #24
2000e654:	00380120 	eorseq	r0, r8, r0, lsr #2
2000e658:	0003e000 	andeq	lr, r3, r0
2000e65c:	00000110 	andeq	r0, r0, r0, lsl r1
2000e660:	00000000 	andeq	r0, r0, r0
2000e664:	000000ce 	andeq	r0, r0, lr, asr #1
2000e668:	00000000 	andeq	r0, r0, r0
2000e66c:	00000021 	andeq	r0, r0, r1, lsr #32
2000e670:	00000000 	andeq	r0, r0, r0
2000e674:	0000001e 	andeq	r0, r0, lr, lsl r0
	...

2000e684 <dragon3_gray_bits>:
	...
2000e694:	0000001c 	andeq	r0, r0, ip, lsl r0
2000e698:	00000000 	andeq	r0, r0, r0
2000e69c:	00000030 	andeq	r0, r0, r0, lsr r0
2000e6a0:	00000000 	andeq	r0, r0, r0
2000e6a4:	00000060 	andeq	r0, r0, r0, rrx
2000e6a8:	00000000 	andeq	r0, r0, r0
2000e6ac:	00000040 	andeq	r0, r0, r0, asr #32
2000e6b0:	00000000 	andeq	r0, r0, r0
2000e6b4:	00000040 	andeq	r0, r0, r0, asr #32
2000e6b8:	00000000 	andeq	r0, r0, r0
2000e6bc:	00000cc0 	andeq	r0, r0, r0, asr #25
2000e6c0:	00000000 	andeq	r0, r0, r0
2000e6c4:	98003f80 	stmdals	r0, {r7, r8, r9, sl, fp, ip, sp}
2000e6c8:	e0000003 	and	r0, r0, r3
2000e6cc:	fc003180 	stc2	1, cr3, [r0], {128}	; 0x80
2000e6d0:	fa000007 	blx	2000e6f4 <dragon3_gray_bits+0x70>
2000e6d4:	3e003300 	cdpcc	3, 0, cr3, cr0, cr0, {0}
2000e6d8:	8f00001c 	svchi	0x0000001c
2000e6dc:	1e00fe00 	cdpne	14, 0, cr15, cr0, cr0, {0}
2000e6e0:	01f000e8 	mvnseq	r0, r8, ror #1
2000e6e4:	0ff7fe00 	svceq	0x00f7fe00
2000e6e8:	007803e0 	rsbseq	r0, r8, r0, ror #7
2000e6ec:	077fe700 	ldrbeq	lr, [pc, -r0, lsl #14]!
2000e6f0:	003e0f80 	eorseq	r0, lr, r0, lsl #31
2000e6f4:	03ffc300 	mvnseq	ip, #0, 6
2000e6f8:	001dbe00 	andseq	fp, sp, r0, lsl #28
2000e6fc:	00ff0180 	rscseq	r0, pc, r0, lsl #3
2000e700:	000ff800 	andeq	pc, pc, r0, lsl #16
2000e704:	003801c0 	eorseq	r0, r8, r0, asr #3
2000e708:	0003e000 	andeq	lr, r3, r0
2000e70c:	000000c0 	andeq	r0, r0, r0, asr #1
2000e710:	00000000 	andeq	r0, r0, r0
2000e714:	000000e0 	andeq	r0, r0, r0, ror #1
2000e718:	00000000 	andeq	r0, r0, r0
2000e71c:	00000030 	andeq	r0, r0, r0, lsr r0
2000e720:	00000000 	andeq	r0, r0, r0
2000e724:	0000001e 	andeq	r0, r0, lr, lsl r0
	...

2000e73c <dragon3_light_bits>:
	...
2000e754:	00000002 	andeq	r0, r0, r2
2000e758:	00000000 	andeq	r0, r0, r0
2000e75c:	00000008 	andeq	r0, r0, r8
	...
2000e76c:	00000010 	andeq	r0, r0, r0, lsl r0
2000e770:	00000000 	andeq	r0, r0, r0
2000e774:	f8000000 			; <UNDEFINED> instruction: 0xf8000000
2000e778:	f8000003 			; <UNDEFINED> instruction: 0xf8000003
2000e77c:	66000020 	strvs	r0, [r0], -r0, lsr #32
2000e780:	1c00000c 	stcne	0, cr0, [r0], {12}
2000e784:	03804000 	orreq	r4, r0, #0
2000e788:	05800038 	streq	r0, [r0, #56]	; 0x38
2000e78c:	01e1c040 	mvneq	ip, r0, asr #32
2000e790:	00f000e0 	rscseq	r0, r0, r0, ror #1
2000e794:	01ff0000 	mvnseq	r0, r0
2000e798:	000c0310 	andeq	r0, ip, r0, lsl r3
2000e79c:	00080080 	andeq	r0, r8, r0, lsl #1
2000e7a0:	00060c00 	andeq	r0, r6, r0, lsl #24
2000e7a4:	00800000 	addeq	r0, r0, r0
2000e7a8:	0001f000 	andeq	pc, r1, r0
2000e7ac:	00000040 	andeq	r0, r0, r0, asr #32
2000e7b0:	00024000 	andeq	r4, r2, r0
	...
2000e7bc:	00000010 	andeq	r0, r0, r0, lsl r0
	...
2000e7cc:	00000008 	andeq	r0, r0, r8
	...

2000e7f4 <firstTime.4067>:
2000e7f4:	00000001 	andeq	r0, r0, r1

2000e7f8 <indoors_black_bits>:
2000e7f8:	00000100 	andeq	r0, r0, r0, lsl #2
	...
2000e808:	00000100 	andeq	r0, r0, r0, lsl #2
	...
2000e818:	00000100 	andeq	r0, r0, r0, lsl #2
	...
2000e828:	00000100 	andeq	r0, r0, r0, lsl #2
	...
2000e838:	00000100 	andeq	r0, r0, r0, lsl #2
	...
2000e848:	00000100 	andeq	r0, r0, r0, lsl #2
	...
2000e858:	00000280 	andeq	r0, r0, r0, lsl #5
	...
2000e868:	00000440 	andeq	r0, r0, r0, asr #8
	...
2000e878:	00002aa8 	andeq	r2, r0, r8, lsr #21
	...
2000e888:	00001290 	muleq	r0, r0, r2
	...
2000e898:	00002c68 	andeq	r2, r0, r8, ror #24
	...
2000e8a8:	00002008 	andeq	r2, r0, r8
	...
2000e8b8:	000027c8 	andeq	r2, r0, r8, asr #15
	...
2000e8c8:	00001ff0 	strdeq	r1, [r0], -r0
	...
2000e8d8:	00000d60 	andeq	r0, r0, r0, ror #26
	...
2000e948:	f7fbfe00 			; <UNDEFINED> instruction: 0xf7fbfe00
2000e94c:	7fbfdfef 	svcvc	0x00bfdfef
2000e950:	fbfdfeff 	blx	1ff8e556 <startup-0x71aaa>
2000e954:	00ff703f 	rscseq	r7, pc, pc, lsr r0	; <UNPREDICTABLE>
2000e958:	0c060200 	sfmeq	f0, 4, [r6], {-0}
2000e95c:	c0603018 	rsbgt	r3, r0, r8, lsl r0
2000e960:	06030180 	streq	r0, [r3], -r0, lsl #3
2000e964:	0080d02c 	addeq	sp, r0, ip, lsr #32
2000e968:	0c060200 	sfmeq	f0, 4, [r6], {-0}
2000e96c:	c0603018 	rsbgt	r3, r0, r8, lsl r0
2000e970:	06030180 	streq	r0, [r3], -r0, lsl #3
2000e974:	0080d02c 	addeq	sp, r0, ip, lsr #32
2000e978:	fffffe00 			; <UNDEFINED> instruction: 0xfffffe00
2000e97c:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
2000e980:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
2000e984:	00ffdfef 	rscseq	sp, pc, pc, ror #31
	...
2000e994:	000050e8 	andeq	r5, r0, r8, ror #1
	...
2000e9a4:	00005fe8 	andeq	r5, r0, r8, ror #31
	...
2000e9b4:	00005028 	andeq	r5, r0, r8, lsr #32
	...
2000e9c4:	00005028 	andeq	r5, r0, r8, lsr #32
	...
2000e9d4:	00005fe8 	andeq	r5, r0, r8, ror #31
	...
2000e9e4:	03f050e8 	mvnseq	r5, #232	; 0xe8
	...
2000e9f4:	0c0c5fe8 	stceq	15, cr5, [ip], {232}	; 0xe8
	...
2000ea04:	10025028 	andne	r5, r2, r8, lsr #32
	...
2000ea14:	13fa5028 	mvnsne	r5, #40	; 0x28
	...
2000ea24:	100a5fe8 	andne	r5, sl, r8, ror #31
	...
2000ea34:	100a50e8 	andne	r5, sl, r8, ror #1
	...
2000ea44:	100a5fe8 	andne	r5, sl, r8, ror #31
	...
2000ea54:	100a5028 	andne	r5, sl, r8, lsr #32
	...
2000ea64:	100a5028 	andne	r5, sl, r8, lsr #32
	...
2000ea74:	100a5fe8 	andne	r5, sl, r8, ror #31
	...
2000ea84:	100a50e8 	andne	r5, sl, r8, ror #1
	...
2000ea94:	100a5ee8 	andne	r5, sl, r8, ror #29
	...
2000eaa4:	100a5028 	andne	r5, sl, r8, lsr #32
	...
2000eab4:	100a5028 	andne	r5, sl, r8, lsr #32
	...
2000eac4:	10025fe8 	andne	r5, r2, r8, ror #31
	...
2000ead4:	0ffc50e8 	svceq	0x00fc50e8
	...
2000eae4:	00005fe8 	andeq	r5, r0, r8, ror #31
	...
2000eaf4:	00005028 	andeq	r5, r0, r8, lsr #32
	...
2000eb04:	00005028 	andeq	r5, r0, r8, lsr #32
	...
2000eb14:	00005fe8 	andeq	r5, r0, r8, ror #31
	...
2000eb24:	000050e8 	andeq	r5, r0, r8, ror #1
	...
2000eb34:	00005fe8 	andeq	r5, r0, r8, ror #31
	...
2000eb44:	00007028 	andeq	r7, r0, r8, lsr #32
	...
2000eb54:	00007028 	andeq	r7, r0, r8, lsr #32
	...
2000eb64:	00007038 	andeq	r7, r0, r8, lsr r0
2000eb68:	f7fbfdfe 			; <UNDEFINED> instruction: 0xf7fbfdfe
2000eb6c:	7fbfdfef 	svcvc	0x00bfdfef
2000eb70:	fbfdfeff 	blx	1ff8e776 <startup-0x7188a>
2000eb74:	bfbfeff7 	svclt	0x00bfeff7
2000eb78:	0c060301 	stceq	3, cr0, [r6], {1}
2000eb7c:	c0603018 	rsbgt	r3, r0, r8, lsl r0
2000eb80:	06030180 	streq	r0, [r3], -r0, lsl #3
2000eb84:	6030180c 	eorsvs	r1, r0, ip, lsl #16
2000eb88:	0c060301 	stceq	3, cr0, [r6], {1}
2000eb8c:	c0603018 	rsbgt	r3, r0, r8, lsl r0
2000eb90:	06030180 	streq	r0, [r3], -r0, lsl #3
2000eb94:	6030180c 	eorsvs	r1, r0, ip, lsl #16
2000eb98:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
2000eb9c:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
2000eba0:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
2000eba4:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
2000eba8:	c0603018 	rsbgt	r3, r0, r8, lsl r0
2000ebac:	06030180 	streq	r0, [r3], -r0, lsl #3
2000ebb0:	6030180c 	eorsvs	r1, r0, ip, lsl #16
2000ebb4:	030180c0 	movweq	r8, #4288	; 0x10c0
2000ebb8:	c0603018 	rsbgt	r3, r0, r8, lsl r0
2000ebbc:	06030180 	streq	r0, [r3], -r0, lsl #3
2000ebc0:	6030180c 	eorsvs	r1, r0, ip, lsl #16
2000ebc4:	030180c0 	movweq	r8, #4288	; 0x10c0
2000ebc8:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
2000ebcc:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
2000ebd0:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
2000ebd4:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
2000ebd8:	030180c0 	movweq	r8, #4288	; 0x10c0
2000ebdc:	30180c06 	andscc	r0, r8, r6, lsl #24
2000ebe0:	0180c060 	orreq	ip, r0, r0, rrx
2000ebe4:	180c0603 	stmdane	ip, {r0, r1, r9, sl}
2000ebe8:	030180c0 	movweq	r8, #4288	; 0x10c0
2000ebec:	30180c06 	andscc	r0, r8, r6, lsl #24
2000ebf0:	0180c060 	orreq	ip, r0, r0, rrx
2000ebf4:	180c0603 	stmdane	ip, {r0, r1, r9, sl}

2000ebf8 <indoors_gray_bits>:
	...
2000ec58:	00001110 	andeq	r1, r0, r0, lsl r1
	...
2000ec68:	00001090 	muleq	r0, r0, r0
	...
2000ec98:	00000390 	muleq	r0, r0, r3
	...
2000eca8:	00001340 	andeq	r1, r0, r0, asr #6
	...
2000ecb8:	00000830 	andeq	r0, r0, r0, lsr r8
	...
2000ed48:	08040000 	stmdaeq	r4, {}	; <UNPREDICTABLE>
2000ed4c:	80402010 	subhi	r2, r0, r0, lsl r0
2000ed50:	04020100 	streq	r0, [r2], #-256	; 0xffffff00
2000ed54:	00008000 	andeq	r8, r0, r0
2000ed58:	b0582c00 	subslt	r2, r8, r0, lsl #24
2000ed5c:	0582c160 	streq	ip, [r2, #352]	; 0x160
2000ed60:	582c160b 	stmdapl	ip!, {r0, r1, r3, r9, sl, ip}
2000ed64:	010b0000 	mrseq	r0, (UNDEF: 11)
2000ed68:	71b8dc00 			; <UNDEFINED> instruction: 0x71b8dc00
2000ed6c:	1b8dc6e3 	blne	1e380900 <startup-0x1c7f700>
2000ed70:	b8dc6e37 	ldmlt	ip, {r0, r1, r2, r4, r5, r9, sl, fp, sp, lr}^
2000ed74:	01370001 	teqeq	r7, r1
	...
2000ed84:	01000000 	mrseq	r0, (UNDEF: 0)
2000ed88:	fffff000 			; <UNDEFINED> instruction: 0xfffff000
2000ed8c:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
2000ed90:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
2000ed94:	01ff8007 	mvnseq	r8, r7
	...
2000eda4:	00008000 	andeq	r8, r0, r0
	...
2000edb4:	00008180 	andeq	r8, r0, r0, lsl #3
	...
2000edc4:	00008180 	andeq	r8, r0, r0, lsl #3
	...
2000edd4:	00008000 	andeq	r8, r0, r0
	...
2000ede4:	00008000 	andeq	r8, r0, r0
	...
2000edf4:	00008000 	andeq	r8, r0, r0
	...
2000ee04:	00008180 	andeq	r8, r0, r0, lsl #3
	...
2000ee14:	20008180 	andcs	r8, r0, r0, lsl #3
	...
2000ee24:	20808000 	addcs	r8, r0, r0
	...
2000ee34:	20c08100 	sbccs	r8, r0, r0, lsl #2
	...
2000ee44:	21e08000 	mvncs	r8, r0
	...
2000ee54:	2bf08180 	blcs	1fc2f45c <startup-0x3d0ba4>
	...
2000ee64:	25c08180 	strbcs	r8, [r0, #384]	; 0x180
	...
2000ee74:	29e08000 	stmibcs	r0!, {pc}^
	...
2000ee84:	2bc08100 	blcs	1f02f28c <startup-0xfd0d74>
	...
2000ee94:	20c08110 	sbccs	r8, r0, r0, lsl r1
	...
2000eea4:	28e0a190 	stmiacs	r0!, {r4, r7, r8, sp, pc}^
	...
2000eeb4:	2bf08180 	blcs	1fc2f4bc <startup-0x3d0b44>
	...
2000eec4:	28008000 	stmdacs	r0, {pc}
	...
2000eed4:	3000a010 	andcc	sl, r0, r0, lsl r0
	...
2000eee4:	1fc0a000 	svcne	0x00c0a000
	...
2000eef4:	0000a180 	andeq	sl, r0, r0, lsl #3
	...
2000ef04:	00008190 	muleq	r0, r0, r1
	...
2000ef14:	00008010 	andeq	r8, r0, r0, lsl r0
	...
2000ef24:	00008110 	andeq	r8, r0, r0, lsl r1
	...
2000ef34:	0000a010 	andeq	sl, r0, r0, lsl r0
	...
2000ef44:	00008190 	muleq	r0, r0, r1
	...
2000ef54:	00008190 	muleq	r0, r0, r1
	...
2000ef64:	00008180 	andeq	r8, r0, r0, lsl #3
2000ef68:	08040201 	stmdaeq	r4, {r0, r9}
2000ef6c:	80402010 	subhi	r2, r0, r0, lsl r0
2000ef70:	04020100 	streq	r0, [r2], #-256	; 0xffffff00
2000ef74:	40401008 	submi	r1, r0, r8
2000ef78:	b0582c16 	subslt	r2, r8, r6, lsl ip
2000ef7c:	0582c160 	streq	ip, [r2, #352]	; 0x160
2000ef80:	582c160b 	stmdapl	ip!, {r0, r1, r3, r9, sl, ip}
2000ef84:	82c160b0 	sbchi	r6, r1, #176	; 0xb0
2000ef88:	71b8dc6e 			; <UNDEFINED> instruction: 0x71b8dc6e
2000ef8c:	1b8dc6e3 	blne	1e380b20 <startup-0x1c7f4e0>
2000ef90:	b8dc6e37 	ldmlt	ip, {r0, r1, r2, r4, r5, r9, sl, fp, sp, lr}^
2000ef94:	8dc6e371 	stclhi	3, cr14, [r6, #452]	; 0x1c4
	...
2000efa8:	0582c160 	streq	ip, [r2, #352]	; 0x160
2000efac:	582c160b 	stmdapl	ip!, {r0, r1, r3, r9, sl, ip}
2000efb0:	82c160b0 	sbchi	r6, r1, #176	; 0xb0
2000efb4:	2c160b05 			; <UNDEFINED> instruction: 0x2c160b05
2000efb8:	1b8dc6e3 	blne	1e380b4c <startup-0x1c7f4b4>
2000efbc:	b8dc6e37 	ldmlt	ip, {r0, r1, r2, r4, r5, r9, sl, fp, sp, lr}^
2000efc0:	8dc6e371 	stclhi	3, cr14, [r6, #452]	; 0x1c4
2000efc4:	dc6e371b 	stclle	7, cr3, [lr], #-108	; 0xffffff94
	...
2000efd8:	2c160b05 			; <UNDEFINED> instruction: 0x2c160b05
2000efdc:	c160b058 	qdsubgt	fp, r8, r0
2000efe0:	160b0582 	strne	r0, [fp], -r2, lsl #11
2000efe4:	60b0582c 	adcsvs	r5, r0, ip, lsr #16
2000efe8:	dc6e371b 	stclle	7, cr3, [lr], #-108	; 0xffffff94
2000efec:	c6e371b8 			; <UNDEFINED> instruction: 0xc6e371b8
2000eff0:	6e371b8d 	vaddvs.f64	d1, d23, d13
2000eff4:	e371b8dc 	cmn	r1, #220, 16	; 0xdc0000

2000eff8 <indoors_light_bits>:
	...
2000f038:	00001010 	andeq	r1, r0, r0, lsl r0
	...
2000f068:	00000300 	andeq	r0, r0, r0, lsl #6
	...
2000f078:	00001110 	andeq	r1, r0, r0, lsl r1
	...
2000f088:	00000100 	andeq	r0, r0, r0, lsl #2
	...
2000f098:	00001000 	andeq	r1, r0, r0
	...
2000f0a8:	00000cb0 			; <UNDEFINED> instruction: 0x00000cb0
	...
2000f0b8:	00001000 	andeq	r1, r0, r0
	...
2000f158:	43a1d000 			; <UNDEFINED> instruction: 0x43a1d000
2000f15c:	3a1d0e87 	bcc	20752b80 <firstTime.4108+0x73d628>
2000f160:	a1d0e874 	bicsge	lr, r0, r4, ror r8
2000f164:	00742013 	rsbseq	r2, r4, r3, lsl r0
2000f168:	82412000 	subhi	r2, r1, #0
2000f16c:	24120904 	ldrcs	r0, [r2], #-2308	; 0xfffff6fc
2000f170:	41209048 			; <UNDEFINED> instruction: 0x41209048
2000f174:	00482012 	subeq	r2, r8, r2, lsl r0
	...
2000f184:	00002010 	andeq	r2, r0, r0, lsl r0
	...
2000f194:	00002f10 	andeq	r2, r0, r0, lsl pc
	...
2000f1a4:	00002010 	andeq	r2, r0, r0, lsl r0
	...
2000f1b4:	00002010 	andeq	r2, r0, r0, lsl r0
	...
2000f1c4:	00002010 	andeq	r2, r0, r0, lsl r0
	...
2000f1d4:	00002010 	andeq	r2, r0, r0, lsl r0
	...
2000f1e4:	00002f10 	andeq	r2, r0, r0, lsl pc
	...
2000f1f4:	00002010 	andeq	r2, r0, r0, lsl r0
	...
2000f204:	00002010 	andeq	r2, r0, r0, lsl r0
	...
2000f214:	00002010 	andeq	r2, r0, r0, lsl r0
	...
2000f224:	03702010 	cmneq	r0, #16
	...
2000f234:	03302e10 	teqeq	r0, #16, 28	; 0x100
	...
2000f244:	02102010 	andseq	r2, r0, #16
	...
2000f254:	00002010 	andeq	r2, r0, r0, lsl r0
	...
2000f264:	02302010 	eorseq	r2, r0, #16
	...
2000f274:	02102010 	andseq	r2, r0, #16
	...
2000f284:	00302e10 	eorseq	r2, r0, r0, lsl lr
	...
2000f294:	03302000 	teqeq	r0, #0
	...
2000f2a4:	03100000 	tsteq	r0, #0
	...
2000f2b4:	00002010 	andeq	r2, r0, r0, lsl r0
	...
2000f2c4:	00002010 	andeq	r2, r0, r0, lsl r0
	...
2000f2d4:	00000f00 	andeq	r0, r0, r0, lsl #30
	...
2000f2e4:	00000010 	andeq	r0, r0, r0, lsl r0
	...
2000f2f4:	00000010 	andeq	r0, r0, r0, lsl r0
	...
2000f304:	00002000 	andeq	r2, r0, r0
	...
2000f314:	00002000 	andeq	r2, r0, r0
	...
2000f324:	00002e00 	andeq	r2, r0, r0, lsl #28
	...
2000f378:	43a1d0e8 			; <UNDEFINED> instruction: 0x43a1d0e8
2000f37c:	3a1d0e87 	bcc	20752da0 <firstTime.4108+0x73d848>
2000f380:	a1d0e874 	bicsge	lr, r0, r4, ror r8
2000f384:	1d0e8743 	stcne	7, cr8, [lr, #-268]	; 0xfffffef4
2000f388:	82412090 	subhi	r2, r1, #144	; 0x90
2000f38c:	24120904 	ldrcs	r0, [r2], #-2308	; 0xfffff6fc
2000f390:	41209048 			; <UNDEFINED> instruction: 0x41209048
2000f394:	12090482 	andne	r0, r9, #-2113929216	; 0x82000000
	...
2000f3a8:	3a1d0e87 	bcc	20752dcc <firstTime.4108+0x73d874>
2000f3ac:	a1d0e874 	bicsge	lr, r0, r4, ror r8
2000f3b0:	1d0e8743 	stcne	7, cr8, [lr, #-268]	; 0xfffffef4
2000f3b4:	d0e8743a 	rscle	r7, r8, sl, lsr r4
2000f3b8:	24120904 	ldrcs	r0, [r2], #-2308	; 0xfffff6fc
2000f3bc:	41209048 			; <UNDEFINED> instruction: 0x41209048
2000f3c0:	12090482 	andne	r0, r9, #-2113929216	; 0x82000000
2000f3c4:	20904824 	addscs	r4, r0, r4, lsr #16
	...
2000f3d8:	d0e8743a 	rscle	r7, r8, sl, lsr r4
2000f3dc:	0e8743a1 	cdpeq	3, 8, cr4, cr7, cr1, {5}
2000f3e0:	e8743a1d 	ldmda	r4!, {r0, r2, r3, r4, r9, fp, ip, sp}^
2000f3e4:	8743a1d0 			; <UNDEFINED> instruction: 0x8743a1d0
2000f3e8:	20904824 	addscs	r4, r0, r4, lsr #16
2000f3ec:	09048241 	stmdbeq	r4, {r0, r6, r9, pc}
2000f3f0:	90482412 	subls	r2, r8, r2, lsl r4
2000f3f4:	04824120 	streq	r4, [r2], #288	; 0x120

2000f3f8 <firstTime.4040>:
2000f3f8:	00000001 	andeq	r0, r0, r1

2000f3fc <indoors2_black_bits>:
2000f3fc:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
2000f400:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
2000f404:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
2000f408:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
2000f40c:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
2000f410:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
2000f414:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
2000f418:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
2000f41c:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
2000f420:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
2000f424:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
2000f428:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
2000f42c:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
2000f430:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
2000f434:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
2000f438:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
2000f43c:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
2000f440:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
2000f444:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
2000f448:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
2000f44c:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
2000f450:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
2000f454:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
2000f458:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
2000f45c:	ffffeeef 			; <UNDEFINED> instruction: 0xffffeeef
2000f460:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
2000f464:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
2000f468:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
2000f46c:	ffffec6f 			; <UNDEFINED> instruction: 0xffffec6f
2000f470:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
2000f474:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
2000f478:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
2000f47c:	ffffeaaf 			; <UNDEFINED> instruction: 0xffffeaaf
2000f480:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
2000f484:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
2000f488:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
2000f48c:	fffff29f 			; <UNDEFINED> instruction: 0xfffff29f
2000f490:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
2000f494:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
2000f498:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
2000f49c:	ffffec6f 			; <UNDEFINED> instruction: 0xffffec6f
2000f4a0:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
2000f4a4:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
2000f4a8:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
2000f4ac:	ffffe00f 			; <UNDEFINED> instruction: 0xffffe00f
2000f4b0:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
2000f4b4:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
2000f4b8:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
2000f4bc:	ffffe7cf 			; <UNDEFINED> instruction: 0xffffe7cf
2000f4c0:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
2000f4c4:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
2000f4c8:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
2000f4cc:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
2000f4d0:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
2000f4d4:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
2000f4d8:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
2000f4dc:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
2000f4e0:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
2000f4e4:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
2000f4e8:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
2000f4ec:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
2000f4f0:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
2000f4f4:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
2000f4f8:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
2000f4fc:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
2000f500:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
2000f504:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
2000f508:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
2000f50c:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
2000f510:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
2000f514:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
2000f518:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
2000f51c:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
2000f520:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
2000f524:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
2000f528:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
2000f52c:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
2000f530:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
2000f534:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
2000f538:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
2000f53c:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
2000f540:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
2000f544:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
2000f548:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
2000f54c:	f7fbffff 			; <UNDEFINED> instruction: 0xf7fbffff
2000f550:	7fbfdfef 	svcvc	0x00bfdfef
2000f554:	fbfdfeff 	blx	1ff8f15a <startup-0x70ea6>
2000f558:	ffff7fff 			; <UNDEFINED> instruction: 0xffff7fff
2000f55c:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
2000f560:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
2000f564:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
2000f568:	feffdfef 	cdp2	15, 15, cr13, cr15, cr15, {7}
2000f56c:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
2000f570:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
2000f574:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
2000f578:	feffdfef 	cdp2	15, 15, cr13, cr15, cr15, {7}
2000f57c:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
2000f580:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
2000f584:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
2000f588:	feffdfef 	cdp2	15, 15, cr13, cr15, cr15, {7}
2000f58c:	00000fff 	strdeq	r0, [r0], -pc	; <UNPREDICTABLE>
	...
2000f598:	fe0050e8 	cdp2	0, 0, cr5, cr0, cr8, {7}
2000f59c:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
2000f5a0:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
2000f5a4:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
2000f5a8:	ffff5fef 			; <UNDEFINED> instruction: 0xffff5fef
2000f5ac:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
2000f5b0:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
2000f5b4:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
2000f5b8:	ffff502f 			; <UNDEFINED> instruction: 0xffff502f
2000f5bc:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
2000f5c0:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
2000f5c4:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
2000f5c8:	ffff502f 			; <UNDEFINED> instruction: 0xffff502f
2000f5cc:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
2000f5d0:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
2000f5d4:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
2000f5d8:	ffff5fef 			; <UNDEFINED> instruction: 0xffff5fef
2000f5dc:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
2000f5e0:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
2000f5e4:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
2000f5e8:	ffff50ef 			; <UNDEFINED> instruction: 0xffff50ef
2000f5ec:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
2000f5f0:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
2000f5f4:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
2000f5f8:	ec0d5fef 	stc	15, cr5, [sp], {239}	; 0xef
2000f5fc:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
2000f600:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
2000f604:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
2000f608:	f003502f 			; <UNDEFINED> instruction: 0xf003502f
2000f60c:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
2000f610:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
2000f614:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
2000f618:	d3fb502f 	mvnsle	r5, #47	; 0x2f
2000f61c:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
2000f620:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
2000f624:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
2000f628:	d00b5fef 	andle	r5, fp, pc, ror #31
2000f62c:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
2000f630:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
2000f634:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
2000f638:	d00b50ef 	andle	r5, fp, pc, ror #1
2000f63c:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
2000f640:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
2000f644:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
2000f648:	d00b5fef 	andle	r5, fp, pc, ror #31
2000f64c:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
2000f650:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
2000f654:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
2000f658:	d00b502f 	andle	r5, fp, pc, lsr #32
2000f65c:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
2000f660:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
2000f664:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
2000f668:	d00b502f 	andle	r5, fp, pc, lsr #32
2000f66c:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
2000f670:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
2000f674:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
2000f678:	d00b5fef 	andle	r5, fp, pc, ror #31
2000f67c:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
2000f680:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
2000f684:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
2000f688:	d00b50ef 	andle	r5, fp, pc, ror #1
2000f68c:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
2000f690:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
2000f694:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
2000f698:	d00b5eef 	andle	r5, fp, pc, ror #29
2000f69c:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
2000f6a0:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
2000f6a4:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
2000f6a8:	d00b502f 	andle	r5, fp, pc, lsr #32
2000f6ac:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
2000f6b0:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
2000f6b4:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
2000f6b8:	d00b502f 	andle	r5, fp, pc, lsr #32
2000f6bc:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
2000f6c0:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
2000f6c4:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
2000f6c8:	d0035fef 	andle	r5, r3, pc, ror #31
2000f6cc:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
2000f6d0:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
2000f6d4:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
2000f6d8:	cffd50ef 	svcgt	0x00fd50ef
2000f6dc:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
2000f6e0:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
2000f6e4:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
2000f6e8:	e03f5fef 	eors	r5, pc, pc, ror #31
2000f6ec:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
2000f6f0:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
2000f6f4:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
2000f6f8:	ffff502f 			; <UNDEFINED> instruction: 0xffff502f
2000f6fc:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
2000f700:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
2000f704:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
2000f708:	ffff502f 			; <UNDEFINED> instruction: 0xffff502f
2000f70c:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
2000f710:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
2000f714:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
2000f718:	ffff5fef 			; <UNDEFINED> instruction: 0xffff5fef
2000f71c:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
2000f720:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
2000f724:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
2000f728:	ffff50ef 			; <UNDEFINED> instruction: 0xffff50ef
2000f72c:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
2000f730:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
2000f734:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
2000f738:	ffff5fef 			; <UNDEFINED> instruction: 0xffff5fef
2000f73c:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
2000f740:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
2000f744:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
2000f748:	ffff7e6f 			; <UNDEFINED> instruction: 0xffff7e6f
2000f74c:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
2000f750:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
2000f754:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
2000f758:	ffff7e6f 			; <UNDEFINED> instruction: 0xffff7e6f
2000f75c:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
2000f760:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
2000f764:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
2000f768:	ffff7e7f 			; <UNDEFINED> instruction: 0xffff7e7f
2000f76c:	f7fbfdfe 			; <UNDEFINED> instruction: 0xf7fbfdfe
2000f770:	7fbfdfef 	svcvc	0x00bfdfef
2000f774:	fbfdfeff 	blx	1ff8f37a <startup-0x70c86>
2000f778:	bfbfeff7 	svclt	0x00bfeff7
2000f77c:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
2000f780:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
2000f784:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
2000f788:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
2000f78c:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
2000f790:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
2000f794:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
2000f798:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
2000f79c:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
2000f7a0:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
2000f7a4:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
2000f7a8:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
2000f7ac:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
2000f7b0:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
2000f7b4:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
2000f7b8:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
2000f7bc:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
2000f7c0:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
2000f7c4:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
2000f7c8:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
2000f7cc:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
2000f7d0:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
2000f7d4:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
2000f7d8:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
2000f7dc:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
2000f7e0:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
2000f7e4:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
2000f7e8:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
2000f7ec:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
2000f7f0:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
2000f7f4:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
2000f7f8:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff

2000f7fc <indoors2_gray_bits>:
	...
2000f85c:	00001110 	andeq	r1, r0, r0, lsl r1
	...
2000f86c:	00001090 	muleq	r0, r0, r0
	...
2000f89c:	00000390 	muleq	r0, r0, r3
	...
2000f8ac:	00001340 	andeq	r1, r0, r0, asr #6
	...
2000f8bc:	00000830 	andeq	r0, r0, r0, lsr r8
	...
2000f94c:	08040000 	stmdaeq	r4, {}	; <UNPREDICTABLE>
2000f950:	80402010 	subhi	r2, r0, r0, lsl r0
2000f954:	04020100 	streq	r0, [r2], #-256	; 0xffffff00
2000f958:	00008000 	andeq	r8, r0, r0
	...
2000f968:	01000000 	mrseq	r0, (UNDEF: 0)
	...
2000f978:	01000000 	mrseq	r0, (UNDEF: 0)
	...
2000f988:	01000000 	mrseq	r0, (UNDEF: 0)
2000f98c:	fffff000 			; <UNDEFINED> instruction: 0xfffff000
2000f990:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
2000f994:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
2000f998:	01ff8007 	mvnseq	r8, r7
	...
2000f9a8:	00008000 	andeq	r8, r0, r0
	...
2000f9b8:	00008180 	andeq	r8, r0, r0, lsl #3
	...
2000f9c8:	00008180 	andeq	r8, r0, r0, lsl #3
	...
2000f9d8:	00008000 	andeq	r8, r0, r0
	...
2000f9e8:	00008000 	andeq	r8, r0, r0
	...
2000f9f8:	00008000 	andeq	r8, r0, r0
	...
2000fa08:	00008180 	andeq	r8, r0, r0, lsl #3
	...
2000fa18:	20008180 	andcs	r8, r0, r0, lsl #3
	...
2000fa28:	20808000 	addcs	r8, r0, r0
	...
2000fa38:	20c08100 	sbccs	r8, r0, r0, lsl #2
	...
2000fa48:	21e08000 	mvncs	r8, r0
	...
2000fa58:	2bf08180 	blcs	1fc30060 <startup-0x3cffa0>
	...
2000fa68:	25c08180 	strbcs	r8, [r0, #384]	; 0x180
	...
2000fa78:	29e08000 	stmibcs	r0!, {pc}^
	...
2000fa88:	2bc08100 	blcs	1f02fe90 <startup-0xfd0170>
	...
2000fa98:	20c08110 	sbccs	r8, r0, r0, lsl r1
	...
2000faa8:	28e0a190 	stmiacs	r0!, {r4, r7, r8, sp, pc}^
	...
2000fab8:	2bf08180 	blcs	1fc300c0 <startup-0x3cff40>
	...
2000fac8:	28008000 	stmdacs	r0, {pc}
	...
2000fad8:	3000a010 	andcc	sl, r0, r0, lsl r0
	...
2000fae8:	1fc0a000 	svcne	0x00c0a000
	...
2000faf8:	0000a180 	andeq	sl, r0, r0, lsl #3
	...
2000fb08:	00008190 	muleq	r0, r0, r1
	...
2000fb18:	00008010 	andeq	r8, r0, r0, lsl r0
	...
2000fb28:	00008110 	andeq	r8, r0, r0, lsl r1
	...
2000fb38:	0000a010 	andeq	sl, r0, r0, lsl r0
	...
2000fb48:	00008190 	muleq	r0, r0, r1
	...
2000fb58:	00008190 	muleq	r0, r0, r1
	...
2000fb68:	00008180 	andeq	r8, r0, r0, lsl #3
2000fb6c:	08040201 	stmdaeq	r4, {r0, r9}
2000fb70:	80402010 	subhi	r2, r0, r0, lsl r0
2000fb74:	04020100 	streq	r0, [r2], #-256	; 0xffffff00
2000fb78:	40401008 	submi	r1, r0, r8
	...

2000fbfc <indoors2_light_bits>:
	...
2000fc6c:	00000300 	andeq	r0, r0, r0, lsl #6
	...
2000fc7c:	00001110 	andeq	r1, r0, r0, lsl r1
	...
2000fc8c:	00000100 	andeq	r0, r0, r0, lsl #2
	...
2000fc9c:	00001000 	andeq	r1, r0, r0
	...
2000fcac:	00000cb0 			; <UNDEFINED> instruction: 0x00000cb0
	...
2000fcbc:	00001000 	andeq	r1, r0, r0
	...
2000fd68:	00002010 	andeq	r2, r0, r0, lsl r0
	...
2000fd78:	00002010 	andeq	r2, r0, r0, lsl r0
	...
2000fd88:	00002010 	andeq	r2, r0, r0, lsl r0
	...
2000fd98:	00002f10 	andeq	r2, r0, r0, lsl pc
	...
2000fda8:	00002010 	andeq	r2, r0, r0, lsl r0
	...
2000fdb8:	00002010 	andeq	r2, r0, r0, lsl r0
	...
2000fdc8:	00002010 	andeq	r2, r0, r0, lsl r0
	...
2000fdd8:	00002010 	andeq	r2, r0, r0, lsl r0
	...
2000fde8:	00002f10 	andeq	r2, r0, r0, lsl pc
	...
2000fdf8:	00002010 	andeq	r2, r0, r0, lsl r0
	...
2000fe08:	00002010 	andeq	r2, r0, r0, lsl r0
	...
2000fe18:	00002010 	andeq	r2, r0, r0, lsl r0
	...
2000fe28:	03702010 	cmneq	r0, #16
	...
2000fe38:	03302e10 	teqeq	r0, #16, 28	; 0x100
	...
2000fe48:	02102010 	andseq	r2, r0, #16
	...
2000fe58:	00002010 	andeq	r2, r0, r0, lsl r0
	...
2000fe68:	02302010 	eorseq	r2, r0, #16
	...
2000fe78:	02102010 	andseq	r2, r0, #16
	...
2000fe88:	00302e10 	eorseq	r2, r0, r0, lsl lr
	...
2000fe98:	03302000 	teqeq	r0, #0
	...
2000fea8:	03100000 	tsteq	r0, #0
	...
2000feb8:	00002010 	andeq	r2, r0, r0, lsl r0
	...
2000fec8:	00002010 	andeq	r2, r0, r0, lsl r0
	...
2000fed8:	00000f00 	andeq	r0, r0, r0, lsl #30
	...
2000fee8:	00000010 	andeq	r0, r0, r0, lsl r0
	...
2000fef8:	00000010 	andeq	r0, r0, r0, lsl r0
	...
2000ff08:	00002000 	andeq	r2, r0, r0
	...
2000ff18:	00002000 	andeq	r2, r0, r0
	...
2000ff28:	00002e00 	andeq	r2, r0, r0, lsl #28
	...

2000fffc <firstTime.4040>:
2000fffc:	00000001 	andeq	r0, r0, r1

20010000 <trophy_black_bits>:
20010000:	00d40028 	sbcseq	r0, r4, r8, lsr #32
20010004:	03fe01aa 	mvnseq	r0, #-2147483606	; 0x8000002a
20010008:	02220401 	eoreq	r0, r2, #16777216	; 0x1000000
2001000c:	02220232 	eoreq	r0, r2, #536870915	; 0x20000003
20010010:	00880124 	addeq	r0, r8, r4, lsr #2
20010014:	00500088 	subseq	r0, r0, r8, lsl #1
20010018:	00880088 	addeq	r0, r8, r8, lsl #1
2001001c:	020201fc 	andeq	r0, r2, #252, 2	; 0x3f
20010020:	00000202 	andeq	r0, r0, r2, lsl #4

20010024 <trophy_gray_bits>:
	...
2001002c:	01000300 	mrseq	r0, LR_irq
20010030:	01000100 	mrseq	r0, (UNDEF: 16)
20010034:	00000080 	andeq	r0, r0, r0, lsl #1
20010038:	00000000 	andeq	r0, r0, r0
2001003c:	00400040 	subeq	r0, r0, r0, asr #32
20010040:	01f00000 	mvnseq	r0, r0
20010044:	000001e8 	andeq	r0, r0, r8, ror #3

20010048 <trophy_light_bits>:
20010048:	00000000 	andeq	r0, r0, r0
2001004c:	00000050 	andeq	r0, r0, r0, asr r0
20010050:	008800ec 	addeq	r0, r8, ip, ror #1
20010054:	008800c0 	addeq	r0, r8, r0, asr #1
20010058:	00600048 	rsbeq	r0, r0, r8, asr #32
2001005c:	00200060 	eoreq	r0, r0, r0, rrx
20010060:	00200020 	eoreq	r0, r0, r0, lsr #32
20010064:	000c0000 	andeq	r0, ip, r0
20010068:	00000014 	andeq	r0, r0, r4, lsl r0

2001006c <firstTime.4040>:
2001006c:	00000001 	andeq	r0, r0, r1

20010070 <roger_black_bits>:
20010070:	00000000 	andeq	r0, r0, r0
20010074:	0e000000 	cdpeq	0, 0, cr0, cr0, cr0, {0}
	...
20010084:	8fc00000 	svchi	0x00c00000
20010088:	000000ff 	strdeq	r0, [r0], -pc	; <UNPREDICTABLE>
	...
20010094:	fff00000 			; <UNDEFINED> instruction: 0xfff00000	; IMB
20010098:	000003ff 	strdeq	r0, [r0], -pc	; <UNPREDICTABLE>
	...
200100a4:	ffbe0000 			; <UNDEFINED> instruction: 0xffbe0000
200100a8:	00000fff 	strdeq	r0, [r0], -pc	; <UNPREDICTABLE>
	...
200100b4:	c3fe0000 	mvnsgt	r0, #0
200100b8:	00001fff 	strdeq	r1, [r0], -pc	; <UNPREDICTABLE>
	...
200100c4:	00cf0000 	sbceq	r0, pc, r0
200100c8:	00002fff 	strdeq	r2, [r0], -pc	; <UNPREDICTABLE>
	...
200100d4:	800f0000 	andhi	r0, pc, r0
200100d8:	00007fff 	strdeq	r7, [r0], -pc	; <UNPREDICTABLE>
	...
200100e4:	80000000 	andhi	r0, r0, r0
200100e8:	00007fff 	strdeq	r7, [r0], -pc	; <UNPREDICTABLE>
	...
200100f4:	c0000000 	andgt	r0, r0, r0
200100f8:	00006fff 	strdeq	r6, [r0], -pc	; <UNPREDICTABLE>
	...
20010108:	00007ffc 	strdeq	r7, [r0], -ip
	...
20010118:	0000fff0 	strdeq	pc, [r0], -r0
	...
20010128:	0001ffd0 	ldrdeq	pc, [r1], -r0
	...
20010138:	0001ffd0 	ldrdeq	pc, [r1], -r0
	...
20010148:	0003fff2 	strdeq	pc, [r3], -r2
2001014c:	07000000 	streq	r0, [r0, -r0]
	...
20010158:	00037fa4 	andeq	r7, r3, r4, lsr #31
2001015c:	07800000 	streq	r0, [r0, r0]
20010160:	00078f00 	andeq	r8, r7, r0, lsl #30
20010164:	00000000 	andeq	r0, r0, r0
20010168:	00073f08 	andeq	r3, r7, r8, lsl #30
2001016c:	07800000 	streq	r0, [r0, r0]
20010170:	00078f00 	andeq	r8, r7, r0, lsl #30
20010174:	00000000 	andeq	r0, r0, r0
20010178:	000e0f00 	andeq	r0, lr, r0, lsl #30
2001017c:	038000c0 	orreq	r0, r0, #192	; 0xc0
20010180:	00038e00 	andeq	r8, r3, r0, lsl #28
20010184:	00000000 	andeq	r0, r0, r0
20010188:	000c0700 	andeq	r0, ip, r0, lsl #14
2001018c:	038001e0 	orreq	r0, r0, #224, 2	; 0x38
20010190:	0003de00 	andeq	sp, r3, r0, lsl #28
20010194:	00000000 	andeq	r0, r0, r0
20010198:	000c0000 	andeq	r0, ip, r0
2001019c:	038000c0 	orreq	r0, r0, #192	; 0xc0
200101a0:	38e1fc00 	stmiacc	r1!, {sl, fp, ip, sp, lr, pc}^
200101a4:	00000006 	andeq	r0, r0, r6
200101a8:	0e0c0000 	cdpeq	0, 0, cr0, cr12, cr0, {0}
200101ac:	0381d80e 	orreq	sp, r1, #917504	; 0xe0000
200101b0:	79f0f800 	ldmibvc	r0!, {fp, ip, sp, lr, pc}^
200101b4:	00000007 	andeq	r0, r0, r7
200101b8:	1e040000 	cdpne	0, 0, cr0, cr4, cr0, {0}
200101bc:	0383f9cf 	orreq	pc, r3, #3391488	; 0x33c000
200101c0:	73f87000 	mvnsvc	r7, #0
200101c4:	00000007 	andeq	r0, r0, r7
200101c8:	5c000000 	stcpl	0, cr0, [r0], {-0}
200101cc:	0387f9e7 	orreq	pc, r7, #3784704	; 0x39c000
200101d0:	73b87000 			; <UNDEFINED> instruction: 0x73b87000
200101d4:	00000007 	andeq	r0, r0, r7
200101d8:	fc000000 	stc2	0, cr0, [r0], {-0}
200101dc:	018771e7 	orreq	r7, r7, r7, ror #3
200101e0:	73b87000 			; <UNDEFINED> instruction: 0x73b87000
200101e4:	00000007 	andeq	r0, r0, r7
200101e8:	fc000000 	stc2	0, cr0, [r0], {-0}
200101ec:	000771c7 	andeq	r7, r7, r7, asr #3
200101f0:	73b87000 			; <UNDEFINED> instruction: 0x73b87000
200101f4:	00000007 	andeq	r0, r0, r7
200101f8:	fc000000 	stc2	0, cr0, [r0], {-0}
200101fc:	000771c7 	andeq	r7, r7, r7, asr #3
20010200:	f3f87000 	vrev64.32	d23, d0
20010204:	0000000f 	andeq	r0, r0, pc
20010208:	b8000000 	stmdalt	r0, {}	; <UNPREDICTABLE>
2001020c:	018771c3 	orreq	r7, r7, r3, asr #3
20010210:	e1f0f800 	mvns	pc, r0, lsl #16
20010214:	0000000f 	andeq	r0, r0, pc
20010218:	b8000000 	stmdalt	r0, {}	; <UNPREDICTABLE>
2001021c:	03cf73c3 	biceq	r7, pc, #201326595	; 0xc000003
20010220:	c0e0f800 	rscgt	pc, r0, r0, lsl #16
20010224:	0000000d 	andeq	r0, r0, sp
20010228:	10000000 	andne	r0, r0, r0
2001022c:	018e3381 	orreq	r3, lr, r1, lsl #7
	...
200102a8:	00000780 	andeq	r0, r0, r0, lsl #15
	...
200102b8:	00000020 	andeq	r0, r0, r0, lsr #32
	...
200102c8:	00000020 	andeq	r0, r0, r0, lsr #32
	...
200102e4:	00000c00 	andeq	r0, r0, r0, lsl #24
	...
200102f4:	00003f80 	andeq	r3, r0, r0, lsl #31
	...
20010304:	00003f80 	andeq	r3, r0, r0, lsl #31
	...
20010310:	c0000000 	andgt	r0, r0, r0
20010314:	00003fff 	strdeq	r3, [r0], -pc	; <UNPREDICTABLE>
	...
20010320:	c0000000 	andgt	r0, r0, r0
20010324:	00003fff 	strdeq	r3, [r0], -pc	; <UNPREDICTABLE>
	...
20010330:	f0000000 			; <UNDEFINED> instruction: 0xf0000000
20010334:	00003fff 	strdeq	r3, [r0], -pc	; <UNPREDICTABLE>
	...
20010340:	f0000000 			; <UNDEFINED> instruction: 0xf0000000
20010344:	00003fff 	strdeq	r3, [r0], -pc	; <UNPREDICTABLE>
	...
20010350:	fc000000 	stc2	0, cr0, [r0], {-0}
20010354:	00003fff 	strdeq	r3, [r0], -pc	; <UNPREDICTABLE>
	...
20010360:	ff000000 			; <UNDEFINED> instruction: 0xff000000
20010364:	00003fff 	strdeq	r3, [r0], -pc	; <UNPREDICTABLE>
	...
20010370:	ffc00000 			; <UNDEFINED> instruction: 0xffc00000
20010374:	00003fff 	strdeq	r3, [r0], -pc	; <UNPREDICTABLE>
20010378:	003fe000 	eorseq	lr, pc, r0
2001037c:	00000000 	andeq	r0, r0, r0
20010380:	ffe00000 			; <UNDEFINED> instruction: 0xffe00000
20010384:	00003fff 	strdeq	r3, [r0], -pc	; <UNPREDICTABLE>
20010388:	00ffe000 	rscseq	lr, pc, r0
2001038c:	00000000 	andeq	r0, r0, r0
20010390:	fff00000 			; <UNDEFINED> instruction: 0xfff00000	; IMB
20010394:	00003fff 	strdeq	r3, [r0], -pc	; <UNPREDICTABLE>
20010398:	03ffe000 	mvnseq	lr, #0
2001039c:	00000000 	andeq	r0, r0, r0
200103a0:	fffc0000 			; <UNDEFINED> instruction: 0xfffc0000
200103a4:	00003fff 	strdeq	r3, [r0], -pc	; <UNPREDICTABLE>
200103a8:	0ffff000 	svceq	0x00fff000
200103ac:	00000000 	andeq	r0, r0, r0
200103b0:	fffe0000 			; <UNDEFINED> instruction: 0xfffe0000
200103b4:	00007fff 	strdeq	r7, [r0], -pc	; <UNPREDICTABLE>
200103b8:	3ffff000 	svccc	0x00fff000
200103bc:	00000000 	andeq	r0, r0, r0
200103c0:	ffff0000 			; <UNDEFINED> instruction: 0xffff0000
200103c4:	00007fff 	strdeq	r7, [r0], -pc	; <UNPREDICTABLE>
200103c8:	fffff038 			; <UNDEFINED> instruction: 0xfffff038
200103cc:	00000000 	andeq	r0, r0, r0
200103d0:	ffffc000 			; <UNDEFINED> instruction: 0xffffc000
200103d4:	00007fff 	strdeq	r7, [r0], -pc	; <UNPREDICTABLE>
200103d8:	fffff800 	vcmla.f32	d31, d15, d0[0], #270
200103dc:	00000001 	andeq	r0, r0, r1
200103e0:	ffffc000 			; <UNDEFINED> instruction: 0xffffc000
200103e4:	00007fff 	strdeq	r7, [r0], -pc	; <UNPREDICTABLE>
200103e8:	fffffc00 			; <UNDEFINED> instruction: 0xfffffc00
200103ec:	00000001 	andeq	r0, r0, r1
200103f0:	fffff000 			; <UNDEFINED> instruction: 0xfffff000
200103f4:	00007fff 	strdeq	r7, [r0], -pc	; <UNPREDICTABLE>
200103f8:	fffffe00 			; <UNDEFINED> instruction: 0xfffffe00
200103fc:	0000007f 	andeq	r0, r0, pc, ror r0
20010400:	fffff000 			; <UNDEFINED> instruction: 0xfffff000
20010404:	00003fff 	strdeq	r3, [r0], -pc	; <UNPREDICTABLE>
20010408:	ffffff00 			; <UNDEFINED> instruction: 0xffffff00
2001040c:	0000007f 	andeq	r0, r0, pc, ror r0
20010410:	fffff000 			; <UNDEFINED> instruction: 0xfffff000
20010414:	00003fff 	strdeq	r3, [r0], -pc	; <UNPREDICTABLE>
20010418:	ffffff00 			; <UNDEFINED> instruction: 0xffffff00
2001041c:	0000007f 	andeq	r0, r0, pc, ror r0
20010420:	fffff000 			; <UNDEFINED> instruction: 0xfffff000
20010424:	00003fff 	strdeq	r3, [r0], -pc	; <UNPREDICTABLE>
20010428:	ffffff00 			; <UNDEFINED> instruction: 0xffffff00
2001042c:	000000ff 	strdeq	r0, [r0], -pc	; <UNPREDICTABLE>
20010430:	fffff000 			; <UNDEFINED> instruction: 0xfffff000
20010434:	00003fff 	strdeq	r3, [r0], -pc	; <UNPREDICTABLE>
20010438:	ffffff20 			; <UNDEFINED> instruction: 0xffffff20
2001043c:	000000ff 	strdeq	r0, [r0], -pc	; <UNPREDICTABLE>
20010440:	fffff800 	vcmla.f32	d31, d15, d0[0], #270
20010444:	00007fff 	strdeq	r7, [r0], -pc	; <UNPREDICTABLE>
20010448:	ffffff00 			; <UNDEFINED> instruction: 0xffffff00
2001044c:	000001ff 	strdeq	r0, [r0], -pc	; <UNPREDICTABLE>
20010450:	fffff800 	vcmla.f32	d31, d15, d0[0], #270
20010454:	00407fff 	strdeq	r7, [r0], #-255	; 0xffffff01
20010458:	ffffff00 			; <UNDEFINED> instruction: 0xffffff00
2001045c:	000001ff 	strdeq	r0, [r0], -pc	; <UNPREDICTABLE>
20010460:	fffff800 	vcmla.f32	d31, d15, d0[0], #270
20010464:	00007fff 	strdeq	r7, [r0], -pc	; <UNPREDICTABLE>
20010468:	ffffff00 			; <UNDEFINED> instruction: 0xffffff00
2001046c:	000001ff 	strdeq	r0, [r0], -pc	; <UNPREDICTABLE>

20010470 <roger_gray_bits>:
20010470:	00000000 	andeq	r0, r0, r0
20010474:	f0000000 			; <UNDEFINED> instruction: 0xf0000000
20010478:	0000003f 	andeq	r0, r0, pc, lsr r0
	...
20010484:	70000000 	andvc	r0, r0, r0
	...
200104a4:	00400000 	subeq	r0, r0, r0
	...
200104b4:	3c000000 	stccc	0, cr0, [r0], {-0}
	...
200104c4:	ff300000 			; <UNDEFINED> instruction: 0xff300000
200104c8:	00001000 	andeq	r1, r0, r0
	...
200104d4:	7ff00000 	svcvc	0x00f00000	; IMB
	...
200104e4:	7fff8000 	svcvc	0x00ff8000
200104e8:	00008000 	andeq	r8, r0, r0
	...
200104f4:	3effc000 	cdpcc	0, 15, cr12, cr15, cr0, {0}
200104f8:	00009000 	andeq	r9, r0, r0
	...
20010504:	ffff8000 			; <UNDEFINED> instruction: 0xffff8000
20010508:	00038003 	andeq	r8, r3, r3
	...
20010514:	fff7c000 			; <UNDEFINED> instruction: 0xfff7c000
20010518:	0003000f 	andeq	r0, r3, pc
	...
20010524:	fcf3c000 	ldc2l	0, cr12, [r3]
20010528:	0002002f 	andeq	r0, r2, pc, lsr #32
	...
20010534:	fc71c000 	ldc2l	0, cr12, [r1], #-0
20010538:	0006002f 	andeq	r0, r6, pc, lsr #32
	...
20010544:	f031c000 			; <UNDEFINED> instruction: 0xf031c000
20010548:	0004000d 	andeq	r0, r4, sp
	...
20010554:	e003c000 	and	ip, r3, r0
20010558:	000c805b 	andeq	r8, ip, fp, asr r0
	...
20010564:	0003e000 	andeq	lr, r3, r0
20010568:	0008c0f7 	strdeq	ip, [r8], -r7
	...
20010574:	0001e000 	andeq	lr, r1, r0
20010578:	0001f0fc 	strdeq	pc, [r1], -ip
	...
20010584:	0001e000 	andeq	lr, r1, r0
20010588:	0003f8f0 	strdeq	pc, [r3], -r0
	...
20010594:	0001e000 	andeq	lr, r1, r0
20010598:	0003ffe0 	andeq	pc, r3, r0, ror #31
	...
200105a4:	0000e000 	andeq	lr, r0, r0
200105a8:	0003ff80 	andeq	pc, r3, r0, lsl #31
	...
200105b4:	00006000 	andeq	r6, r0, r0
200105b8:	000bff00 	andeq	pc, fp, r0, lsl #30
	...
200105c4:	00006000 	andeq	r6, r0, r0
200105c8:	000ffe00 	andeq	pc, pc, r0, lsl #28
	...
200105d4:	00002000 	andeq	r2, r0, r0
200105d8:	000ff000 	andeq	pc, pc, r0
	...
200105e4:	00002000 	andeq	r2, r0, r0
200105e8:	000ff800 	andeq	pc, pc, r0, lsl #16
	...
200105f8:	0007f800 	andeq	pc, r7, r0, lsl #16
	...
20010608:	0007f800 	andeq	pc, r7, r0, lsl #16
	...
20010618:	0007f800 	andeq	pc, r7, r0, lsl #16
	...
20010628:	0007f800 	andeq	pc, r7, r0, lsl #16
	...
20010638:	0007f800 	andeq	pc, r7, r0, lsl #16
	...
20010648:	0007f000 	andeq	pc, r7, r0
	...
20010658:	0007f800 	andeq	pc, r7, r0, lsl #16
	...
20010668:	0003fc00 	andeq	pc, r3, r0, lsl #24
	...
20010678:	0003fc00 	andeq	pc, r3, r0, lsl #24
	...
20010684:	3e000000 	cdpcc	0, 0, cr0, cr0, cr0, {0}
20010688:	0003fc00 	andeq	pc, r3, r0, lsl #24
	...
20010694:	7c000800 	stcvc	8, cr0, [r0], {-0}
20010698:	0003ff80 	andeq	pc, r3, r0, lsl #31
	...
200106a4:	60000800 	andvs	r0, r0, r0, lsl #16
200106a8:	0003f870 	andeq	pc, r3, r0, ror r8	; <UNPREDICTABLE>
	...
200106b4:	70000800 	andvc	r0, r0, r0, lsl #16
200106b8:	0003ffd0 	ldrdeq	pc, [r3], -r0
	...
200106c4:	00000800 	andeq	r0, r0, r0, lsl #16
200106c8:	0003ffd0 	ldrdeq	pc, [r3], -r0
	...
200106d8:	0003fff0 	strdeq	pc, [r3], -r0
	...
200106e4:	00003000 	andeq	r3, r0, r0
200106e8:	0003fff0 	strdeq	pc, [r3], -r0
	...
200106f8:	0003fff0 	strdeq	pc, [r3], -r0
	...
20010708:	0003f3f0 	strdeq	pc, [r3], -r0
	...
20010718:	0003fff0 	strdeq	pc, [r3], -r0
	...
20010728:	0003fee0 	andeq	pc, r3, r0, ror #29
	...
20010738:	0001ffe0 	andeq	pc, r1, r0, ror #31
	...
20010748:	0001ffe0 	andeq	pc, r1, r0, ror #31
	...
20010758:	0002fff0 	strdeq	pc, [r2], -r0
	...
20010768:	0003fff8 	strdeq	pc, [r3], -r8
	...
20010778:	00001ffc 	strdeq	r1, [r0], -ip
	...
20010788:	00001ff8 	strdeq	r1, [r0], -r8
	...
20010798:	00001ff0 	strdeq	r1, [r0], -r0
	...
200107a8:	00000ff8 	strdeq	r0, [r0], -r8
	...
200107b4:	40000000 	andmi	r0, r0, r0
200107b8:	00000ff8 	strdeq	r0, [r0], -r8
	...
200107c4:	c0000000 	andgt	r0, r0, r0
200107c8:	00000fc7 	andeq	r0, r0, r7, asr #31
	...
200107d8:	000007fe 	strdeq	r0, [r0], -lr
	...
200107e8:	000003ff 	strdeq	r0, [r0], -pc	; <UNPREDICTABLE>
	...
200107f8:	000001ff 	strdeq	r0, [r0], -pc	; <UNPREDICTABLE>
	...
20010804:	80000000 	andhi	r0, r0, r0
20010808:	000000ff 	strdeq	r0, [r0], -pc	; <UNPREDICTABLE>
	...
20010818:	000000ff 	strdeq	r0, [r0], -pc	; <UNPREDICTABLE>
	...
20010824:	00004000 	andeq	r4, r0, r0
20010828:	000000bf 	strheq	r0, [r0], -pc	; <UNPREDICTABLE>
	...
20010834:	00304000 	eorseq	r4, r0, r0
20010838:	000000df 	ldrdeq	r0, [r0], -pc	; <UNPREDICTABLE>
	...
20010844:	80e00000 	rschi	r0, r0, r0
20010848:	000000bf 	strheq	r0, [r0], -pc	; <UNPREDICTABLE>
	...
20010854:	f0a08000 			; <UNDEFINED> instruction: 0xf0a08000
20010858:	000000bf 	strheq	r0, [r0], -pc	; <UNPREDICTABLE>
	...
20010864:	f3c08000 	vaddl.u8	q12, d0, d0
20010868:	000000bf 	strheq	r0, [r0], -pc	; <UNPREDICTABLE>
2001086c:	00000000 	andeq	r0, r0, r0

20010870 <roger_light_bits>:
	...
200108f4:	01000000 	mrseq	r0, (UNDEF: 0)
	...
20010904:	00004000 	andeq	r4, r0, r0
	...
20010914:	00080000 	andeq	r0, r8, r0
	...
20010924:	030c0000 	movweq	r0, #49152	; 0xc000
	...
20010934:	038e0000 	orreq	r0, lr, #0
	...
20010944:	0fce0000 	svceq	0x00ce0000
	...
20010954:	1ffc0000 	svcne	0x00fc0000
	...
20010964:	ff9c0000 			; <UNDEFINED> instruction: 0xff9c0000
20010968:	00000000 	andeq	r0, r0, r0
2001096c:	00400000 	subeq	r0, r0, r0
20010970:	00081000 	andeq	r1, r8, r0
20010974:	008e0000 	addeq	r0, lr, r0
20010978:	00000003 	andeq	r0, r0, r3
2001097c:	00400000 	subeq	r0, r0, r0
20010980:	000c1000 	andeq	r1, ip, r0
20010984:	008e0000 	addeq	r0, lr, r0
20010988:	0000000e 	andeq	r0, r0, lr
2001098c:	00400000 	subeq	r0, r0, r0
20010990:	00042000 	andeq	r2, r4, r0
20010994:	00c60000 	sbceq	r0, r6, r0
20010998:	00000011 	andeq	r0, r0, r1, lsl r0
2001099c:	00400030 	subeq	r0, r0, r0, lsr r0
200109a0:	00060000 	andeq	r0, r6, r0
200109a4:	00e70000 	rsceq	r0, r7, r0
200109a8:	00000070 	andeq	r0, r0, r0, ror r0
200109ac:	004000e0 	subeq	r0, r0, r0, ror #1
200109b0:	82030000 	andhi	r0, r3, #0
200109b4:	00838008 	addeq	r8, r3, r8
200109b8:	810000f8 	strdhi	r0, [r0, -r8]
200109bc:	00400000 	subeq	r0, r0, r0
200109c0:	84018000 	strhi	r8, [r1], #-0
200109c4:	00038008 	andeq	r8, r3, r8
200109c8:	830001f8 	movwhi	r0, #504	; 0x1f8
200109cc:	00400410 	subeq	r0, r0, r0, lsl r4
200109d0:	84408000 	strbhi	r8, [r0], #-0
200109d4:	0007c008 	andeq	ip, r7, r8
200109d8:	02000ff0 	andeq	r0, r0, #240, 30	; 0x3c0
200109dc:	00408c10 	subeq	r8, r0, r0, lsl ip
200109e0:	84408000 	strbhi	r8, [r0], #-0
200109e4:	0003c008 	andeq	ip, r3, r8
200109e8:	020007e0 	andeq	r0, r0, #224, 14	; 0x3800000
200109ec:	01c08830 	biceq	r8, r0, r0, lsr r8
200109f0:	84408000 	strbhi	r8, [r0], #-0
200109f4:	0081e018 	addeq	lr, r1, r8, lsl r0
200109f8:	020007f8 	andeq	r0, r0, #248, 14	; 0x3e00000
200109fc:	00008820 	andeq	r8, r0, r0, lsr #16
20010a00:	04018000 	streq	r8, [r1], #-0
20010a04:	0021e010 	eoreq	lr, r1, r0, lsl r0
20010a08:	460007fc 			; <UNDEFINED> instruction: 0x460007fc
20010a0c:	00008820 	andeq	r8, r0, r0, lsr #16
20010a10:	06010000 	streq	r0, [r1], -r0
20010a14:	0001e010 	andeq	lr, r1, r0, lsl r0
20010a18:	440007f8 	strmi	r0, [r0], #-2040	; 0xfffff808
20010a1c:	00008820 	andeq	r8, r0, r0, lsr #16
20010a20:	03010000 	movweq	r0, #4096	; 0x1000
20010a24:	0000e012 	andeq	lr, r0, r2, lsl r0
20010a28:	ec0007dd 	stc	7, cr0, [r0], {221}	; 0xdd
20010a2c:	00418860 	subeq	r8, r1, r0, ror #16
20010a30:	c1e1e000 	mvngt	lr, r0
20010a34:	0300e01f 	movweq	lr, #31
20010a38:	880007ff 	stmdahi	r0, {r0, r1, r2, r3, r4, r5, r6, r7, r8, r9, sl}
20010a3c:	01c719c0 	biceq	r1, r7, r0, asr #19
20010a40:	00000000 	andeq	r0, r0, r0
20010a44:	0f80d000 	svceq	0x0080d000
20010a48:	00000fd9 	ldrdeq	r0, [r0], -r9
	...
20010a54:	3d808000 	stccc	0, cr8, [r0]
20010a58:	000007d8 	ldrdeq	r0, [r0], -r8
	...
20010a64:	ffc08000 			; <UNDEFINED> instruction: 0xffc08000
20010a68:	000003f8 	strdeq	r0, [r0], -r8
	...
20010a74:	f3c18000 	vaddl.u8	q12, d1, d0
20010a78:	000003fb 	strdeq	r0, [r0], -fp
	...
20010a84:	c1e10800 	mvngt	r0, r0, lsl #16
20010a88:	000003f9 	strdeq	r0, [r0], -r9
	...
20010a94:	83c00000 	bichi	r0, r0, #0
20010a98:	00000059 	andeq	r0, r0, r9, asr r0
	...
20010aa4:	9d008000 	stcls	0, cr8, [r0, #-0]
20010aa8:	00000008 	andeq	r0, r0, r8
	...
20010ab4:	8c014000 	stchi	0, cr4, [r1], {-0}
	...
20010ac4:	7f005000 	svcvc	0x00005000
20010ac8:	00000008 	andeq	r0, r0, r8
	...
20010ad4:	3e001000 	cdpcc	0, 0, cr1, cr0, cr0, {0}
20010ad8:	00000008 	andeq	r0, r0, r8
	...
20010ae8:	00000008 	andeq	r0, r0, r8
	...
20010af8:	00000008 	andeq	r0, r0, r8
	...
20010b04:	18000000 	stmdane	r0, {}	; <UNPREDICTABLE>
20010b08:	00000c08 	andeq	r0, r0, r8, lsl #24
	...
20010b14:	3c00c000 	stccc	0, cr12, [r0], {-0}
20010b18:	00000008 	andeq	r0, r0, r8
	...
20010b24:	1c000000 	stcne	0, cr0, [r0], {-0}
20010b28:	00000118 	andeq	r0, r0, r8, lsl r1
	...
20010b34:	06008000 	streq	r8, [r0], -r0
20010b38:	00000018 	andeq	r0, r0, r8, lsl r0
	...
20010b44:	0300c000 	movweq	ip, #0
20010b48:	00000018 	andeq	r0, r0, r8, lsl r0
	...
20010b54:	e380c000 	orr	ip, r0, #0
20010b58:	00010008 	andeq	r0, r1, r8
	...
20010b64:	e180c000 	orr	ip, r0, r0
20010b68:	00000007 	andeq	r0, r0, r7
	...
20010b74:	00418000 	subeq	r8, r1, r0
20010b78:	00000003 	andeq	r0, r0, r3
	...
20010b84:	00218000 	eoreq	r8, r1, r0
20010b88:	00000007 	andeq	r0, r0, r7
	...
20010b94:	00130000 	andseq	r0, r3, r0
20010b98:	0000000f 	andeq	r0, r0, pc
	...
20010ba4:	87810000 	strhi	r0, [r1, r0]
20010ba8:	00000007 	andeq	r0, r0, r7
	...
20010bb4:	bfc70000 	svclt	0x00c70000
20010bb8:	00000007 	andeq	r0, r0, r7
	...
20010bc4:	38e70000 	stmiacc	r7!, {}^	; <UNPREDICTABLE>
	...
20010bd4:	800e0000 	andhi	r0, lr, r0
20010bd8:	00000001 	andeq	r0, r0, r1
	...
20010be4:	f49c0000 			; <UNDEFINED> instruction: 0xf49c0000
	...
20010bf4:	fff00000 			; <UNDEFINED> instruction: 0xfff00000	; IMB
	...
20010c04:	63b80000 			; <UNDEFINED> instruction: 0x63b80000
	...
20010c14:	e3704000 	cmn	r0, #0
	...
20010c24:	f0700000 			; <UNDEFINED> instruction: 0xf0700000
20010c28:	00000040 	andeq	r0, r0, r0, asr #32
	...
20010c34:	f3c00000 	vaddl.u8	q8, d0, d0
	...
20010c44:	7f108000 	svcvc	0x00108000
20010c48:	00000040 	andeq	r0, r0, r0, asr #32
	...
20010c54:	0f100000 	svceq	0x00100000
20010c58:	00000040 	andeq	r0, r0, r0, asr #32
	...
20010c64:	0c280000 	stceq	0, cr0, [r8], #-0
20010c68:	00000040 	andeq	r0, r0, r0, asr #32
20010c6c:	00000000 	andeq	r0, r0, r0

20010c70 <firstTime.4040>:
20010c70:	00000001 	andeq	r0, r0, r1

20010c74 <game_over_witch1_black_bits>:
20010c74:	80000000 	andhi	r0, r0, r0
20010c78:	fe000001 	cdp2	0, 0, cr0, cr0, cr1, {0}
20010c7c:	0000000f 	andeq	r0, r0, pc
20010c80:	00000000 	andeq	r0, r0, r0
20010c84:	60000000 	andvs	r0, r0, r0
20010c88:	f8000000 			; <UNDEFINED> instruction: 0xf8000000
20010c8c:	0000001f 	andeq	r0, r0, pc, lsl r0
20010c90:	00000000 	andeq	r0, r0, r0
20010c94:	18000000 	stmdane	r0, {}	; <UNPREDICTABLE>
20010c98:	30000000 	andcc	r0, r0, r0
20010c9c:	0000003f 	andeq	r0, r0, pc, lsr r0
20010ca0:	00000000 	andeq	r0, r0, r0
20010ca4:	06000000 	streq	r0, [r0], -r0
20010ca8:	00000000 	andeq	r0, r0, r0
20010cac:	0000007f 	andeq	r0, r0, pc, ror r0
20010cb0:	00000000 	andeq	r0, r0, r0
20010cb4:	01800000 	orreq	r0, r0, r0
20010cb8:	00000000 	andeq	r0, r0, r0
20010cbc:	000001fe 	strdeq	r0, [r0], -lr
20010cc0:	00000000 	andeq	r0, r0, r0
20010cc4:	00700000 	rsbseq	r0, r0, r0
20010cc8:	00000000 	andeq	r0, r0, r0
20010ccc:	000007ff 	strdeq	r0, [r0], -pc	; <UNPREDICTABLE>
20010cd0:	00000000 	andeq	r0, r0, r0
20010cd4:	000e0000 	andeq	r0, lr, r0
20010cd8:	00000060 	andeq	r0, r0, r0, rrx
20010cdc:	00000fff 	strdeq	r0, [r0], -pc	; <UNPREDICTABLE>
20010ce0:	00000000 	andeq	r0, r0, r0
20010ce4:	0001e000 	andeq	lr, r1, r0
20010ce8:	000001f8 	strdeq	r0, [r0], -r8
20010cec:	00001ffe 	strdeq	r1, [r0], -lr
20010cf0:	00000000 	andeq	r0, r0, r0
20010cf4:	00001c00 	andeq	r1, r0, r0, lsl #24
20010cf8:	000001ff 	strdeq	r0, [r0], -pc	; <UNPREDICTABLE>
20010cfc:	00003ffe 	strdeq	r3, [r0], -lr
20010d00:	00000000 	andeq	r0, r0, r0
20010d04:	f8000380 			; <UNDEFINED> instruction: 0xf8000380
20010d08:	000000ff 	strdeq	r0, [r0], -pc	; <UNPREDICTABLE>
20010d0c:	00007fff 	strdeq	r7, [r0], -pc	; <UNPREDICTABLE>
20010d10:	00000000 	andeq	r0, r0, r0
20010d14:	ff800070 			; <UNDEFINED> instruction: 0xff800070
20010d18:	000000ff 	strdeq	r0, [r0], -pc	; <UNPREDICTABLE>
20010d1c:	0000ffff 	strdeq	pc, [r0], -pc	; <UNPREDICTABLE>
20010d20:	00000000 	andeq	r0, r0, r0
20010d24:	ffe00010 			; <UNDEFINED> instruction: 0xffe00010
20010d28:	0000007f 	andeq	r0, r0, pc, ror r0
20010d2c:	0001fffe 	strdeq	pc, [r1], -lr
20010d30:	00000000 	andeq	r0, r0, r0
20010d34:	fff80010 			; <UNDEFINED> instruction: 0xfff80010
20010d38:	00000047 	andeq	r0, r0, r7, asr #32
20010d3c:	0003fff0 	strdeq	pc, [r3], -r0
20010d40:	00000000 	andeq	r0, r0, r0
20010d44:	007e00e0 	rsbseq	r0, lr, r0, ror #1
20010d48:	00000040 	andeq	r0, r0, r0, asr #32
20010d4c:	0003fff0 	strdeq	pc, [r3], -r0
20010d50:	00000000 	andeq	r0, r0, r0
20010d54:	0001ff00 	andeq	pc, r1, r0, lsl #30
20010d58:	00000020 	andeq	r0, r0, r0, lsr #32
20010d5c:	0007ffe0 	andeq	pc, r7, r0, ror #31
	...
20010d68:	00000020 	andeq	r0, r0, r0, lsr #32
20010d6c:	000fffc0 	andeq	pc, pc, r0, asr #31
	...
20010d78:	ff800010 			; <UNDEFINED> instruction: 0xff800010
20010d7c:	001fff8f 	andseq	pc, pc, pc, lsl #31
	...
20010d88:	ffffe010 			; <UNDEFINED> instruction: 0xffffe010
20010d8c:	001fffff 			; <UNDEFINED> instruction: 0x001fffff
	...
20010d98:	ffffff88 			; <UNDEFINED> instruction: 0xffffff88
20010d9c:	003fffff 	ldrshteq	pc, [pc], -pc	; <UNPREDICTABLE>
	...
20010da8:	fffffffc 			; <UNDEFINED> instruction: 0xfffffffc
20010dac:	003fffff 	ldrshteq	pc, [pc], -pc	; <UNPREDICTABLE>
20010db0:	00000000 	andeq	r0, r0, r0
20010db4:	80000000 	andhi	r0, r0, r0
20010db8:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
20010dbc:	07ffffff 			; <UNDEFINED> instruction: 0x07ffffff
20010dc0:	00000000 	andeq	r0, r0, r0
20010dc4:	f0000000 			; <UNDEFINED> instruction: 0xf0000000
20010dc8:	00301fff 	ldrshteq	r1, [r0], -pc
20010dcc:	7ffff018 	svcvc	0x00fff018
20010dd0:	00000000 	andeq	r0, r0, r0
20010dd4:	fe000000 	cdp2	0, 0, cr0, cr0, cr0, {0}
20010dd8:	0463fc7f 	strbteq	pc, [r3], #-3199	; 0xfffff381	; <UNPREDICTABLE>
20010ddc:	ffff07c4 			; <UNDEFINED> instruction: 0xffff07c4
20010de0:	00000003 	andeq	r0, r0, r3
20010de4:	ffc00000 			; <UNDEFINED> instruction: 0xffc00000
20010de8:	1486041f 	strne	r0, [r6], #1055	; 0x41f
20010dec:	fffc0863 	vcmla.f32	q8, q6, d19[0], #270
20010df0:	0000003f 	andeq	r0, r0, pc, lsr r0
20010df4:	fffc0000 			; <UNDEFINED> instruction: 0xfffc0000
20010df8:	910cc607 	tstls	ip, r7, lsl #12
20010dfc:	fff81ba1 			; <UNDEFINED> instruction: 0xfff81ba1
20010e00:	000000ff 	strdeq	r0, [r0], -pc	; <UNPREDICTABLE>
20010e04:	ffff8000 			; <UNDEFINED> instruction: 0xffff8000
20010e08:	081b7303 	ldmdaeq	fp, {r0, r1, r8, r9, ip, sp, lr}
20010e0c:	ffe016f0 			; <UNDEFINED> instruction: 0xffe016f0
20010e10:	000007ff 	strdeq	r0, [r0], -pc	; <UNPREDICTABLE>
20010e14:	ffffe000 			; <UNDEFINED> instruction: 0xffffe000
20010e18:	0036d903 	eorseq	sp, r6, r3, lsl #18
20010e1c:	ffc03da8 			; <UNDEFINED> instruction: 0xffc03da8
20010e20:	00001fff 	strdeq	r1, [r0], -pc	; <UNPREDICTABLE>
20010e24:	fffff000 			; <UNDEFINED> instruction: 0xfffff000
20010e28:	0064c983 	rsbeq	ip, r4, r3, lsl #19
20010e2c:	ffc06dac 			; <UNDEFINED> instruction: 0xffc06dac
20010e30:	00007fff 	strdeq	r7, [r0], -pc	; <UNPREDICTABLE>
20010e34:	fffff000 			; <UNDEFINED> instruction: 0xfffff000
20010e38:	0086d8c3 	addeq	sp, r6, r3, asr #17
20010e3c:	ffc0c426 			; <UNDEFINED> instruction: 0xffc0c426
20010e40:	00007fff 	strdeq	r7, [r0], -pc	; <UNPREDICTABLE>
20010e44:	fffff800 	vcmla.f32	d31, d15, d0[0], #270
20010e48:	e1f331c3 	mvns	r3, r3, asr #3
20010e4c:	ffc087fb 			; <UNDEFINED> instruction: 0xffc087fb
20010e50:	00007fff 	strdeq	r7, [r0], -pc	; <UNPREDICTABLE>
20010e54:	fffff000 			; <UNDEFINED> instruction: 0xfffff000
20010e58:	c08ffe01 	addgt	pc, pc, r1, lsl #28
20010e5c:	ffc07ff0 			; <UNDEFINED> instruction: 0xffc07ff0
20010e60:	00003fff 	strdeq	r3, [r0], -pc	; <UNPREDICTABLE>
20010e64:	00000000 	andeq	r0, r0, r0
20010e68:	80800041 	addhi	r0, r0, r1, asr #32
20010e6c:	00221800 	eoreq	r1, r2, r0, lsl #16
20010e70:	0000007f 	andeq	r0, r0, pc, ror r0
20010e74:	00000000 	andeq	r0, r0, r0
20010e78:	808000c2 	addhi	r0, r0, r2, asr #1
20010e7c:	00220000 	eoreq	r0, r2, r0
	...
20010e88:	00c801b2 	strheq	r0, [r8], #18
20010e8c:	00270011 	eoreq	r0, r7, r1, lsl r0
	...
20010e98:	00080304 	andeq	r0, r8, r4, lsl #6
20010e9c:	002b8010 	eoreq	r8, fp, r0, lsl r0
	...
20010ea8:	20080604 	andcs	r0, r8, r4, lsl #12
20010eac:	0021c010 	eoreq	ip, r1, r0, lsl r0
	...
20010eb8:	20080e04 	andcs	r0, r8, r4, lsl #28
20010ebc:	0010e018 	andseq	lr, r0, r8, lsl r0
	...
20010ec8:	28183c08 	ldmdacs	r8, {r3, sl, fp, ip, sp}
20010ecc:	00107808 	andseq	r7, r0, r8, lsl #16
	...
20010ed8:	4870ec08 	ldmdami	r0!, {r3, sl, fp, sp, lr, pc}^
20010edc:	00102c06 	andseq	r2, r0, r6, lsl #24
	...
20010ee8:	00c38810 	sbceq	r8, r3, r0, lsl r8
20010eec:	00083603 	andeq	r3, r8, r3, lsl #12
20010ef0:	00000000 	andeq	r0, r0, r0
20010ef4:	ffe00000 			; <UNDEFINED> instruction: 0xffe00000
20010ef8:	818e181f 	orrhi	r1, lr, pc, lsl r8
20010efc:	fff813e1 			; <UNDEFINED> instruction: 0xfff813e1
20010f00:	00000003 	andeq	r0, r0, r3
20010f04:	003c0000 	eorseq	r0, ip, r0
20010f08:	83f81020 	mvnshi	r1, #32
20010f0c:	fff8183f 			; <UNDEFINED> instruction: 0xfff8183f
20010f10:	0000001f 	andeq	r0, r0, pc, lsl r0
20010f14:	00030000 	andeq	r0, r3, r0
20010f18:	c6883020 	strgt	r3, [r8], r0, lsr #32
20010f1c:	fffc0822 	vcmla.f32	d16, d12, d18[0], #270
20010f20:	000003ff 	strdeq	r0, [r0], -pc	; <UNPREDICTABLE>
20010f24:	0000c000 	andeq	ip, r0, r0
20010f28:	7c886060 	stcvc	0, cr6, [r8], {96}	; 0x60
20010f2c:	fffc0c22 			; <UNDEFINED> instruction: 0xfffc0c22
20010f30:	00001fff 	strdeq	r1, [r0], -pc	; <UNPREDICTABLE>
20010f34:	00007000 	andeq	r7, r0, r0
20010f38:	0078c060 	rsbseq	ip, r8, r0, rrx
20010f3c:	fffe0424 			; <UNDEFINED> instruction: 0xfffe0424
20010f40:	00007fff 	strdeq	r7, [r0], -pc	; <UNPREDICTABLE>
20010f44:	00001800 	andeq	r1, r0, r0, lsl #16
20010f48:	000080c0 	andeq	r8, r0, r0, asr #1
20010f4c:	ffdf0614 			; <UNDEFINED> instruction: 0xffdf0614
20010f50:	0000ffff 	strdeq	pc, [r0], -pc	; <UNPREDICTABLE>
20010f54:	00000c00 	andeq	r0, r0, r0, lsl #24
20010f58:	000101c0 	andeq	r0, r1, r0, asr #3
20010f5c:	ffcf8318 			; <UNDEFINED> instruction: 0xffcf8318
20010f60:	0001ffff 	strdeq	pc, [r1], -pc	; <UNPREDICTABLE>
20010f64:	00000600 	andeq	r0, r0, r0, lsl #12
20010f68:	00032780 	andeq	r2, r3, r0, lsl #15
20010f6c:	ffcfc180 			; <UNDEFINED> instruction: 0xffcfc180
20010f70:	0003ffff 	strdeq	pc, [r3], -pc	; <UNPREDICTABLE>
20010f74:	00000100 	andeq	r0, r0, r0, lsl #2
20010f78:	00064700 	andeq	r4, r6, r0, lsl #14
20010f7c:	ffc7c0c0 			; <UNDEFINED> instruction: 0xffc7c0c0
20010f80:	0007ffff 	strdeq	pc, [r7], -pc	; <UNPREDICTABLE>
20010f84:	00000180 	andeq	r0, r0, r0, lsl #3
20010f88:	00044e00 	andeq	r4, r4, r0, lsl #28
20010f8c:	ffc7e460 			; <UNDEFINED> instruction: 0xffc7e460
20010f90:	000fffff 	strdeq	pc, [pc], -pc	; <UNPREDICTABLE>
20010f94:	000000c0 	andeq	r0, r0, r0, asr #1
20010f98:	030c9c00 	movweq	r9, #52224	; 0xcc00
20010f9c:	ffc3e230 			; <UNDEFINED> instruction: 0xffc3e230
20010fa0:	003fffff 	ldrshteq	pc, [pc], -pc	; <UNPREDICTABLE>
20010fa4:	00000040 	andeq	r0, r0, r0, asr #32
20010fa8:	04983800 	ldreq	r3, [r8], #2048	; 0x800
20010fac:	ffc3f11c 			; <UNDEFINED> instruction: 0xffc3f11c
20010fb0:	00ffffff 	ldrshteq	pc, [pc], #255	; <UNPREDICTABLE>
20010fb4:	00000060 	andeq	r0, r0, r0, rrx
20010fb8:	04f27800 	ldrbteq	r7, [r2], #2048	; 0x800
20010fbc:	ff81f807 	vcmla.f32	d15, d1, d7[0], #0
20010fc0:	01ffffff 	ldrsheq	pc, [pc, #255]	; 200110c7 <game_over_witch1_gray_bits+0x53>	; <UNPREDICTABLE>
20010fc4:	00000020 	andeq	r0, r0, r0, lsr #32
20010fc8:	ffc0f000 			; <UNDEFINED> instruction: 0xffc0f000
20010fcc:	ff007c01 			; <UNDEFINED> instruction: 0xff007c01
20010fd0:	07ffffff 			; <UNDEFINED> instruction: 0x07ffffff
20010fd4:	00000030 	andeq	r0, r0, r0, lsr r0
20010fd8:	0001e000 	andeq	lr, r1, r0
20010fdc:	fe003f00 	cdp2	15, 0, cr3, cr0, cr0, {0}
20010fe0:	0fffffff 	svceq	0x00ffffff
20010fe4:	00000018 	andeq	r0, r0, r8, lsl r0
20010fe8:	0c03c000 	stceq	0, cr12, [r3], {-0}
20010fec:	fc001f80 	stc2	15, cr1, [r0], {128}	; 0x80
20010ff0:	1fffffff 	svcne	0x00ffffff
20010ff4:	0000000c 	andeq	r0, r0, ip
20010ff8:	12078000 	andne	r8, r7, #0
20010ffc:	f8000fe0 			; <UNDEFINED> instruction: 0xf8000fe0
20011000:	3fffffff 	svccc	0x00ffffff
20011004:	00000006 	andeq	r0, r0, r6
20011008:	020e0000 	andeq	r0, lr, #0
2001100c:	f00003f8 			; <UNDEFINED> instruction: 0xf00003f8
20011010:	3fffffff 	svccc	0x00ffffff
20011014:	00000001 	andeq	r0, r0, r1
20011018:	003e0000 	eorseq	r0, lr, r0
2001101c:	e00001fe 	strd	r0, [r0], -lr
20011020:	7fffffff 	svcvc	0x00ffffff
20011024:	00000001 	andeq	r0, r0, r1
20011028:	007c0000 	rsbseq	r0, ip, r0
2001102c:	c00000ff 	strdgt	r0, [r0], -pc	; <UNPREDICTABLE>
20011030:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
20011034:	00000000 	andeq	r0, r0, r0
20011038:	fff80000 			; <UNDEFINED> instruction: 0xfff80000
2001103c:	8000007f 	andhi	r0, r0, pc, ror r0
20011040:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
20011044:	00000000 	andeq	r0, r0, r0
20011048:	ffe00000 			; <UNDEFINED> instruction: 0xffe00000
2001104c:	8000003f 	andhi	r0, r0, pc, lsr r0
20011050:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
20011054:	00000000 	andeq	r0, r0, r0
20011058:	ff800000 			; <UNDEFINED> instruction: 0xff800000
2001105c:	8000001f 	andhi	r0, r0, pc, lsl r0
20011060:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
20011064:	00000000 	andeq	r0, r0, r0
20011068:	f0000000 			; <UNDEFINED> instruction: 0xf0000000
2001106c:	80000001 	andhi	r0, r0, r1
20011070:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff

20011074 <game_over_witch1_gray_bits>:
20011074:	00000000 	andeq	r0, r0, r0
20011078:	01fffffe 	ldrsheq	pc, [pc, #254]	; 2001117e <game_over_witch1_gray_bits+0x10a>	; <UNPREDICTABLE>
	...
20011084:	80000000 	andhi	r0, r0, r0
20011088:	07ffffff 			; <UNDEFINED> instruction: 0x07ffffff
	...
20011094:	e0000000 	and	r0, r0, r0
20011098:	cfffffff 	svcgt	0x00ffffff
	...
200110a4:	f8000000 			; <UNDEFINED> instruction: 0xf8000000
200110a8:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
	...
200110b4:	fe000000 	cdp2	0, 0, cr0, cr0, cr0, {0}
200110b8:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
200110bc:	00000001 	andeq	r0, r0, r1
200110c0:	00000000 	andeq	r0, r0, r0
200110c4:	ff800000 			; <UNDEFINED> instruction: 0xff800000
200110c8:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
	...
200110d4:	fff00000 			; <UNDEFINED> instruction: 0xfff00000	; IMB
200110d8:	ffffff9f 			; <UNDEFINED> instruction: 0xffffff9f
	...
200110e4:	fffe0000 			; <UNDEFINED> instruction: 0xfffe0000
200110e8:	fffffe07 			; <UNDEFINED> instruction: 0xfffffe07
200110ec:	00000001 	andeq	r0, r0, r1
200110f0:	00000000 	andeq	r0, r0, r0
200110f4:	ffffe000 			; <UNDEFINED> instruction: 0xffffe000
200110f8:	fffffe00 			; <UNDEFINED> instruction: 0xfffffe00
200110fc:	00000001 	andeq	r0, r0, r1
20011100:	00000000 	andeq	r0, r0, r0
20011104:	07fffc00 	ldrbeq	pc, [pc, r0, lsl #24]!	; <UNPREDICTABLE>
20011108:	ffffff00 			; <UNDEFINED> instruction: 0xffffff00
	...
20011114:	007fff80 	rsbseq	pc, pc, r0, lsl #31
20011118:	ffffff00 			; <UNDEFINED> instruction: 0xffffff00
	...
20011124:	001fffe0 	andseq	pc, pc, r0, ror #31
20011128:	ffffff80 			; <UNDEFINED> instruction: 0xffffff80
2001112c:	00000001 	andeq	r0, r0, r1
20011130:	00000000 	andeq	r0, r0, r0
20011134:	0007ffe0 	andeq	pc, r7, r0, ror #31
20011138:	ffffff80 			; <UNDEFINED> instruction: 0xffffff80
2001113c:	0000000f 	andeq	r0, r0, pc
20011140:	00000000 	andeq	r0, r0, r0
20011144:	0001ff00 	andeq	pc, r1, r0, lsl #30
20011148:	ffffff80 			; <UNDEFINED> instruction: 0xffffff80
2001114c:	0000000f 	andeq	r0, r0, pc
	...
20011158:	ffffffc0 			; <UNDEFINED> instruction: 0xffffffc0
2001115c:	0000001f 	andeq	r0, r0, pc, lsl r0
	...
20011168:	ffffffc0 			; <UNDEFINED> instruction: 0xffffffc0
2001116c:	0000003f 	andeq	r0, r0, pc, lsr r0
	...
20011178:	007fffe0 	rsbseq	pc, pc, r0, ror #31
2001117c:	00000070 	andeq	r0, r0, r0, ror r0
	...
20011188:	00001fe0 	andeq	r1, r0, r0, ror #31
	...
20011198:	00000070 	andeq	r0, r0, r0, ror r0
	...
20011218:	00012000 	andeq	r2, r1, r0
2001121c:	00000240 	andeq	r0, r0, r0, asr #4
	...
20011228:	00033000 	andeq	r3, r3, r0
2001122c:	00000240 	andeq	r0, r0, r0, asr #4
	...
20011238:	00012000 	andeq	r2, r1, r0
2001123c:	000003c0 	andeq	r0, r0, r0, asr #7
	...
20011248:	0000c000 	andeq	ip, r0, r0
	...
200112d8:	00001000 	andeq	r1, r0, r0
200112dc:	00001000 	andeq	r1, r0, r0
	...
200112e8:	00007000 	andeq	r7, r0, r0
200112ec:	00000800 	andeq	r0, r0, r0, lsl #16
	...
200112f8:	0001e000 	andeq	lr, r1, r0
200112fc:	00000c00 	andeq	r0, r0, r0, lsl #24
20011300:	00000000 	andeq	r0, r0, r0
20011304:	ffc00000 			; <UNDEFINED> instruction: 0xffc00000
20011308:	0007e01f 	andeq	lr, r7, pc, lsl r0
2001130c:	000007c0 	andeq	r0, r0, r0, asr #15
20011310:	00000000 	andeq	r0, r0, r0
20011314:	fffc0000 			; <UNDEFINED> instruction: 0xfffc0000
20011318:	0107c01f 	tsteq	r7, pc, lsl r0
2001131c:	000007c1 	andeq	r0, r0, r1, asr #15
20011320:	00000000 	andeq	r0, r0, r0
20011324:	ffff0000 			; <UNDEFINED> instruction: 0xffff0000
20011328:	8307801f 	movwhi	r8, #28703	; 0x701f
2001132c:	000003c1 	andeq	r0, r0, r1, asr #7
20011330:	00000000 	andeq	r0, r0, r0
20011334:	ffff8000 			; <UNDEFINED> instruction: 0xffff8000
20011338:	ff87001f 			; <UNDEFINED> instruction: 0xff87001f
2001133c:	000003c3 	andeq	r0, r0, r3, asr #7
20011340:	00000000 	andeq	r0, r0, r0
20011344:	ffffe000 			; <UNDEFINED> instruction: 0xffffe000
20011348:	ffff003f 			; <UNDEFINED> instruction: 0xffff003f
2001134c:	002001e3 	eoreq	r0, r0, r3, ror #3
20011350:	00000000 	andeq	r0, r0, r0
20011354:	fffff000 			; <UNDEFINED> instruction: 0xfffff000
20011358:	fffe003f 			; <UNDEFINED> instruction: 0xfffe003f
2001135c:	003000e7 	eorseq	r0, r0, r7, ror #1
20011360:	00000000 	andeq	r0, r0, r0
20011364:	fffff800 	vcmla.f32	d31, d15, d0[0], #270
20011368:	fffc007f 			; <UNDEFINED> instruction: 0xfffc007f
2001136c:	0030007f 	eorseq	r0, r0, pc, ror r0
20011370:	00000000 	andeq	r0, r0, r0
20011374:	fffffe00 			; <UNDEFINED> instruction: 0xfffffe00
20011378:	fff800ff 			; <UNDEFINED> instruction: 0xfff800ff
2001137c:	0038003f 	eorseq	r0, r8, pc, lsr r0
20011380:	00000000 	andeq	r0, r0, r0
20011384:	fffffe00 			; <UNDEFINED> instruction: 0xfffffe00
20011388:	fff801ff 			; <UNDEFINED> instruction: 0xfff801ff
2001138c:	0038001f 	eorseq	r0, r8, pc, lsl r0
20011390:	00000000 	andeq	r0, r0, r0
20011394:	ffffff00 			; <UNDEFINED> instruction: 0xffffff00
20011398:	fcf003ff 	ldc2l	3, cr0, [r0], #1020	; 0x3fc
2001139c:	003c000f 	eorseq	r0, ip, pc
200113a0:	00000000 	andeq	r0, r0, r0
200113a4:	ffffff80 			; <UNDEFINED> instruction: 0xffffff80
200113a8:	f86007ff 			; <UNDEFINED> instruction: 0xf86007ff
200113ac:	003c0003 	eorseq	r0, ip, r3
200113b0:	00000000 	andeq	r0, r0, r0
200113b4:	ffffff80 			; <UNDEFINED> instruction: 0xffffff80
200113b8:	f80007ff 			; <UNDEFINED> instruction: 0xf80007ff
200113bc:	007e0000 	rsbseq	r0, lr, r0
200113c0:	00000000 	andeq	r0, r0, r0
200113c4:	ffffffc0 			; <UNDEFINED> instruction: 0xffffffc0
200113c8:	00000fff 	strdeq	r0, [r0], -pc	; <UNPREDICTABLE>
200113cc:	00ff8000 	rscseq	r8, pc, r0
200113d0:	00000000 	andeq	r0, r0, r0
200113d4:	ffffffc0 			; <UNDEFINED> instruction: 0xffffffc0
200113d8:	00001fff 	strdeq	r1, [r0], -pc	; <UNPREDICTABLE>
200113dc:	01ffc000 	mvnseq	ip, r0
200113e0:	00000000 	andeq	r0, r0, r0
200113e4:	ffffffe0 			; <UNDEFINED> instruction: 0xffffffe0
200113e8:	00003fff 	strdeq	r3, [r0], -pc	; <UNPREDICTABLE>
200113ec:	03ffe000 	mvnseq	lr, #0
200113f0:	00000000 	andeq	r0, r0, r0
200113f4:	fffffff0 			; <UNDEFINED> instruction: 0xfffffff0
200113f8:	00007fff 	strdeq	r7, [r0], -pc	; <UNPREDICTABLE>
200113fc:	07fff000 	ldrbeq	pc, [pc, r0]!	; <UNPREDICTABLE>
20011400:	00000000 	andeq	r0, r0, r0
20011404:	fffffff8 			; <UNDEFINED> instruction: 0xfffffff8
20011408:	0001ffff 	strdeq	pc, [r1], -pc	; <UNPREDICTABLE>
2001140c:	0ffffc00 	svceq	0x00fffc00
20011410:	00000000 	andeq	r0, r0, r0
20011414:	fffffffe 			; <UNDEFINED> instruction: 0xfffffffe
20011418:	0001ffff 	strdeq	pc, [r1], -pc	; <UNPREDICTABLE>
2001141c:	1ffffe00 	svcne	0x00fffe00
20011420:	00000000 	andeq	r0, r0, r0
20011424:	fffffffe 			; <UNDEFINED> instruction: 0xfffffffe
20011428:	0003ffff 	strdeq	pc, [r3], -pc	; <UNPREDICTABLE>
2001142c:	3fffff00 	svccc	0x00ffff00
20011430:	00000000 	andeq	r0, r0, r0
20011434:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
20011438:	0007ffff 	strdeq	pc, [r7], -pc	; <UNPREDICTABLE>
2001143c:	7fffff80 	svcvc	0x00ffff80
20011440:	00000000 	andeq	r0, r0, r0
20011444:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
20011448:	001fffff 			; <UNDEFINED> instruction: 0x001fffff
2001144c:	7fffffc0 	svcvc	0x00ffffc0
20011450:	00000000 	andeq	r0, r0, r0
20011454:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
20011458:	007fffff 	ldrshteq	pc, [pc], #-255	; <UNPREDICTABLE>
2001145c:	7fffffe0 	svcvc	0x00ffffe0
20011460:	00000000 	andeq	r0, r0, r0
20011464:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
20011468:	0fffffff 	svceq	0x00ffffff
2001146c:	7ffffffe 	svcvc	0x00fffffe
20011470:	00000000 	andeq	r0, r0, r0

20011474 <game_over_witch1_light_bits>:
	...
200115c8:	ffcfe000 			; <UNDEFINED> instruction: 0xffcfe000
200115cc:	00000fe7 	andeq	r0, r0, r7, ror #31
	...
200115d8:	fb9c0380 	blx	1e7123e2 <startup-0x18edc1e>
200115dc:	0000f83b 	andeq	pc, r0, fp, lsr r8	; <UNPREDICTABLE>
	...
200115e8:	eb7803e0 	bl	21e12570 <firstTime.4108+0x1dfd018>
200115ec:	0003f01c 	andeq	pc, r3, ip, lsl r0	; <UNPREDICTABLE>
	...
200115f8:	6ef001f8 	mrcvs	1, 7, r0, cr0, cr8, {7}
200115fc:	0007e01e 	andeq	lr, r7, lr, lsl r0
	...
20011608:	f7e000fc 			; <UNDEFINED> instruction: 0xf7e000fc
2001160c:	001fe00f 	andseq	lr, pc, pc
	...
20011618:	ffc000fc 			; <UNDEFINED> instruction: 0xffc000fc
2001161c:	003fc007 	eorseq	ip, pc, r7
	...
20011628:	ff80007c 			; <UNDEFINED> instruction: 0xff80007c
2001162c:	003f8003 	eorseq	r8, pc, r3
	...
20011638:	ff00003c 			; <UNDEFINED> instruction: 0xff00003c
2001163c:	003f0001 	eorseq	r0, pc, r1
	...
20011648:	1e00003c 	mcrne	0, 0, r0, cr0, cr12, {1}
2001164c:	003f0004 	eorseq	r0, pc, r4
	...
20011658:	3f7001fe 	svccc	0x007001fe
2001165c:	003f800f 	eorseq	r8, pc, pc
	...
20011668:	7f7fffbe 	svcvc	0x007fffbe
2001166c:	001de7ff 			; <UNDEFINED> instruction: 0x001de7ff
	...
20011678:	7f7fff3c 	svcvc	0x007fff3c
2001167c:	001dffff 			; <UNDEFINED> instruction: 0x001dffff
	...
20011688:	ff37fe4c 			; <UNDEFINED> instruction: 0xff37fe4c
2001168c:	0018ffee 	andseq	pc, r8, lr, ror #31
	...
20011698:	fff7fcf8 			; <UNDEFINED> instruction: 0xfff7fcf8
2001169c:	00147fef 	andseq	r7, r4, pc, ror #31
	...
200116a8:	dff7f9f8 	svcle	0x00f7f9f8
200116ac:	001e3fef 	andseq	r3, lr, pc, ror #31
	...
200116b8:	dff7f1f8 	svcle	0x00f7f1f8
200116bc:	000f1fe7 	andeq	r1, pc, r7, ror #31
	...
200116c8:	d7e7c3f0 			; <UNDEFINED> instruction: 0xd7e7c3f0
200116cc:	000f87f7 	strdeq	r8, [pc], -r7
	...
200116d8:	b78f03f0 			; <UNDEFINED> instruction: 0xb78f03f0
200116dc:	000fc3f9 	strdeq	ip, [pc], -r9
	...
200116e8:	ff3c07e0 			; <UNDEFINED> instruction: 0xff3c07e0
200116ec:	0007c1fc 	strdeq	ip, [r7], -ip	; <UNPREDICTABLE>
	...
200116f8:	7e7007e0 	cdpvc	7, 7, cr0, cr0, cr0, {7}
200116fc:	0007e01e 	andeq	lr, r7, lr, lsl r0
	...
20011708:	7c000fc0 	stcvc	15, cr0, [r0], {192}	; 0xc0
2001170c:	0007e000 	andeq	lr, r7, r0
	...
20011718:	38000fc0 	stmdacc	r0, {r6, r7, r8, r9, sl, fp}
2001171c:	0003f000 	andeq	pc, r3, r0
	...
20011728:	00001f80 	andeq	r1, r0, r0, lsl #31
2001172c:	0003f000 	andeq	pc, r3, r0
	...
20011738:	00003f80 	andeq	r3, r0, r0, lsl #31
2001173c:	0001f800 	andeq	pc, r1, r0, lsl #16
	...
20011748:	00007f00 	andeq	r7, r0, r0, lsl #30
2001174c:	0000f800 	andeq	pc, r0, r0, lsl #16
	...
20011758:	0000fe00 	andeq	pc, r0, r0, lsl #28
2001175c:	00007c00 	andeq	r7, r0, r0, lsl #24
	...
20011768:	0000d800 	andeq	sp, r0, r0, lsl #16
2001176c:	00003e00 	andeq	r3, r0, r0, lsl #28
	...
20011778:	0001b800 	andeq	fp, r1, r0, lsl #16
2001177c:	00003f00 	andeq	r3, r0, r0, lsl #30
	...
20011788:	0003b000 	andeq	fp, r3, r0
2001178c:	00001b80 	andeq	r1, r0, r0, lsl #23
	...
20011798:	00036000 	andeq	r6, r3, r0
2001179c:	00001dc0 	andeq	r1, r0, r0, asr #27
	...
200117a8:	0007c000 	andeq	ip, r7, r0
200117ac:	00000ee0 	andeq	r0, r0, r0, ror #29
	...
200117b8:	000d8000 	andeq	r8, sp, r0
200117bc:	000007f8 	strdeq	r0, [r0], -r8
	...
200117c8:	003f0000 	eorseq	r0, pc, r0
200117cc:	000003fe 	strdeq	r0, [r0], -lr
	...
200117d8:	fffe0000 			; <UNDEFINED> instruction: 0xfffe0000
200117dc:	000000ff 	strdeq	r0, [r0], -pc	; <UNPREDICTABLE>
	...
200117e8:	f3fc0000 	vrev64.<illegal width 64>	d16, d0
200117ec:	0000007f 	andeq	r0, r0, pc, ror r0
	...
200117f8:	edf80000 	ldcl	0, cr0, [r8]
200117fc:	0000001f 	andeq	r0, r0, pc, lsl r0
	...
20011808:	fdf00000 	ldc2l	0, cr0, [r0]
2001180c:	00000007 	andeq	r0, r0, r7
	...
20011818:	ffc00000 			; <UNDEFINED> instruction: 0xffc00000
2001181c:	00000001 	andeq	r0, r0, r1
	...
20011828:	ff800000 			; <UNDEFINED> instruction: 0xff800000
	...

20011874 <game_over_witch2_black_bits>:
20011874:	30000000 	andcc	r0, r0, r0
20011878:	fc000000 	stc2	0, cr0, [r0], {-0}
2001187c:	00000003 	andeq	r0, r0, r3
20011880:	00000000 	andeq	r0, r0, r0
20011884:	0c000000 	stceq	0, cr0, [r0], {-0}
20011888:	f8000000 			; <UNDEFINED> instruction: 0xf8000000
2001188c:	00000007 	andeq	r0, r0, r7
20011890:	00000000 	andeq	r0, r0, r0
20011894:	02000000 	andeq	r0, r0, #0
20011898:	e0000000 	and	r0, r0, r0
2001189c:	0000000f 	andeq	r0, r0, pc
200118a0:	00000000 	andeq	r0, r0, r0
200118a4:	01800000 	orreq	r0, r0, r0
200118a8:	c0000000 	andgt	r0, r0, r0
200118ac:	0000003f 	andeq	r0, r0, pc, lsr r0
200118b0:	00000000 	andeq	r0, r0, r0
200118b4:	00600000 	rsbeq	r0, r0, r0
200118b8:	80000000 	andhi	r0, r0, r0
200118bc:	0000007f 	andeq	r0, r0, pc, ror r0
200118c0:	00000000 	andeq	r0, r0, r0
200118c4:	00100000 	andseq	r0, r0, r0
200118c8:	00000000 	andeq	r0, r0, r0
200118cc:	000000ff 	strdeq	r0, [r0], -pc	; <UNPREDICTABLE>
200118d0:	00000000 	andeq	r0, r0, r0
200118d4:	00080000 	andeq	r0, r8, r0
200118d8:	00000000 	andeq	r0, r0, r0
200118dc:	000003fe 	strdeq	r0, [r0], -lr
200118e0:	00000000 	andeq	r0, r0, r0
200118e4:	00040000 	andeq	r0, r4, r0
200118e8:	00000000 	andeq	r0, r0, r0
200118ec:	000007f8 	strdeq	r0, [r0], -r8
200118f0:	00000000 	andeq	r0, r0, r0
200118f4:	00020000 	andeq	r0, r2, r0
200118f8:	00000000 	andeq	r0, r0, r0
200118fc:	00000ff8 	strdeq	r0, [r0], -r8
20011900:	00000000 	andeq	r0, r0, r0
20011904:	00010000 	andeq	r0, r1, r0
20011908:	00000000 	andeq	r0, r0, r0
2001190c:	00003ff8 	strdeq	r3, [r0], -r8
20011910:	00000000 	andeq	r0, r0, r0
20011914:	0000c000 	andeq	ip, r0, r0
20011918:	00000000 	andeq	r0, r0, r0
2001191c:	00007ff0 	strdeq	r7, [r0], -r0
20011920:	00000000 	andeq	r0, r0, r0
20011924:	80002000 	andhi	r2, r0, r0
20011928:	0000027f 	andeq	r0, r0, pc, ror r2
2001192c:	0000ffe0 	andeq	pc, r0, r0, ror #31
20011930:	00000000 	andeq	r0, r0, r0
20011934:	e0002000 	and	r2, r0, r0
20011938:	000003ff 	strdeq	r0, [r0], -pc	; <UNPREDICTABLE>
2001193c:	0000ffc0 	andeq	pc, r0, r0, asr #31
20011940:	00000000 	andeq	r0, r0, r0
20011944:	f8002000 			; <UNDEFINED> instruction: 0xf8002000
20011948:	ffe00707 			; <UNDEFINED> instruction: 0xffe00707
2001194c:	0001ffff 	strdeq	pc, [r1], -pc	; <UNPREDICTABLE>
20011950:	00000000 	andeq	r0, r0, r0
20011954:	fc001000 	stc2	0, cr1, [r0], {-0}
20011958:	fff80700 			; <UNDEFINED> instruction: 0xfff80700
2001195c:	0001ffff 	strdeq	pc, [r1], -pc	; <UNPREDICTABLE>
20011960:	00000000 	andeq	r0, r0, r0
20011964:	1e001000 	cdpne	0, 0, cr1, cr0, cr0, {0}
20011968:	ffff0780 			; <UNDEFINED> instruction: 0xffff0780
2001196c:	0007ffff 	strdeq	pc, [r7], -pc	; <UNPREDICTABLE>
20011970:	00000000 	andeq	r0, r0, r0
20011974:	07001000 	streq	r1, [r0, -r0]
20011978:	ffffc780 			; <UNDEFINED> instruction: 0xffffc780
2001197c:	001fffff 			; <UNDEFINED> instruction: 0x001fffff
20011980:	00000000 	andeq	r0, r0, r0
20011984:	03801000 	orreq	r1, r0, #0
20011988:	fffff7c0 			; <UNDEFINED> instruction: 0xfffff7c0
2001198c:	007fffff 	ldrshteq	pc, [pc], #-255	; <UNPREDICTABLE>
20011990:	00000000 	andeq	r0, r0, r0
20011994:	03802000 	orreq	r2, r0, #0
20011998:	ffffffc0 			; <UNDEFINED> instruction: 0xffffffc0
2001199c:	03ffffff 	mvnseq	pc, #1020	; 0x3fc
200119a0:	00000000 	andeq	r0, r0, r0
200119a4:	07c02000 	strbeq	r2, [r0, r0]
200119a8:	ffffffe0 			; <UNDEFINED> instruction: 0xffffffe0
200119ac:	1fffff83 	svcne	0x00ffff83
200119b0:	00000000 	andeq	r0, r0, r0
200119b4:	0fe04000 	svceq	0x00e04000
200119b8:	03ffffe0 	mvnseq	pc, #224, 30	; 0x380
200119bc:	fffffe60 			; <UNDEFINED> instruction: 0xfffffe60
200119c0:	00000001 	andeq	r0, r0, r1
200119c4:	07e04000 	strbeq	r4, [r0, r0]!
200119c8:	03fffff0 	mvnseq	pc, #240, 30	; 0x3c0
200119cc:	ffffe7d8 			; <UNDEFINED> instruction: 0xffffe7d8
200119d0:	00000007 	andeq	r0, r0, r7
200119d4:	03c0c000 	biceq	ip, r0, #0
200119d8:	020ffffc 	andeq	pc, pc, #252, 30	; 0x3f0
200119dc:	ffff88c8 	vcmla.f32	q12, <illegal reg q15.5>, d8[0], #270
200119e0:	0000001f 	andeq	r0, r0, pc, lsl r0
200119e4:	01e30000 	mvneq	r0, r0
200119e8:	8ff2ffff 	svchi	0x00f2ffff
200119ec:	fffc93a6 			; <UNDEFINED> instruction: 0xfffc93a6
200119f0:	0000003f 	andeq	r0, r0, pc, lsr r0
200119f4:	c01c0000 	andsgt	r0, ip, r0
200119f8:	3e71bfff 	mrccc	15, 3, fp, cr1, cr15, {7}
200119fc:	fff853a3 			; <UNDEFINED> instruction: 0xfff853a3
20011a00:	0000007f 	andeq	r0, r0, pc, ror r0
20011a04:	f0000000 			; <UNDEFINED> instruction: 0xf0000000
20011a08:	118c4fff 	strdne	r4, [ip, pc]
20011a0c:	fff84824 	vcmla.f32	d20, d8, d20[0], #270
20011a10:	000000ff 	strdeq	r0, [r0], -pc	; <UNPREDICTABLE>
20011a14:	fc000000 	stc2	0, cr0, [r0], {-0}
20011a18:	113a47ff 	teqne	sl, pc	; <illegal shifter operand>
20011a1c:	fff0bf48 			; <UNDEFINED> instruction: 0xfff0bf48
20011a20:	000001ff 	strdeq	r0, [r0], -pc	; <UNPREDICTABLE>
20011a24:	ff000000 			; <UNDEFINED> instruction: 0xff000000
20011a28:	113923ff 	teqne	r9, pc	; <illegal shifter operand>
20011a2c:	fff0cfd0 			; <UNDEFINED> instruction: 0xfff0cfd0
20011a30:	000003ff 	strdeq	r0, [r0], -pc	; <UNPREDICTABLE>
20011a34:	ffc00000 			; <UNDEFINED> instruction: 0xffc00000
20011a38:	093a20ff 	ldmdbeq	sl!, {r0, r1, r2, r3, r4, r5, r6, r7, sp}
20011a3c:	ffe0c020 			; <UNDEFINED> instruction: 0xffe0c020
20011a40:	000003ff 	strdeq	r0, [r0], -pc	; <UNPREDICTABLE>
20011a44:	ffe00000 			; <UNDEFINED> instruction: 0xffe00000
20011a48:	08c2107f 	stmiaeq	r2, {r0, r1, r2, r3, r4, r5, r6, ip}^
20011a4c:	ffe0a441 			; <UNDEFINED> instruction: 0xffe0a441
20011a50:	000003ff 	strdeq	r0, [r0], -pc	; <UNPREDICTABLE>
20011a54:	ffe00000 			; <UNDEFINED> instruction: 0xffe00000
20011a58:	0c3c603f 	ldceq	0, cr6, [ip], #-252	; 0xffffff04
20011a5c:	ffe0a880 	vcmla.f32	d26, d16, d0[0], #170
20011a60:	000000ff 	strdeq	r0, [r0], -pc	; <UNPREDICTABLE>
20011a64:	fff00000 			; <UNDEFINED> instruction: 0xfff00000	; IMB
20011a68:	03e1800f 	mvneq	r8, #15
20011a6c:	00205080 	eoreq	r5, r0, r0, lsl #1
20011a70:	00000000 	andeq	r0, r0, r0
20011a74:	fff00000 			; <UNDEFINED> instruction: 0xfff00000	; IMB
20011a78:	801e080f 	andshi	r0, lr, pc, lsl #16
20011a7c:	00105100 	andseq	r5, r0, r0, lsl #2
20011a80:	00000000 	andeq	r0, r0, r0
20011a84:	fff80000 			; <UNDEFINED> instruction: 0xfff80000
20011a88:	8000100f 	andhi	r1, r0, pc
20011a8c:	00104900 	andseq	r4, r0, r0, lsl #18
20011a90:	00000000 	andeq	r0, r0, r0
20011a94:	fffc0000 			; <UNDEFINED> instruction: 0xfffc0000
20011a98:	8000300f 	andhi	r3, r0, pc
20011a9c:	00124a00 	andseq	r4, r2, r0, lsl #20
20011aa0:	00000000 	andeq	r0, r0, r0
20011aa4:	fffc0000 			; <UNDEFINED> instruction: 0xfffc0000
20011aa8:	02006009 	andeq	r6, r0, #9
20011aac:	000a4601 	andeq	r4, sl, r1, lsl #12
20011ab0:	00000000 	andeq	r0, r0, r0
20011ab4:	1ffe0000 	svcne	0x00fe0000
20011ab8:	0400a008 	streq	sl, [r0], #-8
20011abc:	00094200 	andeq	r4, r9, r0, lsl #4
20011ac0:	00000000 	andeq	r0, r0, r0
20011ac4:	07fe0000 	ldrbeq	r0, [lr, r0]!
20011ac8:	04034010 	streq	r4, [r3], #-16
20011acc:	00054200 	andeq	r4, r5, r0, lsl #4
20011ad0:	00000000 	andeq	r0, r0, r0
20011ad4:	00ff0000 	rscseq	r0, pc, r0
20011ad8:	180c4010 	stmdane	ip, {r4, lr}
20011adc:	000443fc 	strdeq	r4, [r4], -ip
20011ae0:	00000000 	andeq	r0, r0, r0
20011ae4:	000e0000 	andeq	r0, lr, r0
20011ae8:	e0308020 	eors	r8, r0, r0, lsr #32
20011aec:	fffc4003 			; <UNDEFINED> instruction: 0xfffc4003
	...
20011af8:	7fc0803e 	svcvc	0x00c0803e
20011afc:	fffe2000 			; <UNDEFINED> instruction: 0xfffe2000
20011b00:	00000007 	andeq	r0, r0, r7
20011b04:	f8000000 			; <UNDEFINED> instruction: 0xf8000000
20011b08:	44010021 	strmi	r0, [r1], #-33	; 0xffffffdf
20011b0c:	fffe2000 			; <UNDEFINED> instruction: 0xfffe2000
20011b10:	0000003f 	andeq	r0, r0, pc, lsr r0
20011b14:	07000000 	streq	r0, [r0, -r0]
20011b18:	44010040 	strmi	r0, [r1], #-64	; 0xffffffc0
20011b1c:	fffe2000 			; <UNDEFINED> instruction: 0xfffe2000
20011b20:	000001ff 	strdeq	r0, [r0], -pc	; <UNPREDICTABLE>
20011b24:	00c00000 	sbceq	r0, r0, r0
20011b28:	44020040 	strmi	r0, [r2], #-64	; 0xffffffc0
20011b2c:	fffe2000 			; <UNDEFINED> instruction: 0xfffe2000
20011b30:	00001fff 	strdeq	r1, [r0], -pc	; <UNPREDICTABLE>
20011b34:	00300000 	eorseq	r0, r0, r0
20011b38:	38040080 	stmdacc	r4, {r7}
20011b3c:	fffe2000 			; <UNDEFINED> instruction: 0xfffe2000
20011b40:	0001ffff 	strdeq	pc, [r1], -pc	; <UNPREDICTABLE>
20011b44:	000c0000 	andeq	r0, ip, r0
20011b48:	00080080 	andeq	r0, r8, r0, lsl #1
20011b4c:	ffee1000 			; <UNDEFINED> instruction: 0xffee1000
20011b50:	000fffff 	strdeq	pc, [pc], -pc	; <UNPREDICTABLE>
20011b54:	00020000 	andeq	r0, r2, r0
20011b58:	00101100 	andseq	r1, r0, r0, lsl #2
20011b5c:	ff8e5000 			; <UNDEFINED> instruction: 0xff8e5000
20011b60:	007fffff 	ldrshteq	pc, [pc], #-255	; <UNPREDICTABLE>
20011b64:	00010000 	andeq	r0, r1, r0
20011b68:	00202100 	eoreq	r2, r0, r0, lsl #2
20011b6c:	e00e4800 	and	r4, lr, r0, lsl #16
20011b70:	03ffffff 	mvnseq	pc, #1020	; 0x3fc
20011b74:	0000c000 	andeq	ip, r0, r0
20011b78:	00404200 	subeq	r4, r0, r0, lsl #4
20011b7c:	c00e4800 	andgt	r4, lr, r0, lsl #16
20011b80:	0fffffff 	svceq	0x00ffffff
20011b84:	00002000 	andeq	r2, r0, r0
20011b88:	00408400 	subeq	r8, r0, r0, lsl #8
20011b8c:	000e441c 	andeq	r4, lr, ip, lsl r4
20011b90:	1fffffff 	svcne	0x00ffffff
20011b94:	00001000 	andeq	r1, r0, r0
20011b98:	00810800 	addeq	r0, r1, r0, lsl #16
20011b9c:	00074213 	andeq	r4, r7, r3, lsl r2
20011ba0:	3ffffffc 	svccc	0x00fffffc
20011ba4:	00000800 	andeq	r0, r0, r0, lsl #16
20011ba8:	03001000 	movweq	r1, #0
20011bac:	00070111 	andeq	r0, r7, r1, lsl r1
20011bb0:	7fffffe0 	svcvc	0x00ffffe0
20011bb4:	00000400 	andeq	r0, r0, r0, lsl #8
20011bb8:	9c002000 	stcls	0, cr2, [r0], {-0}
20011bbc:	000700d0 	ldrdeq	r0, [r7], -r0	; <UNPREDICTABLE>
20011bc0:	ffffffc0 			; <UNDEFINED> instruction: 0xffffffc0
20011bc4:	00000400 	andeq	r0, r0, r0, lsl #8
20011bc8:	e0006000 	and	r6, r0, r0
20011bcc:	00070038 	andeq	r0, r7, r8, lsr r0
20011bd0:	ffffff80 			; <UNDEFINED> instruction: 0xffffff80
20011bd4:	00000200 	andeq	r0, r0, r0, lsl #4
20011bd8:	0020c000 	eoreq	ip, r0, r0
20011bdc:	00070607 	andeq	r0, r7, r7, lsl #12
20011be0:	ffffff00 			; <UNDEFINED> instruction: 0xffffff00
20011be4:	00000100 	andeq	r0, r0, r0, lsl #2
20011be8:	0041c000 	subeq	ip, r1, r0
20011bec:	00030800 	andeq	r0, r3, r0, lsl #16
20011bf0:	fffff800 	vcmla.f32	d31, d15, d0[0], #270
20011bf4:	00000100 	andeq	r0, r0, r0, lsl #2
20011bf8:	01878060 	orreq	r8, r7, r0, rrx
20011bfc:	00038800 	andeq	r8, r3, r0, lsl #16
20011c00:	fffff800 	vcmla.f32	d31, d15, d0[0], #270
20011c04:	00000080 	andeq	r0, r0, r0, lsl #1
20011c08:	1e1e00f0 	mrcne	0, 0, r0, cr14, cr0, {7}
20011c0c:	00038800 	andeq	r8, r3, r0, lsl #16
20011c10:	fffff800 	vcmla.f32	d31, d15, d0[0], #270
20011c14:	00000080 	andeq	r0, r0, r0, lsl #1
20011c18:	e07c01f8 	ldrsht	r0, [ip], #-24	; 0xffffffe8
20011c1c:	00038400 	andeq	r8, r3, r0, lsl #8
20011c20:	fffff800 	vcmla.f32	d31, d15, d0[0], #270
20011c24:	00000040 	andeq	r0, r0, r0, asr #32
20011c28:	01f801f8 	ldrsheq	r0, [r8, #24]!
20011c2c:	00018000 	andeq	r8, r1, r0
20011c30:	fffff800 	vcmla.f32	d31, d15, d0[0], #270
20011c34:	00000040 	andeq	r0, r0, r0, asr #32
20011c38:	07f007f8 			; <UNDEFINED> instruction: 0x07f007f8
20011c3c:	0001e000 	andeq	lr, r1, r0
20011c40:	fffff000 			; <UNDEFINED> instruction: 0xfffff000
20011c44:	00000020 	andeq	r0, r0, r0, lsr #32
20011c48:	1fc03ffc 	svcne	0x00c03ffc
20011c4c:	0000f800 	andeq	pc, r0, r0, lsl #16
20011c50:	fffff000 			; <UNDEFINED> instruction: 0xfffff000
20011c54:	00000020 	andeq	r0, r0, r0, lsr #32
20011c58:	ff81fffc 			; <UNDEFINED> instruction: 0xff81fffc
20011c5c:	00007e00 	andeq	r7, r0, r0, lsl #28
20011c60:	ffffe000 			; <UNDEFINED> instruction: 0xffffe000
20011c64:	00000010 	andeq	r0, r0, r0, lsl r0
20011c68:	fe07fffe 	mcr2	15, 0, pc, cr7, cr14, {7}	; <UNPREDICTABLE>
20011c6c:	00003f8f 	andeq	r3, r0, pc, lsl #31
20011c70:	fffff000 			; <UNDEFINED> instruction: 0xfffff000

20011c74 <game_over_witch2_gray_bits>:
20011c74:	c0000000 	andgt	r0, r0, r0
20011c78:	03ffffff 	mvnseq	pc, #1020	; 0x3fc
	...
20011c84:	f0000000 			; <UNDEFINED> instruction: 0xf0000000
20011c88:	07ffffff 			; <UNDEFINED> instruction: 0x07ffffff
	...
20011c94:	fc000000 	stc2	0, cr0, [r0], {-0}
20011c98:	1fffffff 	svcne	0x00ffffff
	...
20011ca4:	fe000000 	cdp2	0, 0, cr0, cr0, cr0, {0}
20011ca8:	3fffffff 	svccc	0x00ffffff
	...
20011cb4:	ff800000 			; <UNDEFINED> instruction: 0xff800000
20011cb8:	7fffffff 	svcvc	0x00ffffff
	...
20011cc4:	ffe00000 			; <UNDEFINED> instruction: 0xffe00000
20011cc8:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
	...
20011cd4:	fff00000 			; <UNDEFINED> instruction: 0xfff00000	; IMB
20011cd8:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
20011cdc:	00000001 	andeq	r0, r0, r1
20011ce0:	00000000 	andeq	r0, r0, r0
20011ce4:	fff80000 			; <UNDEFINED> instruction: 0xfff80000
20011ce8:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
20011cec:	00000007 	andeq	r0, r0, r7
20011cf0:	00000000 	andeq	r0, r0, r0
20011cf4:	fffc0000 			; <UNDEFINED> instruction: 0xfffc0000
20011cf8:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
20011cfc:	00000007 	andeq	r0, r0, r7
20011d00:	00000000 	andeq	r0, r0, r0
20011d04:	fffe0000 			; <UNDEFINED> instruction: 0xfffe0000
20011d08:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
20011d0c:	00000007 	andeq	r0, r0, r7
20011d10:	00000000 	andeq	r0, r0, r0
20011d14:	ffff0000 			; <UNDEFINED> instruction: 0xffff0000
20011d18:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
20011d1c:	0000000f 	andeq	r0, r0, pc
20011d20:	00000000 	andeq	r0, r0, r0
20011d24:	7fffc000 	svcvc	0x00ffc000
20011d28:	fffffd80 			; <UNDEFINED> instruction: 0xfffffd80
20011d2c:	0000001f 	andeq	r0, r0, pc, lsl r0
20011d30:	00000000 	andeq	r0, r0, r0
20011d34:	1fffc000 	svcne	0x00ffc000
20011d38:	fffffc00 			; <UNDEFINED> instruction: 0xfffffc00
20011d3c:	0000003f 	andeq	r0, r0, pc, lsr r0
20011d40:	00000000 	andeq	r0, r0, r0
20011d44:	07ffc000 	ldrbeq	ip, [pc, r0]!
20011d48:	001ff800 	andseq	pc, pc, r0, lsl #16
	...
20011d54:	03ffe000 	mvnseq	lr, #0
20011d58:	0007f800 	andeq	pc, r7, r0, lsl #16
	...
20011d64:	01ffe000 	mvnseq	lr, r0
20011d68:	0000f800 	andeq	pc, r0, r0, lsl #16
	...
20011d74:	00ffe000 	rscseq	lr, pc, r0
20011d78:	00003800 	andeq	r3, r0, r0, lsl #16
	...
20011d84:	007fe000 	rsbseq	lr, pc, r0
20011d88:	00000800 	andeq	r0, r0, r0, lsl #16
	...
20011d94:	007fc000 	rsbseq	ip, pc, r0
	...
20011da4:	003fc000 	eorseq	ip, pc, r0
	...
20011db4:	001f8000 	andseq	r8, pc, r0
	...
20011dc4:	001f8000 	andseq	r8, pc, r0
	...
20011dd4:	003f0000 	eorseq	r0, pc, r0
	...
20011de4:	001c0000 	andseq	r0, ip, r0
20011de8:	00000000 	andeq	r0, r0, r0
20011dec:	00000c40 	andeq	r0, r0, r0, asr #24
	...
20011dfc:	00000c40 	andeq	r0, r0, r0, asr #24
	...
20011e0c:	000007c0 	andeq	r0, r0, r0, asr #15
	...
20011e18:	00c40000 	sbceq	r0, r4, r0
20011e1c:	00000080 	andeq	r0, r0, r0, lsl #1
	...
20011e28:	00c60000 	sbceq	r0, r6, r0
	...
20011e38:	00c40000 	sbceq	r0, r4, r0
	...
20011e48:	003c0000 	eorseq	r0, ip, r0
20011e4c:	00004000 	andeq	r4, r0, r0
	...
20011e5c:	00004000 	andeq	r4, r0, r0
	...
20011e6c:	00002000 	andeq	r2, r0, r0
	...
20011e7c:	00002000 	andeq	r2, r0, r0
	...
20011e8c:	00003000 	andeq	r3, r0, r0
	...
20011e9c:	00003000 	andeq	r3, r0, r0
	...
20011eac:	00003800 	andeq	r3, r0, r0, lsl #16
	...
20011eb8:	00004000 	andeq	r4, r0, r0
20011ebc:	00003c00 	andeq	r3, r0, r0, lsl #24
	...
20011ec8:	00008000 	andeq	r8, r0, r0
20011ecc:	00003c00 	andeq	r3, r0, r0, lsl #24
	...
20011ed8:	00038000 	andeq	r8, r3, r0
20011edc:	00003c00 	andeq	r3, r0, r0, lsl #24
	...
20011ee8:	000f0000 	andeq	r0, pc, r0
20011eec:	00003ffc 	strdeq	r3, [r0], -ip
	...
20011ef8:	803f0000 	eorshi	r0, pc, r0
20011efc:	00001fff 	strdeq	r1, [r0], -pc	; <UNPREDICTABLE>
	...
20011f08:	83fe001e 	mvnshi	r0, #30
20011f0c:	00001fff 	strdeq	r1, [r0], -pc	; <UNPREDICTABLE>
20011f10:	00000000 	andeq	r0, r0, r0
20011f14:	f8000000 			; <UNDEFINED> instruction: 0xf8000000
20011f18:	83fe003f 	mvnshi	r0, #63	; 0x3f
20011f1c:	00001fff 	strdeq	r1, [r0], -pc	; <UNPREDICTABLE>
20011f20:	00000000 	andeq	r0, r0, r0
20011f24:	ff000000 			; <UNDEFINED> instruction: 0xff000000
20011f28:	83fc003f 	mvnshi	r0, #63	; 0x3f
20011f2c:	00001fff 	strdeq	r1, [r0], -pc	; <UNPREDICTABLE>
20011f30:	00000000 	andeq	r0, r0, r0
20011f34:	ffc00000 			; <UNDEFINED> instruction: 0xffc00000
20011f38:	c7f8007f 			; <UNDEFINED> instruction: 0xc7f8007f
20011f3c:	00001fff 	strdeq	r1, [r0], -pc	; <UNPREDICTABLE>
20011f40:	00000000 	andeq	r0, r0, r0
20011f44:	fff00000 			; <UNDEFINED> instruction: 0xfff00000	; IMB
20011f48:	fff0007f 			; <UNDEFINED> instruction: 0xfff0007f
20011f4c:	00100fff 			; <UNDEFINED> instruction: 0x00100fff
20011f50:	00000000 	andeq	r0, r0, r0
20011f54:	fffc0000 			; <UNDEFINED> instruction: 0xfffc0000
20011f58:	ffe000ff 			; <UNDEFINED> instruction: 0xffe000ff
20011f5c:	00700fff 	ldrshteq	r0, [r0], #-255	; 0xffffff01
20011f60:	00000000 	andeq	r0, r0, r0
20011f64:	fffe0000 			; <UNDEFINED> instruction: 0xfffe0000
20011f68:	ffc000ff 			; <UNDEFINED> instruction: 0xffc000ff
20011f6c:	1ff007ff 	svcne	0x00f007ff
20011f70:	00000000 	andeq	r0, r0, r0
20011f74:	ffff0000 			; <UNDEFINED> instruction: 0xffff0000
20011f78:	ff8001ff 			; <UNDEFINED> instruction: 0xff8001ff
20011f7c:	3ff007ff 	svccc	0x00f007ff
20011f80:	00000000 	andeq	r0, r0, r0
20011f84:	ffffc000 			; <UNDEFINED> instruction: 0xffffc000
20011f88:	ff8003ff 			; <UNDEFINED> instruction: 0xff8003ff
20011f8c:	fff003e3 			; <UNDEFINED> instruction: 0xfff003e3
20011f90:	00000000 	andeq	r0, r0, r0
20011f94:	ffffe000 			; <UNDEFINED> instruction: 0xffffe000
20011f98:	ff0007ff 			; <UNDEFINED> instruction: 0xff0007ff
20011f9c:	fff801e0 			; <UNDEFINED> instruction: 0xfff801e0
20011fa0:	00000003 	andeq	r0, r0, r3
20011fa4:	fffff000 			; <UNDEFINED> instruction: 0xfffff000
20011fa8:	fc000fff 	stc2	15, cr0, [r0], {255}	; 0xff
20011fac:	fff800e0 			; <UNDEFINED> instruction: 0xfff800e0
20011fb0:	0000001f 	andeq	r0, r0, pc, lsl r0
20011fb4:	fffff800 	vcmla.f32	d31, d15, d0[0], #270
20011fb8:	60001fff 	strdvs	r1, [r0], -pc	; <UNPREDICTABLE>
20011fbc:	fff80020 			; <UNDEFINED> instruction: 0xfff80020
20011fc0:	0000003f 	andeq	r0, r0, pc, lsr r0
20011fc4:	fffff800 	vcmla.f32	d31, d15, d0[0], #270
20011fc8:	00001fff 	strdeq	r1, [r0], -pc	; <UNPREDICTABLE>
20011fcc:	fff80000 			; <UNDEFINED> instruction: 0xfff80000
20011fd0:	0000007f 	andeq	r0, r0, pc, ror r0
20011fd4:	fffffc00 			; <UNDEFINED> instruction: 0xfffffc00
20011fd8:	00003fff 	strdeq	r3, [r0], -pc	; <UNPREDICTABLE>
20011fdc:	fff80000 			; <UNDEFINED> instruction: 0xfff80000
20011fe0:	000000ff 	strdeq	r0, [r0], -pc	; <UNPREDICTABLE>
20011fe4:	fffffe00 			; <UNDEFINED> instruction: 0xfffffe00
20011fe8:	00003fff 	strdeq	r3, [r0], -pc	; <UNPREDICTABLE>
20011fec:	fffc0000 			; <UNDEFINED> instruction: 0xfffc0000
20011ff0:	000007ff 	strdeq	r0, [r0], -pc	; <UNPREDICTABLE>
20011ff4:	fffffe00 			; <UNDEFINED> instruction: 0xfffffe00
20011ff8:	00007f9f 	muleq	r0, pc, pc	; <UNPREDICTABLE>
20011ffc:	fffc0000 			; <UNDEFINED> instruction: 0xfffc0000
20012000:	000007ff 	strdeq	r0, [r0], -pc	; <UNPREDICTABLE>
20012004:	ffffff00 			; <UNDEFINED> instruction: 0xffffff00
20012008:	0001ff0f 	andeq	pc, r1, pc, lsl #30
2001200c:	fffc0000 			; <UNDEFINED> instruction: 0xfffc0000
20012010:	000007ff 	strdeq	r0, [r0], -pc	; <UNPREDICTABLE>
20012014:	ffffff00 			; <UNDEFINED> instruction: 0xffffff00
20012018:	0003fe07 	andeq	pc, r3, r7, lsl #28
2001201c:	fffc0000 			; <UNDEFINED> instruction: 0xfffc0000
20012020:	000007ff 	strdeq	r0, [r0], -pc	; <UNPREDICTABLE>
20012024:	ffffff80 			; <UNDEFINED> instruction: 0xffffff80
20012028:	0007fe07 	andeq	pc, r7, r7, lsl #28
2001202c:	fffe0000 			; <UNDEFINED> instruction: 0xfffe0000
20012030:	000007ff 	strdeq	r0, [r0], -pc	; <UNPREDICTABLE>
20012034:	ffffff80 			; <UNDEFINED> instruction: 0xffffff80
20012038:	000ff807 	andeq	pc, pc, r7, lsl #16
2001203c:	fffe0000 			; <UNDEFINED> instruction: 0xfffe0000
20012040:	00000fff 	strdeq	r0, [r0], -pc	; <UNPREDICTABLE>
20012044:	ffffffc0 			; <UNDEFINED> instruction: 0xffffffc0
20012048:	003fc003 	eorseq	ip, pc, r3
2001204c:	ffff0000 			; <UNDEFINED> instruction: 0xffff0000
20012050:	00000fff 	strdeq	r0, [r0], -pc	; <UNPREDICTABLE>
20012054:	ffffffc0 			; <UNDEFINED> instruction: 0xffffffc0
20012058:	007e0003 	rsbseq	r0, lr, r3
2001205c:	ffff8000 			; <UNDEFINED> instruction: 0xffff8000
20012060:	00001fff 	strdeq	r1, [r0], -pc	; <UNPREDICTABLE>
20012064:	ffffffe0 			; <UNDEFINED> instruction: 0xffffffe0
20012068:	01f80001 	mvnseq	r0, r1
2001206c:	ffffc000 			; <UNDEFINED> instruction: 0xffffc000
20012070:	00000fff 	strdeq	r0, [r0], -pc	; <UNPREDICTABLE>

20012074 <game_over_witch2_light_bits>:
	...
200121ac:	0000007c 	andeq	r0, r0, ip, ror r0
	...
200121b8:	fc000000 	stc2	0, cr0, [r0], {-0}
200121bc:	0000001f 	andeq	r0, r0, pc, lsl r0
	...
200121c8:	fc000000 	stc2	0, cr0, [r0], {-0}
200121cc:	00000007 	andeq	r0, r0, r7
	...
200121d8:	fc000000 	stc2	0, cr0, [r0], {-0}
200121dc:	00000007 	andeq	r0, r0, r7
	...
200121e8:	70000000 	andvc	r0, r0, r0
200121ec:	00030001 	andeq	r0, r3, r1
	...
200121f8:	c0000000 	andgt	r0, r0, r0
200121fc:	00078000 	andeq	r8, r7, r0
	...
20012208:	e0003000 	and	r3, r0, r0
2001220c:	00078003 	andeq	r8, r7, r3
	...
20012218:	e0003800 	and	r3, r0, r0, lsl #16
2001221c:	000f4007 	andeq	r4, pc, r7
	...
20012228:	e0001c00 	and	r1, r0, r0, lsl #24
2001222c:	000f300f 	andeq	r3, pc, pc
	...
20012238:	f0001f00 			; <UNDEFINED> instruction: 0xf0001f00
2001223c:	001f3fdf 			; <UNDEFINED> instruction: 0x001f3fdf
	...
20012248:	f0000f80 			; <UNDEFINED> instruction: 0xf0000f80
2001224c:	001f1bbe 			; <UNDEFINED> instruction: 0x001f1bbe
	...
20012258:	f0001fc0 			; <UNDEFINED> instruction: 0xf0001fc0
2001225c:	001f177f 	andseq	r1, pc, pc, ror r7	; <UNPREDICTABLE>
	...
20012268:	fc007ff0 	stc2	15, cr7, [r0], {240}	; 0xf0
2001226c:	001f8f7f 	andseq	r8, pc, pc, ror pc	; <UNPREDICTABLE>
	...
20012278:	7fe1f7f0 	svcvc	0x00e1f7f0
2001227c:	000f8eff 	strdeq	r8, [pc], -pc	; <UNPREDICTABLE>
	...
20012288:	7fffeff0 	svcvc	0x00ffeff0
2001228c:	000f86ff 	strdeq	r8, [pc], -pc	; <UNPREDICTABLE>
	...
20012298:	7fffcff0 	svcvc	0x00ffcff0
2001229c:	000d85ff 	strdeq	r8, [sp], -pc	; <UNPREDICTABLE>
	...
200122a8:	fdff9ff0 	ldc2l	15, cr9, [pc, #960]!	; 20012670 <game_over_witch3_black_bits+0x1fc>
200122ac:	000581fe 	strdeq	r8, [r5], -lr
	...
200122b8:	fbff1ff0 	blx	1ffda282 <startup-0x25d7e>
200122bc:	000681ff 	strdeq	r8, [r6], -pc	; <UNPREDICTABLE>
	...
200122c8:	fbfc3fe0 	blx	1ff22252 <startup-0xdddae>
200122cc:	000281ff 	strdeq	r8, [r2], -pc	; <UNPREDICTABLE>
	...
200122d8:	e7f03fe0 	ldrb	r3, [r0, r0, ror #31]!
200122dc:	00038003 	andeq	r8, r3, r3
	...
200122e8:	1fc07fc0 	svcne	0x00c07fc0
200122ec:	00038000 	andeq	r8, r3, r0
	...
200122f8:	00007fc0 	andeq	r7, r0, r0, asr #31
200122fc:	0001c000 	andeq	ip, r1, r0
	...
20012308:	0000ffc0 	andeq	pc, r0, r0, asr #31
2001230c:	0001c000 	andeq	ip, r1, r0
	...
20012318:	0000ff80 	andeq	pc, r0, r0, lsl #31
2001231c:	0001c000 	andeq	ip, r1, r0
	...
20012328:	0001ff80 	andeq	pc, r1, r0, lsl #31
2001232c:	0001c000 	andeq	ip, r1, r0
	...
20012338:	0003ff00 	andeq	pc, r3, r0, lsl #30
2001233c:	0001c000 	andeq	ip, r1, r0
	...
20012348:	0007ff00 	andeq	pc, r7, r0, lsl #30
2001234c:	0001e000 	andeq	lr, r1, r0
	...
20012358:	000fee00 	andeq	lr, pc, r0, lsl #28
2001235c:	0001a000 	andeq	sl, r1, r0
	...
20012368:	001fde00 	andseq	sp, pc, r0, lsl #28
2001236c:	0001b000 	andeq	fp, r1, r0
	...
20012378:	003fbc00 	eorseq	fp, pc, r0, lsl #24
2001237c:	0001b000 	andeq	fp, r1, r0
	...
20012388:	003f7800 	eorseq	r7, pc, r0, lsl #16
2001238c:	0001b800 	andeq	fp, r1, r0, lsl #16
	...
20012398:	007ef000 	rsbseq	pc, lr, r0
2001239c:	0000bc00 	andeq	fp, r0, r0, lsl #24
	...
200123a8:	00ffe000 	rscseq	lr, pc, r0
200123ac:	0000fe00 	andeq	pc, r0, r0, lsl #28
	...
200123b8:	03ffc000 	mvnseq	ip, #0
200123bc:	0000ff00 	andeq	pc, r0, r0, lsl #30
	...
200123c8:	1fff8000 	svcne	0x00ff8000
200123cc:	0000ffc0 	andeq	pc, r0, r0, asr #31
	...
200123d8:	ffdf0000 			; <UNDEFINED> instruction: 0xffdf0000
200123dc:	0000f9f8 	strdeq	pc, [r0], -r8
	...
200123e8:	ffbe0000 			; <UNDEFINED> instruction: 0xffbe0000
200123ec:	0000f7ff 	strdeq	pc, [r0], -pc	; <UNPREDICTABLE>
	...
200123f8:	fe780000 	cdp2	0, 7, cr0, cr8, cr0, {0}
200123fc:	000077ff 	strdeq	r7, [r0], -pc	; <UNPREDICTABLE>
	...
20012408:	e1e00000 	mvn	r0, r0
2001240c:	000077ff 	strdeq	r7, [r0], -pc	; <UNPREDICTABLE>
	...
20012418:	1f800000 	svcne	0x00800000
2001241c:	00007bff 	strdeq	r7, [r0], -pc	; <UNPREDICTABLE>
	...
20012428:	fe000000 	cdp2	0, 0, cr0, cr0, cr0, {0}
2001242c:	00007fff 	strdeq	r7, [r0], -pc	; <UNPREDICTABLE>
	...
20012438:	f8000000 			; <UNDEFINED> instruction: 0xf8000000
2001243c:	00001fff 	strdeq	r1, [r0], -pc	; <UNPREDICTABLE>
	...
20012448:	e0000000 	and	r0, r0, r0
2001244c:	000007ff 	strdeq	r0, [r0], -pc	; <UNPREDICTABLE>
	...
2001245c:	000001ff 	strdeq	r0, [r0], -pc	; <UNPREDICTABLE>
	...
2001246c:	00000070 	andeq	r0, r0, r0, ror r0
20012470:	00000000 	andeq	r0, r0, r0

20012474 <game_over_witch3_black_bits>:
20012474:	00000000 	andeq	r0, r0, r0
20012478:	1f800018 	svcne	0x00800018
	...
20012488:	7e000004 	cdpvc	0, 0, cr0, cr0, cr4, {0}
	...
20012498:	f8000002 			; <UNDEFINED> instruction: 0xf8000002
2001249c:	00000001 	andeq	r0, r0, r1
200124a0:	00000000 	andeq	r0, r0, r0
200124a4:	80000000 	andhi	r0, r0, r0
200124a8:	f0000001 			; <UNDEFINED> instruction: 0xf0000001
200124ac:	00000007 	andeq	r0, r0, r7
200124b0:	00000000 	andeq	r0, r0, r0
200124b4:	40000000 	andmi	r0, r0, r0
200124b8:	e0000000 	and	r0, r0, r0
200124bc:	0000001f 	andeq	r0, r0, pc, lsl r0
200124c0:	00000000 	andeq	r0, r0, r0
200124c4:	30000000 	andcc	r0, r0, r0
200124c8:	c0000000 	andgt	r0, r0, r0
200124cc:	0000007f 	andeq	r0, r0, pc, ror r0
200124d0:	00000000 	andeq	r0, r0, r0
200124d4:	08000000 	stmdaeq	r0, {}	; <UNPREDICTABLE>
200124d8:	80000000 	andhi	r0, r0, r0
200124dc:	000001ff 	strdeq	r0, [r0], -pc	; <UNPREDICTABLE>
200124e0:	00000000 	andeq	r0, r0, r0
200124e4:	04000000 	streq	r0, [r0], #-0
200124e8:	80000000 	andhi	r0, r0, r0
200124ec:	000003ff 	strdeq	r0, [r0], -pc	; <UNPREDICTABLE>
200124f0:	00000000 	andeq	r0, r0, r0
200124f4:	02000000 	andeq	r0, r0, #0
200124f8:	000003f8 	strdeq	r0, [r0], -r8
200124fc:	00000fff 	strdeq	r0, [r0], -pc	; <UNPREDICTABLE>
20012500:	00000000 	andeq	r0, r0, r0
20012504:	01000000 	mrseq	r0, (UNDEF: 0)
20012508:	000007fc 	strdeq	r0, [r0], -ip
2001250c:	00001fff 	strdeq	r1, [r0], -pc	; <UNPREDICTABLE>
20012510:	00000000 	andeq	r0, r0, r0
20012514:	00800000 	addeq	r0, r0, r0
20012518:	00000ffc 	strdeq	r0, [r0], -ip
2001251c:	00003ffe 	strdeq	r3, [r0], -lr
20012520:	00000000 	andeq	r0, r0, r0
20012524:	00400000 	subeq	r0, r0, r0
20012528:	00000ffe 	strdeq	r0, [r0], -lr
2001252c:	00007ffc 	strdeq	r7, [r0], -ip
20012530:	00000000 	andeq	r0, r0, r0
20012534:	80400000 	subhi	r0, r0, r0
20012538:	e0001fff 	strd	r1, [r0], -pc	; <UNPREDICTABLE>
2001253c:	0000ffff 	strdeq	pc, [r0], -pc	; <UNPREDICTABLE>
20012540:	00000000 	andeq	r0, r0, r0
20012544:	c0200000 	eorgt	r0, r0, r0
20012548:	f8003c1f 			; <UNDEFINED> instruction: 0xf8003c1f
2001254c:	000fffff 	strdeq	pc, [pc], -pc	; <UNPREDICTABLE>
20012550:	00000000 	andeq	r0, r0, r0
20012554:	e0100000 	ands	r0, r0, r0
20012558:	ff003c07 			; <UNDEFINED> instruction: 0xff003c07
2001255c:	01ffffff 	ldrsheq	pc, [pc, #255]	; 20012663 <game_over_witch3_black_bits+0x1ef>	; <UNPREDICTABLE>
20012560:	00000000 	andeq	r0, r0, r0
20012564:	e0100000 	ands	r0, r0, r0
20012568:	ffc01c01 			; <UNDEFINED> instruction: 0xffc01c01
2001256c:	07ffffff 			; <UNDEFINED> instruction: 0x07ffffff
20012570:	00000000 	andeq	r0, r0, r0
20012574:	f0080000 			; <UNDEFINED> instruction: 0xf0080000
20012578:	fff81e00 			; <UNDEFINED> instruction: 0xfff81e00
2001257c:	0fffffff 	svceq	0x00ffffff
20012580:	00000000 	andeq	r0, r0, r0
20012584:	f0080000 			; <UNDEFINED> instruction: 0xf0080000
20012588:	fffe0e00 			; <UNDEFINED> instruction: 0xfffe0e00
2001258c:	1ffffe3f 	svcne	0x00fffe3f
20012590:	00000000 	andeq	r0, r0, r0
20012594:	78080000 	stmdavc	r8, {}	; <UNPREDICTABLE>
20012598:	ffff8f00 			; <UNDEFINED> instruction: 0xffff8f00
2001259c:	3ffe0310 	svccc	0x00fe0310
200125a0:	00000000 	andeq	r0, r0, r0
200125a4:	3c100000 	ldccc	0, cr0, [r0], {-0}
200125a8:	3fffff00 	svccc	0x00ffff00
200125ac:	7ff23994 	svcvc	0x00f23994
200125b0:	00000000 	andeq	r0, r0, r0
200125b4:	1c100000 	ldcne	0, cr0, [r0], {-0}
200125b8:	fc3fff80 	ldc2	15, cr15, [pc], #-512	; 200123c0 <game_over_witch2_light_bits+0x34c>
200125bc:	fff247fe 			; <UNDEFINED> instruction: 0xfff247fe
200125c0:	00000000 	andeq	r0, r0, r0
200125c4:	1c100000 	ldcne	0, cr0, [r0], {-0}
200125c8:	ffcfffc0 			; <UNDEFINED> instruction: 0xffcfffc0
200125cc:	ffe15c01 			; <UNDEFINED> instruction: 0xffe15c01
200125d0:	00000000 	andeq	r0, r0, r0
200125d4:	0c100000 	ldceq	0, cr0, [r0], {-0}
200125d8:	8023ffc0 	eorhi	pc, r3, r0, asr #31
200125dc:	ffe0f000 			; <UNDEFINED> instruction: 0xffe0f000
200125e0:	00000001 	andeq	r0, r0, r1
200125e4:	06100000 	ldreq	r0, [r0], -r0
200125e8:	8790ffe0 	ldrhi	pc, [r0, r0, ror #31]
200125ec:	ffe0c000 			; <UNDEFINED> instruction: 0xffe0c000
200125f0:	00000003 	andeq	r0, r0, r3
200125f4:	06200000 	strteq	r0, [r0], -r0
200125f8:	88687fd0 	stmdahi	r8!, {r4, r6, r7, r8, r9, sl, fp, ip, sp, lr}^
200125fc:	ffe30000 			; <UNDEFINED> instruction: 0xffe30000
20012600:	00000007 	andeq	r0, r0, r7
20012604:	02200000 	eoreq	r0, r0, #0
20012608:	90283fe8 	eorls	r3, r8, r8, ror #31
2001260c:	ffe40000 			; <UNDEFINED> instruction: 0xffe40000
20012610:	0000000f 	andeq	r0, r0, pc
20012614:	03e00000 	mvneq	r0, #0
20012618:	91940ff8 			; <UNDEFINED> instruction: 0x91940ff8
2001261c:	ffe82000 			; <UNDEFINED> instruction: 0xffe82000
20012620:	0000001f 	andeq	r0, r0, pc, lsl r0
20012624:	00000000 	andeq	r0, r0, r0
20012628:	939407fc 	orrsls	r0, r4, #252, 14	; 0x3f00000
2001262c:	fff04020 			; <UNDEFINED> instruction: 0xfff04020
20012630:	0000003f 	andeq	r0, r0, pc, lsr r0
20012634:	00000000 	andeq	r0, r0, r0
20012638:	931403fe 	tstls	r4, #-134217725	; 0xf8000003
2001263c:	ffe000c0 			; <UNDEFINED> instruction: 0xffe000c0
20012640:	0000007f 	andeq	r0, r0, pc, ror r0
20012644:	00000000 	andeq	r0, r0, r0
20012648:	983401ff 	ldmdals	r4!, {r0, r1, r2, r3, r4, r5, r6, r7, r8}
2001264c:	ffe00100 			; <UNDEFINED> instruction: 0xffe00100
20012650:	0000007f 	andeq	r0, r0, pc, ror r0
20012654:	80000000 	andhi	r0, r0, r0
20012658:	67c200ff 			; <UNDEFINED> instruction: 0x67c200ff
2001265c:	ffe00000 			; <UNDEFINED> instruction: 0xffe00000
20012660:	000000ff 	strdeq	r0, [r0], -pc	; <UNPREDICTABLE>
20012664:	c0000000 	andgt	r0, r0, r0
20012668:	180200ff 	stmdane	r2, {r0, r1, r2, r3, r4, r5, r6, r7}
2001266c:	ffe3e000 			; <UNDEFINED> instruction: 0xffe3e000
20012670:	00000003 	andeq	r0, r0, r3
20012674:	e0000000 	and	r0, r0, r0
20012678:	0782007f 			; <UNDEFINED> instruction: 0x0782007f
2001267c:	181c5c00 	ldmdane	ip, {sl, fp, ip, lr}
20012680:	00000000 	andeq	r0, r0, r0
20012684:	f0000000 			; <UNDEFINED> instruction: 0xf0000000
20012688:	007a003f 	rsbseq	r0, sl, pc, lsr r0
2001268c:	00106302 	andseq	r6, r0, r2, lsl #6
20012690:	00000000 	andeq	r0, r0, r0
20012694:	f8000000 			; <UNDEFINED> instruction: 0xf8000000
20012698:	0007001f 	andeq	r0, r7, pc, lsl r0
2001269c:	0010b084 	andseq	fp, r0, r4, lsl #1
200126a0:	00000000 	andeq	r0, r0, r0
200126a4:	f8000000 			; <UNDEFINED> instruction: 0xf8000000
200126a8:	0000000f 	andeq	r0, r0, pc
200126ac:	0008bc44 	andeq	fp, r8, r4, asr #24
200126b0:	00000000 	andeq	r0, r0, r0
200126b4:	fc000000 	stc2	0, cr0, [r0], {-0}
200126b8:	00030013 	andeq	r0, r3, r3, lsl r0
200126bc:	0008b238 	andeq	fp, r8, r8, lsr r2
200126c0:	00000000 	andeq	r0, r0, r0
200126c4:	fc000000 	stc2	0, cr0, [r0], {-0}
200126c8:	001c8011 	andseq	r8, ip, r1, lsl r0
200126cc:	00086980 	andeq	r6, r8, r0, lsl #19
200126d0:	00000000 	andeq	r0, r0, r0
200126d4:	fe000000 	cdp2	0, 0, cr0, cr0, cr0, {0}
200126d8:	03e88021 	mvneq	r8, #33	; 0x21
200126dc:	3ffc0860 	svccc	0x00fc0860
200126e0:	00000000 	andeq	r0, r0, r0
200126e4:	fe000000 	cdp2	0, 0, cr0, cr0, cr0, {0}
200126e8:	fc104060 	ldc2	0, cr4, [r0], {96}	; 0x60
200126ec:	c004085f 	andgt	r0, r4, pc, asr r8
200126f0:	00000003 	andeq	r0, r0, r3
200126f4:	7f000000 	svcvc	0x00000000
200126f8:	002000f8 	strdeq	r0, [r0], -r8	; <UNPREDICTABLE>
200126fc:	00040444 	andeq	r0, r4, r4, asr #8
20012700:	0000003c 	andeq	r0, r0, ip, lsr r0
20012704:	3f000000 	svccc	0x00000000
20012708:	004000f6 	strdeq	r0, [r0], #-6
2001270c:	00040424 	andeq	r0, r4, r4, lsr #8
20012710:	000007c0 	andeq	r0, r0, r0, asr #15
20012714:	df000000 	svcle	0x00000000
20012718:	008001e1 	addeq	r0, r0, r1, ror #3
2001271c:	00020434 	andeq	r0, r2, r4, lsr r4
20012720:	0000f800 	andeq	pc, r0, r0, lsl #16
20012724:	3f800000 	svccc	0x00800000
20012728:	010001e0 	smlatteq	r0, r0, r1, r0
2001272c:	00020418 	andeq	r0, r2, r8, lsl r4
20012730:	007f0000 	rsbseq	r0, pc, r0
20012734:	0f800000 	svceq	0x00800000
20012738:	010003c0 	smlabteq	r0, r0, r3, r0
2001273c:	e0024400 	and	r4, r2, r0, lsl #8
20012740:	ff800001 			; <UNDEFINED> instruction: 0xff800001
20012744:	07800000 	streq	r0, [r0, r0]
20012748:	020803c0 	andeq	r0, r8, #192, 6
2001274c:	fffa4800 	vcmla.f32	d20, d10, d0[0], #270
20012750:	000007ff 	strdeq	r0, [r0], -pc	; <UNPREDICTABLE>
20012754:	03800000 	orreq	r0, r0, #0
20012758:	02100780 	andseq	r0, r0, #128, 14	; 0x2000000
2001275c:	fffe8800 	vcmla.f32	d24, d14, d0[0], #270
20012760:	00001fff 	strdeq	r1, [r0], -pc	; <UNPREDICTABLE>
20012764:	01c00000 	biceq	r0, r0, r0
20012768:	04100780 	ldreq	r0, [r0], #-1920	; 0xfffff880
2001276c:	fffc9000 			; <UNDEFINED> instruction: 0xfffc9000
20012770:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
20012774:	00c00000 	sbceq	r0, r0, r0
20012778:	04200700 	strteq	r0, [r0], #-1792	; 0xfffff900
2001277c:	fffc9000 			; <UNDEFINED> instruction: 0xfffc9000
20012780:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
20012784:	00200000 	eoreq	r0, r0, r0
20012788:	08200e00 	stmdaeq	r0!, {r9, sl, fp}
2001278c:	fffc1000 			; <UNDEFINED> instruction: 0xfffc1000
20012790:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
20012794:	00100000 	andseq	r0, r0, r0
20012798:	10400e00 	subne	r0, r0, r0, lsl #28
2001279c:	fffc1000 			; <UNDEFINED> instruction: 0xfffc1000
200127a0:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
200127a4:	00080000 	andeq	r0, r8, r0
200127a8:	20c01c00 	sbccs	r1, r0, r0, lsl #24
200127ac:	fffc1000 			; <UNDEFINED> instruction: 0xfffc1000
200127b0:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
200127b4:	00040000 	andeq	r0, r4, r0
200127b8:	20003800 	andcs	r3, r0, r0, lsl #16
200127bc:	fffc1000 			; <UNDEFINED> instruction: 0xfffc1000
200127c0:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
200127c4:	00020000 	andeq	r0, r2, r0
200127c8:	4000f800 	andmi	pc, r0, r0, lsl #16
200127cc:	fffc1000 			; <UNDEFINED> instruction: 0xfffc1000
200127d0:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
200127d4:	00010000 	andeq	r0, r1, r0
200127d8:	8001f000 	andhi	pc, r1, r0
200127dc:	fffc9000 			; <UNDEFINED> instruction: 0xfffc9000
200127e0:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
200127e4:	00008000 	andeq	r8, r0, r0
200127e8:	8403e000 	strhi	lr, [r3], #-0
200127ec:	fffc90c0 			; <UNDEFINED> instruction: 0xfffc90c0
200127f0:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
200127f4:	00008000 	andeq	r8, r0, r0
200127f8:	1807e000 	stmdane	r7, {sp, lr, pc}
200127fc:	fff88921 			; <UNDEFINED> instruction: 0xfff88921
20012800:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
20012804:	00008000 	andeq	r8, r0, r0
20012808:	001fc000 	andseq	ip, pc, r0
2001280c:	fff80921 			; <UNDEFINED> instruction: 0xfff80921
20012810:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
20012814:	00004000 	andeq	r4, r0, r0
20012818:	007fc000 	rsbseq	ip, pc, r0
2001281c:	fff81726 			; <UNDEFINED> instruction: 0xfff81726
20012820:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
20012824:	00004000 	andeq	r4, r0, r0
20012828:	01ff8000 	mvnseq	r8, r0
2001282c:	fff86df8 			; <UNDEFINED> instruction: 0xfff86df8
20012830:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
20012834:	00004000 	andeq	r4, r0, r0
20012838:	07ff0000 	ldrbeq	r0, [pc, r0]!
2001283c:	fff84000 			; <UNDEFINED> instruction: 0xfff84000
20012840:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
20012844:	00004000 	andeq	r4, r0, r0
20012848:	1fff0000 	svcne	0x00ff0000
2001284c:	fffc2000 			; <UNDEFINED> instruction: 0xfffc2000
20012850:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
20012854:	00002000 	andeq	r2, r0, r0
20012858:	7fff8000 	svcvc	0x00ff8000
2001285c:	fffc0000 			; <UNDEFINED> instruction: 0xfffc0000
20012860:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
20012864:	00002000 	andeq	r2, r0, r0
20012868:	ffff8000 			; <UNDEFINED> instruction: 0xffff8000
2001286c:	fffc0001 			; <UNDEFINED> instruction: 0xfffc0001
20012870:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff

20012874 <game_over_witch3_gray_bits>:
20012874:	00000000 	andeq	r0, r0, r0
20012878:	007fffe0 	rsbseq	pc, pc, r0, ror #31
	...
20012888:	01fffff8 	ldrsheq	pc, [pc, #248]	; 20012988 <game_over_witch3_gray_bits+0x114>	; <UNPREDICTABLE>
	...
20012898:	07fffffc 			; <UNDEFINED> instruction: 0x07fffffc
	...
200128a8:	0ffffffe 	svceq	0x00fffffe
	...
200128b4:	80000000 	andhi	r0, r0, r0
200128b8:	1fffffff 	svcne	0x00ffffff
	...
200128c4:	c0000000 	andgt	r0, r0, r0
200128c8:	3fffffff 	svccc	0x00ffffff
	...
200128d4:	f0000000 			; <UNDEFINED> instruction: 0xf0000000
200128d8:	7fffffff 	svcvc	0x00ffffff
	...
200128e4:	f8000000 			; <UNDEFINED> instruction: 0xf8000000
200128e8:	7fffffff 	svcvc	0x00ffffff
	...
200128f4:	fc000000 	stc2	0, cr0, [r0], {-0}
200128f8:	fffffc07 			; <UNDEFINED> instruction: 0xfffffc07
	...
20012904:	fe000000 	cdp2	0, 0, cr0, cr0, cr0, {0}
20012908:	fffff803 	vcmla.f32	d31, d15, d3[0], #270
	...
20012914:	ff000000 			; <UNDEFINED> instruction: 0xff000000
20012918:	fffff003 			; <UNDEFINED> instruction: 0xfffff003
2001291c:	00000001 	andeq	r0, r0, r1
20012920:	00000000 	andeq	r0, r0, r0
20012924:	ff800000 			; <UNDEFINED> instruction: 0xff800000
20012928:	fffff001 			; <UNDEFINED> instruction: 0xfffff001
2001292c:	00000003 	andeq	r0, r0, r3
20012930:	00000000 	andeq	r0, r0, r0
20012934:	7f800000 	svcvc	0x00800000
20012938:	1fffe000 	svcne	0x00ffe000
	...
20012944:	3fc00000 	svccc	0x00c00000
20012948:	07ffc000 	ldrbeq	ip, [pc, r0]!
	...
20012954:	1fe00000 	svcne	0x00e00000
20012958:	00ffc000 	rscseq	ip, pc, r0
	...
20012964:	1fe00000 	svcne	0x00e00000
20012968:	003fe000 	eorseq	lr, pc, r0
	...
20012974:	0ff00000 	svceq	0x00f00000	; IMB
20012978:	0007e000 	andeq	lr, r7, r0
	...
20012984:	0ff00000 	svceq	0x00f00000	; IMB
20012988:	0001f000 	andeq	pc, r1, r0
	...
20012994:	07f00000 	ldrbeq	r0, [r0, r0]!
20012998:	00007000 	andeq	r7, r0, r0
	...
200129a4:	03e00000 	mvneq	r0, #0
	...
200129b4:	03e00000 	mvneq	r0, #0
200129b8:	00000000 	andeq	r0, r0, r0
200129bc:	00002800 	andeq	r2, r0, r0, lsl #16
200129c0:	00000000 	andeq	r0, r0, r0
200129c4:	03e00000 	mvneq	r0, #0
200129c8:	00000000 	andeq	r0, r0, r0
200129cc:	00002000 	andeq	r2, r0, r0
200129d0:	00000000 	andeq	r0, r0, r0
200129d4:	03e00000 	mvneq	r0, #0
	...
200129e4:	01e00000 	mvneq	r0, r0
	...
200129f4:	01c00000 	biceq	r0, r0, r0
200129f8:	07800020 	streq	r0, [r0, r0, lsr #32]
	...
20012a04:	01c00000 	biceq	r0, r0, r0
20012a08:	0cc00010 	stcleq	0, cr0, [r0], {16}
	...
20012a18:	0c600000 	stcleq	0, cr0, [r0], #-0
	...
20012a28:	0c600000 	stcleq	0, cr0, [r0], #-0
	...
20012a38:	0ce00000 	stcleq	0, cr0, [r0]
	...
20012a48:	07c00000 	strbeq	r0, [r0, r0]
	...
20012a7c:	00002000 	andeq	r2, r0, r0
	...
20012abc:	00000c00 	andeq	r0, r0, r0, lsl #24
	...
20012acc:	00000600 	andeq	r0, r0, r0, lsl #12
	...
20012ad8:	00100000 	andseq	r0, r0, r0
20012adc:	00000780 	andeq	r0, r0, r0, lsl #15
	...
20012ae8:	03e00000 	mvneq	r0, #0
20012aec:	3ff80780 	svccc	0x00f80780
	...
20012af8:	ffc00000 			; <UNDEFINED> instruction: 0xffc00000
20012afc:	fff80383 			; <UNDEFINED> instruction: 0xfff80383
20012b00:	00000003 	andeq	r0, r0, r3
20012b04:	00000000 	andeq	r0, r0, r0
20012b08:	ff800008 			; <UNDEFINED> instruction: 0xff800008
20012b0c:	fff803c3 			; <UNDEFINED> instruction: 0xfff803c3
20012b10:	0000003f 	andeq	r0, r0, pc, lsr r0
20012b14:	00000000 	andeq	r0, r0, r0
20012b18:	ff00001e 			; <UNDEFINED> instruction: 0xff00001e
20012b1c:	fffc03c3 			; <UNDEFINED> instruction: 0xfffc03c3
20012b20:	000007ff 	strdeq	r0, [r0], -pc	; <UNPREDICTABLE>
20012b24:	c0000000 	andgt	r0, r0, r0
20012b28:	fe00001f 	mcr2	0, 0, r0, cr0, cr15, {0}
20012b2c:	fffc03e7 			; <UNDEFINED> instruction: 0xfffc03e7
20012b30:	0000ffff 	strdeq	pc, [r0], -pc	; <UNPREDICTABLE>
20012b34:	f0000000 			; <UNDEFINED> instruction: 0xf0000000
20012b38:	fe00003f 	mcr2	0, 0, r0, cr0, cr15, {1}
20012b3c:	1ffc03ff 	svcne	0x00fc03ff
20012b40:	007ffffe 	ldrshteq	pc, [pc], #-254	; <UNPREDICTABLE>
20012b44:	f8000000 			; <UNDEFINED> instruction: 0xf8000000
20012b48:	fc00003f 	stc2	0, cr0, [r0], {63}	; 0x3f
20012b4c:	000407ff 	strdeq	r0, [r4], -pc	; <UNPREDICTABLE>
20012b50:	fffff800 	vcmla.f32	d31, d15, d0[0], #270
20012b54:	fc000000 	stc2	0, cr0, [r0], {-0}
20012b58:	fc00007f 	stc2	0, cr0, [r0], {127}	; 0x7f
20012b5c:	000007ff 	strdeq	r0, [r0], -pc	; <UNPREDICTABLE>
20012b60:	ffffe000 			; <UNDEFINED> instruction: 0xffffe000
20012b64:	fe000000 	cdp2	0, 0, cr0, cr0, cr0, {0}
20012b68:	f800007f 			; <UNDEFINED> instruction: 0xf800007f
20012b6c:	00000fff 	strdeq	r0, [r0], -pc	; <UNPREDICTABLE>
20012b70:	00000000 	andeq	r0, r0, r0
20012b74:	ff000000 			; <UNDEFINED> instruction: 0xff000000
20012b78:	f80000ff 			; <UNDEFINED> instruction: 0xf80000ff
20012b7c:	00000fff 	strdeq	r0, [r0], -pc	; <UNPREDICTABLE>
20012b80:	00000000 	andeq	r0, r0, r0
20012b84:	ffc00000 			; <UNDEFINED> instruction: 0xffc00000
20012b88:	f00001ff 			; <UNDEFINED> instruction: 0xf00001ff
20012b8c:	00000fff 	strdeq	r0, [r0], -pc	; <UNPREDICTABLE>
20012b90:	00000000 	andeq	r0, r0, r0
20012b94:	ffe00000 			; <UNDEFINED> instruction: 0xffe00000
20012b98:	e00001ff 	strd	r0, [r0], -pc	; <UNPREDICTABLE>
20012b9c:	00000fff 	strdeq	r0, [r0], -pc	; <UNPREDICTABLE>
20012ba0:	00000000 	andeq	r0, r0, r0
20012ba4:	fff00000 			; <UNDEFINED> instruction: 0xfff00000	; IMB
20012ba8:	c00003ff 	strdgt	r0, [r0], -pc	; <UNPREDICTABLE>
20012bac:	00000fff 	strdeq	r0, [r0], -pc	; <UNPREDICTABLE>
20012bb0:	00000000 	andeq	r0, r0, r0
20012bb4:	fff80000 			; <UNDEFINED> instruction: 0xfff80000
20012bb8:	c00007ff 	strdgt	r0, [r0], -pc	; <UNPREDICTABLE>
20012bbc:	00000fff 	strdeq	r0, [r0], -pc	; <UNPREDICTABLE>
20012bc0:	00000000 	andeq	r0, r0, r0
20012bc4:	fffc0000 			; <UNDEFINED> instruction: 0xfffc0000
20012bc8:	800007ff 	strdhi	r0, [r0], -pc	; <UNPREDICTABLE>
20012bcc:	00000fff 	strdeq	r0, [r0], -pc	; <UNPREDICTABLE>
20012bd0:	00000000 	andeq	r0, r0, r0
20012bd4:	fffe0000 			; <UNDEFINED> instruction: 0xfffe0000
20012bd8:	00000fff 	strdeq	r0, [r0], -pc	; <UNPREDICTABLE>
20012bdc:	00000fff 	strdeq	r0, [r0], -pc	; <UNPREDICTABLE>
20012be0:	00000000 	andeq	r0, r0, r0
20012be4:	ffff0000 			; <UNDEFINED> instruction: 0xffff0000
20012be8:	00001fff 	strdeq	r1, [r0], -pc	; <UNPREDICTABLE>
20012bec:	00000f3f 	andeq	r0, r0, pc, lsr pc
20012bf0:	00000000 	andeq	r0, r0, r0
20012bf4:	ffff0000 			; <UNDEFINED> instruction: 0xffff0000
20012bf8:	00001fff 	strdeq	r1, [r0], -pc	; <UNPREDICTABLE>
20012bfc:	0000061e 	andeq	r0, r0, lr, lsl r6
20012c00:	00000000 	andeq	r0, r0, r0
20012c04:	ffff0000 			; <UNDEFINED> instruction: 0xffff0000
20012c08:	00003fff 	strdeq	r3, [r0], -pc	; <UNPREDICTABLE>
20012c0c:	0000061e 	andeq	r0, r0, lr, lsl r6
20012c10:	00000000 	andeq	r0, r0, r0
20012c14:	ffff8000 			; <UNDEFINED> instruction: 0xffff8000
20012c18:	00003fff 	strdeq	r3, [r0], -pc	; <UNPREDICTABLE>
20012c1c:	00000018 	andeq	r0, r0, r8, lsl r0
20012c20:	00000000 	andeq	r0, r0, r0
20012c24:	ffff8000 			; <UNDEFINED> instruction: 0xffff8000
20012c28:	00007fff 	strdeq	r7, [r0], -pc	; <UNPREDICTABLE>
	...
20012c34:	ffff8000 			; <UNDEFINED> instruction: 0xffff8000
20012c38:	0000ffff 	strdeq	pc, [r0], -pc	; <UNPREDICTABLE>
	...
20012c44:	ffff8000 			; <UNDEFINED> instruction: 0xffff8000
20012c48:	0000ffff 	strdeq	pc, [r0], -pc	; <UNPREDICTABLE>
	...
20012c54:	ffffc000 			; <UNDEFINED> instruction: 0xffffc000
20012c58:	00007fff 	strdeq	r7, [r0], -pc	; <UNPREDICTABLE>
	...
20012c64:	ffffc000 			; <UNDEFINED> instruction: 0xffffc000
20012c68:	00007fff 	strdeq	r7, [r0], -pc	; <UNPREDICTABLE>
	...

20012c74 <game_over_witch3_light_bits>:
	...
20012d8c:	000001c0 	andeq	r0, r0, r0, asr #3
	...
20012d9c:	000000ef 	andeq	r0, r0, pc, ror #1
	...
20012da8:	c0000000 	andgt	r0, r0, r0
20012dac:	000c006b 	andeq	r0, ip, fp, rrx
	...
20012db8:	03c00000 	biceq	r0, r0, #0
20012dbc:	000c0001 	andeq	r0, ip, r1
	...
20012dc8:	00300000 	eorseq	r0, r0, r0
20012dcc:	001e03fe 			; <UNDEFINED> instruction: 0x001e03fe
	...
20012dd8:	001c0000 	andseq	r0, ip, r0
20012ddc:	001f0fff 			; <UNDEFINED> instruction: 0x001f0fff
	...
20012de8:	000f0000 	andeq	r0, pc, r0
20012dec:	001f3fff 			; <UNDEFINED> instruction: 0x001f3fff
	...
20012df8:	00078000 	andeq	r8, r7, r0
20012dfc:	001cffff 			; <UNDEFINED> instruction: 0x001cffff
	...
20012e08:	0007c000 	andeq	ip, r7, r0
20012e0c:	001bffff 			; <UNDEFINED> instruction: 0x001bffff
	...
20012e18:	0003f000 	andeq	pc, r3, r0
20012e1c:	0017dfff 			; <UNDEFINED> instruction: 0x0017dfff
	...
20012e28:	0003f800 	andeq	pc, r3, r0, lsl #16
20012e2c:	000fbfdf 	ldrdeq	fp, [pc], -pc	; <UNPREDICTABLE>
	...
20012e38:	0003fc00 	andeq	pc, r3, r0, lsl #24
20012e3c:	001fff3f 	andseq	pc, pc, pc, lsr pc	; <UNPREDICTABLE>
	...
20012e48:	0003fe00 	andeq	pc, r3, r0, lsl #28
20012e4c:	001ffeff 			; <UNDEFINED> instruction: 0x001ffeff
	...
20012e58:	8001ff00 	andhi	pc, r1, r0, lsl #30
20012e5c:	001fffff 			; <UNDEFINED> instruction: 0x001fffff
	...
20012e68:	e001ff00 	and	pc, r1, r0, lsl #30
20012e6c:	001c1fff 			; <UNDEFINED> instruction: 0x001c1fff
	...
20012e78:	f801ff80 			; <UNDEFINED> instruction: 0xf801ff80
20012e7c:	000383ff 	strdeq	r8, [r3], -pc	; <UNPREDICTABLE>
	...
20012e88:	ff81ffc0 			; <UNDEFINED> instruction: 0xff81ffc0
20012e8c:	000f9cfd 	strdeq	r9, [pc], -sp
	...
20012e98:	fff8ffe0 			; <UNDEFINED> instruction: 0xfff8ffe0
20012e9c:	000f0f7b 	andeq	r0, pc, fp, ror pc	; <UNPREDICTABLE>
	...
20012ea8:	fffffff0 			; <UNDEFINED> instruction: 0xfffffff0
20012eac:	000703bb 			; <UNDEFINED> instruction: 0x000703bb
	...
20012eb8:	fffcffe0 			; <UNDEFINED> instruction: 0xfffcffe0
20012ebc:	000701c7 	andeq	r0, r7, r7, asr #3
	...
20012ec8:	ffe37fe0 			; <UNDEFINED> instruction: 0xffe37fe0
20012ecc:	0007907f 	andeq	r9, r7, pc, ror r0
	...
20012ed8:	fc077fc0 	stc2	15, cr7, [r7], {192}	; 0xc0
20012edc:	0003f01f 	andeq	pc, r3, pc, lsl r0	; <UNPREDICTABLE>
	...
20012ee8:	000fbf80 	andeq	fp, pc, r0, lsl #31
20012eec:	0003f000 	andeq	pc, r3, r0
	...
20012ef8:	001fff00 	andseq	pc, pc, r0, lsl #30
20012efc:	0003f800 	andeq	pc, r3, r0, lsl #16
	...
20012f08:	003fff00 	eorseq	pc, pc, r0, lsl #30
20012f0c:	0003f800 	andeq	pc, r3, r0, lsl #16
	...
20012f18:	007ffe00 	rsbseq	pc, pc, r0, lsl #28
20012f1c:	0001f800 	andeq	pc, r1, r0, lsl #16
	...
20012f28:	00fffe00 	rscseq	pc, pc, r0, lsl #28
20012f2c:	0001f800 	andeq	pc, r1, r0, lsl #16
	...
20012f38:	00fffc00 	rscseq	pc, pc, r0, lsl #24
20012f3c:	0001b800 	andeq	fp, r1, r0, lsl #16
	...
20012f48:	01f7fc00 	mvnseq	pc, r0, lsl #24
20012f4c:	0001b000 	andeq	fp, r1, r0
	...
20012f58:	01eff800 	mvneq	pc, r0, lsl #16
20012f5c:	00017000 	andeq	r7, r1, r0
	...
20012f68:	03eff800 	mvneq	pc, #0, 16
20012f6c:	00036000 	andeq	r6, r3, r0
	...
20012f78:	03dff800 	bicseq	pc, pc, #0, 16
20012f7c:	00036000 	andeq	r6, r3, r0
	...
20012f88:	07dff000 	ldrbeq	pc, [pc, r0]	; <UNPREDICTABLE>
20012f8c:	0003e000 	andeq	lr, r3, r0
	...
20012f98:	0fbff000 	svceq	0x00bff000
20012f9c:	0003e000 	andeq	lr, r3, r0
	...
20012fa8:	1f3fe000 	svcne	0x003fe000
20012fac:	0003e000 	andeq	lr, r3, r0
	...
20012fb8:	1fffc000 	svcne	0x00ffc000
20012fbc:	0003e000 	andeq	lr, r3, r0
	...
20012fc8:	3fff0000 	svccc	0x00ff0000
20012fcc:	0003e000 	andeq	lr, r3, r0
	...
20012fd8:	7ffe0000 	svcvc	0x00fe0000
20012fdc:	00036000 	andeq	r6, r3, r0
	...
20012fe8:	7bfc0000 	blvc	1ff12ff0 <startup-0xed010>
20012fec:	00036000 	andeq	r6, r3, r0
	...
20012ff8:	e7f80000 	ldrb	r0, [r8, r0]!
20012ffc:	00077000 	andeq	r7, r7, r0
	...
20013008:	ffe00000 			; <UNDEFINED> instruction: 0xffe00000
2001300c:	0007f000 	andeq	pc, r7, r0
	...
20013018:	ff800000 			; <UNDEFINED> instruction: 0xff800000
2001301c:	0007e801 	andeq	lr, r7, r1, lsl #16
	...
20013028:	fe000000 	cdp2	0, 0, cr0, cr0, cr0, {0}
2001302c:	00079207 	andeq	r9, r7, r7, lsl #4
	...
20013038:	f8000000 			; <UNDEFINED> instruction: 0xf8000000
2001303c:	0007bfff 	strdeq	fp, [r7], -pc	; <UNPREDICTABLE>
	...
20013048:	e0000000 	and	r0, r0, r0
2001304c:	0003dfff 	strdeq	sp, [r3], -pc	; <UNPREDICTABLE>
	...
20013058:	80000000 	andhi	r0, r0, r0
2001305c:	0003ffff 	strdeq	pc, [r3], -pc	; <UNPREDICTABLE>
	...
2001306c:	0003fffe 	strdeq	pc, [r3], -lr
20013070:	00000000 	andeq	r0, r0, r0

20013074 <game_over_witch4_black_bits>:
20013074:	00000000 	andeq	r0, r0, r0
20013078:	ffc0001c 			; <UNDEFINED> instruction: 0xffc0001c
2001307c:	00000007 	andeq	r0, r0, r7
	...
20013088:	fe000007 	cdp2	0, 0, cr0, cr0, cr7, {0}
2001308c:	0000001f 	andeq	r0, r0, pc, lsl r0
20013090:	00000000 	andeq	r0, r0, r0
20013094:	e0000000 	and	r0, r0, r0
20013098:	fc000000 	stc2	0, cr0, [r0], {-0}
2001309c:	0000003f 	andeq	r0, r0, pc, lsr r0
200130a0:	00000000 	andeq	r0, r0, r0
200130a4:	3fe00000 	svccc	0x00e00000
200130a8:	f8000000 			; <UNDEFINED> instruction: 0xf8000000
200130ac:	000000ff 	strdeq	r0, [r0], -pc	; <UNPREDICTABLE>
200130b0:	00000000 	andeq	r0, r0, r0
200130b4:	003ff000 	eorseq	pc, pc, r0
200130b8:	e0000000 	and	r0, r0, r0
200130bc:	000003ff 	strdeq	r0, [r0], -pc	; <UNPREDICTABLE>
200130c0:	00000000 	andeq	r0, r0, r0
200130c4:	00001c00 	andeq	r1, r0, r0, lsl #24
200130c8:	80000000 	andhi	r0, r0, r0
200130cc:	000007ff 	strdeq	r0, [r0], -pc	; <UNPREDICTABLE>
200130d0:	00000000 	andeq	r0, r0, r0
200130d4:	00000600 	andeq	r0, r0, r0, lsl #12
200130d8:	00000000 	andeq	r0, r0, r0
200130dc:	00000fff 	strdeq	r0, [r0], -pc	; <UNPREDICTABLE>
200130e0:	00000000 	andeq	r0, r0, r0
200130e4:	00000200 	andeq	r0, r0, r0, lsl #4
200130e8:	00000000 	andeq	r0, r0, r0
200130ec:	00001ffe 	strdeq	r1, [r0], -lr
200130f0:	00000000 	andeq	r0, r0, r0
200130f4:	00000200 	andeq	r0, r0, r0, lsl #4
200130f8:	00000000 	andeq	r0, r0, r0
200130fc:	00003ffc 	strdeq	r3, [r0], -ip
20013100:	00000000 	andeq	r0, r0, r0
20013104:	00000200 	andeq	r0, r0, r0, lsl #4
20013108:	00000000 	andeq	r0, r0, r0
2001310c:	00003ff8 	strdeq	r3, [r0], -r8
20013110:	00000000 	andeq	r0, r0, r0
20013114:	00000200 	andeq	r0, r0, r0, lsl #4
20013118:	0000003f 	andeq	r0, r0, pc, lsr r0
2001311c:	0000fff0 	strdeq	pc, [r0], -r0
20013120:	00000000 	andeq	r0, r0, r0
20013124:	fffc0600 			; <UNDEFINED> instruction: 0xfffc0600
20013128:	000001ff 	strdeq	r0, [r0], -pc	; <UNPREDICTABLE>
2001312c:	0001fff0 	strdeq	pc, [r1], -r0
20013130:	00000000 	andeq	r0, r0, r0
20013134:	fffffc00 			; <UNDEFINED> instruction: 0xfffffc00
20013138:	000003ff 	strdeq	r0, [r0], -pc	; <UNPREDICTABLE>
2001313c:	0001ffe0 	andeq	pc, r1, r0, ror #31
20013140:	00000000 	andeq	r0, r0, r0
20013144:	fffff000 			; <UNDEFINED> instruction: 0xfffff000
20013148:	f8003fff 			; <UNDEFINED> instruction: 0xf8003fff
2001314c:	0001ffff 	strdeq	pc, [r1], -pc	; <UNPREDICTABLE>
20013150:	00000000 	andeq	r0, r0, r0
20013154:	ffffc000 			; <UNDEFINED> instruction: 0xffffc000
20013158:	fffcffff 			; <UNDEFINED> instruction: 0xfffcffff
2001315c:	0007ffff 	strdeq	pc, [r7], -pc	; <UNPREDICTABLE>
20013160:	00000000 	andeq	r0, r0, r0
20013164:	ffff8000 			; <UNDEFINED> instruction: 0xffff8000
20013168:	ffffffbf 			; <UNDEFINED> instruction: 0xffffffbf
2001316c:	007fffff 	ldrshteq	pc, [pc], #-255	; <UNPREDICTABLE>
20013170:	00000000 	andeq	r0, r0, r0
20013174:	ffff8000 			; <UNDEFINED> instruction: 0xffff8000
20013178:	ffffff83 			; <UNDEFINED> instruction: 0xffffff83
2001317c:	01ffffff 	ldrsheq	pc, [pc, #255]	; 20013283 <game_over_witch4_black_bits+0x20f>	; <UNPREDICTABLE>
20013180:	00000000 	andeq	r0, r0, r0
20013184:	01ff0000 	mvnseq	r0, r0
20013188:	fffffff0 			; <UNDEFINED> instruction: 0xfffffff0
2001318c:	07ffffff 			; <UNDEFINED> instruction: 0x07ffffff
	...
20013198:	3ffffffe 	svccc	0x00fffffe
2001319c:	0fffffe0 	svceq	0x00ffffe0
200131a0:	00000000 	andeq	r0, r0, r0
200131a4:	80000000 	andhi	r0, r0, r0
200131a8:	007fffff 	ldrshteq	pc, [pc], #-255	; <UNPREDICTABLE>
200131ac:	1fffffc0 	svcne	0x00ffffc0
200131b0:	00000000 	andeq	r0, r0, r0
200131b4:	f8000000 			; <UNDEFINED> instruction: 0xf8000000
200131b8:	01cfffff 	strdeq	pc, [pc, #255]	; 200132bf <game_over_witch4_black_bits+0x24b>
200131bc:	3ffffe70 	svccc	0x00fffe70
200131c0:	00000000 	andeq	r0, r0, r0
200131c4:	ff000000 			; <UNDEFINED> instruction: 0xff000000
200131c8:	0f03ffff 	svceq	0x0003ffff
200131cc:	7fffffb0 	svcvc	0x00ffffb0
200131d0:	00000000 	andeq	r0, r0, r0
200131d4:	ffe00000 			; <UNDEFINED> instruction: 0xffe00000
200131d8:	1e00ffff 	mcrne	15, 0, pc, cr0, cr15, {7}	; <UNPREDICTABLE>
200131dc:	ffffe0fc 			; <UNDEFINED> instruction: 0xffffe0fc
200131e0:	00000000 	andeq	r0, r0, r0
200131e4:	fff80000 			; <UNDEFINED> instruction: 0xfff80000
200131e8:	3ff03fff 	svccc	0x00f03fff
200131ec:	ffffc2f0 			; <UNDEFINED> instruction: 0xffffc2f0
200131f0:	00000001 	andeq	r0, r0, r1
200131f4:	ffff0000 			; <UNDEFINED> instruction: 0xffff0000
200131f8:	7ffc0fff 	svcvc	0x00fc0fff
200131fc:	ffffc780 			; <UNDEFINED> instruction: 0xffffc780
20013200:	00000007 	andeq	r0, r0, r7
20013204:	ffff8000 			; <UNDEFINED> instruction: 0xffff8000
20013208:	603701ff 	ldrshtvs	r0, [r7], -pc
2001320c:	fffe9c00 			; <UNDEFINED> instruction: 0xfffe9c00
20013210:	0000000f 	andeq	r0, r0, pc
20013214:	ffffc000 			; <UNDEFINED> instruction: 0xffffc000
20013218:	f019c07f 			; <UNDEFINED> instruction: 0xf019c07f
2001321c:	fffeb000 			; <UNDEFINED> instruction: 0xfffeb000
20013220:	0000001f 	andeq	r0, r0, pc, lsl r0
20013224:	ffffc000 			; <UNDEFINED> instruction: 0xffffc000
20013228:	9188603f 	orrls	r6, r8, pc, lsr r0
2001322c:	fffcc000 			; <UNDEFINED> instruction: 0xfffcc000
20013230:	0000003f 	andeq	r0, r0, pc, lsr r0
20013234:	ffffc000 			; <UNDEFINED> instruction: 0xffffc000
20013238:	91ec300f 	mvnls	r3, pc
2001323c:	fffc8000 			; <UNDEFINED> instruction: 0xfffc8000
20013240:	0000003f 	andeq	r0, r0, pc, lsr r0
20013244:	ffffc000 			; <UNDEFINED> instruction: 0xffffc000
20013248:	98e41807 	stmials	r4!, {r0, r1, r2, fp, ip}^
2001324c:	fff88030 			; <UNDEFINED> instruction: 0xfff88030
20013250:	0000007f 	andeq	r0, r0, pc, ror r0
20013254:	ffffc000 			; <UNDEFINED> instruction: 0xffffc000
20013258:	cce47907 			; <UNDEFINED> instruction: 0xcce47907
2001325c:	fff98010 			; <UNDEFINED> instruction: 0xfff98010
20013260:	0000007f 	andeq	r0, r0, pc, ror r0
20013264:	ffffc000 			; <UNDEFINED> instruction: 0xffffc000
20013268:	6704c187 	strvs	ip, [r4, -r7, lsl #3]
2001326c:	fff90018 			; <UNDEFINED> instruction: 0xfff90018
20013270:	0000007f 	andeq	r0, r0, pc, ror r0
20013274:	ffff8000 			; <UNDEFINED> instruction: 0xffff8000
20013278:	31ff86c7 	mvnscc	r8, r7, asr #13
2001327c:	fffb0008 			; <UNDEFINED> instruction: 0xfffb0008
20013280:	0000007f 	andeq	r0, r0, pc, ror r0
20013284:	ffff8000 			; <UNDEFINED> instruction: 0xffff8000
20013288:	1c0e0207 	sfmne	f0, 4, [lr], {7}
2001328c:	fffa000c 			; <UNDEFINED> instruction: 0xfffa000c
20013290:	0000007f 	andeq	r0, r0, pc, ror r0
20013294:	ffff8000 			; <UNDEFINED> instruction: 0xffff8000
20013298:	04380605 	ldrteq	r0, [r8], #-1541	; 0xfffff9fb
2001329c:	fffa0006 			; <UNDEFINED> instruction: 0xfffa0006
200132a0:	0000007f 	andeq	r0, r0, pc, ror r0
200132a4:	3fff0000 	svccc	0x00ff0000
200132a8:	03e00c04 	mvneq	r0, #4, 24	; 0x400
200132ac:	ffea0002 			; <UNDEFINED> instruction: 0xffea0002
200132b0:	0000007f 	andeq	r0, r0, pc, ror r0
200132b4:	9fff0000 	svcls	0x00ff0000
200132b8:	0180180f 	orreq	r1, r0, pc, lsl #16
200132bc:	ff0b0003 			; <UNDEFINED> instruction: 0xff0b0003
200132c0:	0000007f 	andeq	r0, r0, pc, ror r0
200132c4:	f7fe0000 			; <UNDEFINED> instruction: 0xf7fe0000
200132c8:	00007808 	andeq	r7, r0, r8, lsl #16
200132cc:	fc090001 	stc2	0, cr0, [r9], {1}
200132d0:	0000007f 	andeq	r0, r0, pc, ror r0
200132d4:	1ffc0000 	svcne	0x00fc0000
200132d8:	0001d008 	andeq	sp, r1, r8
200132dc:	e00d0001 	and	r0, sp, r1
200132e0:	0000007f 	andeq	r0, r0, pc, ror r0
200132e4:	07f80000 	ldrbeq	r0, [r8, r0]!
200132e8:	00033008 	andeq	r3, r3, r8
200132ec:	00058001 	andeq	r8, r5, r1
200132f0:	000003c0 	andeq	r0, r0, r0, asr #7
200132f4:	01f80000 	mvnseq	r0, r0
200132f8:	00062018 	andeq	r2, r6, r8, lsl r0
200132fc:	0004c001 	andeq	ip, r4, r1
20013300:	00001e00 	andeq	r1, r0, r0, lsl #28
20013304:	00700000 	rsbseq	r0, r0, r0
20013308:	007c6010 	rsbseq	r6, ip, r0, lsl r0
2001330c:	00064001 	andeq	r4, r6, r1
20013310:	0001f000 	andeq	pc, r1, r0
20013314:	001c0000 	andseq	r0, ip, r0
20013318:	00784010 	rsbseq	r4, r8, r0, lsl r0
2001331c:	01fe6000 	mvnseq	r6, r0
20013320:	000f0000 	andeq	r0, pc, r0
20013324:	00070000 	andeq	r0, r7, r0
20013328:	0050c020 	subseq	ip, r0, r0, lsr #32
2001332c:	7ffe1800 	svcvc	0x00fe1800
20013330:	01f00000 	mvnseq	r0, r0
20013334:	00018000 	andeq	r8, r1, r0
20013338:	00508020 	subseq	r8, r0, r0, lsr #32
2001333c:	ffff0c00 			; <UNDEFINED> instruction: 0xffff0c00
20013340:	0f00003f 	svceq	0x0000003f
20013344:	0000c000 	andeq	ip, r0, r0
20013348:	01d18440 	bicseq	r8, r1, r0, asr #8
2001334c:	ffff0600 			; <UNDEFINED> instruction: 0xffff0600
20013350:	f80007ff 			; <UNDEFINED> instruction: 0xf80007ff
20013354:	00006000 	andeq	r6, r0, r0
20013358:	03910440 	orrseq	r0, r1, #64, 8	; 0x40000000
2001335c:	ffff0300 			; <UNDEFINED> instruction: 0xffff0300
20013360:	00007fff 	strdeq	r7, [r0], -pc	; <UNPREDICTABLE>
20013364:	00002000 	andeq	r2, r0, r0
20013368:	06f60cc0 	ldrbteq	r0, [r6], r0, asr #25
2001336c:	ffff4180 			; <UNDEFINED> instruction: 0xffff4180
20013370:	007fffff 	ldrshteq	pc, [pc], #-255	; <UNPREDICTABLE>
20013374:	00001000 	andeq	r1, r0, r0
20013378:	04641880 	strbteq	r1, [r4], #-2176	; 0xfffff780
2001337c:	ffff60c0 			; <UNDEFINED> instruction: 0xffff60c0
20013380:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
20013384:	00000800 	andeq	r0, r0, r0, lsl #16
20013388:	0c083180 	stfeqs	f3, [r8], {128}	; 0x80
2001338c:	ffff2060 			; <UNDEFINED> instruction: 0xffff2060
20013390:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
20013394:	00000c00 	andeq	r0, r0, r0, lsl #24
20013398:	0818c3c0 	ldmdaeq	r8, {r6, r7, r8, r9, lr, pc}
2001339c:	ffffb078 			; <UNDEFINED> instruction: 0xffffb078
200133a0:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
200133a4:	00000600 	andeq	r0, r0, r0, lsl #12
200133a8:	083307e0 	ldmdaeq	r3!, {r5, r6, r7, r8, r9, sl}
200133ac:	ffff806c 			; <UNDEFINED> instruction: 0xffff806c
200133b0:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
200133b4:	00000300 	andeq	r0, r0, r0, lsl #6
200133b8:	d8e61fe0 	stmiale	r6!, {r5, r6, r7, r8, r9, sl, fp, ip}^
200133bc:	ffff803f 			; <UNDEFINED> instruction: 0xffff803f
200133c0:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
200133c4:	00000100 	andeq	r0, r0, r0, lsl #2
200133c8:	71803fe0 	orrvc	r3, r0, r0, ror #31
200133cc:	ffffc60c 			; <UNDEFINED> instruction: 0xffffc60c
200133d0:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
200133d4:	00000100 	andeq	r0, r0, r0, lsl #2
200133d8:	9e00ffc0 	cdpls	15, 0, cr15, cr0, cr0, {6}
200133dc:	ffffc5c7 			; <UNDEFINED> instruction: 0xffffc5c7
200133e0:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
200133e4:	00000080 	andeq	r0, r0, r0, lsl #1
200133e8:	f003ffe0 			; <UNDEFINED> instruction: 0xf003ffe0
200133ec:	ffffc160 			; <UNDEFINED> instruction: 0xffffc160
200133f0:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
200133f4:	00000080 	andeq	r0, r0, r0, lsl #1
200133f8:	000ffff0 	strdeq	pc, [pc], -r0
200133fc:	ffffc180 			; <UNDEFINED> instruction: 0xffffc180
20013400:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
20013404:	000000c0 	andeq	r0, r0, r0, asr #1
20013408:	041ffff8 	ldreq	pc, [pc], #-4088	; 20013410 <game_over_witch4_black_bits+0x39c>
2001340c:	ffffc180 			; <UNDEFINED> instruction: 0xffffc180
20013410:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
20013414:	00000040 	andeq	r0, r0, r0, asr #32
20013418:	7c7ffffc 	ldclvc	15, cr15, [pc], #-1008	; 20013030 <game_over_witch3_light_bits+0x3bc>
2001341c:	ffffe100 			; <UNDEFINED> instruction: 0xffffe100
20013420:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
20013424:	00000040 	andeq	r0, r0, r0, asr #32
20013428:	01fffffc 	ldrsheq	pc, [pc, #252]	; 2001352c <game_over_witch4_gray_bits+0xb8>	; <UNPREDICTABLE>
2001342c:	fffff000 			; <UNDEFINED> instruction: 0xfffff000
20013430:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
20013434:	00000060 	andeq	r0, r0, r0, rrx
20013438:	07fffffc 			; <UNDEFINED> instruction: 0x07fffffc
2001343c:	fffff800 	vcmla.f32	d31, d15, d0[0], #270
20013440:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
20013444:	00000020 	andeq	r0, r0, r0, lsr #32
20013448:	1ffffff8 	svcne	0x00fffff8
2001344c:	fffffc00 			; <UNDEFINED> instruction: 0xfffffc00
20013450:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
20013454:	00000020 	andeq	r0, r0, r0, lsr #32
20013458:	fffffff0 			; <UNDEFINED> instruction: 0xfffffff0
2001345c:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
20013460:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
20013464:	00000020 	andeq	r0, r0, r0, lsr #32
20013468:	fffffff0 			; <UNDEFINED> instruction: 0xfffffff0
2001346c:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
20013470:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff

20013474 <game_over_witch4_gray_bits>:
20013474:	00000000 	andeq	r0, r0, r0
20013478:	003fffe0 	eorseq	pc, pc, r0, ror #31
	...
20013488:	01fffff8 	ldrsheq	pc, [pc, #248]	; 20013588 <game_over_witch4_gray_bits+0x114>	; <UNPREDICTABLE>
	...
20013498:	03ffffff 	mvnseq	pc, #1020	; 0x3fc
	...
200134a4:	c0000000 	andgt	r0, r0, r0
200134a8:	07ffffff 			; <UNDEFINED> instruction: 0x07ffffff
	...
200134b4:	ffc00000 			; <UNDEFINED> instruction: 0xffc00000
200134b8:	1fffffff 	svcne	0x00ffffff
	...
200134c4:	ffffe000 			; <UNDEFINED> instruction: 0xffffe000
200134c8:	7fffffff 	svcvc	0x00ffffff
	...
200134d4:	fffff800 	vcmla.f32	d31, d15, d0[0], #270
200134d8:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
	...
200134e4:	fffffc00 			; <UNDEFINED> instruction: 0xfffffc00
200134e8:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
200134ec:	00000001 	andeq	r0, r0, r1
200134f0:	00000000 	andeq	r0, r0, r0
200134f4:	fffffc00 			; <UNDEFINED> instruction: 0xfffffc00
200134f8:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
200134fc:	00000003 	andeq	r0, r0, r3
20013500:	00000000 	andeq	r0, r0, r0
20013504:	fffffc00 			; <UNDEFINED> instruction: 0xfffffc00
20013508:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
2001350c:	00000007 	andeq	r0, r0, r7
20013510:	00000000 	andeq	r0, r0, r0
20013514:	fffffc00 			; <UNDEFINED> instruction: 0xfffffc00
20013518:	ffffffc0 			; <UNDEFINED> instruction: 0xffffffc0
2001351c:	0000000f 	andeq	r0, r0, pc
20013520:	00000000 	andeq	r0, r0, r0
20013524:	0003f800 	andeq	pc, r3, r0, lsl #16
20013528:	fffffe00 			; <UNDEFINED> instruction: 0xfffffe00
2001352c:	0000000f 	andeq	r0, r0, pc
	...
20013538:	fffffc00 			; <UNDEFINED> instruction: 0xfffffc00
2001353c:	0000001f 	andeq	r0, r0, pc, lsl r0
	...
20013548:	07ffc000 	ldrbeq	ip, [pc, r0]!
	...
20013558:	00030000 	andeq	r0, r3, r0
	...
200135dc:	00001f00 	andeq	r1, r0, r0, lsl #30
	...
200135ec:	00003100 	andeq	r3, r0, r0, lsl #2
	...
200135fc:	00003000 	andeq	r3, r0, r0
	...
20013608:	1fc00000 	svcne	0x00c00000
2001360c:	00006000 	andeq	r6, r0, r0
	...
20013618:	0c600000 	stcleq	0, cr0, [r0], #-0
2001361c:	00004000 	andeq	r4, r0, r0
	...
20013628:	0c700000 	ldcleq	0, cr0, [r0], #-0
	...
20013638:	0e100000 	cdpeq	0, 1, cr0, cr0, cr0, {0}
	...
20013648:	07180000 	ldreq	r0, [r8, -r0]
	...
20013658:	03180000 	tsteq	r8, #0
	...
20013668:	00f80000 	rscseq	r0, r8, r0
	...
200136ac:	00100000 	andseq	r0, r0, r0
	...
200136bc:	00f00000 	rscseq	r0, r0, r0
	...
200136c8:	00000007 	andeq	r0, r0, r7
200136cc:	03f00000 	mvnseq	r0, #0
200136d0:	00000000 	andeq	r0, r0, r0
200136d4:	e0000000 	and	r0, r0, r0
200136d8:	00002007 	andeq	r2, r0, r7
200136dc:	1ff00000 	svcne	0x00f00000	; IMB
200136e0:	00000000 	andeq	r0, r0, r0
200136e4:	f8000000 			; <UNDEFINED> instruction: 0xf8000000
200136e8:	0000c007 	andeq	ip, r0, r7
200136ec:	fff80000 			; <UNDEFINED> instruction: 0xfff80000
200136f0:	0000003f 	andeq	r0, r0, pc, lsr r0
200136f4:	fe000000 	cdp2	0, 0, cr0, cr0, cr0, {0}
200136f8:	0001c007 	andeq	ip, r1, r7
200136fc:	fff80000 			; <UNDEFINED> instruction: 0xfff80000
20013700:	000001ff 	strdeq	r0, [r0], -pc	; <UNPREDICTABLE>
20013704:	ff800000 			; <UNDEFINED> instruction: 0xff800000
20013708:	0003800f 	andeq	r8, r3, pc
2001370c:	fff80000 			; <UNDEFINED> instruction: 0xfff80000
20013710:	00000fff 	strdeq	r0, [r0], -pc	; <UNPREDICTABLE>
20013714:	ffe00000 			; <UNDEFINED> instruction: 0xffe00000
20013718:	0007800f 	andeq	r8, r7, pc
2001371c:	fe000000 	cdp2	0, 0, cr0, cr0, cr0, {0}
20013720:	0000ffff 	strdeq	pc, [r0], -pc	; <UNPREDICTABLE>
20013724:	fff80000 			; <UNDEFINED> instruction: 0xfff80000
20013728:	000f001f 	andeq	r0, pc, pc, lsl r0	; <UNPREDICTABLE>
2001372c:	80000000 	andhi	r0, r0, r0
20013730:	000fffff 	strdeq	pc, [pc], -pc	; <UNPREDICTABLE>
20013734:	fffe0000 			; <UNDEFINED> instruction: 0xfffe0000
20013738:	000f001f 	andeq	r0, pc, pc, lsl r0	; <UNPREDICTABLE>
2001373c:	00000000 	andeq	r0, r0, r0
20013740:	00ffffc0 	rscseq	pc, pc, r0, asr #31
20013744:	ffff0000 			; <UNDEFINED> instruction: 0xffff0000
20013748:	000e003f 	andeq	r0, lr, pc, lsr r0
2001374c:	00000000 	andeq	r0, r0, r0
20013750:	07fff800 	ldrbeq	pc, [pc, r0, lsl #16]!	; <UNPREDICTABLE>
20013754:	ffff8000 			; <UNDEFINED> instruction: 0xffff8000
20013758:	000e003f 	andeq	r0, lr, pc, lsr r0
2001375c:	00000000 	andeq	r0, r0, r0
20013760:	ffff8000 			; <UNDEFINED> instruction: 0xffff8000
20013764:	ffffc000 			; <UNDEFINED> instruction: 0xffffc000
20013768:	0108003f 	tsteq	r8, pc, lsr r0
2001376c:	00000000 	andeq	r0, r0, r0
20013770:	ff800000 			; <UNDEFINED> instruction: 0xff800000
20013774:	ffffe000 			; <UNDEFINED> instruction: 0xffffe000
20013778:	0398007f 	orrseq	r0, r8, #127	; 0x7f
	...
20013784:	fffff000 			; <UNDEFINED> instruction: 0xfffff000
20013788:	03f0007f 	mvnseq	r0, #127	; 0x7f
	...
20013794:	fffff000 			; <UNDEFINED> instruction: 0xfffff000
20013798:	07e0003f 			; <UNDEFINED> instruction: 0x07e0003f
	...
200137a4:	fffff800 	vcmla.f32	d31, d15, d0[0], #270
200137a8:	07c0001f 	bfceq	r0, #0, #1
	...
200137b4:	fffffc00 			; <UNDEFINED> instruction: 0xfffffc00
200137b8:	0700001f 	smladeq	r0, pc, r0, r0	; <UNPREDICTABLE>
	...
200137c4:	fffffe00 			; <UNDEFINED> instruction: 0xfffffe00
200137c8:	8e00001f 	mcrhi	0, 0, r0, cr0, cr15, {0}
200137cc:	00000003 	andeq	r0, r0, r3
200137d0:	00000000 	andeq	r0, r0, r0
200137d4:	fffffe00 			; <UNDEFINED> instruction: 0xfffffe00
200137d8:	6000003f 	andvs	r0, r0, pc, lsr r0
	...
200137e4:	ffffff00 			; <UNDEFINED> instruction: 0xffffff00
200137e8:	0000001f 	andeq	r0, r0, pc, lsl r0
	...
200137f4:	ffffff00 			; <UNDEFINED> instruction: 0xffffff00
200137f8:	0000000f 	andeq	r0, r0, pc
	...
20013804:	ffffff00 			; <UNDEFINED> instruction: 0xffffff00
20013808:	00000007 	andeq	r0, r0, r7
	...
20013814:	ffffff80 			; <UNDEFINED> instruction: 0xffffff80
20013818:	00000003 	andeq	r0, r0, r3
	...
20013824:	ffffff80 			; <UNDEFINED> instruction: 0xffffff80
20013828:	00000003 	andeq	r0, r0, r3
	...
20013834:	ffffff80 			; <UNDEFINED> instruction: 0xffffff80
20013838:	00000003 	andeq	r0, r0, r3
	...
20013844:	ffffffc0 			; <UNDEFINED> instruction: 0xffffffc0
20013848:	00000007 	andeq	r0, r0, r7
	...
20013854:	ffffffc0 			; <UNDEFINED> instruction: 0xffffffc0
20013858:	0000000f 	andeq	r0, r0, pc
	...
20013864:	ffffffc0 			; <UNDEFINED> instruction: 0xffffffc0
20013868:	0000000f 	andeq	r0, r0, pc
	...

20013874 <game_over_witch4_light_bits>:
	...
20013998:	c0000000 	andgt	r0, r0, r0
2001399c:	0000001f 	andeq	r0, r0, pc, lsl r0
	...
200139a8:	ff800000 			; <UNDEFINED> instruction: 0xff800000
200139ac:	0000003f 	andeq	r0, r0, pc, lsr r0
	...
200139b8:	fe300000 	cdp2	0, 3, cr0, cr0, cr0, {0}
200139bc:	0000018f 	andeq	r0, r0, pc, lsl #3
	...
200139c8:	f0fc0000 			; <UNDEFINED> instruction: 0xf0fc0000
200139cc:	0000004f 	andeq	r0, r0, pc, asr #32
	...
200139d8:	e1ff0000 	mvns	r0, r0
200139dc:	00000003 	andeq	r0, r0, r3
	...
200139e8:	c00fc000 	andgt	ip, pc, r0
200139ec:	0000000f 	andeq	r0, r0, pc
	...
200139f8:	8003f000 	andhi	pc, r3, r0
200139fc:	0000007f 	andeq	r0, r0, pc, ror r0
	...
20013a08:	8000fe00 	andhi	pc, r0, r0, lsl #28
20013a0c:	000103ff 	strdeq	r0, [r1], -pc	; <UNPREDICTABLE>
	...
20013a18:	00003f80 	andeq	r3, r0, r0, lsl #31
20013a1c:	00010fff 	strdeq	r0, [r1], -pc	; <UNPREDICTABLE>
	...
20013a28:	00001fc0 	andeq	r1, r0, r0, asr #31
20013a2c:	00033fff 	strdeq	r3, [r3], -pc	; <UNPREDICTABLE>
	...
20013a38:	00000ff0 	strdeq	r0, [r0], -r0	; <UNPREDICTABLE>
20013a3c:	00037fff 	strdeq	r7, [r3], -pc	; <UNPREDICTABLE>
	...
20013a48:	000007f8 	strdeq	r0, [r0], -r8
20013a4c:	00077fcf 	andeq	r7, r7, pc, asr #31
	...
20013a58:	000006f8 	strdeq	r0, [r0], -r8
20013a5c:	00067fef 	andeq	r7, r6, pc, ror #31
	...
20013a68:	80003e78 	andhi	r3, r0, r8, ror lr
20013a6c:	0006ffe7 	andeq	pc, r6, r7, ror #31
	...
20013a78:	c0007938 	andgt	r7, r0, r8, lsr r9
20013a7c:	0004fff7 	strdeq	pc, [r4], -r7
	...
20013a88:	e001fdf8 	strd	pc, [r1], -r8
20013a8c:	0005fff3 	strdeq	pc, [r5], -r3
	...
20013a98:	f807f9f8 			; <UNDEFINED> instruction: 0xf807f9f8
20013a9c:	0005fff9 	strdeq	pc, [r5], -r9
	...
20013aa8:	fc1ff3f8 	ldc2	3, cr15, [pc], {248}	; 0xf8
20013aac:	0005fffd 	strdeq	pc, [r5], -sp
	...
20013ab8:	fe7fe7f0 	mrc2	7, 3, lr, cr15, cr0, {7}
20013abc:	0004fffc 	strdeq	pc, [r4], -ip
	...
20013ac8:	ffff87f0 			; <UNDEFINED> instruction: 0xffff87f0
20013acc:	0006fffe 	strdeq	pc, [r6], -lr
	...
20013ad8:	fffe0ff0 			; <UNDEFINED> instruction: 0xfffe0ff0
20013adc:	0002fffe 	strdeq	pc, [r2], -lr
	...
20013ae8:	fffc0ff0 			; <UNDEFINED> instruction: 0xfffc0ff0
20013aec:	00027ffe 	strdeq	r7, [r2], -lr
	...
20013af8:	fff81fe0 			; <UNDEFINED> instruction: 0xfff81fe0
20013afc:	00033ffe 	strdeq	r3, [r3], -lr
	...
20013b08:	ff801fe0 			; <UNDEFINED> instruction: 0xff801fe0
20013b0c:	0001bffe 	strdeq	fp, [r1], -lr
	...
20013b18:	ff803fe0 			; <UNDEFINED> instruction: 0xff803fe0
20013b1c:	00019fff 	strdeq	r9, [r1], -pc	; <UNPREDICTABLE>
	...
20013b28:	ff803fc0 			; <UNDEFINED> instruction: 0xff803fc0
20013b2c:	0001e7ff 	strdeq	lr, [r1], -pc	; <UNPREDICTABLE>
	...
20013b38:	ff807fc0 			; <UNDEFINED> instruction: 0xff807fc0
20013b3c:	0000f3ff 	strdeq	pc, [r0], -pc	; <UNPREDICTABLE>
	...
20013b48:	fe007b80 	vseleq.f64	d7, d16, d0
20013b4c:	0000f9ff 	strdeq	pc, [r0], -pc	; <UNPREDICTABLE>
	...
20013b58:	fc00fb80 	stc2	11, cr15, [r0], {128}	; 0x80	; <UNPREDICTABLE>
20013b5c:	0000fcff 	strdeq	pc, [r0], -pc	; <UNPREDICTABLE>
	...
20013b68:	f801f300 			; <UNDEFINED> instruction: 0xf801f300
20013b6c:	0000be7f 	andeq	fp, r0, pc, ror lr
	...
20013b78:	f803e700 			; <UNDEFINED> instruction: 0xf803e700
20013b7c:	00009f3f 	andeq	r9, r0, pc, lsr pc
	...
20013b88:	f007ce00 			; <UNDEFINED> instruction: 0xf007ce00
20013b8c:	0000df9f 	muleq	r0, pc, pc	; <UNPREDICTABLE>
	...
20013b98:	f0073c00 			; <UNDEFINED> instruction: 0xf0073c00
20013b9c:	00004f87 	andeq	r4, r0, r7, lsl #31
	...
20013ba8:	f00cf800 			; <UNDEFINED> instruction: 0xf00cf800
20013bac:	00007f83 	andeq	r7, r0, r3, lsl #31
	...
20013bb8:	2019e000 	andscs	lr, r9, r0
20013bbc:	00007fc0 	andeq	r7, r0, r0, asr #31
	...
20013bc8:	007fc000 	rsbseq	ip, pc, r0
20013bcc:	000039f0 	strdeq	r3, [r0], -r0
	...
20013bd8:	01ff0000 	mvnseq	r0, r0
20013bdc:	00003a38 	andeq	r3, r0, r8, lsr sl
	...
20013be8:	0ffc0000 	svceq	0x00fc0000
20013bec:	00003e9f 	muleq	r0, pc, lr	; <UNPREDICTABLE>
	...
20013bf8:	fff00000 			; <UNDEFINED> instruction: 0xfff00000	; IMB
20013bfc:	00003e7f 	andeq	r3, r0, pc, ror lr
	...
20013c08:	fbe00000 	blx	1f813c12 <startup-0x7ec3ee>
20013c0c:	00003e7f 	andeq	r3, r0, pc, ror lr
	...
20013c18:	83800000 	orrhi	r0, r0, #0
20013c1c:	00001eff 	strdeq	r1, [r0], -pc	; <UNPREDICTABLE>
	...
20013c28:	fe000000 	cdp2	0, 0, cr0, cr0, cr0, {0}
20013c2c:	00000fff 	strdeq	r0, [r0], -pc	; <UNPREDICTABLE>
	...
20013c38:	f8000000 			; <UNDEFINED> instruction: 0xf8000000
20013c3c:	000007ff 	strdeq	r0, [r0], -pc	; <UNPREDICTABLE>
	...
20013c48:	e0000000 	and	r0, r0, r0
20013c4c:	000003ff 	strdeq	r0, [r0], -pc	; <UNPREDICTABLE>
	...

20013c74 <game_over_witch5_black_bits>:
20013c74:	f0010f00 			; <UNDEFINED> instruction: 0xf0010f00
20013c78:	00000003 	andeq	r0, r0, r3
20013c7c:	0000001c 	andeq	r0, r0, ip, lsl r0
20013c80:	00000000 	andeq	r0, r0, r0
20013c84:	0ffe0100 	svceq	0x00fe0100
20013c88:	00000000 	andeq	r0, r0, r0
20013c8c:	0000003c 	andeq	r0, r0, ip, lsr r0
20013c90:	00000000 	andeq	r0, r0, r0
20013c94:	00000080 	andeq	r0, r0, r0, lsl #1
20013c98:	00000000 	andeq	r0, r0, r0
20013c9c:	00000038 	andeq	r0, r0, r8, lsr r0
20013ca0:	00000000 	andeq	r0, r0, r0
20013ca4:	00000080 	andeq	r0, r0, r0, lsl #1
20013ca8:	00000000 	andeq	r0, r0, r0
20013cac:	00000070 	andeq	r0, r0, r0, ror r0
20013cb0:	00000000 	andeq	r0, r0, r0
20013cb4:	00000100 	andeq	r0, r0, r0, lsl #2
20013cb8:	00000000 	andeq	r0, r0, r0
20013cbc:	000001e0 	andeq	r0, r0, r0, ror #3
20013cc0:	00000000 	andeq	r0, r0, r0
20013cc4:	00000100 	andeq	r0, r0, r0, lsl #2
20013cc8:	00000000 	andeq	r0, r0, r0
20013ccc:	000003c0 	andeq	r0, r0, r0, asr #7
20013cd0:	00000000 	andeq	r0, r0, r0
20013cd4:	00000200 	andeq	r0, r0, r0, lsl #4
20013cd8:	00000000 	andeq	r0, r0, r0
20013cdc:	00000780 	andeq	r0, r0, r0, lsl #15
20013ce0:	00000000 	andeq	r0, r0, r0
20013ce4:	00000200 	andeq	r0, r0, r0, lsl #4
20013ce8:	00000000 	andeq	r0, r0, r0
20013cec:	00000f80 	andeq	r0, r0, r0, lsl #31
20013cf0:	00000000 	andeq	r0, r0, r0
20013cf4:	00003c00 	andeq	r3, r0, r0, lsl #24
20013cf8:	00000000 	andeq	r0, r0, r0
20013cfc:	00001f00 	andeq	r1, r0, r0, lsl #30
20013d00:	00000000 	andeq	r0, r0, r0
20013d04:	000ff000 	andeq	pc, pc, r0
20013d08:	00000000 	andeq	r0, r0, r0
20013d0c:	00001f00 	andeq	r1, r0, r0, lsl #30
20013d10:	00000000 	andeq	r0, r0, r0
20013d14:	007f8000 	rsbseq	r8, pc, r0
20013d18:	0000007c 	andeq	r0, r0, ip, ror r0
20013d1c:	00003f00 	andeq	r3, r0, r0, lsl #30
20013d20:	00000000 	andeq	r0, r0, r0
20013d24:	fffe0000 			; <UNDEFINED> instruction: 0xfffe0000
20013d28:	0000007f 	andeq	r0, r0, pc, ror r0
20013d2c:	00007f00 	andeq	r7, r0, r0, lsl #30
20013d30:	00000000 	andeq	r0, r0, r0
20013d34:	fff00000 			; <UNDEFINED> instruction: 0xfff00000	; IMB
20013d38:	0000007f 	andeq	r0, r0, pc, ror r0
20013d3c:	0000ff00 	andeq	pc, r0, r0, lsl #30
20013d40:	00000000 	andeq	r0, r0, r0
20013d44:	ffc00000 			; <UNDEFINED> instruction: 0xffc00000
20013d48:	0000007f 	andeq	r0, r0, pc, ror r0
20013d4c:	0001fe00 	andeq	pc, r1, r0, lsl #28
20013d50:	00000000 	andeq	r0, r0, r0
20013d54:	fc000000 	stc2	0, cr0, [r0], {-0}
20013d58:	0000007f 	andeq	r0, r0, pc, ror r0
20013d5c:	0001fe00 	andeq	pc, r1, r0, lsl #28
	...
20013d68:	00000030 	andeq	r0, r0, r0, lsr r0
20013d6c:	0003fc00 	andeq	pc, r3, r0, lsl #24
	...
20013d78:	00000020 	andeq	r0, r0, r0, lsr #32
20013d7c:	0007fc00 	andeq	pc, r7, r0, lsl #24
	...
20013d88:	00000010 	andeq	r0, r0, r0, lsl r0
20013d8c:	000ffc00 	andeq	pc, pc, r0, lsl #24
	...
20013d98:	0fffff90 	svceq	0x00ffff90
20013d9c:	000ff800 	andeq	pc, pc, r0, lsl #16
	...
20013da8:	fffffffe 			; <UNDEFINED> instruction: 0xfffffffe
20013dac:	001ff803 	andseq	pc, pc, r3, lsl #16
20013db0:	00000000 	andeq	r0, r0, r0
20013db4:	e0000000 	and	r0, r0, r0
20013db8:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
20013dbc:	001ffbff 			; <UNDEFINED> instruction: 0x001ffbff
20013dc0:	00000000 	andeq	r0, r0, r0
20013dc4:	fffe0000 			; <UNDEFINED> instruction: 0xfffe0000
20013dc8:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
20013dcc:	003fffff 	ldrshteq	pc, [pc], -pc	; <UNPREDICTABLE>
20013dd0:	00000000 	andeq	r0, r0, r0
20013dd4:	ffffe000 			; <UNDEFINED> instruction: 0xffffe000
20013dd8:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
20013ddc:	003fffff 	ldrshteq	pc, [pc], -pc	; <UNPREDICTABLE>
20013de0:	00000000 	andeq	r0, r0, r0
20013de4:	fffff000 			; <UNDEFINED> instruction: 0xfffff000
20013de8:	001fffff 			; <UNDEFINED> instruction: 0x001fffff
20013dec:	005fffc0 	subseq	pc, pc, r0, asr #31
20013df0:	00000000 	andeq	r0, r0, r0
20013df4:	fffff800 	vcmla.f32	d31, d15, d0[0], #270
20013df8:	00083fff 	strdeq	r3, [r8], -pc	; <UNPREDICTABLE>
20013dfc:	007ffc20 	rsbseq	pc, pc, r0, lsr #24
20013e00:	00000000 	andeq	r0, r0, r0
20013e04:	fffff000 			; <UNDEFINED> instruction: 0xfffff000
20013e08:	001007ff 			; <UNDEFINED> instruction: 0x001007ff
20013e0c:	01fff010 	mvnseq	pc, r0, lsl r0	; <UNPREDICTABLE>
20013e10:	00000000 	andeq	r0, r0, r0
20013e14:	fffff000 			; <UNDEFINED> instruction: 0xfffff000
20013e18:	0060007f 	rsbeq	r0, r0, pc, ror r0
20013e1c:	07ffc010 			; <UNDEFINED> instruction: 0x07ffc010
20013e20:	00000000 	andeq	r0, r0, r0
20013e24:	fff80000 			; <UNDEFINED> instruction: 0xfff80000
20013e28:	2183801f 	orrcs	r8, r3, pc, lsl r0
20013e2c:	0fff81c9 	svceq	0x00ff81c9
20013e30:	00000000 	andeq	r0, r0, r0
20013e34:	ffe00000 			; <UNDEFINED> instruction: 0xffe00000
20013e38:	231d600f 	tstcs	sp, #15
20013e3c:	3ffe0139 	svccc	0x00fe0139
20013e40:	00000000 	andeq	r0, r0, r0
20013e44:	f0000000 			; <UNDEFINED> instruction: 0xf0000000
20013e48:	46611f07 	strbtmi	r1, [r1], -r7, lsl #30
20013e4c:	fffc011d 			; <UNDEFINED> instruction: 0xfffc011d
20013e50:	00000000 	andeq	r0, r0, r0
20013e54:	c0000000 	andgt	r0, r0, r0
20013e58:	4ec08601 	cdpmi	6, 12, cr8, cr0, cr1, {0}
20013e5c:	fff8017c 			; <UNDEFINED> instruction: 0xfff8017c
20013e60:	00000001 	andeq	r0, r0, r1
20013e64:	80000000 	andhi	r0, r0, r0
20013e68:	0d4c8880 	stcleq	8, cr8, [ip, #-512]	; 0xfffffe00
20013e6c:	fff0019c 			; <UNDEFINED> instruction: 0xfff0019c
20013e70:	00000007 	andeq	r0, r0, r7
20013e74:	80000000 	andhi	r0, r0, r0
20013e78:	024cb080 	subeq	fp, ip, #128	; 0x80
20013e7c:	fff000a8 			; <UNDEFINED> instruction: 0xfff000a8
20013e80:	0000000f 	andeq	r0, r0, pc
20013e84:	80000000 	andhi	r0, r0, r0
20013e88:	0240c100 	subeq	ip, r0, #0, 2
20013e8c:	fff040a8 			; <UNDEFINED> instruction: 0xfff040a8
20013e90:	0000003f 	andeq	r0, r0, pc, lsr r0
20013e94:	80000000 	andhi	r0, r0, r0
20013e98:	02330100 	eorseq	r0, r3, #0, 2
20013e9c:	ffe02048 			; <UNDEFINED> instruction: 0xffe02048
20013ea0:	0000007f 	andeq	r0, r0, pc, ror r0
20013ea4:	00000000 	andeq	r0, r0, r0
20013ea8:	023c0101 	eorseq	r0, ip, #1073741824	; 0x40000000
20013eac:	ffe01078 			; <UNDEFINED> instruction: 0xffe01078
20013eb0:	000001ff 	strdeq	r0, [r0], -pc	; <UNPREDICTABLE>
20013eb4:	7fc00000 	svcvc	0x00c00000
20013eb8:	03c00201 	biceq	r0, r0, #268435456	; 0x10000000
20013ebc:	ffe01030 			; <UNDEFINED> instruction: 0xffe01030
20013ec0:	000003ff 	strdeq	r0, [r0], -pc	; <UNPREDICTABLE>
20013ec4:	803c0000 	eorshi	r0, ip, r0
20013ec8:	00000201 	andeq	r0, r0, r1, lsl #4
20013ecc:	ff200810 			; <UNDEFINED> instruction: 0xff200810
20013ed0:	000007ff 	strdeq	r0, [r0], -pc	; <UNPREDICTABLE>
20013ed4:	80030000 	andhi	r0, r3, r0
20013ed8:	02000401 	andeq	r0, r0, #16777216	; 0x1000000
20013edc:	f8200810 			; <UNDEFINED> instruction: 0xf8200810
20013ee0:	000007ff 	strdeq	r0, [r0], -pc	; <UNPREDICTABLE>
20013ee4:	80008000 	andhi	r8, r0, r0
20013ee8:	01000401 	tsteq	r0, r1, lsl #8
20013eec:	ffd00810 			; <UNDEFINED> instruction: 0xffd00810
20013ef0:	0000ffff 	strdeq	pc, [r0], -pc	; <UNPREDICTABLE>
20013ef4:	80006000 	andhi	r6, r0, r0
20013ef8:	00800c03 	addeq	r0, r0, r3, lsl #24
20013efc:	fff00c20 			; <UNDEFINED> instruction: 0xfff00c20
20013f00:	0003ffff 	strdeq	pc, [r3], -pc	; <UNPREDICTABLE>
20013f04:	80001000 	andhi	r1, r0, r0
20013f08:	00880843 	addeq	r0, r8, r3, asr #16
20013f0c:	fff20c20 			; <UNDEFINED> instruction: 0xfff20c20
20013f10:	000fffff 	strdeq	pc, [pc], -pc	; <UNPREDICTABLE>
20013f14:	80000800 	andhi	r0, r0, r0, lsl #16
20013f18:	00081887 	andeq	r1, r8, r7, lsl #17
20013f1c:	fff10620 			; <UNDEFINED> instruction: 0xfff10620
20013f20:	003fffff 	ldrshteq	pc, [pc], -pc	; <UNPREDICTABLE>
20013f24:	80000800 	andhi	r0, r0, r0, lsl #16
20013f28:	10082907 	andne	r2, r8, r7, lsl #18
20013f2c:	fff90620 			; <UNDEFINED> instruction: 0xfff90620
20013f30:	00ffffff 	ldrshteq	pc, [pc], #255	; <UNPREDICTABLE>
20013f34:	00000400 	andeq	r0, r0, r0, lsl #8
20013f38:	0810d10f 	ldmdaeq	r0, {r0, r1, r2, r3, r8, ip, lr, pc}
20013f3c:	fffc8520 			; <UNDEFINED> instruction: 0xfffc8520
20013f40:	03ffffff 	mvnseq	pc, #1020	; 0x3fc
20013f44:	00000400 	andeq	r0, r0, r0, lsl #8
20013f48:	0811110f 	ldmdaeq	r1, {r0, r1, r2, r3, r8, ip}
20013f4c:	fffc84d0 			; <UNDEFINED> instruction: 0xfffc84d0
20013f50:	0fffffff 	svceq	0x00ffffff
20013f54:	00000200 	andeq	r0, r0, r0, lsl #4
20013f58:	08e6201f 	stmiaeq	r6!, {r0, r1, r2, r3, r4, sp}^
20013f5c:	ff3e4230 			; <UNDEFINED> instruction: 0xff3e4230
20013f60:	3fffffff 	svccc	0x00ffffff
20013f64:	00000200 	andeq	r0, r0, r0, lsl #4
20013f68:	0378201e 	cmneq	r8, #30
20013f6c:	fe1f0208 	cdp2	2, 1, cr0, cr15, cr8, {0}
20013f70:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
20013f74:	00000100 	andeq	r0, r0, r0, lsl #2
20013f78:	03a0c03e 	moveq	ip, #62	; 0x3e
20013f7c:	fe038188 	cdp2	1, 0, cr8, cr3, cr8, {4}
20013f80:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
20013f84:	00000080 	andeq	r0, r0, r0, lsl #1
20013f88:	0223003c 	eoreq	r0, r3, #60	; 0x3c
20013f8c:	fe01c074 	mcr2	0, 0, ip, cr1, cr4, {3}
20013f90:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
20013f94:	00000080 	andeq	r0, r0, r0, lsl #1
20013f98:	036c007c 	cmneq	ip, #124	; 0x7c
20013f9c:	fc00c00e 	stc2	0, cr12, [r0], {14}
20013fa0:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
20013fa4:	00000040 	andeq	r0, r0, r0, asr #32
20013fa8:	03f0107c 	mvnseq	r1, #124	; 0x7c
20013fac:	fc006002 	stc2	0, cr6, [r0], {2}
20013fb0:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
20013fb4:	00000040 	andeq	r0, r0, r0, asr #32
20013fb8:	018060f8 	strdeq	r6, [r0, r8]
20013fbc:	f8001101 			; <UNDEFINED> instruction: 0xf8001101
20013fc0:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
20013fc4:	00000020 	andeq	r0, r0, r0, lsr #32
20013fc8:	810081f0 	strdhi	r8, [r0, -r0]
20013fcc:	f0000cc0 			; <UNDEFINED> instruction: 0xf0000cc0
20013fd0:	fffffdff 			; <UNDEFINED> instruction: 0xfffffdff
20013fd4:	00000010 	andeq	r0, r0, r0, lsl r0
20013fd8:	6f0107f0 	svcvs	0x000107f0
20013fdc:	e0000f30 	and	r0, r0, r0, lsr pc
20013fe0:	fffff8ff 			; <UNDEFINED> instruction: 0xfffff8ff
20013fe4:	00000008 	andeq	r0, r0, r8
20013fe8:	18000fe0 	stmdane	r0, {r5, r6, r7, r8, r9, sl, fp}
20013fec:	c000078c 	andgt	r0, r0, ip, lsl #15
20013ff0:	fffff0ff 			; <UNDEFINED> instruction: 0xfffff0ff
20013ff4:	00000004 	andeq	r0, r0, r4
20013ff8:	08003fc0 	stmdaeq	r0, {r6, r7, r8, r9, sl, fp, ip, sp}
20013ffc:	c00003e0 	andgt	r0, r0, r0, ror #7
20014000:	ffffe0ff 			; <UNDEFINED> instruction: 0xffffe0ff
20014004:	00000004 	andeq	r0, r0, r4
20014008:	3000ff80 	andcc	pc, r0, r0, lsl #31
2001400c:	800001f8 	strdhi	r0, [r0], -r8
20014010:	ffffc0ff 			; <UNDEFINED> instruction: 0xffffc0ff
20014014:	00000002 	andeq	r0, r0, r2
20014018:	2001ff00 	andcs	pc, r1, r0, lsl #30
2001401c:	000000fc 	strdeq	r0, [r0], -ip
20014020:	ffff80ff 			; <UNDEFINED> instruction: 0xffff80ff
20014024:	00000001 	andeq	r0, r0, r1
20014028:	3007fc00 	andcc	pc, r7, r0, lsl #24
2001402c:	0000007e 	andeq	r0, r0, lr, ror r0
20014030:	ffff00fe 			; <UNDEFINED> instruction: 0xffff00fe
20014034:	ff000000 			; <UNDEFINED> instruction: 0xff000000
20014038:	181ff801 	ldmdane	pc, {r0, fp, ip, sp, lr, pc}	; <UNPREDICTABLE>
2001403c:	0000001e 	andeq	r0, r0, lr, lsl r0
20014040:	fffe00f8 			; <UNDEFINED> instruction: 0xfffe00f8
20014044:	ff800000 			; <UNDEFINED> instruction: 0xff800000
20014048:	003fc03f 	eorseq	ip, pc, pc, lsr r0	; <UNPREDICTABLE>
2001404c:	00000007 	andeq	r0, r0, r7
20014050:	fffc0060 			; <UNDEFINED> instruction: 0xfffc0060
20014054:	ffc00000 			; <UNDEFINED> instruction: 0xffc00000
20014058:	807f1fff 	ldrshthi	r1, [pc], #-255
2001405c:	00000003 	andeq	r0, r0, r3
20014060:	fff80000 			; <UNDEFINED> instruction: 0xfff80000
20014064:	ffe00000 			; <UNDEFINED> instruction: 0xffe00000
20014068:	7ffc3fff 	svcvc	0x00fc3fff
2001406c:	00000000 	andeq	r0, r0, r0
20014070:	fff00000 			; <UNDEFINED> instruction: 0xfff00000	; IMB

20014074 <game_over_witch5_gray_bits>:
20014074:	0000f000 	andeq	pc, r0, r0
20014078:	fffffffc 			; <UNDEFINED> instruction: 0xfffffffc
2001407c:	00000003 	andeq	r0, r0, r3
20014080:	00000000 	andeq	r0, r0, r0
20014084:	f001fe00 			; <UNDEFINED> instruction: 0xf001fe00
20014088:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
2001408c:	00000003 	andeq	r0, r0, r3
20014090:	00000000 	andeq	r0, r0, r0
20014094:	ffffff00 			; <UNDEFINED> instruction: 0xffffff00
20014098:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
2001409c:	00000007 	andeq	r0, r0, r7
200140a0:	00000000 	andeq	r0, r0, r0
200140a4:	ffffff00 			; <UNDEFINED> instruction: 0xffffff00
200140a8:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
200140ac:	0000000f 	andeq	r0, r0, pc
200140b0:	00000000 	andeq	r0, r0, r0
200140b4:	fffffe00 			; <UNDEFINED> instruction: 0xfffffe00
200140b8:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
200140bc:	0000001f 	andeq	r0, r0, pc, lsl r0
200140c0:	00000000 	andeq	r0, r0, r0
200140c4:	fffffe00 			; <UNDEFINED> instruction: 0xfffffe00
200140c8:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
200140cc:	0000003f 	andeq	r0, r0, pc, lsr r0
200140d0:	00000000 	andeq	r0, r0, r0
200140d4:	fffffc00 			; <UNDEFINED> instruction: 0xfffffc00
200140d8:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
200140dc:	0000007f 	andeq	r0, r0, pc, ror r0
200140e0:	00000000 	andeq	r0, r0, r0
200140e4:	fffffc00 			; <UNDEFINED> instruction: 0xfffffc00
200140e8:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
200140ec:	0000007f 	andeq	r0, r0, pc, ror r0
200140f0:	00000000 	andeq	r0, r0, r0
200140f4:	ffffc000 			; <UNDEFINED> instruction: 0xffffc000
200140f8:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
200140fc:	000000ff 	strdeq	r0, [r0], -pc	; <UNPREDICTABLE>
20014100:	00000000 	andeq	r0, r0, r0
20014104:	fff00000 			; <UNDEFINED> instruction: 0xfff00000	; IMB
20014108:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
2001410c:	000000ff 	strdeq	r0, [r0], -pc	; <UNPREDICTABLE>
20014110:	00000000 	andeq	r0, r0, r0
20014114:	ff800000 			; <UNDEFINED> instruction: 0xff800000
20014118:	ffffff83 			; <UNDEFINED> instruction: 0xffffff83
2001411c:	000000ff 	strdeq	r0, [r0], -pc	; <UNPREDICTABLE>
	...
20014128:	ffffff80 			; <UNDEFINED> instruction: 0xffffff80
2001412c:	000000ff 	strdeq	r0, [r0], -pc	; <UNPREDICTABLE>
	...
20014138:	ffffff80 			; <UNDEFINED> instruction: 0xffffff80
2001413c:	000000ff 	strdeq	r0, [r0], -pc	; <UNPREDICTABLE>
	...
20014148:	ffffff80 			; <UNDEFINED> instruction: 0xffffff80
2001414c:	000001ff 	strdeq	r0, [r0], -pc	; <UNPREDICTABLE>
	...
20014158:	ffffff80 			; <UNDEFINED> instruction: 0xffffff80
2001415c:	000001ff 	strdeq	r0, [r0], -pc	; <UNPREDICTABLE>
	...
20014168:	ffffffc0 			; <UNDEFINED> instruction: 0xffffffc0
2001416c:	000003ff 	strdeq	r0, [r0], -pc	; <UNPREDICTABLE>
	...
20014178:	ffffffc0 			; <UNDEFINED> instruction: 0xffffffc0
2001417c:	000003ff 	strdeq	r0, [r0], -pc	; <UNPREDICTABLE>
	...
20014188:	ffffffe0 			; <UNDEFINED> instruction: 0xffffffe0
2001418c:	000003ff 	strdeq	r0, [r0], -pc	; <UNPREDICTABLE>
	...
20014198:	f0000060 			; <UNDEFINED> instruction: 0xf0000060
2001419c:	000007ff 	strdeq	r0, [r0], -pc	; <UNPREDICTABLE>
	...
200141ac:	000007fc 	strdeq	r0, [r0], -ip
	...
200141bc:	00000400 	andeq	r0, r0, r0, lsl #8
	...
20014238:	00020000 	andeq	r0, r2, r0
	...
20014248:	001e0000 	andseq	r0, lr, r0
	...
20014258:	00270000 	eoreq	r0, r7, r0
	...
20014268:	00230000 	eoreq	r0, r3, r0
2001426c:	00000020 	andeq	r0, r0, r0, lsr #32
	...
20014278:	00330000 	eorseq	r0, r3, r0
2001427c:	00000010 	andeq	r0, r0, r0, lsl r0
	...
20014288:	003f0000 	eorseq	r0, pc, r0
2001428c:	00000050 	andeq	r0, r0, r0, asr r0
	...
20014298:	000c0000 	andeq	r0, ip, r0
2001429c:	00000030 	andeq	r0, r0, r0, lsr r0
	...
200142c4:	7fc00000 	svcvc	0x00c00000
	...
200142d4:	7ffc0000 	svcvc	0x00fc0000
	...
200142e4:	7fff0000 	svcvc	0x00ff0000
	...
200142f4:	7fff8000 	svcvc	0x00ff8000
	...
20014304:	7fffe000 	svcvc	0x00ffe000
	...
20014314:	7ffff000 	svcvc	0x00fff000
	...
20014324:	7ffff000 	svcvc	0x00fff000
20014328:	00001000 	andeq	r1, r0, r0
	...
20014334:	fffff800 	vcmla.f32	d31, d15, d0[0], #270
20014338:	00002000 	andeq	r2, r0, r0
2001433c:	00000200 	andeq	r0, r0, r0, lsl #4
20014340:	00000000 	andeq	r0, r0, r0
20014344:	fffff800 	vcmla.f32	d31, d15, d0[0], #270
20014348:	0000e000 	andeq	lr, r0, r0
2001434c:	00000300 	andeq	r0, r0, r0, lsl #6
20014350:	00000000 	andeq	r0, r0, r0
20014354:	fffffc00 			; <UNDEFINED> instruction: 0xfffffc00
20014358:	0001c000 	andeq	ip, r1, r0
2001435c:	00c001c0 	sbceq	r0, r0, r0, asr #3
20014360:	00000000 	andeq	r0, r0, r0
20014364:	fffffc00 			; <UNDEFINED> instruction: 0xfffffc00
20014368:	0007c001 	andeq	ip, r7, r1
2001436c:	01e001f0 	strdeq	r0, [r0, #16]!
20014370:	00000000 	andeq	r0, r0, r0
20014374:	fffffe00 			; <UNDEFINED> instruction: 0xfffffe00
20014378:	001f0001 	andseq	r0, pc, r1
2001437c:	01fc0070 	mvnseq	r0, r0, ror r0
20014380:	00000000 	andeq	r0, r0, r0
20014384:	ffffff00 			; <UNDEFINED> instruction: 0xffffff00
20014388:	001c0003 	andseq	r0, ip, r3
2001438c:	01fe0008 	mvnseq	r0, r8
20014390:	00000000 	andeq	r0, r0, r0
20014394:	ffffff00 			; <UNDEFINED> instruction: 0xffffff00
20014398:	00100003 	andseq	r0, r0, r3
2001439c:	03ff0000 	mvnseq	r0, #0
200143a0:	00000000 	andeq	r0, r0, r0
200143a4:	ffffff80 			; <UNDEFINED> instruction: 0xffffff80
200143a8:	00000003 	andeq	r0, r0, r3
200143ac:	03ff8000 	mvnseq	r8, #0
200143b0:	00000000 	andeq	r0, r0, r0
200143b4:	ffffff80 			; <UNDEFINED> instruction: 0xffffff80
200143b8:	00000007 	andeq	r0, r0, r7
200143bc:	07ffe000 	ldrbeq	lr, [pc, r0]!
200143c0:	00000000 	andeq	r0, r0, r0
200143c4:	ffffffc0 			; <UNDEFINED> instruction: 0xffffffc0
200143c8:	0000000f 	andeq	r0, r0, pc
200143cc:	0ffff000 	svceq	0x00fff000
200143d0:	00000200 	andeq	r0, r0, r0, lsl #4
200143d4:	ffffffe0 			; <UNDEFINED> instruction: 0xffffffe0
200143d8:	0000000f 	andeq	r0, r0, pc
200143dc:	1ffff000 	svcne	0x00fff000
200143e0:	00000700 	andeq	r0, r0, r0, lsl #14
200143e4:	fffffff0 			; <UNDEFINED> instruction: 0xfffffff0
200143e8:	0000001f 	andeq	r0, r0, pc, lsl r0
200143ec:	3ffff800 	svccc	0x00fff800
200143f0:	00000f00 	andeq	r0, r0, r0, lsl #30
200143f4:	fffffff8 			; <UNDEFINED> instruction: 0xfffffff8
200143f8:	0000003f 	andeq	r0, r0, pc, lsr r0
200143fc:	3ffffc00 	svccc	0x00fffc00
20014400:	00001f00 	andeq	r1, r0, r0, lsl #30
20014404:	fffffff8 			; <UNDEFINED> instruction: 0xfffffff8
20014408:	0000007f 	andeq	r0, r0, pc, ror r0
2001440c:	7ffffe00 	svcvc	0x00fffe00
20014410:	00003f00 	andeq	r3, r0, r0, lsl #30
20014414:	fffffffc 			; <UNDEFINED> instruction: 0xfffffffc
20014418:	000000ff 	strdeq	r0, [r0], -pc	; <UNPREDICTABLE>
2001441c:	ffffff00 			; <UNDEFINED> instruction: 0xffffff00
20014420:	00007f00 	andeq	r7, r0, r0, lsl #30
20014424:	fffffffe 			; <UNDEFINED> instruction: 0xfffffffe
20014428:	000003ff 	strdeq	r0, [r0], -pc	; <UNPREDICTABLE>
2001442c:	ffffff80 			; <UNDEFINED> instruction: 0xffffff80
20014430:	0000ff01 	andeq	pc, r0, r1, lsl #30
20014434:	00ffffff 	ldrshteq	pc, [pc], #255	; <UNPREDICTABLE>
20014438:	000007fe 	strdeq	r0, [r0], -lr
2001443c:	ffffffe0 			; <UNDEFINED> instruction: 0xffffffe0
20014440:	0001ff07 	andeq	pc, r1, r7, lsl #30
20014444:	007fffff 	ldrshteq	pc, [pc], #-255	; <UNPREDICTABLE>
20014448:	00003fc0 	andeq	r3, r0, r0, asr #31
2001444c:	fffffff8 			; <UNDEFINED> instruction: 0xfffffff8
20014450:	0003ff9f 	muleq	r3, pc, pc	; <UNPREDICTABLE>
20014454:	003fffff 	ldrshteq	pc, [pc], -pc	; <UNPREDICTABLE>
20014458:	0000e000 	andeq	lr, r0, r0
2001445c:	fffffffc 			; <UNDEFINED> instruction: 0xfffffffc
20014460:	0007ffff 	strdeq	pc, [r7], -pc	; <UNPREDICTABLE>
20014464:	001fffff 			; <UNDEFINED> instruction: 0x001fffff
20014468:	8003c000 	andhi	ip, r3, r0
2001446c:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
20014470:	000fffff 	strdeq	pc, [pc], -pc	; <UNPREDICTABLE>

20014474 <game_over_witch5_light_bits>:
	...
200145e8:	ffe00000 			; <UNDEFINED> instruction: 0xffe00000
200145ec:	0000003f 	andeq	r0, r0, pc, lsr r0
	...
200145f8:	fff7c000 			; <UNDEFINED> instruction: 0xfff7c000
200145fc:	000003df 	ldrdeq	r0, [r0], -pc	; <UNPREDICTABLE>
	...
20014608:	ffeff800 	vcmla.f32	d31, d15, d0[0], #170
2001460c:	00000fef 	andeq	r0, r0, pc, ror #31
	...
20014618:	ff9fff80 			; <UNDEFINED> instruction: 0xff9fff80
2001461c:	00003fef 	andeq	r3, r0, pc, ror #31
	...
20014628:	de7c7fe0 	cdple	15, 7, cr7, cr12, cr0, {7}
2001462c:	00007e36 	andeq	r7, r0, r6, lsr lr
	...
20014638:	dce01ff0 	stclle	15, cr1, [r0], #960	; 0x3c0
2001463c:	0001fe06 	andeq	pc, r1, r6, lsl #28
	...
20014648:	b98000f8 	stmiblt	r0, {r3, r4, r5, r6, r7}
2001464c:	0003fe02 	andeq	pc, r3, r2, lsl #28
	...
20014658:	b10001fe 	strdlt	r0, [r0, -lr]
2001465c:	0007fe03 	andeq	pc, r7, r3, lsl #28
	...
20014668:	f200077f 	vaba.s8	q0, q0, <illegal reg q15.5>
2001466c:	000ffe03 	andeq	pc, pc, r3, lsl #28
	...
20014678:	fc000f7f 	stc2	15, cr0, [r0], {127}	; 0x7f
2001467c:	000fff07 	andeq	pc, pc, r7, lsl #30
	...
20014688:	fc003eff 	stc2	14, cr3, [r0], {255}	; 0xff
2001468c:	000fbf07 	andeq	fp, pc, r7, lsl #30
	...
20014698:	fc00feff 	stc2	14, cr15, [r0], {255}	; 0xff
2001469c:	001fdf87 	andseq	sp, pc, r7, lsl #31
	...
200146a8:	fc03fefe 	stc2	14, cr15, [r3], {254}	; 0xfe
200146ac:	001fef87 	andseq	lr, pc, r7, lsl #31
	...
200146b8:	fc3ffdfe 	ldc2	13, cr15, [pc], #-1016	; 200142c8 <game_over_witch5_gray_bits+0x254>
200146bc:	001fefcf 	andseq	lr, pc, pc, asr #31
	...
200146c8:	fffffdfe 			; <UNDEFINED> instruction: 0xfffffdfe
200146cc:	001ff7ef 	andseq	pc, pc, pc, ror #15
	...
200146d8:	fdfffbfe 	ldc2l	11, cr15, [pc, #1016]!	; 20014ad8 <game_over_witch6_black_bits+0x264>	; <UNPREDICTABLE>
200146dc:	001ff7ef 	andseq	pc, pc, pc, ror #15
	...
200146e8:	fefffbfe 	mrc2	11, 7, pc, cr15, cr14, {7}	; <UNPREDICTABLE>
200146ec:	000ff7ef 	andeq	pc, pc, pc, ror #15
	...
200146f8:	ff7ff3fc 			; <UNDEFINED> instruction: 0xff7ff3fc
200146fc:	000ff3df 	ldrdeq	pc, [pc], -pc	; <UNPREDICTABLE>
	...
20014708:	ff77f7bc 			; <UNDEFINED> instruction: 0xff77f7bc
2001470c:	000df3df 	ldrdeq	pc, [sp], -pc	; <UNPREDICTABLE>
	...
20014718:	fff7e778 			; <UNDEFINED> instruction: 0xfff7e778
2001471c:	000ef9df 	ldrdeq	pc, [lr], -pc	; <UNPREDICTABLE>
	...
20014728:	eff7c6f8 	svc	0x00f7c6f8
2001472c:	0006f9df 	ldrdeq	pc, [r6], -pc	; <UNPREDICTABLE>
	...
20014738:	f7ef0ef0 			; <UNDEFINED> instruction: 0xf7ef0ef0
2001473c:	000378df 	ldrdeq	r7, [r3], -pc	; <UNPREDICTABLE>
	...
20014748:	f7ee0ef0 			; <UNDEFINED> instruction: 0xf7ee0ef0
2001474c:	0003782f 	andeq	r7, r3, pc, lsr #16
	...
20014758:	f7181fe0 			; <UNDEFINED> instruction: 0xf7181fe0
2001475c:	0001bc0f 	andeq	fp, r1, pc, lsl #24
	...
20014768:	fc001fe0 	stc2	15, cr1, [r0], {224}	; 0xe0
2001476c:	0000fc07 	andeq	pc, r0, r7, lsl #24
	...
20014778:	fc003fc0 	stc2	15, cr3, [r0], {192}	; 0xc0
2001477c:	00007e07 	andeq	r7, r0, r7, lsl #28
	...
20014788:	fc00ffc0 	stc2	15, cr15, [r0], {192}	; 0xc0
2001478c:	00003f83 	andeq	r3, r0, r3, lsl #31
	...
20014798:	fc03ff80 	stc2	15, cr15, [r3], {128}	; 0x80
2001479c:	00003ff1 	strdeq	r3, [r0], -r1
	...
200147a8:	fc0fef80 	stc2	15, cr14, [pc], {128}	; 0x80
200147ac:	00001ffd 	strdeq	r1, [r0], -sp
	...
200147b8:	fe7f9f00 	cdp2	15, 7, cr9, cr15, cr0, {0}
200147bc:	00000efe 	strdeq	r0, [r0], -lr
	...
200147c8:	7eff7e00 	cdpvc	14, 15, cr7, cr15, cr0, {0}
200147cc:	0000033f 	andeq	r0, r0, pc, lsr r3
	...
200147d8:	90fef800 	rscsls	pc, lr, r0, lsl #16
200147dc:	000000cf 	andeq	r0, r0, pc, asr #1
	...
200147e8:	e7fff000 	ldrb	pc, [pc, r0]!	; <UNPREDICTABLE>
200147ec:	00000073 	andeq	r0, r0, r3, ror r0
	...
200147f8:	f7ffc000 			; <UNDEFINED> instruction: 0xf7ffc000
200147fc:	0000001f 	andeq	r0, r0, pc, lsl r0
	...
20014808:	cfff0000 	svcgt	0x00ff0000
2001480c:	00000007 	andeq	r0, r0, r7
	...
20014818:	dffe0000 	svcle	0x00fe0000
2001481c:	00000003 	andeq	r0, r0, r3
	...
20014828:	cff80000 	svcgt	0x00f80000
2001482c:	00000001 	andeq	r0, r0, r1
	...
20014838:	e7e00000 	strb	r0, [r0, r0]!
2001483c:	00000001 	andeq	r0, r0, r1
	...
20014848:	ffc00000 			; <UNDEFINED> instruction: 0xffc00000
	...
20014858:	7f800000 	svcvc	0x00800000
	...

20014874 <game_over_witch6_black_bits>:
20014874:	01c00000 	biceq	r0, r0, r0
20014878:	00000000 	andeq	r0, r0, r0
2001487c:	0000001c 	andeq	r0, r0, ip, lsl r0
20014880:	00000000 	andeq	r0, r0, r0
20014884:	00780000 	rsbseq	r0, r8, r0
20014888:	00000000 	andeq	r0, r0, r0
2001488c:	0000003c 	andeq	r0, r0, ip, lsr r0
20014890:	00000000 	andeq	r0, r0, r0
20014894:	000f8000 	andeq	r8, pc, r0
20014898:	00000000 	andeq	r0, r0, r0
2001489c:	0000003c 	andeq	r0, r0, ip, lsr r0
200148a0:	00000000 	andeq	r0, r0, r0
200148a4:	0000f000 	andeq	pc, r0, r0
200148a8:	00000000 	andeq	r0, r0, r0
200148ac:	000000f8 	strdeq	r0, [r0], -r8
200148b0:	00000000 	andeq	r0, r0, r0
200148b4:	00001c00 	andeq	r1, r0, r0, lsl #24
200148b8:	00000000 	andeq	r0, r0, r0
200148bc:	000001f8 	strdeq	r0, [r0], -r8
200148c0:	00000000 	andeq	r0, r0, r0
200148c4:	00000700 	andeq	r0, r0, r0, lsl #14
200148c8:	00000000 	andeq	r0, r0, r0
200148cc:	000007f0 	strdeq	r0, [r0], -r0	; <UNPREDICTABLE>
200148d0:	00000000 	andeq	r0, r0, r0
200148d4:	00000180 	andeq	r0, r0, r0, lsl #3
200148d8:	00000000 	andeq	r0, r0, r0
200148dc:	000007e0 	andeq	r0, r0, r0, ror #15
200148e0:	00000000 	andeq	r0, r0, r0
200148e4:	000000e0 	andeq	r0, r0, r0, ror #1
200148e8:	00000000 	andeq	r0, r0, r0
200148ec:	00000fe0 	andeq	r0, r0, r0, ror #31
200148f0:	00000000 	andeq	r0, r0, r0
200148f4:	00000030 	andeq	r0, r0, r0, lsr r0
200148f8:	00000000 	andeq	r0, r0, r0
200148fc:	00001fe0 	andeq	r1, r0, r0, ror #31
20014900:	00000000 	andeq	r0, r0, r0
20014904:	f8000010 			; <UNDEFINED> instruction: 0xf8000010
20014908:	0000007f 	andeq	r0, r0, pc, ror r0
2001490c:	00003fc0 	andeq	r3, r0, r0, asr #31
20014910:	00000000 	andeq	r0, r0, r0
20014914:	ffffc010 			; <UNDEFINED> instruction: 0xffffc010
20014918:	000000ff 	strdeq	r0, [r0], -pc	; <UNPREDICTABLE>
2001491c:	00007fc0 	andeq	r7, r0, r0, asr #31
20014920:	00000000 	andeq	r0, r0, r0
20014924:	fffff830 			; <UNDEFINED> instruction: 0xfffff830
20014928:	000000ff 	strdeq	r0, [r0], -pc	; <UNPREDICTABLE>
2001492c:	00007fc0 	andeq	r7, r0, r0, asr #31
20014930:	00000000 	andeq	r0, r0, r0
20014934:	ff800fc0 			; <UNDEFINED> instruction: 0xff800fc0
20014938:	000000ff 	strdeq	r0, [r0], -pc	; <UNPREDICTABLE>
2001493c:	0001ffc0 	andeq	pc, r1, r0, asr #31
	...
20014948:	00000040 	andeq	r0, r0, r0, asr #32
2001494c:	0007ff80 	andeq	pc, r7, r0, lsl #31
	...
20014958:	00000040 	andeq	r0, r0, r0, asr #32
2001495c:	000fff80 	andeq	pc, pc, r0, lsl #31
	...
20014968:	00000060 	andeq	r0, r0, r0, rrx
2001496c:	001fff00 	andseq	pc, pc, r0, lsl #30
	...
20014978:	00000030 	andeq	r0, r0, r0, lsr r0
2001497c:	001ffe00 	andseq	pc, pc, r0, lsl #28
	...
20014988:	fffff810 			; <UNDEFINED> instruction: 0xfffff810
2001498c:	001ffc07 	andseq	pc, pc, r7, lsl #24
	...
20014998:	ffffff18 			; <UNDEFINED> instruction: 0xffffff18
2001499c:	003fffff 	ldrshteq	pc, [pc], -pc	; <UNPREDICTABLE>
	...
200149a8:	ffffffcc 			; <UNDEFINED> instruction: 0xffffffcc
200149ac:	003fffff 	ldrshteq	pc, [pc], -pc	; <UNPREDICTABLE>
200149b0:	00000000 	andeq	r0, r0, r0
200149b4:	c0000000 	andgt	r0, r0, r0
200149b8:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
200149bc:	00ffffff 	ldrshteq	pc, [pc], #255	; <UNPREDICTABLE>
200149c0:	00000000 	andeq	r0, r0, r0
200149c4:	ff000000 			; <UNDEFINED> instruction: 0xff000000
200149c8:	0007ffff 	strdeq	pc, [r7], -pc	; <UNPREDICTABLE>
200149cc:	07ffffc0 	ldrbeq	pc, [pc, r0, asr #31]!	; <UNPREDICTABLE>
200149d0:	00000000 	andeq	r0, r0, r0
200149d4:	ffff0000 			; <UNDEFINED> instruction: 0xffff0000
200149d8:	000c07ff 	strdeq	r0, [ip], -pc	; <UNPREDICTABLE>
200149dc:	1ffff1c0 	svcne	0x00fff1c0
200149e0:	00000000 	andeq	r0, r0, r0
200149e4:	ffffc000 			; <UNDEFINED> instruction: 0xffffc000
200149e8:	000800ff 	strdeq	r0, [r8], -pc	; <UNPREDICTABLE>
200149ec:	7fff0060 	svcvc	0x00ff0060
200149f0:	00000000 	andeq	r0, r0, r0
200149f4:	ffffe000 			; <UNDEFINED> instruction: 0xffffe000
200149f8:	0033fe3f 	eorseq	pc, r3, pc, lsr lr	; <UNPREDICTABLE>
200149fc:	fffc0030 			; <UNDEFINED> instruction: 0xfffc0030
20014a00:	00000001 	andeq	r0, r0, r1
20014a04:	fffff800 	vcmla.f32	d31, d15, d0[0], #270
20014a08:	007e031f 	rsbseq	r0, lr, pc, lsl r3
20014a0c:	fff03f10 			; <UNDEFINED> instruction: 0xfff03f10
20014a10:	00000007 	andeq	r0, r0, r7
20014a14:	fffff800 	vcmla.f32	d31, d15, d0[0], #270
20014a18:	00f3c187 	rscseq	ip, r3, r7, lsl #3
20014a1c:	ffc061e8 			; <UNDEFINED> instruction: 0xffc061e8
20014a20:	0000000f 	andeq	r0, r0, pc
20014a24:	fffff000 			; <UNDEFINED> instruction: 0xfffff000
20014a28:	01c46187 	biceq	r6, r4, r7, lsl #3
20014a2c:	ffc087bc 			; <UNDEFINED> instruction: 0xffc087bc
20014a30:	0000003f 	andeq	r0, r0, pc, lsr r0
20014a34:	ffffc000 			; <UNDEFINED> instruction: 0xffffc000
20014a38:	0385b107 	orreq	fp, r5, #-1073741823	; 0xc0000001
20014a3c:	ffc084ee 			; <UNDEFINED> instruction: 0xffc084ee
20014a40:	000000ff 	strdeq	r0, [r0], -pc	; <UNPREDICTABLE>
20014a44:	f8000000 			; <UNDEFINED> instruction: 0xf8000000
20014a48:	00879103 	addeq	r9, r7, r3, lsl #2
20014a4c:	ffc0c5a4 			; <UNDEFINED> instruction: 0xffc0c5a4
20014a50:	000003ff 	strdeq	r0, [r0], -pc	; <UNPREDICTABLE>
20014a54:	80000000 	andhi	r0, r0, r0
20014a58:	00827303 	addeq	r7, r2, r3, lsl #6
20014a5c:	ffc265b2 			; <UNDEFINED> instruction: 0xffc265b2
20014a60:	000007ff 	strdeq	r0, [r0], -pc	; <UNPREDICTABLE>
20014a64:	00000000 	andeq	r0, r0, r0
20014a68:	00c3c202 	sbceq	ip, r3, r2, lsl #4
20014a6c:	ffe63670 			; <UNDEFINED> instruction: 0xffe63670
20014a70:	00000fff 	strdeq	r0, [r0], -pc	; <UNPREDICTABLE>
20014a74:	00000000 	andeq	r0, r0, r0
20014a78:	00700e32 	rsbseq	r0, r0, r2, lsr lr
20014a7c:	ffef1be0 			; <UNDEFINED> instruction: 0xffef1be0
20014a80:	00001fff 	strdeq	r1, [r0], -pc	; <UNPREDICTABLE>
20014a84:	00000000 	andeq	r0, r0, r0
20014a88:	001ff81a 	andseq	pc, pc, sl, lsl r8	; <UNPREDICTABLE>
20014a8c:	ffea8fe0 			; <UNDEFINED> instruction: 0xffea8fe0
20014a90:	00001fff 	strdeq	r1, [r0], -pc	; <UNPREDICTABLE>
20014a94:	00000000 	andeq	r0, r0, r0
20014a98:	0800001a 	stmdaeq	r0, {r1, r3, r4}
20014a9c:	ffe141a0 			; <UNDEFINED> instruction: 0xffe141a0
20014aa0:	00001fff 	strdeq	r1, [r0], -pc	; <UNPREDICTABLE>
20014aa4:	00000000 	andeq	r0, r0, r0
20014aa8:	0c0000e2 	stceq	0, cr0, [r0], {226}	; 0xe2
20014aac:	ffa14020 			; <UNDEFINED> instruction: 0xffa14020
20014ab0:	00000fff 	strdeq	r0, [r0], -pc	; <UNPREDICTABLE>
20014ab4:	00000000 	andeq	r0, r0, r0
20014ab8:	040800a4 	streq	r0, [r8], #-164	; 0xffffff5c
20014abc:	fc20a020 	stc2	0, cr10, [r0], #-128	; 0xffffff80
20014ac0:	00000fff 	strdeq	r0, [r0], -pc	; <UNPREDICTABLE>
20014ac4:	78000000 	stmdavc	r0, {}	; <UNPREDICTABLE>
20014ac8:	040803c7 	streq	r0, [r8], #-967	; 0xfffffc39
20014acc:	c0109030 	andsgt	r9, r0, r0, lsr r0
20014ad0:	000007ff 	strdeq	r0, [r0], -pc	; <UNPREDICTABLE>
20014ad4:	cff80000 	svcgt	0x00f80000
20014ad8:	06080649 	streq	r0, [r8], -r9, asr #12
20014adc:	fff04810 			; <UNDEFINED> instruction: 0xfff04810
20014ae0:	000003fc 	strdeq	r0, [r0], -ip
20014ae4:	000f0000 	andeq	r0, pc, r0
20014ae8:	02081c88 	andeq	r1, r8, #136, 24	; 0x8800
20014aec:	fff82610 			; <UNDEFINED> instruction: 0xfff82610
20014af0:	0000000f 	andeq	r0, r0, pc
20014af4:	00018000 	andeq	r8, r1, r0
20014af8:	0018f110 	andseq	pc, r8, r0, lsl r1	; <UNPREDICTABLE>
20014afc:	fff821f8 			; <UNDEFINED> instruction: 0xfff821f8
20014b00:	000000ff 	strdeq	r0, [r0], -pc	; <UNPREDICTABLE>
20014b04:	00008000 	andeq	r8, r0, r0
20014b08:	003f8110 	eorseq	r8, pc, r0, lsl r1	; <UNPREDICTABLE>
20014b0c:	807c1048 	rsbshi	r1, ip, r8, asr #32
20014b10:	00000fff 	strdeq	r0, [r0], -pc	; <UNPREDICTABLE>
20014b14:	0000c000 	andeq	ip, r0, r0
20014b18:	00680230 	rsbeq	r0, r8, r0, lsr r2
20014b1c:	003c904e 	eorseq	r9, ip, lr, asr #32
20014b20:	00007fff 	strdeq	r7, [r0], -pc	; <UNPREDICTABLE>
20014b24:	00007000 	andeq	r7, r0, r0
20014b28:	00c80260 	sbceq	r0, r8, r0, ror #4
20014b2c:	001e8823 	andseq	r8, lr, r3, lsr #16
20014b30:	0003fffe 	strdeq	pc, [r3], -lr
20014b34:	00001800 	andeq	r1, r0, r0, lsl #16
20014b38:	83f80460 	mvnshi	r0, #96, 8	; 0x60000000
20014b3c:	000f0425 	andeq	r0, pc, r5, lsr #8
20014b40:	000ffffc 	strdeq	pc, [pc], -ip
20014b44:	00000c00 	andeq	r0, r0, r0, lsl #24
20014b48:	7e6018c0 	cdpvc	8, 6, cr1, cr0, cr0, {6}
20014b4c:	000f8224 	andeq	r8, pc, r4, lsr #4
20014b50:	003ffff8 	ldrshteq	pc, [pc], -r8	; <UNPREDICTABLE>
20014b54:	00000600 	andeq	r0, r0, r0, lsl #12
20014b58:	1f0063c0 	svcne	0x000063c0
20014b5c:	00079918 	andeq	r9, r7, r8, lsl r9
20014b60:	007ffff0 	ldrshteq	pc, [pc], #-240	; <UNPREDICTABLE>
20014b64:	00000300 	andeq	r0, r0, r0, lsl #6
20014b68:	09008f80 	stmdbeq	r0, {r7, r8, r9, sl, fp, pc}
20014b6c:	0003c880 	andeq	ip, r3, r0, lsl #17
20014b70:	00ffffc0 	rscseq	pc, pc, r0, asr #31
20014b74:	00000180 	andeq	r0, r0, r0, lsl #3
20014b78:	10830700 	addne	r0, r3, r0, lsl #14
20014b7c:	0001e640 	andeq	lr, r1, r0, asr #12
20014b80:	03ffff80 	mvnseq	pc, #128, 30	; 0x200
20014b84:	000000c0 	andeq	r0, r0, r0, asr #1
20014b88:	108c0700 	addne	r0, ip, r0, lsl #14
20014b8c:	0001f320 	andeq	pc, r1, r0, lsr #6
20014b90:	07ffff00 	ldrbeq	pc, [pc, r0, lsl #30]!	; <UNPREDICTABLE>
20014b94:	00000040 	andeq	r0, r0, r0, asr #32
20014b98:	fff00e00 			; <UNDEFINED> instruction: 0xfff00e00
20014b9c:	0000f99f 	muleq	r0, pc, r9	; <UNPREDICTABLE>
20014ba0:	0ffffe00 	svceq	0x00fffe00
20014ba4:	00000060 	andeq	r0, r0, r0, rrx
20014ba8:	00061c00 	andeq	r1, r6, r0, lsl #24
20014bac:	00007c80 	andeq	r7, r0, r0, lsl #25
20014bb0:	3ffffc00 	svccc	0x00fffc00
20014bb4:	00000030 	andeq	r0, r0, r0, lsr r0
20014bb8:	000c3800 	andeq	r3, ip, r0, lsl #16
20014bbc:	00007c00 	andeq	r7, r0, r0, lsl #24
20014bc0:	7ffff800 	svcvc	0x00fff800
20014bc4:	00000010 	andeq	r0, r0, r0, lsl r0
20014bc8:	70187000 	andsvc	r7, r8, r0
20014bcc:	00003e00 	andeq	r3, r0, r0, lsl #28
20014bd0:	fffff000 			; <UNDEFINED> instruction: 0xfffff000
20014bd4:	00000018 	andeq	r0, r0, r8, lsl r0
20014bd8:	8030c000 	eorshi	ip, r0, r0
20014bdc:	00001e00 	andeq	r1, r0, r0, lsl #28
20014be0:	ffffe000 			; <UNDEFINED> instruction: 0xffffe000
20014be4:	0000000c 	andeq	r0, r0, ip
20014be8:	8001c000 	andhi	ip, r1, r0
20014bec:	00001f00 	andeq	r1, r0, r0, lsl #30
20014bf0:	ffffc000 			; <UNDEFINED> instruction: 0xffffc000
20014bf4:	00000006 	andeq	r0, r0, r6
20014bf8:	80038000 	andhi	r8, r3, r0
20014bfc:	00000f00 	andeq	r0, r0, r0, lsl #30
20014c00:	ffffc000 			; <UNDEFINED> instruction: 0xffffc000
20014c04:	00000002 	andeq	r0, r0, r2
20014c08:	00060000 	andeq	r0, r6, r0
20014c0c:	00000f80 	andeq	r0, r0, r0, lsl #31
20014c10:	ffff8000 			; <UNDEFINED> instruction: 0xffff8000
20014c14:	00000001 	andeq	r0, r0, r1
20014c18:	000c0000 	andeq	r0, ip, r0
20014c1c:	000007c0 	andeq	r0, r0, r0, asr #15
20014c20:	ffff0000 			; <UNDEFINED> instruction: 0xffff0000
20014c24:	00000001 	andeq	r0, r0, r1
20014c28:	00380000 	eorseq	r0, r8, r0
20014c2c:	000003e0 	andeq	r0, r0, r0, ror #7
20014c30:	fffe0000 			; <UNDEFINED> instruction: 0xfffe0000
20014c34:	00000000 	andeq	r0, r0, r0
20014c38:	03f80000 	mvnseq	r0, #0
20014c3c:	000001f0 	strdeq	r0, [r0], -r0	; <UNPREDICTABLE>
20014c40:	fffe0000 			; <UNDEFINED> instruction: 0xfffe0000
20014c44:	00000000 	andeq	r0, r0, r0
20014c48:	7ff00000 	svcvc	0x00f00000	; IMB
20014c4c:	00000078 	andeq	r0, r0, r8, ror r0
20014c50:	fffc0000 			; <UNDEFINED> instruction: 0xfffc0000
20014c54:	30000000 	andcc	r0, r0, r0
20014c58:	ffe00000 			; <UNDEFINED> instruction: 0xffe00000
20014c5c:	0000003f 	andeq	r0, r0, pc, lsr r0
20014c60:	fffc0000 			; <UNDEFINED> instruction: 0xfffc0000
20014c64:	78000000 	stmdavc	r0, {}	; <UNPREDICTABLE>
20014c68:	ff000000 			; <UNDEFINED> instruction: 0xff000000
20014c6c:	0000001f 	andeq	r0, r0, pc, lsl r0
20014c70:	fff80000 			; <UNDEFINED> instruction: 0xfff80000

20014c74 <game_over_witch6_gray_bits>:
20014c74:	fe000000 	cdp2	0, 0, cr0, cr0, cr0, {0}
20014c78:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
20014c7c:	00000003 	andeq	r0, r0, r3
20014c80:	00000000 	andeq	r0, r0, r0
20014c84:	ff800000 			; <UNDEFINED> instruction: 0xff800000
20014c88:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
20014c8c:	00000003 	andeq	r0, r0, r3
20014c90:	00000000 	andeq	r0, r0, r0
20014c94:	fff00000 			; <UNDEFINED> instruction: 0xfff00000	; IMB
20014c98:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
20014c9c:	00000003 	andeq	r0, r0, r3
20014ca0:	00000000 	andeq	r0, r0, r0
20014ca4:	ffff0000 			; <UNDEFINED> instruction: 0xffff0000
20014ca8:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
20014cac:	00000007 	andeq	r0, r0, r7
20014cb0:	00000000 	andeq	r0, r0, r0
20014cb4:	ffffe000 			; <UNDEFINED> instruction: 0xffffe000
20014cb8:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
20014cbc:	00000007 	andeq	r0, r0, r7
20014cc0:	00000000 	andeq	r0, r0, r0
20014cc4:	fffff800 	vcmla.f32	d31, d15, d0[0], #270
20014cc8:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
20014ccc:	0000000f 	andeq	r0, r0, pc
20014cd0:	00000000 	andeq	r0, r0, r0
20014cd4:	fffffe00 			; <UNDEFINED> instruction: 0xfffffe00
20014cd8:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
20014cdc:	0000001f 	andeq	r0, r0, pc, lsl r0
20014ce0:	00000000 	andeq	r0, r0, r0
20014ce4:	ffffff00 			; <UNDEFINED> instruction: 0xffffff00
20014ce8:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
20014cec:	0000001f 	andeq	r0, r0, pc, lsl r0
20014cf0:	00000000 	andeq	r0, r0, r0
20014cf4:	ffffffc0 			; <UNDEFINED> instruction: 0xffffffc0
20014cf8:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
20014cfc:	0000001f 	andeq	r0, r0, pc, lsl r0
20014d00:	00000000 	andeq	r0, r0, r0
20014d04:	07ffffe0 	ldrbeq	pc, [pc, r0, ror #31]!	; <UNPREDICTABLE>
20014d08:	ffffff80 			; <UNDEFINED> instruction: 0xffffff80
20014d0c:	0000003f 	andeq	r0, r0, pc, lsr r0
20014d10:	00000000 	andeq	r0, r0, r0
20014d14:	00003fe0 	andeq	r3, r0, r0, ror #31
20014d18:	ffffff00 			; <UNDEFINED> instruction: 0xffffff00
20014d1c:	0000003f 	andeq	r0, r0, pc, lsr r0
20014d20:	00000000 	andeq	r0, r0, r0
20014d24:	000007c0 	andeq	r0, r0, r0, asr #15
20014d28:	ffffff00 			; <UNDEFINED> instruction: 0xffffff00
20014d2c:	0000003f 	andeq	r0, r0, pc, lsr r0
	...
20014d38:	ffffff00 			; <UNDEFINED> instruction: 0xffffff00
20014d3c:	0000003f 	andeq	r0, r0, pc, lsr r0
	...
20014d48:	ffffff80 			; <UNDEFINED> instruction: 0xffffff80
20014d4c:	0000007f 	andeq	r0, r0, pc, ror r0
	...
20014d58:	ffffff80 			; <UNDEFINED> instruction: 0xffffff80
20014d5c:	0000007f 	andeq	r0, r0, pc, ror r0
	...
20014d68:	ffffff80 			; <UNDEFINED> instruction: 0xffffff80
20014d6c:	000000ff 	strdeq	r0, [r0], -pc	; <UNPREDICTABLE>
	...
20014d78:	ffffffc0 			; <UNDEFINED> instruction: 0xffffffc0
20014d7c:	000001ff 	strdeq	r0, [r0], -pc	; <UNPREDICTABLE>
	...
20014d88:	000007e0 	andeq	r0, r0, r0, ror #15
20014d8c:	000003f8 	strdeq	r0, [r0], -r8
	...
20014d98:	000000e0 	andeq	r0, r0, r0, ror #1
	...
20014da8:	00000030 	andeq	r0, r0, r0, lsr r0
	...
20014e28:	00008000 	andeq	r8, r0, r0
	...
20014e38:	00024000 	andeq	r4, r2, r0
	...
20014e48:	00006000 	andeq	r6, r0, r0
20014e4c:	00000040 	andeq	r0, r0, r0, asr #32
	...
20014e58:	00018000 	andeq	r8, r1, r0
20014e5c:	00000240 	andeq	r0, r0, r0, asr #4
	...
20014e6c:	00000180 	andeq	r0, r0, r0, lsl #3
	...
20014e8c:	00010000 	andeq	r0, r1, r0
	...
20014e9c:	00008000 	andeq	r8, r0, r0
	...
20014eac:	00008000 	andeq	r8, r0, r0
	...
20014eb8:	00000040 	andeq	r0, r0, r0, asr #32
20014ebc:	00004000 	andeq	r4, r0, r0
	...
20014ecc:	00006000 	andeq	r6, r0, r0
20014ed0:	00000000 	andeq	r0, r0, r0
20014ed4:	30000000 	andcc	r0, r0, r0
20014ed8:	00000186 	andeq	r0, r0, r6, lsl #3
20014edc:	00003000 	andeq	r3, r0, r0
20014ee0:	00000000 	andeq	r0, r0, r0
20014ee4:	fff00000 			; <UNDEFINED> instruction: 0xfff00000	; IMB
20014ee8:	00000307 	andeq	r0, r0, r7, lsl #6
20014eec:	00001800 	andeq	r1, r0, r0, lsl #16
20014ef0:	00000000 	andeq	r0, r0, r0
20014ef4:	fffe0000 			; <UNDEFINED> instruction: 0xfffe0000
20014ef8:	00000e0f 	andeq	r0, r0, pc, lsl #28
20014efc:	00001e00 	andeq	r1, r0, r0, lsl #28
20014f00:	00000000 	andeq	r0, r0, r0
20014f04:	ffff0000 			; <UNDEFINED> instruction: 0xffff0000
20014f08:	00007e0f 	andeq	r7, r0, pc, lsl #28
20014f0c:	7f800f80 	svcvc	0x00800f80
20014f10:	00000000 	andeq	r0, r0, r0
20014f14:	ffff0000 			; <UNDEFINED> instruction: 0xffff0000
20014f18:	0007fc0f 	andeq	pc, r7, pc, lsl #24
20014f1c:	ffc00f80 			; <UNDEFINED> instruction: 0xffc00f80
20014f20:	00000000 	andeq	r0, r0, r0
20014f24:	ffff8000 			; <UNDEFINED> instruction: 0xffff8000
20014f28:	0007fc1f 	andeq	pc, r7, pc, lsl ip	; <UNPREDICTABLE>
20014f2c:	ffe007c0 			; <UNDEFINED> instruction: 0xffe007c0
20014f30:	00000001 	andeq	r0, r0, r1
20014f34:	ffffe000 			; <UNDEFINED> instruction: 0xffffe000
20014f38:	0007f81f 	andeq	pc, r7, pc, lsl r8	; <UNPREDICTABLE>
20014f3c:	fff003c2 			; <UNDEFINED> instruction: 0xfff003c2
20014f40:	00000003 	andeq	r0, r0, r3
20014f44:	fffff000 			; <UNDEFINED> instruction: 0xfffff000
20014f48:	819fe03f 	orrshi	lr, pc, pc, lsr r0	; <UNPREDICTABLE>
20014f4c:	fff001c3 			; <UNDEFINED> instruction: 0xfff001c3
20014f50:	00000007 	andeq	r0, r0, r7
20014f54:	fffff800 	vcmla.f32	d31, d15, d0[0], #270
20014f58:	e0ff803f 	rscs	r8, pc, pc, lsr r0	; <UNPREDICTABLE>
20014f5c:	fff800e7 			; <UNDEFINED> instruction: 0xfff800e7
20014f60:	0000000f 	andeq	r0, r0, pc
20014f64:	fffffc00 			; <UNDEFINED> instruction: 0xfffffc00
20014f68:	f0ff007f 			; <UNDEFINED> instruction: 0xf0ff007f
20014f6c:	fffc007f 			; <UNDEFINED> instruction: 0xfffc007f
20014f70:	0000003f 	andeq	r0, r0, pc, lsr r0
20014f74:	fffffe00 			; <UNDEFINED> instruction: 0xfffffe00
20014f78:	e07c00ff 	ldrsht	r0, [ip], #-15
20014f7c:	fffe003f 			; <UNDEFINED> instruction: 0xfffe003f
20014f80:	0000007f 	andeq	r0, r0, pc, ror r0
20014f84:	ffffff00 			; <UNDEFINED> instruction: 0xffffff00
20014f88:	e07000ff 	ldrsht	r0, [r0], #-15
20014f8c:	fffe001f 			; <UNDEFINED> instruction: 0xfffe001f
20014f90:	000000ff 	strdeq	r0, [r0], -pc	; <UNPREDICTABLE>
20014f94:	ffffff80 			; <UNDEFINED> instruction: 0xffffff80
20014f98:	000001ff 	strdeq	r0, [r0], -pc	; <UNPREDICTABLE>
20014f9c:	ffff0000 			; <UNDEFINED> instruction: 0xffff0000
20014fa0:	000001ff 	strdeq	r0, [r0], -pc	; <UNPREDICTABLE>
20014fa4:	ffffff80 			; <UNDEFINED> instruction: 0xffffff80
20014fa8:	000003ff 	strdeq	r0, [r0], -pc	; <UNPREDICTABLE>
20014fac:	ffff8000 			; <UNDEFINED> instruction: 0xffff8000
20014fb0:	000003ff 	strdeq	r0, [r0], -pc	; <UNPREDICTABLE>
20014fb4:	ffffffc0 			; <UNDEFINED> instruction: 0xffffffc0
20014fb8:	000007ff 	strdeq	r0, [r0], -pc	; <UNPREDICTABLE>
20014fbc:	ffff8000 			; <UNDEFINED> instruction: 0xffff8000
20014fc0:	000007ff 	strdeq	r0, [r0], -pc	; <UNPREDICTABLE>
20014fc4:	ffffffe0 			; <UNDEFINED> instruction: 0xffffffe0
20014fc8:	00000fff 	strdeq	r0, [r0], -pc	; <UNPREDICTABLE>
20014fcc:	ffffc000 			; <UNDEFINED> instruction: 0xffffc000
20014fd0:	00000fff 	strdeq	r0, [r0], -pc	; <UNPREDICTABLE>
20014fd4:	ffffffe0 			; <UNDEFINED> instruction: 0xffffffe0
20014fd8:	00003fff 	strdeq	r3, [r0], -pc	; <UNPREDICTABLE>
20014fdc:	ffffe000 			; <UNDEFINED> instruction: 0xffffe000
20014fe0:	00001fff 	strdeq	r1, [r0], -pc	; <UNPREDICTABLE>
20014fe4:	fffffff0 			; <UNDEFINED> instruction: 0xfffffff0
20014fe8:	00003fff 	strdeq	r3, [r0], -pc	; <UNPREDICTABLE>
20014fec:	ffffe000 			; <UNDEFINED> instruction: 0xffffe000
20014ff0:	00003fff 	strdeq	r3, [r0], -pc	; <UNPREDICTABLE>
20014ff4:	fffffff8 			; <UNDEFINED> instruction: 0xfffffff8
20014ff8:	00007fff 	strdeq	r7, [r0], -pc	; <UNPREDICTABLE>
20014ffc:	fffff000 			; <UNDEFINED> instruction: 0xfffff000
20015000:	00003fff 	strdeq	r3, [r0], -pc	; <UNPREDICTABLE>
20015004:	fffffffc 			; <UNDEFINED> instruction: 0xfffffffc
20015008:	0001ffff 	strdeq	pc, [r1], -pc	; <UNPREDICTABLE>
2001500c:	fffff000 			; <UNDEFINED> instruction: 0xfffff000
20015010:	00007fff 	strdeq	r7, [r0], -pc	; <UNPREDICTABLE>
20015014:	fffffffe 			; <UNDEFINED> instruction: 0xfffffffe
20015018:	0003ffff 	strdeq	pc, [r3], -pc	; <UNPREDICTABLE>
2001501c:	fffff800 	vcmla.f32	d31, d15, d0[0], #270
20015020:	0000ffff 	strdeq	pc, [r0], -pc	; <UNPREDICTABLE>
20015024:	fffffffe 			; <UNDEFINED> instruction: 0xfffffffe
20015028:	0007ffff 	strdeq	pc, [r7], -pc	; <UNPREDICTABLE>
2001502c:	fffffc00 			; <UNDEFINED> instruction: 0xfffffc00
20015030:	0001ffff 	strdeq	pc, [r1], -pc	; <UNPREDICTABLE>
20015034:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
20015038:	0007ffff 	strdeq	pc, [r7], -pc	; <UNPREDICTABLE>
2001503c:	fffffe00 			; <UNDEFINED> instruction: 0xfffffe00
20015040:	0001ffff 	strdeq	pc, [r1], -pc	; <UNPREDICTABLE>
20015044:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
20015048:	000fffff 	strdeq	pc, [pc], -pc	; <UNPREDICTABLE>
2001504c:	ffffff80 			; <UNDEFINED> instruction: 0xffffff80
20015050:	0003ffff 	strdeq	pc, [r3], -pc	; <UNPREDICTABLE>
20015054:	cfffffff 	svcgt	0x00ffffff
20015058:	001fffff 			; <UNDEFINED> instruction: 0x001fffff
2001505c:	ffffffc0 			; <UNDEFINED> instruction: 0xffffffc0
20015060:	0003ffff 	strdeq	pc, [r3], -pc	; <UNPREDICTABLE>
20015064:	87ffffff 			; <UNDEFINED> instruction: 0x87ffffff
20015068:	00ffffff 	ldrshteq	pc, [pc], #255	; <UNPREDICTABLE>
2001506c:	ffffffe0 			; <UNDEFINED> instruction: 0xffffffe0
20015070:	0007ffff 	strdeq	pc, [r7], -pc	; <UNPREDICTABLE>

20015074 <game_over_witch6_light_bits>:
	...
200151c8:	fff80000 			; <UNDEFINED> instruction: 0xfff80000
200151cc:	0000003f 	andeq	r0, r0, pc, lsr r0
	...
200151d8:	fff3f800 	vcmla.f32	d31, d3, d0[0], #270
200151dc:	00000e3f 	andeq	r0, r0, pc, lsr lr
	...
200151e8:	fff7ff00 			; <UNDEFINED> instruction: 0xfff7ff00
200151ec:	0000ff9f 	muleq	r0, pc, pc	; <UNPREDICTABLE>
	...
200151f8:	ffcc01c0 			; <UNDEFINED> instruction: 0xffcc01c0
200151fc:	0003ffcf 	andeq	pc, r3, pc, asr #31
	...
20015208:	ff8000e0 			; <UNDEFINED> instruction: 0xff8000e0
2001520c:	000fc0ef 	andeq	ip, pc, pc, ror #1
	...
20015218:	ff000078 			; <UNDEFINED> instruction: 0xff000078
2001521c:	003f8017 	eorseq	r8, pc, r7, lsl r0	; <UNPREDICTABLE>
	...
20015228:	fe000078 	mcr2	0, 0, r0, cr0, cr8, {3}
2001522c:	003f0003 	eorseq	r0, pc, r3
	...
20015238:	fc0000f8 	stc2	0, cr0, [r0], {248}	; 0xf8
2001523c:	003f0011 	eorseq	r0, pc, r1, lsl r0	; <UNPREDICTABLE>
	...
20015248:	ff0000fc 			; <UNDEFINED> instruction: 0xff0000fc
2001524c:	003f001b 	eorseq	r0, pc, fp, lsl r0	; <UNPREDICTABLE>
	...
20015258:	ff0000fc 			; <UNDEFINED> instruction: 0xff0000fc
2001525c:	003d800d 	eorseq	r8, sp, sp
	...
20015268:	ff0001fc 			; <UNDEFINED> instruction: 0xff0001fc
2001526c:	0019c00f 	andseq	ip, r9, pc
	...
20015278:	ff8001cc 			; <UNDEFINED> instruction: 0xff8001cc
2001527c:	0010e01f 	andseq	lr, r0, pc, lsl r0
	...
20015288:	ffe007e4 			; <UNDEFINED> instruction: 0xffe007e4
2001528c:	0014701f 	andseq	r7, r4, pc, lsl r0
	...
20015298:	f7ffffe4 			; <UNDEFINED> instruction: 0xf7ffffe4
2001529c:	001e3e5f 	andseq	r3, lr, pc, asr lr
	...
200152a8:	f3ffff1c 	vcvt.u32.f32	d31, d12, #1
200152ac:	001e3fdf 			; <UNDEFINED> instruction: 0x001e3fdf
	...
200152b8:	fbf7ff18 	blx	1fe14f22 <startup-0x1eb0de>
200152bc:	001f1fdf 			; <UNDEFINED> instruction: 0x001f1fdf
	...
200152c8:	fbf7fc38 	blx	1fe143b2 <startup-0x1ebc4e>
200152cc:	000f0fcf 	andeq	r0, pc, pc, asr #31
	...
200152d8:	f9f7f830 			; <UNDEFINED> instruction: 0xf9f7f830
200152dc:	000f87ef 	andeq	r8, pc, pc, ror #15
	...
200152e8:	fdf7e070 	ldc2l	0, cr14, [r7, #448]!	; 0x1c0
200152ec:	0007c1ef 	andeq	ip, r7, pc, ror #3
	...
200152f8:	ffe700e0 			; <UNDEFINED> instruction: 0xffe700e0
200152fc:	0007c007 	andeq	ip, r7, r7
	...
20015308:	ffc000e0 			; <UNDEFINED> instruction: 0xffc000e0
2001530c:	0003e007 	andeq	lr, r3, r7
	...
20015318:	ff8001c0 			; <UNDEFINED> instruction: 0xff8001c0
2001531c:	00036001 	andeq	r6, r3, r1
	...
20015328:	ff000180 			; <UNDEFINED> instruction: 0xff000180
2001532c:	00017000 	andeq	r7, r1, r0
	...
20015338:	7c000380 	stcvc	3, cr0, [r0], {128}	; 0x80
2001533c:	0000f800 	andeq	pc, r0, r0, lsl #16
	...
20015348:	00000700 	andeq	r0, r0, r0, lsl #14
2001534c:	00007c00 	andeq	r7, r0, r0, lsl #24
	...
20015358:	00001c00 	andeq	r1, r0, r0, lsl #24
2001535c:	00006600 	andeq	r6, r0, r0, lsl #12
	...
20015368:	00007000 	andeq	r7, r0, r0
2001536c:	00003700 	andeq	r3, r0, r0, lsl #14
	...
20015378:	0000f800 	andeq	pc, r0, r0, lsl #16
2001537c:	00001980 	andeq	r1, r0, r0, lsl #19
	...
20015388:	0003f800 	andeq	pc, r3, r0, lsl #16
2001538c:	00000cc0 	andeq	r0, r0, r0, asr #25
	...
20015398:	000ff000 	andeq	pc, pc, r0
2001539c:	00000660 	andeq	r0, r0, r0, ror #12
	...
200153a8:	fff9e000 			; <UNDEFINED> instruction: 0xfff9e000
200153ac:	0000037f 	andeq	r0, r0, pc, ror r3
	...
200153b8:	fff3c000 			; <UNDEFINED> instruction: 0xfff3c000
200153bc:	000003ff 	strdeq	r0, [r0], -pc	; <UNPREDICTABLE>
	...
200153c8:	8fe78000 	svchi	0x00e78000
200153cc:	000001ff 	strdeq	r0, [r0], -pc	; <UNPREDICTABLE>
	...
200153d8:	7fcf0000 	svcvc	0x00cf0000
200153dc:	000001ff 	strdeq	r0, [r0], -pc	; <UNPREDICTABLE>
	...
200153e8:	7ffe0000 	svcvc	0x00fe0000
200153ec:	000000ff 	strdeq	r0, [r0], -pc	; <UNPREDICTABLE>
	...
200153f8:	7ffc0000 	svcvc	0x00fc0000
200153fc:	000000ff 	strdeq	r0, [r0], -pc	; <UNPREDICTABLE>
	...
20015408:	fff80000 			; <UNDEFINED> instruction: 0xfff80000
2001540c:	0000007f 	andeq	r0, r0, pc, ror r0
	...
20015418:	fff00000 			; <UNDEFINED> instruction: 0xfff00000	; IMB
2001541c:	0000003f 	andeq	r0, r0, pc, lsr r0
	...
20015428:	ffc00000 			; <UNDEFINED> instruction: 0xffc00000
2001542c:	0000001f 	andeq	r0, r0, pc, lsl r0
	...
20015438:	fc000000 	stc2	0, cr0, [r0], {-0}
2001543c:	0000000f 	andeq	r0, r0, pc
	...
20015448:	80000000 	andhi	r0, r0, r0
2001544c:	00000007 	andeq	r0, r0, r7
	...

20015474 <firstTime.4104>:
20015474:	00000001 	andeq	r0, r0, r1

20015478 <stone_black_bits>:
20015478:	1807ffe0 	stmdane	r7, {r5, r6, r7, r8, r9, sl, fp, ip, sp, lr, pc}
2001547c:	80060fc0 	andhi	r0, r6, r0, asr #31
20015480:	3f00021f 	svccc	0x0000021f
20015484:	023e0002 	eorseq	r0, lr, #2
20015488:	00023e00 	andeq	r3, r2, r0, lsl #28
2001548c:	7c00027c 	sfmvc	f0, 4, [r0], {124}	; 0x7c
20015490:	01f80001 	mvnseq	r0, r1
20015494:	0001f800 	andeq	pc, r1, r0, lsl #16
20015498:	fc0001fa 	stc2	1, cr0, [r0], {250}	; 0xfa
2001549c:	01fc0001 	mvnseq	r0, r1
200154a0:	0001fc00 	andeq	pc, r1, r0, lsl #24
200154a4:	fa0001f8 	blx	20015c8c <firstTime.4108+0x734>
200154a8:	027c0001 	rsbseq	r0, ip, #1
200154ac:	90027f60 	andls	r7, r2, r0, ror #30
200154b0:	7fe8047f 	svcvc	0x00e8047f
200154b4:	387ff104 	ldmdacc	pc!, {r2, r8, ip, sp, lr, pc}^	; <UNPREDICTABLE>
200154b8:	ffc01ffe 			; <UNDEFINED> instruction: 0xffc01ffe
200154bc:	0000000f 	andeq	r0, r0, pc

200154c0 <stone_gray_bits>:
200154c0:	e0000000 	and	r0, r0, r0
200154c4:	7bf8003f 	blvc	1fe155c8 <startup-0x1eaa38>
200154c8:	00fc5c00 	rscseq	r5, ip, r0, lsl #24
200154cc:	3c01fc3c 	stccc	12, cr15, [r1], {60}	; 0x3c
200154d0:	fc1c01fc 	ldc2	1, cr0, [ip], {252}	; 0xfc
200154d4:	03fe1c03 	mvnseq	r1, #768	; 0x300
200154d8:	de07fe0e 	cdple	14, 0, cr15, cr7, cr14, {0}
200154dc:	ffbe07ff 			; <UNDEFINED> instruction: 0xffbe07ff
200154e0:	03ffde05 	mvnseq	sp, #5, 28	; 0x50
200154e4:	fe03fffe 	mcr2	15, 0, pc, cr3, cr14, {7}	; <UNPREDICTABLE>
200154e8:	fffe03ff 			; <UNDEFINED> instruction: 0xfffe03ff
200154ec:	05fffe07 	ldrbeq	pc, [pc, #3591]!	; 200162fb <firstTime.4108+0xda3>	; <UNPREDICTABLE>
200154f0:	fc03fffe 	stc2	15, cr15, [r3], {254}	; 0xfe
200154f4:	6ffc009f 	svcvs	0x00fc009f
200154f8:	0017f800 	andseq	pc, r7, r0, lsl #16
200154fc:	c0000ef8 	strdgt	r0, [r0], -r8
20015500:	00000001 	andeq	r0, r0, r1
20015504:	00000000 	andeq	r0, r0, r0

20015508 <stone_light_bits>:
20015508:	00000000 	andeq	r0, r0, r0
2001550c:	04000000 	streq	r0, [r0], #-0
20015510:	0003a000 	andeq	sl, r3, r0
20015514:	c00003c0 	andgt	r0, r0, r0, asr #7
20015518:	03e00003 	mvneq	r0, #3
2001551c:	0001e000 	andeq	lr, r1, r0
20015520:	200001f0 	strdcs	r0, [r0], -r0	; <UNPREDICTABLE>
20015524:	00400000 	subeq	r0, r0, r0
20015528:	00002000 	andeq	r2, r0, r0
	...

20015550 <stone_bounces>:
20015550:	00000003 	andeq	r0, r0, r3

20015554 <stone_gravity>:
20015554:	00000001 	andeq	r0, r0, r1

20015558 <firstTime.4108>:
20015558:	00000001 	andeq	r0, r0, r1
2001555c:	00202020 	eoreq	r2, r0, r0, lsr #32
20015560:	41524b2a 	cmpmi	r2, sl, lsr #22
20015564:	2a202a21 	bcs	2081fdf0 <firstTime.4108+0x80a898>
20015568:	2141524b 	cmpcs	r1, fp, asr #4
2001556c:	0000002a 	andeq	r0, r0, sl, lsr #32
20015570:	734c4944 	movtvc	r4, #51524	; 0xc944
20015574:	7469772d 	strbtvc	r7, [r9], #-1837	; 0xfffff8d3
20015578:	73656863 	cmnvc	r5, #6488064	; 0x630000
2001557c:	76616820 	strbtvc	r6, [r1], -r0, lsr #16
20015580:	00000065 	andeq	r0, r0, r5, rrx
20015584:	20726f46 	rsbscs	r6, r2, r6, asr #30
20015588:	746e6563 	strbtvc	r6, [lr], #-1379	; 0xfffffa9d
2001558c:	65697275 	strbvs	r7, [r9, #-629]!	; 0xfffffd8b
20015590:	68742073 	ldmdavs	r4!, {r0, r1, r4, r5, r6, sp}^
20015594:	00000065 	andeq	r0, r0, r5, rrx
20015598:	20202020 	eorcs	r2, r0, r0, lsr #32
2001559c:	00000000 	andeq	r0, r0, r0
200155a0:	6c696f63 	stclvs	15, cr6, [r9], #-396	; 0xfffffe74
200155a4:	69206465 	stmdbvs	r0!, {r0, r2, r5, r6, sl, sp, lr}
200155a8:	6566206e 	strbvs	r2, [r6, #-110]!	; 0xffffff92
200155ac:	002c7261 	eoreq	r7, ip, r1, ror #4
200155b0:	74616874 	strbtvc	r6, [r1], #-2164	; 0xfffff78c
200155b4:	44206120 	strtmi	r6, [r0], #-288	; 0xfffffee0
200155b8:	2d735049 	ldclcs	0, cr5, [r3, #-292]!	; 0xfffffedc
200155bc:	63746977 	cmnvs	r4, #1949696	; 0x1dc000
200155c0:	00000068 	andeq	r0, r0, r8, rrx
200155c4:	6e656877 	mcrvs	8, 3, r6, cr5, cr7, {3}
200155c8:	72657665 	rsbvc	r7, r5, #105906176	; 0x6500000
200155cc:	65687420 	strbvs	r7, [r8, #-1056]!	; 0xfffffbe0
200155d0:	65682079 	strbvs	r2, [r8, #-121]!	; 0xffffff87
200155d4:	00007261 	andeq	r7, r0, r1, ror #4
200155d8:	6e207369 	cdpvs	3, 2, cr7, cr0, cr9, {3}
200155dc:	2e726165 	rpwcssz	f6, f2, f5
200155e0:	00000000 	andeq	r0, r0, r0
200155e4:	70727573 	rsbsvc	r7, r2, r3, ror r5
200155e8:	69736972 	ldmdbvs	r3!, {r1, r4, r5, r6, r8, fp, sp, lr}^
200155ec:	202c676e 	eorcs	r6, ip, lr, ror #14
200155f0:	646e6966 	strbtvs	r6, [lr], #-2406	; 0xfffff69a
200155f4:	00676e69 	rsbeq	r6, r7, r9, ror #28
200155f8:	69206f53 	stmdbvs	r0!, {r0, r1, r4, r6, r8, r9, sl, fp, sp, lr}
200155fc:	73692074 	cmnvc	r9, #116	; 0x74
20015600:	69757120 	ldmdbvs	r5!, {r5, r8, ip, sp, lr}^
20015604:	00006574 	andeq	r6, r0, r4, ror r5
20015608:	20756f79 	rsbscs	r6, r5, r9, ror pc
2001560c:	65726568 	ldrbvs	r6, [r2, #-1384]!	; 0xfffffa98
20015610:	0000002c 	andeq	r0, r0, ip, lsr #32
20015614:	72696568 	rsbvc	r6, r9, #104, 10	; 0x1a000000
20015618:	206f7420 	rsbcs	r7, pc, r0, lsr #8
2001561c:	676e696b 	strbvs	r6, [lr, -fp, ror #18]!
20015620:	61654c20 	cmnvs	r5, r0, lsr #24
20015624:	00002e72 	andeq	r2, r0, r2, ror lr
20015628:	65657571 	strbvs	r7, [r5, #-1393]!	; 0xfffffa8f
2001562c:	6144206e 	cmpvs	r4, lr, rrx
20015630:	206f6666 	rsbcs	r6, pc, r6, ror #12
20015634:	4420666f 	strtmi	r6, [r0], #-1647	; 0xfffff991
20015638:	2c734c49 	ldclcs	12, cr4, [r3], #-292	; 0xfffffedc
2001563c:	00000000 	andeq	r0, r0, r0
20015640:	706d6574 	rsbvc	r6, sp, r4, ror r5
20015644:	2c646574 	cfstr64cs	mvdx6, [r4], #-464	; 0xfffffe30
20015648:	206f7420 	rsbcs	r7, pc, r0, lsr #8
2001564c:	746f6f6c 	strbtvc	r6, [pc], #-3948	; 20015654 <firstTime.4108+0xfc>
20015650:	00000000 	andeq	r0, r0, r0
20015654:	20747542 	rsbscs	r7, r4, r2, asr #10
20015658:	6279616d 	rsbsvs	r6, r9, #1073741851	; 0x4000001b
2001565c:	6f792065 	svcvs	0x00792065
20015660:	65722775 	ldrbvs	r2, [r2, #-1909]!	; 0xfffff88b
20015664:	00000000 	andeq	r0, r0, r0
20015668:	6d6f7266 	sfmvs	f7, 2, [pc, #-408]!	; 200154d8 <stone_gray_bits+0x18>
2001566c:	65687420 	strbvs	r7, [r8, #-1056]!	; 0xfffffbe0
20015670:	63697220 	cmnvs	r9, #32, 4
20015674:	2c736568 	cfldr64cs	mvdx6, [r3], #-416	; 0xfffffe60
20015678:	00000000 	andeq	r0, r0, r0
2001567c:	6b636977 	blvs	218efc60 <firstTime.4108+0x18da708>
20015680:	44206465 	strtmi	r6, [r0], #-1125	; 0xfffffb9b
20015684:	2d735049 	ldclcs	0, cr5, [r3, #-292]!	; 0xfffffedc
20015688:	63746977 	cmnvs	r4, #1949696	; 0x1dc000
2001568c:	2e736568 	cdpcs	5, 7, cr6, cr3, cr8, {3}
20015690:	00000000 	andeq	r0, r0, r0
20015694:	65727573 	ldrbvs	r7, [r2, #-1395]!	; 0xfffffa8d
20015698:	79622064 	stmdbvc	r2!, {r2, r5, r6, sp}^
2001569c:	00000000 	andeq	r0, r0, r0
200156a0:	67206f73 			; <UNDEFINED> instruction: 0x67206f73
200156a4:	70706972 	rsbsvc	r6, r0, r2, ror r9
200156a8:	20796c69 	rsbscs	r6, r9, r9, ror #24
200156ac:	61657274 	smcvs	22308	; 0x5724
200156b0:	0000002d 	andeq	r0, r0, sp, lsr #32
200156b4:	6572202d 	ldrbvs	r2, [r2, #-45]!	; 0xffffffd3
200156b8:	20746573 	rsbscs	r6, r4, r3, ror r5
200156bc:	20656874 	rsbcs	r6, r5, r4, ror r8
200156c0:	74697773 	strbtvc	r7, [r9], #-1907	; 0xfffff88d
200156c4:	00216863 	eoreq	r6, r1, r3, ror #16
200156c8:	65746e45 	ldrbvs	r6, [r4, #-3653]!	; 0xfffff1bb
200156cc:	62202c72 	eorvs	r2, r0, #29184	; 0x7200
200156d0:	65766172 	ldrbvs	r6, [r6, #-370]!	; 0xfffffe8e
200156d4:	74697720 	strbtvc	r7, [r9], #-1824	; 0xfffff8e0
200156d8:	002c6863 	eoreq	r6, ip, r3, ror #16
200156dc:	41484148 	cmpmi	r8, r8, asr #2
200156e0:	41484148 	cmpmi	r8, r8, asr #2
200156e4:	41414148 	cmpmi	r1, r8, asr #2
200156e8:	41414141 	cmpmi	r1, r1, asr #2
200156ec:	21212141 			; <UNDEFINED> instruction: 0x21212141
200156f0:	00000000 	andeq	r0, r0, r0
200156f4:	73504944 	cmpvc	r0, #68, 18	; 0x110000
200156f8:	5449572d 	strbpl	r5, [r9], #-1837	; 0xfffff8d3
200156fc:	003a4843 	eorseq	r4, sl, r3, asr #16
20015700:	6d612049 	stclvs	0, cr2, [r1, #-292]!	; 0xfffffedc
20015704:	6f727020 	svcvs	0x00727020
20015708:	6f206475 	svcvs	0x00206475
2001570c:	6f792066 	svcvs	0x00792066
20015710:	00002e75 	andeq	r2, r0, r5, ror lr
20015714:	65676f52 	strbvs	r6, [r7, #-3922]!	; 0xfffff0ae
20015718:	4b282072 	blmi	20a1d8e8 <firstTime.4108+0xa08390>
2001571c:	20676e69 	rsbcs	r6, r7, r9, ror #28
20015720:	7261654c 	rsbvc	r6, r1, #76, 10	; 0x13000000
20015724:	00203a29 	eoreq	r3, r0, r9, lsr #20
20015728:	69622061 	stmdbvs	r2!, {r0, r5, r6, sp}^
2001572c:	70732074 	rsbsvc	r2, r3, r4, ror r0
20015730:	656b6f6f 	strbvs	r6, [fp, #-3951]!	; 0xfffff091
20015734:	756f2064 	strbvc	r2, [pc, #-100]!	; 200156d8 <firstTime.4108+0x180>
20015738:	2e2e2e74 	mcrcs	14, 1, r2, cr14, cr4, {3}
2001573c:	00000000 	andeq	r0, r0, r0
20015740:	66666144 	strbtvs	r6, [r6], -r4, asr #2
20015744:	49203a6f 	stmdbmi	r0!, {r0, r1, r2, r3, r5, r6, r9, fp, ip, sp}
20015748:	66206d27 	strtvs	r6, [r0], -r7, lsr #26
2001574c:	696c6565 	stmdbvs	ip!, {r0, r2, r5, r6, r8, sl, sp, lr}^
20015750:	0020676e 	eoreq	r6, r0, lr, ror #14
20015754:	00000000 	andeq	r0, r0, r0
20015758:	696c632a 	stmdbvs	ip!, {r1, r3, r5, r8, r9, sp, lr}^
2001575c:	002a6b63 	eoreq	r6, sl, r3, ror #22
20015760:	4d55592a 	vldrmi.16	s11, [r5, #-84]	; 0xffffffac	; <UNPREDICTABLE>
20015764:	4d555920 	vldrmi.16	s11, [r5, #-64]	; 0xffffffc0	; <UNPREDICTABLE>
20015768:	4d555920 	vldrmi.16	s11, [r5, #-64]	; 0xffffffc0	; <UNPREDICTABLE>
2001576c:	0000002a 	andeq	r0, r0, sl, lsr #32
20015770:	4d41422a 	sfmmi	f4, 2, [r1, #-168]	; 0xffffff58
20015774:	00002a21 	andeq	r2, r0, r1, lsr #20
20015778:	7069742a 	rsbvc	r7, r9, sl, lsr #8
2001577c:	00002a70 	andeq	r2, r0, r0, ror sl
20015780:	7061742a 	rsbvc	r7, r1, sl, lsr #8
20015784:	00002a70 	andeq	r2, r0, r0, ror sl
20015788:	20676e69 	rsbcs	r6, r7, r9, ror #28
2001578c:	73746567 	cmnvc	r4, #432013312	; 0x19c00000
20015790:	65687420 	strbvs	r7, [r8, #-1056]!	; 0xfffffbe0
20015794:	69727020 	ldmdbvs	r2!, {r5, ip, sp, lr}^
20015798:	0021657a 	eoreq	r6, r1, sl, ror r5
2001579c:	736f6847 	cmnvc	pc, #4653056	; 0x470000
200157a0:	4f203a74 	svcmi	0x00203a74
200157a4:	20796c6e 	rsbscs	r6, r9, lr, ror #24
200157a8:	20656874 	rsbcs	r6, r5, r4, ror r8
200157ac:	2d726164 	ldfcse	f6, [r2, #-400]!	; 0xfffffe70
200157b0:	00000000 	andeq	r0, r0, r0
200157b4:	42414b2a 	submi	r4, r1, #43008	; 0xa800
200157b8:	4f4f4f4f 	svcmi	0x004f4f4f
200157bc:	00002a4d 	andeq	r2, r0, sp, asr #20
200157c0:	4f77462a 	svcmi	0x0077462a
200157c4:	2a6f4f4f 	bcs	21be9508 <firstTime.4108+0x1bd3fb0>
200157c8:	00000000 	andeq	r0, r0, r0
200157cc:	20202020 	eorcs	r2, r0, r0, lsr #32
200157d0:	794e2020 	stmdbvc	lr, {r5, sp}^
200157d4:	48414841 	stmdami	r1, {r0, r6, fp, lr}^
200157d8:	48414841 	stmdami	r1, {r0, r6, fp, lr}^
200157dc:	00000021 	andeq	r0, r0, r1, lsr #32
200157e0:	4f57462a 	svcmi	0x0057462a
200157e4:	2a48534f 	bcs	2122a528 <firstTime.4108+0x1214fd0>
200157e8:	00000000 	andeq	r0, r0, r0
200157ec:	20202020 	eorcs	r2, r0, r0, lsr #32
200157f0:	20202020 	eorcs	r2, r0, r0, lsr #32
200157f4:	73706f4f 	cmnvc	r0, #316	; 0x13c
200157f8:	212e2e2e 			; <UNDEFINED> instruction: 0x212e2e2e
200157fc:	00000000 	andeq	r0, r0, r0
20015800:	46464144 	strbmi	r4, [r6], -r4, asr #2
20015804:	20203a4f 	eorcs	r3, r0, pc, asr #20
20015808:	00000000 	andeq	r0, r0, r0
2001580c:	20202020 	eorcs	r2, r0, r0, lsr #32
20015810:	20202020 	eorcs	r2, r0, r0, lsr #32
20015814:	48524120 	ldmdami	r2, {r5, r8, lr}^
20015818:	48475247 	stmdami	r7, {r0, r1, r2, r6, r9, ip, lr}^
2001581c:	00002152 	andeq	r2, r0, r2, asr r1
20015820:	20202020 	eorcs	r2, r0, r0, lsr #32
20015824:	20202020 	eorcs	r2, r0, r0, lsr #32
20015828:	20202020 	eorcs	r2, r0, r0, lsr #32
2001582c:	20202020 	eorcs	r2, r0, r0, lsr #32
20015830:	20202020 	eorcs	r2, r0, r0, lsr #32
20015834:	00000000 	andeq	r0, r0, r0
20015838:	200009d6 	ldrdcs	r0, [r0], -r6
2001583c:	20000aa4 	andcs	r0, r0, r4, lsr #21
20015840:	20000f9a 	mulcs	r0, sl, pc	; <UNPREDICTABLE>
20015844:	20001d78 	andcs	r1, r0, r8, ror sp
20015848:	20001d16 	andcs	r1, r0, r6, lsl sp
2001584c:	200009b4 			; <UNDEFINED> instruction: 0x200009b4
20015850:	200009b4 			; <UNDEFINED> instruction: 0x200009b4
20015854:	200009b4 			; <UNDEFINED> instruction: 0x200009b4
20015858:	200009b4 			; <UNDEFINED> instruction: 0x200009b4
2001585c:	200009b4 			; <UNDEFINED> instruction: 0x200009b4
20015860:	20001b14 	andcs	r1, r0, r4, lsl fp
20015864:	00000000 	andeq	r0, r0, r0
20015868:	5548542a 	strbpl	r5, [r8, #-1066]	; 0xfffffbd6
2001586c:	002a504d 	eoreq	r5, sl, sp, asr #32
20015870:	20003eaa 	andcs	r3, r0, sl, lsr #29
20015874:	20003eb4 			; <UNDEFINED> instruction: 0x20003eb4
20015878:	20003ebe 			; <UNDEFINED> instruction: 0x20003ebe
2001587c:	20003ec8 	andcs	r3, r0, r8, asr #29
20015880:	20003ed2 	ldrdcs	r3, [r0], -r2
20015884:	20003edc 	ldrdcs	r3, [r0], -ip
20015888:	20003ee6 	andcs	r3, r0, r6, ror #29
2001588c:	20003ef0 	strdcs	r3, [r0], -r0
20015890:	20202020 	eorcs	r2, r0, r0, lsr #32
20015894:	20202020 	eorcs	r2, r0, r0, lsr #32
20015898:	20202020 	eorcs	r2, r0, r0, lsr #32
2001589c:	20202020 	eorcs	r2, r0, r0, lsr #32
200158a0:	20202020 	eorcs	r2, r0, r0, lsr #32
200158a4:	00000000 	andeq	r0, r0, r0
200158a8:	61666c41 	cmnvs	r6, r1, asr #24
200158ac:	656d756e 	strbvs	r7, [sp, #-1390]!	; 0xfffffa92
200158b0:	6b736972 	blvs	21cefe80 <firstTime.4108+0x1cda928>
200158b4:	00000000 	andeq	r0, r0, r0
200158b8:	64726168 	ldrbtvs	r6, [r2], #-360	; 0xfffffe98
200158bc:	a4c3a5c3 	strbge	sl, [r3], #1475	; 0x5c3
200158c0:	7261b6c3 	rsbvc	fp, r1, #204472320	; 0xc300000
200158c4:	75732065 	ldrbvc	r2, [r3, #-101]!	; 0xffffff9b
200158c8:	00726567 	rsbseq	r6, r2, r7, ror #10

Disassembly of section .debug_info:

00000000 <.debug_info>:
       0:	00000b6d 	andeq	r0, r0, sp, ror #22
       4:	00000004 	andeq	r0, r0, r4
       8:	01040000 	mrseq	r0, (UNDEF: 4)
       c:	000000af 	andeq	r0, r0, pc, lsr #1
      10:	00056a0c 	andeq	r6, r5, ip, lsl #20
	...
      20:	020c0200 	andeq	r0, ip, #0, 4
      24:	00004e05 	andeq	r4, r0, r5, lsl #28
      28:	03910300 	orrseq	r0, r1, #0, 6
      2c:	07020000 	streq	r0, [r2, -r0]
      30:	0000004e 	andeq	r0, r0, lr, asr #32
      34:	07740300 	ldrbeq	r0, [r4, -r0, lsl #6]!
      38:	08020000 	stmdaeq	r2, {}	; <UNPREDICTABLE>
      3c:	0000004e 	andeq	r0, r0, lr, asr #32
      40:	1a6a0304 	bne	1a80c58 <startup-0x1e57f3a8>
      44:	09020000 	stmdbeq	r2, {}	; <UNPREDICTABLE>
      48:	00000055 	andeq	r0, r0, r5, asr r0
      4c:	04040008 	streq	r0, [r4], #-8
      50:	0003bf07 	andeq	fp, r3, r7, lsl #30
      54:	5b040500 	blpl	10145c <startup-0x1fefeba4>
      58:	04000000 	streq	r0, [r0], #-0
      5c:	05170801 	ldreq	r0, [r7, #-2049]	; 0xfffff7ff
      60:	d4060000 	strle	r0, [r6], #-0
      64:	0200001b 	andeq	r0, r0, #27
      68:	0000210a 	andeq	r2, r0, sl, lsl #2
      6c:	00340700 	eorseq	r0, r4, r0, lsl #14
      70:	030c0000 	movweq	r0, #49152	; 0xc000
      74:	00009e06 	andeq	r9, r0, r6, lsl #28
      78:	060d0300 	streq	r0, [sp], -r0, lsl #6
      7c:	07030000 	streq	r0, [r3, -r0]
      80:	0000009e 	muleq	r0, lr, r0
      84:	003b0300 	eorseq	r0, fp, r0, lsl #6
      88:	08030000 	stmdaeq	r3, {}	; <UNPREDICTABLE>
      8c:	0000009e 	muleq	r0, lr, r0
      90:	00300304 	eorseq	r0, r0, r4, lsl #6
      94:	09030000 	stmdbeq	r3, {}	; <UNPREDICTABLE>
      98:	0000009e 	muleq	r0, lr, r0
      9c:	04050008 	streq	r0, [r5], #-8
      a0:	00000062 	andeq	r0, r0, r2, rrx
      a4:	00155806 	andseq	r5, r5, r6, lsl #16
      a8:	6d0a0300 	stcvs	3, cr0, [sl, #-0]
      ac:	07000000 	streq	r0, [r0, -r0]
      b0:	00000737 	andeq	r0, r0, r7, lsr r7
      b4:	28060424 	stmdacs	r6, {r2, r5, sl}
      b8:	03000001 	movweq	r0, #1
      bc:	000004a5 	andeq	r0, r0, r5, lsr #9
      c0:	01280704 			; <UNDEFINED> instruction: 0x01280704
      c4:	03000000 	movweq	r0, #0
      c8:	00000743 	andeq	r0, r0, r3, asr #14
      cc:	012e0804 			; <UNDEFINED> instruction: 0x012e0804
      d0:	03040000 	movweq	r0, #16384	; 0x4000
      d4:	00000696 	muleq	r0, r6, r6
      d8:	012e0904 			; <UNDEFINED> instruction: 0x012e0904
      dc:	03080000 	movweq	r0, #32768	; 0x8000
      e0:	000006bf 			; <UNDEFINED> instruction: 0x000006bf
      e4:	01460c04 	cmpeq	r6, r4, lsl #24
      e8:	030c0000 	movweq	r0, #49152	; 0xc000
      ec:	00000378 	andeq	r0, r0, r8, ror r3
      f0:	01460d04 	cmpeq	r6, r4, lsl #26
      f4:	03100000 	tsteq	r0, #0
      f8:	000004b7 			; <UNDEFINED> instruction: 0x000004b7
      fc:	012e1004 			; <UNDEFINED> instruction: 0x012e1004
     100:	03140000 	tsteq	r4, #0
     104:	00000080 	andeq	r0, r0, r0, lsl #1
     108:	012e1104 			; <UNDEFINED> instruction: 0x012e1104
     10c:	03180000 	tsteq	r8, #0
     110:	0000040f 	andeq	r0, r0, pc, lsl #8
     114:	012e1204 			; <UNDEFINED> instruction: 0x012e1204
     118:	031c0000 	tsteq	ip, #0
     11c:	0000041f 	andeq	r0, r0, pc, lsl r4
     120:	012e1304 			; <UNDEFINED> instruction: 0x012e1304
     124:	00200000 	eoreq	r0, r0, r0
     128:	00a40405 	adceq	r0, r4, r5, lsl #8
     12c:	04080000 	streq	r0, [r8], #-0
     130:	746e6905 	strbtvc	r6, [lr], #-2309	; 0xfffff6fb
     134:	01400900 	cmpeq	r0, r0, lsl #18
     138:	400a0000 	andmi	r0, sl, r0
     13c:	00000001 	andeq	r0, r0, r1
     140:	00af0405 	adceq	r0, pc, r5, lsl #8
     144:	04050000 	streq	r0, [r5], #-0
     148:	00000135 	andeq	r0, r0, r5, lsr r1
     14c:	00073806 	andeq	r3, r7, r6, lsl #16
     150:	af150400 	svcge	0x00150400
     154:	0b000000 	bleq	15c <startup-0x1ffffea4>
     158:	00000162 	andeq	r0, r0, r2, ror #2
     15c:	00000162 	andeq	r0, r0, r2, ror #2
     160:	0405000c 	streq	r0, [r5], #-12
     164:	0000014c 	andeq	r0, r0, ip, asr #2
     168:	00059a0d 	andeq	r9, r5, sp, lsl #20
     16c:	571c0400 	ldrpl	r0, [ip, -r0, lsl #8]
     170:	0d000001 	stceq	0, cr0, [r0, #-4]
     174:	0000045a 	andeq	r0, r0, sl, asr r4
     178:	012e1d04 			; <UNDEFINED> instruction: 0x012e1d04
     17c:	fb060000 	blx	180186 <startup-0x1fe7fe7a>
     180:	05000006 	streq	r0, [r0, #-6]
     184:	00005b24 	andeq	r5, r0, r4, lsr #22
     188:	017e0b00 	cmneq	lr, r0, lsl #22
     18c:	019a0000 	orrseq	r0, sl, r0
     190:	9a0e0000 	bls	380198 <startup-0x1fc7fe68>
     194:	ff000001 			; <UNDEFINED> instruction: 0xff000001
     198:	04040003 	streq	r0, [r4], #-3
     19c:	00043c07 	andeq	r3, r4, r7, lsl #24
     1a0:	19990d00 	ldmibne	r9, {r8, sl, fp}
     1a4:	2d050000 	stccs	0, cr0, [r5, #-0]
     1a8:	00000189 	andeq	r0, r0, r9, lsl #3
     1ac:	00027e0d 	andeq	r7, r2, sp, lsl #28
     1b0:	892e0500 	stmdbhi	lr!, {r8, sl}
     1b4:	0d000001 	stceq	0, cr0, [r0, #-4]
     1b8:	00000525 	andeq	r0, r0, r5, lsr #10
     1bc:	01892f05 	orreq	r2, r9, r5, lsl #30
     1c0:	a10d0000 	mrsge	r0, (UNDEF: 13)
     1c4:	05000003 	streq	r0, [r0, #-3]
     1c8:	00018930 	andeq	r8, r1, r0, lsr r9
     1cc:	03060d00 	movweq	r0, #27904	; 0x6d00
     1d0:	31050000 	mrscc	r0, (UNDEF: 5)
     1d4:	00000189 	andeq	r0, r0, r9, lsl #3
     1d8:	0007190d 	andeq	r1, r7, sp, lsl #18
     1dc:	89320500 	ldmdbhi	r2!, {r8, sl}
     1e0:	0d000001 	stceq	0, cr0, [r0, #-4]
     1e4:	00000709 	andeq	r0, r0, r9, lsl #14
     1e8:	01893305 	orreq	r3, r9, r5, lsl #6
     1ec:	5b0b0000 	blpl	2c01f4 <startup-0x1fd3fe0c>
     1f0:	fe000000 	cdp2	0, 0, cr0, cr0, cr0, {0}
     1f4:	0f000001 	svceq	0x00000001
     1f8:	0000019a 	muleq	r0, sl, r1
     1fc:	c9100077 	ldmdbgt	r0, {r0, r1, r2, r4, r5, r6}
     200:	06000002 	streq	r0, [r0], -r2
     204:	0001ee03 	andeq	lr, r1, r3, lsl #28
     208:	e8030500 	stmda	r3, {r8, sl}
     20c:	11200083 	smlawbne	r0, r3, r0, r0
     210:	0000053c 	andeq	r0, r0, ip, lsr r5
     214:	01ee0307 	mvneq	r0, r7, lsl #6
     218:	03050000 	movweq	r0, #20480	; 0x5000
     21c:	20008460 	andcs	r8, r0, r0, ror #8
     220:	00061811 	andeq	r1, r6, r1, lsl r8
     224:	ee030800 	cdp	8, 0, cr0, cr3, cr0, {0}
     228:	05000001 	streq	r0, [r0, #-1]
     22c:	0084d803 	addeq	sp, r4, r3, lsl #16
     230:	005b0b20 	subseq	r0, fp, r0, lsr #22
     234:	02420000 	subeq	r0, r2, #0
     238:	9a0e0000 	bls	380240 <startup-0x1fc7fdc0>
     23c:	17000001 	strne	r0, [r0, -r1]
     240:	7c110001 	ldcvc	0, cr0, [r1], {1}
     244:	09000001 	stmdbeq	r0, {r0}
     248:	00023103 	andeq	r3, r2, r3, lsl #2
     24c:	50030500 	andpl	r0, r3, r0, lsl #10
     250:	11200085 	smlawbne	r0, r5, r0, r0
     254:	00000467 	andeq	r0, r0, r7, ror #8
     258:	0231030a 	eorseq	r0, r1, #671088640	; 0x28000000
     25c:	03050000 	movweq	r0, #20480	; 0x5000
     260:	20008668 	andcs	r8, r0, r8, ror #12
     264:	0003f411 	andeq	pc, r3, r1, lsl r4	; <UNPREDICTABLE>
     268:	31030b00 	tstcc	r3, r0, lsl #22
     26c:	05000002 	streq	r0, [r0, #-2]
     270:	00878003 	addeq	r8, r7, r3
     274:	005b0b20 	subseq	r0, fp, r0, lsr #22
     278:	02860000 	addeq	r0, r6, #0
     27c:	9a0e0000 	bls	380284 <startup-0x1fc7fd7c>
     280:	ff000001 			; <UNDEFINED> instruction: 0xff000001
     284:	4f110003 	svcmi	0x00110003
     288:	0c000005 	stceq	0, cr0, [r0], {5}
     28c:	00027503 	andeq	r7, r2, r3, lsl #10
     290:	98030500 	stmdals	r3, {r8, sl}
     294:	11200088 	smlawbne	r0, r8, r0, r0
     298:	00000045 	andeq	r0, r0, r5, asr #32
     29c:	0275030d 	rsbseq	r0, r5, #872415232	; 0x34000000
     2a0:	03050000 	movweq	r0, #20480	; 0x5000
     2a4:	20008c98 	mulcs	r0, r8, ip
     2a8:	00001011 	andeq	r1, r0, r1, lsl r0
     2ac:	75030e00 	strvc	r0, [r3, #-3584]	; 0xfffff200
     2b0:	05000002 	streq	r0, [r0, #-2]
     2b4:	00909803 	addseq	r9, r0, r3, lsl #16
     2b8:	005b0b20 	subseq	r0, fp, r0, lsr #22
     2bc:	02c90000 	sbceq	r0, r9, #0
     2c0:	9a0f0000 	bls	3c02c8 <startup-0x1fc3fd38>
     2c4:	d1000001 	tstle	r0, r1
     2c8:	01de1100 	bicseq	r1, lr, r0, lsl #2
     2cc:	030f0000 	movweq	r0, #61440	; 0xf000
     2d0:	000002b9 			; <UNDEFINED> instruction: 0x000002b9
     2d4:	94980305 	ldrls	r0, [r8], #773	; 0x305
     2d8:	45112000 	ldrmi	r2, [r1, #-0]
     2dc:	10000004 	andne	r0, r0, r4
     2e0:	0002b903 	andeq	fp, r2, r3, lsl #18
     2e4:	6c030500 	cfstr32vs	mvfx0, [r3], {-0}
     2e8:	11200095 			; <UNDEFINED> instruction: 0x11200095
     2ec:	00000256 	andeq	r0, r0, r6, asr r2
     2f0:	02b90311 	adcseq	r0, r9, #1140850688	; 0x44000000
     2f4:	03050000 	movweq	r0, #20480	; 0x5000
     2f8:	20009640 	andcs	r9, r0, r0, asr #12
     2fc:	0006f107 	andeq	pc, r6, r7, lsl #2
     300:	04121400 	ldreq	r1, [r2], #-1024	; 0xfffffc00
     304:	00000345 	andeq	r0, r0, r5, asr #6
     308:	001e4703 	andseq	r4, lr, r3, lsl #14
     30c:	45051200 	strmi	r1, [r5, #-512]	; 0xfffffe00
     310:	00000003 	andeq	r0, r0, r3
     314:	0002bc03 	andeq	fp, r2, r3, lsl #24
     318:	45061200 	strmi	r1, [r6, #-512]	; 0xfffffe00
     31c:	04000003 	streq	r0, [r0], #-3
     320:	00042903 	andeq	r2, r4, r3, lsl #18
     324:	2e081200 	cdpcs	2, 0, cr1, cr8, cr0, {0}
     328:	08000001 	stmdaeq	r0, {r0}
     32c:	0027cc03 	eoreq	ip, r7, r3, lsl #24
     330:	2e091200 	cdpcs	2, 0, cr1, cr9, cr0, {0}
     334:	0c000001 	stceq	0, cr0, [r0], {1}
     338:	0002c103 	andeq	ip, r2, r3, lsl #2
     33c:	680c1200 	stmdavs	ip, {r9, ip}
     340:	10000003 	andne	r0, r0, r3
     344:	4b040500 	blmi	10174c <startup-0x1fefe8b4>
     348:	04000003 	streq	r0, [r0], #-3
     34c:	05200801 	streq	r0, [r0, #-2049]!	; 0xfffff7ff
     350:	62090000 	andvs	r0, r9, #0
     354:	0a000003 	beq	368 <startup-0x1ffffc98>
     358:	00000362 	andeq	r0, r0, r2, ror #6
     35c:	00012e0a 	andeq	r2, r1, sl, lsl #28
     360:	04050000 	streq	r0, [r5], #-0
     364:	000002fc 	strdeq	r0, [r0], -ip
     368:	03520405 	cmpeq	r2, #83886080	; 0x5000000
     36c:	f2060000 	vhadd.s8	d0, d6, d0
     370:	12000006 	andne	r0, r0, #6
     374:	0002fc0d 	andeq	pc, r2, sp, lsl #24
     378:	06051100 	streq	r1, [r5], -r0, lsl #2
     37c:	03130000 	tsteq	r3, #0
     380:	00000275 	andeq	r0, r0, r5, ror r2
     384:	97140305 	ldrls	r0, [r4, -r5, lsl #6]
     388:	02042000 	andeq	r2, r4, #0
     38c:	0003b907 	andeq	fp, r3, r7, lsl #18
     390:	06601000 	strbteq	r1, [r0], -r0
     394:	25010000 	strcs	r0, [r1, #-0]
     398:	0000012e 	andeq	r0, r0, lr, lsr #2
     39c:	58540305 	ldmdapl	r4, {r0, r2, r8, r9}^
     3a0:	47102000 	ldrmi	r2, [r0, -r0]
     3a4:	01000001 	tsteq	r0, r1
     3a8:	00009e3d 	andeq	r9, r0, sp, lsr lr
     3ac:	9c030500 	cfstr32ls	mvfx0, [r3], {-0}
     3b0:	10200057 	eorne	r0, r0, r7, asr r0
     3b4:	000001d1 	ldrdeq	r0, [r0], -r1
     3b8:	009e3e01 	addseq	r3, lr, r1, lsl #28
     3bc:	03050000 	movweq	r0, #20480	; 0x5000
     3c0:	20005848 	andcs	r5, r0, r8, asr #16
     3c4:	0005b110 	andeq	fp, r5, r0, lsl r1
     3c8:	9e3f0100 	rsflse	f0, f7, f0
     3cc:	05000000 	streq	r0, [r0, #-0]
     3d0:	00585c03 	subseq	r5, r8, r3, lsl #24
     3d4:	67621220 	strbvs	r1, [r2, -r0, lsr #4]!
     3d8:	9e400100 	dvflss	f0, f0, f0
     3dc:	05000000 	streq	r0, [r0, #-0]
     3e0:	0057e403 	subseq	lr, r7, r3, lsl #8
     3e4:	07481020 	strbeq	r1, [r8, -r0, lsr #32]
     3e8:	43010000 	movwmi	r0, #4096	; 0x1000
     3ec:	0000009e 	muleq	r0, lr, r0
     3f0:	57c40305 	strbpl	r0, [r4, r5, lsl #6]
     3f4:	a6102000 	ldrge	r2, [r0], -r0
     3f8:	01000005 	tsteq	r0, r5
     3fc:	00009e44 	andeq	r9, r0, r4, asr #28
     400:	50030500 	andpl	r0, r3, r0, lsl #10
     404:	10200058 	eorne	r0, r0, r8, asr r0
     408:	00000089 	andeq	r0, r0, r9, lsl #1
     40c:	009e4501 	addseq	r4, lr, r1, lsl #10
     410:	03050000 	movweq	r0, #20480	; 0x5000
     414:	20005800 	andcs	r5, r0, r0, lsl #16
     418:	0003e910 	andeq	lr, r3, r0, lsl r9
     41c:	9e460100 	dvflss	f0, f6, f0
     420:	05000000 	streq	r0, [r0, #-0]
     424:	00586c03 	subseq	r6, r8, r3, lsl #24
     428:	05bd1020 	ldreq	r1, [sp, #32]!
     42c:	47010000 	strmi	r0, [r1, -r0]
     430:	0000009e 	muleq	r0, lr, r0
     434:	58380305 	ldmdapl	r8!, {r0, r2, r8, r9}
     438:	c5102000 	ldrgt	r2, [r0, #-0]
     43c:	01000004 	tsteq	r0, r4
     440:	00009e48 	andeq	r9, r0, r8, asr #28
     444:	4c030500 	cfstr32mi	mvfx0, [r3], {-0}
     448:	10200058 	eorne	r0, r0, r8, asr r0
     44c:	0000067e 	andeq	r0, r0, lr, ror r6
     450:	009e4901 	addseq	r4, lr, r1, lsl #18
     454:	03050000 	movweq	r0, #20480	; 0x5000
     458:	20005858 	andcs	r5, r0, r8, asr r8
     45c:	00020510 	andeq	r0, r2, r0, lsl r5
     460:	9e4a0100 	dvflse	f0, f2, f0
     464:	05000000 	streq	r0, [r0, #-0]
     468:	00581c03 	subseq	r1, r8, r3, lsl #24
     46c:	078d1020 	streq	r1, [sp, r0, lsr #32]
     470:	4b010000 	blmi	40478 <startup-0x1ffbfb88>
     474:	0000009e 	muleq	r0, lr, r0
     478:	57d40305 	ldrbpl	r0, [r4, r5, lsl #6]
     47c:	dd102000 	ldcle	0, cr2, [r0, #-0]
     480:	01000003 	tsteq	r0, r3
     484:	0000624d 	andeq	r6, r0, sp, asr #4
     488:	c8030500 	stmdagt	r3, {r8, sl}
     48c:	10200057 	eorne	r0, r0, r7, asr r0
     490:	00000267 	andeq	r0, r0, r7, ror #4
     494:	00624e01 	rsbeq	r4, r2, r1, lsl #28
     498:	03050000 	movweq	r0, #20480	; 0x5000
     49c:	20005820 	andcs	r5, r0, r0, lsr #16
     4a0:	0001ef10 	andeq	lr, r1, r0, lsl pc
     4a4:	624f0100 	subvs	r0, pc, #0, 2
     4a8:	05000000 	streq	r0, [r0, #-0]
     4ac:	0057e803 	subseq	lr, r7, r3, lsl #16
     4b0:	02431020 	subeq	r1, r3, #32
     4b4:	51010000 	mrspl	r0, (UNDEF: 1)
     4b8:	00000062 	andeq	r0, r0, r2, rrx
     4bc:	58600305 	stmdapl	r0!, {r0, r2, r8, r9}^
     4c0:	9f102000 	svcls	0x00102000
     4c4:	01000000 	mrseq	r0, (UNDEF: 0)
     4c8:	00006253 	andeq	r6, r0, r3, asr r2
     4cc:	a0030500 	andge	r0, r3, r0, lsl #10
     4d0:	10200057 	eorne	r0, r0, r7, asr r0
     4d4:	000004f9 	strdeq	r0, [r0], -r9
     4d8:	00625401 	rsbeq	r5, r2, r1, lsl #8
     4dc:	03050000 	movweq	r0, #20480	; 0x5000
     4e0:	2000583c 	andcs	r5, r0, ip, lsr r8
     4e4:	00036810 	andeq	r6, r3, r0, lsl r8
     4e8:	62550100 	subsvs	r0, r5, #0, 2
     4ec:	05000000 	streq	r0, [r0, #-0]
     4f0:	00581003 	subseq	r1, r8, r3
     4f4:	05081020 	streq	r1, [r8, #-32]	; 0xffffffe0
     4f8:	56010000 	strpl	r0, [r1], -r0
     4fc:	00000062 	andeq	r0, r0, r2, rrx
     500:	57d80305 	ldrbpl	r0, [r8, r5, lsl #6]
     504:	e3102000 	tst	r0, #0
     508:	01000006 	tsteq	r0, r6
     50c:	00006257 	andeq	r6, r0, r7, asr r2
     510:	b8030500 	stmdalt	r3, {r8, sl}
     514:	10200057 	eorne	r0, r0, r7, asr r0
     518:	000006b0 			; <UNDEFINED> instruction: 0x000006b0
     51c:	00625801 	rsbeq	r5, r2, r1, lsl #16
     520:	03050000 	movweq	r0, #20480	; 0x5000
     524:	200057f4 	strdcs	r5, [r0], -r4
     528:	0005f610 	andeq	pc, r5, r0, lsl r6	; <UNPREDICTABLE>
     52c:	62590100 	subsvs	r0, r9, #0, 2
     530:	05000000 	streq	r0, [r0, #-0]
     534:	00582c03 	subseq	r2, r8, r3, lsl #24
     538:	04d01020 	ldrbeq	r1, [r0], #32
     53c:	5a010000 	bpl	40544 <startup-0x1ffbfabc>
     540:	00000062 	andeq	r0, r0, r2, rrx
     544:	57ac0305 	strpl	r0, [ip, r5, lsl #6]!
     548:	28102000 	ldmdacs	r0, {sp}
     54c:	01000007 	tsteq	r0, r7
     550:	0000625b 	andeq	r6, r0, fp, asr r2
     554:	04030500 	streq	r0, [r3], #-1280	; 0xfffffb00
     558:	10200058 	eorne	r0, r0, r8, asr r0
     55c:	00000429 	andeq	r0, r0, r9, lsr #8
     560:	012e9101 			; <UNDEFINED> instruction: 0x012e9101
     564:	03050000 	movweq	r0, #20480	; 0x5000
     568:	2000573c 	andcs	r5, r0, ip, lsr r7
     56c:	0005d210 	andeq	sp, r5, r0, lsl r2
     570:	2e920100 	fmlcss	f0, f2, f0
     574:	05000001 	streq	r0, [r0, #-1]
     578:	009b1403 	addseq	r1, fp, r3, lsl #8
     57c:	62611320 	rsbvs	r1, r1, #32, 6	; 0x80000000
     580:	e4010073 	str	r0, [r1], #-115	; 0xffffff8d
     584:	00012e02 	andeq	r2, r1, r2, lsl #28
     588:	001e5800 	andseq	r5, lr, r0, lsl #16
     58c:	00001e20 	andeq	r1, r0, r0, lsr #28
     590:	a79c0100 	ldrge	r0, [ip, r0, lsl #2]
     594:	14000005 	strne	r0, [r0], #-5
     598:	00000483 	andeq	r0, r0, r3, lsl #9
     59c:	2e02e401 	cdpcs	4, 0, cr14, cr2, cr1, {0}
     5a0:	02000001 	andeq	r0, r0, #1
     5a4:	15007491 	strne	r7, [r0, #-1169]	; 0xfffffb6f
     5a8:	00000788 	andeq	r0, r0, r8, lsl #15
     5ac:	01fc9301 	mvnseq	r9, r1, lsl #6
     5b0:	1c5c2000 	mrane	r2, ip, acc0
     5b4:	9c010000 	stcls	0, cr0, [r1], {-0}
     5b8:	00000a8c 	andeq	r0, r0, ip, lsl #21
     5bc:	00043111 	andeq	r3, r4, r1, lsl r1
     5c0:	4c990100 	ldfmis	f0, [r9], {0}
     5c4:	03000001 	movweq	r0, #1
     5c8:	117f9c91 			; <UNDEFINED> instruction: 0x117f9c91
     5cc:	00000689 	andeq	r0, r0, r9, lsl #13
     5d0:	00a49a01 	adceq	r9, r4, r1, lsl #20
     5d4:	91030000 	mrsls	r0, (UNDEF: 3)
     5d8:	98117f90 	ldmdals	r1, {r4, r7, r8, r9, sl, fp, ip, sp, lr}
     5dc:	01000007 	tsteq	r0, r7
     5e0:	000a8c9b 	muleq	sl, fp, ip
     5e4:	84910300 	ldrhi	r0, [r1], #768	; 0x300
     5e8:	0561117f 	strbeq	r1, [r1, #-383]!	; 0xfffffe81
     5ec:	a3010000 	movwge	r0, #4096	; 0x1000
     5f0:	0000014c 	andeq	r0, r0, ip, asr #2
     5f4:	7ee09103 	urdvcs	f1, f3
     5f8:	0001b811 	andeq	fp, r1, r1, lsl r8
     5fc:	a4a40100 	strtge	r0, [r4], #256	; 0x100
     600:	03000000 	movweq	r0, #0
     604:	117ed491 			; <UNDEFINED> instruction: 0x117ed491
     608:	00000654 	andeq	r0, r0, r4, asr r6
     60c:	0a8ca501 	beq	fe329a18 <firstTime.4108+0xde3144c0>
     610:	91030000 	mrsls	r0, (UNDEF: 3)
     614:	ef117ec8 	svc	0x00117ec8
     618:	01000002 	tsteq	r0, r2
     61c:	00014cac 	andeq	r4, r1, ip, lsr #25
     620:	a4910300 	ldrge	r0, [r1], #768	; 0x300
     624:	049a117e 	ldreq	r1, [sl], #382	; 0x17e
     628:	ad010000 	stcge	0, cr0, [r1, #-0]
     62c:	000000a4 	andeq	r0, r0, r4, lsr #1
     630:	7e989103 	cosvce	f1, f3
     634:	0006cd11 	andeq	ip, r6, r1, lsl sp
     638:	8cae0100 	stfhis	f0, [lr]
     63c:	0300000a 	movweq	r0, #10
     640:	117e8c91 			; <UNDEFINED> instruction: 0x117e8c91
     644:	00000164 	andeq	r0, r0, r4, ror #2
     648:	014cb501 	cmpeq	ip, r1, lsl #10
     64c:	91030000 	mrsls	r0, (UNDEF: 3)
     650:	2a117de8 	bcs	45fdf8 <startup-0x1fba0208>
     654:	01000006 	tsteq	r0, r6
     658:	0000a4b6 			; <UNDEFINED> instruction: 0x0000a4b6
     65c:	dc910300 	ldcle	3, cr0, [r1], {0}
     660:	019b117d 	orrseq	r1, fp, sp, ror r1
     664:	b7010000 	strlt	r0, [r1, -r0]
     668:	00000a8c 	andeq	r0, r0, ip, lsl #21
     66c:	7dd09103 	ldfvcp	f1, [r0, #12]
     670:	00216111 	eoreq	r6, r1, r1, lsl r1
     674:	4cbe0100 	ldfmis	f0, [lr]
     678:	03000001 	movweq	r0, #1
     67c:	117dac91 			; <UNDEFINED> instruction: 0x117dac91
     680:	00002259 	andeq	r2, r0, r9, asr r2
     684:	014cc301 	cmpeq	ip, r1, lsl #6
     688:	91030000 	mrsls	r0, (UNDEF: 3)
     68c:	93117d88 	tstls	r1, #136, 26	; 0x2200
     690:	01000001 	tsteq	r0, r1
     694:	00014cca 	andeq	r4, r1, sl, asr #25
     698:	e4910300 	ldr	r0, [r1], #768	; 0x300
     69c:	2016117c 	andscs	r1, r6, ip, ror r1
     6a0:	cf010000 	svcgt	0x00010000
     6a4:	0000014c 	andeq	r0, r0, ip, asr #2
     6a8:	7cc09103 	stfvcp	f1, [r0], {3}
     6ac:	00034f11 	andeq	r4, r3, r1, lsl pc
     6b0:	4cd40100 	ldfmie	f0, [r4], {0}
     6b4:	03000001 	movweq	r0, #1
     6b8:	167c9c91 			; <UNDEFINED> instruction: 0x167c9c91
     6bc:	00000323 	andeq	r0, r0, r3, lsr #6
     6c0:	012ed501 			; <UNDEFINED> instruction: 0x012ed501
     6c4:	06cc0000 	strbeq	r0, [ip], r0
     6c8:	00170000 	andseq	r0, r7, r0
     6cc:	00022b11 	andeq	r2, r2, r1, lsl fp
     6d0:	4cd70100 	ldfmie	f0, [r7], {0}
     6d4:	03000001 	movweq	r0, #1
     6d8:	117bf891 			; <UNDEFINED> instruction: 0x117bf891
     6dc:	00000455 	andeq	r0, r0, r5, asr r4
     6e0:	014cde01 	cmpeq	ip, r1, lsl #28
     6e4:	91030000 	mrsls	r0, (UNDEF: 3)
     6e8:	04167bd4 	ldreq	r7, [r6], #-3028	; 0xfffff42c
     6ec:	01000004 	tsteq	r0, r4
     6f0:	00012edf 	ldrdeq	r2, [r1], -pc	; <UNPREDICTABLE>
     6f4:	0006fb00 	andeq	pc, r6, r0, lsl #22
     6f8:	11001700 	tstne	r0, r0, lsl #14
     6fc:	00000d8e 	andeq	r0, r0, lr, lsl #27
     700:	014ce401 	cmpeq	ip, r1, lsl #8
     704:	91030000 	mrsls	r0, (UNDEF: 3)
     708:	41117bb0 			; <UNDEFINED> instruction: 0x41117bb0
     70c:	01000006 	tsteq	r0, r6
     710:	00014cea 	andeq	r4, r1, sl, ror #25
     714:	8c910300 	ldchi	3, cr0, [r1], {0}
     718:	063c167b 			; <UNDEFINED> instruction: 0x063c167b
     71c:	eb010000 	bl	40724 <startup-0x1ffbf8dc>
     720:	0000012e 	andeq	r0, r0, lr, lsr #2
     724:	0000072a 	andeq	r0, r0, sl, lsr #14
     728:	9c110017 	ldcls	0, cr0, [r1], {23}
     72c:	01000003 	tsteq	r0, r3
     730:	00014cf0 	strdeq	r4, [r1], -r0
     734:	e8910300 	ldm	r1, {r8, r9}
     738:	0397167a 	orrseq	r1, r7, #127926272	; 0x7a00000
     73c:	f1010000 	setend	le
     740:	0000012e 	andeq	r0, r0, lr, lsr #2
     744:	0000074a 	andeq	r0, r0, sl, asr #14
     748:	44180017 	ldrmi	r0, [r8], #-23	; 0xffffffe9
     74c:	01005049 	tsteq	r0, r9, asr #32
     750:	00014cf4 	strdeq	r4, [r1], -r4	; <UNPREDICTABLE>
     754:	c4910300 	ldrgt	r0, [r1], #768	; 0x300
     758:	0056117a 	subseq	r1, r6, sl, ror r1
     75c:	f8010000 			; <UNDEFINED> instruction: 0xf8010000
     760:	0000014c 	andeq	r0, r0, ip, asr #2
     764:	7aa09103 	bvc	fe824b78 <firstTime.4108+0xde80f620>
     768:	00066c11 	andeq	r6, r6, r1, lsl ip
     76c:	4cfe0100 	ldfmie	f0, [lr]
     770:	03000001 	movweq	r0, #1
     774:	1979fc91 	ldmdbne	r9!, {r0, r4, r7, sl, fp, ip, sp, lr, pc}^
     778:	00000672 	andeq	r0, r0, r2, ror r6
     77c:	4c010001 	stcmi	0, cr0, [r1], {1}
     780:	03000001 	movweq	r0, #1
     784:	1979d891 	ldmdbne	r9!, {r0, r4, r7, fp, ip, lr, pc}^
     788:	00000678 	andeq	r0, r0, r8, ror r6
     78c:	4c010201 	sfmmi	f0, 4, [r1], {1}
     790:	03000001 	movweq	r0, #1
     794:	1979b491 	ldmdbne	r9!, {r0, r4, r7, sl, ip, sp, pc}^
     798:	00000231 	andeq	r0, r0, r1, lsr r2
     79c:	4c010401 	cfstrsmi	mvf0, [r1], {1}
     7a0:	03000001 	movweq	r0, #1
     7a4:	19799091 	ldmdbne	r9!, {r0, r4, r7, ip, pc}^
     7a8:	0000018d 	andeq	r0, r0, sp, lsl #3
     7ac:	4c010701 	stcmi	7, cr0, [r1], {1}
     7b0:	03000001 	movweq	r0, #1
     7b4:	1978ec91 	ldmdbne	r8!, {r0, r4, r7, sl, fp, sp, lr, pc}^
     7b8:	000002f8 	strdeq	r0, [r0], -r8
     7bc:	4c010c01 	stcmi	12, cr0, [r1], {1}
     7c0:	03000001 	movweq	r0, #1
     7c4:	1978c891 	ldmdbne	r8!, {r0, r4, r7, fp, lr, pc}^
     7c8:	00000022 	andeq	r0, r0, r2, lsr #32
     7cc:	4c010f01 	stcmi	15, cr0, [r1], {1}
     7d0:	03000001 	movweq	r0, #1
     7d4:	1978a491 	ldmdbne	r8!, {r0, r4, r7, sl, sp, pc}^
     7d8:	00000703 	andeq	r0, r0, r3, lsl #14
     7dc:	9c011201 	sfmls	f1, 4, [r1], {1}
     7e0:	0300000a 	movweq	r0, #10
     7e4:	1977b891 	ldmdbne	r7!, {r0, r4, r7, fp, ip, sp, pc}^
     7e8:	0000077b 	andeq	r0, r0, fp, ror r7
     7ec:	6e012a01 	vmlavs.f32	s4, s2, s2
     7f0:	03000003 	movweq	r0, #3
     7f4:	1977a491 	ldmdbne	r7!, {r0, r4, r7, sl, sp, pc}^
     7f8:	00000489 	andeq	r0, r0, r9, lsl #9
     7fc:	6e012b01 	vmlavs.f64	d2, d1, d1
     800:	03000003 	movweq	r0, #3
     804:	19779091 	ldmdbne	r7!, {r0, r4, r7, ip, pc}^
     808:	0000005d 	andeq	r0, r0, sp, asr r0
     80c:	6e012c01 	cdpvs	12, 0, cr2, cr1, cr1, {0}
     810:	03000003 	movweq	r0, #3
     814:	1976fc91 	ldmdbne	r6!, {r0, r4, r7, sl, fp, ip, sp, lr, pc}^
     818:	000001cb 	andeq	r0, r0, fp, asr #3
     81c:	6e012d01 	cdpvs	13, 0, cr2, cr1, cr1, {0}
     820:	03000003 	movweq	r0, #3
     824:	1976e891 	ldmdbne	r6!, {r0, r4, r7, fp, sp, lr, pc}^
     828:	000001ff 	strdeq	r0, [r0], -pc	; <UNPREDICTABLE>
     82c:	6e012e01 	cdpvs	14, 0, cr2, cr1, cr1, {0}
     830:	03000003 	movweq	r0, #3
     834:	1976d491 	ldmdbne	r6!, {r0, r4, r7, sl, ip, lr, pc}^
     838:	0000024a 	andeq	r0, r0, sl, asr #4
     83c:	6e012f01 	cdpvs	15, 0, cr2, cr1, cr1, {0}
     840:	03000003 	movweq	r0, #3
     844:	1976c091 	ldmdbne	r6!, {r0, r4, r7, lr, pc}^
     848:	0000020f 	andeq	r0, r0, pc, lsl #4
     84c:	6e013001 	cdpvs	0, 0, cr3, cr1, cr1, {0}
     850:	03000003 	movweq	r0, #3
     854:	1976ac91 	ldmdbne	r6!, {r0, r4, r7, sl, fp, sp, pc}^
     858:	00000215 	andeq	r0, r0, r5, lsl r2
     85c:	6e013101 	adfvss	f3, f1, f1
     860:	03000003 	movweq	r0, #3
     864:	19769891 	ldmdbne	r6!, {r0, r4, r7, fp, ip, pc}^
     868:	00000290 	muleq	r0, r0, r2
     86c:	6e013201 	cdpvs	2, 0, cr3, cr1, cr1, {0}
     870:	03000003 	movweq	r0, #3
     874:	19768491 	ldmdbne	r6!, {r0, r4, r7, sl, pc}^
     878:	00000278 	andeq	r0, r0, r8, ror r2
     87c:	6e013301 	cdpvs	3, 0, cr3, cr1, cr1, {0}
     880:	03000003 	movweq	r0, #3
     884:	1975f091 	ldmdbne	r5!, {r0, r4, r7, ip, sp, lr, pc}^
     888:	00000250 	andeq	r0, r0, r0, asr r2
     88c:	6e013401 	cdpvs	4, 0, cr3, cr1, cr1, {0}
     890:	03000003 	movweq	r0, #3
     894:	1975dc91 	ldmdbne	r5!, {r0, r4, r7, sl, fp, ip, lr, pc}^
     898:	00000296 	muleq	r0, r6, r2
     89c:	6e013501 	cfsh32vs	mvfx3, mvfx1, #1
     8a0:	03000003 	movweq	r0, #3
     8a4:	1975c891 	ldmdbne	r5!, {r0, r4, r7, fp, lr, pc}^
     8a8:	00000766 	andeq	r0, r0, r6, ror #14
     8ac:	6e013601 	cfmadd32vs	mvax0, mvfx3, mvfx1, mvfx1
     8b0:	03000003 	movweq	r0, #3
     8b4:	1975b491 	ldmdbne	r5!, {r0, r4, r7, sl, ip, sp, pc}^
     8b8:	0000076d 	andeq	r0, r0, sp, ror #14
     8bc:	6e013701 	cdpvs	7, 0, cr3, cr1, cr1, {0}
     8c0:	03000003 	movweq	r0, #3
     8c4:	1975a091 	ldmdbne	r5!, {r0, r4, r7, sp, pc}^
     8c8:	000006a9 	andeq	r0, r0, r9, lsr #13
     8cc:	6e013801 	cdpvs	8, 0, cr3, cr1, cr1, {0}
     8d0:	03000003 	movweq	r0, #3
     8d4:	19758c91 	ldmdbne	r5!, {r0, r4, r7, sl, fp, pc}^
     8d8:	00000754 	andeq	r0, r0, r4, asr r7
     8dc:	2e014d01 	cdpcs	13, 0, cr4, cr1, cr1, {0}
     8e0:	02000001 	andeq	r0, r0, #1
     8e4:	4f196c91 	svcmi	0x00196c91
     8e8:	01000001 	tsteq	r0, r1
     8ec:	012e014e 			; <UNDEFINED> instruction: 0x012e014e
     8f0:	91020000 	mrsls	r0, (UNDEF: 2)
     8f4:	02371968 	eorseq	r1, r7, #104, 18	; 0x1a0000
     8f8:	4f010000 	svcmi	0x00010000
     8fc:	00012e01 	andeq	r2, r1, r1, lsl #28
     900:	64910200 	ldrvs	r0, [r1], #512	; 0x200
     904:	00007619 	andeq	r7, r0, r9, lsl r6
     908:	01500100 	cmpeq	r0, r0, lsl #2
     90c:	0000012e 	andeq	r0, r0, lr, lsr #2
     910:	19609102 	stmdbne	r0!, {r1, r8, ip, pc}^
     914:	000001a8 	andeq	r0, r0, r8, lsr #3
     918:	2e015101 	adfcss	f5, f1, f1
     91c:	02000001 	andeq	r0, r0, #1
     920:	c6195c91 			; <UNDEFINED> instruction: 0xc6195c91
     924:	01000006 	tsteq	r0, r6
     928:	012e0152 			; <UNDEFINED> instruction: 0x012e0152
     92c:	91020000 	mrsls	r0, (UNDEF: 2)
     930:	06d91958 			; <UNDEFINED> instruction: 0x06d91958
     934:	53010000 	movwpl	r0, #4096	; 0x1000
     938:	00012e01 	andeq	r2, r1, r1, lsl #28
     93c:	54910200 	ldrpl	r0, [r1], #512	; 0x200
     940:	00063619 	andeq	r3, r6, r9, lsl r6
     944:	01540100 	cmpeq	r4, r0, lsl #2
     948:	0000012e 	andeq	r0, r0, lr, lsr #2
     94c:	19509102 	ldmdbne	r0, {r1, r8, ip, pc}^
     950:	00000000 	andeq	r0, r0, r0
     954:	2e015501 	cfsh32cs	mvfx5, mvfx1, #1
     958:	02000001 	andeq	r0, r0, #1
     95c:	48194c91 	ldmdami	r9, {r0, r4, r7, sl, fp, lr}
     960:	01000006 	tsteq	r0, r6
     964:	012e0156 			; <UNDEFINED> instruction: 0x012e0156
     968:	91020000 	mrsls	r0, (UNDEF: 2)
     96c:	00661948 	rsbeq	r1, r6, r8, asr #18
     970:	57010000 	strpl	r0, [r1, -r0]
     974:	00012e01 	andeq	r2, r1, r1, lsl #28
     978:	44910200 	ldrmi	r0, [r1], #512	; 0x200
     97c:	00069b19 	andeq	r9, r6, r9, lsl fp
     980:	01580100 	cmpeq	r8, r0, lsl #2
     984:	0000012e 	andeq	r0, r0, lr, lsr #2
     988:	1a409102 	bne	1024d98 <startup-0x1efdb268>
     98c:	200009c6 	andcs	r0, r0, r6, asr #19
     990:	0000142e 	andeq	r1, r0, lr, lsr #8
     994:	0002e519 	andeq	lr, r2, r9, lsl r5
     998:	017e0100 	cmneq	lr, r0, lsl #2
     99c:	0000012e 	andeq	r0, r0, lr, lsr #2
     9a0:	9b1c0305 	blls	7015bc <startup-0x1f8fea44>
     9a4:	ac192000 	ldcge	0, cr2, [r9], {-0}
     9a8:	01000004 	tsteq	r0, r4
     9ac:	012e017f 			; <UNDEFINED> instruction: 0x012e017f
     9b0:	03050000 	movweq	r0, #20480	; 0x5000
     9b4:	20009b20 	andcs	r9, r0, r0, lsr #22
     9b8:	0003cc19 	andeq	ip, r3, r9, lsl ip
     9bc:	01800100 	orreq	r0, r0, r0, lsl #2
     9c0:	0000012e 	andeq	r0, r0, lr, lsr #2
     9c4:	9b180305 	blls	6015e0 <startup-0x1f9fea20>
     9c8:	691b2000 	ldmdbvs	fp, {sp}
     9cc:	01cb0100 	biceq	r0, fp, r0, lsl #2
     9d0:	0000012e 	andeq	r0, r0, lr, lsr #2
     9d4:	57400305 	strbpl	r0, [r0, -r5, lsl #6]
     9d8:	78192000 	ldmdavc	r9, {sp}
     9dc:	01000004 	tsteq	r0, r4
     9e0:	012e0205 			; <UNDEFINED> instruction: 0x012e0205
     9e4:	03050000 	movweq	r0, #20480	; 0x5000
     9e8:	20009b24 	andcs	r9, r0, r4, lsr #22
     9ec:	0005e119 	andeq	lr, r5, r9, lsl r1
     9f0:	024b0100 	subeq	r0, fp, #0, 2
     9f4:	0000012e 	andeq	r0, r0, lr, lsr #2
     9f8:	57480305 	strbpl	r0, [r8, -r5, lsl #6]
     9fc:	6a1b2000 	bvs	6c8a04 <startup-0x1f9375fc>
     a00:	024c0100 	subeq	r0, ip, #0, 2
     a04:	0000012e 	andeq	r0, r0, lr, lsr #2
     a08:	57440305 	strbpl	r0, [r4, -r5, lsl #6]
     a0c:	1b192000 	blne	648a14 <startup-0x1f9b75ec>
     a10:	01000002 	tsteq	r0, r2
     a14:	012e0257 			; <UNDEFINED> instruction: 0x012e0257
     a18:	03050000 	movweq	r0, #20480	; 0x5000
     a1c:	2000574c 	andcs	r5, r0, ip, asr #14
     a20:	01006b1b 	tsteq	r0, fp, lsl fp
     a24:	012e0258 			; <UNDEFINED> instruction: 0x012e0258
     a28:	03050000 	movweq	r0, #20480	; 0x5000
     a2c:	20005764 	andcs	r5, r0, r4, ror #14
     a30:	00016e19 	andeq	r6, r1, r9, lsl lr
     a34:	02630100 	rsbeq	r0, r3, #0, 2
     a38:	0000012e 	andeq	r0, r0, lr, lsr #2
     a3c:	57540305 	ldrbpl	r0, [r4, -r5, lsl #6]
     a40:	41192000 	tstmi	r9, r0
     a44:	01000003 	tsteq	r0, r3
     a48:	012e0264 			; <UNDEFINED> instruction: 0x012e0264
     a4c:	03050000 	movweq	r0, #20480	; 0x5000
     a50:	20005750 	andcs	r5, r0, r0, asr r7
     a54:	0005c719 	andeq	ip, r5, r9, lsl r7
     a58:	026e0100 	rsbeq	r0, lr, #0, 2
     a5c:	0000012e 	andeq	r0, r0, lr, lsr #2
     a60:	575c0305 	ldrbpl	r0, [ip, -r5, lsl #6]
     a64:	7f192000 	svcvc	0x00192000
     a68:	01000003 	tsteq	r0, r3
     a6c:	012e026f 			; <UNDEFINED> instruction: 0x012e026f
     a70:	03050000 	movweq	r0, #20480	; 0x5000
     a74:	20005758 	andcs	r5, r0, r8, asr r7
     a78:	001d8419 	andseq	r8, sp, r9, lsl r4
     a7c:	028e0100 	addeq	r0, lr, #0, 2
     a80:	0000012e 	andeq	r0, r0, lr, lsr #2
     a84:	57600305 	strbpl	r0, [r0, -r5, lsl #6]!
     a88:	00002000 	andeq	r2, r0, r0
     a8c:	0000a40b 	andeq	sl, r0, fp, lsl #8
     a90:	000a9c00 	andeq	r9, sl, r0, lsl #24
     a94:	019a0f00 	orrseq	r0, sl, r0, lsl #30
     a98:	00000000 	andeq	r0, r0, r0
     a9c:	00014c0b 	andeq	r4, r1, fp, lsl #24
     aa0:	000aac00 	andeq	sl, sl, r0, lsl #24
     aa4:	019a0f00 	orrseq	r0, sl, r0, lsl #30
     aa8:	00020000 	andeq	r0, r2, r0
     aac:	0004ed15 	andeq	lr, r4, r5, lsl sp
     ab0:	345d0100 	ldrbcc	r0, [sp], #-256	; 0xffffff00
     ab4:	c8200000 	stmdagt	r0!, {}	; <UNPREDICTABLE>
     ab8:	01000001 	tsteq	r0, r1
     abc:	000b4e9c 	muleq	fp, ip, lr
     ac0:	04de1100 	ldrbeq	r1, [lr], #256	; 0x100
     ac4:	5e010000 	cdppl	0, 0, cr0, cr1, cr0, {0}
     ac8:	0000009e 	muleq	r0, lr, r0
     acc:	11749102 	cmnne	r4, r2, lsl #2
     ad0:	0000029c 	muleq	r0, ip, r2
     ad4:	009e6201 	addseq	r6, lr, r1, lsl #4
     ad8:	91020000 	mrsls	r0, (UNDEF: 2)
     adc:	02ac1170 	adceq	r1, ip, #112, 2
     ae0:	66010000 	strvs	r0, [r1], -r0
     ae4:	0000009e 	muleq	r0, lr, r0
     ae8:	116c9102 	cmnne	ip, r2, lsl #2
     aec:	00000491 	muleq	r0, r1, r4
     af0:	009e6a01 	addseq	r6, lr, r1, lsl #20
     af4:	91020000 	mrsls	r0, (UNDEF: 2)
     af8:	032f1168 			; <UNDEFINED> instruction: 0x032f1168
     afc:	6e010000 	cdpvs	0, 0, cr0, cr1, cr0, {0}
     b00:	0000009e 	muleq	r0, lr, r0
     b04:	11649102 	cmnne	r4, r2, lsl #2
     b08:	00000338 	andeq	r0, r0, r8, lsr r3
     b0c:	009e7201 	addseq	r7, lr, r1, lsl #4
     b10:	91020000 	mrsls	r0, (UNDEF: 2)
     b14:	015b1160 	cmpeq	fp, r0, ror #2
     b18:	76010000 	strvc	r0, [r1], -r0
     b1c:	0000009e 	muleq	r0, lr, r0
     b20:	115c9102 	cmpne	ip, r2, lsl #2
     b24:	00000356 	andeq	r0, r0, r6, asr r3
     b28:	009e7a01 	addseq	r7, lr, r1, lsl #20
     b2c:	91020000 	mrsls	r0, (UNDEF: 2)
     b30:	035f1158 	cmpeq	pc, #88, 2
     b34:	7d010000 	stcvc	0, cr0, [r1, #-0]
     b38:	0000009e 	muleq	r0, lr, r0
     b3c:	11549102 	cmpne	r4, r2, lsl #2
     b40:	00000095 	muleq	r0, r5, r0
     b44:	009e8001 	addseq	r8, lr, r1
     b48:	91020000 	mrsls	r0, (UNDEF: 2)
     b4c:	dc1c0050 	ldcle	0, cr0, [ip], {80}	; 0x50
     b50:	01000002 	tsteq	r0, r2
     b54:	00001029 	andeq	r1, r0, r9, lsr #32
     b58:	00002420 	andeq	r2, r0, r0, lsr #8
     b5c:	1d9c0100 	ldfnes	f0, [ip]
     b60:	000001c3 	andeq	r0, r0, r3, asr #3
     b64:	00003301 	andeq	r3, r0, r1, lsl #6
     b68:	000c2000 	andeq	r2, ip, r0
     b6c:	9c010000 	stcls	0, cr0, [r1], {-0}
     b70:	0001e000 	andeq	lr, r1, r0
     b74:	9e000400 	cfcpysls	mvf0, mvf0
     b78:	04000001 	streq	r0, [r0], #-1
     b7c:	0000af01 	andeq	sl, r0, r1, lsl #30
     b80:	07b70c00 	ldreq	r0, [r7, r0, lsl #24]!
     b84:	1e780000 	cdpne	0, 7, cr0, cr8, cr0, {0}
     b88:	00562000 	subseq	r2, r6, r0
     b8c:	04690000 	strbteq	r0, [r9], #-0
     b90:	0c020000 	stceq	0, cr0, [r2], {-0}
     b94:	004e0502 	subeq	r0, lr, r2, lsl #10
     b98:	91030000 	mrsls	r0, (UNDEF: 3)
     b9c:	02000003 	andeq	r0, r0, #3
     ba0:	00004e07 	andeq	r4, r0, r7, lsl #28
     ba4:	74030000 	strvc	r0, [r3], #-0
     ba8:	02000007 	andeq	r0, r0, #7
     bac:	00004e08 	andeq	r4, r0, r8, lsl #28
     bb0:	6a030400 	bvs	c1bb8 <startup-0x1ff3e448>
     bb4:	0200001a 	andeq	r0, r0, #26
     bb8:	00005509 	andeq	r5, r0, r9, lsl #10
     bbc:	04000800 	streq	r0, [r0], #-2048	; 0xfffff800
     bc0:	03bf0704 			; <UNDEFINED> instruction: 0x03bf0704
     bc4:	04050000 	streq	r0, [r5], #-0
     bc8:	0000005b 	andeq	r0, r0, fp, asr r0
     bcc:	17080104 	strne	r0, [r8, -r4, lsl #2]
     bd0:	06000005 	streq	r0, [r0], -r5
     bd4:	00001bd4 	ldrdeq	r1, [r0], -r4
     bd8:	00210a02 	eoreq	r0, r1, r2, lsl #20
     bdc:	34070000 	strcc	r0, [r7], #-0
     be0:	0c000000 	stceq	0, cr0, [r0], {-0}
     be4:	009e0603 	addseq	r0, lr, r3, lsl #12
     be8:	0d030000 	stceq	0, cr0, [r3, #-0]
     bec:	03000006 	movweq	r0, #6
     bf0:	00009e07 	andeq	r9, r0, r7, lsl #28
     bf4:	3b030000 	blcc	c0bfc <startup-0x1ff3f404>
     bf8:	03000000 	movweq	r0, #0
     bfc:	00009e08 	andeq	r9, r0, r8, lsl #28
     c00:	30030400 	andcc	r0, r3, r0, lsl #8
     c04:	03000000 	movweq	r0, #0
     c08:	00009e09 	andeq	r9, r0, r9, lsl #28
     c0c:	05000800 	streq	r0, [r0, #-2048]	; 0xfffff800
     c10:	00006204 	andeq	r6, r0, r4, lsl #4
     c14:	15580600 	ldrbne	r0, [r8, #-1536]	; 0xfffffa00
     c18:	0a030000 	beq	c0c20 <startup-0x1ff3f3e0>
     c1c:	0000006d 	andeq	r0, r0, sp, rrx
     c20:	00073707 	andeq	r3, r7, r7, lsl #14
     c24:	06042400 	streq	r2, [r4], -r0, lsl #8
     c28:	00000128 	andeq	r0, r0, r8, lsr #2
     c2c:	0004a503 	andeq	sl, r4, r3, lsl #10
     c30:	28070400 	stmdacs	r7, {sl}
     c34:	00000001 	andeq	r0, r0, r1
     c38:	00074303 	andeq	r4, r7, r3, lsl #6
     c3c:	2e080400 	cfcpyscs	mvf0, mvf8
     c40:	04000001 	streq	r0, [r0], #-1
     c44:	00069603 	andeq	r9, r6, r3, lsl #12
     c48:	2e090400 	cfcpyscs	mvf0, mvf9
     c4c:	08000001 	stmdaeq	r0, {r0}
     c50:	0006bf03 	andeq	fp, r6, r3, lsl #30
     c54:	460c0400 	strmi	r0, [ip], -r0, lsl #8
     c58:	0c000001 	stceq	0, cr0, [r0], {1}
     c5c:	00037803 	andeq	r7, r3, r3, lsl #16
     c60:	460d0400 	strmi	r0, [sp], -r0, lsl #8
     c64:	10000001 	andne	r0, r0, r1
     c68:	0004b703 	andeq	fp, r4, r3, lsl #14
     c6c:	2e100400 	cfmulscs	mvf0, mvf0, mvf0
     c70:	14000001 	strne	r0, [r0], #-1
     c74:	00008003 	andeq	r8, r0, r3
     c78:	2e110400 	cfmulscs	mvf0, mvf1, mvf0
     c7c:	18000001 	stmdane	r0, {r0}
     c80:	00040f03 	andeq	r0, r4, r3, lsl #30
     c84:	2e120400 	cfmulscs	mvf0, mvf2, mvf0
     c88:	1c000001 	stcne	0, cr0, [r0], {1}
     c8c:	00041f03 	andeq	r1, r4, r3, lsl #30
     c90:	2e130400 	cfmulscs	mvf0, mvf3, mvf0
     c94:	20000001 	andcs	r0, r0, r1
     c98:	a4040500 	strge	r0, [r4], #-1280	; 0xfffffb00
     c9c:	08000000 	stmdaeq	r0, {}	; <UNPREDICTABLE>
     ca0:	6e690504 	cdpvs	5, 6, cr0, cr9, cr4, {0}
     ca4:	40090074 	andmi	r0, r9, r4, ror r0
     ca8:	0a000001 	beq	cb4 <startup-0x1ffff34c>
     cac:	00000140 	andeq	r0, r0, r0, asr #2
     cb0:	af040500 	svcge	0x00040500
     cb4:	05000000 	streq	r0, [r0, #-0]
     cb8:	00013504 	andeq	r3, r1, r4, lsl #10
     cbc:	07380600 	ldreq	r0, [r8, -r0, lsl #12]!
     cc0:	15040000 	strne	r0, [r4, #-0]
     cc4:	000000af 	andeq	r0, r0, pc, lsr #1
     cc8:	0001620b 	andeq	r6, r1, fp, lsl #4
     ccc:	00016200 	andeq	r6, r1, r0, lsl #4
     cd0:	05000c00 	streq	r0, [r0, #-3072]	; 0xfffff400
     cd4:	00014c04 	andeq	r4, r1, r4, lsl #24
     cd8:	059a0d00 	ldreq	r0, [sl, #3328]	; 0xd00
     cdc:	1c040000 	stcne	0, cr0, [r4], {-0}
     ce0:	00000157 	andeq	r0, r0, r7, asr r1
     ce4:	00045a0d 	andeq	r5, r4, sp, lsl #20
     ce8:	2e1d0400 	cfmulscs	mvf0, mvf13, mvf0
     cec:	04000001 	streq	r0, [r0], #-1
     cf0:	043c0704 	ldrteq	r0, [ip], #-1796	; 0xfffff8fc
     cf4:	680e0000 	stmdavs	lr, {}	; <UNPREDICTABLE>
     cf8:	01000001 	tsteq	r0, r1
     cfc:	70030503 	andvc	r0, r3, r3, lsl #10
     d00:	0e200058 	mcreq	0, 1, r0, cr0, cr8, {2}
     d04:	00000173 	andeq	r0, r0, r3, ror r1
     d08:	03050401 	movweq	r0, #21505	; 0x5401
     d0c:	20005768 	andcs	r5, r0, r8, ror #14
     d10:	0007a60f 	andeq	sl, r7, pc, lsl #12
     d14:	880c0100 	stmdahi	ip, {r8}
     d18:	4620001e 			; <UNDEFINED> instruction: 0x4620001e
     d1c:	01000000 	mrseq	r0, (UNDEF: 0)
     d20:	0001c39c 	muleq	r1, ip, r3
     d24:	07ea1000 	strbeq	r1, [sl, r0]!
     d28:	0c010000 	stceq	0, cr0, [r1], {-0}
     d2c:	00000162 	andeq	r0, r0, r2, ror #2
     d30:	00749102 	rsbseq	r9, r4, r2, lsl #2
     d34:	00037811 	andeq	r7, r3, r1, lsl r8
     d38:	78070100 	stmdavc	r7, {r8}
     d3c:	1020001e 	eorne	r0, r0, lr, lsl r0
     d40:	01000000 	mrseq	r0, (UNDEF: 0)
     d44:	07ea109c 			; <UNDEFINED> instruction: 0x07ea109c
     d48:	07010000 	streq	r0, [r1, -r0]
     d4c:	00000162 	andeq	r0, r0, r2, ror #2
     d50:	00749102 	rsbseq	r9, r4, r2, lsl #2
     d54:	00052b00 	andeq	r2, r5, r0, lsl #22
     d58:	84000400 	strhi	r0, [r0], #-1024	; 0xfffffc00
     d5c:	04000002 	streq	r0, [r0], #-2
     d60:	0000af01 	andeq	sl, r0, r1, lsl #30
     d64:	0a2a0c00 	beq	a83d6c <startup-0x1f57c294>
     d68:	1ed00000 	cdpne	0, 13, cr0, cr0, cr0, {0}
     d6c:	02a82000 	adceq	r2, r8, #0
     d70:	04f70000 	ldrbteq	r0, [r7], #0
     d74:	0c020000 	stceq	0, cr0, [r2], {-0}
     d78:	004e0502 	subeq	r0, lr, r2, lsl #10
     d7c:	91030000 	mrsls	r0, (UNDEF: 3)
     d80:	02000003 	andeq	r0, r0, #3
     d84:	00004e07 	andeq	r4, r0, r7, lsl #28
     d88:	74030000 	strvc	r0, [r3], #-0
     d8c:	02000007 	andeq	r0, r0, #7
     d90:	00004e08 	andeq	r4, r0, r8, lsl #28
     d94:	6a030400 	bvs	c1d9c <startup-0x1ff3e264>
     d98:	0200001a 	andeq	r0, r0, #26
     d9c:	00005509 	andeq	r5, r0, r9, lsl #10
     da0:	04000800 	streq	r0, [r0], #-2048	; 0xfffff800
     da4:	03bf0704 			; <UNDEFINED> instruction: 0x03bf0704
     da8:	04050000 	streq	r0, [r5], #-0
     dac:	0000005b 	andeq	r0, r0, fp, asr r0
     db0:	17080104 	strne	r0, [r8, -r4, lsl #2]
     db4:	06000005 	streq	r0, [r0], -r5
     db8:	00001bd4 	ldrdeq	r1, [r0], -r4
     dbc:	00210a02 	eoreq	r0, r1, r2, lsl #20
     dc0:	34070000 	strcc	r0, [r7], #-0
     dc4:	0c000000 	stceq	0, cr0, [r0], {-0}
     dc8:	009e0603 	addseq	r0, lr, r3, lsl #12
     dcc:	0d030000 	stceq	0, cr0, [r3, #-0]
     dd0:	03000006 	movweq	r0, #6
     dd4:	00009e07 	andeq	r9, r0, r7, lsl #28
     dd8:	3b030000 	blcc	c0de0 <startup-0x1ff3f220>
     ddc:	03000000 	movweq	r0, #0
     de0:	00009e08 	andeq	r9, r0, r8, lsl #28
     de4:	30030400 	andcc	r0, r3, r0, lsl #8
     de8:	03000000 	movweq	r0, #0
     dec:	00009e09 	andeq	r9, r0, r9, lsl #28
     df0:	05000800 	streq	r0, [r0, #-2048]	; 0xfffff800
     df4:	00006204 	andeq	r6, r0, r4, lsl #4
     df8:	15580600 	ldrbne	r0, [r8, #-1536]	; 0xfffffa00
     dfc:	0a030000 	beq	c0e04 <startup-0x1ff3f1fc>
     e00:	0000006d 	andeq	r0, r0, sp, rrx
     e04:	00073707 	andeq	r3, r7, r7, lsl #14
     e08:	06042400 	streq	r2, [r4], -r0, lsl #8
     e0c:	00000128 	andeq	r0, r0, r8, lsr #2
     e10:	0004a503 	andeq	sl, r4, r3, lsl #10
     e14:	28070400 	stmdacs	r7, {sl}
     e18:	00000001 	andeq	r0, r0, r1
     e1c:	00074303 	andeq	r4, r7, r3, lsl #6
     e20:	2e080400 	cfcpyscs	mvf0, mvf8
     e24:	04000001 	streq	r0, [r0], #-1
     e28:	00069603 	andeq	r9, r6, r3, lsl #12
     e2c:	2e090400 	cfcpyscs	mvf0, mvf9
     e30:	08000001 	stmdaeq	r0, {r0}
     e34:	0006bf03 	andeq	fp, r6, r3, lsl #30
     e38:	460c0400 	strmi	r0, [ip], -r0, lsl #8
     e3c:	0c000001 	stceq	0, cr0, [r0], {1}
     e40:	00037803 	andeq	r7, r3, r3, lsl #16
     e44:	460d0400 	strmi	r0, [sp], -r0, lsl #8
     e48:	10000001 	andne	r0, r0, r1
     e4c:	0004b703 	andeq	fp, r4, r3, lsl #14
     e50:	2e100400 	cfmulscs	mvf0, mvf0, mvf0
     e54:	14000001 	strne	r0, [r0], #-1
     e58:	00008003 	andeq	r8, r0, r3
     e5c:	2e110400 	cfmulscs	mvf0, mvf1, mvf0
     e60:	18000001 	stmdane	r0, {r0}
     e64:	00040f03 	andeq	r0, r4, r3, lsl #30
     e68:	2e120400 	cfmulscs	mvf0, mvf2, mvf0
     e6c:	1c000001 	stcne	0, cr0, [r0], {1}
     e70:	00041f03 	andeq	r1, r4, r3, lsl #30
     e74:	2e130400 	cfmulscs	mvf0, mvf3, mvf0
     e78:	20000001 	andcs	r0, r0, r1
     e7c:	a4040500 	strge	r0, [r4], #-1280	; 0xfffffb00
     e80:	08000000 	stmdaeq	r0, {}	; <UNPREDICTABLE>
     e84:	6e690504 	cdpvs	5, 6, cr0, cr9, cr4, {0}
     e88:	40090074 	andmi	r0, r9, r4, ror r0
     e8c:	0a000001 	beq	e98 <startup-0x1ffff168>
     e90:	00000140 	andeq	r0, r0, r0, asr #2
     e94:	af040500 	svcge	0x00040500
     e98:	05000000 	streq	r0, [r0, #-0]
     e9c:	00013504 	andeq	r3, r1, r4, lsl #10
     ea0:	07380600 	ldreq	r0, [r8, -r0, lsl #12]!
     ea4:	15040000 	strne	r0, [r4, #-0]
     ea8:	000000af 	andeq	r0, r0, pc, lsr #1
     eac:	0001620b 	andeq	r6, r1, fp, lsl #4
     eb0:	00016200 	andeq	r6, r1, r0, lsl #4
     eb4:	05000c00 	streq	r0, [r0, #-3072]	; 0xfffff400
     eb8:	00014c04 	andeq	r4, r1, r4, lsl #24
     ebc:	059a0d00 	ldreq	r0, [sl, #3328]	; 0xd00
     ec0:	1c040000 	stcne	0, cr0, [r4], {-0}
     ec4:	00000157 	andeq	r0, r0, r7, asr r1
     ec8:	00045a0d 	andeq	r5, r4, sp, lsl #20
     ecc:	2e1d0400 	cfmulscs	mvf0, mvf13, mvf0
     ed0:	0b000001 	bleq	edc <startup-0x1ffff124>
     ed4:	0000005b 	andeq	r0, r0, fp, asr r0
     ed8:	0000018e 	andeq	r0, r0, lr, lsl #3
     edc:	00018e0e 	andeq	r8, r1, lr, lsl #28
     ee0:	04000b00 	streq	r0, [r0], #-2816	; 0xfffff500
     ee4:	043c0704 	ldrteq	r0, [ip], #-1796	; 0xfffff8fc
     ee8:	ef0f0000 	svc	0x000f0000
     eec:	05000009 	streq	r0, [r0, #-9]
     ef0:	00017e03 	andeq	r7, r1, r3, lsl #28
     ef4:	28030500 	stmdacs	r3, {r8, sl}
     ef8:	0f20009b 	svceq	0x0020009b
     efc:	000008e9 	andeq	r0, r0, r9, ror #17
     f00:	017e0306 	cmneq	lr, r6, lsl #6
     f04:	03050000 	movweq	r0, #20480	; 0x5000
     f08:	20009b34 	andcs	r9, r0, r4, lsr fp
     f0c:	0009040f 	andeq	r0, r9, pc, lsl #8
     f10:	7e030700 	cdpvc	7, 0, cr0, cr3, cr0, {0}
     f14:	05000001 	streq	r0, [r0, #-1]
     f18:	009b4003 	addseq	r4, fp, r3
     f1c:	08650f20 	stmdaeq	r5!, {r5, r8, r9, sl, fp}^
     f20:	03080000 	movweq	r0, #32768	; 0x8000
     f24:	0000017e 	andeq	r0, r0, lr, ror r1
     f28:	9b4c0305 	blls	1301b44 <startup-0x1ecfe4bc>
     f2c:	150f2000 	strne	r2, [pc, #-0]	; f34 <startup-0x1ffff0cc>
     f30:	09000009 	stmdbeq	r0, {r0, r3}
     f34:	00017e03 	andeq	r7, r1, r3, lsl #28
     f38:	58030500 	stmdapl	r3, {r8, sl}
     f3c:	0f20009b 	svceq	0x0020009b
     f40:	00000a57 	andeq	r0, r0, r7, asr sl
     f44:	017e030a 	cmneq	lr, sl, lsl #6
     f48:	03050000 	movweq	r0, #20480	; 0x5000
     f4c:	20009b64 	andcs	r9, r0, r4, ror #22
     f50:	0009d30f 	andeq	sp, r9, pc, lsl #6
     f54:	7e030b00 	vmlavc.f64	d0, d3, d0
     f58:	05000001 	streq	r0, [r0, #-1]
     f5c:	009b7003 	addseq	r7, fp, r3
     f60:	09380f20 	ldmdbeq	r8!, {r5, r8, r9, sl, fp}
     f64:	030c0000 	movweq	r0, #49152	; 0xc000
     f68:	0000017e 	andeq	r0, r0, lr, ror r1
     f6c:	9b7c0305 	blls	1f01b88 <startup-0x1e0fe478>
     f70:	750f2000 	strvc	r2, [pc, #-0]	; f78 <startup-0x1ffff088>
     f74:	0d000008 	stceq	0, cr0, [r0, #-32]	; 0xffffffe0
     f78:	00017e03 	andeq	r7, r1, r3, lsl #28
     f7c:	88030500 	stmdahi	r3, {r8, sl}
     f80:	0f20009b 	svceq	0x0020009b
     f84:	000008a3 	andeq	r0, r0, r3, lsr #17
     f88:	017e030e 	cmneq	lr, lr, lsl #6
     f8c:	03050000 	movweq	r0, #20480	; 0x5000
     f90:	20009b94 	mulcs	r0, r4, fp
     f94:	0009850f 	andeq	r8, r9, pc, lsl #10
     f98:	7e030f00 	cdpvc	15, 0, cr0, cr3, cr0, {0}
     f9c:	05000001 	streq	r0, [r0, #-1]
     fa0:	009ba003 	addseq	sl, fp, r3
     fa4:	08291020 	stmdaeq	r9!, {r5, ip}
     fa8:	11010000 	mrsne	r0, (UNDEF: 1)
     fac:	0000009e 	muleq	r0, lr, r0
     fb0:	5b300305 	blpl	c01bcc <startup-0x1f3fe434>
     fb4:	f9102000 			; <UNDEFINED> instruction: 0xf9102000
     fb8:	01000007 	tsteq	r0, r7
     fbc:	00009e12 	andeq	r9, r0, r2, lsl lr
     fc0:	48030500 	stmdami	r3, {r8, sl}
     fc4:	1020005b 	eorne	r0, r0, fp, asr r0
     fc8:	0000084f 	andeq	r0, r0, pc, asr #16
     fcc:	009e1301 	addseq	r1, lr, r1, lsl #6
     fd0:	03050000 	movweq	r0, #20480	; 0x5000
     fd4:	20005a00 	andcs	r5, r0, r0, lsl #20
     fd8:	00092e10 	andeq	r2, r9, r0, lsl lr
     fdc:	9e140100 	muflss	f0, f4, f0
     fe0:	05000000 	streq	r0, [r0, #-0]
     fe4:	005b4403 	subseq	r4, fp, r3, lsl #8
     fe8:	08f91020 	ldmeq	r9!, {r5, ip}^
     fec:	15010000 	strne	r0, [r1, #-0]
     ff0:	0000009e 	muleq	r0, lr, r0
     ff4:	5b1c0305 	blpl	701c10 <startup-0x1f8fe3f0>
     ff8:	11102000 	tstne	r0, r0
     ffc:	01000008 	tsteq	r0, r8
    1000:	00009e16 	andeq	r9, r0, r6, lsl lr
    1004:	10030500 	andne	r0, r3, r0, lsl #10
    1008:	1020005a 	eorne	r0, r0, sl, asr r0
    100c:	00000886 	andeq	r0, r0, r6, lsl #17
    1010:	009e1701 	addseq	r1, lr, r1, lsl #14
    1014:	03050000 	movweq	r0, #20480	; 0x5000
    1018:	20005b40 	andcs	r5, r0, r0, asr #22
    101c:	0009ac10 	andeq	sl, r9, r0, lsl ip
    1020:	9e180100 	muflse	f0, f0, f0
    1024:	05000000 	streq	r0, [r0, #-0]
    1028:	005afc03 	subseq	pc, sl, r3, lsl #24
    102c:	085a1020 	ldmdaeq	sl, {r5, ip}^
    1030:	19010000 	stmdbne	r1, {}	; <UNPREDICTABLE>
    1034:	0000009e 	muleq	r0, lr, r0
    1038:	5a680305 	bpl	1a01c54 <startup-0x1e5fe3ac>
    103c:	ef102000 	svc	0x00102000
    1040:	01000007 	tsteq	r0, r7
    1044:	00009e1a 	andeq	r9, r0, sl, lsl lr
    1048:	18030500 	stmdane	r3, {r8, sl}
    104c:	1020005b 	eorne	r0, r0, fp, asr r0
    1050:	000008c7 	andeq	r0, r0, r7, asr #17
    1054:	009e1b01 	addseq	r1, lr, r1, lsl #22
    1058:	03050000 	movweq	r0, #20480	; 0x5000
    105c:	20005b20 	andcs	r5, r0, r0, lsr #22
    1060:	00084110 	andeq	r4, r8, r0, lsl r1
    1064:	621d0100 	andsvs	r0, sp, #0, 2
    1068:	05000000 	streq	r0, [r0, #-0]
    106c:	005a3803 	subseq	r3, sl, r3, lsl #16
    1070:	09b61020 	ldmibeq	r6!, {r5, ip}
    1074:	1e010000 	cdpne	0, 0, cr0, cr1, cr0, {0}
    1078:	00000062 	andeq	r0, r0, r2, rrx
    107c:	5b240305 	blpl	901c98 <startup-0x1f6fe368>
    1080:	62102000 	andsvs	r2, r0, #0
    1084:	01000009 	tsteq	r0, r9
    1088:	0000621f 	andeq	r6, r0, pc, lsl r2
    108c:	00030500 	andeq	r0, r3, r0, lsl #10
    1090:	1020005b 	eorne	r0, r0, fp, asr r0
    1094:	00000803 	andeq	r0, r0, r3, lsl #16
    1098:	00622001 	rsbeq	r2, r2, r1
    109c:	03050000 	movweq	r0, #20480	; 0x5000
    10a0:	20005a2c 	andcs	r5, r0, ip, lsr #20
    10a4:	000a0110 	andeq	r0, sl, r0, lsl r1
    10a8:	62210100 	eorvs	r0, r1, #0, 2
    10ac:	05000000 	streq	r0, [r0, #-0]
    10b0:	005b3403 	subseq	r3, fp, r3, lsl #8
    10b4:	08331020 	ldmdaeq	r3!, {r5, ip}
    10b8:	22010000 	andcs	r0, r1, #0
    10bc:	00000062 	andeq	r0, r0, r2, rrx
    10c0:	5ae40305 	bpl	ff901cdc <firstTime.4108+0xdf8ec784>
    10c4:	48102000 	ldmdami	r0, {sp}
    10c8:	01000009 	tsteq	r0, r9
    10cc:	00006223 	andeq	r6, r0, r3, lsr #4
    10d0:	04030500 	streq	r0, [r3], #-1280	; 0xfffffb00
    10d4:	1020005a 	eorne	r0, r0, sl, asr r0
    10d8:	0000081b 	andeq	r0, r0, fp, lsl r8
    10dc:	00622401 	rsbeq	r2, r2, r1, lsl #8
    10e0:	03050000 	movweq	r0, #20480	; 0x5000
    10e4:	20005a14 	andcs	r5, r0, r4, lsl sl
    10e8:	0009c410 	andeq	ip, r9, r0, lsl r4
    10ec:	62250100 	eorvs	r0, r5, #0, 2
    10f0:	05000000 	streq	r0, [r0, #-0]
    10f4:	005a5003 	subseq	r5, sl, r3
    10f8:	08db1020 	ldmeq	fp, {r5, ip}^
    10fc:	26010000 	strcs	r0, [r1], -r0
    1100:	00000062 	andeq	r0, r0, r2, rrx
    1104:	5ad80305 	bpl	ff601d20 <firstTime.4108+0xdf5ec7c8>
    1108:	1b102000 	blne	409110 <startup-0x1fbf6ef0>
    110c:	0100000a 	tsteq	r0, sl
    1110:	00006227 	andeq	r6, r0, r7, lsr #4
    1114:	0c030500 	cfstr32eq	mvfx0, [r3], {-0}
    1118:	1020005b 	eorne	r0, r0, fp, asr r0
    111c:	00000926 	andeq	r0, r0, r6, lsr #18
    1120:	014c2a01 	cmpeq	ip, r1, lsl #20
    1124:	03050000 	movweq	r0, #20480	; 0x5000
    1128:	20005a6c 	andcs	r5, r0, ip, ror #20
    112c:	0009a110 	andeq	sl, r9, r0, lsl r1
    1130:	a42b0100 	strtge	r0, [fp], #-256	; 0xffffff00
    1134:	05000000 	streq	r0, [r0, #-0]
    1138:	005a5c03 	subseq	r5, sl, r3, lsl #24
    113c:	0a101020 	beq	4051c4 <startup-0x1fbfae3c>
    1140:	2c010000 	stccs	0, cr0, [r1], {-0}
    1144:	000000a4 	andeq	r0, r0, r4, lsr #1
    1148:	5a200305 	bpl	801d64 <startup-0x1f7fe29c>
    114c:	b3102000 	tstlt	r0, #0
    1150:	01000008 	tsteq	r0, r8
    1154:	0000a42d 	andeq	sl, r0, sp, lsr #8
    1158:	44030500 	strmi	r0, [r3], #-1280	; 0xfffffb00
    115c:	1020005a 	eorne	r0, r0, sl, asr r0
    1160:	00000957 	andeq	r0, r0, r7, asr r9
    1164:	00a42e01 	adceq	r2, r4, r1, lsl #28
    1168:	03050000 	movweq	r0, #20480	; 0x5000
    116c:	20005af0 	strdcs	r5, [r0], -r0
    1170:	0009e410 	andeq	lr, r9, r0, lsl r4
    1174:	a42f0100 	strtge	r0, [pc], #-256	; 117c <startup-0x1fffee84>
    1178:	05000000 	streq	r0, [r0, #-0]
    117c:	005a9003 	subseq	r9, sl, r3
    1180:	00a40b20 	adceq	r0, r4, r0, lsr #22
    1184:	043c0000 	ldrteq	r0, [ip], #-0
    1188:	8e0e0000 	cdphi	0, 0, cr0, cr14, cr0, {0}
    118c:	04000001 	streq	r0, [r0], #-1
    1190:	09961000 	ldmibeq	r6, {ip}
    1194:	30010000 	andcc	r0, r1, r0
    1198:	0000042c 	andeq	r0, r0, ip, lsr #8
    119c:	5a9c0305 	bpl	fe701db8 <firstTime.4108+0xde6ec860>
    11a0:	7b112000 	blvc	4491a8 <startup-0x1fbb6e58>
    11a4:	01000009 	tsteq	r0, r9
    11a8:	0020545f 	eoreq	r5, r0, pc, asr r4
    11ac:	00012420 	andeq	r2, r1, r0, lsr #8
    11b0:	829c0100 	addshi	r0, ip, #0, 2
    11b4:	12000004 	andne	r0, r0, #4
    11b8:	00000926 	andeq	r0, r0, r6, lsr #18
    11bc:	01625f01 	cmneq	r2, r1, lsl #30
    11c0:	91020000 	mrsls	r0, (UNDEF: 2)
    11c4:	09710f6c 	ldmdbeq	r1!, {r2, r3, r5, r6, r8, r9, sl, fp}^
    11c8:	60010000 	andvs	r0, r1, r0
    11cc:	0000012e 	andeq	r0, r0, lr, lsr #2
    11d0:	9bac0305 	blls	feb01dec <firstTime.4108+0xdeaec894>
    11d4:	13002000 	movwne	r2, #0
    11d8:	000004ed 	andeq	r0, r0, sp, ror #9
    11dc:	1ed03101 	cdpne	1, 13, cr3, cr0, cr1, {0}
    11e0:	01842000 	orreq	r2, r4, r0
    11e4:	9c010000 	stcls	0, cr0, [r1], {-0}
    11e8:	0008be0f 	andeq	fp, r8, pc, lsl #28
    11ec:	9e320100 	rsflss	f0, f2, f0
    11f0:	02000000 	andeq	r0, r0, #0
    11f4:	910f7491 			; <UNDEFINED> instruction: 0x910f7491
    11f8:	01000008 	tsteq	r0, r8
    11fc:	00009e36 	andeq	r9, r0, r6, lsr lr
    1200:	70910200 	addsvc	r0, r1, r0, lsl #4
    1204:	0008d20f 	andeq	sp, r8, pc, lsl #4
    1208:	9e3a0100 	rsflse	f0, f2, f0
    120c:	02000000 	andeq	r0, r0, #0
    1210:	9a0f6c91 	bls	3dc45c <startup-0x1fc23ba4>
    1214:	01000008 	tsteq	r0, r8
    1218:	00009e3e 	andeq	r9, r0, lr, lsr lr
    121c:	68910200 	ldmvs	r1, {r9}
    1220:	0004910f 	andeq	r9, r4, pc, lsl #2
    1224:	9e420100 	dvflss	f0, f2, f0
    1228:	02000000 	andeq	r0, r0, #0
    122c:	2f0f6491 	svccs	0x000f6491
    1230:	01000003 	tsteq	r0, r3
    1234:	00009e46 	andeq	r9, r0, r6, asr #28
    1238:	60910200 	addsvs	r0, r1, r0, lsl #4
    123c:	0003380f 	andeq	r3, r3, pc, lsl #16
    1240:	9e4a0100 	dvflse	f0, f2, f0
    1244:	02000000 	andeq	r0, r0, #0
    1248:	5b0f5c91 	blpl	3d8494 <startup-0x1fc27b6c>
    124c:	01000001 	tsteq	r0, r1
    1250:	00009e4e 	andeq	r9, r0, lr, asr #28
    1254:	58910200 	ldmpl	r1, {r9}
    1258:	0003560f 	andeq	r5, r3, pc, lsl #12
    125c:	9e520100 	rdflss	f0, f2, f0
    1260:	02000000 	andeq	r0, r0, #0
    1264:	5f0f5491 	svcpl	0x000f5491
    1268:	01000003 	tsteq	r0, r3
    126c:	00009e56 	andeq	r9, r0, r6, asr lr
    1270:	50910200 	addspl	r0, r1, r0, lsl #4
    1274:	0000950f 	andeq	r9, r0, pc, lsl #10
    1278:	9e5a0100 	rdflse	f0, f2, f0
    127c:	02000000 	andeq	r0, r0, #0
    1280:	00004c91 	muleq	r0, r1, ip
    1284:	0000020c 	andeq	r0, r0, ip, lsl #4
    1288:	03840004 	orreq	r0, r4, #4
    128c:	01040000 	mrseq	r0, (UNDEF: 4)
    1290:	000000af 	andeq	r0, r0, pc, lsr #1
    1294:	000aa00c 	andeq	sl, sl, ip
    1298:	00217800 	eoreq	r7, r1, r0, lsl #16
    129c:	00024020 	andeq	r4, r2, r0, lsr #32
    12a0:	00067f00 	andeq	r7, r6, r0, lsl #30
    12a4:	07040200 	streq	r0, [r4, -r0, lsl #4]
    12a8:	000003bf 			; <UNDEFINED> instruction: 0x000003bf
    12ac:	b9070202 	stmdblt	r7, {r1, r9}
    12b0:	02000003 	andeq	r0, r0, #3
    12b4:	05170801 	ldreq	r0, [r7, #-2049]	; 0xfffff7ff
    12b8:	0c030000 	stceq	0, cr0, [r3], {-0}
    12bc:	00630502 	rsbeq	r0, r3, r2, lsl #10
    12c0:	91040000 	mrsls	r0, (UNDEF: 4)
    12c4:	02000003 	andeq	r0, r0, #3
    12c8:	00002107 	andeq	r2, r0, r7, lsl #2
    12cc:	74040000 	strvc	r0, [r4], #-0
    12d0:	02000007 	andeq	r0, r0, #7
    12d4:	00002108 	andeq	r2, r0, r8, lsl #2
    12d8:	6a040400 	bvs	1022e0 <startup-0x1fefdd20>
    12dc:	0200001a 	andeq	r0, r0, #26
    12e0:	00006309 	andeq	r6, r0, r9, lsl #6
    12e4:	05000800 	streq	r0, [r0, #-2048]	; 0xfffff800
    12e8:	00002f04 	andeq	r2, r0, r4, lsl #30
    12ec:	1bd40600 	blne	ff502af4 <firstTime.4108+0xdf4ed59c>
    12f0:	0a020000 	beq	812f8 <startup-0x1ff7ed08>
    12f4:	00000036 	andeq	r0, r0, r6, lsr r0
    12f8:	00003407 	andeq	r3, r0, r7, lsl #8
    12fc:	06030c00 	streq	r0, [r3], -r0, lsl #24
    1300:	000000a5 	andeq	r0, r0, r5, lsr #1
    1304:	00060d04 	andeq	r0, r6, r4, lsl #26
    1308:	a5070300 	strge	r0, [r7, #-768]	; 0xfffffd00
    130c:	00000000 	andeq	r0, r0, r0
    1310:	00003b04 	andeq	r3, r0, r4, lsl #22
    1314:	a5080300 	strge	r0, [r8, #-768]	; 0xfffffd00
    1318:	04000000 	streq	r0, [r0], #-0
    131c:	00003004 	andeq	r3, r0, r4
    1320:	a5090300 	strge	r0, [r9, #-768]	; 0xfffffd00
    1324:	08000000 	stmdaeq	r0, {}	; <UNPREDICTABLE>
    1328:	69040500 	stmdbvs	r4, {r8, sl}
    132c:	06000000 	streq	r0, [r0], -r0
    1330:	00001558 	andeq	r1, r0, r8, asr r5
    1334:	00740a03 	rsbseq	r0, r4, r3, lsl #20
    1338:	37070000 	strcc	r0, [r7, -r0]
    133c:	24000007 	strcs	r0, [r0], #-7
    1340:	012f0604 			; <UNDEFINED> instruction: 0x012f0604
    1344:	a5040000 	strge	r0, [r4, #-0]
    1348:	04000004 	streq	r0, [r0], #-4
    134c:	00012f07 	andeq	r2, r1, r7, lsl #30
    1350:	43040000 	movwmi	r0, #16384	; 0x4000
    1354:	04000007 	streq	r0, [r0], #-7
    1358:	00013508 	andeq	r3, r1, r8, lsl #10
    135c:	96040400 	strls	r0, [r4], -r0, lsl #8
    1360:	04000006 	streq	r0, [r0], #-6
    1364:	00013509 	andeq	r3, r1, r9, lsl #10
    1368:	bf040800 	svclt	0x00040800
    136c:	04000006 	streq	r0, [r0], #-6
    1370:	00014d0c 	andeq	r4, r1, ip, lsl #26
    1374:	78040c00 	stmdavc	r4, {sl, fp}
    1378:	04000003 	streq	r0, [r0], #-3
    137c:	00014d0d 	andeq	r4, r1, sp, lsl #26
    1380:	b7041000 	strlt	r1, [r4, -r0]
    1384:	04000004 	streq	r0, [r0], #-4
    1388:	00013510 	andeq	r3, r1, r0, lsl r5
    138c:	80041400 	andhi	r1, r4, r0, lsl #8
    1390:	04000000 	streq	r0, [r0], #-0
    1394:	00013511 	andeq	r3, r1, r1, lsl r5
    1398:	0f041800 	svceq	0x00041800
    139c:	04000004 	streq	r0, [r0], #-4
    13a0:	00013512 	andeq	r3, r1, r2, lsl r5
    13a4:	1f041c00 	svcne	0x00041c00
    13a8:	04000004 	streq	r0, [r0], #-4
    13ac:	00013513 	andeq	r3, r1, r3, lsl r5
    13b0:	05002000 	streq	r2, [r0, #-0]
    13b4:	0000ab04 	andeq	sl, r0, r4, lsl #22
    13b8:	05040800 	streq	r0, [r4, #-2048]	; 0xfffff800
    13bc:	00746e69 	rsbseq	r6, r4, r9, ror #28
    13c0:	00014709 	andeq	r4, r1, r9, lsl #14
    13c4:	01470a00 	cmpeq	r7, r0, lsl #20
    13c8:	05000000 	streq	r0, [r0, #-0]
    13cc:	0000b604 	andeq	fp, r0, r4, lsl #12
    13d0:	3c040500 	cfstr32cc	mvfx0, [r4], {-0}
    13d4:	06000001 	streq	r0, [r0], -r1
    13d8:	00000738 	andeq	r0, r0, r8, lsr r7
    13dc:	00b61504 	adcseq	r1, r6, r4, lsl #10
    13e0:	690b0000 	stmdbvs	fp, {}	; <UNPREDICTABLE>
    13e4:	69000001 	stmdbvs	r0, {r0}
    13e8:	0c000001 	stceq	0, cr0, [r0], {1}
    13ec:	53040500 	movwpl	r0, #17664	; 0x4500
    13f0:	0d000001 	stceq	0, cr0, [r0, #-4]
    13f4:	0000059a 	muleq	r0, sl, r5
    13f8:	015e1c04 	cmpeq	lr, r4, lsl #24
    13fc:	5a0d0000 	bpl	341404 <startup-0x1fcbebfc>
    1400:	04000004 	streq	r0, [r0], #-4
    1404:	0001351d 	andeq	r3, r1, sp, lsl r5
    1408:	0a760e00 	beq	1d84c10 <startup-0x1e27b3f0>
    140c:	08010000 	stmdaeq	r1, {}	; <UNPREDICTABLE>
    1410:	00000135 	andeq	r0, r0, r5, lsr r1
    1414:	576c0305 	strbpl	r0, [ip, -r5, lsl #6]!
    1418:	670e2000 	strvs	r2, [lr, -r0]
    141c:	0100000a 	tsteq	r0, sl
    1420:	00013509 	andeq	r3, r1, r9, lsl #10
    1424:	70030500 	andvc	r0, r3, r0, lsl #10
    1428:	0e200057 	mcreq	0, 1, r0, cr0, cr7, {2}
    142c:	00000a92 	muleq	r0, r2, sl
    1430:	01350a01 	teqeq	r5, r1, lsl #20
    1434:	03050000 	movweq	r0, #20480	; 0x5000
    1438:	20005774 	andcs	r5, r0, r4, ror r7
    143c:	000a8b0e 	andeq	r8, sl, lr, lsl #22
    1440:	350b0100 	strcc	r0, [fp, #-256]	; 0xffffff00
    1444:	05000001 	streq	r0, [r0, #-1]
    1448:	00577803 	subseq	r7, r7, r3, lsl #16
    144c:	0a840e20 	beq	fe104cd4 <firstTime.4108+0xde0ef77c>
    1450:	0c010000 	stceq	0, cr0, [r1], {-0}
    1454:	00000135 	andeq	r0, r0, r5, lsr r1
    1458:	577c0305 	ldrbpl	r0, [ip, -r5, lsl #6]!
    145c:	db0f2000 	blle	3c9464 <startup-0x1fc36b9c>
    1460:	0100000a 	tsteq	r0, sl
    1464:	0021b416 	eoreq	fp, r1, r6, lsl r4
    1468:	00020420 	andeq	r0, r2, r0, lsr #8
    146c:	fe9c0100 	cdp2	1, 9, cr0, cr12, cr0, {0}
    1470:	10000001 	andne	r0, r0, r1
    1474:	000007ea 	andeq	r0, r0, sl, ror #15
    1478:	01691601 	cmneq	r9, r1, lsl #12
    147c:	91020000 	mrsls	r0, (UNDEF: 2)
    1480:	cf110074 	svcgt	0x00110074
    1484:	0100000a 	tsteq	r0, sl
    1488:	0021780e 	eoreq	r7, r1, lr, lsl #16
    148c:	00003c20 	andeq	r3, r0, r0, lsr #24
    1490:	009c0100 	addseq	r0, ip, r0, lsl #2
    1494:	00000641 	andeq	r0, r0, r1, asr #12
    1498:	046c0004 	strbteq	r0, [ip], #-4
    149c:	01040000 	mrseq	r0, (UNDEF: 4)
    14a0:	000000af 	andeq	r0, r0, pc, lsr #1
    14a4:	000d5c0c 	andeq	r5, sp, ip, lsl #24
    14a8:	0023b800 	eoreq	fp, r3, r0, lsl #16
    14ac:	00036420 	andeq	r6, r3, r0, lsr #8
    14b0:	00077100 	andeq	r7, r7, r0, lsl #2
    14b4:	020c0200 	andeq	r0, ip, #0, 4
    14b8:	00004e05 	andeq	r4, r0, r5, lsl #28
    14bc:	03910300 	orrseq	r0, r1, #0, 6
    14c0:	07020000 	streq	r0, [r2, -r0]
    14c4:	0000004e 	andeq	r0, r0, lr, asr #32
    14c8:	07740300 	ldrbeq	r0, [r4, -r0, lsl #6]!
    14cc:	08020000 	stmdaeq	r2, {}	; <UNPREDICTABLE>
    14d0:	0000004e 	andeq	r0, r0, lr, asr #32
    14d4:	1a6a0304 	bne	1a820ec <startup-0x1e57df14>
    14d8:	09020000 	stmdbeq	r2, {}	; <UNPREDICTABLE>
    14dc:	00000055 	andeq	r0, r0, r5, asr r0
    14e0:	04040008 	streq	r0, [r4], #-8
    14e4:	0003bf07 	andeq	fp, r3, r7, lsl #30
    14e8:	5b040500 	blpl	1028f0 <startup-0x1fefd710>
    14ec:	04000000 	streq	r0, [r0], #-0
    14f0:	05170801 	ldreq	r0, [r7, #-2049]	; 0xfffff7ff
    14f4:	d4060000 	strle	r0, [r6], #-0
    14f8:	0200001b 	andeq	r0, r0, #27
    14fc:	0000210a 	andeq	r2, r0, sl, lsl #2
    1500:	00340700 	eorseq	r0, r4, r0, lsl #14
    1504:	030c0000 	movweq	r0, #49152	; 0xc000
    1508:	00009e06 	andeq	r9, r0, r6, lsl #28
    150c:	060d0300 	streq	r0, [sp], -r0, lsl #6
    1510:	07030000 	streq	r0, [r3, -r0]
    1514:	0000009e 	muleq	r0, lr, r0
    1518:	003b0300 	eorseq	r0, fp, r0, lsl #6
    151c:	08030000 	stmdaeq	r3, {}	; <UNPREDICTABLE>
    1520:	0000009e 	muleq	r0, lr, r0
    1524:	00300304 	eorseq	r0, r0, r4, lsl #6
    1528:	09030000 	stmdbeq	r3, {}	; <UNPREDICTABLE>
    152c:	0000009e 	muleq	r0, lr, r0
    1530:	04050008 	streq	r0, [r5], #-8
    1534:	00000062 	andeq	r0, r0, r2, rrx
    1538:	00155806 	andseq	r5, r5, r6, lsl #16
    153c:	6d0a0300 	stcvs	3, cr0, [sl, #-0]
    1540:	07000000 	streq	r0, [r0, -r0]
    1544:	00000737 	andeq	r0, r0, r7, lsr r7
    1548:	28060424 	stmdacs	r6, {r2, r5, sl}
    154c:	03000001 	movweq	r0, #1
    1550:	000004a5 	andeq	r0, r0, r5, lsr #9
    1554:	01280704 			; <UNDEFINED> instruction: 0x01280704
    1558:	03000000 	movweq	r0, #0
    155c:	00000743 	andeq	r0, r0, r3, asr #14
    1560:	012e0804 			; <UNDEFINED> instruction: 0x012e0804
    1564:	03040000 	movweq	r0, #16384	; 0x4000
    1568:	00000696 	muleq	r0, r6, r6
    156c:	012e0904 			; <UNDEFINED> instruction: 0x012e0904
    1570:	03080000 	movweq	r0, #32768	; 0x8000
    1574:	000006bf 			; <UNDEFINED> instruction: 0x000006bf
    1578:	01460c04 	cmpeq	r6, r4, lsl #24
    157c:	030c0000 	movweq	r0, #49152	; 0xc000
    1580:	00000378 	andeq	r0, r0, r8, ror r3
    1584:	01460d04 	cmpeq	r6, r4, lsl #26
    1588:	03100000 	tsteq	r0, #0
    158c:	000004b7 			; <UNDEFINED> instruction: 0x000004b7
    1590:	012e1004 			; <UNDEFINED> instruction: 0x012e1004
    1594:	03140000 	tsteq	r4, #0
    1598:	00000080 	andeq	r0, r0, r0, lsl #1
    159c:	012e1104 			; <UNDEFINED> instruction: 0x012e1104
    15a0:	03180000 	tsteq	r8, #0
    15a4:	0000040f 	andeq	r0, r0, pc, lsl #8
    15a8:	012e1204 			; <UNDEFINED> instruction: 0x012e1204
    15ac:	031c0000 	tsteq	ip, #0
    15b0:	0000041f 	andeq	r0, r0, pc, lsl r4
    15b4:	012e1304 			; <UNDEFINED> instruction: 0x012e1304
    15b8:	00200000 	eoreq	r0, r0, r0
    15bc:	00a40405 	adceq	r0, r4, r5, lsl #8
    15c0:	04080000 	streq	r0, [r8], #-0
    15c4:	746e6905 	strbtvc	r6, [lr], #-2309	; 0xfffff6fb
    15c8:	01400900 	cmpeq	r0, r0, lsl #18
    15cc:	400a0000 	andmi	r0, sl, r0
    15d0:	00000001 	andeq	r0, r0, r1
    15d4:	00af0405 	adceq	r0, pc, r5, lsl #8
    15d8:	04050000 	streq	r0, [r5], #-0
    15dc:	00000135 	andeq	r0, r0, r5, lsr r1
    15e0:	00073806 	andeq	r3, r7, r6, lsl #16
    15e4:	af150400 	svcge	0x00150400
    15e8:	0b000000 	bleq	15f0 <startup-0x1fffea10>
    15ec:	00000162 	andeq	r0, r0, r2, ror #2
    15f0:	00000162 	andeq	r0, r0, r2, ror #2
    15f4:	0405000c 	streq	r0, [r5], #-12
    15f8:	0000014c 	andeq	r0, r0, ip, asr #2
    15fc:	00059a0d 	andeq	r9, r5, sp, lsl #20
    1600:	571c0400 	ldrpl	r0, [ip, -r0, lsl #8]
    1604:	0d000001 	stceq	0, cr0, [r0, #-4]
    1608:	0000045a 	andeq	r0, r0, sl, asr r4
    160c:	012e1d04 			; <UNDEFINED> instruction: 0x012e1d04
    1610:	5b0b0000 	blpl	2c1618 <startup-0x1fd3e9e8>
    1614:	8e000000 	cdphi	0, 0, cr0, cr0, cr0, {0}
    1618:	0e000001 	cdpeq	0, 0, cr0, cr0, cr1, {0}
    161c:	0000018e 	andeq	r0, r0, lr, lsl #3
    1620:	04040063 	streq	r0, [r4], #-99	; 0xffffff9d
    1624:	00043c07 	andeq	r3, r4, r7, lsl #24
    1628:	0dc20f00 	stcleq	15, cr0, [r2]
    162c:	03050000 	movweq	r0, #20480	; 0x5000
    1630:	0000017e 	andeq	r0, r0, lr, ror r1
    1634:	9bb00305 	blls	fec02250 <firstTime.4108+0xdebeccf8>
    1638:	2d0f2000 	stccs	0, cr2, [pc, #-0]	; 1640 <startup-0x1fffe9c0>
    163c:	0600000c 	streq	r0, [r0], -ip
    1640:	00017e03 	andeq	r7, r1, r3, lsl #28
    1644:	14030500 	strne	r0, [r3], #-1280	; 0xfffffb00
    1648:	0f20009c 	svceq	0x0020009c
    164c:	00000c75 	andeq	r0, r0, r5, ror ip
    1650:	017e0307 	cmneq	lr, r7, lsl #6
    1654:	03050000 	movweq	r0, #20480	; 0x5000
    1658:	20009c78 	andcs	r9, r0, r8, ror ip
    165c:	000c1c0f 	andeq	r1, ip, pc, lsl #24
    1660:	7e030800 	cdpvc	8, 0, cr0, cr3, cr0, {0}
    1664:	05000001 	streq	r0, [r0, #-1]
    1668:	009cdc03 	addseq	sp, ip, r3, lsl #24
    166c:	0d9b0f20 	ldceq	15, cr0, [fp, #128]	; 0x80
    1670:	03090000 	movweq	r0, #36864	; 0x9000
    1674:	0000017e 	andeq	r0, r0, lr, ror r1
    1678:	9d400305 	stclls	3, cr0, [r0, #-20]	; 0xffffffec
    167c:	6f0f2000 	svcvs	0x000f2000
    1680:	0a00000e 	beq	16c0 <startup-0x1fffe940>
    1684:	00017e03 	andeq	r7, r1, r3, lsl #28
    1688:	a4030500 	strge	r0, [r3], #-1280	; 0xfffffb00
    168c:	0f20009d 	svceq	0x0020009d
    1690:	00000c48 	andeq	r0, r0, r8, asr #24
    1694:	017e030b 	cmneq	lr, fp, lsl #6
    1698:	03050000 	movweq	r0, #20480	; 0x5000
    169c:	20009e08 	andcs	r9, r0, r8, lsl #28
    16a0:	000d360f 	andeq	r3, sp, pc, lsl #12
    16a4:	7e030c00 	cdpvc	12, 0, cr0, cr3, cr0, {0}
    16a8:	05000001 	streq	r0, [r0, #-1]
    16ac:	009e6c03 	addseq	r6, lr, r3, lsl #24
    16b0:	0af70f20 	beq	ffdc5338 <firstTime.4108+0xdfdafde0>
    16b4:	030d0000 	movweq	r0, #53248	; 0xd000
    16b8:	0000017e 	andeq	r0, r0, lr, ror r1
    16bc:	9ed00305 	cdpls	3, 13, cr0, cr0, cr5, {0}
    16c0:	590f2000 	stmdbpl	pc, {sp}	; <UNPREDICTABLE>
    16c4:	0e00000c 	cdpeq	0, 0, cr0, cr0, cr12, {0}
    16c8:	00017e03 	andeq	r7, r1, r3, lsl #28
    16cc:	34030500 	strcc	r0, [r3], #-1280	; 0xfffffb00
    16d0:	0f20009f 	svceq	0x0020009f
    16d4:	00000cdd 	ldrdeq	r0, [r0], -sp
    16d8:	017e030f 	cmneq	lr, pc, lsl #6
    16dc:	03050000 	movweq	r0, #20480	; 0x5000
    16e0:	20009f98 	mulcs	r0, r8, pc	; <UNPREDICTABLE>
    16e4:	000b130f 	andeq	r1, fp, pc, lsl #6
    16e8:	7e031000 	cdpvc	0, 0, cr1, cr3, cr0, {0}
    16ec:	05000001 	streq	r0, [r0, #-1]
    16f0:	009ffc03 	addseq	pc, pc, r3, lsl #24
    16f4:	0c860f20 	stceq	15, cr0, [r6], {32}
    16f8:	03110000 	tsteq	r1, #0
    16fc:	0000017e 	andeq	r0, r0, lr, ror r1
    1700:	a0600305 	rsbge	r0, r0, r5, lsl #6
    1704:	a60f2000 	strge	r2, [pc], -r0
    1708:	1200000c 	andne	r0, r0, #12
    170c:	00017e03 	andeq	r7, r1, r3, lsl #28
    1710:	c4030500 	strgt	r0, [r3], #-1280	; 0xfffffb00
    1714:	0f2000a0 	svceq	0x002000a0
    1718:	00000b3d 	andeq	r0, r0, sp, lsr fp
    171c:	017e0313 	cmneq	lr, r3, lsl r3
    1720:	03050000 	movweq	r0, #20480	; 0x5000
    1724:	2000a128 	andcs	sl, r0, r8, lsr #2
    1728:	000d4610 	andeq	r4, sp, r0, lsl r6
    172c:	9e150100 	muflss	f0, f5, f0
    1730:	05000000 	streq	r0, [r0, #-0]
    1734:	005bb803 	subseq	fp, fp, r3, lsl #16
    1738:	0b791020 	bleq	1e457c0 <startup-0x1e1ba840>
    173c:	16010000 	strne	r0, [r1], -r0
    1740:	0000009e 	muleq	r0, lr, r0
    1744:	5b500305 	blpl	1402360 <startup-0x1ebfdca0>
    1748:	63102000 	tstvs	r0, #0
    174c:	0100000b 	tsteq	r0, fp
    1750:	00009e17 	andeq	r9, r0, r7, lsl lr
    1754:	48030500 	stmdami	r3, {r8, sl}
    1758:	1020005c 	eorne	r0, r0, ip, asr r0
    175c:	00000bbb 			; <UNDEFINED> instruction: 0x00000bbb
    1760:	009e1801 	addseq	r1, lr, r1, lsl #16
    1764:	03050000 	movweq	r0, #20480	; 0x5000
    1768:	20005bb4 			; <UNDEFINED> instruction: 0x20005bb4
    176c:	000cb610 	andeq	fp, ip, r0, lsl r6
    1770:	9e190100 	muflse	f0, f1, f0
    1774:	05000000 	streq	r0, [r0, #-0]
    1778:	005c3803 	subseq	r3, ip, r3, lsl #16
    177c:	0d511020 	ldcleq	0, cr1, [r1, #-128]	; 0xffffff80
    1780:	1a010000 	bne	41788 <startup-0x1ffbe878>
    1784:	0000009e 	muleq	r0, lr, r0
    1788:	5cec0305 	stclpl	3, cr0, [ip], #20
    178c:	6e102000 	cdpvs	0, 1, cr2, cr0, cr0, {0}
    1790:	0100000b 	tsteq	r0, fp
    1794:	00009e1b 	andeq	r9, r0, fp, lsl lr
    1798:	ac030500 	cfstr32ge	mvfx0, [r3], {-0}
    179c:	1020005b 	eorne	r0, r0, fp, asr r0
    17a0:	00000dde 	ldrdeq	r0, [r0], -lr
    17a4:	009e1c01 	addseq	r1, lr, r1, lsl #24
    17a8:	03050000 	movweq	r0, #20480	; 0x5000
    17ac:	20005bd4 	ldrdcs	r5, [r0], -r4
    17b0:	000b4e10 	andeq	r4, fp, r0, lsl lr
    17b4:	9e1d0100 	muflse	f0, f5, f0
    17b8:	05000000 	streq	r0, [r0, #-0]
    17bc:	005c0003 	subseq	r0, ip, r3
    17c0:	0d1c1020 	ldceq	0, cr1, [ip, #-128]	; 0xffffff80
    17c4:	1e010000 	cdpne	0, 0, cr0, cr1, cr0, {0}
    17c8:	0000009e 	muleq	r0, lr, r0
    17cc:	5cd00305 	ldclpl	3, cr0, [r0], {5}
    17d0:	b1102000 	tstlt	r0, r0
    17d4:	0100000b 	tsteq	r0, fp
    17d8:	00009e1f 	andeq	r9, r0, pc, lsl lr
    17dc:	b0030500 	andlt	r0, r3, r0, lsl #10
    17e0:	1020005b 	eorne	r0, r0, fp, asr r0
    17e4:	00000e26 	andeq	r0, r0, r6, lsr #28
    17e8:	009e2001 	addseq	r2, lr, r1
    17ec:	03050000 	movweq	r0, #20480	; 0x5000
    17f0:	20005b4c 	andcs	r5, r0, ip, asr #22
    17f4:	000b9210 	andeq	r9, fp, r0, lsl r2
    17f8:	9e210100 	suflss	f0, f1, f0
    17fc:	05000000 	streq	r0, [r0, #-0]
    1800:	005b6003 	subseq	r6, fp, r3
    1804:	0db81020 	ldceq	0, cr1, [r8, #128]!	; 0x80
    1808:	22010000 	andcs	r0, r1, #0
    180c:	0000009e 	muleq	r0, lr, r0
    1810:	5be40305 	blpl	ff90242c <firstTime.4108+0xdf8eced4>
    1814:	f7102000 			; <UNDEFINED> instruction: 0xf7102000
    1818:	0100000c 	tsteq	r0, ip
    181c:	00009e23 	andeq	r9, r0, r3, lsr #28
    1820:	28030500 	stmdacs	r3, {r8, sl}
    1824:	1020005c 	eorne	r0, r0, ip, asr r0
    1828:	00000df5 	strdeq	r0, [r0], -r5
    182c:	00622501 	rsbeq	r2, r2, r1, lsl #10
    1830:	03050000 	movweq	r0, #20480	; 0x5000
    1834:	20005bc8 	andcs	r5, r0, r8, asr #23
    1838:	000bf610 	andeq	pc, fp, r0, lsl r6	; <UNPREDICTABLE>
    183c:	62260100 	eorvs	r0, r6, #0, 2
    1840:	05000000 	streq	r0, [r0, #-0]
    1844:	005c3c03 	subseq	r3, ip, r3, lsl #24
    1848:	0dab1020 	stceq	0, cr1, [fp, #128]!	; 0x80
    184c:	27010000 	strcs	r0, [r1, -r0]
    1850:	00000062 	andeq	r0, r0, r2, rrx
    1854:	5bd80305 	blpl	ff602470 <firstTime.4108+0xdf5ecf18>
    1858:	27102000 	ldrcs	r2, [r0, -r0]
    185c:	0100000d 	tsteq	r0, sp
    1860:	00006228 	andeq	r6, r0, r8, lsr #4
    1864:	d4030500 	strle	r0, [r3], #-1280	; 0xfffffb00
    1868:	1020005c 	eorne	r0, r0, ip, asr r0
    186c:	00000ae8 	andeq	r0, r0, r8, ror #21
    1870:	00622901 	rsbeq	r2, r2, r1, lsl #18
    1874:	03050000 	movweq	r0, #20480	; 0x5000
    1878:	20005c4c 	andcs	r5, r0, ip, asr #24
    187c:	000bda10 	andeq	sp, fp, r0, lsl sl
    1880:	622a0100 	eorvs	r0, sl, #0, 2
    1884:	05000000 	streq	r0, [r0, #-0]
    1888:	005bf403 	subseq	pc, fp, r3, lsl #8
    188c:	0e031020 	cdpeq	0, 0, cr1, cr3, cr0, {1}
    1890:	2b010000 	blcs	41898 <startup-0x1ffbe768>
    1894:	00000062 	andeq	r0, r0, r2, rrx
    1898:	5c2c0305 	stcpl	3, cr0, [ip], #-20	; 0xffffffec
    189c:	97102000 	ldrls	r2, [r0, -r0]
    18a0:	0100000c 	tsteq	r0, ip
    18a4:	0000622c 	andeq	r6, r0, ip, lsr #4
    18a8:	70030500 	andvc	r0, r3, r0, lsl #10
    18ac:	1020005c 	eorne	r0, r0, ip, asr r0
    18b0:	00000ccf 	andeq	r0, r0, pc, asr #25
    18b4:	00622d01 	rsbeq	r2, r2, r1, lsl #26
    18b8:	03050000 	movweq	r0, #20480	; 0x5000
    18bc:	20005c7c 	andcs	r5, r0, ip, ror ip
    18c0:	000b8310 	andeq	r8, fp, r0, lsl r3
    18c4:	622e0100 	eorvs	r0, lr, #0, 2
    18c8:	05000000 	streq	r0, [r0, #-0]
    18cc:	005b6403 	subseq	r6, fp, r3, lsl #8
    18d0:	0cc01020 	stcleq	0, cr1, [r0], {32}
    18d4:	2f010000 	svccs	0x00010000
    18d8:	00000062 	andeq	r0, r0, r2, rrx
    18dc:	5c640305 	stclpl	3, cr0, [r4], #-20	; 0xffffffec
    18e0:	e8102000 	ldmda	r0, {sp}
    18e4:	0100000b 	tsteq	r0, fp
    18e8:	00006230 	andeq	r6, r0, r0, lsr r2
    18ec:	e0030500 	and	r0, r3, r0, lsl #10
    18f0:	1020005c 	eorne	r0, r0, ip, asr r0
    18f4:	00000d0d 	andeq	r0, r0, sp, lsl #26
    18f8:	00623101 	rsbeq	r3, r2, r1, lsl #2
    18fc:	03050000 	movweq	r0, #20480	; 0x5000
    1900:	20005c10 	andcs	r5, r0, r0, lsl ip
    1904:	000b2410 	andeq	r2, fp, r0, lsl r4
    1908:	62320100 	eorsvs	r0, r2, #0, 2
    190c:	05000000 	streq	r0, [r0, #-0]
    1910:	005be803 	subseq	lr, fp, r3, lsl #16
    1914:	0c041020 	stceq	0, cr1, [r4], {32}
    1918:	33010000 	movwcc	r0, #4096	; 0x1000
    191c:	00000062 	andeq	r0, r0, r2, rrx
    1920:	5c040305 	stcpl	3, cr0, [r4], {5}
    1924:	93102000 	tstls	r0, #0
    1928:	0100000d 	tsteq	r0, sp
    192c:	00014c36 	andeq	r4, r1, r6, lsr ip
    1930:	7c030500 	cfstr32vc	mvfx0, [r3], {-0}
    1934:	1020005b 	eorne	r0, r0, fp, asr r0
    1938:	00000dd3 	ldrdeq	r0, [r0], -r3
    193c:	00a43701 	adceq	r3, r4, r1, lsl #14
    1940:	03050000 	movweq	r0, #20480	; 0x5000
    1944:	20005ba0 	andcs	r5, r0, r0, lsr #23
    1948:	000e5a10 	andeq	r5, lr, r0, lsl sl
    194c:	a4380100 	ldrtge	r0, [r8], #-256	; 0xffffff00
    1950:	05000000 	streq	r0, [r0, #-0]
    1954:	005b7003 	subseq	r7, fp, r3
    1958:	0c6a1020 	stcleq	0, cr1, [sl], #-128	; 0xffffff80
    195c:	39010000 	stmdbcc	r1, {}	; <UNPREDICTABLE>
    1960:	000000a4 	andeq	r0, r0, r4, lsr #1
    1964:	5c580305 	mrrcpl	3, 0, r0, r8, cr5
    1968:	08102000 	ldmdaeq	r0, {sp}
    196c:	0100000b 	tsteq	r0, fp
    1970:	0000a43a 	andeq	sl, r0, sl, lsr r4
    1974:	bc030500 	cfstr32lt	mvfx0, [r3], {-0}
    1978:	1020005b 	eorne	r0, r0, fp, asr r0
    197c:	00000e31 	andeq	r0, r0, r1, lsr lr
    1980:	00a43b01 	adceq	r3, r4, r1, lsl #22
    1984:	03050000 	movweq	r0, #20480	; 0x5000
    1988:	20005c1c 	andcs	r5, r0, ip, lsl ip
    198c:	000c3d10 	andeq	r3, ip, r0, lsl sp
    1990:	a43c0100 	ldrtge	r0, [ip], #-256	; 0xffffff00
    1994:	05000000 	streq	r0, [r0, #-0]
    1998:	005b5403 	subseq	r5, fp, r3, lsl #8
    199c:	00a40b20 	adceq	r0, r4, r0, lsr #22
    19a0:	05190000 	ldreq	r0, [r9, #-0]
    19a4:	8e0e0000 	cdphi	0, 0, cr0, cr14, cr0, {0}
    19a8:	05000001 	streq	r0, [r0, #-1]
    19ac:	0d021000 	stceq	0, cr1, [r2, #-0]
    19b0:	3f010000 	svccc	0x00010000
    19b4:	00000509 	andeq	r0, r0, r9, lsl #10
    19b8:	5c880305 	stcpl	3, cr0, [r8], {5}
    19bc:	89112000 	ldmdbhi	r1, {sp}
    19c0:	0100000d 	tsteq	r0, sp
    19c4:	0025c476 	eoreq	ip, r5, r6, ror r4
    19c8:	00015820 	andeq	r5, r1, r0, lsr #16
    19cc:	5f9c0100 	svcpl	0x009c0100
    19d0:	12000005 	andne	r0, r0, #5
    19d4:	00000d93 	muleq	r0, r3, sp
    19d8:	01627601 	cmneq	r2, r1, lsl #12
    19dc:	91020000 	mrsls	r0, (UNDEF: 2)
    19e0:	09710f6c 	ldmdbeq	r1!, {r2, r3, r5, r6, r8, r9, sl, fp}^
    19e4:	77010000 	strvc	r0, [r1, -r0]
    19e8:	0000012e 	andeq	r0, r0, lr, lsr #2
    19ec:	a18c0305 	orrge	r0, ip, r5, lsl #6
    19f0:	13002000 	movwne	r2, #0
    19f4:	000004ed 	andeq	r0, r0, sp, ror #9
    19f8:	23b84001 			; <UNDEFINED> instruction: 0x23b84001
    19fc:	020c2000 	andeq	r2, ip, #0
    1a00:	9c010000 	stcls	0, cr0, [r1], {-0}
    1a04:	000e120f 	andeq	r1, lr, pc, lsl #4
    1a08:	9e420100 	dvflss	f0, f2, f0
    1a0c:	02000000 	andeq	r0, r0, #0
    1a10:	1c0f7491 	cfstrsne	mvf7, [pc], {145}	; 0x91
    1a14:	0100000e 	tsteq	r0, lr
    1a18:	00009e45 	andeq	r9, r0, r5, asr #28
    1a1c:	70910200 	addsvc	r0, r1, r0, lsl #4
    1a20:	000c120f 	andeq	r1, ip, pc, lsl #4
    1a24:	9e480100 	dvflse	f0, f0, f0
    1a28:	02000000 	andeq	r0, r0, #0
    1a2c:	330f6c91 	movwcc	r6, #64657	; 0xfc91
    1a30:	0100000b 	tsteq	r0, fp
    1a34:	00009e4c 	andeq	r9, r0, ip, asr #28
    1a38:	68910200 	ldmvs	r1, {r9}
    1a3c:	000e3c0f 	andeq	r3, lr, pc, lsl #24
    1a40:	9e4f0100 	dvflse	f0, f7, f0
    1a44:	02000000 	andeq	r0, r0, #0
    1a48:	d00f6491 	mulle	pc, r1, r4	; <UNPREDICTABLE>
    1a4c:	0100000b 	tsteq	r0, fp
    1a50:	00009e52 	andeq	r9, r0, r2, asr lr
    1a54:	60910200 	addsvs	r0, r1, r0, lsl #4
    1a58:	000de80f 	andeq	lr, sp, pc, lsl #16
    1a5c:	9e570100 	rdflss	f0, f7, f0
    1a60:	02000000 	andeq	r0, r0, #0
    1a64:	460f5c91 			; <UNDEFINED> instruction: 0x460f5c91
    1a68:	0100000e 	tsteq	r0, lr
    1a6c:	00009e5a 	andeq	r9, r0, sl, asr lr
    1a70:	58910200 	ldmpl	r1, {r9}
    1a74:	000e500f 	andeq	r5, lr, pc
    1a78:	9e5d0100 	rdflse	f0, f5, f0
    1a7c:	02000000 	andeq	r0, r0, #0
    1a80:	590f5491 	stmdbpl	pc, {r0, r4, r7, sl, ip, lr}	; <UNPREDICTABLE>
    1a84:	0100000b 	tsteq	r0, fp
    1a88:	00009e61 	andeq	r9, r0, r1, ror #28
    1a8c:	50910200 	addspl	r0, r1, r0, lsl #4
    1a90:	000b9d0f 	andeq	r9, fp, pc, lsl #26
    1a94:	9e640100 	powlss	f0, f4, f0
    1a98:	02000000 	andeq	r0, r0, #0
    1a9c:	a70f4c91 			; <UNDEFINED> instruction: 0xa70f4c91
    1aa0:	0100000b 	tsteq	r0, fp
    1aa4:	00009e67 	andeq	r9, r0, r7, ror #28
    1aa8:	48910200 	ldmmi	r1, {r9}
    1aac:	000e650f 	andeq	r6, lr, pc, lsl #10
    1ab0:	9e6b0100 	powlse	f0, f3, f0
    1ab4:	02000000 	andeq	r0, r0, #0
    1ab8:	ed0f4491 	cfstrs	mvf4, [pc, #-580]	; 187c <startup-0x1fffe784>
    1abc:	0100000c 	tsteq	r0, ip
    1ac0:	00009e6e 	andeq	r9, r0, lr, ror #28
    1ac4:	40910200 	addsmi	r0, r1, r0, lsl #4
    1ac8:	000bc60f 	andeq	ip, fp, pc, lsl #12
    1acc:	9e710100 	rpwlss	f0, f1, f0
    1ad0:	03000000 	movweq	r0, #0
    1ad4:	007fbc91 			; <UNDEFINED> instruction: 0x007fbc91
    1ad8:	00049800 	andeq	r9, r4, r0, lsl #16
    1adc:	6c000400 	cfstrsvs	mvf0, [r0], {-0}
    1ae0:	04000005 	streq	r0, [r0], #-5
    1ae4:	0000af01 	andeq	sl, r0, r1, lsl #30
    1ae8:	0f150c00 	svceq	0x00150c00
    1aec:	271c0000 	ldrcs	r0, [ip, -r0]
    1af0:	02382000 	eorseq	r2, r8, #0
    1af4:	09520000 	ldmdbeq	r2, {}^	; <UNPREDICTABLE>
    1af8:	0c020000 	stceq	0, cr0, [r2], {-0}
    1afc:	004e0502 	subeq	r0, lr, r2, lsl #10
    1b00:	91030000 	mrsls	r0, (UNDEF: 3)
    1b04:	02000003 	andeq	r0, r0, #3
    1b08:	00004e07 	andeq	r4, r0, r7, lsl #28
    1b0c:	74030000 	strvc	r0, [r3], #-0
    1b10:	02000007 	andeq	r0, r0, #7
    1b14:	00004e08 	andeq	r4, r0, r8, lsl #28
    1b18:	6a030400 	bvs	c2b20 <startup-0x1ff3d4e0>
    1b1c:	0200001a 	andeq	r0, r0, #26
    1b20:	00005509 	andeq	r5, r0, r9, lsl #10
    1b24:	04000800 	streq	r0, [r0], #-2048	; 0xfffff800
    1b28:	03bf0704 			; <UNDEFINED> instruction: 0x03bf0704
    1b2c:	04050000 	streq	r0, [r5], #-0
    1b30:	0000005b 	andeq	r0, r0, fp, asr r0
    1b34:	17080104 	strne	r0, [r8, -r4, lsl #2]
    1b38:	06000005 	streq	r0, [r0], -r5
    1b3c:	00001bd4 	ldrdeq	r1, [r0], -r4
    1b40:	00210a02 	eoreq	r0, r1, r2, lsl #20
    1b44:	34070000 	strcc	r0, [r7], #-0
    1b48:	0c000000 	stceq	0, cr0, [r0], {-0}
    1b4c:	009e0603 	addseq	r0, lr, r3, lsl #12
    1b50:	0d030000 	stceq	0, cr0, [r3, #-0]
    1b54:	03000006 	movweq	r0, #6
    1b58:	00009e07 	andeq	r9, r0, r7, lsl #28
    1b5c:	3b030000 	blcc	c1b64 <startup-0x1ff3e49c>
    1b60:	03000000 	movweq	r0, #0
    1b64:	00009e08 	andeq	r9, r0, r8, lsl #28
    1b68:	30030400 	andcc	r0, r3, r0, lsl #8
    1b6c:	03000000 	movweq	r0, #0
    1b70:	00009e09 	andeq	r9, r0, r9, lsl #28
    1b74:	05000800 	streq	r0, [r0, #-2048]	; 0xfffff800
    1b78:	00006204 	andeq	r6, r0, r4, lsl #4
    1b7c:	15580600 	ldrbne	r0, [r8, #-1536]	; 0xfffffa00
    1b80:	0a030000 	beq	c1b88 <startup-0x1ff3e478>
    1b84:	0000006d 	andeq	r0, r0, sp, rrx
    1b88:	00073707 	andeq	r3, r7, r7, lsl #14
    1b8c:	06042400 	streq	r2, [r4], -r0, lsl #8
    1b90:	00000128 	andeq	r0, r0, r8, lsr #2
    1b94:	0004a503 	andeq	sl, r4, r3, lsl #10
    1b98:	28070400 	stmdacs	r7, {sl}
    1b9c:	00000001 	andeq	r0, r0, r1
    1ba0:	00074303 	andeq	r4, r7, r3, lsl #6
    1ba4:	2e080400 	cfcpyscs	mvf0, mvf8
    1ba8:	04000001 	streq	r0, [r0], #-1
    1bac:	00069603 	andeq	r9, r6, r3, lsl #12
    1bb0:	2e090400 	cfcpyscs	mvf0, mvf9
    1bb4:	08000001 	stmdaeq	r0, {r0}
    1bb8:	0006bf03 	andeq	fp, r6, r3, lsl #30
    1bbc:	460c0400 	strmi	r0, [ip], -r0, lsl #8
    1bc0:	0c000001 	stceq	0, cr0, [r0], {1}
    1bc4:	00037803 	andeq	r7, r3, r3, lsl #16
    1bc8:	460d0400 	strmi	r0, [sp], -r0, lsl #8
    1bcc:	10000001 	andne	r0, r0, r1
    1bd0:	0004b703 	andeq	fp, r4, r3, lsl #14
    1bd4:	2e100400 	cfmulscs	mvf0, mvf0, mvf0
    1bd8:	14000001 	strne	r0, [r0], #-1
    1bdc:	00008003 	andeq	r8, r0, r3
    1be0:	2e110400 	cfmulscs	mvf0, mvf1, mvf0
    1be4:	18000001 	stmdane	r0, {r0}
    1be8:	00040f03 	andeq	r0, r4, r3, lsl #30
    1bec:	2e120400 	cfmulscs	mvf0, mvf2, mvf0
    1bf0:	1c000001 	stcne	0, cr0, [r0], {1}
    1bf4:	00041f03 	andeq	r1, r4, r3, lsl #30
    1bf8:	2e130400 	cfmulscs	mvf0, mvf3, mvf0
    1bfc:	20000001 	andcs	r0, r0, r1
    1c00:	a4040500 	strge	r0, [r4], #-1280	; 0xfffffb00
    1c04:	08000000 	stmdaeq	r0, {}	; <UNPREDICTABLE>
    1c08:	6e690504 	cdpvs	5, 6, cr0, cr9, cr4, {0}
    1c0c:	40090074 	andmi	r0, r9, r4, ror r0
    1c10:	0a000001 	beq	1c1c <startup-0x1fffe3e4>
    1c14:	00000140 	andeq	r0, r0, r0, asr #2
    1c18:	af040500 	svcge	0x00040500
    1c1c:	05000000 	streq	r0, [r0, #-0]
    1c20:	00013504 	andeq	r3, r1, r4, lsl #10
    1c24:	07380600 	ldreq	r0, [r8, -r0, lsl #12]!
    1c28:	15040000 	strne	r0, [r4, #-0]
    1c2c:	000000af 	andeq	r0, r0, pc, lsr #1
    1c30:	0001620b 	andeq	r6, r1, fp, lsl #4
    1c34:	00016200 	andeq	r6, r1, r0, lsl #4
    1c38:	05000c00 	streq	r0, [r0, #-3072]	; 0xfffff400
    1c3c:	00014c04 	andeq	r4, r1, r4, lsl #24
    1c40:	059a0d00 	ldreq	r0, [sl, #3328]	; 0xd00
    1c44:	1c040000 	stcne	0, cr0, [r4], {-0}
    1c48:	00000157 	andeq	r0, r0, r7, asr r1
    1c4c:	00045a0d 	andeq	r5, r4, sp, lsl #20
    1c50:	2e1d0400 	cfmulscs	mvf0, mvf13, mvf0
    1c54:	0b000001 	bleq	1c60 <startup-0x1fffe3a0>
    1c58:	0000005b 	andeq	r0, r0, fp, asr r0
    1c5c:	0000018e 	andeq	r0, r0, lr, lsl #3
    1c60:	00018e0e 	andeq	r8, r1, lr, lsl #28
    1c64:	04003500 	streq	r3, [r0], #-1280	; 0xfffffb00
    1c68:	043c0704 	ldrteq	r0, [ip], #-1796	; 0xfffff8fc
    1c6c:	730f0000 	movwvc	r0, #61440	; 0xf000
    1c70:	05000022 	streq	r0, [r0, #-34]	; 0xffffffde
    1c74:	00017e03 	andeq	r7, r1, r3, lsl #28
    1c78:	90030500 	andls	r0, r3, r0, lsl #10
    1c7c:	0f2000a1 	svceq	0x002000a1
    1c80:	00002511 	andeq	r2, r0, r1, lsl r5
    1c84:	017e0306 	cmneq	lr, r6, lsl #6
    1c88:	03050000 	movweq	r0, #20480	; 0x5000
    1c8c:	2000a1c8 	andcs	sl, r0, r8, asr #3
    1c90:	00252c0f 	eoreq	r2, r5, pc, lsl #24
    1c94:	7e030700 	cdpvc	7, 0, cr0, cr3, cr0, {0}
    1c98:	05000001 	streq	r0, [r0, #-1]
    1c9c:	00a20003 	adceq	r0, r2, r3
    1ca0:	22e20f20 	rsccs	r0, r2, #32, 30	; 0x80
    1ca4:	03080000 	movweq	r0, #32768	; 0x8000
    1ca8:	0000017e 	andeq	r0, r0, lr, ror r1
    1cac:	a2380305 	eorsge	r0, r8, #335544320	; 0x14000000
    1cb0:	c70f2000 	strgt	r2, [pc, -r0]
    1cb4:	09000022 	stmdbeq	r0, {r1, r5}
    1cb8:	00017e03 	andeq	r7, r1, r3, lsl #28
    1cbc:	70030500 	andvc	r0, r3, r0, lsl #10
    1cc0:	0f2000a2 	svceq	0x002000a2
    1cc4:	00002564 	andeq	r2, r0, r4, ror #10
    1cc8:	017e030a 	cmneq	lr, sl, lsl #6
    1ccc:	03050000 	movweq	r0, #20480	; 0x5000
    1cd0:	2000a2a8 	andcs	sl, r0, r8, lsr #5
    1cd4:	0023140f 	eoreq	r1, r3, pc, lsl #8
    1cd8:	7e030b00 	vmlavc.f64	d0, d3, d0
    1cdc:	05000001 	streq	r0, [r0, #-1]
    1ce0:	00a2e003 	adceq	lr, r2, r3
    1ce4:	26ef0f20 	strbtcs	r0, [pc], r0, lsr #30
    1ce8:	030c0000 	movweq	r0, #49152	; 0xc000
    1cec:	0000017e 	andeq	r0, r0, lr, ror r1
    1cf0:	a3180305 	tstge	r8, #335544320	; 0x14000000
    1cf4:	9c0f2000 	stcls	0, cr2, [pc], {-0}
    1cf8:	0d000025 	stceq	0, cr0, [r0, #-148]	; 0xffffff6c
    1cfc:	00017e03 	andeq	r7, r1, r3, lsl #28
    1d00:	50030500 	andpl	r0, r3, r0, lsl #10
    1d04:	102000a3 	eorne	r0, r0, r3, lsr #1
    1d08:	000023e9 	andeq	r2, r0, r9, ror #7
    1d0c:	009e0e01 	addseq	r0, lr, r1, lsl #28
    1d10:	03050000 	movweq	r0, #20480	; 0x5000
    1d14:	20005dc4 	andcs	r5, r0, r4, asr #27
    1d18:	0025ce10 	eoreq	ip, r5, r0, lsl lr
    1d1c:	9e0f0100 	adflse	f0, f7, f0
    1d20:	05000000 	streq	r0, [r0, #-0]
    1d24:	005cf003 	subseq	pc, ip, r3
    1d28:	25b81020 	ldrcs	r1, [r8, #32]!
    1d2c:	10010000 	andne	r0, r1, r0
    1d30:	0000009e 	muleq	r0, lr, r0
    1d34:	5df00305 	ldclpl	3, cr0, [r0, #20]!
    1d38:	0e102000 	cdpeq	0, 1, cr2, cr0, cr0, {0}
    1d3c:	01000027 	tsteq	r0, r7, lsr #32
    1d40:	00009e11 	andeq	r9, r0, r1, lsl lr
    1d44:	00030500 	andeq	r0, r3, r0, lsl #10
    1d48:	1020005e 	eorne	r0, r0, lr, asr r0
    1d4c:	00002481 	andeq	r2, r0, r1, lsl #9
    1d50:	009e1201 	addseq	r1, lr, r1, lsl #4
    1d54:	03050000 	movweq	r0, #20480	; 0x5000
    1d58:	20005d64 	andcs	r5, r0, r4, ror #26
    1d5c:	00243310 	eoreq	r3, r4, r0, lsl r3
    1d60:	9e130100 	muflss	f0, f3, f0
    1d64:	05000000 	streq	r0, [r0, #-0]
    1d68:	005cf403 	subseq	pc, ip, r3, lsl #8
    1d6c:	26d91020 	ldrbcs	r1, [r9], r0, lsr #32
    1d70:	14010000 	strne	r0, [r1], #-0
    1d74:	0000009e 	muleq	r0, lr, r0
    1d78:	5d8c0305 	stcpl	3, cr0, [ip, #20]
    1d7c:	91102000 	tstls	r0, r0
    1d80:	01000026 	tsteq	r0, r6, lsr #32
    1d84:	00009e15 	andeq	r9, r0, r5, lsl lr
    1d88:	c8030500 	stmdagt	r3, {r8, sl}
    1d8c:	1020005d 	eorne	r0, r0, sp, asr r0
    1d90:	0000264e 	andeq	r2, r0, lr, asr #12
    1d94:	009e1601 	addseq	r1, lr, r1, lsl #12
    1d98:	03050000 	movweq	r0, #20480	; 0x5000
    1d9c:	20005db4 			; <UNDEFINED> instruction: 0x20005db4
    1da0:	000eca10 	andeq	ip, lr, r0, lsl sl
    1da4:	62180100 	andsvs	r0, r8, #0, 2
    1da8:	05000000 	streq	r0, [r0, #-0]
    1dac:	005d4003 	subseq	r4, sp, r3
    1db0:	0e801020 	cdpeq	0, 8, cr1, cr0, cr0, {1}
    1db4:	19010000 	stmdbne	r1, {}	; <UNPREDICTABLE>
    1db8:	00000062 	andeq	r0, r0, r2, rrx
    1dbc:	5dd80305 	ldclpl	3, cr0, [r8, #20]
    1dc0:	d9102000 	ldmdble	r0, {sp}
    1dc4:	0100000e 	tsteq	r0, lr
    1dc8:	0000621a 	andeq	r6, r0, sl, lsl r2
    1dcc:	68030500 	stmdavs	r3, {r8, sl}
    1dd0:	1020005d 	eorne	r0, r0, sp, asr r0
    1dd4:	00000eaf 	andeq	r0, r0, pc, lsr #29
    1dd8:	00621b01 	rsbeq	r1, r2, r1, lsl #22
    1ddc:	03050000 	movweq	r0, #20480	; 0x5000
    1de0:	20005d34 	andcs	r5, r0, r4, lsr sp
    1de4:	000e9f10 	andeq	r9, lr, r0, lsl pc
    1de8:	621c0100 	andsvs	r0, ip, #0, 2
    1dec:	05000000 	streq	r0, [r0, #-0]
    1df0:	005de403 	subseq	lr, sp, r3, lsl #8
    1df4:	0ee71020 	cdpeq	0, 14, cr1, cr7, cr0, {1}
    1df8:	1d010000 	stcne	0, cr0, [r1, #-0]
    1dfc:	00000062 	andeq	r0, r0, r2, rrx
    1e00:	5d800305 	stcpl	3, cr0, [r0, #20]
    1e04:	f6102000 			; <UNDEFINED> instruction: 0xf6102000
    1e08:	0100000e 	tsteq	r0, lr
    1e0c:	0000621e 	andeq	r6, r0, lr, lsl r2
    1e10:	74030500 	strvc	r0, [r3], #-1280	; 0xfffffb00
    1e14:	1020005d 	eorne	r0, r0, sp, asr r0
    1e18:	00000e8f 	andeq	r0, r0, pc, lsl #29
    1e1c:	00621f01 	rsbeq	r1, r2, r1, lsl #30
    1e20:	03050000 	movweq	r0, #20480	; 0x5000
    1e24:	20005d4c 	andcs	r5, r0, ip, asr #26
    1e28:	000f0610 	andeq	r0, pc, r0, lsl r6	; <UNPREDICTABLE>
    1e2c:	62200100 	eorvs	r0, r0, #0, 2
    1e30:	05000000 	streq	r0, [r0, #-0]
    1e34:	005db803 	subseq	fp, sp, r3, lsl #16
    1e38:	267a1020 	ldrbtcs	r1, [sl], -r0, lsr #32
    1e3c:	23010000 	movwcs	r0, #4096	; 0x1000
    1e40:	0000014c 	andeq	r0, r0, ip, asr #2
    1e44:	5d900305 	ldcpl	3, cr0, [r0, #20]
    1e48:	fe102000 	cdp2	0, 1, cr2, cr0, cr0, {0}
    1e4c:	01000022 	tsteq	r0, r2, lsr #32
    1e50:	0000a424 	andeq	sl, r0, r4, lsr #8
    1e54:	cc030500 	cfstr32gt	mvfx0, [r3], {-0}
    1e58:	1020005d 	eorne	r0, r0, sp, asr r0
    1e5c:	000024c5 	andeq	r2, r0, r5, asr #9
    1e60:	00a42501 	adceq	r2, r4, r1, lsl #10
    1e64:	03050000 	movweq	r0, #20480	; 0x5000
    1e68:	20005d28 	andcs	r5, r0, r8, lsr #26
    1e6c:	00266410 	eoreq	r6, r6, r0, lsl r4
    1e70:	a4260100 	strtge	r0, [r6], #-256	; 0xffffff00
    1e74:	05000000 	streq	r0, [r0, #-0]
    1e78:	005df403 	subseq	pc, sp, r3, lsl #8
    1e7c:	222c1020 	eorcs	r1, ip, #32
    1e80:	27010000 	strcs	r0, [r1, -r0]
    1e84:	000000a4 	andeq	r0, r0, r4, lsr #1
    1e88:	5d580305 	ldclpl	3, cr0, [r8, #-20]	; 0xffffffec
    1e8c:	a40b2000 	strge	r2, [fp], #-0
    1e90:	c5000000 	strgt	r0, [r0, #-0]
    1e94:	0e000003 	cdpeq	0, 0, cr0, cr0, cr3, {0}
    1e98:	0000018e 	andeq	r0, r0, lr, lsl #3
    1e9c:	a6100003 	ldrge	r0, [r0], -r3
    1ea0:	01000026 	tsteq	r0, r6, lsr #32
    1ea4:	0003b528 	andeq	fp, r3, r8, lsr #10
    1ea8:	f8030500 			; <UNDEFINED> instruction: 0xf8030500
    1eac:	1120005c 	qsubne	r0, ip, r0
    1eb0:	00000ebf 			; <UNDEFINED> instruction: 0x00000ebf
    1eb4:	285c4c01 	ldmdacs	ip, {r0, sl, fp, lr}^
    1eb8:	00f82000 	rscseq	r2, r8, r0
    1ebc:	9c010000 	stcls	0, cr0, [r1], {-0}
    1ec0:	0000040b 	andeq	r0, r0, fp, lsl #8
    1ec4:	00267a12 	eoreq	r7, r6, r2, lsl sl
    1ec8:	624c0100 	subvs	r0, ip, #0, 2
    1ecc:	02000001 	andeq	r0, r0, #1
    1ed0:	710f6c91 			; <UNDEFINED> instruction: 0x710f6c91
    1ed4:	01000009 	tsteq	r0, r9
    1ed8:	00012e4d 	andeq	r2, r1, sp, asr #28
    1edc:	88030500 	stmdahi	r3, {r8, sl}
    1ee0:	002000a3 	eoreq	r0, r0, r3, lsr #1
    1ee4:	0004ed13 	andeq	lr, r4, r3, lsl sp
    1ee8:	1c290100 	stfnes	f0, [r9], #-0
    1eec:	40200027 	eormi	r0, r0, r7, lsr #32
    1ef0:	01000001 	tsteq	r0, r1
    1ef4:	0e120f9c 	mrceq	15, 0, r0, cr2, cr12, {4}
    1ef8:	2b010000 	blcs	41f00 <startup-0x1ffbe100>
    1efc:	0000009e 	muleq	r0, lr, r0
    1f00:	0f749102 	svceq	0x00749102
    1f04:	00000e1c 	andeq	r0, r0, ip, lsl lr
    1f08:	009e2e01 	addseq	r2, lr, r1, lsl #28
    1f0c:	91020000 	mrsls	r0, (UNDEF: 2)
    1f10:	0c120f70 	ldceq	15, cr0, [r2], {112}	; 0x70
    1f14:	31010000 	mrscc	r0, (UNDEF: 1)
    1f18:	0000009e 	muleq	r0, lr, r0
    1f1c:	0f6c9102 	svceq	0x006c9102
    1f20:	00000b33 	andeq	r0, r0, r3, lsr fp
    1f24:	009e3501 	addseq	r3, lr, r1, lsl #10
    1f28:	91020000 	mrsls	r0, (UNDEF: 2)
    1f2c:	0e3c0f68 	cdpeq	15, 3, cr0, cr12, cr8, {3}
    1f30:	38010000 	stmdacc	r1, {}	; <UNPREDICTABLE>
    1f34:	0000009e 	muleq	r0, lr, r0
    1f38:	0f649102 	svceq	0x00649102
    1f3c:	00000bd0 	ldrdeq	r0, [r0], -r0	; <UNPREDICTABLE>
    1f40:	009e3b01 	addseq	r3, lr, r1, lsl #22
    1f44:	91020000 	mrsls	r0, (UNDEF: 2)
    1f48:	0de80f60 	stcleq	15, cr0, [r8, #384]!	; 0x180
    1f4c:	40010000 	andmi	r0, r1, r0
    1f50:	0000009e 	muleq	r0, lr, r0
    1f54:	0f5c9102 	svceq	0x005c9102
    1f58:	00000e46 	andeq	r0, r0, r6, asr #28
    1f5c:	009e4301 	addseq	r4, lr, r1, lsl #6
    1f60:	91020000 	mrsls	r0, (UNDEF: 2)
    1f64:	0e500f58 	mrceq	15, 2, r0, cr0, cr8, {2}
    1f68:	46010000 	strmi	r0, [r1], -r0
    1f6c:	0000009e 	muleq	r0, lr, r0
    1f70:	00549102 	subseq	r9, r4, r2, lsl #2
    1f74:	00055700 	andeq	r5, r5, r0, lsl #14
    1f78:	6c000400 	cfstrsvs	mvf0, [r0], {-0}
    1f7c:	04000006 	streq	r0, [r0], #-6
    1f80:	0000af01 	andeq	sl, r0, r1, lsl #30
    1f84:	10330c00 	eorsne	r0, r3, r0, lsl #24
    1f88:	29540000 	ldmdbcs	r4, {}^	; <UNPREDICTABLE>
    1f8c:	03b02000 	movseq	r2, #0
    1f90:	0ab70000 	beq	fedc1f98 <firstTime.4108+0xdedaca40>
    1f94:	0c020000 	stceq	0, cr0, [r2], {-0}
    1f98:	004e0502 	subeq	r0, lr, r2, lsl #10
    1f9c:	91030000 	mrsls	r0, (UNDEF: 3)
    1fa0:	02000003 	andeq	r0, r0, #3
    1fa4:	00004e07 	andeq	r4, r0, r7, lsl #28
    1fa8:	74030000 	strvc	r0, [r3], #-0
    1fac:	02000007 	andeq	r0, r0, #7
    1fb0:	00004e08 	andeq	r4, r0, r8, lsl #28
    1fb4:	6a030400 	bvs	c2fbc <startup-0x1ff3d044>
    1fb8:	0200001a 	andeq	r0, r0, #26
    1fbc:	00005509 	andeq	r5, r0, r9, lsl #10
    1fc0:	04000800 	streq	r0, [r0], #-2048	; 0xfffff800
    1fc4:	03bf0704 			; <UNDEFINED> instruction: 0x03bf0704
    1fc8:	04050000 	streq	r0, [r5], #-0
    1fcc:	0000005b 	andeq	r0, r0, fp, asr r0
    1fd0:	17080104 	strne	r0, [r8, -r4, lsl #2]
    1fd4:	06000005 	streq	r0, [r0], -r5
    1fd8:	00001bd4 	ldrdeq	r1, [r0], -r4
    1fdc:	00210a02 	eoreq	r0, r1, r2, lsl #20
    1fe0:	34070000 	strcc	r0, [r7], #-0
    1fe4:	0c000000 	stceq	0, cr0, [r0], {-0}
    1fe8:	009e0603 	addseq	r0, lr, r3, lsl #12
    1fec:	0d030000 	stceq	0, cr0, [r3, #-0]
    1ff0:	03000006 	movweq	r0, #6
    1ff4:	00009e07 	andeq	r9, r0, r7, lsl #28
    1ff8:	3b030000 	blcc	c2000 <startup-0x1ff3e000>
    1ffc:	03000000 	movweq	r0, #0
    2000:	00009e08 	andeq	r9, r0, r8, lsl #28
    2004:	30030400 	andcc	r0, r3, r0, lsl #8
    2008:	03000000 	movweq	r0, #0
    200c:	00009e09 	andeq	r9, r0, r9, lsl #28
    2010:	05000800 	streq	r0, [r0, #-2048]	; 0xfffff800
    2014:	00006204 	andeq	r6, r0, r4, lsl #4
    2018:	15580600 	ldrbne	r0, [r8, #-1536]	; 0xfffffa00
    201c:	0a030000 	beq	c2024 <startup-0x1ff3dfdc>
    2020:	0000006d 	andeq	r0, r0, sp, rrx
    2024:	00073707 	andeq	r3, r7, r7, lsl #14
    2028:	06042400 	streq	r2, [r4], -r0, lsl #8
    202c:	00000128 	andeq	r0, r0, r8, lsr #2
    2030:	0004a503 	andeq	sl, r4, r3, lsl #10
    2034:	28070400 	stmdacs	r7, {sl}
    2038:	00000001 	andeq	r0, r0, r1
    203c:	00074303 	andeq	r4, r7, r3, lsl #6
    2040:	2e080400 	cfcpyscs	mvf0, mvf8
    2044:	04000001 	streq	r0, [r0], #-1
    2048:	00069603 	andeq	r9, r6, r3, lsl #12
    204c:	2e090400 	cfcpyscs	mvf0, mvf9
    2050:	08000001 	stmdaeq	r0, {r0}
    2054:	0006bf03 	andeq	fp, r6, r3, lsl #30
    2058:	460c0400 	strmi	r0, [ip], -r0, lsl #8
    205c:	0c000001 	stceq	0, cr0, [r0], {1}
    2060:	00037803 	andeq	r7, r3, r3, lsl #16
    2064:	460d0400 	strmi	r0, [sp], -r0, lsl #8
    2068:	10000001 	andne	r0, r0, r1
    206c:	0004b703 	andeq	fp, r4, r3, lsl #14
    2070:	2e100400 	cfmulscs	mvf0, mvf0, mvf0
    2074:	14000001 	strne	r0, [r0], #-1
    2078:	00008003 	andeq	r8, r0, r3
    207c:	2e110400 	cfmulscs	mvf0, mvf1, mvf0
    2080:	18000001 	stmdane	r0, {r0}
    2084:	00040f03 	andeq	r0, r4, r3, lsl #30
    2088:	2e120400 	cfmulscs	mvf0, mvf2, mvf0
    208c:	1c000001 	stcne	0, cr0, [r0], {1}
    2090:	00041f03 	andeq	r1, r4, r3, lsl #30
    2094:	2e130400 	cfmulscs	mvf0, mvf3, mvf0
    2098:	20000001 	andcs	r0, r0, r1
    209c:	a4040500 	strge	r0, [r4], #-1280	; 0xfffffb00
    20a0:	08000000 	stmdaeq	r0, {}	; <UNPREDICTABLE>
    20a4:	6e690504 	cdpvs	5, 6, cr0, cr9, cr4, {0}
    20a8:	40090074 	andmi	r0, r9, r4, ror r0
    20ac:	0a000001 	beq	20b8 <startup-0x1fffdf48>
    20b0:	00000140 	andeq	r0, r0, r0, asr #2
    20b4:	af040500 	svcge	0x00040500
    20b8:	05000000 	streq	r0, [r0, #-0]
    20bc:	00013504 	andeq	r3, r1, r4, lsl #10
    20c0:	07380600 	ldreq	r0, [r8, -r0, lsl #12]!
    20c4:	15040000 	strne	r0, [r4, #-0]
    20c8:	000000af 	andeq	r0, r0, pc, lsr #1
    20cc:	0001620b 	andeq	r6, r1, fp, lsl #4
    20d0:	00016200 	andeq	r6, r1, r0, lsl #4
    20d4:	05000c00 	streq	r0, [r0, #-3072]	; 0xfffff400
    20d8:	00014c04 	andeq	r4, r1, r4, lsl #24
    20dc:	059a0d00 	ldreq	r0, [sl, #3328]	; 0xd00
    20e0:	1c040000 	stcne	0, cr0, [r4], {-0}
    20e4:	00000157 	andeq	r0, r0, r7, asr r1
    20e8:	00045a0d 	andeq	r5, r4, sp, lsl #20
    20ec:	2e1d0400 	cfmulscs	mvf0, mvf13, mvf0
    20f0:	04000001 	streq	r0, [r0], #-1
    20f4:	03b90702 			; <UNDEFINED> instruction: 0x03b90702
    20f8:	5b0b0000 	blpl	2c2100 <startup-0x1fd3df00>
    20fc:	95000000 	strls	r0, [r0, #-0]
    2100:	0e000001 	cdpeq	0, 0, cr0, cr0, cr1, {0}
    2104:	00000195 	muleq	r0, r5, r1
    2108:	04040035 	streq	r0, [r4], #-53	; 0xffffffcb
    210c:	00043c07 	andeq	r3, r4, r7, lsl #24
    2110:	22730f00 	rsbscs	r0, r3, #0, 30
    2114:	03050000 	movweq	r0, #20480	; 0x5000
    2118:	00000185 	andeq	r0, r0, r5, lsl #3
    211c:	a38c0305 	orrge	r0, ip, #335544320	; 0x14000000
    2120:	110f2000 	mrsne	r2, CPSR
    2124:	06000025 	streq	r0, [r0], -r5, lsr #32
    2128:	00018503 	andeq	r8, r1, r3, lsl #10
    212c:	c4030500 	strgt	r0, [r3], #-1280	; 0xfffffb00
    2130:	0f2000a3 	svceq	0x002000a3
    2134:	0000252c 	andeq	r2, r0, ip, lsr #10
    2138:	01850307 	orreq	r0, r5, r7, lsl #6
    213c:	03050000 	movweq	r0, #20480	; 0x5000
    2140:	2000a3fc 	strdcs	sl, [r0], -ip
    2144:	0022e20f 	eoreq	lr, r2, pc, lsl #4
    2148:	85030800 	strhi	r0, [r3, #-2048]	; 0xfffff800
    214c:	05000001 	streq	r0, [r0, #-1]
    2150:	00a43403 	adceq	r3, r4, r3, lsl #8
    2154:	22c70f20 	sbccs	r0, r7, #32, 30	; 0x80
    2158:	03090000 	movweq	r0, #36864	; 0x9000
    215c:	00000185 	andeq	r0, r0, r5, lsl #3
    2160:	a46c0305 	strbtge	r0, [ip], #-773	; 0xfffffcfb
    2164:	640f2000 	strvs	r2, [pc], #-0	; 216c <startup-0x1fffde94>
    2168:	0a000025 	beq	2204 <startup-0x1fffddfc>
    216c:	00018503 	andeq	r8, r1, r3, lsl #10
    2170:	a4030500 	strge	r0, [r3], #-1280	; 0xfffffb00
    2174:	0f2000a4 	svceq	0x002000a4
    2178:	00002314 	andeq	r2, r0, r4, lsl r3
    217c:	0185030b 	orreq	r0, r5, fp, lsl #6
    2180:	03050000 	movweq	r0, #20480	; 0x5000
    2184:	2000a4dc 	ldrdcs	sl, [r0], -ip
    2188:	0026ef0f 	eoreq	lr, r6, pc, lsl #30
    218c:	85030c00 	strhi	r0, [r3, #-3072]	; 0xfffff400
    2190:	05000001 	streq	r0, [r0, #-1]
    2194:	00a51403 	adceq	r1, r5, r3, lsl #8
    2198:	259c0f20 	ldrcs	r0, [ip, #3872]	; 0xf20
    219c:	030d0000 	movweq	r0, #53248	; 0xd000
    21a0:	00000185 	andeq	r0, r0, r5, lsl #3
    21a4:	a54c0305 	strbge	r0, [ip, #-773]	; 0xfffffcfb
    21a8:	d2102000 	andsle	r2, r0, #0
    21ac:	0100000f 	tsteq	r0, pc
    21b0:	00009e12 	andeq	r9, r0, r2, lsl lr
    21b4:	48030500 	stmdami	r3, {r8, sl}
    21b8:	1020005e 	eorne	r0, r0, lr, asr r0
    21bc:	00000f9d 	muleq	r0, sp, pc	; <UNPREDICTABLE>
    21c0:	009e1301 	addseq	r1, lr, r1, lsl #6
    21c4:	03050000 	movweq	r0, #20480	; 0x5000
    21c8:	20005ee0 	andcs	r5, r0, r0, ror #29
    21cc:	00105f10 	andseq	r5, r0, r0, lsl pc
    21d0:	9e140100 	muflss	f0, f4, f0
    21d4:	05000000 	streq	r0, [r0, #-0]
    21d8:	005eb803 	subseq	fp, lr, r3, lsl #16
    21dc:	101f1020 	andsne	r1, pc, r0, lsr #32
    21e0:	15010000 	strne	r0, [r1, #-0]
    21e4:	0000009e 	muleq	r0, lr, r0
    21e8:	5ec40305 	cdppl	3, 12, cr0, cr4, cr5, {0}
    21ec:	94102000 	ldrls	r2, [r0], #-0
    21f0:	0100000f 	tsteq	r0, pc
    21f4:	00009e16 	andeq	r9, r0, r6, lsl lr
    21f8:	34030500 	strcc	r0, [r3], #-1280	; 0xfffffb00
    21fc:	1020005e 	eorne	r0, r0, lr, asr r0
    2200:	00000f65 	andeq	r0, r0, r5, ror #30
    2204:	009e1701 	addseq	r1, lr, r1, lsl #14
    2208:	03050000 	movweq	r0, #20480	; 0x5000
    220c:	20005ebc 			; <UNDEFINED> instruction: 0x20005ebc
    2210:	000f8610 	andeq	r8, pc, r0, lsl r6	; <UNPREDICTABLE>
    2214:	9e180100 	muflse	f0, f0, f0
    2218:	05000000 	streq	r0, [r0, #-0]
    221c:	005e4403 	subseq	r4, lr, r3, lsl #8
    2220:	0ff01020 	svceq	0x00f01020
    2224:	19010000 	stmdbne	r1, {}	; <UNPREDICTABLE>
    2228:	0000009e 	muleq	r0, lr, r0
    222c:	5ef00305 	cdppl	3, 15, cr0, cr0, cr5, {0}
    2230:	07102000 	ldreq	r2, [r0, -r0]
    2234:	01000010 	tsteq	r0, r0, lsl r0
    2238:	00009e1a 	andeq	r9, r0, sl, lsl lr
    223c:	c0030500 	andgt	r0, r3, r0, lsl #10
    2240:	1020005e 	eorne	r0, r0, lr, asr r0
    2244:	00001070 	andeq	r1, r0, r0, ror r0
    2248:	00621c01 	rsbeq	r1, r2, r1, lsl #24
    224c:	03050000 	movweq	r0, #20480	; 0x5000
    2250:	20005ed4 	ldrdcs	r5, [r0], -r4
    2254:	000fa610 	andeq	sl, pc, r0, lsl r6	; <UNPREDICTABLE>
    2258:	621d0100 	andsvs	r0, sp, #0, 2
    225c:	05000000 	streq	r0, [r0, #-0]
    2260:	005e4c03 	subseq	r4, lr, r3, lsl #24
    2264:	0fc61020 	svceq	0x00c61020
    2268:	1e010000 	cdpne	0, 0, cr0, cr1, cr0, {0}
    226c:	00000062 	andeq	r0, r0, r2, rrx
    2270:	5f0c0305 	svcpl	0x000c0305
    2274:	1b102000 	blne	40a27c <startup-0x1fbf5d84>
    2278:	01000010 	tsteq	r0, r0, lsl r0
    227c:	0000621f 	andeq	r6, r0, pc, lsl r2
    2280:	94030500 	strls	r0, [r3], #-1280	; 0xfffffb00
    2284:	1020005e 	eorne	r0, r0, lr, asr r0
    2288:	00000f61 	andeq	r0, r0, r1, ror #30
    228c:	00622001 	rsbeq	r2, r2, r1
    2290:	03050000 	movweq	r0, #20480	; 0x5000
    2294:	20005f00 	andcs	r5, r0, r0, lsl #30
    2298:	000f9010 	andeq	r9, pc, r0, lsl r0	; <UNPREDICTABLE>
    229c:	62210100 	eorvs	r0, r1, #0, 2
    22a0:	05000000 	streq	r0, [r0, #-0]
    22a4:	005e3803 	subseq	r3, lr, r3, lsl #16
    22a8:	0f821020 	svceq	0x00821020
    22ac:	22010000 	andcs	r0, r1, #0
    22b0:	00000062 	andeq	r0, r0, r2, rrx
    22b4:	5ee40305 	cdppl	3, 14, cr0, cr4, cr5, {0}
    22b8:	03102000 	tsteq	r0, #0
    22bc:	01000010 	tsteq	r0, r0, lsl r0
    22c0:	00006223 	andeq	r6, r0, r3, lsr #4
    22c4:	58030500 	stmdapl	r3, {r8, sl}
    22c8:	1020005e 	eorne	r0, r0, lr, asr r0
    22cc:	00000fec 	andeq	r0, r0, ip, ror #31
    22d0:	00622401 	rsbeq	r2, r2, r1, lsl #8
    22d4:	03050000 	movweq	r0, #20480	; 0x5000
    22d8:	20005ec8 	andcs	r5, r0, r8, asr #29
    22dc:	00106910 	andseq	r6, r0, r0, lsl r9
    22e0:	4c270100 	stfmis	f0, [r7], #-0
    22e4:	05000001 	streq	r0, [r0, #-1]
    22e8:	005e0403 	subseq	r0, lr, r3, lsl #8
    22ec:	0f571020 	svceq	0x00571020
    22f0:	28010000 	stmdacs	r1, {}	; <UNPREDICTABLE>
    22f4:	000000a4 	andeq	r0, r0, r4, lsr #1
    22f8:	5eac0305 	cdppl	3, 10, cr0, cr12, cr5, {0}
    22fc:	29102000 	ldmdbcs	r0, {sp}
    2300:	01000010 	tsteq	r0, r0, lsl r0
    2304:	0000a429 	andeq	sl, r0, r9, lsr #8
    2308:	28030500 	stmdacs	r3, {r8, sl}
    230c:	1020005e 	eorne	r0, r0, lr, asr r0
    2310:	00000ff9 	strdeq	r0, [r0], -r9
    2314:	00a42a01 	adceq	r2, r4, r1, lsl #20
    2318:	03050000 	movweq	r0, #20480	; 0x5000
    231c:	20005ea0 	andcs	r5, r0, r0, lsr #29
    2320:	000f4d10 	andeq	r4, pc, r0, lsl sp	; <UNPREDICTABLE>
    2324:	a42b0100 	strtge	r0, [fp], #-256	; 0xffffff00
    2328:	05000000 	streq	r0, [r0, #-0]
    232c:	005ef403 	subseq	pc, lr, r3, lsl #8
    2330:	00a40b20 	adceq	r0, r4, r0, lsr #22
    2334:	03cc0000 	biceq	r0, ip, #0
    2338:	950e0000 	strls	r0, [lr, #-0]
    233c:	03000001 	movweq	r0, #1
    2340:	0fb31000 	svceq	0x00b31000
    2344:	2c010000 	stccs	0, cr0, [r1], {-0}
    2348:	000003bc 			; <UNDEFINED> instruction: 0x000003bc
    234c:	5e640305 	cdppl	3, 6, cr0, cr4, cr5, {0}
    2350:	7d0f2000 	stcvc	0, cr2, [pc, #-0]	; 2358 <startup-0x1fffdca8>
    2354:	01000010 	tsteq	r0, r0, lsl r0
    2358:	00012e6b 	andeq	r2, r1, fp, ror #28
    235c:	80030500 	andhi	r0, r3, r0, lsl #10
    2360:	0f200057 	svceq	0x00200057
    2364:	00000fdc 	ldrdeq	r0, [r0], -ip
    2368:	012e6c01 			; <UNDEFINED> instruction: 0x012e6c01
    236c:	03050000 	movweq	r0, #20480	; 0x5000
    2370:	20005784 	andcs	r5, r0, r4, lsl #15
    2374:	0004290f 	andeq	r2, r4, pc, lsl #18
    2378:	2e6d0100 	powcse	f0, f5, f0
    237c:	05000001 	streq	r0, [r0, #-1]
    2380:	00578803 	subseq	r8, r7, r3, lsl #16
    2384:	0f430f20 	svceq	0x00430f20
    2388:	6e010000 	cdpvs	0, 0, cr0, cr1, cr0, {0}
    238c:	0000012e 	andeq	r0, r0, lr, lsr #2
    2390:	a5840305 	strge	r0, [r4, #773]	; 0x305
    2394:	780f2000 	stmdavc	pc, {sp}	; <UNPREDICTABLE>
    2398:	0100000f 	tsteq	r0, pc
    239c:	00012e6f 	andeq	r2, r1, pc, ror #28
    23a0:	8c030500 	cfstr32hi	mvfx0, [r3], {-0}
    23a4:	11200057 	qsubne	r0, r7, r0
    23a8:	00001011 	andeq	r1, r0, r1, lsl r0
    23ac:	2bf47e01 	blcs	ffd21bb8 <firstTime.4108+0xdfd0c660>
    23b0:	01102000 	tsteq	r0, r0
    23b4:	9c010000 	stcls	0, cr0, [r1], {-0}
    23b8:	00000456 	andeq	r0, r0, r6, asr r4
    23bc:	0007ea12 	andeq	lr, r7, r2, lsl sl
    23c0:	627e0100 	rsbsvs	r0, lr, #0, 2
    23c4:	02000001 	andeq	r0, r0, #1
    23c8:	13007491 	movwne	r7, #1169	; 0x491
    23cc:	00000f6f 	andeq	r0, r0, pc, ror #30
    23d0:	2bb47601 	blcs	fed1fbdc <firstTime.4108+0xded0a684>
    23d4:	00402000 	subeq	r2, r0, r0
    23d8:	9c010000 	stcls	0, cr0, [r1], {-0}
    23dc:	00108d14 	andseq	r8, r0, r4, lsl sp
    23e0:	8c710100 	ldfhie	f0, [r1], #-0
    23e4:	2820002b 	stmdacs	r0!, {r0, r1, r3, r5}
    23e8:	01000000 	mrseq	r0, (UNDEF: 0)
    23ec:	0004959c 	muleq	r4, ip, r5
    23f0:	00781500 	rsbseq	r1, r8, r0, lsl #10
    23f4:	012e7101 			; <UNDEFINED> instruction: 0x012e7101
    23f8:	91020000 	mrsls	r0, (UNDEF: 2)
    23fc:	00791574 	rsbseq	r1, r9, r4, ror r5
    2400:	012e7101 			; <UNDEFINED> instruction: 0x012e7101
    2404:	91020000 	mrsls	r0, (UNDEF: 2)
    2408:	bd110070 	ldclt	0, cr0, [r1, #-448]	; 0xfffffe40
    240c:	0100000f 	tsteq	r0, pc
    2410:	002a9450 	eoreq	r9, sl, r0, asr r4
    2414:	0000f820 	andeq	pc, r0, r0, lsr #16
    2418:	ca9c0100 	bgt	fe702820 <firstTime.4108+0xde6ed2c8>
    241c:	12000004 	andne	r0, r0, #4
    2420:	00001069 	andeq	r1, r0, r9, rrx
    2424:	01625001 	cmneq	r2, r1
    2428:	91020000 	mrsls	r0, (UNDEF: 2)
    242c:	09710f6c 	ldmdbeq	r1!, {r2, r3, r5, r6, r8, r9, sl, fp}^
    2430:	51010000 	mrspl	r0, (UNDEF: 1)
    2434:	0000012e 	andeq	r0, r0, lr, lsr #2
    2438:	a5880305 	strge	r0, [r8, #773]	; 0x305
    243c:	16002000 	strne	r2, [r0], -r0
    2440:	000004ed 	andeq	r0, r0, sp, ror #9
    2444:	29542d01 	ldmdbcs	r4, {r0, r8, sl, fp, sp}^
    2448:	01402000 	mrseq	r2, (UNDEF: 64)
    244c:	9c010000 	stcls	0, cr0, [r1], {-0}
    2450:	000e120f 	andeq	r1, lr, pc, lsl #4
    2454:	9e2f0100 	suflse	f0, f7, f0
    2458:	02000000 	andeq	r0, r0, #0
    245c:	1c0f7491 	cfstrsne	mvf7, [pc], {145}	; 0x91
    2460:	0100000e 	tsteq	r0, lr
    2464:	00009e32 	andeq	r9, r0, r2, lsr lr
    2468:	70910200 	addsvc	r0, r1, r0, lsl #4
    246c:	000c120f 	andeq	r1, ip, pc, lsl #4
    2470:	9e350100 	rsflss	f0, f5, f0
    2474:	02000000 	andeq	r0, r0, #0
    2478:	330f6c91 	movwcc	r6, #64657	; 0xfc91
    247c:	0100000b 	tsteq	r0, fp
    2480:	00009e39 	andeq	r9, r0, r9, lsr lr
    2484:	68910200 	ldmvs	r1, {r9}
    2488:	000e3c0f 	andeq	r3, lr, pc, lsl #24
    248c:	9e3c0100 	rsflse	f0, f4, f0
    2490:	02000000 	andeq	r0, r0, #0
    2494:	d00f6491 	mulle	pc, r1, r4	; <UNPREDICTABLE>
    2498:	0100000b 	tsteq	r0, fp
    249c:	00009e3f 	andeq	r9, r0, pc, lsr lr
    24a0:	60910200 	addsvs	r0, r1, r0, lsl #4
    24a4:	000de80f 	andeq	lr, sp, pc, lsl #16
    24a8:	9e440100 	dvflss	f0, f4, f0
    24ac:	02000000 	andeq	r0, r0, #0
    24b0:	460f5c91 			; <UNDEFINED> instruction: 0x460f5c91
    24b4:	0100000e 	tsteq	r0, lr
    24b8:	00009e47 	andeq	r9, r0, r7, asr #28
    24bc:	58910200 	ldmpl	r1, {r9}
    24c0:	000e500f 	andeq	r5, lr, pc
    24c4:	9e4a0100 	dvflse	f0, f2, f0
    24c8:	02000000 	andeq	r0, r0, #0
    24cc:	00005491 	muleq	r0, r1, r4
    24d0:	0000055b 	andeq	r0, r0, fp, asr r5
    24d4:	07ad0004 	streq	r0, [sp, r4]!
    24d8:	01040000 	mrseq	r0, (UNDEF: 4)
    24dc:	000000af 	andeq	r0, r0, pc, lsr #1
    24e0:	0012d70c 	andseq	sp, r2, ip, lsl #14
    24e4:	002d0400 	eoreq	r0, sp, r0, lsl #8
    24e8:	0002ac20 	andeq	sl, r2, r0, lsr #24
    24ec:	000c4500 	andeq	r4, ip, r0, lsl #10
    24f0:	020c0200 	andeq	r0, ip, #0, 4
    24f4:	00004e05 	andeq	r4, r0, r5, lsl #28
    24f8:	03910300 	orrseq	r0, r1, #0, 6
    24fc:	07020000 	streq	r0, [r2, -r0]
    2500:	0000004e 	andeq	r0, r0, lr, asr #32
    2504:	07740300 	ldrbeq	r0, [r4, -r0, lsl #6]!
    2508:	08020000 	stmdaeq	r2, {}	; <UNPREDICTABLE>
    250c:	0000004e 	andeq	r0, r0, lr, asr #32
    2510:	1a6a0304 	bne	1a83128 <startup-0x1e57ced8>
    2514:	09020000 	stmdbeq	r2, {}	; <UNPREDICTABLE>
    2518:	00000055 	andeq	r0, r0, r5, asr r0
    251c:	04040008 	streq	r0, [r4], #-8
    2520:	0003bf07 	andeq	fp, r3, r7, lsl #30
    2524:	5b040500 	blpl	10392c <startup-0x1fefc6d4>
    2528:	04000000 	streq	r0, [r0], #-0
    252c:	05170801 	ldreq	r0, [r7, #-2049]	; 0xfffff7ff
    2530:	d4060000 	strle	r0, [r6], #-0
    2534:	0200001b 	andeq	r0, r0, #27
    2538:	0000210a 	andeq	r2, r0, sl, lsl #2
    253c:	00340700 	eorseq	r0, r4, r0, lsl #14
    2540:	030c0000 	movweq	r0, #49152	; 0xc000
    2544:	00009e06 	andeq	r9, r0, r6, lsl #28
    2548:	060d0300 	streq	r0, [sp], -r0, lsl #6
    254c:	07030000 	streq	r0, [r3, -r0]
    2550:	0000009e 	muleq	r0, lr, r0
    2554:	003b0300 	eorseq	r0, fp, r0, lsl #6
    2558:	08030000 	stmdaeq	r3, {}	; <UNPREDICTABLE>
    255c:	0000009e 	muleq	r0, lr, r0
    2560:	00300304 	eorseq	r0, r0, r4, lsl #6
    2564:	09030000 	stmdbeq	r3, {}	; <UNPREDICTABLE>
    2568:	0000009e 	muleq	r0, lr, r0
    256c:	04050008 	streq	r0, [r5], #-8
    2570:	00000062 	andeq	r0, r0, r2, rrx
    2574:	00155806 	andseq	r5, r5, r6, lsl #16
    2578:	6d0a0300 	stcvs	3, cr0, [sl, #-0]
    257c:	07000000 	streq	r0, [r0, -r0]
    2580:	00000737 	andeq	r0, r0, r7, lsr r7
    2584:	28060424 	stmdacs	r6, {r2, r5, sl}
    2588:	03000001 	movweq	r0, #1
    258c:	000004a5 	andeq	r0, r0, r5, lsr #9
    2590:	01280704 			; <UNDEFINED> instruction: 0x01280704
    2594:	03000000 	movweq	r0, #0
    2598:	00000743 	andeq	r0, r0, r3, asr #14
    259c:	012e0804 			; <UNDEFINED> instruction: 0x012e0804
    25a0:	03040000 	movweq	r0, #16384	; 0x4000
    25a4:	00000696 	muleq	r0, r6, r6
    25a8:	012e0904 			; <UNDEFINED> instruction: 0x012e0904
    25ac:	03080000 	movweq	r0, #32768	; 0x8000
    25b0:	000006bf 			; <UNDEFINED> instruction: 0x000006bf
    25b4:	01460c04 	cmpeq	r6, r4, lsl #24
    25b8:	030c0000 	movweq	r0, #49152	; 0xc000
    25bc:	00000378 	andeq	r0, r0, r8, ror r3
    25c0:	01460d04 	cmpeq	r6, r4, lsl #26
    25c4:	03100000 	tsteq	r0, #0
    25c8:	000004b7 			; <UNDEFINED> instruction: 0x000004b7
    25cc:	012e1004 			; <UNDEFINED> instruction: 0x012e1004
    25d0:	03140000 	tsteq	r4, #0
    25d4:	00000080 	andeq	r0, r0, r0, lsl #1
    25d8:	012e1104 			; <UNDEFINED> instruction: 0x012e1104
    25dc:	03180000 	tsteq	r8, #0
    25e0:	0000040f 	andeq	r0, r0, pc, lsl #8
    25e4:	012e1204 			; <UNDEFINED> instruction: 0x012e1204
    25e8:	031c0000 	tsteq	ip, #0
    25ec:	0000041f 	andeq	r0, r0, pc, lsl r4
    25f0:	012e1304 			; <UNDEFINED> instruction: 0x012e1304
    25f4:	00200000 	eoreq	r0, r0, r0
    25f8:	00a40405 	adceq	r0, r4, r5, lsl #8
    25fc:	04080000 	streq	r0, [r8], #-0
    2600:	746e6905 	strbtvc	r6, [lr], #-2309	; 0xfffff6fb
    2604:	01400900 	cmpeq	r0, r0, lsl #18
    2608:	400a0000 	andmi	r0, sl, r0
    260c:	00000001 	andeq	r0, r0, r1
    2610:	00af0405 	adceq	r0, pc, r5, lsl #8
    2614:	04050000 	streq	r0, [r5], #-0
    2618:	00000135 	andeq	r0, r0, r5, lsr r1
    261c:	00073806 	andeq	r3, r7, r6, lsl #16
    2620:	af150400 	svcge	0x00150400
    2624:	0b000000 	bleq	262c <startup-0x1fffd9d4>
    2628:	00000162 	andeq	r0, r0, r2, ror #2
    262c:	00000162 	andeq	r0, r0, r2, ror #2
    2630:	0405000c 	streq	r0, [r5], #-12
    2634:	0000014c 	andeq	r0, r0, ip, asr #2
    2638:	00059a0d 	andeq	r9, r5, sp, lsl #20
    263c:	571c0400 	ldrpl	r0, [ip, -r0, lsl #8]
    2640:	0d000001 	stceq	0, cr0, [r0, #-4]
    2644:	0000045a 	andeq	r0, r0, sl, asr r4
    2648:	012e1d04 			; <UNDEFINED> instruction: 0x012e1d04
    264c:	5b0b0000 	blpl	2c2654 <startup-0x1fd3d9ac>
    2650:	8e000000 	cdphi	0, 0, cr0, cr0, cr0, {0}
    2654:	0e000001 	cdpeq	0, 0, cr0, cr0, cr1, {0}
    2658:	0000018e 	andeq	r0, r0, lr, lsl #3
    265c:	04040074 	streq	r0, [r4], #-116	; 0xffffff8c
    2660:	00043c07 	andeq	r3, r4, r7, lsl #24
    2664:	12660f00 	rsbne	r0, r6, #0, 30
    2668:	03050000 	movweq	r0, #20480	; 0x5000
    266c:	0000017e 	andeq	r0, r0, lr, ror r1
    2670:	a58c0305 	strge	r0, [ip, #773]	; 0x305
    2674:	9f0f2000 	svcls	0x000f2000
    2678:	06000010 			; <UNDEFINED> instruction: 0x06000010
    267c:	00017e03 	andeq	r7, r1, r3, lsl #28
    2680:	04030500 	streq	r0, [r3], #-1280	; 0xfffffb00
    2684:	0f2000a6 	svceq	0x002000a6
    2688:	0000115c 	andeq	r1, r0, ip, asr r1
    268c:	017e0307 	cmneq	lr, r7, lsl #6
    2690:	03050000 	movweq	r0, #20480	; 0x5000
    2694:	2000a67c 	andcs	sl, r0, ip, ror r6
    2698:	0012280f 	andseq	r2, r2, pc, lsl #16
    269c:	7e030800 	cdpvc	8, 0, cr0, cr3, cr0, {0}
    26a0:	05000001 	streq	r0, [r0, #-1]
    26a4:	00a6f403 	adceq	pc, r6, r3, lsl #8
    26a8:	10bc0f20 	adcsne	r0, ip, r0, lsr #30
    26ac:	03090000 	movweq	r0, #36864	; 0x9000
    26b0:	0000017e 	andeq	r0, r0, lr, ror r1
    26b4:	a76c0305 	strbge	r0, [ip, -r5, lsl #6]!
    26b8:	dc0f2000 	stcle	0, cr2, [pc], {-0}
    26bc:	0a000010 	beq	2704 <startup-0x1fffd8fc>
    26c0:	00017e03 	andeq	r7, r1, r3, lsl #28
    26c4:	e4030500 	str	r0, [r3], #-1280	; 0xfffffb00
    26c8:	0f2000a7 	svceq	0x002000a7
    26cc:	000011cd 	andeq	r1, r0, sp, asr #3
    26d0:	017e030b 	cmneq	lr, fp, lsl #6
    26d4:	03050000 	movweq	r0, #20480	; 0x5000
    26d8:	2000a85c 	andcs	sl, r0, ip, asr r8
    26dc:	0011f10f 	andseq	pc, r1, pc, lsl #2
    26e0:	7e030c00 	cdpvc	12, 0, cr0, cr3, cr0, {0}
    26e4:	05000001 	streq	r0, [r0, #-1]
    26e8:	00a8d403 	adceq	sp, r8, r3, lsl #8
    26ec:	11260f20 			; <UNDEFINED> instruction: 0x11260f20
    26f0:	030d0000 	movweq	r0, #53248	; 0xd000
    26f4:	0000017e 	andeq	r0, r0, lr, ror r1
    26f8:	a94c0305 	stmdbge	ip, {r0, r2, r8, r9}^
    26fc:	490f2000 	stmdbmi	pc, {sp}	; <UNPREDICTABLE>
    2700:	0e000012 	mcreq	0, 0, r0, cr0, cr2, {0}
    2704:	00017e03 	andeq	r7, r1, r3, lsl #28
    2708:	c4030500 	strgt	r0, [r3], #-1280	; 0xfffffb00
    270c:	0f2000a9 	svceq	0x002000a9
    2710:	00001284 	andeq	r1, r0, r4, lsl #5
    2714:	017e030f 	cmneq	lr, pc, lsl #6
    2718:	03050000 	movweq	r0, #20480	; 0x5000
    271c:	2000aa3c 	andcs	sl, r0, ip, lsr sl
    2720:	0011df0f 	andseq	sp, r1, pc, lsl #30
    2724:	7e031000 	cdpvc	0, 0, cr1, cr3, cr0, {0}
    2728:	05000001 	streq	r0, [r0, #-1]
    272c:	00aab403 	adceq	fp, sl, r3, lsl #8
    2730:	10b01020 	adcsne	r1, r0, r0, lsr #32
    2734:	11010000 	mrsne	r0, (UNDEF: 1)
    2738:	0000009e 	muleq	r0, lr, r0
    273c:	60300305 	eorsvs	r0, r0, r5, lsl #6
    2740:	1d102000 	ldcne	0, cr2, [r0, #-0]
    2744:	01000012 	tsteq	r0, r2, lsl r0
    2748:	00009e12 	andeq	r9, r0, r2, lsl lr
    274c:	a8030500 	stmdage	r3, {r8, sl}
    2750:	1020005f 	eorne	r0, r0, pc, asr r0
    2754:	00001278 	andeq	r1, r0, r8, ror r2
    2758:	009e1301 	addseq	r1, lr, r1, lsl #6
    275c:	03050000 	movweq	r0, #20480	; 0x5000
    2760:	20005fac 	andcs	r5, r0, ip, lsr #31
    2764:	0010fa10 	andseq	pc, r0, r0, lsl sl	; <UNPREDICTABLE>
    2768:	9e140100 	muflss	f0, f4, f0
    276c:	05000000 	streq	r0, [r0, #-0]
    2770:	00605803 	rsbeq	r5, r0, r3, lsl #16
    2774:	12cc1020 	sbcne	r1, ip, #32
    2778:	15010000 	strne	r0, [r1, #-0]
    277c:	0000009e 	muleq	r0, lr, r0
    2780:	5fa40305 	svcpl	0x00a40305
    2784:	1f102000 	svcne	0x00102000
    2788:	01000013 	tsteq	r0, r3, lsl r0
    278c:	00009e16 	andeq	r9, r0, r6, lsl lr
    2790:	40030500 	andmi	r0, r3, r0, lsl #10
    2794:	10200060 	eorne	r0, r0, r0, rrx
    2798:	0000117a 	andeq	r1, r0, sl, ror r1
    279c:	009e1701 	addseq	r1, lr, r1, lsl #14
    27a0:	03050000 	movweq	r0, #20480	; 0x5000
    27a4:	20006044 	andcs	r6, r0, r4, asr #32
    27a8:	00119610 	andseq	r9, r1, r0, lsl r6
    27ac:	9e180100 	muflse	f0, f0, f0
    27b0:	05000000 	streq	r0, [r0, #-0]
    27b4:	005f5803 	subseq	r5, pc, r3, lsl #16
    27b8:	10ee1020 	rscne	r1, lr, r0, lsr #32
    27bc:	19010000 	stmdbne	r1, {}	; <UNPREDICTABLE>
    27c0:	0000009e 	muleq	r0, lr, r0
    27c4:	5f3c0305 	svcpl	0x003c0305
    27c8:	13102000 	tstne	r0, #0
    27cc:	01000013 	tsteq	r0, r3, lsl r0
    27d0:	00009e1a 	andeq	r9, r0, sl, lsl lr
    27d4:	2c030500 	cfstr32cs	mvfx0, [r3], {-0}
    27d8:	10200060 	eorne	r0, r0, r0, rrx
    27dc:	0000125b 	andeq	r1, r0, fp, asr r2
    27e0:	009e1b01 	addseq	r1, lr, r1, lsl #22
    27e4:	03050000 	movweq	r0, #20480	; 0x5000
    27e8:	20005fc8 	andcs	r5, r0, r8, asr #31
    27ec:	00129510 	andseq	r9, r2, r0, lsl r5
    27f0:	9e1c0100 	muflse	f0, f4, f0
    27f4:	05000000 	streq	r0, [r0, #-0]
    27f8:	00605403 	rsbeq	r5, r0, r3, lsl #8
    27fc:	123a1020 	eorsne	r1, sl, #32
    2800:	1e010000 	cdpne	0, 0, cr0, cr1, cr0, {0}
    2804:	00000062 	andeq	r0, r0, r2, rrx
    2808:	60480305 	subvs	r0, r8, r5, lsl #6
    280c:	cd102000 	ldcgt	0, cr2, [r0, #-0]
    2810:	01000010 	tsteq	r0, r0, lsl r0
    2814:	0000621f 	andeq	r6, r0, pc, lsl r2
    2818:	34030500 	strcc	r0, [r3], #-1280	; 0xfffffb00
    281c:	10200060 	eorne	r0, r0, r0, rrx
    2820:	00001305 	andeq	r1, r0, r5, lsl #6
    2824:	00622001 	rsbeq	r2, r2, r1
    2828:	03050000 	movweq	r0, #20480	; 0x5000
    282c:	20005f18 	andcs	r5, r0, r8, lsl pc
    2830:	00110610 	andseq	r0, r1, r0, lsl r6
    2834:	62210100 	eorvs	r0, r1, #0, 2
    2838:	05000000 	streq	r0, [r0, #-0]
    283c:	005f9803 	subseq	r9, pc, r3, lsl #16
    2840:	11161020 	tstne	r6, r0, lsr #32
    2844:	22010000 	andcs	r0, r1, #0
    2848:	00000062 	andeq	r0, r0, r2, rrx
    284c:	5f800305 	svcpl	0x00800305
    2850:	41102000 	tstmi	r0, r0
    2854:	01000011 	tsteq	r0, r1, lsl r0
    2858:	00006223 	andeq	r6, r0, r3, lsr #4
    285c:	e4030500 	str	r0, [r3], #-1280	; 0xfffffb00
    2860:	1020005f 	eorne	r0, r0, pc, asr r0
    2864:	000012bc 			; <UNDEFINED> instruction: 0x000012bc
    2868:	00622401 	rsbeq	r2, r2, r1, lsl #8
    286c:	03050000 	movweq	r0, #20480	; 0x5000
    2870:	20006020 	andcs	r6, r0, r0, lsr #32
    2874:	00118610 	andseq	r8, r1, r0, lsl r6
    2878:	62250100 	eorvs	r0, r5, #0, 2
    287c:	05000000 	streq	r0, [r0, #-0]
    2880:	005f4003 	subseq	r4, pc, r3
    2884:	12a11020 	adcne	r1, r1, #32
    2888:	26010000 	strcs	r0, [r1], -r0
    288c:	00000062 	andeq	r0, r0, r2, rrx
    2890:	5f8c0305 	svcpl	0x008c0305
    2894:	a1102000 	tstge	r0, r0
    2898:	01000011 	tsteq	r0, r1, lsl r0
    289c:	00006227 	andeq	r6, r0, r7, lsr #4
    28a0:	b0030500 	andlt	r0, r3, r0, lsl #10
    28a4:	1020005f 	eorne	r0, r0, pc, asr r0
    28a8:	000011b1 			; <UNDEFINED> instruction: 0x000011b1
    28ac:	00622801 	rsbeq	r2, r2, r1, lsl #16
    28b0:	03050000 	movweq	r0, #20480	; 0x5000
    28b4:	20005f24 	andcs	r5, r0, r4, lsr #30
    28b8:	00120210 	andseq	r0, r2, r0, lsl r2
    28bc:	62290100 	eorvs	r0, r9, #0, 2
    28c0:	05000000 	streq	r0, [r0, #-0]
    28c4:	005fbc03 	subseq	fp, pc, r3, lsl #24
    28c8:	11381020 	teqne	r8, r0, lsr #32
    28cc:	2c010000 	stccs	0, cr0, [r1], {-0}
    28d0:	0000014c 	andeq	r0, r0, ip, asr #2
    28d4:	5f5c0305 	svcpl	0x005c0305
    28d8:	6e102000 	cdpvs	0, 1, cr2, cr0, cr0, {0}
    28dc:	01000011 	tsteq	r0, r1, lsl r0
    28e0:	0000a42d 	andeq	sl, r0, sp, lsr #8
    28e4:	d8030500 	stmdale	r3, {r8, sl}
    28e8:	1020005f 	eorne	r0, r0, pc, asr r0
    28ec:	00001211 	andeq	r1, r0, r1, lsl r2
    28f0:	00a42e01 	adceq	r2, r4, r1, lsl #28
    28f4:	03050000 	movweq	r0, #20480	; 0x5000
    28f8:	20005f30 	andcs	r5, r0, r0, lsr pc
    28fc:	0011c110 	andseq	ip, r1, r0, lsl r1
    2900:	a42f0100 	strtge	r0, [pc], #-256	; 2908 <startup-0x1fffd6f8>
    2904:	05000000 	streq	r0, [r0, #-0]
    2908:	005f4c03 	subseq	r4, pc, r3, lsl #24
    290c:	11501020 	cmpne	r0, r0, lsr #32
    2910:	30010000 	andcc	r0, r1, r0
    2914:	000000a4 	andeq	r0, r0, r4, lsr #1
    2918:	5fcc0305 	svcpl	0x00cc0305
    291c:	a40b2000 	strge	r2, [fp], #-0
    2920:	5e000000 	cdppl	0, 0, cr0, cr0, cr0, {0}
    2924:	0e000004 	cdpeq	0, 0, cr0, cr0, cr4, {0}
    2928:	0000018e 	andeq	r0, r0, lr, lsl #3
    292c:	b0100003 	andslt	r0, r0, r3
    2930:	01000012 	tsteq	r0, r2, lsl r0
    2934:	00044e31 	andeq	r4, r4, r1, lsr lr
    2938:	f0030500 			; <UNDEFINED> instruction: 0xf0030500
    293c:	1120005f 	qsubne	r0, pc, r0	; <UNPREDICTABLE>
    2940:	00000404 	andeq	r0, r0, r4, lsl #8
    2944:	2eac5f01 	cdpcs	15, 10, cr5, cr12, cr1, {0}
    2948:	01042000 	mrseq	r2, (UNDEF: 4)
    294c:	9c010000 	stcls	0, cr0, [r1], {-0}
    2950:	000004a4 	andeq	r0, r0, r4, lsr #9
    2954:	00113812 	andseq	r3, r1, r2, lsl r8
    2958:	625f0100 	subsvs	r0, pc, #0, 2
    295c:	02000001 	andeq	r0, r0, #1
    2960:	710f6c91 			; <UNDEFINED> instruction: 0x710f6c91
    2964:	01000009 	tsteq	r0, r9
    2968:	00012e60 	andeq	r2, r1, r0, ror #28
    296c:	2c030500 	cfstr32cs	mvfx0, [r3], {-0}
    2970:	002000ab 	eoreq	r0, r0, fp, lsr #1
    2974:	0004ed13 	andeq	lr, r4, r3, lsl sp
    2978:	04320100 	ldrteq	r0, [r2], #-256	; 0xffffff00
    297c:	a820002d 	stmdage	r0!, {r0, r2, r3, r5}
    2980:	01000001 	tsteq	r0, r1
    2984:	0e120f9c 	mrceq	15, 0, r0, cr2, cr12, {4}
    2988:	34010000 	strcc	r0, [r1], #-0
    298c:	0000009e 	muleq	r0, lr, r0
    2990:	0f749102 	svceq	0x00749102
    2994:	00000e1c 	andeq	r0, r0, ip, lsl lr
    2998:	009e3701 	addseq	r3, lr, r1, lsl #14
    299c:	91020000 	mrsls	r0, (UNDEF: 2)
    29a0:	0c120f70 	ldceq	15, cr0, [r2], {112}	; 0x70
    29a4:	3a010000 	bcc	429ac <startup-0x1ffbd654>
    29a8:	0000009e 	muleq	r0, lr, r0
    29ac:	0f6c9102 	svceq	0x006c9102
    29b0:	00000b33 	andeq	r0, r0, r3, lsr fp
    29b4:	009e3e01 	addseq	r3, lr, r1, lsl #28
    29b8:	91020000 	mrsls	r0, (UNDEF: 2)
    29bc:	0e3c0f68 	cdpeq	15, 3, cr0, cr12, cr8, {3}
    29c0:	41010000 	mrsmi	r0, (UNDEF: 1)
    29c4:	0000009e 	muleq	r0, lr, r0
    29c8:	0f649102 	svceq	0x00649102
    29cc:	00000bd0 	ldrdeq	r0, [r0], -r0	; <UNPREDICTABLE>
    29d0:	009e4401 	addseq	r4, lr, r1, lsl #8
    29d4:	91020000 	mrsls	r0, (UNDEF: 2)
    29d8:	0de80f60 	stcleq	15, cr0, [r8, #384]!	; 0x180
    29dc:	49010000 	stmdbmi	r1, {}	; <UNPREDICTABLE>
    29e0:	0000009e 	muleq	r0, lr, r0
    29e4:	0f5c9102 	svceq	0x005c9102
    29e8:	00000e46 	andeq	r0, r0, r6, asr #28
    29ec:	009e4c01 	addseq	r4, lr, r1, lsl #24
    29f0:	91020000 	mrsls	r0, (UNDEF: 2)
    29f4:	0e500f58 	mrceq	15, 2, r0, cr0, cr8, {2}
    29f8:	4f010000 	svcmi	0x00010000
    29fc:	0000009e 	muleq	r0, lr, r0
    2a00:	0f549102 	svceq	0x00549102
    2a04:	00000b59 	andeq	r0, r0, r9, asr fp
    2a08:	009e5301 	addseq	r5, lr, r1, lsl #6
    2a0c:	91020000 	mrsls	r0, (UNDEF: 2)
    2a10:	0b9d0f50 	bleq	fe746758 <firstTime.4108+0xde731200>
    2a14:	56010000 	strpl	r0, [r1], -r0
    2a18:	0000009e 	muleq	r0, lr, r0
    2a1c:	0f4c9102 	svceq	0x004c9102
    2a20:	00000ba7 	andeq	r0, r0, r7, lsr #23
    2a24:	009e5901 	addseq	r5, lr, r1, lsl #18
    2a28:	91020000 	mrsls	r0, (UNDEF: 2)
    2a2c:	a1000048 	tstge	r0, r8, asr #32
    2a30:	04000007 	streq	r0, [r0], #-7
    2a34:	0008ad00 	andeq	sl, r8, r0, lsl #26
    2a38:	af010400 	svcge	0x00010400
    2a3c:	0c000000 	stceq	0, cr0, [r0], {-0}
    2a40:	0000137d 	andeq	r1, r0, sp, ror r3
    2a44:	20002fb0 			; <UNDEFINED> instruction: 0x20002fb0
    2a48:	0000052c 	andeq	r0, r0, ip, lsr #10
    2a4c:	00000dee 	andeq	r0, r0, lr, ror #27
    2a50:	05020c02 	streq	r0, [r2, #-3074]	; 0xfffff3fe
    2a54:	0000004e 	andeq	r0, r0, lr, asr #32
    2a58:	00039103 	andeq	r9, r3, r3, lsl #2
    2a5c:	4e070200 	cdpmi	2, 0, cr0, cr7, cr0, {0}
    2a60:	00000000 	andeq	r0, r0, r0
    2a64:	00077403 	andeq	r7, r7, r3, lsl #8
    2a68:	4e080200 	cdpmi	2, 0, cr0, cr8, cr0, {0}
    2a6c:	04000000 	streq	r0, [r0], #-0
    2a70:	001a6a03 	andseq	r6, sl, r3, lsl #20
    2a74:	55090200 	strpl	r0, [r9, #-512]	; 0xfffffe00
    2a78:	08000000 	stmdaeq	r0, {}	; <UNPREDICTABLE>
    2a7c:	07040400 	streq	r0, [r4, -r0, lsl #8]
    2a80:	000003bf 			; <UNDEFINED> instruction: 0x000003bf
    2a84:	005b0405 	subseq	r0, fp, r5, lsl #8
    2a88:	01040000 	mrseq	r0, (UNDEF: 4)
    2a8c:	00051708 	andeq	r1, r5, r8, lsl #14
    2a90:	1bd40600 	blne	ff504298 <firstTime.4108+0xdf4eed40>
    2a94:	0a020000 	beq	82a9c <startup-0x1ff7d564>
    2a98:	00000021 	andeq	r0, r0, r1, lsr #32
    2a9c:	00003407 	andeq	r3, r0, r7, lsl #8
    2aa0:	06030c00 	streq	r0, [r3], -r0, lsl #24
    2aa4:	0000009e 	muleq	r0, lr, r0
    2aa8:	00060d03 	andeq	r0, r6, r3, lsl #26
    2aac:	9e070300 	cdpls	3, 0, cr0, cr7, cr0, {0}
    2ab0:	00000000 	andeq	r0, r0, r0
    2ab4:	00003b03 	andeq	r3, r0, r3, lsl #22
    2ab8:	9e080300 	cdpls	3, 0, cr0, cr8, cr0, {0}
    2abc:	04000000 	streq	r0, [r0], #-0
    2ac0:	00003003 	andeq	r3, r0, r3
    2ac4:	9e090300 	cdpls	3, 0, cr0, cr9, cr0, {0}
    2ac8:	08000000 	stmdaeq	r0, {}	; <UNPREDICTABLE>
    2acc:	62040500 	andvs	r0, r4, #0, 10
    2ad0:	06000000 	streq	r0, [r0], -r0
    2ad4:	00001558 	andeq	r1, r0, r8, asr r5
    2ad8:	006d0a03 	rsbeq	r0, sp, r3, lsl #20
    2adc:	37070000 	strcc	r0, [r7, -r0]
    2ae0:	24000007 	strcs	r0, [r0], #-7
    2ae4:	01280604 			; <UNDEFINED> instruction: 0x01280604
    2ae8:	a5030000 	strge	r0, [r3, #-0]
    2aec:	04000004 	streq	r0, [r0], #-4
    2af0:	00012807 	andeq	r2, r1, r7, lsl #16
    2af4:	43030000 	movwmi	r0, #12288	; 0x3000
    2af8:	04000007 	streq	r0, [r0], #-7
    2afc:	00012e08 	andeq	r2, r1, r8, lsl #28
    2b00:	96030400 	strls	r0, [r3], -r0, lsl #8
    2b04:	04000006 	streq	r0, [r0], #-6
    2b08:	00012e09 	andeq	r2, r1, r9, lsl #28
    2b0c:	bf030800 	svclt	0x00030800
    2b10:	04000006 	streq	r0, [r0], #-6
    2b14:	0001460c 	andeq	r4, r1, ip, lsl #12
    2b18:	78030c00 	stmdavc	r3, {sl, fp}
    2b1c:	04000003 	streq	r0, [r0], #-3
    2b20:	0001460d 	andeq	r4, r1, sp, lsl #12
    2b24:	b7031000 	strlt	r1, [r3, -r0]
    2b28:	04000004 	streq	r0, [r0], #-4
    2b2c:	00012e10 	andeq	r2, r1, r0, lsl lr
    2b30:	80031400 	andhi	r1, r3, r0, lsl #8
    2b34:	04000000 	streq	r0, [r0], #-0
    2b38:	00012e11 	andeq	r2, r1, r1, lsl lr
    2b3c:	0f031800 	svceq	0x00031800
    2b40:	04000004 	streq	r0, [r0], #-4
    2b44:	00012e12 	andeq	r2, r1, r2, lsl lr
    2b48:	1f031c00 	svcne	0x00031c00
    2b4c:	04000004 	streq	r0, [r0], #-4
    2b50:	00012e13 	andeq	r2, r1, r3, lsl lr
    2b54:	05002000 	streq	r2, [r0, #-0]
    2b58:	0000a404 	andeq	sl, r0, r4, lsl #8
    2b5c:	05040800 	streq	r0, [r4, #-2048]	; 0xfffff800
    2b60:	00746e69 	rsbseq	r6, r4, r9, ror #28
    2b64:	00014009 	andeq	r4, r1, r9
    2b68:	01400a00 	cmpeq	r0, r0, lsl #20
    2b6c:	05000000 	streq	r0, [r0, #-0]
    2b70:	0000af04 	andeq	sl, r0, r4, lsl #30
    2b74:	35040500 	strcc	r0, [r4, #-1280]	; 0xfffffb00
    2b78:	06000001 	streq	r0, [r0], -r1
    2b7c:	00000738 	andeq	r0, r0, r8, lsr r7
    2b80:	00af1504 	adceq	r1, pc, r4, lsl #10
    2b84:	620b0000 	andvs	r0, fp, #0
    2b88:	62000001 	andvs	r0, r0, #1
    2b8c:	0c000001 	stceq	0, cr0, [r0], {1}
    2b90:	4c040500 	cfstr32mi	mvfx0, [r4], {-0}
    2b94:	0d000001 	stceq	0, cr0, [r0, #-4]
    2b98:	0000059a 	muleq	r0, sl, r5
    2b9c:	01571c04 	cmpeq	r7, r4, lsl #24
    2ba0:	5a0d0000 	bpl	342ba8 <startup-0x1fcbd458>
    2ba4:	04000004 	streq	r0, [r0], #-4
    2ba8:	00012e1d 	andeq	r2, r1, sp, lsl lr
    2bac:	005b0b00 	subseq	r0, fp, r0, lsl #22
    2bb0:	018f0000 	orreq	r0, pc, r0
    2bb4:	8f0e0000 	svchi	0x000e0000
    2bb8:	01000001 	tsteq	r0, r1
    2bbc:	04040003 	streq	r0, [r4], #-3
    2bc0:	00043c07 	andeq	r3, r4, r7, lsl #24
    2bc4:	144f0f00 	strbne	r0, [pc], #-3840	; 2bcc <startup-0x1fffd434>
    2bc8:	03050000 	movweq	r0, #20480	; 0x5000
    2bcc:	0000017e 	andeq	r0, r0, lr, ror r1
    2bd0:	ab300305 	blge	c037ec <startup-0x1f3fc814>
    2bd4:	650f2000 	strvs	r2, [pc, #-0]	; 2bdc <startup-0x1fffd424>
    2bd8:	06000013 			; <UNDEFINED> instruction: 0x06000013
    2bdc:	00017e03 	andeq	r7, r1, r3, lsl #28
    2be0:	34030500 	strcc	r0, [r3], #-1280	; 0xfffffb00
    2be4:	0f2000ae 	svceq	0x002000ae
    2be8:	00001682 	andeq	r1, r0, r2, lsl #13
    2bec:	017e0307 	cmneq	lr, r7, lsl #6
    2bf0:	03050000 	movweq	r0, #20480	; 0x5000
    2bf4:	2000b138 	andcs	fp, r0, r8, lsr r1
    2bf8:	0014880f 	andseq	r8, r4, pc, lsl #16
    2bfc:	7e030800 	cdpvc	8, 0, cr0, cr3, cr0, {0}
    2c00:	05000001 	streq	r0, [r0, #-1]
    2c04:	00b43c03 	adcseq	r3, r4, r3, lsl #24
    2c08:	16d10f20 	ldrbne	r0, [r1], r0, lsr #30
    2c0c:	03090000 	movweq	r0, #36864	; 0x9000
    2c10:	0000017e 	andeq	r0, r0, lr, ror r1
    2c14:	b7400305 	strblt	r0, [r0, -r5, lsl #6]
    2c18:	a40f2000 	strge	r2, [pc], #-0	; 2c20 <startup-0x1fffd3e0>
    2c1c:	0a000016 	beq	2c7c <startup-0x1fffd384>
    2c20:	00017e03 	andeq	r7, r1, r3, lsl #28
    2c24:	44030500 	strmi	r0, [r3], #-1280	; 0xfffffb00
    2c28:	0f2000ba 	svceq	0x002000ba
    2c2c:	00001640 	andeq	r1, r0, r0, asr #12
    2c30:	017e030b 	cmneq	lr, fp, lsl #6
    2c34:	03050000 	movweq	r0, #20480	; 0x5000
    2c38:	2000bd48 	andcs	fp, r0, r8, asr #26
    2c3c:	0014e50f 	andseq	lr, r4, pc, lsl #10
    2c40:	7e030c00 	cdpvc	12, 0, cr0, cr3, cr0, {0}
    2c44:	05000001 	streq	r0, [r0, #-1]
    2c48:	00c04c03 	sbceq	r4, r0, r3, lsl #24
    2c4c:	14f50f20 	ldrbtne	r0, [r5], #3872	; 0xf20
    2c50:	030d0000 	movweq	r0, #53248	; 0xd000
    2c54:	0000017e 	andeq	r0, r0, lr, ror r1
    2c58:	c3500305 	cmpgt	r0, #335544320	; 0x14000000
    2c5c:	d70f2000 	strle	r2, [pc, -r0]
    2c60:	0e000013 	mcreq	0, 0, r0, cr0, cr3, {0}
    2c64:	00017e03 	andeq	r7, r1, r3, lsl #28
    2c68:	54030500 	strpl	r0, [r3], #-1280	; 0xfffffb00
    2c6c:	0f2000c6 	svceq	0x002000c6
    2c70:	00001478 	andeq	r1, r0, r8, ror r4
    2c74:	017e030f 	cmneq	lr, pc, lsl #6
    2c78:	03050000 	movweq	r0, #20480	; 0x5000
    2c7c:	2000c958 	andcs	ip, r0, r8, asr r9
    2c80:	0016710f 	andseq	r7, r6, pc, lsl #2
    2c84:	7e031000 	cdpvc	0, 0, cr1, cr3, cr0, {0}
    2c88:	05000001 	streq	r0, [r0, #-1]
    2c8c:	00cc5c03 	sbceq	r5, ip, r3, lsl #24
    2c90:	16930f20 	ldrne	r0, [r3], r0, lsr #30
    2c94:	03110000 	tsteq	r1, #0
    2c98:	0000017e 	andeq	r0, r0, lr, ror r1
    2c9c:	cf600305 	svcgt	0x00600305
    2ca0:	e80f2000 	stmda	pc, {sp}	; <UNPREDICTABLE>
    2ca4:	12000013 	andne	r0, r0, #19
    2ca8:	00017e03 	andeq	r7, r1, r3, lsl #28
    2cac:	64030500 	strvs	r0, [r3], #-1280	; 0xfffffb00
    2cb0:	0f2000d2 	svceq	0x002000d2
    2cb4:	00001535 	andeq	r1, r0, r5, lsr r5
    2cb8:	017e0313 	cmneq	lr, r3, lsl r3
    2cbc:	03050000 	movweq	r0, #20480	; 0x5000
    2cc0:	2000d568 	andcs	sp, r0, r8, ror #10
    2cc4:	0016b50f 	andseq	fp, r6, pc, lsl #10
    2cc8:	7e031400 	cfcpysvc	mvf1, mvf3
    2ccc:	05000001 	streq	r0, [r0, #-1]
    2cd0:	00d86c03 	sbcseq	r6, r8, r3, lsl #24
    2cd4:	151b0f20 	ldrne	r0, [fp, #-3872]	; 0xfffff0e0
    2cd8:	03150000 	tsteq	r5, #0
    2cdc:	0000017e 	andeq	r0, r0, lr, ror r1
    2ce0:	db700305 	blle	1c038fc <startup-0x1e3fc704>
    2ce4:	5e0f2000 	cdppl	0, 0, cr2, cr15, cr0, {0}
    2ce8:	16000015 			; <UNDEFINED> instruction: 0x16000015
    2cec:	00017e03 	andeq	r7, r1, r3, lsl #28
    2cf0:	74030500 	strvc	r0, [r3], #-1280	; 0xfffffb00
    2cf4:	102000de 	ldrdne	r0, [r0], -lr	; <UNPREDICTABLE>
    2cf8:	00001651 	andeq	r1, r0, r1, asr r6
    2cfc:	009e1801 	addseq	r1, lr, r1, lsl #16
    2d00:	03050000 	movweq	r0, #20480	; 0x5000
    2d04:	20006244 	andcs	r6, r0, r4, asr #4
    2d08:	0013b810 	andseq	fp, r3, r0, lsl r8
    2d0c:	9e190100 	muflse	f0, f1, f0
    2d10:	05000000 	streq	r0, [r0, #-0]
    2d14:	00628003 	rsbeq	r8, r2, r3
    2d18:	14441020 	strbne	r1, [r4], #-32	; 0xffffffe0
    2d1c:	1a010000 	bne	42d24 <startup-0x1ffbd2dc>
    2d20:	0000009e 	muleq	r0, lr, r0
    2d24:	62e40305 	rscvs	r0, r4, #335544320	; 0x14000000
    2d28:	c1102000 	tstgt	r0, r0
    2d2c:	01000014 	tsteq	r0, r4, lsl r0
    2d30:	00009e1b 	andeq	r9, r0, fp, lsl lr
    2d34:	f4030500 	vst3.8	{d0,d2,d4}, [r3], r0
    2d38:	10200062 	eorne	r0, r0, r2, rrx
    2d3c:	0000159d 	muleq	r0, sp, r5
    2d40:	009e1c01 	addseq	r1, lr, r1, lsl #24
    2d44:	03050000 	movweq	r0, #20480	; 0x5000
    2d48:	20006240 	andcs	r6, r0, r0, asr #4
    2d4c:	00160310 	andseq	r0, r6, r0, lsl r3
    2d50:	9e1d0100 	muflse	f0, f5, f0
    2d54:	05000000 	streq	r0, [r0, #-0]
    2d58:	0062f803 	rsbeq	pc, r2, r3, lsl #16
    2d5c:	14071020 	strne	r1, [r7], #-32	; 0xffffffe0
    2d60:	1e010000 	cdpne	0, 0, cr0, cr1, cr0, {0}
    2d64:	0000009e 	muleq	r0, lr, r0
    2d68:	60a80305 	adcvs	r0, r8, r5, lsl #6
    2d6c:	27102000 	ldrcs	r2, [r0, -r0]
    2d70:	01000016 	tsteq	r0, r6, lsl r0
    2d74:	00009e1f 	andeq	r9, r0, pc, lsl lr
    2d78:	fc030500 	stc2	5, cr0, [r3], {-0}
    2d7c:	10200060 	eorne	r0, r0, r0, rrx
    2d80:	00001510 	andeq	r1, r0, r0, lsl r5
    2d84:	009e2001 	addseq	r2, lr, r1
    2d88:	03050000 	movweq	r0, #20480	; 0x5000
    2d8c:	200060a4 	andcs	r6, r0, r4, lsr #1
    2d90:	0016c610 	andseq	ip, r6, r0, lsl r6
    2d94:	9e210100 	suflss	f0, f1, f0
    2d98:	05000000 	streq	r0, [r0, #-0]
    2d9c:	00622403 	rsbeq	r2, r2, r3, lsl #8
    2da0:	160e1020 	strne	r1, [lr], -r0, lsr #32
    2da4:	22010000 	andcs	r0, r1, #0
    2da8:	0000009e 	muleq	r0, lr, r0
    2dac:	62780305 	rsbsvs	r0, r8, #335544320	; 0x14000000
    2db0:	21102000 	tstcs	r0, r0
    2db4:	01000014 	tsteq	r0, r4, lsl r0
    2db8:	00009e23 	andeq	r9, r0, r3, lsr #28
    2dbc:	c8030500 	stmdagt	r3, {r8, sl}
    2dc0:	10200060 	eorne	r0, r0, r0, rrx
    2dc4:	000014a7 	andeq	r1, r0, r7, lsr #9
    2dc8:	009e2401 	addseq	r2, lr, r1, lsl #8
    2dcc:	03050000 	movweq	r0, #20480	; 0x5000
    2dd0:	200060c4 	andcs	r6, r0, r4, asr #1
    2dd4:	00152b10 	andseq	r2, r5, r0, lsl fp
    2dd8:	9e250100 	suflss	f0, f5, f0
    2ddc:	05000000 	streq	r0, [r0, #-0]
    2de0:	00610c03 	rsbeq	r0, r1, r3, lsl #24
    2de4:	15de1020 	ldrbne	r1, [lr, #32]
    2de8:	26010000 	strcs	r0, [r1], -r0
    2dec:	0000009e 	muleq	r0, lr, r0
    2df0:	627c0305 	rsbsvs	r0, ip, #335544320	; 0x14000000
    2df4:	66102000 	ldrvs	r2, [r0], -r0
    2df8:	01000016 	tsteq	r0, r6, lsl r0
    2dfc:	00009e27 	andeq	r9, r0, r7, lsr #28
    2e00:	14030500 	strne	r0, [r3], #-1280	; 0xfffffb00
    2e04:	10200062 	eorne	r0, r0, r2, rrx
    2e08:	0000165c 	andeq	r1, r0, ip, asr r6
    2e0c:	009e2801 	addseq	r2, lr, r1, lsl #16
    2e10:	03050000 	movweq	r0, #20480	; 0x5000
    2e14:	2000614c 	andcs	r6, r0, ip, asr #2
    2e18:	0014cc10 	andseq	ip, r4, r0, lsl ip
    2e1c:	9e290100 	suflse	f0, f1, f0
    2e20:	05000000 	streq	r0, [r0, #-0]
    2e24:	00615c03 	rsbeq	r5, r1, r3, lsl #24
    2e28:	14991020 	ldrne	r1, [r9], #32
    2e2c:	2b010000 	blcs	42e34 <startup-0x1ffbd1cc>
    2e30:	00000062 	andeq	r0, r0, r2, rrx
    2e34:	62fc0305 	rscsvs	r0, ip, #335544320	; 0x14000000
    2e38:	d0102000 	andsle	r2, r0, r0
    2e3c:	01000015 	tsteq	r0, r5, lsl r0
    2e40:	0000622c 	andeq	r6, r0, ip, lsr #4
    2e44:	74030500 	strvc	r0, [r3], #-1280	; 0xfffffb00
    2e48:	10200060 	eorne	r0, r0, r0, rrx
    2e4c:	0000146b 	andeq	r1, r0, fp, ror #8
    2e50:	00622d01 	rsbeq	r2, r2, r1, lsl #26
    2e54:	03050000 	movweq	r0, #20480	; 0x5000
    2e58:	20006234 	andcs	r6, r0, r4, lsr r2
    2e5c:	0014b210 	andseq	fp, r4, r0, lsl r2
    2e60:	622e0100 	eorvs	r0, lr, #0, 2
    2e64:	05000000 	streq	r0, [r0, #-0]
    2e68:	00606803 	rsbeq	r6, r0, r3, lsl #16
    2e6c:	15e91020 	strbne	r1, [r9, #32]!
    2e70:	2f010000 	svccs	0x00010000
    2e74:	00000062 	andeq	r0, r0, r2, rrx
    2e78:	62cc0305 	sbcvs	r0, ip, #335544320	; 0x14000000
    2e7c:	85102000 	ldrhi	r2, [r0, #-0]
    2e80:	01000015 	tsteq	r0, r5, lsl r0
    2e84:	00006230 	andeq	r6, r0, r0, lsr r2
    2e88:	54030500 	strpl	r0, [r3], #-1280	; 0xfffffb00
    2e8c:	10200062 	eorne	r0, r0, r2, rrx
    2e90:	00001631 	andeq	r1, r0, r1, lsr r6
    2e94:	00623101 	rsbeq	r3, r2, r1, lsl #2
    2e98:	03050000 	movweq	r0, #20480	; 0x5000
    2e9c:	20006218 	andcs	r6, r0, r8, lsl r2
    2ea0:	00141210 	andseq	r1, r4, r0, lsl r2
    2ea4:	62320100 	eorsvs	r0, r2, #0, 2
    2ea8:	05000000 	streq	r0, [r0, #-0]
    2eac:	00614003 	rsbeq	r4, r1, r3
    2eb0:	16fc1020 	ldrbtne	r1, [ip], r0, lsr #32
    2eb4:	33010000 	movwcc	r0, #4096	; 0x1000
    2eb8:	00000062 	andeq	r0, r0, r2, rrx
    2ebc:	626c0305 	rsbvs	r0, ip, #335544320	; 0x14000000
    2ec0:	0a102000 	beq	40aec8 <startup-0x1fbf5138>
    2ec4:	01000017 	tsteq	r0, r7, lsl r0
    2ec8:	00006234 	andeq	r6, r0, r4, lsr r2
    2ecc:	c0030500 	andgt	r0, r3, r0, lsl #10
    2ed0:	10200062 	eorne	r0, r0, r2, rrx
    2ed4:	000015b2 			; <UNDEFINED> instruction: 0x000015b2
    2ed8:	00623501 	rsbeq	r3, r2, r1, lsl #10
    2edc:	03050000 	movweq	r0, #20480	; 0x5000
    2ee0:	20006100 	andcs	r6, r0, r0, lsl #2
    2ee4:	0014d710 	andseq	sp, r4, r0, lsl r7
    2ee8:	62360100 	eorsvs	r0, r6, #0, 2
    2eec:	05000000 	streq	r0, [r0, #-0]
    2ef0:	00626003 	rsbeq	r6, r2, r3
    2ef4:	15c11020 	strbne	r1, [r1, #32]
    2ef8:	37010000 	strcc	r0, [r1, -r0]
    2efc:	00000062 	andeq	r0, r0, r2, rrx
    2f00:	62d80305 	sbcsvs	r0, r8, #335544320	; 0x14000000
    2f04:	e1102000 	tst	r0, r0
    2f08:	01000016 	tsteq	r0, r6, lsl r0
    2f0c:	00006238 	andeq	r6, r0, r8, lsr r2
    2f10:	b4030500 	strlt	r0, [r3], #-1280	; 0xfffffb00
    2f14:	10200062 	eorne	r0, r0, r2, rrx
    2f18:	000013aa 	andeq	r1, r0, sl, lsr #7
    2f1c:	00623901 	rsbeq	r3, r2, r1, lsl #18
    2f20:	03050000 	movweq	r0, #20480	; 0x5000
    2f24:	2000605c 	andcs	r6, r0, ip, asr r0
    2f28:	00161810 	andseq	r1, r6, r0, lsl r8
    2f2c:	623a0100 	eorsvs	r0, sl, #0, 2
    2f30:	05000000 	streq	r0, [r0, #-0]
    2f34:	00622803 	rsbeq	r2, r2, r3, lsl #16
    2f38:	13f81020 	mvnsne	r1, #32
    2f3c:	3b010000 	blcc	42f44 <startup-0x1ffbd0bc>
    2f40:	00000062 	andeq	r0, r0, r2, rrx
    2f44:	60800305 	addvs	r0, r0, r5, lsl #6
    2f48:	57102000 	ldrpl	r2, [r0, -r0]
    2f4c:	01000013 	tsteq	r0, r3, lsl r0
    2f50:	0000623c 	andeq	r6, r0, ip, lsr r2
    2f54:	48030500 	stmdami	r3, {r8, sl}
    2f58:	10200062 	eorne	r0, r0, r2, rrx
    2f5c:	00001375 	andeq	r1, r0, r5, ror r3
    2f60:	014c3f01 	cmpeq	ip, r1, lsl #30
    2f64:	03050000 	movweq	r0, #20480	; 0x5000
    2f68:	20006110 	andcs	r6, r0, r0, lsl r1
    2f6c:	00133610 	andseq	r3, r3, r0, lsl r6
    2f70:	a4400100 	strbge	r0, [r0], #-256	; 0xffffff00
    2f74:	05000000 	streq	r0, [r0, #-0]
    2f78:	00629003 	rsbeq	r9, r2, r3
    2f7c:	15f81020 	ldrbne	r1, [r8, #32]!
    2f80:	41010000 	mrsmi	r0, (UNDEF: 1)
    2f84:	000000a4 	andeq	r0, r0, r4, lsr #1
    2f88:	60b80305 	adcsvs	r0, r8, r5, lsl #6
    2f8c:	60102000 	andsvs	r2, r0, r0
    2f90:	01000014 	tsteq	r0, r4, lsl r0
    2f94:	0000a442 	andeq	sl, r0, r2, asr #8
    2f98:	a8030500 	stmdage	r3, {r8, sl}
    2f9c:	10200062 	eorne	r0, r0, r2, rrx
    2fa0:	0000157a 	andeq	r1, r0, sl, ror r5
    2fa4:	00a44301 	adceq	r4, r4, r1, lsl #6
    2fa8:	03050000 	movweq	r0, #20480	; 0x5000
    2fac:	200060ac 	andcs	r6, r0, ip, lsr #1
    2fb0:	00134c10 	andseq	r4, r3, r0, lsl ip
    2fb4:	a4440100 	strbge	r0, [r4], #-256	; 0xffffff00
    2fb8:	05000000 	streq	r0, [r0, #-0]
    2fbc:	0060f003 	rsbeq	pc, r0, r3
    2fc0:	13cc1020 	bicne	r1, ip, #32
    2fc4:	45010000 	strmi	r0, [r1, #-0]
    2fc8:	000000a4 	andeq	r0, r0, r4, lsr #1
    2fcc:	61340305 	teqvs	r4, r5, lsl #6
    2fd0:	6f102000 	svcvs	0x00102000
    2fd4:	01000015 	tsteq	r0, r5, lsl r0
    2fd8:	0000a446 	andeq	sl, r0, r6, asr #8
    2fdc:	9c030500 	cfstr32ls	mvfx0, [r3], {-0}
    2fe0:	10200062 	eorne	r0, r0, r2, rrx
    2fe4:	0000132b 	andeq	r1, r0, fp, lsr #6
    2fe8:	00a44701 	adceq	r4, r4, r1, lsl #14
    2fec:	03050000 	movweq	r0, #20480	; 0x5000
    2ff0:	200060e4 	andcs	r6, r0, r4, ror #1
    2ff4:	00134110 	andseq	r4, r3, r0, lsl r1
    2ff8:	a4480100 	strbge	r0, [r8], #-256	; 0xffffff00
    2ffc:	05000000 	streq	r0, [r0, #-0]
    3000:	00608c03 	rsbeq	r8, r0, r3, lsl #24
    3004:	15521020 	ldrbne	r1, [r2, #-32]	; 0xffffffe0
    3008:	49010000 	stmdbmi	r1, {}	; <UNPREDICTABLE>
    300c:	000000a4 	andeq	r0, r0, r4, lsr #1
    3010:	60cc0305 	sbcvs	r0, ip, r5, lsl #6
    3014:	19102000 	ldmdbne	r0, {sp}
    3018:	01000017 	tsteq	r0, r7, lsl r0
    301c:	0000a44a 	andeq	sl, r0, sl, asr #8
    3020:	84030500 	strhi	r0, [r3], #-1280	; 0xfffffb00
    3024:	10200062 	eorne	r0, r0, r2, rrx
    3028:	0000142c 	andeq	r1, r0, ip, lsr #8
    302c:	00a44b01 	adceq	r4, r4, r1, lsl #22
    3030:	03050000 	movweq	r0, #20480	; 0x5000
    3034:	20006098 	mulcs	r0, r8, r0
    3038:	00154610 	andseq	r4, r5, r0, lsl r6
    303c:	a44c0100 	strbge	r0, [ip], #-256	; 0xffffff00
    3040:	05000000 	streq	r0, [r0, #-0]
    3044:	00615003 	rsbeq	r5, r1, r3
    3048:	16f01020 	ldrbtne	r1, [r0], r0, lsr #32
    304c:	4d010000 	stcmi	0, cr0, [r1, #-0]
    3050:	000000a4 	andeq	r0, r0, r4, lsr #1
    3054:	60d80305 	sbcsvs	r0, r8, r5, lsl #6
    3058:	38102000 	ldmdacc	r0, {sp}
    305c:	01000014 	tsteq	r0, r4, lsl r0
    3060:	0000a44e 	andeq	sl, r0, lr, asr #8
    3064:	e8030500 	stmda	r3, {r8, sl}
    3068:	0b200062 	bleq	8031f8 <startup-0x1f7fce08>
    306c:	000000a4 	andeq	r0, r0, r4, lsr #1
    3070:	0000064c 	andeq	r0, r0, ip, asr #12
    3074:	00018f11 	andeq	r8, r1, r1, lsl pc
    3078:	10000e00 	andne	r0, r0, r0, lsl #28
    307c:	000015a7 	andeq	r1, r0, r7, lsr #11
    3080:	063c4f01 	ldrteq	r4, [ip], -r1, lsl #30
    3084:	03050000 	movweq	r0, #20480	; 0x5000
    3088:	20006160 	andcs	r6, r0, r0, ror #2
    308c:	00039712 	andeq	r9, r3, r2, lsl r7
    3090:	24900100 	ldrcs	r0, [r0], #256	; 0x100
    3094:	b8200032 	stmdalt	r0!, {r1, r4, r5}
    3098:	01000002 	tsteq	r0, r2
    309c:	0006929c 	muleq	r6, ip, r2
    30a0:	13751300 	cmnne	r5, #0, 6
    30a4:	90010000 	andls	r0, r1, r0
    30a8:	00000162 	andeq	r0, r0, r2, ror #2
    30ac:	0f6c9102 	svceq	0x006c9102
    30b0:	00000971 	andeq	r0, r0, r1, ror r9
    30b4:	012e9101 			; <UNDEFINED> instruction: 0x012e9101
    30b8:	03050000 	movweq	r0, #20480	; 0x5000
    30bc:	2000e178 	andcs	lr, r0, r8, ror r1
    30c0:	04ed1400 	strbteq	r1, [sp], #1024	; 0x400
    30c4:	50010000 	andpl	r0, r1, r0
    30c8:	20002fb0 			; <UNDEFINED> instruction: 0x20002fb0
    30cc:	00000274 	andeq	r0, r0, r4, ror r2
    30d0:	120f9c01 	andne	r9, pc, #256	; 0x100
    30d4:	0100000e 	tsteq	r0, lr
    30d8:	00009e52 	andeq	r9, r0, r2, asr lr
    30dc:	74910200 	ldrvc	r0, [r1], #512	; 0x200
    30e0:	000e1c0f 	andeq	r1, lr, pc, lsl #24
    30e4:	9e550100 	rdflss	f0, f5, f0
    30e8:	02000000 	andeq	r0, r0, #0
    30ec:	120f7091 	andne	r7, pc, #145	; 0x91
    30f0:	0100000c 	tsteq	r0, ip
    30f4:	00009e58 	andeq	r9, r0, r8, asr lr
    30f8:	6c910200 	lfmvs	f0, 4, [r1], {0}
    30fc:	000b330f 	andeq	r3, fp, pc, lsl #6
    3100:	9e5c0100 	rdflse	f0, f4, f0
    3104:	02000000 	andeq	r0, r0, #0
    3108:	3c0f6891 	stccc	8, cr6, [pc], {145}	; 0x91
    310c:	0100000e 	tsteq	r0, lr
    3110:	00009e5f 	andeq	r9, r0, pc, asr lr
    3114:	64910200 	ldrvs	r0, [r1], #512	; 0x200
    3118:	000bd00f 	andeq	sp, fp, pc
    311c:	9e620100 	powlss	f0, f2, f0
    3120:	02000000 	andeq	r0, r0, #0
    3124:	e80f6091 	stmda	pc, {r0, r4, r7, sp, lr}	; <UNPREDICTABLE>
    3128:	0100000d 	tsteq	r0, sp
    312c:	00009e67 	andeq	r9, r0, r7, ror #28
    3130:	5c910200 	lfmpl	f0, 4, [r1], {0}
    3134:	000e460f 	andeq	r4, lr, pc, lsl #12
    3138:	9e6a0100 	powlse	f0, f2, f0
    313c:	02000000 	andeq	r0, r0, #0
    3140:	500f5891 	mulpl	pc, r1, r8	; <UNPREDICTABLE>
    3144:	0100000e 	tsteq	r0, lr
    3148:	00009e6d 	andeq	r9, r0, sp, ror #28
    314c:	54910200 	ldrpl	r0, [r1], #512	; 0x200
    3150:	000b590f 	andeq	r5, fp, pc, lsl #18
    3154:	9e710100 	rpwlss	f0, f1, f0
    3158:	02000000 	andeq	r0, r0, #0
    315c:	9d0f5091 	stcls	0, cr5, [pc, #-580]	; 2f20 <startup-0x1fffd0e0>
    3160:	0100000b 	tsteq	r0, fp
    3164:	00009e74 	andeq	r9, r0, r4, ror lr
    3168:	4c910200 	lfmmi	f0, 4, [r1], {0}
    316c:	000ba70f 	andeq	sl, fp, pc, lsl #14
    3170:	9e770100 	rpwlss	f0, f7, f0
    3174:	02000000 	andeq	r0, r0, #0
    3178:	650f4891 	strvs	r4, [pc, #-2193]	; 28ef <startup-0x1fffd711>
    317c:	0100000e 	tsteq	r0, lr
    3180:	00009e7b 	andeq	r9, r0, fp, ror lr
    3184:	44910200 	ldrmi	r0, [r1], #512	; 0x200
    3188:	000ced0f 	andeq	lr, ip, pc, lsl #26
    318c:	9e7e0100 	rpwlse	f0, f6, f0
    3190:	02000000 	andeq	r0, r0, #0
    3194:	c60f4091 			; <UNDEFINED> instruction: 0xc60f4091
    3198:	0100000b 	tsteq	r0, fp
    319c:	00009e81 	andeq	r9, r0, r1, lsl #29
    31a0:	bc910300 	ldclt	3, cr0, [r1], {0}
    31a4:	15060f7f 	strne	r0, [r6, #-3967]	; 0xfffff081
    31a8:	85010000 	strhi	r0, [r1, #-0]
    31ac:	0000009e 	muleq	r0, lr, r0
    31b0:	7fb89103 	svcvc	0x00b89103
    31b4:	0015930f 	andseq	r9, r5, pc, lsl #6
    31b8:	9e880100 	rmflse	f0, f0, f0
    31bc:	03000000 	movweq	r0, #0
    31c0:	0f7fb491 	svceq	0x007fb491
    31c4:	000013c2 	andeq	r1, r0, r2, asr #7
    31c8:	009e8b01 	addseq	r8, lr, r1, lsl #22
    31cc:	91030000 	mrsls	r0, (UNDEF: 3)
    31d0:	00007fb0 			; <UNDEFINED> instruction: 0x00007fb0
    31d4:	00000498 	muleq	r0, r8, r4
    31d8:	09b60004 	ldmibeq	r6!, {r2}
    31dc:	01040000 	mrseq	r0, (UNDEF: 4)
    31e0:	000000af 	andeq	r0, r0, pc, lsr #1
    31e4:	00173f0c 	andseq	r3, r7, ip, lsl #30
    31e8:	0034dc00 	eorseq	sp, r4, r0, lsl #24
    31ec:	00023820 	andeq	r3, r2, r0, lsr #16
    31f0:	00102300 	andseq	r2, r0, r0, lsl #6
    31f4:	020c0200 	andeq	r0, ip, #0, 4
    31f8:	00004e05 	andeq	r4, r0, r5, lsl #28
    31fc:	03910300 	orrseq	r0, r1, #0, 6
    3200:	07020000 	streq	r0, [r2, -r0]
    3204:	0000004e 	andeq	r0, r0, lr, asr #32
    3208:	07740300 	ldrbeq	r0, [r4, -r0, lsl #6]!
    320c:	08020000 	stmdaeq	r2, {}	; <UNPREDICTABLE>
    3210:	0000004e 	andeq	r0, r0, lr, asr #32
    3214:	1a6a0304 	bne	1a83e2c <startup-0x1e57c1d4>
    3218:	09020000 	stmdbeq	r2, {}	; <UNPREDICTABLE>
    321c:	00000055 	andeq	r0, r0, r5, asr r0
    3220:	04040008 	streq	r0, [r4], #-8
    3224:	0003bf07 	andeq	fp, r3, r7, lsl #30
    3228:	5b040500 	blpl	104630 <startup-0x1fefb9d0>
    322c:	04000000 	streq	r0, [r0], #-0
    3230:	05170801 	ldreq	r0, [r7, #-2049]	; 0xfffff7ff
    3234:	d4060000 	strle	r0, [r6], #-0
    3238:	0200001b 	andeq	r0, r0, #27
    323c:	0000210a 	andeq	r2, r0, sl, lsl #2
    3240:	00340700 	eorseq	r0, r4, r0, lsl #14
    3244:	030c0000 	movweq	r0, #49152	; 0xc000
    3248:	00009e06 	andeq	r9, r0, r6, lsl #28
    324c:	060d0300 	streq	r0, [sp], -r0, lsl #6
    3250:	07030000 	streq	r0, [r3, -r0]
    3254:	0000009e 	muleq	r0, lr, r0
    3258:	003b0300 	eorseq	r0, fp, r0, lsl #6
    325c:	08030000 	stmdaeq	r3, {}	; <UNPREDICTABLE>
    3260:	0000009e 	muleq	r0, lr, r0
    3264:	00300304 	eorseq	r0, r0, r4, lsl #6
    3268:	09030000 	stmdbeq	r3, {}	; <UNPREDICTABLE>
    326c:	0000009e 	muleq	r0, lr, r0
    3270:	04050008 	streq	r0, [r5], #-8
    3274:	00000062 	andeq	r0, r0, r2, rrx
    3278:	00155806 	andseq	r5, r5, r6, lsl #16
    327c:	6d0a0300 	stcvs	3, cr0, [sl, #-0]
    3280:	07000000 	streq	r0, [r0, -r0]
    3284:	00000737 	andeq	r0, r0, r7, lsr r7
    3288:	28060424 	stmdacs	r6, {r2, r5, sl}
    328c:	03000001 	movweq	r0, #1
    3290:	000004a5 	andeq	r0, r0, r5, lsr #9
    3294:	01280704 			; <UNDEFINED> instruction: 0x01280704
    3298:	03000000 	movweq	r0, #0
    329c:	00000743 	andeq	r0, r0, r3, asr #14
    32a0:	012e0804 			; <UNDEFINED> instruction: 0x012e0804
    32a4:	03040000 	movweq	r0, #16384	; 0x4000
    32a8:	00000696 	muleq	r0, r6, r6
    32ac:	012e0904 			; <UNDEFINED> instruction: 0x012e0904
    32b0:	03080000 	movweq	r0, #32768	; 0x8000
    32b4:	000006bf 			; <UNDEFINED> instruction: 0x000006bf
    32b8:	01460c04 	cmpeq	r6, r4, lsl #24
    32bc:	030c0000 	movweq	r0, #49152	; 0xc000
    32c0:	00000378 	andeq	r0, r0, r8, ror r3
    32c4:	01460d04 	cmpeq	r6, r4, lsl #26
    32c8:	03100000 	tsteq	r0, #0
    32cc:	000004b7 			; <UNDEFINED> instruction: 0x000004b7
    32d0:	012e1004 			; <UNDEFINED> instruction: 0x012e1004
    32d4:	03140000 	tsteq	r4, #0
    32d8:	00000080 	andeq	r0, r0, r0, lsl #1
    32dc:	012e1104 			; <UNDEFINED> instruction: 0x012e1104
    32e0:	03180000 	tsteq	r8, #0
    32e4:	0000040f 	andeq	r0, r0, pc, lsl #8
    32e8:	012e1204 			; <UNDEFINED> instruction: 0x012e1204
    32ec:	031c0000 	tsteq	ip, #0
    32f0:	0000041f 	andeq	r0, r0, pc, lsl r4
    32f4:	012e1304 			; <UNDEFINED> instruction: 0x012e1304
    32f8:	00200000 	eoreq	r0, r0, r0
    32fc:	00a40405 	adceq	r0, r4, r5, lsl #8
    3300:	04080000 	streq	r0, [r8], #-0
    3304:	746e6905 	strbtvc	r6, [lr], #-2309	; 0xfffff6fb
    3308:	01400900 	cmpeq	r0, r0, lsl #18
    330c:	400a0000 	andmi	r0, sl, r0
    3310:	00000001 	andeq	r0, r0, r1
    3314:	00af0405 	adceq	r0, pc, r5, lsl #8
    3318:	04050000 	streq	r0, [r5], #-0
    331c:	00000135 	andeq	r0, r0, r5, lsr r1
    3320:	00073806 	andeq	r3, r7, r6, lsl #16
    3324:	af150400 	svcge	0x00150400
    3328:	0b000000 	bleq	3330 <startup-0x1fffccd0>
    332c:	00000162 	andeq	r0, r0, r2, ror #2
    3330:	00000162 	andeq	r0, r0, r2, ror #2
    3334:	0405000c 	streq	r0, [r5], #-12
    3338:	0000014c 	andeq	r0, r0, ip, asr #2
    333c:	00059a0d 	andeq	r9, r5, sp, lsl #20
    3340:	571c0400 	ldrpl	r0, [ip, -r0, lsl #8]
    3344:	0d000001 	stceq	0, cr0, [r0, #-4]
    3348:	0000045a 	andeq	r0, r0, sl, asr r4
    334c:	012e1d04 			; <UNDEFINED> instruction: 0x012e1d04
    3350:	5b0b0000 	blpl	2c3358 <startup-0x1fd3cca8>
    3354:	8e000000 	cdphi	0, 0, cr0, cr0, cr0, {0}
    3358:	0e000001 	cdpeq	0, 0, cr0, cr0, cr1, {0}
    335c:	0000018e 	andeq	r0, r0, lr, lsl #3
    3360:	040400b7 	streq	r0, [r4], #-183	; 0xffffff49
    3364:	00043c07 	andeq	r3, r4, r7, lsl #24
    3368:	18a10f00 	stmiane	r1!, {r8, r9, sl, fp}
    336c:	03050000 	movweq	r0, #20480	; 0x5000
    3370:	0000017e 	andeq	r0, r0, lr, ror r1
    3374:	e17c0305 	cmn	ip, r5, lsl #6
    3378:	3a0f2000 	bcc	3cb380 <startup-0x1fc34c80>
    337c:	06000019 			; <UNDEFINED> instruction: 0x06000019
    3380:	00017e03 	andeq	r7, r1, r3, lsl #28
    3384:	34030500 	strcc	r0, [r3], #-1280	; 0xfffffb00
    3388:	0f2000e2 	svceq	0x002000e2
    338c:	0000177b 	andeq	r1, r0, fp, ror r7
    3390:	017e0307 	cmneq	lr, r7, lsl #6
    3394:	03050000 	movweq	r0, #20480	; 0x5000
    3398:	2000e2ec 	andcs	lr, r0, ip, ror #5
    339c:	00178e0f 	andseq	r8, r7, pc, lsl #28
    33a0:	7e030800 	cdpvc	8, 0, cr0, cr3, cr0, {0}
    33a4:	05000001 	streq	r0, [r0, #-1]
    33a8:	00e3a403 	rsceq	sl, r3, r3, lsl #8
    33ac:	18c70f20 	stmiane	r7, {r5, r8, r9, sl, fp}^
    33b0:	03090000 	movweq	r0, #36864	; 0x9000
    33b4:	0000017e 	andeq	r0, r0, lr, ror r1
    33b8:	e45c0305 	ldrb	r0, [ip], #-773	; 0xfffffcfb
    33bc:	b40f2000 	strlt	r2, [pc], #-0	; 33c4 <startup-0x1fffcc3c>
    33c0:	0a000018 	beq	3428 <startup-0x1fffcbd8>
    33c4:	00017e03 	andeq	r7, r1, r3, lsl #28
    33c8:	14030500 	strne	r0, [r3], #-1280	; 0xfffffb00
    33cc:	0f2000e5 	svceq	0x002000e5
    33d0:	0000187d 	andeq	r1, r0, sp, ror r8
    33d4:	017e030b 	cmneq	lr, fp, lsl #6
    33d8:	03050000 	movweq	r0, #20480	; 0x5000
    33dc:	2000e5cc 	andcs	lr, r0, ip, asr #11
    33e0:	0018350f 	andseq	r3, r8, pc, lsl #10
    33e4:	7e030c00 	cdpvc	12, 0, cr0, cr3, cr0, {0}
    33e8:	05000001 	streq	r0, [r0, #-1]
    33ec:	00e68403 	rsceq	r8, r6, r3, lsl #8
    33f0:	17a10f20 	strne	r0, [r1, r0, lsr #30]!
    33f4:	030d0000 	movweq	r0, #53248	; 0xd000
    33f8:	0000017e 	andeq	r0, r0, lr, ror r1
    33fc:	e73c0305 	ldr	r0, [ip, -r5, lsl #6]!
    3400:	14102000 	ldrne	r2, [r0], #-0
    3404:	01000019 	tsteq	r0, r9, lsl r0
    3408:	00009e0f 	andeq	r9, r0, pc, lsl #28
    340c:	08030500 	stmdaeq	r3, {r8, sl}
    3410:	10200063 	eorne	r0, r0, r3, rrx
    3414:	00001921 	andeq	r1, r0, r1, lsr #18
    3418:	009e1001 	addseq	r1, lr, r1
    341c:	03050000 	movweq	r0, #20480	; 0x5000
    3420:	20006324 	andcs	r6, r0, r4, lsr #6
    3424:	00186610 	andseq	r6, r8, r0, lsl r6
    3428:	9e110100 	muflss	f0, f1, f0
    342c:	05000000 	streq	r0, [r0, #-0]
    3430:	00637803 	rsbeq	r7, r3, r3, lsl #16
    3434:	17e11020 	strbne	r1, [r1, r0, lsr #32]!
    3438:	12010000 	andne	r0, r1, #0
    343c:	0000009e 	muleq	r0, lr, r0
    3440:	63880305 	orrvs	r0, r8, #335544320	; 0x14000000
    3444:	d5102000 	ldrle	r2, [r0, #-0]
    3448:	01000017 	tsteq	r0, r7, lsl r0
    344c:	00009e13 	andeq	r9, r0, r3, lsl lr
    3450:	34030500 	strcc	r0, [r3], #-1280	; 0xfffffb00
    3454:	10200063 	eorne	r0, r0, r3, rrx
    3458:	000018fa 	strdeq	r1, [r0], -sl
    345c:	009e1401 	addseq	r1, lr, r1, lsl #8
    3460:	03050000 	movweq	r0, #20480	; 0x5000
    3464:	200063c4 	andcs	r6, r0, r4, asr #7
    3468:	00182810 	andseq	r2, r8, r0, lsl r8
    346c:	9e150100 	muflss	f0, f5, f0
    3470:	05000000 	streq	r0, [r0, #-0]
    3474:	0063c003 	rsbeq	ip, r3, r3
    3478:	181c1020 	ldmdane	ip, {r5, ip}
    347c:	16010000 	strne	r0, [r1], -r0
    3480:	0000009e 	muleq	r0, lr, r0
    3484:	63740305 	cmnvs	r4, #335544320	; 0x14000000
    3488:	32102000 	andscc	r2, r0, #0
    348c:	01000017 	tsteq	r0, r7, lsl r0
    3490:	00009e17 	andeq	r9, r0, r7, lsl lr
    3494:	b0030500 	andlt	r0, r3, r0, lsl #10
    3498:	10200063 	eorne	r0, r0, r3, rrx
    349c:	000017ee 	andeq	r1, r0, lr, ror #15
    34a0:	00621901 	rsbeq	r1, r2, r1, lsl #18
    34a4:	03050000 	movweq	r0, #20480	; 0x5000
    34a8:	200063d4 	ldrdcs	r6, [r0], -r4
    34ac:	0018ea10 	andseq	lr, r8, r0, lsl sl
    34b0:	621a0100 	andsvs	r0, sl, #0, 2
    34b4:	05000000 	streq	r0, [r0, #-0]
    34b8:	0063c803 	rsbeq	ip, r3, r3, lsl #16
    34bc:	18571020 	ldmdane	r7, {r5, ip}^
    34c0:	1b010000 	blne	434c8 <startup-0x1ffbcb38>
    34c4:	00000062 	andeq	r0, r0, r2, rrx
    34c8:	63ec0305 	mvnvs	r0, #335544320	; 0x14000000
    34cc:	fe102000 	cdp2	0, 1, cr2, cr0, cr0, {0}
    34d0:	01000017 	tsteq	r0, r7, lsl r0
    34d4:	0000621c 	andeq	r6, r0, ip, lsl r2
    34d8:	a4030500 	strge	r0, [r3], #-1280	; 0xfffffb00
    34dc:	10200063 	eorne	r0, r0, r3, rrx
    34e0:	00001890 	muleq	r0, r0, r8
    34e4:	00621d01 	rsbeq	r1, r2, r1, lsl #26
    34e8:	03050000 	movweq	r0, #20480	; 0x5000
    34ec:	20006338 	andcs	r6, r0, r8, lsr r3
    34f0:	00184710 	andseq	r4, r8, r0, lsl r7
    34f4:	621e0100 	andsvs	r0, lr, #0, 2
    34f8:	05000000 	streq	r0, [r0, #-0]
    34fc:	00637c03 	rsbeq	r7, r3, r3, lsl #24
    3500:	17b41020 	ldrne	r1, [r4, r0, lsr #32]!
    3504:	1f010000 	svcne	0x00010000
    3508:	00000062 	andeq	r0, r0, r2, rrx
    350c:	638c0305 	orrvs	r0, ip, #335544320	; 0x14000000
    3510:	d9102000 	ldmdble	r0, {sp}
    3514:	01000018 	tsteq	r0, r8, lsl r0
    3518:	00006220 	andeq	r6, r0, r0, lsr #4
    351c:	98030500 	stmdals	r3, {r8, sl}
    3520:	10200063 	eorne	r0, r0, r3, rrx
    3524:	000017c5 	andeq	r1, r0, r5, asr #15
    3528:	00622101 	rsbeq	r2, r2, r1, lsl #2
    352c:	03050000 	movweq	r0, #20480	; 0x5000
    3530:	2000630c 	andcs	r6, r0, ip, lsl #6
    3534:	00187310 	andseq	r7, r8, r0, lsl r3
    3538:	4c240100 	stfmis	f0, [r4], #-0
    353c:	05000001 	streq	r0, [r0, #-1]
    3540:	0063f803 	rsbeq	pc, r3, r3, lsl #16
    3544:	19071020 	stmdbne	r7, {r5, ip}
    3548:	25010000 	strcs	r0, [r1, #-0]
    354c:	000000a4 	andeq	r0, r0, r4, lsr #1
    3550:	63e00305 	mvnvs	r0, #335544320	; 0x14000000
    3554:	6e102000 	cdpvs	0, 1, cr2, cr0, cr0, {0}
    3558:	01000017 	tsteq	r0, r7, lsl r0
    355c:	0000a426 	andeq	sl, r0, r6, lsr #8
    3560:	28030500 	stmdacs	r3, {r8, sl}
    3564:	10200063 	eorne	r0, r0, r3, rrx
    3568:	0000192d 	andeq	r1, r0, sp, lsr #18
    356c:	00a42701 	adceq	r2, r4, r1, lsl #14
    3570:	03050000 	movweq	r0, #20480	; 0x5000
    3574:	200063b4 			; <UNDEFINED> instruction: 0x200063b4
    3578:	00180f10 	andseq	r0, r8, r0, lsl pc
    357c:	a4280100 	strtge	r0, [r8], #-256	; 0xffffff00
    3580:	05000000 	streq	r0, [r0, #-0]
    3584:	00631803 	rsbeq	r1, r3, r3, lsl #16
    3588:	00a40b20 	adceq	r0, r4, r0, lsr #22
    358c:	03c50000 	biceq	r0, r5, #0
    3590:	8e0e0000 	cdphi	0, 0, cr0, cr14, cr0, {0}
    3594:	03000001 	movweq	r0, #1
    3598:	17251000 	strne	r1, [r5, -r0]!
    359c:	29010000 	stmdbcs	r1, {}	; <UNPREDICTABLE>
    35a0:	000003b5 			; <UNDEFINED> instruction: 0x000003b5
    35a4:	63440305 	movtvs	r0, #17157	; 0x4305
    35a8:	3c112000 	ldccc	0, cr2, [r1], {-0}
    35ac:	01000006 	tsteq	r0, r6
    35b0:	00361c4d 	eorseq	r1, r6, sp, asr #24
    35b4:	0000f820 	andeq	pc, r0, r0, lsr #16
    35b8:	0b9c0100 	bleq	fe7039c0 <firstTime.4108+0xde6ee468>
    35bc:	12000004 	andne	r0, r0, #4
    35c0:	00001873 	andeq	r1, r0, r3, ror r8
    35c4:	01624d01 	cmneq	r2, r1, lsl #26
    35c8:	91020000 	mrsls	r0, (UNDEF: 2)
    35cc:	09710f6c 	ldmdbeq	r1!, {r2, r3, r5, r6, r8, r9, sl, fp}^
    35d0:	4e010000 	cdpmi	0, 0, cr0, cr1, cr0, {0}
    35d4:	0000012e 	andeq	r0, r0, lr, lsr #2
    35d8:	e7f40305 	ldrb	r0, [r4, r5, lsl #6]!
    35dc:	13002000 	movwne	r2, #0
    35e0:	000004ed 	andeq	r0, r0, sp, ror #9
    35e4:	34dc2a01 	ldrbcc	r2, [ip], #2561	; 0xa01
    35e8:	01402000 	mrseq	r2, (UNDEF: 64)
    35ec:	9c010000 	stcls	0, cr0, [r1], {-0}
    35f0:	000e120f 	andeq	r1, lr, pc, lsl #4
    35f4:	9e2c0100 	suflse	f0, f4, f0
    35f8:	02000000 	andeq	r0, r0, #0
    35fc:	1c0f7491 	cfstrsne	mvf7, [pc], {145}	; 0x91
    3600:	0100000e 	tsteq	r0, lr
    3604:	00009e2f 	andeq	r9, r0, pc, lsr #28
    3608:	70910200 	addsvc	r0, r1, r0, lsl #4
    360c:	000c120f 	andeq	r1, ip, pc, lsl #4
    3610:	9e320100 	rsflss	f0, f2, f0
    3614:	02000000 	andeq	r0, r0, #0
    3618:	330f6c91 	movwcc	r6, #64657	; 0xfc91
    361c:	0100000b 	tsteq	r0, fp
    3620:	00009e36 	andeq	r9, r0, r6, lsr lr
    3624:	68910200 	ldmvs	r1, {r9}
    3628:	000e3c0f 	andeq	r3, lr, pc, lsl #24
    362c:	9e390100 	rsflse	f0, f1, f0
    3630:	02000000 	andeq	r0, r0, #0
    3634:	d00f6491 	mulle	pc, r1, r4	; <UNPREDICTABLE>
    3638:	0100000b 	tsteq	r0, fp
    363c:	00009e3c 	andeq	r9, r0, ip, lsr lr
    3640:	60910200 	addsvs	r0, r1, r0, lsl #4
    3644:	000de80f 	andeq	lr, sp, pc, lsl #16
    3648:	9e410100 	dvflss	f0, f1, f0
    364c:	02000000 	andeq	r0, r0, #0
    3650:	460f5c91 			; <UNDEFINED> instruction: 0x460f5c91
    3654:	0100000e 	tsteq	r0, lr
    3658:	00009e44 	andeq	r9, r0, r4, asr #28
    365c:	58910200 	ldmpl	r1, {r9}
    3660:	000e500f 	andeq	r5, lr, pc
    3664:	9e470100 	dvflss	f0, f7, f0
    3668:	02000000 	andeq	r0, r0, #0
    366c:	00005491 	muleq	r0, r1, r4
    3670:	000008e5 	andeq	r0, r0, r5, ror #17
    3674:	0ab60004 	beq	fed8368c <firstTime.4108+0xded6e134>
    3678:	01040000 	mrseq	r0, (UNDEF: 4)
    367c:	000000af 	andeq	r0, r0, pc, lsr #1
    3680:	001a2c0c 	andseq	r2, sl, ip, lsl #24
    3684:	00371400 	eorseq	r1, r7, r0, lsl #8
    3688:	000e9020 	andeq	r9, lr, r0, lsr #32
    368c:	00119200 	andseq	r9, r1, r0, lsl #4
    3690:	020c0200 	andeq	r0, ip, #0, 4
    3694:	00004e05 	andeq	r4, r0, r5, lsl #28
    3698:	03910300 	orrseq	r0, r1, #0, 6
    369c:	07020000 	streq	r0, [r2, -r0]
    36a0:	0000004e 	andeq	r0, r0, lr, asr #32
    36a4:	07740300 	ldrbeq	r0, [r4, -r0, lsl #6]!
    36a8:	08020000 	stmdaeq	r2, {}	; <UNPREDICTABLE>
    36ac:	0000004e 	andeq	r0, r0, lr, asr #32
    36b0:	1a6a0304 	bne	1a842c8 <startup-0x1e57bd38>
    36b4:	09020000 	stmdbeq	r2, {}	; <UNPREDICTABLE>
    36b8:	00000055 	andeq	r0, r0, r5, asr r0
    36bc:	04040008 	streq	r0, [r4], #-8
    36c0:	0003bf07 	andeq	fp, r3, r7, lsl #30
    36c4:	5b040500 	blpl	104acc <startup-0x1fefb534>
    36c8:	04000000 	streq	r0, [r0], #-0
    36cc:	05170801 	ldreq	r0, [r7, #-2049]	; 0xfffff7ff
    36d0:	d4060000 	strle	r0, [r6], #-0
    36d4:	0200001b 	andeq	r0, r0, #27
    36d8:	0000210a 	andeq	r2, r0, sl, lsl #2
    36dc:	00340700 	eorseq	r0, r4, r0, lsl #14
    36e0:	030c0000 	movweq	r0, #49152	; 0xc000
    36e4:	00009e06 	andeq	r9, r0, r6, lsl #28
    36e8:	060d0300 	streq	r0, [sp], -r0, lsl #6
    36ec:	07030000 	streq	r0, [r3, -r0]
    36f0:	0000009e 	muleq	r0, lr, r0
    36f4:	003b0300 	eorseq	r0, fp, r0, lsl #6
    36f8:	08030000 	stmdaeq	r3, {}	; <UNPREDICTABLE>
    36fc:	0000009e 	muleq	r0, lr, r0
    3700:	00300304 	eorseq	r0, r0, r4, lsl #6
    3704:	09030000 	stmdbeq	r3, {}	; <UNPREDICTABLE>
    3708:	0000009e 	muleq	r0, lr, r0
    370c:	04050008 	streq	r0, [r5], #-8
    3710:	00000062 	andeq	r0, r0, r2, rrx
    3714:	00155806 	andseq	r5, r5, r6, lsl #16
    3718:	6d0a0300 	stcvs	3, cr0, [sl, #-0]
    371c:	07000000 	streq	r0, [r0, -r0]
    3720:	00000737 	andeq	r0, r0, r7, lsr r7
    3724:	28060424 	stmdacs	r6, {r2, r5, sl}
    3728:	03000001 	movweq	r0, #1
    372c:	000004a5 	andeq	r0, r0, r5, lsr #9
    3730:	01280704 			; <UNDEFINED> instruction: 0x01280704
    3734:	03000000 	movweq	r0, #0
    3738:	00000743 	andeq	r0, r0, r3, asr #14
    373c:	012e0804 			; <UNDEFINED> instruction: 0x012e0804
    3740:	03040000 	movweq	r0, #16384	; 0x4000
    3744:	00000696 	muleq	r0, r6, r6
    3748:	012e0904 			; <UNDEFINED> instruction: 0x012e0904
    374c:	03080000 	movweq	r0, #32768	; 0x8000
    3750:	000006bf 			; <UNDEFINED> instruction: 0x000006bf
    3754:	01460c04 	cmpeq	r6, r4, lsl #24
    3758:	030c0000 	movweq	r0, #49152	; 0xc000
    375c:	00000378 	andeq	r0, r0, r8, ror r3
    3760:	01460d04 	cmpeq	r6, r4, lsl #26
    3764:	03100000 	tsteq	r0, #0
    3768:	000004b7 			; <UNDEFINED> instruction: 0x000004b7
    376c:	012e1004 			; <UNDEFINED> instruction: 0x012e1004
    3770:	03140000 	tsteq	r4, #0
    3774:	00000080 	andeq	r0, r0, r0, lsl #1
    3778:	012e1104 			; <UNDEFINED> instruction: 0x012e1104
    377c:	03180000 	tsteq	r8, #0
    3780:	0000040f 	andeq	r0, r0, pc, lsl #8
    3784:	012e1204 			; <UNDEFINED> instruction: 0x012e1204
    3788:	031c0000 	tsteq	ip, #0
    378c:	0000041f 	andeq	r0, r0, pc, lsl r4
    3790:	012e1304 			; <UNDEFINED> instruction: 0x012e1304
    3794:	00200000 	eoreq	r0, r0, r0
    3798:	00a40405 	adceq	r0, r4, r5, lsl #8
    379c:	04080000 	streq	r0, [r8], #-0
    37a0:	746e6905 	strbtvc	r6, [lr], #-2309	; 0xfffff6fb
    37a4:	01400900 	cmpeq	r0, r0, lsl #18
    37a8:	400a0000 	andmi	r0, sl, r0
    37ac:	00000001 	andeq	r0, r0, r1
    37b0:	00af0405 	adceq	r0, pc, r5, lsl #8
    37b4:	04050000 	streq	r0, [r5], #-0
    37b8:	00000135 	andeq	r0, r0, r5, lsr r1
    37bc:	00073806 	andeq	r3, r7, r6, lsl #16
    37c0:	af150400 	svcge	0x00150400
    37c4:	0b000000 	bleq	37cc <startup-0x1fffc834>
    37c8:	00000162 	andeq	r0, r0, r2, ror #2
    37cc:	00000162 	andeq	r0, r0, r2, ror #2
    37d0:	0405000c 	streq	r0, [r5], #-12
    37d4:	0000014c 	andeq	r0, r0, ip, asr #2
    37d8:	00059a0d 	andeq	r9, r5, sp, lsl #20
    37dc:	571c0400 	ldrpl	r0, [ip, -r0, lsl #8]
    37e0:	0d000001 	stceq	0, cr0, [r0, #-4]
    37e4:	0000045a 	andeq	r0, r0, sl, asr r4
    37e8:	012e1d04 			; <UNDEFINED> instruction: 0x012e1d04
    37ec:	fb060000 	blx	1837f6 <startup-0x1fe7c80a>
    37f0:	05000006 	streq	r0, [r0, #-6]
    37f4:	00005b24 	andeq	r5, r0, r4, lsr #22
    37f8:	017e0b00 	cmneq	lr, r0, lsl #22
    37fc:	019a0000 	orrseq	r0, sl, r0
    3800:	9a0e0000 	bls	383808 <startup-0x1fc7c7f8>
    3804:	ff000001 			; <UNDEFINED> instruction: 0xff000001
    3808:	04040003 	streq	r0, [r4], #-3
    380c:	00043c07 	andeq	r3, r4, r7, lsl #24
    3810:	19990d00 	ldmibne	r9, {r8, sl, fp}
    3814:	2d050000 	stccs	0, cr0, [r5, #-0]
    3818:	00000189 	andeq	r0, r0, r9, lsl #3
    381c:	00027e0d 	andeq	r7, r2, sp, lsl #28
    3820:	892e0500 	stmdbhi	lr!, {r8, sl}
    3824:	0d000001 	stceq	0, cr0, [r0, #-4]
    3828:	00000525 	andeq	r0, r0, r5, lsr #10
    382c:	01892f05 	orreq	r2, r9, r5, lsl #30
    3830:	a10d0000 	mrsge	r0, (UNDEF: 13)
    3834:	05000003 	streq	r0, [r0, #-3]
    3838:	00018930 	andeq	r8, r1, r0, lsr r9
    383c:	03060d00 	movweq	r0, #27904	; 0x6d00
    3840:	31050000 	mrscc	r0, (UNDEF: 5)
    3844:	00000189 	andeq	r0, r0, r9, lsl #3
    3848:	0007190d 	andeq	r1, r7, sp, lsl #18
    384c:	89320500 	ldmdbhi	r2!, {r8, sl}
    3850:	0d000001 	stceq	0, cr0, [r0, #-4]
    3854:	00000709 	andeq	r0, r0, r9, lsl #14
    3858:	01893305 	orreq	r3, r9, r5, lsl #6
    385c:	ac0f0000 	stcge	0, cr0, [pc], {-0}
    3860:	01000001 	tsteq	r0, r1
    3864:	1c03052b 	cfstr32ne	mvfx0, [r3], {43}	; 0x2b
    3868:	0f200074 	svceq	0x00200074
    386c:	000001b7 			; <UNDEFINED> instruction: 0x000001b7
    3870:	03052c01 	movweq	r2, #23553	; 0x5c01
    3874:	2000681c 	andcs	r6, r0, ip, lsl r8
    3878:	0001c20f 	andeq	ip, r1, pc, lsl #4
    387c:	052d0100 	streq	r0, [sp, #-256]!	; 0xffffff00
    3880:	00701c03 	rsbseq	r1, r0, r3, lsl #24
    3884:	01cd0f20 	biceq	r0, sp, r0, lsr #30
    3888:	2e010000 	cdpcs	0, 0, cr0, cr1, cr0, {0}
    388c:	781c0305 	ldmdavc	ip, {r0, r2, r8, r9}
    3890:	a10f2000 	mrsge	r2, CPSR
    3894:	01000001 	tsteq	r0, r1
    3898:	1c03052f 	cfstr32ne	mvfx0, [r3], {47}	; 0x2f
    389c:	0f20006c 	svceq	0x0020006c
    38a0:	000001d8 	ldrdeq	r0, [r0], -r8
    38a4:	03053001 	movweq	r3, #20481	; 0x5001
    38a8:	2000641c 	andcs	r6, r0, ip, lsl r4
    38ac:	0001e30f 	andeq	lr, r1, pc, lsl #6
    38b0:	05310100 	ldreq	r0, [r1, #-256]!	; 0xffffff00
    38b4:	007c1c03 	rsbseq	r1, ip, r3, lsl #24
    38b8:	19cf1020 	stmibne	pc, {r5, ip}^	; <UNPREDICTABLE>
    38bc:	b3010000 	movwlt	r0, #4096	; 0x1000
    38c0:	00453a01 	subeq	r3, r5, r1, lsl #20
    38c4:	00006a20 	andeq	r6, r0, r0, lsr #20
    38c8:	6f9c0100 	svcvs	0x009c0100
    38cc:	11000002 	tstne	r0, r2
    38d0:	00001ac9 	andeq	r1, r0, r9, asr #21
    38d4:	2e01b301 	cdpcs	3, 0, cr11, cr1, cr1, {0}
    38d8:	02000001 	andeq	r0, r0, #1
    38dc:	10007491 	mulne	r0, r1, r4
    38e0:	0000196c 	andeq	r1, r0, ip, ror #18
    38e4:	b801ab01 	stmdalt	r1, {r0, r8, r9, fp, sp, pc}
    38e8:	82200044 	eorhi	r0, r0, #68	; 0x44
    38ec:	01000000 	mrseq	r0, (UNDEF: 0)
    38f0:	0002a49c 	muleq	r2, ip, r4
    38f4:	19aa1100 	stmibne	sl!, {r8, ip}
    38f8:	ab010000 	blge	43900 <startup-0x1ffbc700>
    38fc:	00016201 	andeq	r6, r1, r1, lsl #4
    3900:	6c910200 	lfmvs	f0, 4, [r1], {0}
    3904:	0004bf12 	andeq	fp, r4, r2, lsl pc
    3908:	01ac0100 			; <UNDEFINED> instruction: 0x01ac0100
    390c:	0000012e 	andeq	r0, r0, lr, lsr #2
    3910:	00749102 	rsbseq	r9, r4, r2, lsl #2
    3914:	001a8113 	andseq	r8, sl, r3, lsl r1
    3918:	01a10100 			; <UNDEFINED> instruction: 0x01a10100
    391c:	200043b0 			; <UNDEFINED> instruction: 0x200043b0
    3920:	00000108 	andeq	r0, r0, r8, lsl #2
    3924:	02c89c01 	sbceq	r9, r8, #256	; 0x100
    3928:	69140000 	ldmdbvs	r4, {}	; <UNPREDICTABLE>
    392c:	01a20100 			; <UNDEFINED> instruction: 0x01a20100
    3930:	0000012e 	andeq	r0, r0, lr, lsr #2
    3934:	00749102 	rsbseq	r9, r4, r2, lsl #2
    3938:	001a0710 	andseq	r0, sl, r0, lsl r7
    393c:	017b0100 	cmneq	fp, r0, lsl #2
    3940:	20004280 	andcs	r4, r0, r0, lsl #5
    3944:	00000130 	andeq	r0, r0, r0, lsr r1
    3948:	033c9c01 	teqeq	ip, #256	; 0x100
    394c:	78140000 	ldmdavc	r4, {}	; <UNPREDICTABLE>
    3950:	017c0100 	cmneq	ip, r0, lsl #2
    3954:	0000012e 	andeq	r0, r0, lr, lsr #2
    3958:	146c9102 	strbtne	r9, [ip], #-258	; 0xfffffefe
    395c:	7d010079 	stcvc	0, cr0, [r1, #-484]	; 0xfffffe1c
    3960:	00012e01 	andeq	r2, r1, r1, lsl #28
    3964:	68910200 	ldmvs	r1, {r9}
    3968:	00039112 	andeq	r9, r3, r2, lsl r1
    396c:	017e0100 	cmneq	lr, r0, lsl #2
    3970:	0000012e 	andeq	r0, r0, lr, lsr #2
    3974:	12649102 	rsbne	r9, r4, #-2147483648	; 0x80000000
    3978:	00000774 	andeq	r0, r0, r4, ror r7
    397c:	2e017f01 	cdpcs	15, 0, cr7, cr1, cr1, {0}
    3980:	02000001 	andeq	r0, r0, #1
    3984:	78146091 	ldmdavc	r4, {r0, r4, r7, sp, lr}
    3988:	81010032 	tsthi	r1, r2, lsr r0
    398c:	00012e01 	andeq	r2, r1, r1, lsl #28
    3990:	5c910200 	lfmpl	f0, 4, [r1], {0}
    3994:	01006915 	tsteq	r0, r5, lsl r9
    3998:	012e0185 	smlawbeq	lr, r5, r1, r0
    399c:	6b140000 	blvs	5039a4 <startup-0x1fafc65c>
    39a0:	01860100 	orreq	r0, r6, r0, lsl #2
    39a4:	0000012e 	andeq	r0, r0, lr, lsr #2
    39a8:	00589102 	subseq	r9, r8, r2, lsl #2
    39ac:	001b1310 	andseq	r1, fp, r0, lsl r3
    39b0:	01700100 	cmneq	r0, r0, lsl #2
    39b4:	2000422e 	andcs	r4, r0, lr, lsr #4
    39b8:	00000052 	andeq	r0, r0, r2, asr r0
    39bc:	03a59c01 			; <UNDEFINED> instruction: 0x03a59c01
    39c0:	78160000 	ldmdavc	r6, {}	; <UNPREDICTABLE>
    39c4:	01700100 	cmneq	r0, r0, lsl #2
    39c8:	0000012e 	andeq	r0, r0, lr, lsr #2
    39cc:	166c9102 	strbtne	r9, [ip], -r2, lsl #2
    39d0:	70010079 	andvc	r0, r1, r9, ror r0
    39d4:	00012e01 	andeq	r2, r1, r1, lsl #28
    39d8:	68910200 	ldmvs	r1, {r9}
    39dc:	00039111 	andeq	r9, r3, r1, lsl r1
    39e0:	01700100 	cmneq	r0, r0, lsl #2
    39e4:	0000012e 	andeq	r0, r0, lr, lsr #2
    39e8:	11649102 	cmnne	r4, r2, lsl #2
    39ec:	00000774 	andeq	r0, r0, r4, ror r7
    39f0:	2e017001 	cdpcs	0, 0, cr7, cr1, cr1, {0}
    39f4:	02000001 	andeq	r0, r0, #1
    39f8:	69146091 	ldmdbvs	r4, {r0, r4, r7, sp, lr}
    39fc:	01710100 	cmneq	r1, r0, lsl #2
    3a00:	0000012e 	andeq	r0, r0, lr, lsr #2
    3a04:	14749102 	ldrbtne	r9, [r4], #-258	; 0xfffffefe
    3a08:	7201006a 	andvc	r0, r1, #106	; 0x6a
    3a0c:	00012e01 	andeq	r2, r1, r1, lsl #28
    3a10:	70910200 	addsvc	r0, r1, r0, lsl #4
    3a14:	1ab61000 	bne	fed87a1c <firstTime.4108+0xded724c4>
    3a18:	66010000 	strvs	r0, [r1], -r0
    3a1c:	0041dc01 	subeq	sp, r1, r1, lsl #24
    3a20:	00005220 	andeq	r5, r0, r0, lsr #4
    3a24:	0e9c0100 	fmleqe	f0, f4, f0
    3a28:	16000004 	strne	r0, [r0], -r4
    3a2c:	66010078 			; <UNDEFINED> instruction: 0x66010078
    3a30:	00012e01 	andeq	r2, r1, r1, lsl #28
    3a34:	6c910200 	lfmvs	f0, 4, [r1], {0}
    3a38:	01007916 	tsteq	r0, r6, lsl r9
    3a3c:	012e0166 			; <UNDEFINED> instruction: 0x012e0166
    3a40:	91020000 	mrsls	r0, (UNDEF: 2)
    3a44:	03911168 	orrseq	r1, r1, #104, 2
    3a48:	66010000 	strvs	r0, [r1], -r0
    3a4c:	00012e01 	andeq	r2, r1, r1, lsl #28
    3a50:	64910200 	ldrvs	r0, [r1], #512	; 0x200
    3a54:	00077411 	andeq	r7, r7, r1, lsl r4
    3a58:	01660100 	cmneq	r6, r0, lsl #2
    3a5c:	0000012e 	andeq	r0, r0, lr, lsr #2
    3a60:	14609102 	strbtne	r9, [r0], #-258	; 0xfffffefe
    3a64:	67010069 	strvs	r0, [r1, -r9, rrx]
    3a68:	00012e01 	andeq	r2, r1, r1, lsl #28
    3a6c:	74910200 	ldrvc	r0, [r1], #512	; 0x200
    3a70:	01006a14 	tsteq	r0, r4, lsl sl
    3a74:	012e0168 			; <UNDEFINED> instruction: 0x012e0168
    3a78:	91020000 	mrsls	r0, (UNDEF: 2)
    3a7c:	da100070 	ble	403c44 <startup-0x1fbfc3bc>
    3a80:	01000019 	tsteq	r0, r9, lsl r0
    3a84:	40c20150 	sbcmi	r0, r2, r0, asr r1
    3a88:	011a2000 	tsteq	sl, r0
    3a8c:	9c010000 	stcls	0, cr0, [r1], {-0}
    3a90:	000004b9 			; <UNDEFINED> instruction: 0x000004b9
    3a94:	01007316 	tsteq	r0, r6, lsl r3
    3a98:	009e0150 	addseq	r0, lr, r0, asr r1
    3a9c:	91020000 	mrsls	r0, (UNDEF: 2)
    3aa0:	00781654 	rsbseq	r1, r8, r4, asr r6
    3aa4:	2e015001 	cdpcs	0, 0, cr5, cr1, cr1, {0}
    3aa8:	02000001 	andeq	r0, r0, #1
    3aac:	79165091 	ldmdbvc	r6, {r0, r4, r7, ip, lr}
    3ab0:	01500100 	cmpeq	r0, r0, lsl #2
    3ab4:	0000012e 	andeq	r0, r0, lr, lsr #2
    3ab8:	164c9102 	strbne	r9, [ip], -r2, lsl #2
    3abc:	00746573 	rsbseq	r6, r4, r3, ror r5
    3ac0:	2e015001 	cdpcs	0, 0, cr5, cr1, cr1, {0}
    3ac4:	02000001 	andeq	r0, r0, #1
    3ac8:	7b114891 	blvc	455d14 <startup-0x1fbaa2ec>
    3acc:	0100001a 	tsteq	r0, sl, lsl r0
    3ad0:	012e0150 			; <UNDEFINED> instruction: 0x012e0150
    3ad4:	91020000 	mrsls	r0, (UNDEF: 2)
    3ad8:	00691400 	rsbeq	r1, r9, r0, lsl #8
    3adc:	2e015101 	adfcss	f5, f1, f1
    3ae0:	02000001 	andeq	r0, r0, #1
    3ae4:	6a146c91 	bvs	51ed30 <startup-0x1fae12d0>
    3ae8:	01510100 	cmpeq	r1, r0, lsl #2
    3aec:	0000012e 	andeq	r0, r0, lr, lsr #2
    3af0:	14689102 	strbtne	r9, [r8], #-258	; 0xfffffefe
    3af4:	5101006b 	tstpl	r1, fp, rrx
    3af8:	00012e01 	andeq	r2, r1, r1, lsl #28
    3afc:	64910200 	ldrvs	r0, [r1], #512	; 0x200
    3b00:	001aee12 	andseq	lr, sl, r2, lsl lr
    3b04:	01510100 	cmpeq	r1, r0, lsl #2
    3b08:	0000012e 	andeq	r0, r0, lr, lsr #2
    3b0c:	17609102 	strbne	r9, [r0, -r2, lsl #2]!
    3b10:	200040fa 	strdcs	r4, [r0], -sl
    3b14:	000000bc 	strheq	r0, [r0], -ip
    3b18:	001ae912 	andseq	lr, sl, r2, lsl r9
    3b1c:	01580100 	cmpeq	r8, r0, lsl #2
    3b20:	0000005b 	andeq	r0, r0, fp, asr r0
    3b24:	005f9102 	subseq	r9, pc, r2, lsl #2
    3b28:	19af1000 	stmibne	pc!, {ip}	; <UNPREDICTABLE>
    3b2c:	3b010000 	blcc	43b34 <startup-0x1ffbc4cc>
    3b30:	003fec01 	eorseq	lr, pc, r1, lsl #24
    3b34:	0000d620 	andeq	sp, r0, r0, lsr #12
    3b38:	229c0100 	addscs	r0, ip, #0, 2
    3b3c:	11000005 	tstne	r0, r5
    3b40:	0000195e 	andeq	r1, r0, lr, asr r9
    3b44:	22013b01 	andcs	r3, r1, #1024	; 0x400
    3b48:	02000005 	andeq	r0, r0, #5
    3b4c:	69146491 	ldmdbvs	r4, {r0, r4, r7, sl, sp, lr}
    3b50:	013c0100 	teqeq	ip, r0, lsl #2
    3b54:	0000017e 	andeq	r0, r0, lr, ror r1
    3b58:	14779102 	ldrbtne	r9, [r7], #-258	; 0xfffffefe
    3b5c:	3c01006a 	stccc	0, cr0, [r1], {106}	; 0x6a
    3b60:	00017e01 	andeq	r7, r1, r1, lsl #28
    3b64:	76910200 	ldrvc	r0, [r1], r0, lsl #4
    3b68:	001d2b12 	andseq	r2, sp, r2, lsl fp
    3b6c:	013c0100 	teqeq	ip, r0, lsl #2
    3b70:	0000017e 	andeq	r0, r0, lr, ror r1
    3b74:	146f9102 	strbtne	r9, [pc], #-258	; 3b7c <startup-0x1fffc484>
    3b78:	3c010063 	stccc	0, cr0, [r1], {99}	; 0x63
    3b7c:	00017e01 	andeq	r7, r1, r1, lsl #28
    3b80:	75910200 	ldrvc	r0, [r1, #512]	; 0x200
    3b84:	01006b14 	tsteq	r0, r4, lsl fp
    3b88:	004e013d 	subeq	r0, lr, sp, lsr r1
    3b8c:	91020000 	mrsls	r0, (UNDEF: 2)
    3b90:	04050070 	streq	r0, [r5], #-112	; 0xffffff90
    3b94:	0000017e 	andeq	r0, r0, lr, ror r1
    3b98:	00196510 	andseq	r6, r9, r0, lsl r5
    3b9c:	01130100 	tsteq	r3, r0, lsl #2
    3ba0:	20003e4e 	andcs	r3, r0, lr, asr #28
    3ba4:	0000019e 	muleq	r0, lr, r1
    3ba8:	05a29c01 	streq	r9, [r2, #3073]!	; 0xc01
    3bac:	78160000 	ldmdavc	r6, {}	; <UNPREDICTABLE>
    3bb0:	01130100 	tsteq	r3, r0, lsl #2
    3bb4:	0000012e 	andeq	r0, r0, lr, lsr #2
    3bb8:	16649102 	strbtne	r9, [r4], -r2, lsl #2
    3bbc:	13010079 	movwne	r0, #4217	; 0x1079
    3bc0:	00012e01 	andeq	r2, r1, r1, lsl #28
    3bc4:	60910200 	addsvs	r0, r1, r0, lsl #4
    3bc8:	74657316 	strbtvc	r7, [r5], #-790	; 0xfffffcea
    3bcc:	01130100 	tsteq	r3, r0, lsl #2
    3bd0:	0000012e 	andeq	r0, r0, lr, lsr #2
    3bd4:	125c9102 	subsne	r9, ip, #-2147483648	; 0x80000000
    3bd8:	00001ac4 	andeq	r1, r0, r4, asr #21
    3bdc:	7e011401 	cdpvc	4, 0, cr1, cr1, cr1, {0}
    3be0:	02000001 	andeq	r0, r0, #1
    3be4:	63147791 	tstvs	r4, #38010880	; 0x2440000
    3be8:	01140100 	tsteq	r4, r0, lsl #2
    3bec:	0000017e 	andeq	r0, r0, lr, ror r1
    3bf0:	126f9102 	rsbne	r9, pc, #-2147483648	; 0x80000000
    3bf4:	00001d2b 	andeq	r1, r0, fp, lsr #26
    3bf8:	7e011401 	cdpvc	4, 0, cr1, cr1, cr1, {0}
    3bfc:	02000001 	andeq	r0, r0, #1
    3c00:	22127691 	andscs	r7, r2, #152043520	; 0x9100000
    3c04:	0100001b 	tsteq	r0, fp, lsl r0
    3c08:	012e0115 			; <UNDEFINED> instruction: 0x012e0115
    3c0c:	91020000 	mrsls	r0, (UNDEF: 2)
    3c10:	3a100070 	bcc	403dd8 <startup-0x1fbfc228>
    3c14:	0100001b 	tsteq	r0, fp, lsl r0
    3c18:	3e000107 	adfccs	f0, f0, f7
    3c1c:	004e2000 	subeq	r2, lr, r0
    3c20:	9c010000 	stcls	0, cr0, [r1], {-0}
    3c24:	000005e6 	andeq	r0, r0, r6, ror #11
    3c28:	001a0011 	andseq	r0, sl, r1, lsl r0
    3c2c:	01070100 	mrseq	r0, (UNDEF: 23)
    3c30:	0000012e 	andeq	r0, r0, lr, lsr #2
    3c34:	146c9102 	strbtne	r9, [ip], #-258	; 0xfffffefe
    3c38:	00776f72 	rsbseq	r6, r7, r2, ror pc
    3c3c:	2e010801 	cdpcs	8, 0, cr0, cr1, cr1, {0}
    3c40:	02000001 	andeq	r0, r0, #1
    3c44:	63147491 	tstvs	r4, #-1862270976	; 0x91000000
    3c48:	01006c6f 	tsteq	r0, pc, ror #24
    3c4c:	012e0108 			; <UNDEFINED> instruction: 0x012e0108
    3c50:	91020000 	mrsls	r0, (UNDEF: 2)
    3c54:	a4180070 	ldrge	r0, [r8], #-112	; 0xffffff90
    3c58:	01000019 	tsteq	r0, r9, lsl r0
    3c5c:	003c80de 	ldrsbteq	r8, [ip], -lr
    3c60:	00018020 	andeq	r8, r1, r0, lsr #32
    3c64:	4c9c0100 	ldfmis	f0, [ip], {0}
    3c68:	19000006 	stmdbne	r0, {r1, r2}
    3c6c:	de010078 	mcrle	0, 0, r0, cr1, cr8, {3}
    3c70:	0000012e 	andeq	r0, r0, lr, lsr #2
    3c74:	196c9102 	stmdbne	ip!, {r1, r8, ip, pc}^
    3c78:	de010079 	mcrle	0, 0, r0, cr1, cr9, {3}
    3c7c:	0000012e 	andeq	r0, r0, lr, lsr #2
    3c80:	19689102 	stmdbne	r8!, {r1, r8, ip, pc}^
    3c84:	00746573 	rsbseq	r6, r4, r3, ror r5
    3c88:	012ede01 			; <UNDEFINED> instruction: 0x012ede01
    3c8c:	91020000 	mrsls	r0, (UNDEF: 2)
    3c90:	1a7b1a64 	bne	1eca628 <startup-0x1e1359d8>
    3c94:	de010000 	cdple	0, 0, cr0, cr1, cr0, {0}
    3c98:	0000012e 	andeq	r0, r0, lr, lsr #2
    3c9c:	1b609102 	blne	18280ac <startup-0x1e7d7f54>
    3ca0:	00001ac4 	andeq	r1, r0, r4, asr #21
    3ca4:	017edf01 	cmneq	lr, r1, lsl #30
    3ca8:	91020000 	mrsls	r0, (UNDEF: 2)
    3cac:	1b221b77 	blne	88aa90 <startup-0x1f775570>
    3cb0:	e0010000 	and	r0, r1, r0
    3cb4:	0000012e 	andeq	r0, r0, lr, lsr #2
    3cb8:	00709102 	rsbseq	r9, r0, r2, lsl #2
    3cbc:	001b811c 	andseq	r8, fp, ip, lsl r1
    3cc0:	1ad10100 	bne	ff4440c8 <firstTime.4108+0xdf42eb70>
    3cc4:	6620003c 			; <UNDEFINED> instruction: 0x6620003c
    3cc8:	01000000 	mrseq	r0, (UNDEF: 0)
    3ccc:	0006889c 	muleq	r6, ip, r8
    3cd0:	194c1b00 	stmdbne	ip, {r8, r9, fp, ip}^
    3cd4:	d2010000 	andle	r0, r1, #0
    3cd8:	0000017e 	andeq	r0, r0, lr, ror r1
    3cdc:	17779102 	ldrbne	r9, [r7, -r2, lsl #2]!
    3ce0:	20003c28 	andcs	r3, r0, r8, lsr #24
    3ce4:	0000003e 	andeq	r0, r0, lr, lsr r0
    3ce8:	6464611d 	strbtvs	r6, [r4], #-285	; 0xfffffee3
    3cec:	7ed60100 	cdpvc	1, 13, cr0, cr6, cr0, {0}
    3cf0:	02000001 	andeq	r0, r0, #1
    3cf4:	00007691 	muleq	r0, r1, r6
    3cf8:	001b6e1e 	andseq	r6, fp, lr, lsl lr
    3cfc:	acbd0100 	ldfges	f0, [sp]
    3d00:	6e20003b 	mcrvs	0, 1, r0, cr0, cr11, {1}
    3d04:	01000000 	mrseq	r0, (UNDEF: 0)
    3d08:	1ad61c9c 	bne	ff58af80 <firstTime.4108+0xdf575a28>
    3d0c:	b5010000 	strlt	r0, [r1, #-0]
    3d10:	20003b66 	andcs	r3, r0, r6, ror #22
    3d14:	00000046 	andeq	r0, r0, r6, asr #32
    3d18:	06cb9c01 	strbeq	r9, [fp], r1, lsl #24
    3d1c:	8b1a0000 	blhi	683d24 <startup-0x1f97c2dc>
    3d20:	01000019 	tsteq	r0, r9, lsl r0
    3d24:	00017eb5 			; <UNDEFINED> instruction: 0x00017eb5
    3d28:	77910200 	ldrvc	r0, [r1, r0, lsl #4]
    3d2c:	001d2b1a 	andseq	r2, sp, sl, lsl fp
    3d30:	7eb50100 	frdvcs	f0, f5, f0
    3d34:	02000001 	andeq	r0, r0, #1
    3d38:	1c007691 	stcne	6, cr7, [r0], {145}	; 0x91
    3d3c:	0000197d 	andeq	r1, r0, sp, ror r9
    3d40:	3b20ae01 	blcc	82f54c <startup-0x1f7d0ab4>
    3d44:	00462000 	subeq	r2, r6, r0
    3d48:	9c010000 	stcls	0, cr0, [r1], {-0}
    3d4c:	000006fd 	strdeq	r0, [r0], -sp
    3d50:	00198b1a 	andseq	r8, r9, sl, lsl fp
    3d54:	7eae0100 	fdvvce	f0, f6, f0
    3d58:	02000001 	andeq	r0, r0, #1
    3d5c:	2b1a7791 	blcs	6a1ba8 <startup-0x1f95e458>
    3d60:	0100001d 	tsteq	r0, sp, lsl r0
    3d64:	00017eae 	andeq	r7, r1, lr, lsr #29
    3d68:	76910200 	ldrvc	r0, [r1], r0, lsl #4
    3d6c:	19f21c00 	ldmibne	r2!, {sl, fp, ip}^
    3d70:	99010000 	stmdbls	r1, {}	; <UNPREDICTABLE>
    3d74:	20003aa2 	andcs	r3, r0, r2, lsr #21
    3d78:	0000007e 	andeq	r0, r0, lr, ror r0
    3d7c:	072f9c01 	streq	r9, [pc, -r1, lsl #24]!
    3d80:	831a0000 	tsthi	sl, #0
    3d84:	01000004 	tsteq	r0, r4
    3d88:	00017e99 	muleq	r1, r9, lr
    3d8c:	77910200 	ldrvc	r0, [r1, r0, lsl #4]
    3d90:	001d2b1a 	andseq	r2, sp, sl, lsl fp
    3d94:	7e990100 	fmlvce	f0, f1, f0
    3d98:	02000001 	andeq	r0, r0, #1
    3d9c:	1f007691 	svcne	0x00007691
    3da0:	00001a5d 	andeq	r1, r0, sp, asr sl
    3da4:	012e9401 			; <UNDEFINED> instruction: 0x012e9401
    3da8:	3a780000 	bcc	1e03db0 <startup-0x1e1fc250>
    3dac:	002a2000 	eoreq	r2, sl, r0
    3db0:	9c010000 	stcls	0, cr0, [r1], {-0}
    3db4:	00000757 	andeq	r0, r0, r7, asr r7
    3db8:	001d2b1a 	andseq	r2, sp, sl, lsl fp
    3dbc:	7e940100 	fmlvcs	f0, f4, f0
    3dc0:	02000001 	andeq	r0, r0, #1
    3dc4:	20007791 	mulcs	r0, r1, r7
    3dc8:	00001951 	andeq	r1, r0, r1, asr r9
    3dcc:	017e7b01 	cmneq	lr, r1, lsl #22
    3dd0:	39e40000 	stmibcc	r4!, {}^	; <UNPREDICTABLE>
    3dd4:	00942000 	addseq	r2, r4, r0
    3dd8:	9c010000 	stcls	0, cr0, [r1], {-0}
    3ddc:	0000078c 	andeq	r0, r0, ip, lsl #15
    3de0:	001d2b1a 	andseq	r2, sp, sl, lsl fp
    3de4:	7e7b0100 	rpwvce	f0, f3, f0
    3de8:	02000001 	andeq	r0, r0, #1
    3dec:	721d6f91 	andsvc	r6, sp, #580	; 0x244
    3df0:	84010076 	strhi	r0, [r1], #-118	; 0xffffff8a
    3df4:	0000005b 	andeq	r0, r0, fp, asr r0
    3df8:	00779102 	rsbseq	r9, r7, r2, lsl #2
    3dfc:	001b461c 	andseq	r4, fp, ip, lsl r6
    3e00:	76650100 	strbtvc	r0, [r5], -r0, lsl #2
    3e04:	6e200039 	mcrvs	0, 1, r0, cr0, cr9, {1}
    3e08:	01000000 	mrseq	r0, (UNDEF: 0)
    3e0c:	0007ae9c 	muleq	r7, ip, lr
    3e10:	00631d00 	rsbeq	r1, r3, r0, lsl #26
    3e14:	017e6601 	cmneq	lr, r1, lsl #12
    3e18:	91020000 	mrsls	r0, (UNDEF: 2)
    3e1c:	281c0077 	ldmdacs	ip, {r0, r1, r2, r4, r5, r6}
    3e20:	0100001b 	tsteq	r0, fp, lsl r0
    3e24:	00391050 	eorseq	r1, r9, r0, asr r0
    3e28:	00006620 	andeq	r6, r0, r0, lsr #12
    3e2c:	d29c0100 	addsle	r0, ip, #0, 2
    3e30:	1a000007 	bne	3e54 <startup-0x1fffc1ac>
    3e34:	00001d2b 	andeq	r1, r0, fp, lsr #26
    3e38:	017e5001 	cmneq	lr, r1
    3e3c:	91020000 	mrsls	r0, (UNDEF: 2)
    3e40:	15210077 	strne	r0, [r1, #-119]!	; 0xffffff89
    3e44:	0100001a 	tsteq	r0, sl, lsl r0
    3e48:	0038b849 	eorseq	fp, r8, r9, asr #16
    3e4c:	00005820 	andeq	r5, r0, r0, lsr #16
    3e50:	009c0100 	addseq	r0, ip, r0, lsl #2
    3e54:	19000008 	stmdbne	r0, {r3}
    3e58:	49010078 	stmdbmi	r1, {r3, r4, r5, r6}
    3e5c:	0000017e 	andeq	r0, r0, lr, ror r1
    3e60:	1d6f9102 	stfnep	f1, [pc, #-8]!	; 3e60 <startup-0x1fffc1a0>
    3e64:	4a010063 	bmi	43ff8 <startup-0x1ffbc008>
    3e68:	0000017e 	andeq	r0, r0, lr, ror r1
    3e6c:	00779102 	rsbseq	r9, r7, r2, lsl #2
    3e70:	001a9521 	andseq	r9, sl, r1, lsr #10
    3e74:	68410100 	stmdavs	r1, {r8}^
    3e78:	50200038 	eorpl	r0, r0, r8, lsr r0
    3e7c:	01000000 	mrseq	r0, (UNDEF: 0)
    3e80:	00082e9c 	muleq	r8, ip, lr
    3e84:	00781900 	rsbseq	r1, r8, r0, lsl #18
    3e88:	017e4101 	cmneq	lr, r1, lsl #2
    3e8c:	91020000 	mrsls	r0, (UNDEF: 2)
    3e90:	00631d6f 	rsbeq	r1, r3, pc, ror #26
    3e94:	017e4201 	cmneq	lr, r1, lsl #4
    3e98:	91020000 	mrsls	r0, (UNDEF: 2)
    3e9c:	fd1e0077 	ldc2	0, cr0, [lr, #-476]	; 0xfffffe24
    3ea0:	0100001a 	tsteq	r0, sl, lsl r0
    3ea4:	0038383a 	eorseq	r3, r8, sl, lsr r8
    3ea8:	00003020 	andeq	r3, r0, r0, lsr #32
    3eac:	1e9c0100 	fmlnee	f0, f4, f0
    3eb0:	00001993 	muleq	r0, r3, r9
    3eb4:	38203701 	stmdacc	r0!, {r0, r8, r9, sl, ip, sp}
    3eb8:	00182000 	andseq	r2, r8, r0
    3ebc:	9c010000 	stcls	0, cr0, [r1], {-0}
    3ec0:	001b5918 	andseq	r5, fp, r8, lsl r9
    3ec4:	ee320100 	rsfs	f0, f2, f0
    3ec8:	32200037 	eorcc	r0, r0, #55	; 0x37
    3ecc:	01000000 	mrseq	r0, (UNDEF: 0)
    3ed0:	0008809c 	muleq	r8, ip, r0
    3ed4:	195e1a00 	ldmdbne	lr, {r9, fp, ip}^
    3ed8:	32010000 	andcc	r0, r1, #0
    3edc:	00000522 	andeq	r0, r0, r2, lsr #10
    3ee0:	1d6c9102 	stfnep	f1, [ip, #-8]!
    3ee4:	33010069 	movwcc	r0, #4201	; 0x1069
    3ee8:	0000012e 	andeq	r0, r0, lr, lsr #2
    3eec:	00749102 	rsbseq	r9, r4, r2, lsl #2
    3ef0:	0019c31c 	andseq	ip, r9, ip, lsl r3
    3ef4:	c8210100 	stmdagt	r1!, {r8}
    3ef8:	26200037 			; <UNDEFINED> instruction: 0x26200037
    3efc:	01000000 	mrseq	r0, (UNDEF: 0)
    3f00:	0008a39c 	muleq	r8, ip, r3
    3f04:	736d1900 	cmnvc	sp, #0, 18
    3f08:	4e210100 	sufmis	f0, f1, f0
    3f0c:	02000000 	andeq	r0, r0, #0
    3f10:	1c007491 	cfstrsne	mvf7, [r0], {145}	; 0x91
    3f14:	00001a6f 	andeq	r1, r0, pc, ror #20
    3f18:	379c1801 	ldrcc	r1, [ip, r1, lsl #16]
    3f1c:	002c2000 	eoreq	r2, ip, r0
    3f20:	9c010000 	stcls	0, cr0, [r1], {-0}
    3f24:	000008c6 	andeq	r0, r0, r6, asr #17
    3f28:	00737519 	rsbseq	r7, r3, r9, lsl r5
    3f2c:	004e1801 	subeq	r1, lr, r1, lsl #16
    3f30:	91020000 	mrsls	r0, (UNDEF: 2)
    3f34:	e6220074 			; <UNDEFINED> instruction: 0xe6220074
    3f38:	01000019 	tsteq	r0, r9, lsl r0
    3f3c:	0037580e 	eorseq	r5, r7, lr, lsl #16
    3f40:	00004420 	andeq	r4, r0, r0, lsr #8
    3f44:	229c0100 	addscs	r0, ip, #0, 2
    3f48:	00001aaa 	andeq	r1, r0, sl, lsr #21
    3f4c:	37140401 	ldrcc	r0, [r4, -r1, lsl #8]
    3f50:	00442000 	subeq	r2, r4, r0
    3f54:	9c010000 	stcls	0, cr0, [r1], {-0}
    3f58:	00010000 	andeq	r0, r1, r0
    3f5c:	d8000400 	stmdale	r0, {sl}
    3f60:	0400000c 	streq	r0, [r0], #-12
    3f64:	0000af01 	andeq	sl, r0, r1, lsl #30
    3f68:	1ba10c00 	blne	fe846f70 <firstTime.4108+0xde831a18>
    3f6c:	45a40000 	strmi	r0, [r4, #0]!
    3f70:	00282000 	eoreq	r2, r8, r0
    3f74:	15080000 	strne	r0, [r8, #-0]
    3f78:	0c020000 	stceq	0, cr0, [r2], {-0}
    3f7c:	004e0502 	subeq	r0, lr, r2, lsl #10
    3f80:	91030000 	mrsls	r0, (UNDEF: 3)
    3f84:	02000003 	andeq	r0, r0, #3
    3f88:	00004e07 	andeq	r4, r0, r7, lsl #28
    3f8c:	74030000 	strvc	r0, [r3], #-0
    3f90:	02000007 	andeq	r0, r0, #7
    3f94:	00004e08 	andeq	r4, r0, r8, lsl #28
    3f98:	6a030400 	bvs	c4fa0 <startup-0x1ff3b060>
    3f9c:	0200001a 	andeq	r0, r0, #26
    3fa0:	00005509 	andeq	r5, r0, r9, lsl #10
    3fa4:	04000800 	streq	r0, [r0], #-2048	; 0xfffff800
    3fa8:	03bf0704 			; <UNDEFINED> instruction: 0x03bf0704
    3fac:	04050000 	streq	r0, [r5], #-0
    3fb0:	0000005b 	andeq	r0, r0, fp, asr r0
    3fb4:	17080104 	strne	r0, [r8, -r4, lsl #2]
    3fb8:	06000005 	streq	r0, [r0], -r5
    3fbc:	00001bd4 	ldrdeq	r1, [r0], -r4
    3fc0:	00210a02 	eoreq	r0, r1, r2, lsl #20
    3fc4:	34070000 	strcc	r0, [r7], #-0
    3fc8:	0c000000 	stceq	0, cr0, [r0], {-0}
    3fcc:	009e0603 	addseq	r0, lr, r3, lsl #12
    3fd0:	0d030000 	stceq	0, cr0, [r3, #-0]
    3fd4:	03000006 	movweq	r0, #6
    3fd8:	00009e07 	andeq	r9, r0, r7, lsl #28
    3fdc:	3b030000 	blcc	c3fe4 <startup-0x1ff3c01c>
    3fe0:	03000000 	movweq	r0, #0
    3fe4:	00009e08 	andeq	r9, r0, r8, lsl #28
    3fe8:	30030400 	andcc	r0, r3, r0, lsl #8
    3fec:	03000000 	movweq	r0, #0
    3ff0:	00009e09 	andeq	r9, r0, r9, lsl #28
    3ff4:	05000800 	streq	r0, [r0, #-2048]	; 0xfffff800
    3ff8:	00006204 	andeq	r6, r0, r4, lsl #4
    3ffc:	15580600 	ldrbne	r0, [r8, #-1536]	; 0xfffffa00
    4000:	0a030000 	beq	c4008 <startup-0x1ff3bff8>
    4004:	0000006d 	andeq	r0, r0, sp, rrx
    4008:	001b9608 	andseq	r9, fp, r8, lsl #12
    400c:	a4030100 	strge	r0, [r3], #-256	; 0xffffff00
    4010:	28200045 	stmdacs	r0!, {r0, r2, r6}
    4014:	01000000 	mrseq	r0, (UNDEF: 0)
    4018:	0000fd9c 	muleq	r0, ip, sp
    401c:	1b9b0900 	blne	fe6c6424 <firstTime.4108+0xde6b0ecc>
    4020:	03010000 	movweq	r0, #4096	; 0x1000
    4024:	000000fd 	strdeq	r0, [r0], -sp
    4028:	09749102 	ldmdbeq	r4!, {r1, r8, ip, pc}^
    402c:	0000060d 	andeq	r0, r0, sp, lsl #12
    4030:	009e0301 	addseq	r0, lr, r1, lsl #6
    4034:	91020000 	mrsls	r0, (UNDEF: 2)
    4038:	003b0970 	eorseq	r0, fp, r0, ror r9
    403c:	03010000 	movweq	r0, #4096	; 0x1000
    4040:	0000009e 	muleq	r0, lr, r0
    4044:	096c9102 	stmdbeq	ip!, {r1, r8, ip, pc}^
    4048:	00000030 	andeq	r0, r0, r0, lsr r0
    404c:	009e0301 	addseq	r0, lr, r1, lsl #6
    4050:	91020000 	mrsls	r0, (UNDEF: 2)
    4054:	04050068 	streq	r0, [r5], #-104	; 0xffffff98
    4058:	000000a4 	andeq	r0, r0, r4, lsr #1
    405c:	0000c300 	andeq	ip, r0, r0, lsl #6
    4060:	5f000400 	svcpl	0x00000400
    4064:	0400000d 	streq	r0, [r0], #-13
    4068:	0000af01 	andeq	sl, r0, r1, lsl #30
    406c:	1bdb0c00 	blne	ff6c7074 <firstTime.4108+0xdf6b1b1c>
    4070:	45cc0000 	strbmi	r0, [ip]
    4074:	00282000 	eoreq	r2, r8, r0
    4078:	157e0000 	ldrbne	r0, [lr, #-0]!
    407c:	0c020000 	stceq	0, cr0, [r2], {-0}
    4080:	004e0502 	subeq	r0, lr, r2, lsl #10
    4084:	91030000 	mrsls	r0, (UNDEF: 3)
    4088:	02000003 	andeq	r0, r0, #3
    408c:	00004e07 	andeq	r4, r0, r7, lsl #28
    4090:	74030000 	strvc	r0, [r3], #-0
    4094:	02000007 	andeq	r0, r0, #7
    4098:	00004e08 	andeq	r4, r0, r8, lsl #28
    409c:	6a030400 	bvs	c50a4 <startup-0x1ff3af5c>
    40a0:	0200001a 	andeq	r0, r0, #26
    40a4:	00005509 	andeq	r5, r0, r9, lsl #10
    40a8:	04000800 	streq	r0, [r0], #-2048	; 0xfffff800
    40ac:	03bf0704 			; <UNDEFINED> instruction: 0x03bf0704
    40b0:	04050000 	streq	r0, [r5], #-0
    40b4:	0000005b 	andeq	r0, r0, fp, asr r0
    40b8:	17080104 	strne	r0, [r8, -r4, lsl #2]
    40bc:	06000005 	streq	r0, [r0], -r5
    40c0:	00001bd4 	ldrdeq	r1, [r0], -r4
    40c4:	00210a02 	eoreq	r0, r1, r2, lsl #20
    40c8:	cf070000 	svcgt	0x00070000
    40cc:	0100001b 	tsteq	r0, fp, lsl r0
    40d0:	0045cc03 	subeq	ip, r5, r3, lsl #24
    40d4:	00002820 	andeq	r2, r0, r0, lsr #16
    40d8:	b99c0100 	ldmiblt	ip, {r8}
    40dc:	08000000 	stmdaeq	r0, {}	; <UNPREDICTABLE>
    40e0:	03010073 	movweq	r0, #4211	; 0x1073
    40e4:	000000b9 	strheq	r0, [r0], -r9
    40e8:	09749102 	ldmdbeq	r4!, {r1, r8, ip, pc}^
    40ec:	00001a6a 	andeq	r1, r0, sl, ror #20
    40f0:	00550301 	subseq	r0, r5, r1, lsl #6
    40f4:	91020000 	mrsls	r0, (UNDEF: 2)
    40f8:	03910970 	orrseq	r0, r1, #112, 18	; 0x1c0000
    40fc:	03010000 	movweq	r0, #4096	; 0x1000
    4100:	000000bf 	strheq	r0, [r0], -pc	; <UNPREDICTABLE>
    4104:	096c9102 	stmdbeq	ip!, {r1, r8, ip, pc}^
    4108:	00000774 	andeq	r0, r0, r4, ror r7
    410c:	00bf0301 	adcseq	r0, pc, r1, lsl #6
    4110:	91020000 	mrsls	r0, (UNDEF: 2)
    4114:	04050068 	streq	r0, [r5], #-104	; 0xffffff98
    4118:	00000062 	andeq	r0, r0, r2, rrx
    411c:	6905040a 	stmdbvs	r5, {r1, r3, sl}
    4120:	0000746e 	andeq	r7, r0, lr, ror #8
    4124:	00000135 	andeq	r0, r0, r5, lsr r1
    4128:	0df10004 	ldcleq	0, cr0, [r1, #16]!
    412c:	01040000 	mrseq	r0, (UNDEF: 4)
    4130:	000000af 	andeq	r0, r0, pc, lsr #1
    4134:	001c410c 	andseq	r4, ip, ip, lsl #2
    4138:	0045f400 	subeq	pc, r5, r0, lsl #8
    413c:	00006c20 	andeq	r6, r0, r0, lsr #24
    4140:	0015ea00 	andseq	lr, r5, r0, lsl #20
    4144:	02180200 	andseq	r0, r8, #0, 4
    4148:	0000ae13 	andeq	sl, r0, r3, lsl lr
    414c:	1c0a0300 	stcne	3, cr0, [sl], {-0}
    4150:	14020000 	strne	r0, [r2], #-0
    4154:	000000ae 	andeq	r0, r0, lr, lsr #1
    4158:	1c230300 	stcne	3, cr0, [r3], #-0
    415c:	15020000 	strne	r0, [r2, #-0]
    4160:	000000b5 	strheq	r0, [r0], -r5
    4164:	1c6e0304 	stclne	3, cr0, [lr], #-16
    4168:	16020000 	strne	r0, [r2], -r0
    416c:	000000b5 	strheq	r0, [r0], -r5
    4170:	1c900306 	ldcne	3, cr0, [r0], {6}
    4174:	17020000 	strne	r0, [r2, -r0]
    4178:	000000ae 	andeq	r0, r0, lr, lsr #1
    417c:	1c2f0308 	stcne	3, cr0, [pc], #-32	; 4164 <startup-0x1fffbe9c>
    4180:	18020000 	stmdane	r2, {}	; <UNPREDICTABLE>
    4184:	000000ae 	andeq	r0, r0, lr, lsr #1
    4188:	1ca0030c 	stcne	3, cr0, [r0], #48	; 0x30
    418c:	19020000 	stmdbne	r2, {}	; <UNPREDICTABLE>
    4190:	000000bc 	strheq	r0, [r0], -ip
    4194:	1c980310 	ldcne	3, cr0, [r8], {16}
    4198:	1a020000 	bne	841a0 <startup-0x1ff7be60>
    419c:	000000bc 	strheq	r0, [r0], -ip
    41a0:	1c350311 	ldcne	3, cr0, [r5], #-68	; 0xffffffbc
    41a4:	1b020000 	blne	841ac <startup-0x1ff7be54>
    41a8:	000000b5 	strheq	r0, [r0], -r5
    41ac:	1c890312 	stcne	3, cr0, [r9], {18}
    41b0:	1c020000 	stcne	0, cr0, [r2], {-0}
    41b4:	000000bc 	strheq	r0, [r0], -ip
    41b8:	1c1b0314 	ldcne	3, cr0, [fp], {20}
    41bc:	1d020000 	stcne	0, cr0, [r2, #-0]
    41c0:	000000bc 	strheq	r0, [r0], -ip
    41c4:	1ca70315 	stcne	3, cr0, [r7], #84	; 0x54
    41c8:	1e020000 	cdpne	0, 0, cr0, cr2, cr0, {0}
    41cc:	000000b5 	strheq	r0, [r0], -r5
    41d0:	04040016 	streq	r0, [r4], #-22	; 0xffffffea
    41d4:	0003bf07 	andeq	fp, r3, r7, lsl #30
    41d8:	07020400 	streq	r0, [r2, -r0, lsl #8]
    41dc:	000003b9 			; <UNDEFINED> instruction: 0x000003b9
    41e0:	17080104 	strne	r0, [r8, -r4, lsl #2]
    41e4:	05000005 	streq	r0, [r0, #-5]
    41e8:	00001c2a 	andeq	r1, r0, sl, lsr #24
    41ec:	00211f02 	eoreq	r1, r1, r2, lsl #30
    41f0:	79060000 	stmdbvc	r6, {}	; <UNPREDICTABLE>
    41f4:	0100001c 	tsteq	r0, ip, lsl r0
    41f8:	0001040e 	andeq	r0, r1, lr, lsl #8
    41fc:	00462c00 	subeq	r2, r6, r0, lsl #24
    4200:	00003420 	andeq	r3, r0, r0, lsr #8
    4204:	049c0100 	ldreq	r0, [ip], #256	; 0x100
    4208:	07000001 	streq	r0, [r0, -r1]
    420c:	00746962 	rsbseq	r6, r4, r2, ror #18
    4210:	01040e01 	tsteq	r4, r1, lsl #28
    4214:	91020000 	mrsls	r0, (UNDEF: 2)
    4218:	49440864 	stmdbmi	r4, {r2, r5, r6, fp}^
    421c:	0f01004c 	svceq	0x0001004c
    4220:	0000010b 	andeq	r0, r0, fp, lsl #2
    4224:	006f9102 	rsbeq	r9, pc, r2, lsl #2
    4228:	69050409 	stmdbvs	r5, {r0, r3, sl}
    422c:	0400746e 	streq	r7, [r0], #-1134	; 0xfffffb92
    4230:	05200801 	streq	r0, [r0, #-2049]!	; 0xfffff7ff
    4234:	b30a0000 	movwlt	r0, #40960	; 0xa000
    4238:	0100001c 	tsteq	r0, ip, lsl r0
    423c:	00010b08 	andeq	r0, r1, r8, lsl #22
    4240:	00460c00 	subeq	r0, r6, r0, lsl #24
    4244:	00002020 	andeq	r2, r0, r0, lsr #32
    4248:	0b9c0100 	bleq	fe704650 <firstTime.4108+0xde6ef0f8>
    424c:	00001c10 	andeq	r1, r0, r0, lsl ip
    4250:	45f40401 	ldrbmi	r0, [r4, #1025]!	; 0x401
    4254:	00182000 	andseq	r2, r8, r0
    4258:	9c010000 	stcls	0, cr0, [r1], {-0}
    425c:	0004ed00 	andeq	lr, r4, r0, lsl #26
    4260:	ae000400 	cfcpysge	mvf0, mvf0
    4264:	0400000e 	streq	r0, [r0], #-14
    4268:	0000af01 	andeq	sl, r0, r1, lsl #30
    426c:	1df80c00 	ldclne	12, cr0, [r8]
    4270:	46600000 	strbtmi	r0, [r0], -r0
    4274:	05202000 	streq	r2, [r0, #-0]!
    4278:	165a0000 	ldrbne	r0, [sl], -r0
    427c:	0c020000 	stceq	0, cr0, [r2], {-0}
    4280:	004e0502 	subeq	r0, lr, r2, lsl #10
    4284:	91030000 	mrsls	r0, (UNDEF: 3)
    4288:	02000003 	andeq	r0, r0, #3
    428c:	00004e07 	andeq	r4, r0, r7, lsl #28
    4290:	74030000 	strvc	r0, [r3], #-0
    4294:	02000007 	andeq	r0, r0, #7
    4298:	00004e08 	andeq	r4, r0, r8, lsl #28
    429c:	6a030400 	bvs	c52a4 <startup-0x1ff3ad5c>
    42a0:	0200001a 	andeq	r0, r0, #26
    42a4:	00005509 	andeq	r5, r0, r9, lsl #10
    42a8:	04000800 	streq	r0, [r0], #-2048	; 0xfffff800
    42ac:	03bf0704 			; <UNDEFINED> instruction: 0x03bf0704
    42b0:	04050000 	streq	r0, [r5], #-0
    42b4:	0000005b 	andeq	r0, r0, fp, asr r0
    42b8:	17080104 	strne	r0, [r8, -r4, lsl #2]
    42bc:	06000005 	streq	r0, [r0], -r5
    42c0:	00001bd4 	ldrdeq	r1, [r0], -r4
    42c4:	00210a02 	eoreq	r0, r1, r2, lsl #20
    42c8:	34070000 	strcc	r0, [r7], #-0
    42cc:	0c000000 	stceq	0, cr0, [r0], {-0}
    42d0:	009e0603 	addseq	r0, lr, r3, lsl #12
    42d4:	0d030000 	stceq	0, cr0, [r3, #-0]
    42d8:	03000006 	movweq	r0, #6
    42dc:	00009e07 	andeq	r9, r0, r7, lsl #28
    42e0:	3b030000 	blcc	c42e8 <startup-0x1ff3bd18>
    42e4:	03000000 	movweq	r0, #0
    42e8:	00009e08 	andeq	r9, r0, r8, lsl #28
    42ec:	30030400 	andcc	r0, r3, r0, lsl #8
    42f0:	03000000 	movweq	r0, #0
    42f4:	00009e09 	andeq	r9, r0, r9, lsl #28
    42f8:	05000800 	streq	r0, [r0, #-2048]	; 0xfffff800
    42fc:	00006204 	andeq	r6, r0, r4, lsl #4
    4300:	15580600 	ldrbne	r0, [r8, #-1536]	; 0xfffffa00
    4304:	0a030000 	beq	c430c <startup-0x1ff3bcf4>
    4308:	0000006d 	andeq	r0, r0, sp, rrx
    430c:	00073707 	andeq	r3, r7, r7, lsl #14
    4310:	06042400 	streq	r2, [r4], -r0, lsl #8
    4314:	00000128 	andeq	r0, r0, r8, lsr #2
    4318:	0004a503 	andeq	sl, r4, r3, lsl #10
    431c:	28070400 	stmdacs	r7, {sl}
    4320:	00000001 	andeq	r0, r0, r1
    4324:	00074303 	andeq	r4, r7, r3, lsl #6
    4328:	2e080400 	cfcpyscs	mvf0, mvf8
    432c:	04000001 	streq	r0, [r0], #-1
    4330:	00069603 	andeq	r9, r6, r3, lsl #12
    4334:	2e090400 	cfcpyscs	mvf0, mvf9
    4338:	08000001 	stmdaeq	r0, {r0}
    433c:	0006bf03 	andeq	fp, r6, r3, lsl #30
    4340:	460c0400 	strmi	r0, [ip], -r0, lsl #8
    4344:	0c000001 	stceq	0, cr0, [r0], {1}
    4348:	00037803 	andeq	r7, r3, r3, lsl #16
    434c:	460d0400 	strmi	r0, [sp], -r0, lsl #8
    4350:	10000001 	andne	r0, r0, r1
    4354:	0004b703 	andeq	fp, r4, r3, lsl #14
    4358:	2e100400 	cfmulscs	mvf0, mvf0, mvf0
    435c:	14000001 	strne	r0, [r0], #-1
    4360:	00008003 	andeq	r8, r0, r3
    4364:	2e110400 	cfmulscs	mvf0, mvf1, mvf0
    4368:	18000001 	stmdane	r0, {r0}
    436c:	00040f03 	andeq	r0, r4, r3, lsl #30
    4370:	2e120400 	cfmulscs	mvf0, mvf2, mvf0
    4374:	1c000001 	stcne	0, cr0, [r0], {1}
    4378:	00041f03 	andeq	r1, r4, r3, lsl #30
    437c:	2e130400 	cfmulscs	mvf0, mvf3, mvf0
    4380:	20000001 	andcs	r0, r0, r1
    4384:	a4040500 	strge	r0, [r4], #-1280	; 0xfffffb00
    4388:	08000000 	stmdaeq	r0, {}	; <UNPREDICTABLE>
    438c:	6e690504 	cdpvs	5, 6, cr0, cr9, cr4, {0}
    4390:	40090074 	andmi	r0, r9, r4, ror r0
    4394:	0a000001 	beq	43a0 <startup-0x1fffbc60>
    4398:	00000140 	andeq	r0, r0, r0, asr #2
    439c:	af040500 	svcge	0x00040500
    43a0:	05000000 	streq	r0, [r0, #-0]
    43a4:	00013504 	andeq	r3, r1, r4, lsl #10
    43a8:	07380600 	ldreq	r0, [r8, -r0, lsl #12]!
    43ac:	15040000 	strne	r0, [r4, #-0]
    43b0:	000000af 	andeq	r0, r0, pc, lsr #1
    43b4:	0001620b 	andeq	r6, r1, fp, lsl #4
    43b8:	00016200 	andeq	r6, r1, r0, lsl #4
    43bc:	05000c00 	streq	r0, [r0, #-3072]	; 0xfffff400
    43c0:	00014c04 	andeq	r4, r1, r4, lsl #24
    43c4:	059a0d00 	ldreq	r0, [sl, #3328]	; 0xd00
    43c8:	1c040000 	stcne	0, cr0, [r4], {-0}
    43cc:	00000157 	andeq	r0, r0, r7, asr r1
    43d0:	00045a0d 	andeq	r5, r4, sp, lsl #20
    43d4:	2e1d0400 	cfmulscs	mvf0, mvf13, mvf0
    43d8:	06000001 	streq	r0, [r0], -r1
    43dc:	000006fb 	strdeq	r0, [r0], -fp
    43e0:	005b2405 	subseq	r2, fp, r5, lsl #8
    43e4:	7e0b0000 	cdpvc	0, 0, cr0, cr11, cr0, {0}
    43e8:	9a000001 	bls	43f4 <startup-0x1fffbc0c>
    43ec:	0e000001 	cdpeq	0, 0, cr0, cr0, cr1, {0}
    43f0:	0000019a 	muleq	r0, sl, r1
    43f4:	040003ff 	streq	r0, [r0], #-1023	; 0xfffffc01
    43f8:	043c0704 	ldrteq	r0, [ip], #-1796	; 0xfffff8fc
    43fc:	990d0000 	stmdbls	sp, {}	; <UNPREDICTABLE>
    4400:	05000019 	streq	r0, [r0, #-25]	; 0xffffffe7
    4404:	0001892d 	andeq	r8, r1, sp, lsr #18
    4408:	027e0d00 	rsbseq	r0, lr, #0, 26
    440c:	2e050000 	cdpcs	0, 0, cr0, cr5, cr0, {0}
    4410:	00000189 	andeq	r0, r0, r9, lsl #3
    4414:	0005250d 	andeq	r2, r5, sp, lsl #10
    4418:	892f0500 	stmdbhi	pc!, {r8, sl}	; <UNPREDICTABLE>
    441c:	0d000001 	stceq	0, cr0, [r0, #-4]
    4420:	000003a1 	andeq	r0, r0, r1, lsr #7
    4424:	01893005 	orreq	r3, r9, r5
    4428:	060d0000 	streq	r0, [sp], -r0
    442c:	05000003 	streq	r0, [r0, #-3]
    4430:	00018931 	andeq	r8, r1, r1, lsr r9
    4434:	07190d00 	ldreq	r0, [r9, -r0, lsl #26]
    4438:	32050000 	andcc	r0, r5, #0
    443c:	00000189 	andeq	r0, r0, r9, lsl #3
    4440:	0007090d 	andeq	r0, r7, sp, lsl #18
    4444:	89330500 	ldmdbhi	r3!, {r8, sl}
    4448:	0f000001 	svceq	0x00000001
    444c:	00001d7e 	andeq	r1, r0, lr, ror sp
    4450:	4afce401 	bmi	fff3d45c <firstTime.4108+0xdff27f04>
    4454:	00842000 	addeq	r2, r4, r0
    4458:	9c010000 	stcls	0, cr0, [r1], {-0}
    445c:	0000022c 	andeq	r0, r0, ip, lsr #4
    4460:	01007310 	tsteq	r0, r0, lsl r3
    4464:	00022ce5 	andeq	r2, r2, r5, ror #25
    4468:	6c910200 	lfmvs	f0, 4, [r1], {0}
    446c:	001d5911 	andseq	r5, sp, r1, lsl r9
    4470:	39e60100 	stmibcc	r6!, {r8}^
    4474:	02000002 	andeq	r0, r0, #2
    4478:	5f115c91 	svcpl	0x00115c91
    447c:	0100001d 	tsteq	r0, sp, lsl r0
    4480:	000249e7 	andeq	r4, r2, r7, ror #19
    4484:	48910200 	ldmmi	r1, {r9}
    4488:	32040500 	andcc	r0, r4, #0, 10
    448c:	04000002 	streq	r0, [r0], #-2
    4490:	05200801 	streq	r0, [r0, #-2049]!	; 0xfffff7ff
    4494:	320b0000 	andcc	r0, fp, #0
    4498:	49000002 	stmdbmi	r0, {r1}
    449c:	12000002 	andne	r0, r0, #2
    44a0:	0000019a 	muleq	r0, sl, r1
    44a4:	320b000c 	andcc	r0, fp, #12
    44a8:	59000002 	stmdbpl	r0, {r1}
    44ac:	12000002 	andne	r0, r0, #2
    44b0:	0000019a 	muleq	r0, sl, r1
    44b4:	0f0f0013 	svceq	0x000f0013
    44b8:	0100001d 	tsteq	r0, sp, lsl r0
    44bc:	004a6ecc 	subeq	r6, sl, ip, asr #29
    44c0:	00008e20 	andeq	r8, r0, r0, lsr #28
    44c4:	b39c0100 	orrslt	r0, ip, #0, 2
    44c8:	13000002 	movwne	r0, #2
    44cc:	00001e47 	andeq	r1, r0, r7, asr #28
    44d0:	022ccc01 	eoreq	ip, ip, #256	; 0x100
    44d4:	91020000 	mrsls	r0, (UNDEF: 2)
    44d8:	02bc136c 	adcseq	r1, ip, #108, 6	; 0xb0000001
    44dc:	cc010000 	stcgt	0, cr0, [r1], {-0}
    44e0:	0000022c 	andeq	r0, r0, ip, lsr #4
    44e4:	13689102 	cmnne	r8, #-2147483648	; 0x80000000
    44e8:	00001df1 	strdeq	r1, [r0], -r1	; <UNPREDICTABLE>
    44ec:	012ecc01 			; <UNDEFINED> instruction: 0x012ecc01
    44f0:	91020000 	mrsls	r0, (UNDEF: 2)
    44f4:	1ccd1364 	stclne	3, cr1, [sp], {100}	; 0x64
    44f8:	cc010000 	stcgt	0, cr0, [r1], {-0}
    44fc:	0000012e 	andeq	r0, r0, lr, lsr #2
    4500:	10609102 	rsbne	r9, r0, r2, lsl #2
    4504:	d0010069 	andle	r0, r1, r9, rrx
    4508:	0000012e 	andeq	r0, r0, lr, lsr #2
    450c:	00749102 	rsbseq	r9, r4, r2, lsl #2
    4510:	001db00f 	andseq	fp, sp, pc
    4514:	10bd0100 	adcsne	r0, sp, r0, lsl #2
    4518:	5e20004a 	cdppl	0, 2, cr0, cr0, cr10, {2}
    451c:	01000000 	mrseq	r0, (UNDEF: 0)
    4520:	0002e59c 	muleq	r2, ip, r5
    4524:	1e471300 	cdpne	3, 4, cr1, cr7, cr0, {0}
    4528:	bd010000 	stclt	0, cr0, [r1, #-0]
    452c:	0000022c 	andeq	r0, r0, ip, lsr #4
    4530:	13749102 	cmnne	r4, #-2147483648	; 0x80000000
    4534:	000002bc 			; <UNDEFINED> instruction: 0x000002bc
    4538:	022cbd01 	eoreq	fp, ip, #1, 26	; 0x40
    453c:	91020000 	mrsls	r0, (UNDEF: 2)
    4540:	030f0070 	movweq	r0, #61552	; 0xf070
    4544:	0100001d 	tsteq	r0, sp, lsl r0
    4548:	0049a6ad 	subeq	sl, r9, sp, lsr #13
    454c:	00006a20 	andeq	r6, r0, r0, lsr #20
    4550:	159c0100 	ldrne	r0, [ip, #256]	; 0x100
    4554:	10000003 	andne	r0, r0, r3
    4558:	ae010073 	mcrge	0, 0, r0, cr1, cr3, {3}
    455c:	0000022c 	andeq	r0, r0, ip, lsr #4
    4560:	116c9102 	cmnne	ip, r2, lsl #2
    4564:	00001a26 	andeq	r1, r0, r6, lsr #20
    4568:	0315af01 	tsteq	r5, #1, 30
    456c:	91020000 	mrsls	r0, (UNDEF: 2)
    4570:	320b0054 	andcc	r0, fp, #84	; 0x54
    4574:	25000002 	strcs	r0, [r0, #-2]
    4578:	12000003 	andne	r0, r0, #3
    457c:	0000019a 	muleq	r0, sl, r1
    4580:	e4140014 	ldr	r0, [r4], #-20	; 0xffffffec
    4584:	0100001c 	tsteq	r0, ip, lsl r0
    4588:	004994a8 	subeq	r9, r9, r8, lsr #9
    458c:	00001220 	andeq	r1, r0, r0, lsr #4
    4590:	159c0100 	ldrne	r0, [ip, #256]	; 0x100
    4594:	00001cbc 			; <UNDEFINED> instruction: 0x00001cbc
    4598:	497a9f01 	ldmdbmi	sl!, {r0, r8, r9, sl, fp, ip, pc}^
    459c:	001a2000 	andseq	r2, sl, r0
    45a0:	9c010000 	stcls	0, cr0, [r1], {-0}
    45a4:	001cf114 	andseq	pc, ip, r4, lsl r1	; <UNPREDICTABLE>
    45a8:	e0830100 	add	r0, r3, r0, lsl #2
    45ac:	9a200048 	bls	8046d4 <startup-0x1f7fb92c>
    45b0:	01000000 	mrseq	r0, (UNDEF: 0)
    45b4:	1dbc0f9c 	ldcne	15, cr0, [ip, #624]!	; 0x270
    45b8:	7b010000 	blvc	445c0 <startup-0x1ffbba40>
    45bc:	20004890 	mulcs	r0, r0, r8
    45c0:	00000050 	andeq	r0, r0, r0, asr r0
    45c4:	03989c01 	orrseq	r9, r8, #256	; 0x100
    45c8:	72160000 	andsvc	r0, r6, #0
    45cc:	0100776f 	tsteq	r0, pc, ror #14
    45d0:	00005b7b 	andeq	r5, r0, fp, ror fp
    45d4:	6f910200 	svcvs	0x00910200
    45d8:	001cfc13 	andseq	pc, ip, r3, lsl ip	; <UNPREDICTABLE>
    45dc:	5b7b0100 	blpl	1ec49e4 <startup-0x1e13b61c>
    45e0:	02000000 	andeq	r0, r0, #0
    45e4:	65116e91 	ldrvs	r6, [r1, #-3729]	; 0xfffff16f
    45e8:	0100001d 	tsteq	r0, sp, lsl r0
    45ec:	00005b7c 	andeq	r5, r0, ip, ror fp
    45f0:	77910200 	ldrvc	r0, [r1, r0, lsl #4]
    45f4:	1de00f00 	stclne	15, cr0, [r0]
    45f8:	74010000 	strvc	r0, [r1], #-0
    45fc:	20004854 	andcs	r4, r0, r4, asr r8
    4600:	0000003c 	andeq	r0, r0, ip, lsr r0
    4604:	03ba9c01 			; <UNDEFINED> instruction: 0x03ba9c01
    4608:	63160000 	tstvs	r6, #0
    460c:	5b740100 	blpl	1d04a14 <startup-0x1e2fb5ec>
    4610:	02000000 	andeq	r0, r0, #0
    4614:	17007791 			; <UNDEFINED> instruction: 0x17007791
    4618:	00001d20 	andeq	r1, r0, r0, lsr #26
    461c:	005b6a01 	subseq	r6, fp, r1, lsl #20
    4620:	48200000 	stmdami	r0!, {}	; <UNPREDICTABLE>
    4624:	00342000 	eorseq	r2, r4, r0
    4628:	9c010000 	stcls	0, cr0, [r1], {-0}
    462c:	000003e0 	andeq	r0, r0, r0, ror #7
    4630:	01006310 	tsteq	r0, r0, lsl r3
    4634:	00005b6b 	andeq	r5, r0, fp, ror #22
    4638:	77910200 	ldrvc	r0, [r1, r0, lsl #4]
    463c:	1dc90f00 	stclne	15, cr0, [r9]
    4640:	63010000 	movwvs	r0, #4096	; 0x1000
    4644:	200047f0 	strdcs	r4, [r0], -r0
    4648:	00000030 	andeq	r0, r0, r0, lsr r0
    464c:	04029c01 	streq	r9, [r2], #-3073	; 0xfffff3ff
    4650:	63160000 	tstvs	r6, #0
    4654:	5b630100 	blpl	18c4a5c <startup-0x1e73b5a4>
    4658:	02000000 	andeq	r0, r0, #0
    465c:	17007791 			; <UNDEFINED> instruction: 0x17007791
    4660:	00001cd4 	ldrdeq	r1, [r0], -r4
    4664:	005b5701 	subseq	r5, fp, r1, lsl #14
    4668:	479c0000 	ldrmi	r0, [ip, r0]
    466c:	00542000 	subseq	r2, r4, r0
    4670:	9c010000 	stcls	0, cr0, [r1], {-0}
    4674:	00000429 	andeq	r0, r0, r9, lsr #8
    4678:	00767210 	rsbseq	r7, r6, r0, lsl r2
    467c:	005b5c01 	subseq	r5, fp, r1, lsl #24
    4680:	91020000 	mrsls	r0, (UNDEF: 2)
    4684:	8917006f 	ldmdbhi	r7, {r0, r1, r2, r3, r5, r6}
    4688:	0100001d 	tsteq	r0, sp, lsl r0
    468c:	00005b4b 	andeq	r5, r0, fp, asr #22
    4690:	00474800 	subeq	r4, r7, r0, lsl #16
    4694:	00005420 	andeq	r5, r0, r0, lsr #8
    4698:	509c0100 	addspl	r0, ip, r0, lsl #2
    469c:	10000004 	andne	r0, r0, r4
    46a0:	01007672 	tsteq	r0, r2, ror r6
    46a4:	00005b50 	andeq	r5, r0, r0, asr fp
    46a8:	6f910200 	svcvs	0x00910200
    46ac:	1d6d0f00 	stclne	15, cr0, [sp, #-0]
    46b0:	45010000 	strmi	r0, [r1, #-0]
    46b4:	2000471e 	andcs	r4, r0, lr, lsl r7
    46b8:	0000002a 	andeq	r0, r0, sl, lsr #32
    46bc:	04749c01 	ldrbteq	r9, [r4], #-3073	; 0xfffff3ff
    46c0:	6a130000 	bvs	4c46c8 <startup-0x1fb3b938>
    46c4:	0100001a 	tsteq	r0, sl, lsl r0
    46c8:	00005b45 	andeq	r5, r0, r5, asr #22
    46cc:	77910200 	ldrvc	r0, [r1, r0, lsl #4]
    46d0:	1d490f00 	stclne	15, cr0, [r9, #-0]
    46d4:	3f010000 	svccc	0x00010000
    46d8:	200046f4 	strdcs	r4, [r0], -r4	; <UNPREDICTABLE>
    46dc:	0000002a 	andeq	r0, r0, sl, lsr #32
    46e0:	04989c01 	ldreq	r9, [r8], #3073	; 0xc01
    46e4:	8b130000 	blhi	4c46ec <startup-0x1fb3b914>
    46e8:	01000019 	tsteq	r0, r9, lsl r0
    46ec:	00005b3f 	andeq	r5, r0, pc, lsr fp
    46f0:	77910200 	ldrvc	r0, [r1, r0, lsl #4]
    46f4:	1d9b1800 	ldcne	8, cr1, [fp]
    46f8:	37010000 	strcc	r0, [r1, -r0]
    46fc:	200046a4 	andcs	r4, r0, r4, lsr #13
    4700:	00000050 	andeq	r0, r0, r0, asr r0
    4704:	04c69c01 	strbeq	r9, [r6], #3073	; 0xc01
    4708:	78160000 	ldmdavc	r6, {}	; <UNPREDICTABLE>
    470c:	5b370100 	blpl	dc4b14 <startup-0x1f23b4ec>
    4710:	02000000 	andeq	r0, r0, #0
    4714:	63106f91 	tstvs	r0, #580	; 0x244
    4718:	5b390100 	blpl	e44b20 <startup-0x1f1bb4e0>
    471c:	02000000 	andeq	r0, r0, #0
    4720:	19007791 	stmdbne	r0, {r0, r4, r7, r8, r9, sl, ip, sp, lr}
    4724:	00001d36 	andeq	r1, r0, r6, lsr sp
    4728:	46602f01 	strbtmi	r2, [r0], -r1, lsl #30
    472c:	00442000 	subeq	r2, r4, r0
    4730:	9c010000 	stcls	0, cr0, [r1], {-0}
    4734:	01007816 	tsteq	r0, r6, lsl r8
    4738:	00005b2f 	andeq	r5, r0, pc, lsr #22
    473c:	6f910200 	svcvs	0x00910200
    4740:	01006310 	tsteq	r0, r0, lsl r3
    4744:	00005b31 	andeq	r5, r0, r1, lsr fp
    4748:	77910200 	ldrvc	r0, [r1, r0, lsl #4]
    474c:	01400000 	mrseq	r0, (UNDEF: 64)
    4750:	00040000 	andeq	r0, r4, r0
    4754:	0000102c 	andeq	r1, r0, ip, lsr #32
    4758:	00af0104 	adceq	r0, pc, r4, lsl #2
    475c:	4c0c0000 	stcmi	0, cr0, [ip], {-0}
    4760:	8000001e 	andhi	r0, r0, lr, lsl r0
    4764:	9420004b 	strtls	r0, [r0], #-75	; 0xffffffb5
    4768:	b8000000 	stmdalt	r0, {}	; <UNPREDICTABLE>
    476c:	02000017 	andeq	r0, r0, #23
    4770:	000006f1 	strdeq	r0, [r0], -r1
    4774:	6a040214 	bvs	104fcc <startup-0x1fefb034>
    4778:	03000000 	movweq	r0, #0
    477c:	00001e47 	andeq	r1, r0, r7, asr #28
    4780:	006a0502 	rsbeq	r0, sl, r2, lsl #10
    4784:	03000000 	movweq	r0, #0
    4788:	000002bc 			; <UNDEFINED> instruction: 0x000002bc
    478c:	006a0602 	rsbeq	r0, sl, r2, lsl #12
    4790:	03040000 	movweq	r0, #16384	; 0x4000
    4794:	00000429 	andeq	r0, r0, r9, lsr #8
    4798:	00770802 	rsbseq	r0, r7, r2, lsl #16
    479c:	03080000 	movweq	r0, #32768	; 0x8000
    47a0:	000027cc 	andeq	r2, r0, ip, asr #15
    47a4:	00770902 	rsbseq	r0, r7, r2, lsl #18
    47a8:	030c0000 	movweq	r0, #49152	; 0xc000
    47ac:	000002c1 	andeq	r0, r0, r1, asr #5
    47b0:	00940c02 	addseq	r0, r4, r2, lsl #24
    47b4:	00100000 	andseq	r0, r0, r0
    47b8:	00700404 	rsbseq	r0, r0, r4, lsl #8
    47bc:	01050000 	mrseq	r0, (UNDEF: 5)
    47c0:	00052008 	andeq	r2, r5, r8
    47c4:	05040600 	streq	r0, [r4, #-1536]	; 0xfffffa00
    47c8:	00746e69 	rsbseq	r6, r4, r9, ror #28
    47cc:	00008e07 	andeq	r8, r0, r7, lsl #28
    47d0:	008e0800 	addeq	r0, lr, r0, lsl #16
    47d4:	77080000 	strvc	r0, [r8, -r0]
    47d8:	00000000 	andeq	r0, r0, r0
    47dc:	00210404 	eoreq	r0, r1, r4, lsl #8
    47e0:	04040000 	streq	r0, [r4], #-0
    47e4:	0000007e 	andeq	r0, r0, lr, ror r0
    47e8:	0006f209 	andeq	pc, r6, r9, lsl #4
    47ec:	210d0200 	mrscs	r0, SP_fiq
    47f0:	0a000000 	beq	47f8 <startup-0x1fffb808>
    47f4:	00001e2e 	andeq	r1, r0, lr, lsr #28
    47f8:	4bda0c01 	blmi	ff687804 <firstTime.4108+0xdf6722ac>
    47fc:	003a2000 	eorseq	r2, sl, r0
    4800:	9c010000 	stcls	0, cr0, [r1], {-0}
    4804:	000000f3 	strdeq	r0, [r0], -r3
    4808:	6a626f0b 	bvs	18a043c <startup-0x1e75fbc4>
    480c:	f30c0100 	vrhadd.u8	d0, d12, d0
    4810:	02000000 	andeq	r0, r0, #0
    4814:	470c7491 			; <UNDEFINED> instruction: 0x470c7491
    4818:	0100001e 	tsteq	r0, lr, lsl r0
    481c:	00006a0c 	andeq	r6, r0, ip, lsl #20
    4820:	70910200 	addsvc	r0, r1, r0, lsl #4
    4824:	0002bc0c 	andeq	fp, r2, ip, lsl #24
    4828:	6a0c0100 	bvs	304c30 <startup-0x1fcfb3d0>
    482c:	02000000 	andeq	r0, r0, #0
    4830:	cc0c6c91 	stcgt	12, cr6, [ip], {145}	; 0x91
    4834:	01000027 	tsteq	r0, r7, lsr #32
    4838:	0000770c 	andeq	r7, r0, ip, lsl #14
    483c:	68910200 	ldmvs	r1, {r9}
    4840:	9a040400 	bls	105848 <startup-0x1fefa7b8>
    4844:	0d000000 	stceq	0, cr0, [r0, #-0]
    4848:	000002c1 	andeq	r0, r0, r1, asr #5
    484c:	4b800401 	blmi	fe005858 <firstTime.4108+0xddff0300>
    4850:	005a2000 	subseq	r2, sl, r0
    4854:	9c010000 	stcls	0, cr0, [r1], {-0}
    4858:	0007ea0c 	andeq	lr, r7, ip, lsl #20
    485c:	f3040100 	vrhadd.u8	d0, d4, d0
    4860:	02000000 	andeq	r0, r0, #0
    4864:	3d0c6c91 	stccc	12, cr6, [ip, #-580]	; 0xfffffdbc
    4868:	0100001e 	tsteq	r0, lr, lsl r0
    486c:	00007704 	andeq	r7, r0, r4, lsl #14
    4870:	68910200 	ldmvs	r1, {r9}
    4874:	001df10e 	andseq	pc, sp, lr, lsl #2
    4878:	77050100 	strvc	r0, [r5, -r0, lsl #2]
    487c:	02000000 	andeq	r0, r0, #0
    4880:	cd0e7491 	cfstrsgt	mvf7, [lr, #-580]	; 0xfffffdbc
    4884:	0100001c 	tsteq	r0, ip, lsl r0
    4888:	00007706 	andeq	r7, r0, r6, lsl #14
    488c:	70910200 	addsvc	r0, r1, r0, lsl #4
    4890:	02e00000 	rsceq	r0, r0, #0
    4894:	00040000 	andeq	r0, r4, r0
    4898:	000010f7 	strdeq	r1, [r0], -r7
    489c:	00af0104 	adceq	r0, pc, r4, lsl #2
    48a0:	f90c0000 			; <UNDEFINED> instruction: 0xf90c0000
    48a4:	1400001e 	strne	r0, [r0], #-30	; 0xffffffe2
    48a8:	e820004c 	stmda	r0!, {r2, r3, r6}
    48ac:	32000000 	andcc	r0, r0, #0
    48b0:	02000018 	andeq	r0, r0, #24
    48b4:	4e05020c 	cdpmi	2, 0, cr0, cr5, cr12, {0}
    48b8:	03000000 	movweq	r0, #0
    48bc:	00000391 	muleq	r0, r1, r3
    48c0:	004e0702 	subeq	r0, lr, r2, lsl #14
    48c4:	03000000 	movweq	r0, #0
    48c8:	00000774 	andeq	r0, r0, r4, ror r7
    48cc:	004e0802 	subeq	r0, lr, r2, lsl #16
    48d0:	03040000 	movweq	r0, #16384	; 0x4000
    48d4:	00001a6a 	andeq	r1, r0, sl, ror #20
    48d8:	00550902 	subseq	r0, r5, r2, lsl #18
    48dc:	00080000 	andeq	r0, r8, r0
    48e0:	bf070404 	svclt	0x00070404
    48e4:	05000003 	streq	r0, [r0, #-3]
    48e8:	00005b04 	andeq	r5, r0, r4, lsl #22
    48ec:	08010400 	stmdaeq	r1, {sl}
    48f0:	00000517 	andeq	r0, r0, r7, lsl r5
    48f4:	001bd406 	andseq	sp, fp, r6, lsl #8
    48f8:	210a0200 	mrscs	r0, R10_fiq
    48fc:	07000000 	streq	r0, [r0, -r0]
    4900:	00000034 	andeq	r0, r0, r4, lsr r0
    4904:	9e06030c 	cdpls	3, 0, cr0, cr6, cr12, {0}
    4908:	03000000 	movweq	r0, #0
    490c:	0000060d 	andeq	r0, r0, sp, lsl #12
    4910:	009e0703 	addseq	r0, lr, r3, lsl #14
    4914:	03000000 	movweq	r0, #0
    4918:	0000003b 	andeq	r0, r0, fp, lsr r0
    491c:	009e0803 	addseq	r0, lr, r3, lsl #16
    4920:	03040000 	movweq	r0, #16384	; 0x4000
    4924:	00000030 	andeq	r0, r0, r0, lsr r0
    4928:	009e0903 	addseq	r0, lr, r3, lsl #18
    492c:	00080000 	andeq	r0, r8, r0
    4930:	00620405 	rsbeq	r0, r2, r5, lsl #8
    4934:	58060000 	stmdapl	r6, {}	; <UNPREDICTABLE>
    4938:	03000015 	movweq	r0, #21
    493c:	00006d0a 	andeq	r6, r0, sl, lsl #26
    4940:	07370700 	ldreq	r0, [r7, -r0, lsl #14]!
    4944:	04240000 	strteq	r0, [r4], #-0
    4948:	00012806 	andeq	r2, r1, r6, lsl #16
    494c:	04a50300 	strteq	r0, [r5], #768	; 0x300
    4950:	07040000 	streq	r0, [r4, -r0]
    4954:	00000128 	andeq	r0, r0, r8, lsr #2
    4958:	07430300 	strbeq	r0, [r3, -r0, lsl #6]
    495c:	08040000 	stmdaeq	r4, {}	; <UNPREDICTABLE>
    4960:	0000012e 	andeq	r0, r0, lr, lsr #2
    4964:	06960304 	ldreq	r0, [r6], r4, lsl #6
    4968:	09040000 	stmdbeq	r4, {}	; <UNPREDICTABLE>
    496c:	0000012e 	andeq	r0, r0, lr, lsr #2
    4970:	06bf0308 	ldrteq	r0, [pc], r8, lsl #6
    4974:	0c040000 	stceq	0, cr0, [r4], {-0}
    4978:	00000146 	andeq	r0, r0, r6, asr #2
    497c:	0378030c 	cmneq	r8, #12, 6	; 0x30000000
    4980:	0d040000 	stceq	0, cr0, [r4, #-0]
    4984:	00000146 	andeq	r0, r0, r6, asr #2
    4988:	04b70310 	ldrteq	r0, [r7], #784	; 0x310
    498c:	10040000 	andne	r0, r4, r0
    4990:	0000012e 	andeq	r0, r0, lr, lsr #2
    4994:	00800314 	addeq	r0, r0, r4, lsl r3
    4998:	11040000 	mrsne	r0, (UNDEF: 4)
    499c:	0000012e 	andeq	r0, r0, lr, lsr #2
    49a0:	040f0318 	streq	r0, [pc], #-792	; 49a8 <startup-0x1fffb658>
    49a4:	12040000 	andne	r0, r4, #0
    49a8:	0000012e 	andeq	r0, r0, lr, lsr #2
    49ac:	041f031c 	ldreq	r0, [pc], #-796	; 49b4 <startup-0x1fffb64c>
    49b0:	13040000 	movwne	r0, #16384	; 0x4000
    49b4:	0000012e 	andeq	r0, r0, lr, lsr #2
    49b8:	04050020 	streq	r0, [r5], #-32	; 0xffffffe0
    49bc:	000000a4 	andeq	r0, r0, r4, lsr #1
    49c0:	69050408 	stmdbvs	r5, {r3, sl}
    49c4:	0900746e 	stmdbeq	r0, {r1, r2, r3, r5, r6, sl, ip, sp, lr}
    49c8:	00000140 	andeq	r0, r0, r0, asr #2
    49cc:	0001400a 	andeq	r4, r1, sl
    49d0:	04050000 	streq	r0, [r5], #-0
    49d4:	000000af 	andeq	r0, r0, pc, lsr #1
    49d8:	01350405 	teqeq	r5, r5, lsl #8
    49dc:	38060000 	stmdacc	r6, {}	; <UNPREDICTABLE>
    49e0:	04000007 	streq	r0, [r0], #-7
    49e4:	0000af15 	andeq	sl, r0, r5, lsl pc
    49e8:	01620b00 	cmneq	r2, r0, lsl #22
    49ec:	01620000 	cmneq	r2, r0
    49f0:	000c0000 	andeq	r0, ip, r0
    49f4:	014c0405 	cmpeq	ip, r5, lsl #8
    49f8:	9a0d0000 	bls	344a00 <startup-0x1fcbb600>
    49fc:	04000005 	streq	r0, [r0], #-5
    4a00:	0001571c 	andeq	r5, r1, ip, lsl r7
    4a04:	045a0d00 	ldrbeq	r0, [sl], #-3328	; 0xfffff300
    4a08:	1d040000 	stcne	0, cr0, [r4, #-0]
    4a0c:	0000012e 	andeq	r0, r0, lr, lsr #2
    4a10:	00005b0b 	andeq	r5, r0, fp, lsl #22
    4a14:	00018f00 	andeq	r8, r1, r0, lsl #30
    4a18:	018f0e00 	orreq	r0, pc, r0, lsl #28
    4a1c:	03ff0000 	mvnseq	r0, #0
    4a20:	07040400 	streq	r0, [r4, -r0, lsl #8]
    4a24:	0000043c 	andeq	r0, r0, ip, lsr r4
    4a28:	001f290f 	andseq	r2, pc, pc, lsl #18
    4a2c:	7e030500 	cfsh32vc	mvfx0, mvfx3, #0
    4a30:	05000001 	streq	r0, [r0, #-1]
    4a34:	00e7f803 	rsceq	pc, r7, r3, lsl #16
    4a38:	1ec90f20 	cdpne	15, 12, cr0, cr9, cr0, {1}
    4a3c:	03060000 	movweq	r0, #24576	; 0x6000
    4a40:	0000017e 	andeq	r0, r0, lr, ror r1
    4a44:	ebf80305 	bl	ffe05660 <firstTime.4108+0xdfdf0108>
    4a48:	a60f2000 	strge	r2, [pc], -r0
    4a4c:	0700001e 	smladeq	r0, lr, r0, r0
    4a50:	00017e03 	andeq	r7, r1, r3, lsl #28
    4a54:	f8030500 			; <UNDEFINED> instruction: 0xf8030500
    4a58:	102000ef 	eorne	r0, r0, pc, ror #1
    4a5c:	00001e8b 	andeq	r1, r0, fp, lsl #29
    4a60:	009e0801 	addseq	r0, lr, r1, lsl #16
    4a64:	03050000 	movweq	r0, #20480	; 0x5000
    4a68:	20008074 	andcs	r8, r0, r4, ror r0
    4a6c:	001f6510 	andseq	r6, pc, r0, lsl r5	; <UNPREDICTABLE>
    4a70:	9e090100 	adflse	f0, f1, f0
    4a74:	05000000 	streq	r0, [r0, #-0]
    4a78:	00804003 	addeq	r4, r0, r3
    4a7c:	1eec1020 	cdpne	0, 14, cr1, cr12, cr0, {1}
    4a80:	0a010000 	beq	44a88 <startup-0x1ffbb578>
    4a84:	0000009e 	muleq	r0, lr, r0
    4a88:	80840305 	addhi	r0, r4, r5, lsl #6
    4a8c:	3c102000 	ldccc	0, cr2, [r0], {-0}
    4a90:	0100001f 	tsteq	r0, pc, lsl r0
    4a94:	0000620c 	andeq	r6, r0, ip, lsl #4
    4a98:	34030500 	strcc	r0, [r3], #-1280	; 0xfffffb00
    4a9c:	10200080 	eorne	r0, r0, r0, lsl #1
    4aa0:	00001edb 	ldrdeq	r1, [r0], -fp
    4aa4:	00620d01 	rsbeq	r0, r2, r1, lsl #26
    4aa8:	03050000 	movweq	r0, #20480	; 0x5000
    4aac:	20008028 	andcs	r8, r0, r8, lsr #32
    4ab0:	001eb910 	andseq	fp, lr, r0, lsl r9
    4ab4:	620e0100 	andvs	r0, lr, #0, 2
    4ab8:	05000000 	streq	r0, [r0, #-0]
    4abc:	00801c03 	addeq	r1, r0, r3, lsl #24
    4ac0:	1f5a1020 	svcne	0x005a1020
    4ac4:	11010000 	mrsne	r0, (UNDEF: 1)
    4ac8:	0000014c 	andeq	r0, r0, ip, asr #2
    4acc:	80440305 	subhi	r0, r4, r5, lsl #6
    4ad0:	7e102000 	cdpvc	0, 1, cr2, cr0, cr0, {0}
    4ad4:	0100001e 	tsteq	r0, lr, lsl r0
    4ad8:	0000a412 	andeq	sl, r0, r2, lsl r4
    4adc:	78030500 	stmdavc	r3, {r8, sl}
    4ae0:	0b200080 	bleq	804ce8 <startup-0x1f7fb318>
    4ae4:	000000a4 	andeq	r0, r0, r4, lsr #1
    4ae8:	00000261 	andeq	r0, r0, r1, ror #4
    4aec:	00018f11 	andeq	r8, r1, r1, lsl pc
    4af0:	10000000 	andne	r0, r0, r0
    4af4:	00001e98 	muleq	r0, r8, lr
    4af8:	02511301 	subseq	r1, r1, #67108864	; 0x4000000
    4afc:	03050000 	movweq	r0, #20480	; 0x5000
    4b00:	20008068 	andcs	r8, r0, r8, rrx
    4b04:	001f4d12 	andseq	r4, pc, r2, lsl sp	; <UNPREDICTABLE>
    4b08:	88220100 	stmdahi	r2!, {r8}
    4b0c:	7420004c 	strtvc	r0, [r0], #-76	; 0xffffffb4
    4b10:	01000000 	mrseq	r0, (UNDEF: 0)
    4b14:	0002a79c 	muleq	r2, ip, r7
    4b18:	1f5a1300 	svcne	0x005a1300
    4b1c:	22010000 	andcs	r0, r1, #0
    4b20:	00000162 	andeq	r0, r0, r2, ror #2
    4b24:	0f6c9102 	svceq	0x006c9102
    4b28:	00000971 	andeq	r0, r0, r1, ror r9
    4b2c:	012e2301 			; <UNDEFINED> instruction: 0x012e2301
    4b30:	03050000 	movweq	r0, #20480	; 0x5000
    4b34:	2000f3f8 	strdcs	pc, [r0], -r8
    4b38:	04ed1400 	strbteq	r1, [sp], #1024	; 0x400
    4b3c:	14010000 	strne	r0, [r1], #-0
    4b40:	20004c14 	andcs	r4, r0, r4, lsl ip
    4b44:	00000074 	andeq	r0, r0, r4, ror r0
    4b48:	120f9c01 	andne	r9, pc, #256	; 0x100
    4b4c:	0100000e 	tsteq	r0, lr
    4b50:	00009e16 	andeq	r9, r0, r6, lsl lr
    4b54:	74910200 	ldrvc	r0, [r1], #512	; 0x200
    4b58:	000e1c0f 	andeq	r1, lr, pc, lsl #24
    4b5c:	9e190100 	muflse	f0, f1, f0
    4b60:	02000000 	andeq	r0, r0, #0
    4b64:	120f7091 	andne	r7, pc, #145	; 0x91
    4b68:	0100000c 	tsteq	r0, ip
    4b6c:	00009e1c 	andeq	r9, r0, ip, lsl lr
    4b70:	6c910200 	lfmvs	f0, 4, [r1], {0}
    4b74:	02e00000 	rsceq	r0, r0, #0
    4b78:	00040000 	andeq	r0, r4, r0
    4b7c:	00001200 	andeq	r1, r0, r0, lsl #4
    4b80:	00af0104 	adceq	r0, pc, r4, lsl #2
    4b84:	b20c0000 	andlt	r0, ip, #0
    4b88:	fc00001f 	stc2	0, cr0, [r0], {31}
    4b8c:	e820004c 	stmda	r0!, {r2, r3, r6}
    4b90:	0c000000 	stceq	0, cr0, [r0], {-0}
    4b94:	02000019 	andeq	r0, r0, #25
    4b98:	4e05020c 	cdpmi	2, 0, cr0, cr5, cr12, {0}
    4b9c:	03000000 	movweq	r0, #0
    4ba0:	00000391 	muleq	r0, r1, r3
    4ba4:	004e0702 	subeq	r0, lr, r2, lsl #14
    4ba8:	03000000 	movweq	r0, #0
    4bac:	00000774 	andeq	r0, r0, r4, ror r7
    4bb0:	004e0802 	subeq	r0, lr, r2, lsl #16
    4bb4:	03040000 	movweq	r0, #16384	; 0x4000
    4bb8:	00001a6a 	andeq	r1, r0, sl, ror #20
    4bbc:	00550902 	subseq	r0, r5, r2, lsl #18
    4bc0:	00080000 	andeq	r0, r8, r0
    4bc4:	bf070404 	svclt	0x00070404
    4bc8:	05000003 	streq	r0, [r0, #-3]
    4bcc:	00005b04 	andeq	r5, r0, r4, lsl #22
    4bd0:	08010400 	stmdaeq	r1, {sl}
    4bd4:	00000517 	andeq	r0, r0, r7, lsl r5
    4bd8:	001bd406 	andseq	sp, fp, r6, lsl #8
    4bdc:	210a0200 	mrscs	r0, R10_fiq
    4be0:	07000000 	streq	r0, [r0, -r0]
    4be4:	00000034 	andeq	r0, r0, r4, lsr r0
    4be8:	9e06030c 	cdpls	3, 0, cr0, cr6, cr12, {0}
    4bec:	03000000 	movweq	r0, #0
    4bf0:	0000060d 	andeq	r0, r0, sp, lsl #12
    4bf4:	009e0703 	addseq	r0, lr, r3, lsl #14
    4bf8:	03000000 	movweq	r0, #0
    4bfc:	0000003b 	andeq	r0, r0, fp, lsr r0
    4c00:	009e0803 	addseq	r0, lr, r3, lsl #16
    4c04:	03040000 	movweq	r0, #16384	; 0x4000
    4c08:	00000030 	andeq	r0, r0, r0, lsr r0
    4c0c:	009e0903 	addseq	r0, lr, r3, lsl #18
    4c10:	00080000 	andeq	r0, r8, r0
    4c14:	00620405 	rsbeq	r0, r2, r5, lsl #8
    4c18:	58060000 	stmdapl	r6, {}	; <UNPREDICTABLE>
    4c1c:	03000015 	movweq	r0, #21
    4c20:	00006d0a 	andeq	r6, r0, sl, lsl #26
    4c24:	07370700 	ldreq	r0, [r7, -r0, lsl #14]!
    4c28:	04240000 	strteq	r0, [r4], #-0
    4c2c:	00012806 	andeq	r2, r1, r6, lsl #16
    4c30:	04a50300 	strteq	r0, [r5], #768	; 0x300
    4c34:	07040000 	streq	r0, [r4, -r0]
    4c38:	00000128 	andeq	r0, r0, r8, lsr #2
    4c3c:	07430300 	strbeq	r0, [r3, -r0, lsl #6]
    4c40:	08040000 	stmdaeq	r4, {}	; <UNPREDICTABLE>
    4c44:	0000012e 	andeq	r0, r0, lr, lsr #2
    4c48:	06960304 	ldreq	r0, [r6], r4, lsl #6
    4c4c:	09040000 	stmdbeq	r4, {}	; <UNPREDICTABLE>
    4c50:	0000012e 	andeq	r0, r0, lr, lsr #2
    4c54:	06bf0308 	ldrteq	r0, [pc], r8, lsl #6
    4c58:	0c040000 	stceq	0, cr0, [r4], {-0}
    4c5c:	00000146 	andeq	r0, r0, r6, asr #2
    4c60:	0378030c 	cmneq	r8, #12, 6	; 0x30000000
    4c64:	0d040000 	stceq	0, cr0, [r4, #-0]
    4c68:	00000146 	andeq	r0, r0, r6, asr #2
    4c6c:	04b70310 	ldrteq	r0, [r7], #784	; 0x310
    4c70:	10040000 	andne	r0, r4, r0
    4c74:	0000012e 	andeq	r0, r0, lr, lsr #2
    4c78:	00800314 	addeq	r0, r0, r4, lsl r3
    4c7c:	11040000 	mrsne	r0, (UNDEF: 4)
    4c80:	0000012e 	andeq	r0, r0, lr, lsr #2
    4c84:	040f0318 	streq	r0, [pc], #-792	; 4c8c <startup-0x1fffb374>
    4c88:	12040000 	andne	r0, r4, #0
    4c8c:	0000012e 	andeq	r0, r0, lr, lsr #2
    4c90:	041f031c 	ldreq	r0, [pc], #-796	; 4c98 <startup-0x1fffb368>
    4c94:	13040000 	movwne	r0, #16384	; 0x4000
    4c98:	0000012e 	andeq	r0, r0, lr, lsr #2
    4c9c:	04050020 	streq	r0, [r5], #-32	; 0xffffffe0
    4ca0:	000000a4 	andeq	r0, r0, r4, lsr #1
    4ca4:	69050408 	stmdbvs	r5, {r3, sl}
    4ca8:	0900746e 	stmdbeq	r0, {r1, r2, r3, r5, r6, sl, ip, sp, lr}
    4cac:	00000140 	andeq	r0, r0, r0, asr #2
    4cb0:	0001400a 	andeq	r4, r1, sl
    4cb4:	04050000 	streq	r0, [r5], #-0
    4cb8:	000000af 	andeq	r0, r0, pc, lsr #1
    4cbc:	01350405 	teqeq	r5, r5, lsl #8
    4cc0:	38060000 	stmdacc	r6, {}	; <UNPREDICTABLE>
    4cc4:	04000007 	streq	r0, [r0], #-7
    4cc8:	0000af15 	andeq	sl, r0, r5, lsl pc
    4ccc:	01620b00 	cmneq	r2, r0, lsl #22
    4cd0:	01620000 	cmneq	r2, r0
    4cd4:	000c0000 	andeq	r0, ip, r0
    4cd8:	014c0405 	cmpeq	ip, r5, lsl #8
    4cdc:	9a0d0000 	bls	344ce4 <startup-0x1fcbb31c>
    4ce0:	04000005 	streq	r0, [r0], #-5
    4ce4:	0001571c 	andeq	r5, r1, ip, lsl r7
    4ce8:	045a0d00 	ldrbeq	r0, [sl], #-3328	; 0xfffff300
    4cec:	1d040000 	stcne	0, cr0, [r4, #-0]
    4cf0:	0000012e 	andeq	r0, r0, lr, lsr #2
    4cf4:	00005b0b 	andeq	r5, r0, fp, lsl #22
    4cf8:	00018f00 	andeq	r8, r1, r0, lsl #30
    4cfc:	018f0e00 	orreq	r0, pc, r0, lsl #28
    4d00:	03ff0000 	mvnseq	r0, #0
    4d04:	07040400 	streq	r0, [r4, -r0, lsl #8]
    4d08:	0000043c 	andeq	r0, r0, ip, lsr r4
    4d0c:	001f7f0f 	andseq	r7, pc, pc, lsl #30
    4d10:	7e030500 	cfsh32vc	mvfx0, mvfx3, #0
    4d14:	05000001 	streq	r0, [r0, #-1]
    4d18:	00f3fc03 	rscseq	pc, r3, r3, lsl #24
    4d1c:	20420f20 	subcs	r0, r2, r0, lsr #30
    4d20:	03060000 	movweq	r0, #24576	; 0x6000
    4d24:	0000017e 	andeq	r0, r0, lr, ror r1
    4d28:	f7fc0305 			; <UNDEFINED> instruction: 0xf7fc0305
    4d2c:	1f0f2000 	svcne	0x000f2000
    4d30:	07000020 	streq	r0, [r0, -r0, lsr #32]
    4d34:	00017e03 	andeq	r7, r1, r3, lsl #28
    4d38:	fc030500 	stc2	5, cr0, [r3], {-0}
    4d3c:	102000fb 	strdne	r0, [r0], -fp	; <UNPREDICTABLE>
    4d40:	00001ff5 	strdeq	r1, [r0], -r5
    4d44:	009e0801 	addseq	r0, lr, r1, lsl #16
    4d48:	03050000 	movweq	r0, #20480	; 0x5000
    4d4c:	200080f0 	strdcs	r8, [r0], -r0
    4d50:	001fa510 	andseq	sl, pc, r0, lsl r5	; <UNPREDICTABLE>
    4d54:	9e090100 	adflse	f0, f1, f0
    4d58:	05000000 	streq	r0, [r0, #-0]
    4d5c:	0080ac03 	addeq	sl, r0, r3, lsl #24
    4d60:	1f711020 	svcne	0x00711020
    4d64:	0a010000 	beq	44d6c <startup-0x1ffbb294>
    4d68:	0000009e 	muleq	r0, lr, r0
    4d6c:	80d40305 	sbcshi	r0, r4, r5, lsl #6
    4d70:	e3102000 	tst	r0, #0
    4d74:	0100001f 	tsteq	r0, pc, lsl r0
    4d78:	0000620c 	andeq	r6, r0, ip, lsl #4
    4d7c:	d8030500 	stmdale	r3, {r8, sl}
    4d80:	10200080 	eorne	r0, r0, r0, lsl #1
    4d84:	00001f93 	muleq	r0, r3, pc	; <UNPREDICTABLE>
    4d88:	00620d01 	rsbeq	r0, r2, r1, lsl #26
    4d8c:	03050000 	movweq	r0, #20480	; 0x5000
    4d90:	200080e4 	andcs	r8, r0, r4, ror #1
    4d94:	00206110 	eoreq	r6, r0, r0, lsl r1
    4d98:	620e0100 	andvs	r0, lr, #0, 2
    4d9c:	05000000 	streq	r0, [r0, #-0]
    4da0:	0080c803 	addeq	ip, r0, r3, lsl #16
    4da4:	20551020 	subscs	r1, r5, r0, lsr #32
    4da8:	11010000 	mrsne	r0, (UNDEF: 1)
    4dac:	0000014c 	andeq	r0, r0, ip, asr #2
    4db0:	80880305 	addhi	r0, r8, r5, lsl #6
    4db4:	03102000 	tsteq	r0, #0
    4db8:	01000020 	tsteq	r0, r0, lsr #32
    4dbc:	0000a412 	andeq	sl, r0, r2, lsl r4
    4dc0:	bc030500 	cfstr32lt	mvfx0, [r3], {-0}
    4dc4:	0b200080 	bleq	804fcc <startup-0x1f7fb034>
    4dc8:	000000a4 	andeq	r0, r0, r4, lsr #1
    4dcc:	00000261 	andeq	r0, r0, r1, ror #4
    4dd0:	00018f11 	andeq	r8, r1, r1, lsl pc
    4dd4:	10000000 	andne	r0, r0, r0
    4dd8:	00002033 	andeq	r2, r0, r3, lsr r0
    4ddc:	02511301 	subseq	r1, r1, #67108864	; 0x4000000
    4de0:	03050000 	movweq	r0, #20480	; 0x5000
    4de4:	200080b0 	strhcs	r8, [r0], -r0
    4de8:	00201112 	eoreq	r1, r0, r2, lsl r1
    4dec:	70220100 	eorvc	r0, r2, r0, lsl #2
    4df0:	7420004d 	strtvc	r0, [r0], #-77	; 0xffffffb3
    4df4:	01000000 	mrseq	r0, (UNDEF: 0)
    4df8:	0002a79c 	muleq	r2, ip, r7
    4dfc:	20551300 	subscs	r1, r5, r0, lsl #6
    4e00:	22010000 	andcs	r0, r1, #0
    4e04:	00000162 	andeq	r0, r0, r2, ror #2
    4e08:	0f6c9102 	svceq	0x006c9102
    4e0c:	00000971 	andeq	r0, r0, r1, ror r9
    4e10:	012e2301 			; <UNDEFINED> instruction: 0x012e2301
    4e14:	03050000 	movweq	r0, #20480	; 0x5000
    4e18:	2000fffc 	strdcs	pc, [r0], -ip
    4e1c:	04ed1400 	strbteq	r1, [sp], #1024	; 0x400
    4e20:	14010000 	strne	r0, [r1], #-0
    4e24:	20004cfc 	strdcs	r4, [r0], -ip
    4e28:	00000074 	andeq	r0, r0, r4, ror r0
    4e2c:	120f9c01 	andne	r9, pc, #256	; 0x100
    4e30:	0100000e 	tsteq	r0, lr
    4e34:	00009e16 	andeq	r9, r0, r6, lsl lr
    4e38:	74910200 	ldrvc	r0, [r1], #512	; 0x200
    4e3c:	000e1c0f 	andeq	r1, lr, pc, lsl #24
    4e40:	9e190100 	muflse	f0, f1, f0
    4e44:	02000000 	andeq	r0, r0, #0
    4e48:	120f7091 	andne	r7, pc, #145	; 0x91
    4e4c:	0100000c 	tsteq	r0, ip
    4e50:	00009e1c 	andeq	r9, r0, ip, lsl lr
    4e54:	6c910200 	lfmvs	f0, 4, [r1], {0}
    4e58:	02df0000 	sbcseq	r0, pc, #0
    4e5c:	00040000 	andeq	r0, r4, r0
    4e60:	00001309 	andeq	r1, r0, r9, lsl #6
    4e64:	00af0104 	adceq	r0, pc, r4, lsl #2
    4e68:	720c0000 	andvc	r0, ip, #0
    4e6c:	e4000020 	str	r0, [r0], #-32	; 0xffffffe0
    4e70:	e820004d 	stmda	r0!, {r0, r2, r3, r6}
    4e74:	ea000000 	b	4e7c <startup-0x1fffb184>
    4e78:	02000019 	andeq	r0, r0, #25
    4e7c:	4e05020c 	cdpmi	2, 0, cr0, cr5, cr12, {0}
    4e80:	03000000 	movweq	r0, #0
    4e84:	00000391 	muleq	r0, r1, r3
    4e88:	004e0702 	subeq	r0, lr, r2, lsl #14
    4e8c:	03000000 	movweq	r0, #0
    4e90:	00000774 	andeq	r0, r0, r4, ror r7
    4e94:	004e0802 	subeq	r0, lr, r2, lsl #16
    4e98:	03040000 	movweq	r0, #16384	; 0x4000
    4e9c:	00001a6a 	andeq	r1, r0, sl, ror #20
    4ea0:	00550902 	subseq	r0, r5, r2, lsl #18
    4ea4:	00080000 	andeq	r0, r8, r0
    4ea8:	bf070404 	svclt	0x00070404
    4eac:	05000003 	streq	r0, [r0, #-3]
    4eb0:	00005b04 	andeq	r5, r0, r4, lsl #22
    4eb4:	08010400 	stmdaeq	r1, {sl}
    4eb8:	00000517 	andeq	r0, r0, r7, lsl r5
    4ebc:	001bd406 	andseq	sp, fp, r6, lsl #8
    4ec0:	210a0200 	mrscs	r0, R10_fiq
    4ec4:	07000000 	streq	r0, [r0, -r0]
    4ec8:	00000034 	andeq	r0, r0, r4, lsr r0
    4ecc:	9e06030c 	cdpls	3, 0, cr0, cr6, cr12, {0}
    4ed0:	03000000 	movweq	r0, #0
    4ed4:	0000060d 	andeq	r0, r0, sp, lsl #12
    4ed8:	009e0703 	addseq	r0, lr, r3, lsl #14
    4edc:	03000000 	movweq	r0, #0
    4ee0:	0000003b 	andeq	r0, r0, fp, lsr r0
    4ee4:	009e0803 	addseq	r0, lr, r3, lsl #16
    4ee8:	03040000 	movweq	r0, #16384	; 0x4000
    4eec:	00000030 	andeq	r0, r0, r0, lsr r0
    4ef0:	009e0903 	addseq	r0, lr, r3, lsl #18
    4ef4:	00080000 	andeq	r0, r8, r0
    4ef8:	00620405 	rsbeq	r0, r2, r5, lsl #8
    4efc:	58060000 	stmdapl	r6, {}	; <UNPREDICTABLE>
    4f00:	03000015 	movweq	r0, #21
    4f04:	00006d0a 	andeq	r6, r0, sl, lsl #26
    4f08:	07370700 	ldreq	r0, [r7, -r0, lsl #14]!
    4f0c:	04240000 	strteq	r0, [r4], #-0
    4f10:	00012806 	andeq	r2, r1, r6, lsl #16
    4f14:	04a50300 	strteq	r0, [r5], #768	; 0x300
    4f18:	07040000 	streq	r0, [r4, -r0]
    4f1c:	00000128 	andeq	r0, r0, r8, lsr #2
    4f20:	07430300 	strbeq	r0, [r3, -r0, lsl #6]
    4f24:	08040000 	stmdaeq	r4, {}	; <UNPREDICTABLE>
    4f28:	0000012e 	andeq	r0, r0, lr, lsr #2
    4f2c:	06960304 	ldreq	r0, [r6], r4, lsl #6
    4f30:	09040000 	stmdbeq	r4, {}	; <UNPREDICTABLE>
    4f34:	0000012e 	andeq	r0, r0, lr, lsr #2
    4f38:	06bf0308 	ldrteq	r0, [pc], r8, lsl #6
    4f3c:	0c040000 	stceq	0, cr0, [r4], {-0}
    4f40:	00000146 	andeq	r0, r0, r6, asr #2
    4f44:	0378030c 	cmneq	r8, #12, 6	; 0x30000000
    4f48:	0d040000 	stceq	0, cr0, [r4, #-0]
    4f4c:	00000146 	andeq	r0, r0, r6, asr #2
    4f50:	04b70310 	ldrteq	r0, [r7], #784	; 0x310
    4f54:	10040000 	andne	r0, r4, r0
    4f58:	0000012e 	andeq	r0, r0, lr, lsr #2
    4f5c:	00800314 	addeq	r0, r0, r4, lsl r3
    4f60:	11040000 	mrsne	r0, (UNDEF: 4)
    4f64:	0000012e 	andeq	r0, r0, lr, lsr #2
    4f68:	040f0318 	streq	r0, [pc], #-792	; 4f70 <startup-0x1fffb090>
    4f6c:	12040000 	andne	r0, r4, #0
    4f70:	0000012e 	andeq	r0, r0, lr, lsr #2
    4f74:	041f031c 	ldreq	r0, [pc], #-796	; 4f7c <startup-0x1fffb084>
    4f78:	13040000 	movwne	r0, #16384	; 0x4000
    4f7c:	0000012e 	andeq	r0, r0, lr, lsr #2
    4f80:	04050020 	streq	r0, [r5], #-32	; 0xffffffe0
    4f84:	000000a4 	andeq	r0, r0, r4, lsr #1
    4f88:	69050408 	stmdbvs	r5, {r3, sl}
    4f8c:	0900746e 	stmdbeq	r0, {r1, r2, r3, r5, r6, sl, ip, sp, lr}
    4f90:	00000140 	andeq	r0, r0, r0, asr #2
    4f94:	0001400a 	andeq	r4, r1, sl
    4f98:	04050000 	streq	r0, [r5], #-0
    4f9c:	000000af 	andeq	r0, r0, pc, lsr #1
    4fa0:	01350405 	teqeq	r5, r5, lsl #8
    4fa4:	38060000 	stmdacc	r6, {}	; <UNPREDICTABLE>
    4fa8:	04000007 	streq	r0, [r0], #-7
    4fac:	0000af15 	andeq	sl, r0, r5, lsl pc
    4fb0:	01620b00 	cmneq	r2, r0, lsl #22
    4fb4:	01620000 	cmneq	r2, r0
    4fb8:	000c0000 	andeq	r0, ip, r0
    4fbc:	014c0405 	cmpeq	ip, r5, lsl #8
    4fc0:	9a0d0000 	bls	344fc8 <startup-0x1fcbb038>
    4fc4:	04000005 	streq	r0, [r0], #-5
    4fc8:	0001571c 	andeq	r5, r1, ip, lsl r7
    4fcc:	045a0d00 	ldrbeq	r0, [sl], #-3328	; 0xfffff300
    4fd0:	1d040000 	stcne	0, cr0, [r4, #-0]
    4fd4:	0000012e 	andeq	r0, r0, lr, lsr #2
    4fd8:	00005b0b 	andeq	r5, r0, fp, lsl #22
    4fdc:	00018e00 	andeq	r8, r1, r0, lsl #28
    4fe0:	018e0e00 	orreq	r0, lr, r0, lsl #28
    4fe4:	00210000 	eoreq	r0, r1, r0
    4fe8:	3c070404 	cfstrscc	mvf0, [r7], {4}
    4fec:	0f000004 	svceq	0x00000004
    4ff0:	000020a1 	andeq	r2, r0, r1, lsr #1
    4ff4:	017e0305 	cmneq	lr, r5, lsl #6
    4ff8:	03050000 	movweq	r0, #20480	; 0x5000
    4ffc:	20010000 	andcs	r0, r1, r0
    5000:	0020eb0f 	eoreq	lr, r0, pc, lsl #22
    5004:	7e030600 	cfmadd32vc	mvax0, mvfx0, mvfx3, mvfx0
    5008:	05000001 	streq	r0, [r0, #-1]
    500c:	01002403 	tsteq	r0, r3, lsl #8
    5010:	20c90f20 	sbccs	r0, r9, r0, lsr #30
    5014:	03070000 	movweq	r0, #28672	; 0x7000
    5018:	0000017e 	andeq	r0, r0, lr, ror r1
    501c:	00480305 	subeq	r0, r8, r5, lsl #6
    5020:	30102001 	andscc	r2, r0, r1
    5024:	01000021 	tsteq	r0, r1, lsr #32
    5028:	00009e08 	andeq	r9, r0, r8, lsl #28
    502c:	00030500 	andeq	r0, r3, r0, lsl #10
    5030:	10200081 	eorne	r0, r0, r1, lsl #1
    5034:	0000210c 	andeq	r2, r0, ip, lsl #2
    5038:	009e0901 	addseq	r0, lr, r1, lsl #18
    503c:	03050000 	movweq	r0, #20480	; 0x5000
    5040:	20008140 	andcs	r8, r0, r0, asr #2
    5044:	0020b310 	eoreq	fp, r0, r0, lsl r3
    5048:	9e0a0100 	adflse	f0, f2, f0
    504c:	05000000 	streq	r0, [r0, #-0]
    5050:	00815c03 	addeq	r5, r1, r3, lsl #24
    5054:	20db1020 	sbcscs	r1, fp, r0, lsr #32
    5058:	0c010000 	stceq	0, cr0, [r1], {-0}
    505c:	00000062 	andeq	r0, r0, r2, rrx
    5060:	81440305 	cmphi	r4, r5, lsl #6
    5064:	fc102000 	ldc2	0, cr2, [r0], {-0}
    5068:	01000020 	tsteq	r0, r0, lsr #32
    506c:	0000620d 	andeq	r6, r0, sp, lsl #4
    5070:	10030500 	andne	r0, r3, r0, lsl #10
    5074:	10200081 	eorne	r0, r0, r1, lsl #1
    5078:	0000213c 	andeq	r2, r0, ip, lsr r1
    507c:	00620e01 	rsbeq	r0, r2, r1, lsl #28
    5080:	03050000 	movweq	r0, #20480	; 0x5000
    5084:	20008150 	andcs	r8, r0, r0, asr r1
    5088:	0020bf10 	eoreq	fp, r0, r0, lsl pc
    508c:	4c110100 	ldfmis	f0, [r1], {-0}
    5090:	05000001 	streq	r0, [r0, #-1]
    5094:	00811c03 	addeq	r1, r1, r3, lsl #24
    5098:	21241020 			; <UNDEFINED> instruction: 0x21241020
    509c:	12010000 	andne	r0, r1, #0
    50a0:	000000a4 	andeq	r0, r0, r4, lsr #1
    50a4:	81040305 	tsthi	r4, r5, lsl #6
    50a8:	a40b2000 	strge	r2, [fp], #-0
    50ac:	60000000 	andvs	r0, r0, r0
    50b0:	0e000002 	cdpeq	0, 0, cr0, cr0, cr2, {0}
    50b4:	0000018e 	andeq	r0, r0, lr, lsl #3
    50b8:	17100000 	ldrne	r0, [r0, -r0]
    50bc:	01000021 	tsteq	r0, r1, lsr #32
    50c0:	00025013 	andeq	r5, r2, r3, lsl r0
    50c4:	f4030500 	vst3.8	{d0,d2,d4}, [r3], r0
    50c8:	11200080 	smlawbne	r0, r0, r0, r0
    50cc:	00000323 	andeq	r0, r0, r3, lsr #6
    50d0:	4e582201 	cdpmi	2, 5, cr2, cr8, cr1, {0}
    50d4:	00742000 	rsbseq	r2, r4, r0
    50d8:	9c010000 	stcls	0, cr0, [r1], {-0}
    50dc:	000002a6 	andeq	r0, r0, r6, lsr #5
    50e0:	0020bf12 	eoreq	fp, r0, r2, lsl pc
    50e4:	62220100 	eorvs	r0, r2, #0, 2
    50e8:	02000001 	andeq	r0, r0, #1
    50ec:	710f6c91 			; <UNDEFINED> instruction: 0x710f6c91
    50f0:	01000009 	tsteq	r0, r9
    50f4:	00012e23 	andeq	r2, r1, r3, lsr #28
    50f8:	6c030500 	cfstr32vs	mvfx0, [r3], {-0}
    50fc:	00200100 	eoreq	r0, r0, r0, lsl #2
    5100:	0004ed13 	andeq	lr, r4, r3, lsl sp
    5104:	e4140100 	ldr	r0, [r4], #-256	; 0xffffff00
    5108:	7420004d 	strtvc	r0, [r0], #-77	; 0xffffffb3
    510c:	01000000 	mrseq	r0, (UNDEF: 0)
    5110:	0e120f9c 	mrceq	15, 0, r0, cr2, cr12, {4}
    5114:	16010000 	strne	r0, [r1], -r0
    5118:	0000009e 	muleq	r0, lr, r0
    511c:	0f749102 	svceq	0x00749102
    5120:	00000e1c 	andeq	r0, r0, ip, lsl lr
    5124:	009e1901 	addseq	r1, lr, r1, lsl #18
    5128:	91020000 	mrsls	r0, (UNDEF: 2)
    512c:	0c120f70 	ldceq	15, cr0, [r2], {112}	; 0x70
    5130:	1c010000 	stcne	0, cr0, [r1], {-0}
    5134:	0000009e 	muleq	r0, lr, r0
    5138:	006c9102 	rsbeq	r9, ip, r2, lsl #2
    513c:	0002e000 	andeq	lr, r2, r0
    5140:	09000400 	stmdbeq	r0, {sl}
    5144:	04000014 	streq	r0, [r0], #-20	; 0xffffffec
    5148:	0000af01 	andeq	sl, r0, r1, lsl #30
    514c:	21700c00 	cmncs	r0, r0, lsl #24
    5150:	4ecc0000 	cdpmi	0, 12, cr0, cr12, cr0, {0}
    5154:	00e82000 	rsceq	r2, r8, r0
    5158:	1ac00000 	bne	ff005160 <firstTime.4108+0xdefefc08>
    515c:	0c020000 	stceq	0, cr0, [r2], {-0}
    5160:	004e0502 	subeq	r0, lr, r2, lsl #10
    5164:	91030000 	mrsls	r0, (UNDEF: 3)
    5168:	02000003 	andeq	r0, r0, #3
    516c:	00004e07 	andeq	r4, r0, r7, lsl #28
    5170:	74030000 	strvc	r0, [r3], #-0
    5174:	02000007 	andeq	r0, r0, #7
    5178:	00004e08 	andeq	r4, r0, r8, lsl #28
    517c:	6a030400 	bvs	c6184 <startup-0x1ff39e7c>
    5180:	0200001a 	andeq	r0, r0, #26
    5184:	00005509 	andeq	r5, r0, r9, lsl #10
    5188:	04000800 	streq	r0, [r0], #-2048	; 0xfffff800
    518c:	03bf0704 			; <UNDEFINED> instruction: 0x03bf0704
    5190:	04050000 	streq	r0, [r5], #-0
    5194:	0000005b 	andeq	r0, r0, fp, asr r0
    5198:	17080104 	strne	r0, [r8, -r4, lsl #2]
    519c:	06000005 	streq	r0, [r0], -r5
    51a0:	00001bd4 	ldrdeq	r1, [r0], -r4
    51a4:	00210a02 	eoreq	r0, r1, r2, lsl #20
    51a8:	34070000 	strcc	r0, [r7], #-0
    51ac:	0c000000 	stceq	0, cr0, [r0], {-0}
    51b0:	009e0603 	addseq	r0, lr, r3, lsl #12
    51b4:	0d030000 	stceq	0, cr0, [r3, #-0]
    51b8:	03000006 	movweq	r0, #6
    51bc:	00009e07 	andeq	r9, r0, r7, lsl #28
    51c0:	3b030000 	blcc	c51c8 <startup-0x1ff3ae38>
    51c4:	03000000 	movweq	r0, #0
    51c8:	00009e08 	andeq	r9, r0, r8, lsl #28
    51cc:	30030400 	andcc	r0, r3, r0, lsl #8
    51d0:	03000000 	movweq	r0, #0
    51d4:	00009e09 	andeq	r9, r0, r9, lsl #28
    51d8:	05000800 	streq	r0, [r0, #-2048]	; 0xfffff800
    51dc:	00006204 	andeq	r6, r0, r4, lsl #4
    51e0:	15580600 	ldrbne	r0, [r8, #-1536]	; 0xfffffa00
    51e4:	0a030000 	beq	c51ec <startup-0x1ff3ae14>
    51e8:	0000006d 	andeq	r0, r0, sp, rrx
    51ec:	00073707 	andeq	r3, r7, r7, lsl #14
    51f0:	06042400 	streq	r2, [r4], -r0, lsl #8
    51f4:	00000128 	andeq	r0, r0, r8, lsr #2
    51f8:	0004a503 	andeq	sl, r4, r3, lsl #10
    51fc:	28070400 	stmdacs	r7, {sl}
    5200:	00000001 	andeq	r0, r0, r1
    5204:	00074303 	andeq	r4, r7, r3, lsl #6
    5208:	2e080400 	cfcpyscs	mvf0, mvf8
    520c:	04000001 	streq	r0, [r0], #-1
    5210:	00069603 	andeq	r9, r6, r3, lsl #12
    5214:	2e090400 	cfcpyscs	mvf0, mvf9
    5218:	08000001 	stmdaeq	r0, {r0}
    521c:	0006bf03 	andeq	fp, r6, r3, lsl #30
    5220:	460c0400 	strmi	r0, [ip], -r0, lsl #8
    5224:	0c000001 	stceq	0, cr0, [r0], {1}
    5228:	00037803 	andeq	r7, r3, r3, lsl #16
    522c:	460d0400 	strmi	r0, [sp], -r0, lsl #8
    5230:	10000001 	andne	r0, r0, r1
    5234:	0004b703 	andeq	fp, r4, r3, lsl #14
    5238:	2e100400 	cfmulscs	mvf0, mvf0, mvf0
    523c:	14000001 	strne	r0, [r0], #-1
    5240:	00008003 	andeq	r8, r0, r3
    5244:	2e110400 	cfmulscs	mvf0, mvf1, mvf0
    5248:	18000001 	stmdane	r0, {r0}
    524c:	00040f03 	andeq	r0, r4, r3, lsl #30
    5250:	2e120400 	cfmulscs	mvf0, mvf2, mvf0
    5254:	1c000001 	stcne	0, cr0, [r0], {1}
    5258:	00041f03 	andeq	r1, r4, r3, lsl #30
    525c:	2e130400 	cfmulscs	mvf0, mvf3, mvf0
    5260:	20000001 	andcs	r0, r0, r1
    5264:	a4040500 	strge	r0, [r4], #-1280	; 0xfffffb00
    5268:	08000000 	stmdaeq	r0, {}	; <UNPREDICTABLE>
    526c:	6e690504 	cdpvs	5, 6, cr0, cr9, cr4, {0}
    5270:	40090074 	andmi	r0, r9, r4, ror r0
    5274:	0a000001 	beq	5280 <startup-0x1fffad80>
    5278:	00000140 	andeq	r0, r0, r0, asr #2
    527c:	af040500 	svcge	0x00040500
    5280:	05000000 	streq	r0, [r0, #-0]
    5284:	00013504 	andeq	r3, r1, r4, lsl #10
    5288:	07380600 	ldreq	r0, [r8, -r0, lsl #12]!
    528c:	15040000 	strne	r0, [r4, #-0]
    5290:	000000af 	andeq	r0, r0, pc, lsr #1
    5294:	0001620b 	andeq	r6, r1, fp, lsl #4
    5298:	00016200 	andeq	r6, r1, r0, lsl #4
    529c:	05000c00 	streq	r0, [r0, #-3072]	; 0xfffff400
    52a0:	00014c04 	andeq	r4, r1, r4, lsl #24
    52a4:	059a0d00 	ldreq	r0, [sl, #3328]	; 0xd00
    52a8:	1c040000 	stcne	0, cr0, [r4], {-0}
    52ac:	00000157 	andeq	r0, r0, r7, asr r1
    52b0:	00045a0d 	andeq	r5, r4, sp, lsl #20
    52b4:	2e1d0400 	cfmulscs	mvf0, mvf13, mvf0
    52b8:	0b000001 	bleq	52c4 <startup-0x1fffad3c>
    52bc:	0000005b 	andeq	r0, r0, fp, asr r0
    52c0:	0000018f 	andeq	r0, r0, pc, lsl #3
    52c4:	00018f0e 	andeq	r8, r1, lr, lsl #30
    52c8:	0003ff00 	andeq	pc, r3, r0, lsl #30
    52cc:	3c070404 	cfstrscc	mvf0, [r7], {4}
    52d0:	0f000004 	svceq	0x00000004
    52d4:	0000214b 	andeq	r2, r0, fp, asr #2
    52d8:	017e0305 	cmneq	lr, r5, lsl #6
    52dc:	03050000 	movweq	r0, #20480	; 0x5000
    52e0:	20010070 	andcs	r0, r1, r0, ror r0
    52e4:	0021bb0f 	eoreq	fp, r1, pc, lsl #22
    52e8:	7e030600 	cfmadd32vc	mvax0, mvfx0, mvfx3, mvfx0
    52ec:	05000001 	streq	r0, [r0, #-1]
    52f0:	01047003 	tsteq	r4, r3
    52f4:	21ec0f20 	mvncs	r0, r0, lsr #30
    52f8:	03070000 	movweq	r0, #28672	; 0x7000
    52fc:	0000017e 	andeq	r0, r0, lr, ror r1
    5300:	08700305 	ldmdaeq	r0!, {r0, r2, r8, r9}^
    5304:	08102001 	ldmdaeq	r0, {r0, sp}
    5308:	01000022 	tsteq	r0, r2, lsr #32
    530c:	00009e08 	andeq	r9, r0, r8, lsl #28
    5310:	bc030500 	cfstr32lt	mvfx0, [r3], {-0}
    5314:	10200081 	eorne	r0, r0, r1, lsl #1
    5318:	000021d7 	ldrdeq	r2, [r0], -r7
    531c:	009e0901 	addseq	r0, lr, r1, lsl #18
    5320:	03050000 	movweq	r0, #20480	; 0x5000
    5324:	2000816c 	andcs	r8, r0, ip, ror #2
    5328:	0021e110 	eoreq	lr, r1, r0, lsl r1
    532c:	9e0a0100 	adflse	f0, f2, f0
    5330:	05000000 	streq	r0, [r0, #-0]
    5334:	00818803 	addeq	r8, r1, r3, lsl #16
    5338:	21ac1020 			; <UNDEFINED> instruction: 0x21ac1020
    533c:	0c010000 	stceq	0, cr0, [r1], {-0}
    5340:	00000062 	andeq	r0, r0, r2, rrx
    5344:	81b00305 	lslshi	r0, r5, #6
    5348:	13102000 	tstne	r0, #0
    534c:	01000022 	tsteq	r0, r2, lsr #32
    5350:	0000620d 	andeq	r6, r0, sp, lsl #4
    5354:	7c030500 	cfstr32vc	mvfx0, [r3], {-0}
    5358:	10200081 	eorne	r0, r0, r1, lsl #1
    535c:	0000219e 	muleq	r0, lr, r1
    5360:	00620e01 	rsbeq	r0, r2, r1, lsl #28
    5364:	03050000 	movweq	r0, #20480	; 0x5000
    5368:	20008170 	andcs	r8, r0, r0, ror r1
    536c:	00216710 	eoreq	r6, r1, r0, lsl r7
    5370:	4c110100 	ldfmis	f0, [r1], {-0}
    5374:	05000001 	streq	r0, [r0, #-1]
    5378:	00818c03 	addeq	r8, r1, r3, lsl #24
    537c:	21fd1020 	mvnscs	r1, r0, lsr #32
    5380:	12010000 	andne	r0, r1, #0
    5384:	000000a4 	andeq	r0, r0, r4, lsr #1
    5388:	81600305 	cmnhi	r0, r5, lsl #6
    538c:	a40b2000 	strge	r2, [fp], #-0
    5390:	61000000 	mrsvs	r0, (UNDEF: 0)
    5394:	11000002 	tstne	r0, r2
    5398:	0000018f 	andeq	r0, r0, pc, lsl #3
    539c:	cb100000 	blgt	4053a4 <startup-0x1fbfac5c>
    53a0:	01000021 	tsteq	r0, r1, lsr #32
    53a4:	00025113 	andeq	r5, r2, r3, lsl r1
    53a8:	c0030500 	andgt	r0, r3, r0, lsl #10
    53ac:	12200081 	eorne	r0, r0, #129	; 0x81
    53b0:	0000215c 	andeq	r2, r0, ip, asr r1
    53b4:	4f402201 	svcmi	0x00402201
    53b8:	00742000 	rsbseq	r2, r4, r0
    53bc:	9c010000 	stcls	0, cr0, [r1], {-0}
    53c0:	000002a7 	andeq	r0, r0, r7, lsr #5
    53c4:	00216713 	eoreq	r6, r1, r3, lsl r7
    53c8:	62220100 	eorvs	r0, r2, #0, 2
    53cc:	02000001 	andeq	r0, r0, #1
    53d0:	710f6c91 			; <UNDEFINED> instruction: 0x710f6c91
    53d4:	01000009 	tsteq	r0, r9
    53d8:	00012e23 	andeq	r2, r1, r3, lsr #28
    53dc:	70030500 	andvc	r0, r3, r0, lsl #10
    53e0:	0020010c 	eoreq	r0, r0, ip, lsl #2
    53e4:	0004ed14 	andeq	lr, r4, r4, lsl sp
    53e8:	cc140100 	ldfgts	f0, [r4], {-0}
    53ec:	7420004e 	strtvc	r0, [r0], #-78	; 0xffffffb2
    53f0:	01000000 	mrseq	r0, (UNDEF: 0)
    53f4:	0e120f9c 	mrceq	15, 0, r0, cr2, cr12, {4}
    53f8:	16010000 	strne	r0, [r1], -r0
    53fc:	0000009e 	muleq	r0, lr, r0
    5400:	0f749102 	svceq	0x00749102
    5404:	00000e1c 	andeq	r0, r0, ip, lsl lr
    5408:	009e1901 	addseq	r1, lr, r1, lsl #18
    540c:	91020000 	mrsls	r0, (UNDEF: 2)
    5410:	0c120f70 	ldceq	15, cr0, [r2], {112}	; 0x70
    5414:	1c010000 	stcne	0, cr0, [r1], {-0}
    5418:	0000009e 	muleq	r0, lr, r0
    541c:	006c9102 	rsbeq	r9, ip, r2, lsl #2
    5420:	0006fa00 	andeq	pc, r6, r0, lsl #20
    5424:	12000400 	andne	r0, r0, #0, 8
    5428:	04000015 	streq	r0, [r0], #-21	; 0xffffffeb
    542c:	0000af01 	andeq	sl, r0, r1, lsl #30
    5430:	22850c00 	addcs	r0, r5, #0, 24
    5434:	4fb40000 	svcmi	0x00b40000
    5438:	03d82000 	bicseq	r2, r8, #0
    543c:	1b920000 	blne	fe485444 <firstTime.4108+0xde46feec>
    5440:	0c020000 	stceq	0, cr0, [r2], {-0}
    5444:	004e0502 	subeq	r0, lr, r2, lsl #10
    5448:	91030000 	mrsls	r0, (UNDEF: 3)
    544c:	02000003 	andeq	r0, r0, #3
    5450:	00004e07 	andeq	r4, r0, r7, lsl #28
    5454:	74030000 	strvc	r0, [r3], #-0
    5458:	02000007 	andeq	r0, r0, #7
    545c:	00004e08 	andeq	r4, r0, r8, lsl #28
    5460:	6a030400 	bvs	c6468 <startup-0x1ff39b98>
    5464:	0200001a 	andeq	r0, r0, #26
    5468:	00005509 	andeq	r5, r0, r9, lsl #10
    546c:	04000800 	streq	r0, [r0], #-2048	; 0xfffff800
    5470:	03bf0704 			; <UNDEFINED> instruction: 0x03bf0704
    5474:	04050000 	streq	r0, [r5], #-0
    5478:	0000005b 	andeq	r0, r0, fp, asr r0
    547c:	17080104 	strne	r0, [r8, -r4, lsl #2]
    5480:	06000005 	streq	r0, [r0], -r5
    5484:	00001bd4 	ldrdeq	r1, [r0], -r4
    5488:	00210a02 	eoreq	r0, r1, r2, lsl #20
    548c:	34070000 	strcc	r0, [r7], #-0
    5490:	0c000000 	stceq	0, cr0, [r0], {-0}
    5494:	009e0603 	addseq	r0, lr, r3, lsl #12
    5498:	0d030000 	stceq	0, cr0, [r3, #-0]
    549c:	03000006 	movweq	r0, #6
    54a0:	00009e07 	andeq	r9, r0, r7, lsl #28
    54a4:	3b030000 	blcc	c54ac <startup-0x1ff3ab54>
    54a8:	03000000 	movweq	r0, #0
    54ac:	00009e08 	andeq	r9, r0, r8, lsl #28
    54b0:	30030400 	andcc	r0, r3, r0, lsl #8
    54b4:	03000000 	movweq	r0, #0
    54b8:	00009e09 	andeq	r9, r0, r9, lsl #28
    54bc:	05000800 	streq	r0, [r0, #-2048]	; 0xfffff800
    54c0:	00006204 	andeq	r6, r0, r4, lsl #4
    54c4:	15580600 	ldrbne	r0, [r8, #-1536]	; 0xfffffa00
    54c8:	0a030000 	beq	c54d0 <startup-0x1ff3ab30>
    54cc:	0000006d 	andeq	r0, r0, sp, rrx
    54d0:	00073707 	andeq	r3, r7, r7, lsl #14
    54d4:	06042400 	streq	r2, [r4], -r0, lsl #8
    54d8:	00000128 	andeq	r0, r0, r8, lsr #2
    54dc:	0004a503 	andeq	sl, r4, r3, lsl #10
    54e0:	28070400 	stmdacs	r7, {sl}
    54e4:	00000001 	andeq	r0, r0, r1
    54e8:	00074303 	andeq	r4, r7, r3, lsl #6
    54ec:	2e080400 	cfcpyscs	mvf0, mvf8
    54f0:	04000001 	streq	r0, [r0], #-1
    54f4:	00069603 	andeq	r9, r6, r3, lsl #12
    54f8:	2e090400 	cfcpyscs	mvf0, mvf9
    54fc:	08000001 	stmdaeq	r0, {r0}
    5500:	0006bf03 	andeq	fp, r6, r3, lsl #30
    5504:	460c0400 	strmi	r0, [ip], -r0, lsl #8
    5508:	0c000001 	stceq	0, cr0, [r0], {1}
    550c:	00037803 	andeq	r7, r3, r3, lsl #16
    5510:	460d0400 	strmi	r0, [sp], -r0, lsl #8
    5514:	10000001 	andne	r0, r0, r1
    5518:	0004b703 	andeq	fp, r4, r3, lsl #14
    551c:	2e100400 	cfmulscs	mvf0, mvf0, mvf0
    5520:	14000001 	strne	r0, [r0], #-1
    5524:	00008003 	andeq	r8, r0, r3
    5528:	2e110400 	cfmulscs	mvf0, mvf1, mvf0
    552c:	18000001 	stmdane	r0, {r0}
    5530:	00040f03 	andeq	r0, r4, r3, lsl #30
    5534:	2e120400 	cfmulscs	mvf0, mvf2, mvf0
    5538:	1c000001 	stcne	0, cr0, [r0], {1}
    553c:	00041f03 	andeq	r1, r4, r3, lsl #30
    5540:	2e130400 	cfmulscs	mvf0, mvf3, mvf0
    5544:	20000001 	andcs	r0, r0, r1
    5548:	a4040500 	strge	r0, [r4], #-1280	; 0xfffffb00
    554c:	08000000 	stmdaeq	r0, {}	; <UNPREDICTABLE>
    5550:	6e690504 	cdpvs	5, 6, cr0, cr9, cr4, {0}
    5554:	40090074 	andmi	r0, r9, r4, ror r0
    5558:	0a000001 	beq	5564 <startup-0x1fffaa9c>
    555c:	00000140 	andeq	r0, r0, r0, asr #2
    5560:	af040500 	svcge	0x00040500
    5564:	05000000 	streq	r0, [r0, #-0]
    5568:	00013504 	andeq	r3, r1, r4, lsl #10
    556c:	07380600 	ldreq	r0, [r8, -r0, lsl #12]!
    5570:	15040000 	strne	r0, [r4, #-0]
    5574:	000000af 	andeq	r0, r0, pc, lsr #1
    5578:	0001620b 	andeq	r6, r1, fp, lsl #4
    557c:	00016200 	andeq	r6, r1, r0, lsl #4
    5580:	05000c00 	streq	r0, [r0, #-3072]	; 0xfffff400
    5584:	00014c04 	andeq	r4, r1, r4, lsl #24
    5588:	059a0d00 	ldreq	r0, [sl, #3328]	; 0xd00
    558c:	1c040000 	stcne	0, cr0, [r4], {-0}
    5590:	00000157 	andeq	r0, r0, r7, asr r1
    5594:	00045a0d 	andeq	r5, r4, sp, lsl #20
    5598:	2e1d0400 	cfmulscs	mvf0, mvf13, mvf0
    559c:	0b000001 	bleq	55a8 <startup-0x1fffaa58>
    55a0:	0000005b 	andeq	r0, r0, fp, asr r0
    55a4:	0000018f 	andeq	r0, r0, pc, lsl #3
    55a8:	00018f0e 	andeq	r8, r1, lr, lsl #30
    55ac:	0003ff00 	andeq	pc, r3, r0, lsl #30
    55b0:	3c070404 	cfstrscc	mvf0, [r7], {4}
    55b4:	0f000004 	svceq	0x00000004
    55b8:	00002269 	andeq	r2, r0, r9, ror #4
    55bc:	017e0305 	cmneq	lr, r5, lsl #6
    55c0:	03050000 	movweq	r0, #20480	; 0x5000
    55c4:	20010c74 	andcs	r0, r1, r4, ror ip
    55c8:	0025070f 	eoreq	r0, r5, pc, lsl #14
    55cc:	7e030600 	cfmadd32vc	mvax0, mvfx0, mvfx3, mvfx0
    55d0:	05000001 	streq	r0, [r0, #-1]
    55d4:	01107403 	tsteq	r0, r3, lsl #8
    55d8:	25220f20 	strcs	r0, [r2, #-3872]!	; 0xfffff0e0
    55dc:	03070000 	movweq	r0, #28672	; 0x7000
    55e0:	0000017e 	andeq	r0, r0, lr, ror r1
    55e4:	14740305 	ldrbtne	r0, [r4], #-773	; 0xfffffcfb
    55e8:	d80f2001 	stmdale	pc, {r0, sp}	; <UNPREDICTABLE>
    55ec:	08000022 	stmdaeq	r0, {r1, r5}
    55f0:	00017e03 	andeq	r7, r1, r3, lsl #28
    55f4:	74030500 	strvc	r0, [r3], #-1280	; 0xfffffb00
    55f8:	0f200118 	svceq	0x00200118
    55fc:	000022bd 			; <UNDEFINED> instruction: 0x000022bd
    5600:	017e0309 	cmneq	lr, r9, lsl #6
    5604:	03050000 	movweq	r0, #20480	; 0x5000
    5608:	20011c74 	andcs	r1, r1, r4, ror ip
    560c:	00255a0f 	eoreq	r5, r5, pc, lsl #20
    5610:	7e030a00 	vmlavc.f32	s0, s6, s0
    5614:	05000001 	streq	r0, [r0, #-1]
    5618:	01207403 			; <UNDEFINED> instruction: 0x01207403
    561c:	230a0f20 	movwcs	r0, #44832	; 0xaf20
    5620:	030b0000 	movweq	r0, #45056	; 0xb000
    5624:	0000017e 	andeq	r0, r0, lr, ror r1
    5628:	24740305 	ldrbtcs	r0, [r4], #-773	; 0xfffffcfb
    562c:	e50f2001 	str	r2, [pc, #-1]	; 5633 <startup-0x1fffa9cd>
    5630:	0c000026 	stceq	0, cr0, [r0], {38}	; 0x26
    5634:	00017e03 	andeq	r7, r1, r3, lsl #28
    5638:	74030500 	strvc	r0, [r3], #-1280	; 0xfffffb00
    563c:	0f200128 	svceq	0x00200128
    5640:	00002592 	muleq	r0, r2, r5
    5644:	017e030d 	cmneq	lr, sp, lsl #6
    5648:	03050000 	movweq	r0, #20480	; 0x5000
    564c:	20012c74 	andcs	r2, r1, r4, ror ip
    5650:	0023260f 	eoreq	r2, r3, pc, lsl #12
    5654:	7e030e00 	cdpvc	14, 0, cr0, cr3, cr0, {0}
    5658:	05000001 	streq	r0, [r0, #-1]
    565c:	01307403 	teqeq	r0, r3, lsl #8
    5660:	26250f20 	strtcs	r0, [r5], -r0, lsr #30
    5664:	030f0000 	movweq	r0, #61440	; 0xf000
    5668:	0000017e 	andeq	r0, r0, lr, ror r1
    566c:	34740305 	ldrbtcc	r0, [r4], #-773	; 0xfffffcfb
    5670:	eb0f2001 	bl	3cd67c <startup-0x1fc32984>
    5674:	10000024 	andne	r0, r0, r4, lsr #32
    5678:	00017e03 	andeq	r7, r1, r3, lsl #28
    567c:	74030500 	strvc	r0, [r3], #-1280	; 0xfffffb00
    5680:	0f200138 	svceq	0x00200138
    5684:	0000253e 	andeq	r2, r0, lr, lsr r5
    5688:	017e0311 	cmneq	lr, r1, lsl r3
    568c:	03050000 	movweq	r0, #20480	; 0x5000
    5690:	20013c74 	andcs	r3, r1, r4, ror ip
    5694:	0023740f 	eoreq	r7, r3, pc, lsl #8
    5698:	7e031200 	cdpvc	2, 0, cr1, cr3, cr0, {0}
    569c:	05000001 	streq	r0, [r0, #-1]
    56a0:	01407403 	cmpeq	r0, r3, lsl #8
    56a4:	23a80f20 			; <UNDEFINED> instruction: 0x23a80f20
    56a8:	03130000 	tsteq	r3, #0
    56ac:	0000017e 	andeq	r0, r0, lr, ror r1
    56b0:	44740305 	ldrbtmi	r0, [r4], #-773	; 0xfffffcfb
    56b4:	760f2001 	strvc	r2, [pc], -r1
    56b8:	14000025 	strne	r0, [r0], #-37	; 0xffffffdb
    56bc:	00017e03 	andeq	r7, r1, r3, lsl #28
    56c0:	74030500 	strvc	r0, [r3], #-1280	; 0xfffffb00
    56c4:	0f200148 	svceq	0x00200148
    56c8:	000023c4 	andeq	r2, r0, r4, asr #7
    56cc:	017e0315 	cmneq	lr, r5, lsl r3
    56d0:	03050000 	movweq	r0, #20480	; 0x5000
    56d4:	20014c74 	andcs	r4, r1, r4, ror ip
    56d8:	0022380f 	eoreq	r3, r2, pc, lsl #16
    56dc:	7e031600 	cfmadd32vc	mvax0, mvfx1, mvfx3, mvfx0
    56e0:	05000001 	streq	r0, [r0, #-1]
    56e4:	01507403 	cmpeq	r0, r3, lsl #8
    56e8:	23df1020 	bicscs	r1, pc, #32
    56ec:	2a010000 	bcs	456f4 <startup-0x1ffba90c>
    56f0:	0000009e 	muleq	r0, lr, r0
    56f4:	82f80305 	rscshi	r0, r8, #335544320	; 0x14000000
    56f8:	c4102000 	ldrgt	r2, [r0], #-0
    56fc:	01000025 	tsteq	r0, r5, lsr #32
    5700:	00009e2b 	andeq	r9, r0, fp, lsr #28
    5704:	18030500 	stmdane	r3, {r8, sl}
    5708:	10200083 	eorne	r0, r0, r3, lsl #1
    570c:	000025ae 	andeq	r2, r0, lr, lsr #11
    5710:	009e2c01 	addseq	r2, lr, r1, lsl #24
    5714:	03050000 	movweq	r0, #20480	; 0x5000
    5718:	20008230 	andcs	r8, r0, r0, lsr r2
    571c:	00270410 	eoreq	r0, r7, r0, lsl r4
    5720:	9e2d0100 	suflse	f0, f5, f0
    5724:	05000000 	streq	r0, [r0, #-0]
    5728:	00831c03 	addeq	r1, r3, r3, lsl #24
    572c:	24771020 	ldrbtcs	r1, [r7], #-32	; 0xffffffe0
    5730:	2e010000 	cdpcs	0, 0, cr0, cr1, cr0, {0}
    5734:	0000009e 	muleq	r0, lr, r0
    5738:	82b80305 	adcshi	r0, r8, #335544320	; 0x14000000
    573c:	29102000 	ldmdbcs	r0, {sp}
    5740:	01000024 	tsteq	r0, r4, lsr #32
    5744:	00009e2f 	andeq	r9, r0, pc, lsr #28
    5748:	e0030500 	and	r0, r3, r0, lsl #10
    574c:	10200081 	eorne	r0, r0, r1, lsl #1
    5750:	000026cf 	andeq	r2, r0, pc, asr #13
    5754:	009e3001 	addseq	r3, lr, r1
    5758:	03050000 	movweq	r0, #20480	; 0x5000
    575c:	2000834c 	andcs	r8, r0, ip, asr #6
    5760:	00268710 	eoreq	r8, r6, r0, lsl r7
    5764:	9e310100 	rsflss	f0, f1, f0
    5768:	05000000 	streq	r0, [r0, #-0]
    576c:	0082c803 	addeq	ip, r2, r3, lsl #16
    5770:	26441020 	strbcs	r1, [r4], -r0, lsr #32
    5774:	32010000 	andcc	r0, r1, #0
    5778:	0000009e 	muleq	r0, lr, r0
    577c:	81dc0305 	bicshi	r0, ip, r5, lsl #6
    5780:	d5102000 	ldrle	r2, [r0, #-0]
    5784:	01000024 	tsteq	r0, r4, lsr #32
    5788:	00009e33 	andeq	r9, r0, r3, lsr lr
    578c:	08030500 	stmdaeq	r3, {r8, sl}
    5790:	10200083 	eorne	r0, r0, r3, lsl #1
    5794:	0000235f 	andeq	r2, r0, pc, asr r3
    5798:	009e3401 	addseq	r3, lr, r1, lsl #8
    579c:	03050000 	movweq	r0, #20480	; 0x5000
    57a0:	2000822c 	andcs	r8, r0, ip, lsr #4
    57a4:	0023f910 	eoreq	pc, r3, r0, lsl r9	; <UNPREDICTABLE>
    57a8:	9e350100 	rsflss	f0, f5, f0
    57ac:	05000000 	streq	r0, [r0, #-0]
    57b0:	00833c03 	addeq	r3, r3, r3, lsl #24
    57b4:	245d1020 	ldrbcs	r1, [sp], #-32	; 0xffffffe0
    57b8:	36010000 	strcc	r0, [r1], -r0
    57bc:	0000009e 	muleq	r0, lr, r0
    57c0:	82d80305 	sbcshi	r0, r8, #335544320	; 0x14000000
    57c4:	a6102000 	ldrge	r2, [r0], -r0
    57c8:	01000024 	tsteq	r0, r4, lsr #32
    57cc:	00009e37 	andeq	r9, r0, r7, lsr lr
    57d0:	2c030500 	cfstr32cs	mvfx0, [r3], {-0}
    57d4:	10200083 	eorne	r0, r0, r3, lsl #1
    57d8:	00002443 	andeq	r2, r0, r3, asr #8
    57dc:	009e3801 	addseq	r3, lr, r1, lsl #16
    57e0:	03050000 	movweq	r0, #20480	; 0x5000
    57e4:	20008378 	andcs	r8, r0, r8, ror r3
    57e8:	0025f510 	eoreq	pc, r5, r0, lsl r5	; <UNPREDICTABLE>
    57ec:	9e390100 	rsflse	f0, f1, f0
    57f0:	05000000 	streq	r0, [r0, #-0]
    57f4:	0082dc03 	addeq	sp, r2, r3, lsl #24
    57f8:	26b61020 	ldrtcs	r1, [r6], r0, lsr #32
    57fc:	3a010000 	bcc	45804 <startup-0x1ffba7fc>
    5800:	0000009e 	muleq	r0, lr, r0
    5804:	83740305 	cmnhi	r4, #335544320	; 0x14000000
    5808:	0f102000 	svceq	0x00102000
    580c:	01000026 	tsteq	r0, r6, lsr #32
    5810:	00009e3b 	andeq	r9, r0, fp, lsr lr
    5814:	d8030500 	stmdale	r3, {r8, sl}
    5818:	10200081 	eorne	r0, r0, r1, lsl #1
    581c:	00002342 	andeq	r2, r0, r2, asr #6
    5820:	00624f01 	rsbeq	r4, r2, r1, lsl #30
    5824:	03050000 	movweq	r0, #20480	; 0x5000
    5828:	20008208 	andcs	r8, r0, r8, lsl #4
    582c:	00238f10 	eoreq	r8, r3, r0, lsl pc
    5830:	62500100 	subsvs	r0, r0, #0, 2
    5834:	05000000 	streq	r0, [r0, #-0]
    5838:	0082cc03 	addeq	ip, r2, r3, lsl #24
    583c:	25d91020 	ldrbcs	r1, [r9, #32]
    5840:	51010000 	mrspl	r0, (UNDEF: 1)
    5844:	00000062 	andeq	r0, r0, r2, rrx
    5848:	82940305 	addshi	r0, r4, #335544320	; 0x14000000
    584c:	00102000 	andseq	r2, r0, r0
    5850:	01000027 	tsteq	r0, r7, lsr #32
    5854:	00006252 	andeq	r6, r0, r2, asr r2
    5858:	20030500 	andcs	r0, r3, r0, lsl #10
    585c:	10200082 	eorne	r0, r0, r2, lsl #1
    5860:	00002425 	andeq	r2, r0, r5, lsr #8
    5864:	00625301 	rsbeq	r5, r2, r1, lsl #6
    5868:	03050000 	movweq	r0, #20480	; 0x5000
    586c:	20008240 	andcs	r8, r0, r0, asr #4
    5870:	00247310 	eoreq	r7, r4, r0, lsl r3
    5874:	62540100 	subsvs	r0, r4, #0, 2
    5878:	05000000 	streq	r0, [r0, #-0]
    587c:	00823403 	addeq	r3, r2, r3, lsl #8
    5880:	26cb1020 	strbcs	r1, [fp], r0, lsr #32
    5884:	55010000 	strpl	r0, [r1, #-0]
    5888:	00000062 	andeq	r0, r0, r2, rrx
    588c:	82fc0305 	rscshi	r0, ip, #335544320	; 0x14000000
    5890:	40102000 	andsmi	r2, r0, r0
    5894:	01000026 	tsteq	r0, r6, lsr #32
    5898:	00006256 	andeq	r6, r0, r6, asr r2
    589c:	e0030500 	and	r0, r3, r0, lsl #10
    58a0:	10200082 	eorne	r0, r0, r2, lsl #1
    58a4:	00002683 	andeq	r2, r0, r3, lsl #13
    58a8:	00625701 	rsbeq	r5, r2, r1, lsl #14
    58ac:	03050000 	movweq	r0, #20480	; 0x5000
    58b0:	200081f0 	strdcs	r8, [r0], -r0
    58b4:	0024d110 	eoreq	sp, r4, r0, lsl r1
    58b8:	62580100 	subsvs	r0, r8, #0, 2
    58bc:	05000000 	streq	r0, [r0, #-0]
    58c0:	00835c03 	addeq	r5, r3, r3, lsl #24
    58c4:	23f51020 	mvnscs	r1, #32
    58c8:	59010000 	stmdbpl	r1, {}	; <UNPREDICTABLE>
    58cc:	00000062 	andeq	r0, r0, r2, rrx
    58d0:	82a00305 	adchi	r0, r0, #335544320	; 0x14000000
    58d4:	5b102000 	blpl	40d8dc <startup-0x1fbf2724>
    58d8:	01000023 	tsteq	r0, r3, lsr #32
    58dc:	0000625a 	andeq	r6, r0, sl, asr r2
    58e0:	14030500 	strne	r0, [r3], #-1280	; 0xfffffb00
    58e4:	10200082 	eorne	r0, r0, r2, lsl #1
    58e8:	00002459 	andeq	r2, r0, r9, asr r4
    58ec:	00625b01 	rsbeq	r5, r2, r1, lsl #22
    58f0:	03050000 	movweq	r0, #20480	; 0x5000
    58f4:	200082ec 	andcs	r8, r0, ip, ror #5
    58f8:	00243f10 	eoreq	r3, r4, r0, lsl pc
    58fc:	625c0100 	subsvs	r0, ip, #0, 2
    5900:	05000000 	streq	r0, [r0, #-0]
    5904:	0082bc03 	addeq	fp, r2, r3, lsl #24
    5908:	24a21020 	strtcs	r1, [r2], #32
    590c:	5d010000 	stcpl	0, cr0, [r1, #-0]
    5910:	00000062 	andeq	r0, r0, r2, rrx
    5914:	83680305 	cmnhi	r8, #335544320	; 0x14000000
    5918:	f1102000 			; <UNDEFINED> instruction: 0xf1102000
    591c:	01000025 	tsteq	r0, r5, lsr #32
    5920:	0000625e 	andeq	r6, r0, lr, asr r2
    5924:	50030500 	andpl	r0, r3, r0, lsl #10
    5928:	10200083 	eorne	r0, r0, r3, lsl #1
    592c:	0000260b 	andeq	r2, r0, fp, lsl #12
    5930:	00625f01 	rsbeq	r5, r2, r1, lsl #30
    5934:	03050000 	movweq	r0, #20480	; 0x5000
    5938:	200082ac 	andcs	r8, r0, ip, lsr #5
    593c:	0026b210 	eoreq	fp, r6, r0, lsl r2
    5940:	62600100 	rsbvs	r0, r0, #0, 2
    5944:	05000000 	streq	r0, [r0, #-0]
    5948:	00833003 	addeq	r3, r3, r3
    594c:	22f41020 	rscscs	r1, r4, #32
    5950:	76010000 	strvc	r0, [r1], -r0
    5954:	000000a4 	andeq	r0, r0, r4, lsr #1
    5958:	83200305 			; <UNDEFINED> instruction: 0x83200305
    595c:	bb102000 	bllt	40d964 <startup-0x1fbf269c>
    5960:	01000024 	tsteq	r0, r4, lsr #32
    5964:	0000a477 	andeq	sl, r0, r7, ror r4
    5968:	fc030500 	stc2	5, cr0, [r3], {-0}
    596c:	10200081 	eorne	r0, r0, r1, lsl #1
    5970:	0000265a 	andeq	r2, r0, sl, asr r6
    5974:	00a47801 	adceq	r7, r4, r1, lsl #16
    5978:	03050000 	movweq	r0, #20480	; 0x5000
    597c:	20008340 	andcs	r8, r0, r0, asr #6
    5980:	00222210 	eoreq	r2, r2, r0, lsl r2
    5984:	a4790100 	ldrbtge	r0, [r9], #-256	; 0xffffff00
    5988:	05000000 	streq	r0, [r0, #-0]
    598c:	00830c03 	addeq	r0, r3, r3, lsl #24
    5990:	248c1020 	strcs	r1, [ip], #32
    5994:	7a010000 	bvc	4599c <startup-0x1ffba664>
    5998:	000000a4 	andeq	r0, r0, r4, lsr #1
    599c:	81e40305 	mvnhi	r0, r5, lsl #6
    59a0:	0f102000 	svceq	0x00102000
    59a4:	01000024 	tsteq	r0, r4, lsr #32
    59a8:	0000a47b 	andeq	sl, r0, fp, ror r4
    59ac:	cc030500 	cfstr32gt	mvfx0, [r3], {-0}
    59b0:	0b200081 	bleq	805bbc <startup-0x1f7fa444>
    59b4:	000000a4 	andeq	r0, r0, r4, lsr #1
    59b8:	000005a2 	andeq	r0, r0, r2, lsr #11
    59bc:	00018f11 	andeq	r8, r1, r1, lsl pc
    59c0:	10000500 	andne	r0, r0, r0, lsl #10
    59c4:	0000269c 	muleq	r0, ip, r6
    59c8:	05928201 	ldreq	r8, [r2, #513]	; 0x201
    59cc:	03050000 	movweq	r0, #20480	; 0x5000
    59d0:	2000824c 	andcs	r8, r0, ip, asr #4
    59d4:	00225412 	eoreq	r5, r2, r2, lsl r4
    59d8:	01010100 	mrseq	r0, (UNDEF: 17)
    59dc:	20005228 	andcs	r5, r0, r8, lsr #4
    59e0:	00000164 	andeq	r0, r0, r4, ror #2
    59e4:	05eb9c01 	strbeq	r9, [fp, #3073]!	; 0xc01
    59e8:	70130000 	andsvc	r0, r3, r0
    59ec:	01000026 	tsteq	r0, r6, lsr #32
    59f0:	01620101 	cmneq	r2, r1, lsl #2
    59f4:	91020000 	mrsls	r0, (UNDEF: 2)
    59f8:	0971146c 	ldmdbeq	r1!, {r2, r3, r5, r6, sl, ip}^
    59fc:	02010000 	andeq	r0, r1, #0
    5a00:	00012e01 	andeq	r2, r1, r1, lsl #28
    5a04:	74030500 	strvc	r0, [r3], #-1280	; 0xfffffb00
    5a08:	00200154 	eoreq	r0, r0, r4, asr r1
    5a0c:	0004ed15 	andeq	lr, r4, r5, lsl sp
    5a10:	b4830100 	strlt	r0, [r3], #256	; 0x100
    5a14:	7420004f 	strtvc	r0, [r0], #-79	; 0xffffffb1
    5a18:	01000002 	tsteq	r0, r2
    5a1c:	0e120f9c 	mrceq	15, 0, r0, cr2, cr12, {4}
    5a20:	85010000 	strhi	r0, [r1, #-0]
    5a24:	0000009e 	muleq	r0, lr, r0
    5a28:	0f749102 	svceq	0x00749102
    5a2c:	00000e1c 	andeq	r0, r0, ip, lsl lr
    5a30:	009e8801 	addseq	r8, lr, r1, lsl #16
    5a34:	91020000 	mrsls	r0, (UNDEF: 2)
    5a38:	0c120f70 	ldceq	15, cr0, [r2], {112}	; 0x70
    5a3c:	8b010000 	blhi	45a44 <startup-0x1ffba5bc>
    5a40:	0000009e 	muleq	r0, lr, r0
    5a44:	0f6c9102 	svceq	0x006c9102
    5a48:	00000b33 	andeq	r0, r0, r3, lsr fp
    5a4c:	009e8f01 	addseq	r8, lr, r1, lsl #30
    5a50:	91020000 	mrsls	r0, (UNDEF: 2)
    5a54:	0e3c0f68 	cdpeq	15, 3, cr0, cr12, cr8, {3}
    5a58:	92010000 	andls	r0, r1, #0
    5a5c:	0000009e 	muleq	r0, lr, r0
    5a60:	0f649102 	svceq	0x00649102
    5a64:	00000bd0 	ldrdeq	r0, [r0], -r0	; <UNPREDICTABLE>
    5a68:	009e9501 	addseq	r9, lr, r1, lsl #10
    5a6c:	91020000 	mrsls	r0, (UNDEF: 2)
    5a70:	0de80f60 	stcleq	15, cr0, [r8, #384]!	; 0x180
    5a74:	9a010000 	bls	45a7c <startup-0x1ffba584>
    5a78:	0000009e 	muleq	r0, lr, r0
    5a7c:	0f5c9102 	svceq	0x005c9102
    5a80:	00000e46 	andeq	r0, r0, r6, asr #28
    5a84:	009e9d01 	addseq	r9, lr, r1, lsl #26
    5a88:	91020000 	mrsls	r0, (UNDEF: 2)
    5a8c:	0e500f58 	mrceq	15, 2, r0, cr0, cr8, {2}
    5a90:	a0010000 	andge	r0, r1, r0
    5a94:	0000009e 	muleq	r0, lr, r0
    5a98:	0f549102 	svceq	0x00549102
    5a9c:	00000b59 	andeq	r0, r0, r9, asr fp
    5aa0:	009ea401 	addseq	sl, lr, r1, lsl #8
    5aa4:	91020000 	mrsls	r0, (UNDEF: 2)
    5aa8:	0b9d0f50 	bleq	fe7497f0 <firstTime.4108+0xde734298>
    5aac:	a7010000 	strge	r0, [r1, -r0]
    5ab0:	0000009e 	muleq	r0, lr, r0
    5ab4:	0f4c9102 	svceq	0x004c9102
    5ab8:	00000ba7 	andeq	r0, r0, r7, lsr #23
    5abc:	009eaa01 	addseq	sl, lr, r1, lsl #20
    5ac0:	91020000 	mrsls	r0, (UNDEF: 2)
    5ac4:	0e650f48 	cdpeq	15, 6, cr0, cr5, cr8, {2}
    5ac8:	ae010000 	cdpge	0, 0, cr0, cr1, cr0, {0}
    5acc:	0000009e 	muleq	r0, lr, r0
    5ad0:	0f449102 	svceq	0x00449102
    5ad4:	00000ced 	andeq	r0, r0, sp, ror #25
    5ad8:	009eb101 	addseq	fp, lr, r1, lsl #2
    5adc:	91020000 	mrsls	r0, (UNDEF: 2)
    5ae0:	0bc60f40 	bleq	ff1897e8 <firstTime.4108+0xdf174290>
    5ae4:	b4010000 	strlt	r0, [r1], #-0
    5ae8:	0000009e 	muleq	r0, lr, r0
    5aec:	7fbc9103 	svcvc	0x00bc9103
    5af0:	0015060f 	andseq	r0, r5, pc, lsl #12
    5af4:	9eb80100 	frdlse	f0, f0, f0
    5af8:	03000000 	movweq	r0, #0
    5afc:	0f7fb891 	svceq	0x007fb891
    5b00:	00001593 	muleq	r0, r3, r5
    5b04:	009ebb01 	addseq	fp, lr, r1, lsl #22
    5b08:	91030000 	mrsls	r0, (UNDEF: 3)
    5b0c:	c20f7fb4 	andgt	r7, pc, #180, 30	; 0x2d0
    5b10:	01000013 	tsteq	r0, r3, lsl r0
    5b14:	00009ebe 			; <UNDEFINED> instruction: 0x00009ebe
    5b18:	b0910300 	addslt	r0, r1, r0, lsl #6
    5b1c:	7000007f 	andvc	r0, r0, pc, ror r0
    5b20:	04000003 	streq	r0, [r0], #-3
    5b24:	00162a00 	andseq	r2, r6, r0, lsl #20
    5b28:	af010400 	svcge	0x00010400
    5b2c:	0c000000 	stceq	0, cr0, [r0], {-0}
    5b30:	00002798 	muleq	r0, r8, r7
    5b34:	2000538c 	andcs	r5, r0, ip, lsl #7
    5b38:	000001d8 	ldrdeq	r0, [r0], -r8
    5b3c:	00001e8a 	andeq	r1, r0, sl, lsl #29
    5b40:	05020c02 	streq	r0, [r2, #-3074]	; 0xfffff3fe
    5b44:	0000004e 	andeq	r0, r0, lr, asr #32
    5b48:	00039103 	andeq	r9, r3, r3, lsl #2
    5b4c:	4e070200 	cdpmi	2, 0, cr0, cr7, cr0, {0}
    5b50:	00000000 	andeq	r0, r0, r0
    5b54:	00077403 	andeq	r7, r7, r3, lsl #8
    5b58:	4e080200 	cdpmi	2, 0, cr0, cr8, cr0, {0}
    5b5c:	04000000 	streq	r0, [r0], #-0
    5b60:	001a6a03 	andseq	r6, sl, r3, lsl #20
    5b64:	55090200 	strpl	r0, [r9, #-512]	; 0xfffffe00
    5b68:	08000000 	stmdaeq	r0, {}	; <UNPREDICTABLE>
    5b6c:	07040400 	streq	r0, [r4, -r0, lsl #8]
    5b70:	000003bf 			; <UNDEFINED> instruction: 0x000003bf
    5b74:	005b0405 	subseq	r0, fp, r5, lsl #8
    5b78:	01040000 	mrseq	r0, (UNDEF: 4)
    5b7c:	00051708 	andeq	r1, r5, r8, lsl #14
    5b80:	1bd40600 	blne	ff507388 <firstTime.4108+0xdf4f1e30>
    5b84:	0a020000 	beq	85b8c <startup-0x1ff7a474>
    5b88:	00000021 	andeq	r0, r0, r1, lsr #32
    5b8c:	00003407 	andeq	r3, r0, r7, lsl #8
    5b90:	06030c00 	streq	r0, [r3], -r0, lsl #24
    5b94:	0000009e 	muleq	r0, lr, r0
    5b98:	00060d03 	andeq	r0, r6, r3, lsl #26
    5b9c:	9e070300 	cdpls	3, 0, cr0, cr7, cr0, {0}
    5ba0:	00000000 	andeq	r0, r0, r0
    5ba4:	00003b03 	andeq	r3, r0, r3, lsl #22
    5ba8:	9e080300 	cdpls	3, 0, cr0, cr8, cr0, {0}
    5bac:	04000000 	streq	r0, [r0], #-0
    5bb0:	00003003 	andeq	r3, r0, r3
    5bb4:	9e090300 	cdpls	3, 0, cr0, cr9, cr0, {0}
    5bb8:	08000000 	stmdaeq	r0, {}	; <UNPREDICTABLE>
    5bbc:	62040500 	andvs	r0, r4, #0, 10
    5bc0:	06000000 	streq	r0, [r0], -r0
    5bc4:	00001558 	andeq	r1, r0, r8, asr r5
    5bc8:	006d0a03 	rsbeq	r0, sp, r3, lsl #20
    5bcc:	37070000 	strcc	r0, [r7, -r0]
    5bd0:	24000007 	strcs	r0, [r0], #-7
    5bd4:	01280604 			; <UNDEFINED> instruction: 0x01280604
    5bd8:	a5030000 	strge	r0, [r3, #-0]
    5bdc:	04000004 	streq	r0, [r0], #-4
    5be0:	00012807 	andeq	r2, r1, r7, lsl #16
    5be4:	43030000 	movwmi	r0, #12288	; 0x3000
    5be8:	04000007 	streq	r0, [r0], #-7
    5bec:	00012e08 	andeq	r2, r1, r8, lsl #28
    5bf0:	96030400 	strls	r0, [r3], -r0, lsl #8
    5bf4:	04000006 	streq	r0, [r0], #-6
    5bf8:	00012e09 	andeq	r2, r1, r9, lsl #28
    5bfc:	bf030800 	svclt	0x00030800
    5c00:	04000006 	streq	r0, [r0], #-6
    5c04:	0001460c 	andeq	r4, r1, ip, lsl #12
    5c08:	78030c00 	stmdavc	r3, {sl, fp}
    5c0c:	04000003 	streq	r0, [r0], #-3
    5c10:	0001460d 	andeq	r4, r1, sp, lsl #12
    5c14:	b7031000 	strlt	r1, [r3, -r0]
    5c18:	04000004 	streq	r0, [r0], #-4
    5c1c:	00012e10 	andeq	r2, r1, r0, lsl lr
    5c20:	80031400 	andhi	r1, r3, r0, lsl #8
    5c24:	04000000 	streq	r0, [r0], #-0
    5c28:	00012e11 	andeq	r2, r1, r1, lsl lr
    5c2c:	0f031800 	svceq	0x00031800
    5c30:	04000004 	streq	r0, [r0], #-4
    5c34:	00012e12 	andeq	r2, r1, r2, lsl lr
    5c38:	1f031c00 	svcne	0x00031c00
    5c3c:	04000004 	streq	r0, [r0], #-4
    5c40:	00012e13 	andeq	r2, r1, r3, lsl lr
    5c44:	05002000 	streq	r2, [r0, #-0]
    5c48:	0000a404 	andeq	sl, r0, r4, lsl #8
    5c4c:	05040800 	streq	r0, [r4, #-2048]	; 0xfffff800
    5c50:	00746e69 	rsbseq	r6, r4, r9, ror #28
    5c54:	00014009 	andeq	r4, r1, r9
    5c58:	01400a00 	cmpeq	r0, r0, lsl #20
    5c5c:	05000000 	streq	r0, [r0, #-0]
    5c60:	0000af04 	andeq	sl, r0, r4, lsl #30
    5c64:	35040500 	strcc	r0, [r4, #-1280]	; 0xfffffb00
    5c68:	06000001 	streq	r0, [r0], -r1
    5c6c:	00000738 	andeq	r0, r0, r8, lsr r7
    5c70:	00af1504 	adceq	r1, pc, r4, lsl #10
    5c74:	620b0000 	andvs	r0, fp, #0
    5c78:	62000001 	andvs	r0, r0, #1
    5c7c:	0c000001 	stceq	0, cr0, [r0], {1}
    5c80:	4c040500 	cfstr32mi	mvfx0, [r4], {-0}
    5c84:	0d000001 	stceq	0, cr0, [r0, #-4]
    5c88:	0000059a 	muleq	r0, sl, r5
    5c8c:	01571c04 	cmpeq	r7, r4, lsl #24
    5c90:	5a0d0000 	bpl	345c98 <startup-0x1fcba368>
    5c94:	04000004 	streq	r0, [r0], #-4
    5c98:	00012e1d 	andeq	r2, r1, sp, lsl lr
    5c9c:	005b0b00 	subseq	r0, fp, r0, lsl #22
    5ca0:	018e0000 	orreq	r0, lr, r0
    5ca4:	8e0e0000 	cdphi	0, 0, cr0, cr14, cr0, {0}
    5ca8:	44000001 	strmi	r0, [r0], #-1
    5cac:	07040400 	streq	r0, [r4, -r0, lsl #8]
    5cb0:	0000043c 	andeq	r0, r0, ip, lsr r4
    5cb4:	0027280f 	eoreq	r2, r7, pc, lsl #16
    5cb8:	7e030500 	cfsh32vc	mvfx0, mvfx3, #0
    5cbc:	05000001 	streq	r0, [r0, #-1]
    5cc0:	01547803 	cmpeq	r4, r3, lsl #16
    5cc4:	27dc0f20 	ldrbcs	r0, [ip, r0, lsr #30]
    5cc8:	03060000 	movweq	r0, #24576	; 0x6000
    5ccc:	0000017e 	andeq	r0, r0, lr, ror r1
    5cd0:	54c00305 	strbpl	r0, [r0], #773	; 0x305
    5cd4:	ec0f2001 	stc	0, cr2, [pc], {1}
    5cd8:	07000027 	streq	r0, [r0, -r7, lsr #32]
    5cdc:	00017e03 	andeq	r7, r1, r3, lsl #28
    5ce0:	08030500 	stmdaeq	r3, {r8, sl}
    5ce4:	04200155 	strteq	r0, [r0], #-341	; 0xfffffeab
    5ce8:	03b90702 			; <UNDEFINED> instruction: 0x03b90702
    5cec:	fd100000 	ldc2	0, cr0, [r0, #-0]
    5cf0:	01000027 	tsteq	r0, r7, lsr #32
    5cf4:	00009e0b 	andeq	r9, r0, fp, lsl #28
    5cf8:	cc030500 	cfstr32gt	mvfx0, [r3], {-0}
    5cfc:	10200083 	eorne	r0, r0, r3, lsl #1
    5d00:	000027d2 	ldrdeq	r2, [r0], -r2	; <UNPREDICTABLE>
    5d04:	009e0c01 	addseq	r0, lr, r1, lsl #24
    5d08:	03050000 	movweq	r0, #20480	; 0x5000
    5d0c:	2000837c 	andcs	r8, r0, ip, ror r3
    5d10:	00281610 	eoreq	r1, r8, r0, lsl r6
    5d14:	9e0d0100 	adflse	f0, f5, f0
    5d18:	05000000 	streq	r0, [r0, #-0]
    5d1c:	00838c03 	addeq	r8, r3, r3, lsl #24
    5d20:	28401020 	stmdacs	r0, {r5, ip}^
    5d24:	0f010000 	svceq	0x00010000
    5d28:	00000062 	andeq	r0, r0, r2, rrx
    5d2c:	83d00305 	bicshi	r0, r0, #335544320	; 0x14000000
    5d30:	5d102000 	ldcpl	0, cr2, [r0, #-0]
    5d34:	01000027 	tsteq	r0, r7, lsr #32
    5d38:	00006210 	andeq	r6, r0, r0, lsl r2
    5d3c:	90030500 	andls	r0, r3, r0, lsl #10
    5d40:	10200083 	eorne	r0, r0, r3, lsl #1
    5d44:	00002808 	andeq	r2, r0, r8, lsl #16
    5d48:	00621101 	rsbeq	r1, r2, r1, lsl #2
    5d4c:	03050000 	movweq	r0, #20480	; 0x5000
    5d50:	20008380 	andcs	r8, r0, r0, lsl #7
    5d54:	00278f10 	eoreq	r8, r7, r0, lsl pc
    5d58:	4c140100 	ldfmis	f0, [r4], {-0}
    5d5c:	05000001 	streq	r0, [r0, #-1]
    5d60:	00839c03 	addeq	r9, r3, r3, lsl #24
    5d64:	27521020 	ldrbcs	r1, [r2, -r0, lsr #32]
    5d68:	15010000 	strne	r0, [r1, #-0]
    5d6c:	000000a4 	andeq	r0, r0, r4, lsr #1
    5d70:	83c00305 	bichi	r0, r0, #335544320	; 0x14000000
    5d74:	a40b2000 	strge	r2, [fp], #-0
    5d78:	67000000 	strvs	r0, [r0, -r0]
    5d7c:	0e000002 	cdpeq	0, 0, cr0, cr0, cr2, {0}
    5d80:	0000018e 	andeq	r0, r0, lr, lsl #3
    5d84:	39100000 	ldmdbcc	r0, {}	; <UNPREDICTABLE>
    5d88:	01000027 	tsteq	r0, r7, lsr #32
    5d8c:	00025716 	andeq	r5, r2, r6, lsl r7
    5d90:	dc030500 	cfstr32le	mvfx0, [r3], {-0}
    5d94:	10200083 	eorne	r0, r0, r3, lsl #1
    5d98:	00002745 	andeq	r2, r0, r5, asr #14
    5d9c:	012e3801 			; <UNDEFINED> instruction: 0x012e3801
    5da0:	03050000 	movweq	r0, #20480	; 0x5000
    5da4:	20005790 	mulcs	r0, r0, r7
    5da8:	0027c610 	eoreq	ip, r7, r0, lsl r6
    5dac:	2e390100 	rsfcse	f0, f1, f0
    5db0:	05000001 	streq	r0, [r0, #-1]
    5db4:	00579403 	subseq	r9, r7, r3, lsl #8
    5db8:	28211020 	stmdacs	r1!, {r5, ip}
    5dbc:	3a010000 	bcc	45dc4 <startup-0x1ffba23c>
    5dc0:	0000012e 	andeq	r0, r0, lr, lsr #2
    5dc4:	55500305 	ldrbpl	r0, [r0, #-773]	; 0xfffffcfb
    5dc8:	1a102001 	bne	40ddd4 <startup-0x1fbf222c>
    5dcc:	01000027 	tsteq	r0, r7, lsr #32
    5dd0:	00012e3b 	andeq	r2, r1, fp, lsr lr
    5dd4:	54030500 	strpl	r0, [r3], #-1280	; 0xfffffb00
    5dd8:	10200155 	eorne	r0, r0, r5, asr r1
    5ddc:	0000282f 	andeq	r2, r0, pc, lsr #16
    5de0:	012e3c01 			; <UNDEFINED> instruction: 0x012e3c01
    5de4:	03050000 	movweq	r0, #20480	; 0x5000
    5de8:	20005798 	mulcs	r0, r8, r7
    5dec:	00277811 	eoreq	r7, r7, r1, lsl r8
    5df0:	b0470100 	sublt	r0, r7, r0, lsl #2
    5df4:	b4200054 	strtlt	r0, [r0], #-84	; 0xffffffac
    5df8:	01000000 	mrseq	r0, (UNDEF: 0)
    5dfc:	0002f19c 	muleq	r2, ip, r1
    5e00:	07ea1200 	strbeq	r1, [sl, r0, lsl #4]!
    5e04:	47010000 	strmi	r0, [r1, -r0]
    5e08:	00000162 	andeq	r0, r0, r2, ror #2
    5e0c:	00749102 	rsbseq	r9, r4, r2, lsl #2
    5e10:	00276c13 	eoreq	r6, r7, r3, lsl ip
    5e14:	743e0100 	ldrtvc	r0, [lr], #-256	; 0xffffff00
    5e18:	3c200054 	stccc	0, cr0, [r0], #-336	; 0xfffffeb0
    5e1c:	01000000 	mrseq	r0, (UNDEF: 0)
    5e20:	2784119c 			; <UNDEFINED> instruction: 0x2784119c
    5e24:	25010000 	strcs	r0, [r1, #-0]
    5e28:	20005400 	andcs	r5, r0, r0, lsl #8
    5e2c:	00000074 	andeq	r0, r0, r4, ror r0
    5e30:	03379c01 	teqeq	r7, #256	; 0x100
    5e34:	8f120000 	svchi	0x00120000
    5e38:	01000027 	tsteq	r0, r7, lsr #32
    5e3c:	00016225 	andeq	r6, r1, r5, lsr #4
    5e40:	6c910200 	lfmvs	f0, 4, [r1], {0}
    5e44:	0009710f 	andeq	r7, r9, pc, lsl #2
    5e48:	2e260100 	sufcss	f0, f6, f0
    5e4c:	05000001 	streq	r0, [r0, #-1]
    5e50:	01555803 	cmpeq	r5, r3, lsl #16
    5e54:	ed140020 	ldc	0, cr0, [r4, #-128]	; 0xffffff80
    5e58:	01000004 	tsteq	r0, r4
    5e5c:	00538c17 	subseq	r8, r3, r7, lsl ip
    5e60:	00007420 	andeq	r7, r0, r0, lsr #8
    5e64:	0f9c0100 	svceq	0x009c0100
    5e68:	00000e12 	andeq	r0, r0, r2, lsl lr
    5e6c:	009e1901 	addseq	r1, lr, r1, lsl #18
    5e70:	91020000 	mrsls	r0, (UNDEF: 2)
    5e74:	0e1c0f74 	mrceq	15, 0, r0, cr12, cr4, {3}
    5e78:	1c010000 	stcne	0, cr0, [r1], {-0}
    5e7c:	0000009e 	muleq	r0, lr, r0
    5e80:	0f709102 	svceq	0x00709102
    5e84:	00000c12 	andeq	r0, r0, r2, lsl ip
    5e88:	009e1f01 	addseq	r1, lr, r1, lsl #30
    5e8c:	91020000 	mrsls	r0, (UNDEF: 2)
    5e90:	Address 0x00005e90 is out of bounds.


Disassembly of section .debug_abbrev:

00000000 <.debug_abbrev>:
       0:	25011101 	strcs	r1, [r1, #-257]	; 0xfffffeff
       4:	030b130e 	movweq	r1, #45838	; 0xb30e
       8:	1117550e 	tstne	r7, lr, lsl #10
       c:	00171001 	andseq	r1, r7, r1
      10:	01130200 	tsteq	r3, r0, lsl #4
      14:	0b3a0b0b 	bleq	e82c48 <startup-0x1f17d3b8>
      18:	13010b3b 	movwne	r0, #6971	; 0x1b3b
      1c:	0d030000 	stceq	0, cr0, [r3, #-0]
      20:	3a0e0300 	bcc	380c28 <startup-0x1fc7f3d8>
      24:	490b3b0b 	stmdbmi	fp, {r0, r1, r3, r8, r9, fp, ip, sp}
      28:	000b3813 	andeq	r3, fp, r3, lsl r8
      2c:	00240400 	eoreq	r0, r4, r0, lsl #8
      30:	0b3e0b0b 	bleq	f82c64 <startup-0x1f07d39c>
      34:	00000e03 	andeq	r0, r0, r3, lsl #28
      38:	0b000f05 	bleq	3c54 <startup-0x1fffc3ac>
      3c:	0013490b 	andseq	r4, r3, fp, lsl #18
      40:	00160600 	andseq	r0, r6, r0, lsl #12
      44:	0b3a0e03 	bleq	e83858 <startup-0x1f17c7a8>
      48:	13490b3b 	movtne	r0, #39739	; 0x9b3b
      4c:	13070000 	movwne	r0, #28672	; 0x7000
      50:	0b0e0301 	bleq	380c5c <startup-0x1fc7f3a4>
      54:	3b0b3a0b 	blcc	2ce888 <startup-0x1fd31778>
      58:	0013010b 	andseq	r0, r3, fp, lsl #2
      5c:	00240800 	eoreq	r0, r4, r0, lsl #16
      60:	0b3e0b0b 	bleq	f82c94 <startup-0x1f07d36c>
      64:	00000803 	andeq	r0, r0, r3, lsl #16
      68:	27011509 	strcs	r1, [r1, -r9, lsl #10]
      6c:	00130119 	andseq	r0, r3, r9, lsl r1
      70:	00050a00 	andeq	r0, r5, r0, lsl #20
      74:	00001349 	andeq	r1, r0, r9, asr #6
      78:	4901010b 	stmdbmi	r1, {r0, r1, r3, r8}
      7c:	00130113 	andseq	r0, r3, r3, lsl r1
      80:	00210c00 	eoreq	r0, r1, r0, lsl #24
      84:	340d0000 	strcc	r0, [sp], #-0
      88:	3a0e0300 	bcc	380c90 <startup-0x1fc7f370>
      8c:	490b3b0b 	stmdbmi	fp, {r0, r1, r3, r8, r9, fp, ip, sp}
      90:	3c193f13 	ldccc	15, cr3, [r9], {19}
      94:	0e000019 	mcreq	0, 0, r0, cr0, cr9, {0}
      98:	13490021 	movtne	r0, #36897	; 0x9021
      9c:	0000052f 	andeq	r0, r0, pc, lsr #10
      a0:	4900210f 	stmdbmi	r0, {r0, r1, r2, r3, r8, sp}
      a4:	000b2f13 	andeq	r2, fp, r3, lsl pc
      a8:	00341000 	eorseq	r1, r4, r0
      ac:	0b3a0e03 	bleq	e838c0 <startup-0x1f17c740>
      b0:	13490b3b 	movtne	r0, #39739	; 0x9b3b
      b4:	1802193f 	stmdane	r2, {r0, r1, r2, r3, r4, r5, r8, fp, ip}
      b8:	34110000 	ldrcc	r0, [r1], #-0
      bc:	3a0e0300 	bcc	380cc4 <startup-0x1fc7f33c>
      c0:	490b3b0b 	stmdbmi	fp, {r0, r1, r3, r8, r9, fp, ip, sp}
      c4:	00180213 	andseq	r0, r8, r3, lsl r2
      c8:	00341200 	eorseq	r1, r4, r0, lsl #4
      cc:	0b3a0803 	bleq	e820e0 <startup-0x1f17df20>
      d0:	13490b3b 	movtne	r0, #39739	; 0x9b3b
      d4:	1802193f 	stmdane	r2, {r0, r1, r2, r3, r4, r5, r8, fp, ip}
      d8:	2e130000 	cdpcs	0, 1, cr0, cr3, cr0, {0}
      dc:	03193f01 	tsteq	r9, #1, 30
      e0:	3b0b3a08 	blcc	2ce908 <startup-0x1fd316f8>
      e4:	49192705 	ldmdbmi	r9, {r0, r2, r8, r9, sl, sp}
      e8:	12011113 	andne	r1, r1, #-1073741820	; 0xc0000004
      ec:	97184006 	ldrls	r4, [r8, -r6]
      f0:	13011942 	movwne	r1, #6466	; 0x1942
      f4:	05140000 	ldreq	r0, [r4, #-0]
      f8:	3a0e0300 	bcc	380d00 <startup-0x1fc7f300>
      fc:	49053b0b 	stmdbmi	r5, {r0, r1, r3, r8, r9, fp, ip, sp}
     100:	00180213 	andseq	r0, r8, r3, lsl r2
     104:	012e1500 			; <UNDEFINED> instruction: 0x012e1500
     108:	0e03193f 			; <UNDEFINED> instruction: 0x0e03193f
     10c:	0b3b0b3a 	bleq	ec2dfc <startup-0x1f13d204>
     110:	01111927 	tsteq	r1, r7, lsr #18
     114:	18400612 	stmdane	r0, {r1, r4, r9, sl}^
     118:	01194296 			; <UNDEFINED> instruction: 0x01194296
     11c:	16000013 			; <UNDEFINED> instruction: 0x16000013
     120:	193f012e 	ldmdbne	pc!, {r1, r2, r3, r5, r8}	; <UNPREDICTABLE>
     124:	0b3a0e03 	bleq	e83938 <startup-0x1f17c6c8>
     128:	13490b3b 	movtne	r0, #39739	; 0x9b3b
     12c:	1301193c 	movwne	r1, #6460	; 0x193c
     130:	18170000 	ldmdane	r7, {}	; <UNPREDICTABLE>
     134:	18000000 	stmdane	r0, {}	; <UNPREDICTABLE>
     138:	08030034 	stmdaeq	r3, {r2, r4, r5}
     13c:	0b3b0b3a 	bleq	ec2e2c <startup-0x1f13d1d4>
     140:	18021349 	stmdane	r2, {r0, r3, r6, r8, r9, ip}
     144:	34190000 	ldrcc	r0, [r9], #-0
     148:	3a0e0300 	bcc	380d50 <startup-0x1fc7f2b0>
     14c:	49053b0b 	stmdbmi	r5, {r0, r1, r3, r8, r9, fp, ip, sp}
     150:	00180213 	andseq	r0, r8, r3, lsl r2
     154:	010b1a00 	tsteq	fp, r0, lsl #20
     158:	06120111 			; <UNDEFINED> instruction: 0x06120111
     15c:	341b0000 	ldrcc	r0, [fp], #-0
     160:	3a080300 	bcc	200d68 <startup-0x1fdff298>
     164:	49053b0b 	stmdbmi	r5, {r0, r1, r3, r8, r9, fp, ip, sp}
     168:	00180213 	andseq	r0, r8, r3, lsl r2
     16c:	002e1c00 	eoreq	r1, lr, r0, lsl #24
     170:	0e03193f 			; <UNDEFINED> instruction: 0x0e03193f
     174:	0b3b0b3a 	bleq	ec2e64 <startup-0x1f13d19c>
     178:	01111927 	tsteq	r1, r7, lsr #18
     17c:	18400612 	stmdane	r0, {r1, r4, r9, sl}^
     180:	00194296 	mulseq	r9, r6, r2
     184:	002e1d00 	eoreq	r1, lr, r0, lsl #26
     188:	0e03193f 			; <UNDEFINED> instruction: 0x0e03193f
     18c:	0b3b0b3a 	bleq	ec2e7c <startup-0x1f13d184>
     190:	01111927 	tsteq	r1, r7, lsr #18
     194:	18400612 	stmdane	r0, {r1, r4, r9, sl}^
     198:	00194297 	mulseq	r9, r7, r2
     19c:	11010000 	mrsne	r0, (UNDEF: 1)
     1a0:	130e2501 	movwne	r2, #58625	; 0xe501
     1a4:	110e030b 	tstne	lr, fp, lsl #6
     1a8:	10061201 	andne	r1, r6, r1, lsl #4
     1ac:	02000017 	andeq	r0, r0, #23
     1b0:	0b0b0113 	bleq	2c0604 <startup-0x1fd3f9fc>
     1b4:	0b3b0b3a 	bleq	ec2ea4 <startup-0x1f13d15c>
     1b8:	00001301 	andeq	r1, r0, r1, lsl #6
     1bc:	03000d03 	movweq	r0, #3331	; 0xd03
     1c0:	3b0b3a0e 	blcc	2cea00 <startup-0x1fd31600>
     1c4:	3813490b 	ldmdacc	r3, {r0, r1, r3, r8, fp, lr}
     1c8:	0400000b 	streq	r0, [r0], #-11
     1cc:	0b0b0024 	bleq	2c0264 <startup-0x1fd3fd9c>
     1d0:	0e030b3e 	vmoveq.16	d3[0], r0
     1d4:	0f050000 	svceq	0x00050000
     1d8:	490b0b00 	stmdbmi	fp, {r8, r9, fp}
     1dc:	06000013 			; <UNDEFINED> instruction: 0x06000013
     1e0:	0e030016 	mcreq	0, 0, r0, cr3, cr6, {0}
     1e4:	0b3b0b3a 	bleq	ec2ed4 <startup-0x1f13d12c>
     1e8:	00001349 	andeq	r1, r0, r9, asr #6
     1ec:	03011307 	movweq	r1, #4871	; 0x1307
     1f0:	3a0b0b0e 	bcc	2c2e30 <startup-0x1fd3d1d0>
     1f4:	010b3b0b 	tsteq	fp, fp, lsl #22
     1f8:	08000013 	stmdaeq	r0, {r0, r1, r4}
     1fc:	0b0b0024 	bleq	2c0294 <startup-0x1fd3fd6c>
     200:	08030b3e 	stmdaeq	r3, {r1, r2, r3, r4, r5, r8, r9, fp}
     204:	15090000 	strne	r0, [r9, #-0]
     208:	01192701 	tsteq	r9, r1, lsl #14
     20c:	0a000013 	beq	260 <startup-0x1ffffda0>
     210:	13490005 	movtne	r0, #36869	; 0x9005
     214:	010b0000 	mrseq	r0, (UNDEF: 11)
     218:	01134901 	tsteq	r3, r1, lsl #18
     21c:	0c000013 	stceq	0, cr0, [r0], {19}
     220:	00000021 	andeq	r0, r0, r1, lsr #32
     224:	0300340d 	movweq	r3, #1037	; 0x40d
     228:	3b0b3a0e 	blcc	2cea68 <startup-0x1fd31598>
     22c:	3f13490b 	svccc	0x0013490b
     230:	00193c19 	andseq	r3, r9, r9, lsl ip
     234:	00340e00 	eorseq	r0, r4, r0, lsl #28
     238:	0b3a1347 	bleq	e84f5c <startup-0x1f17b0a4>
     23c:	18020b3b 	stmdane	r2, {r0, r1, r3, r4, r5, r8, r9, fp}
     240:	2e0f0000 	cdpcs	0, 0, cr0, cr15, cr0, {0}
     244:	03193f01 	tsteq	r9, #1, 30
     248:	3b0b3a0e 	blcc	2cea88 <startup-0x1fd31578>
     24c:	1119270b 	tstne	r9, fp, lsl #14
     250:	40061201 	andmi	r1, r6, r1, lsl #4
     254:	19429618 	stmdbne	r2, {r3, r4, r9, sl, ip, pc}^
     258:	00001301 	andeq	r1, r0, r1, lsl #6
     25c:	03000510 	movweq	r0, #1296	; 0x510
     260:	3b0b3a0e 	blcc	2ceaa0 <startup-0x1fd31560>
     264:	0213490b 	andseq	r4, r3, #180224	; 0x2c000
     268:	11000018 	tstne	r0, r8, lsl r0
     26c:	193f012e 	ldmdbne	pc!, {r1, r2, r3, r5, r8}	; <UNPREDICTABLE>
     270:	0b3a0e03 	bleq	e83a84 <startup-0x1f17c57c>
     274:	19270b3b 	stmdbne	r7!, {r0, r1, r3, r4, r5, r8, r9, fp}
     278:	06120111 			; <UNDEFINED> instruction: 0x06120111
     27c:	42971840 	addsmi	r1, r7, #64, 16	; 0x400000
     280:	00000019 	andeq	r0, r0, r9, lsl r0
     284:	25011101 	strcs	r1, [r1, #-257]	; 0xfffffeff
     288:	030b130e 	movweq	r1, #45838	; 0xb30e
     28c:	1201110e 	andne	r1, r1, #-2147483645	; 0x80000003
     290:	00171006 	andseq	r1, r7, r6
     294:	01130200 	tsteq	r3, r0, lsl #4
     298:	0b3a0b0b 	bleq	e82ecc <startup-0x1f17d134>
     29c:	13010b3b 	movwne	r0, #6971	; 0x1b3b
     2a0:	0d030000 	stceq	0, cr0, [r3, #-0]
     2a4:	3a0e0300 	bcc	380eac <startup-0x1fc7f154>
     2a8:	490b3b0b 	stmdbmi	fp, {r0, r1, r3, r8, r9, fp, ip, sp}
     2ac:	000b3813 	andeq	r3, fp, r3, lsl r8
     2b0:	00240400 	eoreq	r0, r4, r0, lsl #8
     2b4:	0b3e0b0b 	bleq	f82ee8 <startup-0x1f07d118>
     2b8:	00000e03 	andeq	r0, r0, r3, lsl #28
     2bc:	0b000f05 	bleq	3ed8 <startup-0x1fffc128>
     2c0:	0013490b 	andseq	r4, r3, fp, lsl #18
     2c4:	00160600 	andseq	r0, r6, r0, lsl #12
     2c8:	0b3a0e03 	bleq	e83adc <startup-0x1f17c524>
     2cc:	13490b3b 	movtne	r0, #39739	; 0x9b3b
     2d0:	13070000 	movwne	r0, #28672	; 0x7000
     2d4:	0b0e0301 	bleq	380ee0 <startup-0x1fc7f120>
     2d8:	3b0b3a0b 	blcc	2ceb0c <startup-0x1fd314f4>
     2dc:	0013010b 	andseq	r0, r3, fp, lsl #2
     2e0:	00240800 	eoreq	r0, r4, r0, lsl #16
     2e4:	0b3e0b0b 	bleq	f82f18 <startup-0x1f07d0e8>
     2e8:	00000803 	andeq	r0, r0, r3, lsl #16
     2ec:	27011509 	strcs	r1, [r1, -r9, lsl #10]
     2f0:	00130119 	andseq	r0, r3, r9, lsl r1
     2f4:	00050a00 	andeq	r0, r5, r0, lsl #20
     2f8:	00001349 	andeq	r1, r0, r9, asr #6
     2fc:	4901010b 	stmdbmi	r1, {r0, r1, r3, r8}
     300:	00130113 	andseq	r0, r3, r3, lsl r1
     304:	00210c00 	eoreq	r0, r1, r0, lsl #24
     308:	340d0000 	strcc	r0, [sp], #-0
     30c:	3a0e0300 	bcc	380f14 <startup-0x1fc7f0ec>
     310:	490b3b0b 	stmdbmi	fp, {r0, r1, r3, r8, r9, fp, ip, sp}
     314:	3c193f13 	ldccc	15, cr3, [r9], {19}
     318:	0e000019 	mcreq	0, 0, r0, cr0, cr9, {0}
     31c:	13490021 	movtne	r0, #36897	; 0x9021
     320:	00000b2f 	andeq	r0, r0, pc, lsr #22
     324:	0300340f 	movweq	r3, #1039	; 0x40f
     328:	3b0b3a0e 	blcc	2ceb68 <startup-0x1fd31498>
     32c:	0213490b 	andseq	r4, r3, #180224	; 0x2c000
     330:	10000018 	andne	r0, r0, r8, lsl r0
     334:	0e030034 	mcreq	0, 0, r0, cr3, cr4, {1}
     338:	0b3b0b3a 	bleq	ec3028 <startup-0x1f13cfd8>
     33c:	193f1349 	ldmdbne	pc!, {r0, r3, r6, r8, r9, ip}	; <UNPREDICTABLE>
     340:	00001802 	andeq	r1, r0, r2, lsl #16
     344:	3f012e11 	svccc	0x00012e11
     348:	3a0e0319 	bcc	380fb4 <startup-0x1fc7f04c>
     34c:	270b3b0b 	strcs	r3, [fp, -fp, lsl #22]
     350:	12011119 	andne	r1, r1, #1073741830	; 0x40000006
     354:	96184006 	ldrls	r4, [r8], -r6
     358:	13011942 	movwne	r1, #6466	; 0x1942
     35c:	05120000 	ldreq	r0, [r2, #-0]
     360:	3a0e0300 	bcc	380f68 <startup-0x1fc7f098>
     364:	490b3b0b 	stmdbmi	fp, {r0, r1, r3, r8, r9, fp, ip, sp}
     368:	00180213 	andseq	r0, r8, r3, lsl r2
     36c:	012e1300 			; <UNDEFINED> instruction: 0x012e1300
     370:	0b3a0e03 	bleq	e83b84 <startup-0x1f17c47c>
     374:	19270b3b 	stmdbne	r7!, {r0, r1, r3, r4, r5, r8, r9, fp}
     378:	06120111 			; <UNDEFINED> instruction: 0x06120111
     37c:	42961840 	addsmi	r1, r6, #64, 16	; 0x400000
     380:	00000019 	andeq	r0, r0, r9, lsl r0
     384:	25011101 	strcs	r1, [r1, #-257]	; 0xfffffeff
     388:	030b130e 	movweq	r1, #45838	; 0xb30e
     38c:	1201110e 	andne	r1, r1, #-2147483645	; 0x80000003
     390:	00171006 	andseq	r1, r7, r6
     394:	00240200 	eoreq	r0, r4, r0, lsl #4
     398:	0b3e0b0b 	bleq	f82fcc <startup-0x1f07d034>
     39c:	00000e03 	andeq	r0, r0, r3, lsl #28
     3a0:	0b011303 	bleq	44fb4 <startup-0x1ffbb04c>
     3a4:	3b0b3a0b 	blcc	2cebd8 <startup-0x1fd31428>
     3a8:	0013010b 	andseq	r0, r3, fp, lsl #2
     3ac:	000d0400 	andeq	r0, sp, r0, lsl #8
     3b0:	0b3a0e03 	bleq	e83bc4 <startup-0x1f17c43c>
     3b4:	13490b3b 	movtne	r0, #39739	; 0x9b3b
     3b8:	00000b38 	andeq	r0, r0, r8, lsr fp
     3bc:	0b000f05 	bleq	3fd8 <startup-0x1fffc028>
     3c0:	0013490b 	andseq	r4, r3, fp, lsl #18
     3c4:	00160600 	andseq	r0, r6, r0, lsl #12
     3c8:	0b3a0e03 	bleq	e83bdc <startup-0x1f17c424>
     3cc:	13490b3b 	movtne	r0, #39739	; 0x9b3b
     3d0:	13070000 	movwne	r0, #28672	; 0x7000
     3d4:	0b0e0301 	bleq	380fe0 <startup-0x1fc7f020>
     3d8:	3b0b3a0b 	blcc	2cec0c <startup-0x1fd313f4>
     3dc:	0013010b 	andseq	r0, r3, fp, lsl #2
     3e0:	00240800 	eoreq	r0, r4, r0, lsl #16
     3e4:	0b3e0b0b 	bleq	f83018 <startup-0x1f07cfe8>
     3e8:	00000803 	andeq	r0, r0, r3, lsl #16
     3ec:	27011509 	strcs	r1, [r1, -r9, lsl #10]
     3f0:	00130119 	andseq	r0, r3, r9, lsl r1
     3f4:	00050a00 	andeq	r0, r5, r0, lsl #20
     3f8:	00001349 	andeq	r1, r0, r9, asr #6
     3fc:	4901010b 	stmdbmi	r1, {r0, r1, r3, r8}
     400:	00130113 	andseq	r0, r3, r3, lsl r1
     404:	00210c00 	eoreq	r0, r1, r0, lsl #24
     408:	340d0000 	strcc	r0, [sp], #-0
     40c:	3a0e0300 	bcc	381014 <startup-0x1fc7efec>
     410:	490b3b0b 	stmdbmi	fp, {r0, r1, r3, r8, r9, fp, ip, sp}
     414:	3c193f13 	ldccc	15, cr3, [r9], {19}
     418:	0e000019 	mcreq	0, 0, r0, cr0, cr9, {0}
     41c:	0e030034 	mcreq	0, 0, r0, cr3, cr4, {1}
     420:	0b3b0b3a 	bleq	ec3110 <startup-0x1f13cef0>
     424:	18021349 	stmdane	r2, {r0, r3, r6, r8, r9, ip}
     428:	2e0f0000 	cdpcs	0, 0, cr0, cr15, cr0, {0}
     42c:	03193f01 	tsteq	r9, #1, 30
     430:	3b0b3a0e 	blcc	2cec70 <startup-0x1fd31390>
     434:	1119270b 	tstne	r9, fp, lsl #14
     438:	40061201 	andmi	r1, r6, r1, lsl #4
     43c:	19429618 	stmdbne	r2, {r3, r4, r9, sl, ip, pc}^
     440:	00001301 	andeq	r1, r0, r1, lsl #6
     444:	03000510 	movweq	r0, #1296	; 0x510
     448:	3b0b3a0e 	blcc	2cec88 <startup-0x1fd31378>
     44c:	0213490b 	andseq	r4, r3, #180224	; 0x2c000
     450:	11000018 	tstne	r0, r8, lsl r0
     454:	193f002e 	ldmdbne	pc!, {r1, r2, r3, r5}	; <UNPREDICTABLE>
     458:	0b3a0e03 	bleq	e83c6c <startup-0x1f17c394>
     45c:	19270b3b 	stmdbne	r7!, {r0, r1, r3, r4, r5, r8, r9, fp}
     460:	06120111 			; <UNDEFINED> instruction: 0x06120111
     464:	42971840 	addsmi	r1, r7, #64, 16	; 0x400000
     468:	00000019 	andeq	r0, r0, r9, lsl r0
     46c:	25011101 	strcs	r1, [r1, #-257]	; 0xfffffeff
     470:	030b130e 	movweq	r1, #45838	; 0xb30e
     474:	1201110e 	andne	r1, r1, #-2147483645	; 0x80000003
     478:	00171006 	andseq	r1, r7, r6
     47c:	01130200 	tsteq	r3, r0, lsl #4
     480:	0b3a0b0b 	bleq	e830b4 <startup-0x1f17cf4c>
     484:	13010b3b 	movwne	r0, #6971	; 0x1b3b
     488:	0d030000 	stceq	0, cr0, [r3, #-0]
     48c:	3a0e0300 	bcc	381094 <startup-0x1fc7ef6c>
     490:	490b3b0b 	stmdbmi	fp, {r0, r1, r3, r8, r9, fp, ip, sp}
     494:	000b3813 	andeq	r3, fp, r3, lsl r8
     498:	00240400 	eoreq	r0, r4, r0, lsl #8
     49c:	0b3e0b0b 	bleq	f830d0 <startup-0x1f07cf30>
     4a0:	00000e03 	andeq	r0, r0, r3, lsl #28
     4a4:	0b000f05 	bleq	40c0 <startup-0x1fffbf40>
     4a8:	0013490b 	andseq	r4, r3, fp, lsl #18
     4ac:	00160600 	andseq	r0, r6, r0, lsl #12
     4b0:	0b3a0e03 	bleq	e83cc4 <startup-0x1f17c33c>
     4b4:	13490b3b 	movtne	r0, #39739	; 0x9b3b
     4b8:	13070000 	movwne	r0, #28672	; 0x7000
     4bc:	0b0e0301 	bleq	3810c8 <startup-0x1fc7ef38>
     4c0:	3b0b3a0b 	blcc	2cecf4 <startup-0x1fd3130c>
     4c4:	0013010b 	andseq	r0, r3, fp, lsl #2
     4c8:	00240800 	eoreq	r0, r4, r0, lsl #16
     4cc:	0b3e0b0b 	bleq	f83100 <startup-0x1f07cf00>
     4d0:	00000803 	andeq	r0, r0, r3, lsl #16
     4d4:	27011509 	strcs	r1, [r1, -r9, lsl #10]
     4d8:	00130119 	andseq	r0, r3, r9, lsl r1
     4dc:	00050a00 	andeq	r0, r5, r0, lsl #20
     4e0:	00001349 	andeq	r1, r0, r9, asr #6
     4e4:	4901010b 	stmdbmi	r1, {r0, r1, r3, r8}
     4e8:	00130113 	andseq	r0, r3, r3, lsl r1
     4ec:	00210c00 	eoreq	r0, r1, r0, lsl #24
     4f0:	340d0000 	strcc	r0, [sp], #-0
     4f4:	3a0e0300 	bcc	3810fc <startup-0x1fc7ef04>
     4f8:	490b3b0b 	stmdbmi	fp, {r0, r1, r3, r8, r9, fp, ip, sp}
     4fc:	3c193f13 	ldccc	15, cr3, [r9], {19}
     500:	0e000019 	mcreq	0, 0, r0, cr0, cr9, {0}
     504:	13490021 	movtne	r0, #36897	; 0x9021
     508:	00000b2f 	andeq	r0, r0, pc, lsr #22
     50c:	0300340f 	movweq	r3, #1039	; 0x40f
     510:	3b0b3a0e 	blcc	2ced50 <startup-0x1fd312b0>
     514:	0213490b 	andseq	r4, r3, #180224	; 0x2c000
     518:	10000018 	andne	r0, r0, r8, lsl r0
     51c:	0e030034 	mcreq	0, 0, r0, cr3, cr4, {1}
     520:	0b3b0b3a 	bleq	ec3210 <startup-0x1f13cdf0>
     524:	193f1349 	ldmdbne	pc!, {r0, r3, r6, r8, r9, ip}	; <UNPREDICTABLE>
     528:	00001802 	andeq	r1, r0, r2, lsl #16
     52c:	3f012e11 	svccc	0x00012e11
     530:	3a0e0319 	bcc	38119c <startup-0x1fc7ee64>
     534:	270b3b0b 	strcs	r3, [fp, -fp, lsl #22]
     538:	12011119 	andne	r1, r1, #1073741830	; 0x40000006
     53c:	96184006 	ldrls	r4, [r8], -r6
     540:	13011942 	movwne	r1, #6466	; 0x1942
     544:	05120000 	ldreq	r0, [r2, #-0]
     548:	3a0e0300 	bcc	381150 <startup-0x1fc7eeb0>
     54c:	490b3b0b 	stmdbmi	fp, {r0, r1, r3, r8, r9, fp, ip, sp}
     550:	00180213 	andseq	r0, r8, r3, lsl r2
     554:	012e1300 			; <UNDEFINED> instruction: 0x012e1300
     558:	0b3a0e03 	bleq	e83d6c <startup-0x1f17c294>
     55c:	19270b3b 	stmdbne	r7!, {r0, r1, r3, r4, r5, r8, r9, fp}
     560:	06120111 			; <UNDEFINED> instruction: 0x06120111
     564:	42961840 	addsmi	r1, r6, #64, 16	; 0x400000
     568:	00000019 	andeq	r0, r0, r9, lsl r0
     56c:	25011101 	strcs	r1, [r1, #-257]	; 0xfffffeff
     570:	030b130e 	movweq	r1, #45838	; 0xb30e
     574:	1201110e 	andne	r1, r1, #-2147483645	; 0x80000003
     578:	00171006 	andseq	r1, r7, r6
     57c:	01130200 	tsteq	r3, r0, lsl #4
     580:	0b3a0b0b 	bleq	e831b4 <startup-0x1f17ce4c>
     584:	13010b3b 	movwne	r0, #6971	; 0x1b3b
     588:	0d030000 	stceq	0, cr0, [r3, #-0]
     58c:	3a0e0300 	bcc	381194 <startup-0x1fc7ee6c>
     590:	490b3b0b 	stmdbmi	fp, {r0, r1, r3, r8, r9, fp, ip, sp}
     594:	000b3813 	andeq	r3, fp, r3, lsl r8
     598:	00240400 	eoreq	r0, r4, r0, lsl #8
     59c:	0b3e0b0b 	bleq	f831d0 <startup-0x1f07ce30>
     5a0:	00000e03 	andeq	r0, r0, r3, lsl #28
     5a4:	0b000f05 	bleq	41c0 <startup-0x1fffbe40>
     5a8:	0013490b 	andseq	r4, r3, fp, lsl #18
     5ac:	00160600 	andseq	r0, r6, r0, lsl #12
     5b0:	0b3a0e03 	bleq	e83dc4 <startup-0x1f17c23c>
     5b4:	13490b3b 	movtne	r0, #39739	; 0x9b3b
     5b8:	13070000 	movwne	r0, #28672	; 0x7000
     5bc:	0b0e0301 	bleq	3811c8 <startup-0x1fc7ee38>
     5c0:	3b0b3a0b 	blcc	2cedf4 <startup-0x1fd3120c>
     5c4:	0013010b 	andseq	r0, r3, fp, lsl #2
     5c8:	00240800 	eoreq	r0, r4, r0, lsl #16
     5cc:	0b3e0b0b 	bleq	f83200 <startup-0x1f07ce00>
     5d0:	00000803 	andeq	r0, r0, r3, lsl #16
     5d4:	27011509 	strcs	r1, [r1, -r9, lsl #10]
     5d8:	00130119 	andseq	r0, r3, r9, lsl r1
     5dc:	00050a00 	andeq	r0, r5, r0, lsl #20
     5e0:	00001349 	andeq	r1, r0, r9, asr #6
     5e4:	4901010b 	stmdbmi	r1, {r0, r1, r3, r8}
     5e8:	00130113 	andseq	r0, r3, r3, lsl r1
     5ec:	00210c00 	eoreq	r0, r1, r0, lsl #24
     5f0:	340d0000 	strcc	r0, [sp], #-0
     5f4:	3a0e0300 	bcc	3811fc <startup-0x1fc7ee04>
     5f8:	490b3b0b 	stmdbmi	fp, {r0, r1, r3, r8, r9, fp, ip, sp}
     5fc:	3c193f13 	ldccc	15, cr3, [r9], {19}
     600:	0e000019 	mcreq	0, 0, r0, cr0, cr9, {0}
     604:	13490021 	movtne	r0, #36897	; 0x9021
     608:	00000b2f 	andeq	r0, r0, pc, lsr #22
     60c:	0300340f 	movweq	r3, #1039	; 0x40f
     610:	3b0b3a0e 	blcc	2cee50 <startup-0x1fd311b0>
     614:	0213490b 	andseq	r4, r3, #180224	; 0x2c000
     618:	10000018 	andne	r0, r0, r8, lsl r0
     61c:	0e030034 	mcreq	0, 0, r0, cr3, cr4, {1}
     620:	0b3b0b3a 	bleq	ec3310 <startup-0x1f13ccf0>
     624:	193f1349 	ldmdbne	pc!, {r0, r3, r6, r8, r9, ip}	; <UNPREDICTABLE>
     628:	00001802 	andeq	r1, r0, r2, lsl #16
     62c:	3f012e11 	svccc	0x00012e11
     630:	3a0e0319 	bcc	38129c <startup-0x1fc7ed64>
     634:	270b3b0b 	strcs	r3, [fp, -fp, lsl #22]
     638:	12011119 	andne	r1, r1, #1073741830	; 0x40000006
     63c:	96184006 	ldrls	r4, [r8], -r6
     640:	13011942 	movwne	r1, #6466	; 0x1942
     644:	05120000 	ldreq	r0, [r2, #-0]
     648:	3a0e0300 	bcc	381250 <startup-0x1fc7edb0>
     64c:	490b3b0b 	stmdbmi	fp, {r0, r1, r3, r8, r9, fp, ip, sp}
     650:	00180213 	andseq	r0, r8, r3, lsl r2
     654:	012e1300 			; <UNDEFINED> instruction: 0x012e1300
     658:	0b3a0e03 	bleq	e83e6c <startup-0x1f17c194>
     65c:	19270b3b 	stmdbne	r7!, {r0, r1, r3, r4, r5, r8, r9, fp}
     660:	06120111 			; <UNDEFINED> instruction: 0x06120111
     664:	42961840 	addsmi	r1, r6, #64, 16	; 0x400000
     668:	00000019 	andeq	r0, r0, r9, lsl r0
     66c:	25011101 	strcs	r1, [r1, #-257]	; 0xfffffeff
     670:	030b130e 	movweq	r1, #45838	; 0xb30e
     674:	1201110e 	andne	r1, r1, #-2147483645	; 0x80000003
     678:	00171006 	andseq	r1, r7, r6
     67c:	01130200 	tsteq	r3, r0, lsl #4
     680:	0b3a0b0b 	bleq	e832b4 <startup-0x1f17cd4c>
     684:	13010b3b 	movwne	r0, #6971	; 0x1b3b
     688:	0d030000 	stceq	0, cr0, [r3, #-0]
     68c:	3a0e0300 	bcc	381294 <startup-0x1fc7ed6c>
     690:	490b3b0b 	stmdbmi	fp, {r0, r1, r3, r8, r9, fp, ip, sp}
     694:	000b3813 	andeq	r3, fp, r3, lsl r8
     698:	00240400 	eoreq	r0, r4, r0, lsl #8
     69c:	0b3e0b0b 	bleq	f832d0 <startup-0x1f07cd30>
     6a0:	00000e03 	andeq	r0, r0, r3, lsl #28
     6a4:	0b000f05 	bleq	42c0 <startup-0x1fffbd40>
     6a8:	0013490b 	andseq	r4, r3, fp, lsl #18
     6ac:	00160600 	andseq	r0, r6, r0, lsl #12
     6b0:	0b3a0e03 	bleq	e83ec4 <startup-0x1f17c13c>
     6b4:	13490b3b 	movtne	r0, #39739	; 0x9b3b
     6b8:	13070000 	movwne	r0, #28672	; 0x7000
     6bc:	0b0e0301 	bleq	3812c8 <startup-0x1fc7ed38>
     6c0:	3b0b3a0b 	blcc	2ceef4 <startup-0x1fd3110c>
     6c4:	0013010b 	andseq	r0, r3, fp, lsl #2
     6c8:	00240800 	eoreq	r0, r4, r0, lsl #16
     6cc:	0b3e0b0b 	bleq	f83300 <startup-0x1f07cd00>
     6d0:	00000803 	andeq	r0, r0, r3, lsl #16
     6d4:	27011509 	strcs	r1, [r1, -r9, lsl #10]
     6d8:	00130119 	andseq	r0, r3, r9, lsl r1
     6dc:	00050a00 	andeq	r0, r5, r0, lsl #20
     6e0:	00001349 	andeq	r1, r0, r9, asr #6
     6e4:	4901010b 	stmdbmi	r1, {r0, r1, r3, r8}
     6e8:	00130113 	andseq	r0, r3, r3, lsl r1
     6ec:	00210c00 	eoreq	r0, r1, r0, lsl #24
     6f0:	340d0000 	strcc	r0, [sp], #-0
     6f4:	3a0e0300 	bcc	3812fc <startup-0x1fc7ed04>
     6f8:	490b3b0b 	stmdbmi	fp, {r0, r1, r3, r8, r9, fp, ip, sp}
     6fc:	3c193f13 	ldccc	15, cr3, [r9], {19}
     700:	0e000019 	mcreq	0, 0, r0, cr0, cr9, {0}
     704:	13490021 	movtne	r0, #36897	; 0x9021
     708:	00000b2f 	andeq	r0, r0, pc, lsr #22
     70c:	0300340f 	movweq	r3, #1039	; 0x40f
     710:	3b0b3a0e 	blcc	2cef50 <startup-0x1fd310b0>
     714:	0213490b 	andseq	r4, r3, #180224	; 0x2c000
     718:	10000018 	andne	r0, r0, r8, lsl r0
     71c:	0e030034 	mcreq	0, 0, r0, cr3, cr4, {1}
     720:	0b3b0b3a 	bleq	ec3410 <startup-0x1f13cbf0>
     724:	193f1349 	ldmdbne	pc!, {r0, r3, r6, r8, r9, ip}	; <UNPREDICTABLE>
     728:	00001802 	andeq	r1, r0, r2, lsl #16
     72c:	3f012e11 	svccc	0x00012e11
     730:	3a0e0319 	bcc	38139c <startup-0x1fc7ec64>
     734:	270b3b0b 	strcs	r3, [fp, -fp, lsl #22]
     738:	12011119 	andne	r1, r1, #1073741830	; 0x40000006
     73c:	96184006 	ldrls	r4, [r8], -r6
     740:	13011942 	movwne	r1, #6466	; 0x1942
     744:	05120000 	ldreq	r0, [r2, #-0]
     748:	3a0e0300 	bcc	381350 <startup-0x1fc7ecb0>
     74c:	490b3b0b 	stmdbmi	fp, {r0, r1, r3, r8, r9, fp, ip, sp}
     750:	00180213 	andseq	r0, r8, r3, lsl r2
     754:	002e1300 	eoreq	r1, lr, r0, lsl #6
     758:	0e03193f 			; <UNDEFINED> instruction: 0x0e03193f
     75c:	0b3b0b3a 	bleq	ec344c <startup-0x1f13cbb4>
     760:	01111927 	tsteq	r1, r7, lsr #18
     764:	18400612 	stmdane	r0, {r1, r4, r9, sl}^
     768:	00194297 	mulseq	r9, r7, r2
     76c:	012e1400 			; <UNDEFINED> instruction: 0x012e1400
     770:	0e03193f 			; <UNDEFINED> instruction: 0x0e03193f
     774:	0b3b0b3a 	bleq	ec3464 <startup-0x1f13cb9c>
     778:	01111927 	tsteq	r1, r7, lsr #18
     77c:	18400612 	stmdane	r0, {r1, r4, r9, sl}^
     780:	01194297 			; <UNDEFINED> instruction: 0x01194297
     784:	15000013 	strne	r0, [r0, #-19]	; 0xffffffed
     788:	08030005 	stmdaeq	r3, {r0, r2}
     78c:	0b3b0b3a 	bleq	ec347c <startup-0x1f13cb84>
     790:	18021349 	stmdane	r2, {r0, r3, r6, r8, r9, ip}
     794:	2e160000 	cdpcs	0, 1, cr0, cr6, cr0, {0}
     798:	3a0e0301 	bcc	3813a4 <startup-0x1fc7ec5c>
     79c:	270b3b0b 	strcs	r3, [fp, -fp, lsl #22]
     7a0:	12011119 	andne	r1, r1, #1073741830	; 0x40000006
     7a4:	96184006 	ldrls	r4, [r8], -r6
     7a8:	00001942 	andeq	r1, r0, r2, asr #18
     7ac:	01110100 	tsteq	r1, r0, lsl #2
     7b0:	0b130e25 	bleq	4c404c <startup-0x1fb3bfb4>
     7b4:	01110e03 	tsteq	r1, r3, lsl #28
     7b8:	17100612 			; <UNDEFINED> instruction: 0x17100612
     7bc:	13020000 	movwne	r0, #8192	; 0x2000
     7c0:	3a0b0b01 	bcc	2c33cc <startup-0x1fd3cc34>
     7c4:	010b3b0b 	tsteq	fp, fp, lsl #22
     7c8:	03000013 	movweq	r0, #19
     7cc:	0e03000d 	cdpeq	0, 0, cr0, cr3, cr13, {0}
     7d0:	0b3b0b3a 	bleq	ec34c0 <startup-0x1f13cb40>
     7d4:	0b381349 	bleq	e05500 <startup-0x1f1fab00>
     7d8:	24040000 	strcs	r0, [r4], #-0
     7dc:	3e0b0b00 	vmlacc.f64	d0, d11, d0
     7e0:	000e030b 	andeq	r0, lr, fp, lsl #6
     7e4:	000f0500 	andeq	r0, pc, r0, lsl #10
     7e8:	13490b0b 	movtne	r0, #39691	; 0x9b0b
     7ec:	16060000 	strne	r0, [r6], -r0
     7f0:	3a0e0300 	bcc	3813f8 <startup-0x1fc7ec08>
     7f4:	490b3b0b 	stmdbmi	fp, {r0, r1, r3, r8, r9, fp, ip, sp}
     7f8:	07000013 	smladeq	r0, r3, r0, r0
     7fc:	0e030113 	mcreq	1, 0, r0, cr3, cr3, {0}
     800:	0b3a0b0b 	bleq	e83434 <startup-0x1f17cbcc>
     804:	13010b3b 	movwne	r0, #6971	; 0x1b3b
     808:	24080000 	strcs	r0, [r8], #-0
     80c:	3e0b0b00 	vmlacc.f64	d0, d11, d0
     810:	0008030b 	andeq	r0, r8, fp, lsl #6
     814:	01150900 	tsteq	r5, r0, lsl #18
     818:	13011927 	movwne	r1, #6439	; 0x1927
     81c:	050a0000 	streq	r0, [sl, #-0]
     820:	00134900 	andseq	r4, r3, r0, lsl #18
     824:	01010b00 	tsteq	r1, r0, lsl #22
     828:	13011349 	movwne	r1, #4937	; 0x1349
     82c:	210c0000 	mrscs	r0, (UNDEF: 12)
     830:	0d000000 	stceq	0, cr0, [r0, #-0]
     834:	0e030034 	mcreq	0, 0, r0, cr3, cr4, {1}
     838:	0b3b0b3a 	bleq	ec3528 <startup-0x1f13cad8>
     83c:	193f1349 	ldmdbne	pc!, {r0, r3, r6, r8, r9, ip}	; <UNPREDICTABLE>
     840:	0000193c 	andeq	r1, r0, ip, lsr r9
     844:	4900210e 	stmdbmi	r0, {r1, r2, r3, r8, sp}
     848:	000b2f13 	andeq	r2, fp, r3, lsl pc
     84c:	00340f00 	eorseq	r0, r4, r0, lsl #30
     850:	0b3a0e03 	bleq	e84064 <startup-0x1f17bf9c>
     854:	13490b3b 	movtne	r0, #39739	; 0x9b3b
     858:	00001802 	andeq	r1, r0, r2, lsl #16
     85c:	03003410 	movweq	r3, #1040	; 0x410
     860:	3b0b3a0e 	blcc	2cf0a0 <startup-0x1fd30f60>
     864:	3f13490b 	svccc	0x0013490b
     868:	00180219 	andseq	r0, r8, r9, lsl r2
     86c:	012e1100 			; <UNDEFINED> instruction: 0x012e1100
     870:	0e03193f 			; <UNDEFINED> instruction: 0x0e03193f
     874:	0b3b0b3a 	bleq	ec3564 <startup-0x1f13ca9c>
     878:	01111927 	tsteq	r1, r7, lsr #18
     87c:	18400612 	stmdane	r0, {r1, r4, r9, sl}^
     880:	01194296 			; <UNDEFINED> instruction: 0x01194296
     884:	12000013 	andne	r0, r0, #19
     888:	0e030005 	cdpeq	0, 0, cr0, cr3, cr5, {0}
     88c:	0b3b0b3a 	bleq	ec357c <startup-0x1f13ca84>
     890:	18021349 	stmdane	r2, {r0, r3, r6, r8, r9, ip}
     894:	2e130000 	cdpcs	0, 1, cr0, cr3, cr0, {0}
     898:	3a0e0301 	bcc	3814a4 <startup-0x1fc7eb5c>
     89c:	270b3b0b 	strcs	r3, [fp, -fp, lsl #22]
     8a0:	12011119 	andne	r1, r1, #1073741830	; 0x40000006
     8a4:	96184006 	ldrls	r4, [r8], -r6
     8a8:	00001942 	andeq	r1, r0, r2, asr #18
     8ac:	01110100 	tsteq	r1, r0, lsl #2
     8b0:	0b130e25 	bleq	4c414c <startup-0x1fb3beb4>
     8b4:	01110e03 	tsteq	r1, r3, lsl #28
     8b8:	17100612 			; <UNDEFINED> instruction: 0x17100612
     8bc:	13020000 	movwne	r0, #8192	; 0x2000
     8c0:	3a0b0b01 	bcc	2c34cc <startup-0x1fd3cb34>
     8c4:	010b3b0b 	tsteq	fp, fp, lsl #22
     8c8:	03000013 	movweq	r0, #19
     8cc:	0e03000d 	cdpeq	0, 0, cr0, cr3, cr13, {0}
     8d0:	0b3b0b3a 	bleq	ec35c0 <startup-0x1f13ca40>
     8d4:	0b381349 	bleq	e05600 <startup-0x1f1faa00>
     8d8:	24040000 	strcs	r0, [r4], #-0
     8dc:	3e0b0b00 	vmlacc.f64	d0, d11, d0
     8e0:	000e030b 	andeq	r0, lr, fp, lsl #6
     8e4:	000f0500 	andeq	r0, pc, r0, lsl #10
     8e8:	13490b0b 	movtne	r0, #39691	; 0x9b0b
     8ec:	16060000 	strne	r0, [r6], -r0
     8f0:	3a0e0300 	bcc	3814f8 <startup-0x1fc7eb08>
     8f4:	490b3b0b 	stmdbmi	fp, {r0, r1, r3, r8, r9, fp, ip, sp}
     8f8:	07000013 	smladeq	r0, r3, r0, r0
     8fc:	0e030113 	mcreq	1, 0, r0, cr3, cr3, {0}
     900:	0b3a0b0b 	bleq	e83534 <startup-0x1f17cacc>
     904:	13010b3b 	movwne	r0, #6971	; 0x1b3b
     908:	24080000 	strcs	r0, [r8], #-0
     90c:	3e0b0b00 	vmlacc.f64	d0, d11, d0
     910:	0008030b 	andeq	r0, r8, fp, lsl #6
     914:	01150900 	tsteq	r5, r0, lsl #18
     918:	13011927 	movwne	r1, #6439	; 0x1927
     91c:	050a0000 	streq	r0, [sl, #-0]
     920:	00134900 	andseq	r4, r3, r0, lsl #18
     924:	01010b00 	tsteq	r1, r0, lsl #22
     928:	13011349 	movwne	r1, #4937	; 0x1349
     92c:	210c0000 	mrscs	r0, (UNDEF: 12)
     930:	0d000000 	stceq	0, cr0, [r0, #-0]
     934:	0e030034 	mcreq	0, 0, r0, cr3, cr4, {1}
     938:	0b3b0b3a 	bleq	ec3628 <startup-0x1f13c9d8>
     93c:	193f1349 	ldmdbne	pc!, {r0, r3, r6, r8, r9, ip}	; <UNPREDICTABLE>
     940:	0000193c 	andeq	r1, r0, ip, lsr r9
     944:	4900210e 	stmdbmi	r0, {r1, r2, r3, r8, sp}
     948:	00052f13 	andeq	r2, r5, r3, lsl pc
     94c:	00340f00 	eorseq	r0, r4, r0, lsl #30
     950:	0b3a0e03 	bleq	e84164 <startup-0x1f17be9c>
     954:	13490b3b 	movtne	r0, #39739	; 0x9b3b
     958:	00001802 	andeq	r1, r0, r2, lsl #16
     95c:	03003410 	movweq	r3, #1040	; 0x410
     960:	3b0b3a0e 	blcc	2cf1a0 <startup-0x1fd30e60>
     964:	3f13490b 	svccc	0x0013490b
     968:	00180219 	andseq	r0, r8, r9, lsl r2
     96c:	00211100 	eoreq	r1, r1, r0, lsl #2
     970:	0b2f1349 	bleq	bc569c <startup-0x1f43a964>
     974:	2e120000 	cdpcs	0, 1, cr0, cr2, cr0, {0}
     978:	03193f01 	tsteq	r9, #1, 30
     97c:	3b0b3a0e 	blcc	2cf1bc <startup-0x1fd30e44>
     980:	1119270b 	tstne	r9, fp, lsl #14
     984:	40061201 	andmi	r1, r6, r1, lsl #4
     988:	19429618 	stmdbne	r2, {r3, r4, r9, sl, ip, pc}^
     98c:	00001301 	andeq	r1, r0, r1, lsl #6
     990:	03000513 	movweq	r0, #1299	; 0x513
     994:	3b0b3a0e 	blcc	2cf1d4 <startup-0x1fd30e2c>
     998:	0213490b 	andseq	r4, r3, #180224	; 0x2c000
     99c:	14000018 	strne	r0, [r0], #-24	; 0xffffffe8
     9a0:	0e03012e 	adfeqsp	f0, f3, #0.5
     9a4:	0b3b0b3a 	bleq	ec3694 <startup-0x1f13c96c>
     9a8:	01111927 	tsteq	r1, r7, lsr #18
     9ac:	18400612 	stmdane	r0, {r1, r4, r9, sl}^
     9b0:	00194296 	mulseq	r9, r6, r2
     9b4:	11010000 	mrsne	r0, (UNDEF: 1)
     9b8:	130e2501 	movwne	r2, #58625	; 0xe501
     9bc:	110e030b 	tstne	lr, fp, lsl #6
     9c0:	10061201 	andne	r1, r6, r1, lsl #4
     9c4:	02000017 	andeq	r0, r0, #23
     9c8:	0b0b0113 	bleq	2c0e1c <startup-0x1fd3f1e4>
     9cc:	0b3b0b3a 	bleq	ec36bc <startup-0x1f13c944>
     9d0:	00001301 	andeq	r1, r0, r1, lsl #6
     9d4:	03000d03 	movweq	r0, #3331	; 0xd03
     9d8:	3b0b3a0e 	blcc	2cf218 <startup-0x1fd30de8>
     9dc:	3813490b 	ldmdacc	r3, {r0, r1, r3, r8, fp, lr}
     9e0:	0400000b 	streq	r0, [r0], #-11
     9e4:	0b0b0024 	bleq	2c0a7c <startup-0x1fd3f584>
     9e8:	0e030b3e 	vmoveq.16	d3[0], r0
     9ec:	0f050000 	svceq	0x00050000
     9f0:	490b0b00 	stmdbmi	fp, {r8, r9, fp}
     9f4:	06000013 			; <UNDEFINED> instruction: 0x06000013
     9f8:	0e030016 	mcreq	0, 0, r0, cr3, cr6, {0}
     9fc:	0b3b0b3a 	bleq	ec36ec <startup-0x1f13c914>
     a00:	00001349 	andeq	r1, r0, r9, asr #6
     a04:	03011307 	movweq	r1, #4871	; 0x1307
     a08:	3a0b0b0e 	bcc	2c3648 <startup-0x1fd3c9b8>
     a0c:	010b3b0b 	tsteq	fp, fp, lsl #22
     a10:	08000013 	stmdaeq	r0, {r0, r1, r4}
     a14:	0b0b0024 	bleq	2c0aac <startup-0x1fd3f554>
     a18:	08030b3e 	stmdaeq	r3, {r1, r2, r3, r4, r5, r8, r9, fp}
     a1c:	15090000 	strne	r0, [r9, #-0]
     a20:	01192701 	tsteq	r9, r1, lsl #14
     a24:	0a000013 	beq	a78 <startup-0x1ffff588>
     a28:	13490005 	movtne	r0, #36869	; 0x9005
     a2c:	010b0000 	mrseq	r0, (UNDEF: 11)
     a30:	01134901 	tsteq	r3, r1, lsl #18
     a34:	0c000013 	stceq	0, cr0, [r0], {19}
     a38:	00000021 	andeq	r0, r0, r1, lsr #32
     a3c:	0300340d 	movweq	r3, #1037	; 0x40d
     a40:	3b0b3a0e 	blcc	2cf280 <startup-0x1fd30d80>
     a44:	3f13490b 	svccc	0x0013490b
     a48:	00193c19 	andseq	r3, r9, r9, lsl ip
     a4c:	00210e00 	eoreq	r0, r1, r0, lsl #28
     a50:	0b2f1349 	bleq	bc577c <startup-0x1f43a884>
     a54:	340f0000 	strcc	r0, [pc], #-0	; a5c <startup-0x1ffff5a4>
     a58:	3a0e0300 	bcc	381660 <startup-0x1fc7e9a0>
     a5c:	490b3b0b 	stmdbmi	fp, {r0, r1, r3, r8, r9, fp, ip, sp}
     a60:	00180213 	andseq	r0, r8, r3, lsl r2
     a64:	00341000 	eorseq	r1, r4, r0
     a68:	0b3a0e03 	bleq	e8427c <startup-0x1f17bd84>
     a6c:	13490b3b 	movtne	r0, #39739	; 0x9b3b
     a70:	1802193f 	stmdane	r2, {r0, r1, r2, r3, r4, r5, r8, fp, ip}
     a74:	2e110000 	cdpcs	0, 1, cr0, cr1, cr0, {0}
     a78:	03193f01 	tsteq	r9, #1, 30
     a7c:	3b0b3a0e 	blcc	2cf2bc <startup-0x1fd30d44>
     a80:	1119270b 	tstne	r9, fp, lsl #14
     a84:	40061201 	andmi	r1, r6, r1, lsl #4
     a88:	19429618 	stmdbne	r2, {r3, r4, r9, sl, ip, pc}^
     a8c:	00001301 	andeq	r1, r0, r1, lsl #6
     a90:	03000512 	movweq	r0, #1298	; 0x512
     a94:	3b0b3a0e 	blcc	2cf2d4 <startup-0x1fd30d2c>
     a98:	0213490b 	andseq	r4, r3, #180224	; 0x2c000
     a9c:	13000018 	movwne	r0, #24
     aa0:	0e03012e 	adfeqsp	f0, f3, #0.5
     aa4:	0b3b0b3a 	bleq	ec3794 <startup-0x1f13c86c>
     aa8:	01111927 	tsteq	r1, r7, lsr #18
     aac:	18400612 	stmdane	r0, {r1, r4, r9, sl}^
     ab0:	00194296 	mulseq	r9, r6, r2
     ab4:	11010000 	mrsne	r0, (UNDEF: 1)
     ab8:	130e2501 	movwne	r2, #58625	; 0xe501
     abc:	110e030b 	tstne	lr, fp, lsl #6
     ac0:	10061201 	andne	r1, r6, r1, lsl #4
     ac4:	02000017 	andeq	r0, r0, #23
     ac8:	0b0b0113 	bleq	2c0f1c <startup-0x1fd3f0e4>
     acc:	0b3b0b3a 	bleq	ec37bc <startup-0x1f13c844>
     ad0:	00001301 	andeq	r1, r0, r1, lsl #6
     ad4:	03000d03 	movweq	r0, #3331	; 0xd03
     ad8:	3b0b3a0e 	blcc	2cf318 <startup-0x1fd30ce8>
     adc:	3813490b 	ldmdacc	r3, {r0, r1, r3, r8, fp, lr}
     ae0:	0400000b 	streq	r0, [r0], #-11
     ae4:	0b0b0024 	bleq	2c0b7c <startup-0x1fd3f484>
     ae8:	0e030b3e 	vmoveq.16	d3[0], r0
     aec:	0f050000 	svceq	0x00050000
     af0:	490b0b00 	stmdbmi	fp, {r8, r9, fp}
     af4:	06000013 			; <UNDEFINED> instruction: 0x06000013
     af8:	0e030016 	mcreq	0, 0, r0, cr3, cr6, {0}
     afc:	0b3b0b3a 	bleq	ec37ec <startup-0x1f13c814>
     b00:	00001349 	andeq	r1, r0, r9, asr #6
     b04:	03011307 	movweq	r1, #4871	; 0x1307
     b08:	3a0b0b0e 	bcc	2c3748 <startup-0x1fd3c8b8>
     b0c:	010b3b0b 	tsteq	fp, fp, lsl #22
     b10:	08000013 	stmdaeq	r0, {r0, r1, r4}
     b14:	0b0b0024 	bleq	2c0bac <startup-0x1fd3f454>
     b18:	08030b3e 	stmdaeq	r3, {r1, r2, r3, r4, r5, r8, r9, fp}
     b1c:	15090000 	strne	r0, [r9, #-0]
     b20:	01192701 	tsteq	r9, r1, lsl #14
     b24:	0a000013 	beq	b78 <startup-0x1ffff488>
     b28:	13490005 	movtne	r0, #36869	; 0x9005
     b2c:	010b0000 	mrseq	r0, (UNDEF: 11)
     b30:	01134901 	tsteq	r3, r1, lsl #18
     b34:	0c000013 	stceq	0, cr0, [r0], {19}
     b38:	00000021 	andeq	r0, r0, r1, lsr #32
     b3c:	0300340d 	movweq	r3, #1037	; 0x40d
     b40:	3b0b3a0e 	blcc	2cf380 <startup-0x1fd30c80>
     b44:	3f13490b 	svccc	0x0013490b
     b48:	00193c19 	andseq	r3, r9, r9, lsl ip
     b4c:	00210e00 	eoreq	r0, r1, r0, lsl #28
     b50:	052f1349 	streq	r1, [pc, #-841]!	; 80f <startup-0x1ffff7f1>
     b54:	340f0000 	strcc	r0, [pc], #-0	; b5c <startup-0x1ffff4a4>
     b58:	3a134700 	bcc	4d2760 <startup-0x1fb2d8a0>
     b5c:	020b3b0b 	andeq	r3, fp, #11264	; 0x2c00
     b60:	10000018 	andne	r0, r0, r8, lsl r0
     b64:	193f012e 	ldmdbne	pc!, {r1, r2, r3, r5, r8}	; <UNPREDICTABLE>
     b68:	0b3a0e03 	bleq	e8437c <startup-0x1f17bc84>
     b6c:	1927053b 	stmdbne	r7!, {r0, r1, r3, r4, r5, r8, sl}
     b70:	06120111 			; <UNDEFINED> instruction: 0x06120111
     b74:	42961840 	addsmi	r1, r6, #64, 16	; 0x400000
     b78:	00130119 	andseq	r0, r3, r9, lsl r1
     b7c:	00051100 	andeq	r1, r5, r0, lsl #2
     b80:	0b3a0e03 	bleq	e84394 <startup-0x1f17bc6c>
     b84:	1349053b 	movtne	r0, #38203	; 0x953b
     b88:	00001802 	andeq	r1, r0, r2, lsl #16
     b8c:	03003412 	movweq	r3, #1042	; 0x412
     b90:	3b0b3a0e 	blcc	2cf3d0 <startup-0x1fd30c30>
     b94:	02134905 	andseq	r4, r3, #81920	; 0x14000
     b98:	13000018 	movwne	r0, #24
     b9c:	193f012e 	ldmdbne	pc!, {r1, r2, r3, r5, r8}	; <UNPREDICTABLE>
     ba0:	0b3a0e03 	bleq	e843b4 <startup-0x1f17bc4c>
     ba4:	1927053b 	stmdbne	r7!, {r0, r1, r3, r4, r5, r8, sl}
     ba8:	06120111 			; <UNDEFINED> instruction: 0x06120111
     bac:	42971840 	addsmi	r1, r7, #64, 16	; 0x400000
     bb0:	00130119 	andseq	r0, r3, r9, lsl r1
     bb4:	00341400 	eorseq	r1, r4, r0, lsl #8
     bb8:	0b3a0803 	bleq	e82bcc <startup-0x1f17d434>
     bbc:	1349053b 	movtne	r0, #38203	; 0x953b
     bc0:	00001802 	andeq	r1, r0, r2, lsl #16
     bc4:	03003415 	movweq	r3, #1045	; 0x415
     bc8:	3b0b3a08 	blcc	2cf3f0 <startup-0x1fd30c10>
     bcc:	00134905 	andseq	r4, r3, r5, lsl #18
     bd0:	00051600 	andeq	r1, r5, r0, lsl #12
     bd4:	0b3a0803 	bleq	e82be8 <startup-0x1f17d418>
     bd8:	1349053b 	movtne	r0, #38203	; 0x953b
     bdc:	00001802 	andeq	r1, r0, r2, lsl #16
     be0:	11010b17 	tstne	r1, r7, lsl fp
     be4:	00061201 	andeq	r1, r6, r1, lsl #4
     be8:	012e1800 			; <UNDEFINED> instruction: 0x012e1800
     bec:	0e03193f 			; <UNDEFINED> instruction: 0x0e03193f
     bf0:	0b3b0b3a 	bleq	ec38e0 <startup-0x1f13c720>
     bf4:	01111927 	tsteq	r1, r7, lsr #18
     bf8:	18400612 	stmdane	r0, {r1, r4, r9, sl}^
     bfc:	01194297 			; <UNDEFINED> instruction: 0x01194297
     c00:	19000013 	stmdbne	r0, {r0, r1, r4}
     c04:	08030005 	stmdaeq	r3, {r0, r2}
     c08:	0b3b0b3a 	bleq	ec38f8 <startup-0x1f13c708>
     c0c:	18021349 	stmdane	r2, {r0, r3, r6, r8, r9, ip}
     c10:	051a0000 	ldreq	r0, [sl, #-0]
     c14:	3a0e0300 	bcc	38181c <startup-0x1fc7e7e4>
     c18:	490b3b0b 	stmdbmi	fp, {r0, r1, r3, r8, r9, fp, ip, sp}
     c1c:	00180213 	andseq	r0, r8, r3, lsl r2
     c20:	00341b00 	eorseq	r1, r4, r0, lsl #22
     c24:	0b3a0e03 	bleq	e84438 <startup-0x1f17bbc8>
     c28:	13490b3b 	movtne	r0, #39739	; 0x9b3b
     c2c:	00001802 	andeq	r1, r0, r2, lsl #16
     c30:	3f012e1c 	svccc	0x00012e1c
     c34:	3a0e0319 	bcc	3818a0 <startup-0x1fc7e760>
     c38:	270b3b0b 	strcs	r3, [fp, -fp, lsl #22]
     c3c:	12011119 	andne	r1, r1, #1073741830	; 0x40000006
     c40:	96184006 	ldrls	r4, [r8], -r6
     c44:	13011942 	movwne	r1, #6466	; 0x1942
     c48:	341d0000 	ldrcc	r0, [sp], #-0
     c4c:	3a080300 	bcc	201854 <startup-0x1fdfe7ac>
     c50:	490b3b0b 	stmdbmi	fp, {r0, r1, r3, r8, r9, fp, ip, sp}
     c54:	00180213 	andseq	r0, r8, r3, lsl r2
     c58:	002e1e00 	eoreq	r1, lr, r0, lsl #28
     c5c:	0e03193f 			; <UNDEFINED> instruction: 0x0e03193f
     c60:	0b3b0b3a 	bleq	ec3950 <startup-0x1f13c6b0>
     c64:	01111927 	tsteq	r1, r7, lsr #18
     c68:	18400612 	stmdane	r0, {r1, r4, r9, sl}^
     c6c:	00194296 	mulseq	r9, r6, r2
     c70:	012e1f00 			; <UNDEFINED> instruction: 0x012e1f00
     c74:	0e03193f 			; <UNDEFINED> instruction: 0x0e03193f
     c78:	0b3b0b3a 	bleq	ec3968 <startup-0x1f13c698>
     c7c:	13491927 	movtne	r1, #39207	; 0x9927
     c80:	06120111 			; <UNDEFINED> instruction: 0x06120111
     c84:	42961840 	addsmi	r1, r6, #64, 16	; 0x400000
     c88:	00130119 	andseq	r0, r3, r9, lsl r1
     c8c:	012e2000 			; <UNDEFINED> instruction: 0x012e2000
     c90:	0b3a0e03 	bleq	e844a4 <startup-0x1f17bb5c>
     c94:	19270b3b 	stmdbne	r7!, {r0, r1, r3, r4, r5, r8, r9, fp}
     c98:	01111349 	tsteq	r1, r9, asr #6
     c9c:	18400612 	stmdane	r0, {r1, r4, r9, sl}^
     ca0:	01194296 			; <UNDEFINED> instruction: 0x01194296
     ca4:	21000013 	tstcs	r0, r3, lsl r0
     ca8:	0e03012e 	adfeqsp	f0, f3, #0.5
     cac:	0b3b0b3a 	bleq	ec399c <startup-0x1f13c664>
     cb0:	01111927 	tsteq	r1, r7, lsr #18
     cb4:	18400612 	stmdane	r0, {r1, r4, r9, sl}^
     cb8:	01194297 			; <UNDEFINED> instruction: 0x01194297
     cbc:	22000013 	andcs	r0, r0, #19
     cc0:	193f002e 	ldmdbne	pc!, {r1, r2, r3, r5}	; <UNPREDICTABLE>
     cc4:	0b3a0e03 	bleq	e844d8 <startup-0x1f17bb28>
     cc8:	19270b3b 	stmdbne	r7!, {r0, r1, r3, r4, r5, r8, r9, fp}
     ccc:	06120111 			; <UNDEFINED> instruction: 0x06120111
     cd0:	42971840 	addsmi	r1, r7, #64, 16	; 0x400000
     cd4:	00000019 	andeq	r0, r0, r9, lsl r0
     cd8:	25011101 	strcs	r1, [r1, #-257]	; 0xfffffeff
     cdc:	030b130e 	movweq	r1, #45838	; 0xb30e
     ce0:	1201110e 	andne	r1, r1, #-2147483645	; 0x80000003
     ce4:	00171006 	andseq	r1, r7, r6
     ce8:	01130200 	tsteq	r3, r0, lsl #4
     cec:	0b3a0b0b 	bleq	e83920 <startup-0x1f17c6e0>
     cf0:	13010b3b 	movwne	r0, #6971	; 0x1b3b
     cf4:	0d030000 	stceq	0, cr0, [r3, #-0]
     cf8:	3a0e0300 	bcc	381900 <startup-0x1fc7e700>
     cfc:	490b3b0b 	stmdbmi	fp, {r0, r1, r3, r8, r9, fp, ip, sp}
     d00:	000b3813 	andeq	r3, fp, r3, lsl r8
     d04:	00240400 	eoreq	r0, r4, r0, lsl #8
     d08:	0b3e0b0b 	bleq	f8393c <startup-0x1f07c6c4>
     d0c:	00000e03 	andeq	r0, r0, r3, lsl #28
     d10:	0b000f05 	bleq	492c <startup-0x1fffb6d4>
     d14:	0013490b 	andseq	r4, r3, fp, lsl #18
     d18:	00160600 	andseq	r0, r6, r0, lsl #12
     d1c:	0b3a0e03 	bleq	e84530 <startup-0x1f17bad0>
     d20:	13490b3b 	movtne	r0, #39739	; 0x9b3b
     d24:	13070000 	movwne	r0, #28672	; 0x7000
     d28:	0b0e0301 	bleq	381934 <startup-0x1fc7e6cc>
     d2c:	3b0b3a0b 	blcc	2cf560 <startup-0x1fd30aa0>
     d30:	0013010b 	andseq	r0, r3, fp, lsl #2
     d34:	012e0800 			; <UNDEFINED> instruction: 0x012e0800
     d38:	0e03193f 			; <UNDEFINED> instruction: 0x0e03193f
     d3c:	0b3b0b3a 	bleq	ec3a2c <startup-0x1f13c5d4>
     d40:	01111927 	tsteq	r1, r7, lsr #18
     d44:	18400612 	stmdane	r0, {r1, r4, r9, sl}^
     d48:	01194297 			; <UNDEFINED> instruction: 0x01194297
     d4c:	09000013 	stmdbeq	r0, {r0, r1, r4}
     d50:	0e030005 	cdpeq	0, 0, cr0, cr3, cr5, {0}
     d54:	0b3b0b3a 	bleq	ec3a44 <startup-0x1f13c5bc>
     d58:	18021349 	stmdane	r2, {r0, r3, r6, r8, r9, ip}
     d5c:	01000000 	mrseq	r0, (UNDEF: 0)
     d60:	0e250111 	mcreq	1, 1, r0, cr5, cr1, {0}
     d64:	0e030b13 	vmoveq.32	d3[0], r0
     d68:	06120111 			; <UNDEFINED> instruction: 0x06120111
     d6c:	00001710 	andeq	r1, r0, r0, lsl r7
     d70:	0b011302 	bleq	45980 <startup-0x1ffba680>
     d74:	3b0b3a0b 	blcc	2cf5a8 <startup-0x1fd30a58>
     d78:	0013010b 	andseq	r0, r3, fp, lsl #2
     d7c:	000d0300 	andeq	r0, sp, r0, lsl #6
     d80:	0b3a0e03 	bleq	e84594 <startup-0x1f17ba6c>
     d84:	13490b3b 	movtne	r0, #39739	; 0x9b3b
     d88:	00000b38 	andeq	r0, r0, r8, lsr fp
     d8c:	0b002404 	bleq	9da4 <startup-0x1fff625c>
     d90:	030b3e0b 	movweq	r3, #48651	; 0xbe0b
     d94:	0500000e 	streq	r0, [r0, #-14]
     d98:	0b0b000f 	bleq	2c0ddc <startup-0x1fd3f224>
     d9c:	00001349 	andeq	r1, r0, r9, asr #6
     da0:	03001606 	movweq	r1, #1542	; 0x606
     da4:	3b0b3a0e 	blcc	2cf5e4 <startup-0x1fd30a1c>
     da8:	0013490b 	andseq	r4, r3, fp, lsl #18
     dac:	012e0700 			; <UNDEFINED> instruction: 0x012e0700
     db0:	0e03193f 			; <UNDEFINED> instruction: 0x0e03193f
     db4:	0b3b0b3a 	bleq	ec3aa4 <startup-0x1f13c55c>
     db8:	01111927 	tsteq	r1, r7, lsr #18
     dbc:	18400612 	stmdane	r0, {r1, r4, r9, sl}^
     dc0:	01194297 			; <UNDEFINED> instruction: 0x01194297
     dc4:	08000013 	stmdaeq	r0, {r0, r1, r4}
     dc8:	08030005 	stmdaeq	r3, {r0, r2}
     dcc:	0b3b0b3a 	bleq	ec3abc <startup-0x1f13c544>
     dd0:	18021349 	stmdane	r2, {r0, r3, r6, r8, r9, ip}
     dd4:	05090000 	streq	r0, [r9, #-0]
     dd8:	3a0e0300 	bcc	3819e0 <startup-0x1fc7e620>
     ddc:	490b3b0b 	stmdbmi	fp, {r0, r1, r3, r8, r9, fp, ip, sp}
     de0:	00180213 	andseq	r0, r8, r3, lsl r2
     de4:	00240a00 	eoreq	r0, r4, r0, lsl #20
     de8:	0b3e0b0b 	bleq	f83a1c <startup-0x1f07c5e4>
     dec:	00000803 	andeq	r0, r0, r3, lsl #16
     df0:	01110100 	tsteq	r1, r0, lsl #2
     df4:	0b130e25 	bleq	4c4690 <startup-0x1fb3b970>
     df8:	01110e03 	tsteq	r1, r3, lsl #28
     dfc:	17100612 			; <UNDEFINED> instruction: 0x17100612
     e00:	13020000 	movwne	r0, #8192	; 0x2000
     e04:	3a0b0b01 	bcc	2c3a10 <startup-0x1fd3c5f0>
     e08:	010b3b0b 	tsteq	fp, fp, lsl #22
     e0c:	03000013 	movweq	r0, #19
     e10:	0e03000d 	cdpeq	0, 0, cr0, cr3, cr13, {0}
     e14:	0b3b0b3a 	bleq	ec3b04 <startup-0x1f13c4fc>
     e18:	0b381349 	bleq	e05b44 <startup-0x1f1fa4bc>
     e1c:	24040000 	strcs	r0, [r4], #-0
     e20:	3e0b0b00 	vmlacc.f64	d0, d11, d0
     e24:	000e030b 	andeq	r0, lr, fp, lsl #6
     e28:	00160500 	andseq	r0, r6, r0, lsl #10
     e2c:	0b3a0e03 	bleq	e84640 <startup-0x1f17b9c0>
     e30:	13490b3b 	movtne	r0, #39739	; 0x9b3b
     e34:	2e060000 	cdpcs	0, 0, cr0, cr6, cr0, {0}
     e38:	03193f01 	tsteq	r9, #1, 30
     e3c:	3b0b3a0e 	blcc	2cf67c <startup-0x1fd30984>
     e40:	4919270b 	ldmdbmi	r9, {r0, r1, r3, r8, r9, sl, sp}
     e44:	12011113 	andne	r1, r1, #-1073741820	; 0xc0000004
     e48:	96184006 	ldrls	r4, [r8], -r6
     e4c:	13011942 	movwne	r1, #6466	; 0x1942
     e50:	05070000 	streq	r0, [r7, #-0]
     e54:	3a080300 	bcc	201a5c <startup-0x1fdfe5a4>
     e58:	490b3b0b 	stmdbmi	fp, {r0, r1, r3, r8, r9, fp, ip, sp}
     e5c:	00180213 	andseq	r0, r8, r3, lsl r2
     e60:	00340800 	eorseq	r0, r4, r0, lsl #16
     e64:	0b3a0803 	bleq	e82e78 <startup-0x1f17d188>
     e68:	13490b3b 	movtne	r0, #39739	; 0x9b3b
     e6c:	00001802 	andeq	r1, r0, r2, lsl #16
     e70:	0b002409 	bleq	9e9c <startup-0x1fff6164>
     e74:	030b3e0b 	movweq	r3, #48651	; 0xbe0b
     e78:	0a000008 	beq	ea0 <startup-0x1ffff160>
     e7c:	193f002e 	ldmdbne	pc!, {r1, r2, r3, r5}	; <UNPREDICTABLE>
     e80:	0b3a0e03 	bleq	e84694 <startup-0x1f17b96c>
     e84:	19270b3b 	stmdbne	r7!, {r0, r1, r3, r4, r5, r8, r9, fp}
     e88:	01111349 	tsteq	r1, r9, asr #6
     e8c:	18400612 	stmdane	r0, {r1, r4, r9, sl}^
     e90:	00194297 	mulseq	r9, r7, r2
     e94:	002e0b00 	eoreq	r0, lr, r0, lsl #22
     e98:	0e03193f 			; <UNDEFINED> instruction: 0x0e03193f
     e9c:	0b3b0b3a 	bleq	ec3b8c <startup-0x1f13c474>
     ea0:	01111927 	tsteq	r1, r7, lsr #18
     ea4:	18400612 	stmdane	r0, {r1, r4, r9, sl}^
     ea8:	00194297 	mulseq	r9, r7, r2
     eac:	11010000 	mrsne	r0, (UNDEF: 1)
     eb0:	130e2501 	movwne	r2, #58625	; 0xe501
     eb4:	110e030b 	tstne	lr, fp, lsl #6
     eb8:	10061201 	andne	r1, r6, r1, lsl #4
     ebc:	02000017 	andeq	r0, r0, #23
     ec0:	0b0b0113 	bleq	2c1314 <startup-0x1fd3ecec>
     ec4:	0b3b0b3a 	bleq	ec3bb4 <startup-0x1f13c44c>
     ec8:	00001301 	andeq	r1, r0, r1, lsl #6
     ecc:	03000d03 	movweq	r0, #3331	; 0xd03
     ed0:	3b0b3a0e 	blcc	2cf710 <startup-0x1fd308f0>
     ed4:	3813490b 	ldmdacc	r3, {r0, r1, r3, r8, fp, lr}
     ed8:	0400000b 	streq	r0, [r0], #-11
     edc:	0b0b0024 	bleq	2c0f74 <startup-0x1fd3f08c>
     ee0:	0e030b3e 	vmoveq.16	d3[0], r0
     ee4:	0f050000 	svceq	0x00050000
     ee8:	490b0b00 	stmdbmi	fp, {r8, r9, fp}
     eec:	06000013 			; <UNDEFINED> instruction: 0x06000013
     ef0:	0e030016 	mcreq	0, 0, r0, cr3, cr6, {0}
     ef4:	0b3b0b3a 	bleq	ec3be4 <startup-0x1f13c41c>
     ef8:	00001349 	andeq	r1, r0, r9, asr #6
     efc:	03011307 	movweq	r1, #4871	; 0x1307
     f00:	3a0b0b0e 	bcc	2c3b40 <startup-0x1fd3c4c0>
     f04:	010b3b0b 	tsteq	fp, fp, lsl #22
     f08:	08000013 	stmdaeq	r0, {r0, r1, r4}
     f0c:	0b0b0024 	bleq	2c0fa4 <startup-0x1fd3f05c>
     f10:	08030b3e 	stmdaeq	r3, {r1, r2, r3, r4, r5, r8, r9, fp}
     f14:	15090000 	strne	r0, [r9, #-0]
     f18:	01192701 	tsteq	r9, r1, lsl #14
     f1c:	0a000013 	beq	f70 <startup-0x1ffff090>
     f20:	13490005 	movtne	r0, #36869	; 0x9005
     f24:	010b0000 	mrseq	r0, (UNDEF: 11)
     f28:	01134901 	tsteq	r3, r1, lsl #18
     f2c:	0c000013 	stceq	0, cr0, [r0], {19}
     f30:	00000021 	andeq	r0, r0, r1, lsr #32
     f34:	0300340d 	movweq	r3, #1037	; 0x40d
     f38:	3b0b3a0e 	blcc	2cf778 <startup-0x1fd30888>
     f3c:	3f13490b 	svccc	0x0013490b
     f40:	00193c19 	andseq	r3, r9, r9, lsl ip
     f44:	00210e00 	eoreq	r0, r1, r0, lsl #28
     f48:	052f1349 	streq	r1, [pc, #-841]!	; c07 <startup-0x1ffff3f9>
     f4c:	2e0f0000 	cdpcs	0, 0, cr0, cr15, cr0, {0}
     f50:	03193f01 	tsteq	r9, #1, 30
     f54:	3b0b3a0e 	blcc	2cf794 <startup-0x1fd3086c>
     f58:	1119270b 	tstne	r9, fp, lsl #14
     f5c:	40061201 	andmi	r1, r6, r1, lsl #4
     f60:	19429618 	stmdbne	r2, {r3, r4, r9, sl, ip, pc}^
     f64:	00001301 	andeq	r1, r0, r1, lsl #6
     f68:	03003410 	movweq	r3, #1040	; 0x410
     f6c:	3b0b3a08 	blcc	2cf794 <startup-0x1fd3086c>
     f70:	0213490b 	andseq	r4, r3, #180224	; 0x2c000
     f74:	11000018 	tstne	r0, r8, lsl r0
     f78:	0e030034 	mcreq	0, 0, r0, cr3, cr4, {1}
     f7c:	0b3b0b3a 	bleq	ec3c6c <startup-0x1f13c394>
     f80:	18021349 	stmdane	r2, {r0, r3, r6, r8, r9, ip}
     f84:	21120000 	tstcs	r2, r0
     f88:	2f134900 	svccs	0x00134900
     f8c:	1300000b 	movwne	r0, #11
     f90:	0e030005 	cdpeq	0, 0, cr0, cr3, cr5, {0}
     f94:	0b3b0b3a 	bleq	ec3c84 <startup-0x1f13c37c>
     f98:	18021349 	stmdane	r2, {r0, r3, r6, r8, r9, ip}
     f9c:	2e140000 	cdpcs	0, 1, cr0, cr4, cr0, {0}
     fa0:	03193f00 	tsteq	r9, #0, 30
     fa4:	3b0b3a0e 	blcc	2cf7e4 <startup-0x1fd3081c>
     fa8:	1119270b 	tstne	r9, fp, lsl #14
     fac:	40061201 	andmi	r1, r6, r1, lsl #4
     fb0:	19429618 	stmdbne	r2, {r3, r4, r9, sl, ip, pc}^
     fb4:	2e150000 	cdpcs	0, 1, cr0, cr5, cr0, {0}
     fb8:	03193f00 	tsteq	r9, #0, 30
     fbc:	3b0b3a0e 	blcc	2cf7fc <startup-0x1fd30804>
     fc0:	1119270b 	tstne	r9, fp, lsl #14
     fc4:	40061201 	andmi	r1, r6, r1, lsl #4
     fc8:	19429718 	stmdbne	r2, {r3, r4, r8, r9, sl, ip, pc}^
     fcc:	05160000 	ldreq	r0, [r6, #-0]
     fd0:	3a080300 	bcc	201bd8 <startup-0x1fdfe428>
     fd4:	490b3b0b 	stmdbmi	fp, {r0, r1, r3, r8, r9, fp, ip, sp}
     fd8:	00180213 	andseq	r0, r8, r3, lsl r2
     fdc:	012e1700 			; <UNDEFINED> instruction: 0x012e1700
     fe0:	0e03193f 			; <UNDEFINED> instruction: 0x0e03193f
     fe4:	0b3b0b3a 	bleq	ec3cd4 <startup-0x1f13c32c>
     fe8:	13491927 	movtne	r1, #39207	; 0x9927
     fec:	06120111 			; <UNDEFINED> instruction: 0x06120111
     ff0:	42961840 	addsmi	r1, r6, #64, 16	; 0x400000
     ff4:	00130119 	andseq	r0, r3, r9, lsl r1
     ff8:	012e1800 			; <UNDEFINED> instruction: 0x012e1800
     ffc:	0e03193f 			; <UNDEFINED> instruction: 0x0e03193f
    1000:	0b3b0b3a 	bleq	ec3cf0 <startup-0x1f13c310>
    1004:	01111927 	tsteq	r1, r7, lsr #18
    1008:	18400612 	stmdane	r0, {r1, r4, r9, sl}^
    100c:	01194297 			; <UNDEFINED> instruction: 0x01194297
    1010:	19000013 	stmdbne	r0, {r0, r1, r4}
    1014:	193f012e 	ldmdbne	pc!, {r1, r2, r3, r5, r8}	; <UNPREDICTABLE>
    1018:	0b3a0e03 	bleq	e8482c <startup-0x1f17b7d4>
    101c:	19270b3b 	stmdbne	r7!, {r0, r1, r3, r4, r5, r8, r9, fp}
    1020:	06120111 			; <UNDEFINED> instruction: 0x06120111
    1024:	42971840 	addsmi	r1, r7, #64, 16	; 0x400000
    1028:	00000019 	andeq	r0, r0, r9, lsl r0
    102c:	25011101 	strcs	r1, [r1, #-257]	; 0xfffffeff
    1030:	030b130e 	movweq	r1, #45838	; 0xb30e
    1034:	1201110e 	andne	r1, r1, #-2147483645	; 0x80000003
    1038:	00171006 	andseq	r1, r7, r6
    103c:	01130200 	tsteq	r3, r0, lsl #4
    1040:	0b0b0e03 	bleq	2c4854 <startup-0x1fd3b7ac>
    1044:	0b3b0b3a 	bleq	ec3d34 <startup-0x1f13c2cc>
    1048:	00001301 	andeq	r1, r0, r1, lsl #6
    104c:	03000d03 	movweq	r0, #3331	; 0xd03
    1050:	3b0b3a0e 	blcc	2cf890 <startup-0x1fd30770>
    1054:	3813490b 	ldmdacc	r3, {r0, r1, r3, r8, fp, lr}
    1058:	0400000b 	streq	r0, [r0], #-11
    105c:	0b0b000f 	bleq	2c10a0 <startup-0x1fd3ef60>
    1060:	00001349 	andeq	r1, r0, r9, asr #6
    1064:	0b002405 	bleq	a080 <startup-0x1fff5f80>
    1068:	030b3e0b 	movweq	r3, #48651	; 0xbe0b
    106c:	0600000e 	streq	r0, [r0], -lr
    1070:	0b0b0024 	bleq	2c1108 <startup-0x1fd3eef8>
    1074:	08030b3e 	stmdaeq	r3, {r1, r2, r3, r4, r5, r8, r9, fp}
    1078:	15070000 	strne	r0, [r7, #-0]
    107c:	01192701 	tsteq	r9, r1, lsl #14
    1080:	08000013 	stmdaeq	r0, {r0, r1, r4}
    1084:	13490005 	movtne	r0, #36869	; 0x9005
    1088:	16090000 	strne	r0, [r9], -r0
    108c:	3a0e0300 	bcc	381c94 <startup-0x1fc7e36c>
    1090:	490b3b0b 	stmdbmi	fp, {r0, r1, r3, r8, r9, fp, ip, sp}
    1094:	0a000013 	beq	10e8 <startup-0x1fffef18>
    1098:	193f012e 	ldmdbne	pc!, {r1, r2, r3, r5, r8}	; <UNPREDICTABLE>
    109c:	0b3a0e03 	bleq	e848b0 <startup-0x1f17b750>
    10a0:	19270b3b 	stmdbne	r7!, {r0, r1, r3, r4, r5, r8, r9, fp}
    10a4:	06120111 			; <UNDEFINED> instruction: 0x06120111
    10a8:	42971840 	addsmi	r1, r7, #64, 16	; 0x400000
    10ac:	00130119 	andseq	r0, r3, r9, lsl r1
    10b0:	00050b00 	andeq	r0, r5, r0, lsl #22
    10b4:	0b3a0803 	bleq	e830c8 <startup-0x1f17cf38>
    10b8:	13490b3b 	movtne	r0, #39739	; 0x9b3b
    10bc:	00001802 	andeq	r1, r0, r2, lsl #16
    10c0:	0300050c 	movweq	r0, #1292	; 0x50c
    10c4:	3b0b3a0e 	blcc	2cf904 <startup-0x1fd306fc>
    10c8:	0213490b 	andseq	r4, r3, #180224	; 0x2c000
    10cc:	0d000018 	stceq	0, cr0, [r0, #-96]	; 0xffffffa0
    10d0:	193f012e 	ldmdbne	pc!, {r1, r2, r3, r5, r8}	; <UNPREDICTABLE>
    10d4:	0b3a0e03 	bleq	e848e8 <startup-0x1f17b718>
    10d8:	19270b3b 	stmdbne	r7!, {r0, r1, r3, r4, r5, r8, r9, fp}
    10dc:	06120111 			; <UNDEFINED> instruction: 0x06120111
    10e0:	42961840 	addsmi	r1, r6, #64, 16	; 0x400000
    10e4:	0e000019 	mcreq	0, 0, r0, cr0, cr9, {0}
    10e8:	0e030034 	mcreq	0, 0, r0, cr3, cr4, {1}
    10ec:	0b3b0b3a 	bleq	ec3ddc <startup-0x1f13c224>
    10f0:	18021349 	stmdane	r2, {r0, r3, r6, r8, r9, ip}
    10f4:	01000000 	mrseq	r0, (UNDEF: 0)
    10f8:	0e250111 	mcreq	1, 1, r0, cr5, cr1, {0}
    10fc:	0e030b13 	vmoveq.32	d3[0], r0
    1100:	06120111 			; <UNDEFINED> instruction: 0x06120111
    1104:	00001710 	andeq	r1, r0, r0, lsl r7
    1108:	0b011302 	bleq	45d18 <startup-0x1ffba2e8>
    110c:	3b0b3a0b 	blcc	2cf940 <startup-0x1fd306c0>
    1110:	0013010b 	andseq	r0, r3, fp, lsl #2
    1114:	000d0300 	andeq	r0, sp, r0, lsl #6
    1118:	0b3a0e03 	bleq	e8492c <startup-0x1f17b6d4>
    111c:	13490b3b 	movtne	r0, #39739	; 0x9b3b
    1120:	00000b38 	andeq	r0, r0, r8, lsr fp
    1124:	0b002404 	bleq	a13c <startup-0x1fff5ec4>
    1128:	030b3e0b 	movweq	r3, #48651	; 0xbe0b
    112c:	0500000e 	streq	r0, [r0, #-14]
    1130:	0b0b000f 	bleq	2c1174 <startup-0x1fd3ee8c>
    1134:	00001349 	andeq	r1, r0, r9, asr #6
    1138:	03001606 	movweq	r1, #1542	; 0x606
    113c:	3b0b3a0e 	blcc	2cf97c <startup-0x1fd30684>
    1140:	0013490b 	andseq	r4, r3, fp, lsl #18
    1144:	01130700 	tsteq	r3, r0, lsl #14
    1148:	0b0b0e03 	bleq	2c495c <startup-0x1fd3b6a4>
    114c:	0b3b0b3a 	bleq	ec3e3c <startup-0x1f13c1c4>
    1150:	00001301 	andeq	r1, r0, r1, lsl #6
    1154:	0b002408 	bleq	a17c <startup-0x1fff5e84>
    1158:	030b3e0b 	movweq	r3, #48651	; 0xbe0b
    115c:	09000008 	stmdbeq	r0, {r3}
    1160:	19270115 	stmdbne	r7!, {r0, r2, r4, r8}
    1164:	00001301 	andeq	r1, r0, r1, lsl #6
    1168:	4900050a 	stmdbmi	r0, {r1, r3, r8, sl}
    116c:	0b000013 	bleq	11c0 <startup-0x1fffee40>
    1170:	13490101 	movtne	r0, #37121	; 0x9101
    1174:	00001301 	andeq	r1, r0, r1, lsl #6
    1178:	0000210c 	andeq	r2, r0, ip, lsl #2
    117c:	00340d00 	eorseq	r0, r4, r0, lsl #26
    1180:	0b3a0e03 	bleq	e84994 <startup-0x1f17b66c>
    1184:	13490b3b 	movtne	r0, #39739	; 0x9b3b
    1188:	193c193f 	ldmdbne	ip!, {r0, r1, r2, r3, r4, r5, r8, fp, ip}
    118c:	210e0000 	mrscs	r0, (UNDEF: 14)
    1190:	2f134900 	svccs	0x00134900
    1194:	0f000005 	svceq	0x00000005
    1198:	0e030034 	mcreq	0, 0, r0, cr3, cr4, {1}
    119c:	0b3b0b3a 	bleq	ec3e8c <startup-0x1f13c174>
    11a0:	18021349 	stmdane	r2, {r0, r3, r6, r8, r9, ip}
    11a4:	34100000 	ldrcc	r0, [r0], #-0
    11a8:	3a0e0300 	bcc	381db0 <startup-0x1fc7e250>
    11ac:	490b3b0b 	stmdbmi	fp, {r0, r1, r3, r8, r9, fp, ip, sp}
    11b0:	02193f13 	andseq	r3, r9, #19, 30	; 0x4c
    11b4:	11000018 	tstne	r0, r8, lsl r0
    11b8:	13490021 	movtne	r0, #36897	; 0x9021
    11bc:	00000b2f 	andeq	r0, r0, pc, lsr #22
    11c0:	3f012e12 	svccc	0x00012e12
    11c4:	3a0e0319 	bcc	381e30 <startup-0x1fc7e1d0>
    11c8:	270b3b0b 	strcs	r3, [fp, -fp, lsl #22]
    11cc:	12011119 	andne	r1, r1, #1073741830	; 0x40000006
    11d0:	96184006 	ldrls	r4, [r8], -r6
    11d4:	13011942 	movwne	r1, #6466	; 0x1942
    11d8:	05130000 	ldreq	r0, [r3, #-0]
    11dc:	3a0e0300 	bcc	381de4 <startup-0x1fc7e21c>
    11e0:	490b3b0b 	stmdbmi	fp, {r0, r1, r3, r8, r9, fp, ip, sp}
    11e4:	00180213 	andseq	r0, r8, r3, lsl r2
    11e8:	012e1400 			; <UNDEFINED> instruction: 0x012e1400
    11ec:	0b3a0e03 	bleq	e84a00 <startup-0x1f17b600>
    11f0:	19270b3b 	stmdbne	r7!, {r0, r1, r3, r4, r5, r8, r9, fp}
    11f4:	06120111 			; <UNDEFINED> instruction: 0x06120111
    11f8:	42961840 	addsmi	r1, r6, #64, 16	; 0x400000
    11fc:	00000019 	andeq	r0, r0, r9, lsl r0
    1200:	25011101 	strcs	r1, [r1, #-257]	; 0xfffffeff
    1204:	030b130e 	movweq	r1, #45838	; 0xb30e
    1208:	1201110e 	andne	r1, r1, #-2147483645	; 0x80000003
    120c:	00171006 	andseq	r1, r7, r6
    1210:	01130200 	tsteq	r3, r0, lsl #4
    1214:	0b3a0b0b 	bleq	e83e48 <startup-0x1f17c1b8>
    1218:	13010b3b 	movwne	r0, #6971	; 0x1b3b
    121c:	0d030000 	stceq	0, cr0, [r3, #-0]
    1220:	3a0e0300 	bcc	381e28 <startup-0x1fc7e1d8>
    1224:	490b3b0b 	stmdbmi	fp, {r0, r1, r3, r8, r9, fp, ip, sp}
    1228:	000b3813 	andeq	r3, fp, r3, lsl r8
    122c:	00240400 	eoreq	r0, r4, r0, lsl #8
    1230:	0b3e0b0b 	bleq	f83e64 <startup-0x1f07c19c>
    1234:	00000e03 	andeq	r0, r0, r3, lsl #28
    1238:	0b000f05 	bleq	4e54 <startup-0x1fffb1ac>
    123c:	0013490b 	andseq	r4, r3, fp, lsl #18
    1240:	00160600 	andseq	r0, r6, r0, lsl #12
    1244:	0b3a0e03 	bleq	e84a58 <startup-0x1f17b5a8>
    1248:	13490b3b 	movtne	r0, #39739	; 0x9b3b
    124c:	13070000 	movwne	r0, #28672	; 0x7000
    1250:	0b0e0301 	bleq	381e5c <startup-0x1fc7e1a4>
    1254:	3b0b3a0b 	blcc	2cfa88 <startup-0x1fd30578>
    1258:	0013010b 	andseq	r0, r3, fp, lsl #2
    125c:	00240800 	eoreq	r0, r4, r0, lsl #16
    1260:	0b3e0b0b 	bleq	f83e94 <startup-0x1f07c16c>
    1264:	00000803 	andeq	r0, r0, r3, lsl #16
    1268:	27011509 	strcs	r1, [r1, -r9, lsl #10]
    126c:	00130119 	andseq	r0, r3, r9, lsl r1
    1270:	00050a00 	andeq	r0, r5, r0, lsl #20
    1274:	00001349 	andeq	r1, r0, r9, asr #6
    1278:	4901010b 	stmdbmi	r1, {r0, r1, r3, r8}
    127c:	00130113 	andseq	r0, r3, r3, lsl r1
    1280:	00210c00 	eoreq	r0, r1, r0, lsl #24
    1284:	340d0000 	strcc	r0, [sp], #-0
    1288:	3a0e0300 	bcc	381e90 <startup-0x1fc7e170>
    128c:	490b3b0b 	stmdbmi	fp, {r0, r1, r3, r8, r9, fp, ip, sp}
    1290:	3c193f13 	ldccc	15, cr3, [r9], {19}
    1294:	0e000019 	mcreq	0, 0, r0, cr0, cr9, {0}
    1298:	13490021 	movtne	r0, #36897	; 0x9021
    129c:	0000052f 	andeq	r0, r0, pc, lsr #10
    12a0:	0300340f 	movweq	r3, #1039	; 0x40f
    12a4:	3b0b3a0e 	blcc	2cfae4 <startup-0x1fd3051c>
    12a8:	0213490b 	andseq	r4, r3, #180224	; 0x2c000
    12ac:	10000018 	andne	r0, r0, r8, lsl r0
    12b0:	0e030034 	mcreq	0, 0, r0, cr3, cr4, {1}
    12b4:	0b3b0b3a 	bleq	ec3fa4 <startup-0x1f13c05c>
    12b8:	193f1349 	ldmdbne	pc!, {r0, r3, r6, r8, r9, ip}	; <UNPREDICTABLE>
    12bc:	00001802 	andeq	r1, r0, r2, lsl #16
    12c0:	49002111 	stmdbmi	r0, {r0, r4, r8, sp}
    12c4:	000b2f13 	andeq	r2, fp, r3, lsl pc
    12c8:	012e1200 			; <UNDEFINED> instruction: 0x012e1200
    12cc:	0e03193f 			; <UNDEFINED> instruction: 0x0e03193f
    12d0:	0b3b0b3a 	bleq	ec3fc0 <startup-0x1f13c040>
    12d4:	01111927 	tsteq	r1, r7, lsr #18
    12d8:	18400612 	stmdane	r0, {r1, r4, r9, sl}^
    12dc:	01194296 			; <UNDEFINED> instruction: 0x01194296
    12e0:	13000013 	movwne	r0, #19
    12e4:	0e030005 	cdpeq	0, 0, cr0, cr3, cr5, {0}
    12e8:	0b3b0b3a 	bleq	ec3fd8 <startup-0x1f13c028>
    12ec:	18021349 	stmdane	r2, {r0, r3, r6, r8, r9, ip}
    12f0:	2e140000 	cdpcs	0, 1, cr0, cr4, cr0, {0}
    12f4:	3a0e0301 	bcc	381f00 <startup-0x1fc7e100>
    12f8:	270b3b0b 	strcs	r3, [fp, -fp, lsl #22]
    12fc:	12011119 	andne	r1, r1, #1073741830	; 0x40000006
    1300:	96184006 	ldrls	r4, [r8], -r6
    1304:	00001942 	andeq	r1, r0, r2, asr #18
    1308:	01110100 	tsteq	r1, r0, lsl #2
    130c:	0b130e25 	bleq	4c4ba8 <startup-0x1fb3b458>
    1310:	01110e03 	tsteq	r1, r3, lsl #28
    1314:	17100612 			; <UNDEFINED> instruction: 0x17100612
    1318:	13020000 	movwne	r0, #8192	; 0x2000
    131c:	3a0b0b01 	bcc	2c3f28 <startup-0x1fd3c0d8>
    1320:	010b3b0b 	tsteq	fp, fp, lsl #22
    1324:	03000013 	movweq	r0, #19
    1328:	0e03000d 	cdpeq	0, 0, cr0, cr3, cr13, {0}
    132c:	0b3b0b3a 	bleq	ec401c <startup-0x1f13bfe4>
    1330:	0b381349 	bleq	e0605c <startup-0x1f1f9fa4>
    1334:	24040000 	strcs	r0, [r4], #-0
    1338:	3e0b0b00 	vmlacc.f64	d0, d11, d0
    133c:	000e030b 	andeq	r0, lr, fp, lsl #6
    1340:	000f0500 	andeq	r0, pc, r0, lsl #10
    1344:	13490b0b 	movtne	r0, #39691	; 0x9b0b
    1348:	16060000 	strne	r0, [r6], -r0
    134c:	3a0e0300 	bcc	381f54 <startup-0x1fc7e0ac>
    1350:	490b3b0b 	stmdbmi	fp, {r0, r1, r3, r8, r9, fp, ip, sp}
    1354:	07000013 	smladeq	r0, r3, r0, r0
    1358:	0e030113 	mcreq	1, 0, r0, cr3, cr3, {0}
    135c:	0b3a0b0b 	bleq	e83f90 <startup-0x1f17c070>
    1360:	13010b3b 	movwne	r0, #6971	; 0x1b3b
    1364:	24080000 	strcs	r0, [r8], #-0
    1368:	3e0b0b00 	vmlacc.f64	d0, d11, d0
    136c:	0008030b 	andeq	r0, r8, fp, lsl #6
    1370:	01150900 	tsteq	r5, r0, lsl #18
    1374:	13011927 	movwne	r1, #6439	; 0x1927
    1378:	050a0000 	streq	r0, [sl, #-0]
    137c:	00134900 	andseq	r4, r3, r0, lsl #18
    1380:	01010b00 	tsteq	r1, r0, lsl #22
    1384:	13011349 	movwne	r1, #4937	; 0x1349
    1388:	210c0000 	mrscs	r0, (UNDEF: 12)
    138c:	0d000000 	stceq	0, cr0, [r0, #-0]
    1390:	0e030034 	mcreq	0, 0, r0, cr3, cr4, {1}
    1394:	0b3b0b3a 	bleq	ec4084 <startup-0x1f13bf7c>
    1398:	193f1349 	ldmdbne	pc!, {r0, r3, r6, r8, r9, ip}	; <UNPREDICTABLE>
    139c:	0000193c 	andeq	r1, r0, ip, lsr r9
    13a0:	4900210e 	stmdbmi	r0, {r1, r2, r3, r8, sp}
    13a4:	000b2f13 	andeq	r2, fp, r3, lsl pc
    13a8:	00340f00 	eorseq	r0, r4, r0, lsl #30
    13ac:	0b3a0e03 	bleq	e84bc0 <startup-0x1f17b440>
    13b0:	13490b3b 	movtne	r0, #39739	; 0x9b3b
    13b4:	00001802 	andeq	r1, r0, r2, lsl #16
    13b8:	03003410 	movweq	r3, #1040	; 0x410
    13bc:	3b0b3a0e 	blcc	2cfbfc <startup-0x1fd30404>
    13c0:	3f13490b 	svccc	0x0013490b
    13c4:	00180219 	andseq	r0, r8, r9, lsl r2
    13c8:	012e1100 			; <UNDEFINED> instruction: 0x012e1100
    13cc:	0e03193f 			; <UNDEFINED> instruction: 0x0e03193f
    13d0:	0b3b0b3a 	bleq	ec40c0 <startup-0x1f13bf40>
    13d4:	01111927 	tsteq	r1, r7, lsr #18
    13d8:	18400612 	stmdane	r0, {r1, r4, r9, sl}^
    13dc:	01194296 			; <UNDEFINED> instruction: 0x01194296
    13e0:	12000013 	andne	r0, r0, #19
    13e4:	0e030005 	cdpeq	0, 0, cr0, cr3, cr5, {0}
    13e8:	0b3b0b3a 	bleq	ec40d8 <startup-0x1f13bf28>
    13ec:	18021349 	stmdane	r2, {r0, r3, r6, r8, r9, ip}
    13f0:	2e130000 	cdpcs	0, 1, cr0, cr3, cr0, {0}
    13f4:	3a0e0301 	bcc	382000 <startup-0x1fc7e000>
    13f8:	270b3b0b 	strcs	r3, [fp, -fp, lsl #22]
    13fc:	12011119 	andne	r1, r1, #1073741830	; 0x40000006
    1400:	96184006 	ldrls	r4, [r8], -r6
    1404:	00001942 	andeq	r1, r0, r2, asr #18
    1408:	01110100 	tsteq	r1, r0, lsl #2
    140c:	0b130e25 	bleq	4c4ca8 <startup-0x1fb3b358>
    1410:	01110e03 	tsteq	r1, r3, lsl #28
    1414:	17100612 			; <UNDEFINED> instruction: 0x17100612
    1418:	13020000 	movwne	r0, #8192	; 0x2000
    141c:	3a0b0b01 	bcc	2c4028 <startup-0x1fd3bfd8>
    1420:	010b3b0b 	tsteq	fp, fp, lsl #22
    1424:	03000013 	movweq	r0, #19
    1428:	0e03000d 	cdpeq	0, 0, cr0, cr3, cr13, {0}
    142c:	0b3b0b3a 	bleq	ec411c <startup-0x1f13bee4>
    1430:	0b381349 	bleq	e0615c <startup-0x1f1f9ea4>
    1434:	24040000 	strcs	r0, [r4], #-0
    1438:	3e0b0b00 	vmlacc.f64	d0, d11, d0
    143c:	000e030b 	andeq	r0, lr, fp, lsl #6
    1440:	000f0500 	andeq	r0, pc, r0, lsl #10
    1444:	13490b0b 	movtne	r0, #39691	; 0x9b0b
    1448:	16060000 	strne	r0, [r6], -r0
    144c:	3a0e0300 	bcc	382054 <startup-0x1fc7dfac>
    1450:	490b3b0b 	stmdbmi	fp, {r0, r1, r3, r8, r9, fp, ip, sp}
    1454:	07000013 	smladeq	r0, r3, r0, r0
    1458:	0e030113 	mcreq	1, 0, r0, cr3, cr3, {0}
    145c:	0b3a0b0b 	bleq	e84090 <startup-0x1f17bf70>
    1460:	13010b3b 	movwne	r0, #6971	; 0x1b3b
    1464:	24080000 	strcs	r0, [r8], #-0
    1468:	3e0b0b00 	vmlacc.f64	d0, d11, d0
    146c:	0008030b 	andeq	r0, r8, fp, lsl #6
    1470:	01150900 	tsteq	r5, r0, lsl #18
    1474:	13011927 	movwne	r1, #6439	; 0x1927
    1478:	050a0000 	streq	r0, [sl, #-0]
    147c:	00134900 	andseq	r4, r3, r0, lsl #18
    1480:	01010b00 	tsteq	r1, r0, lsl #22
    1484:	13011349 	movwne	r1, #4937	; 0x1349
    1488:	210c0000 	mrscs	r0, (UNDEF: 12)
    148c:	0d000000 	stceq	0, cr0, [r0, #-0]
    1490:	0e030034 	mcreq	0, 0, r0, cr3, cr4, {1}
    1494:	0b3b0b3a 	bleq	ec4184 <startup-0x1f13be7c>
    1498:	193f1349 	ldmdbne	pc!, {r0, r3, r6, r8, r9, ip}	; <UNPREDICTABLE>
    149c:	0000193c 	andeq	r1, r0, ip, lsr r9
    14a0:	4900210e 	stmdbmi	r0, {r1, r2, r3, r8, sp}
    14a4:	00052f13 	andeq	r2, r5, r3, lsl pc
    14a8:	00340f00 	eorseq	r0, r4, r0, lsl #30
    14ac:	0b3a0e03 	bleq	e84cc0 <startup-0x1f17b340>
    14b0:	13490b3b 	movtne	r0, #39739	; 0x9b3b
    14b4:	00001802 	andeq	r1, r0, r2, lsl #16
    14b8:	03003410 	movweq	r3, #1040	; 0x410
    14bc:	3b0b3a0e 	blcc	2cfcfc <startup-0x1fd30304>
    14c0:	3f13490b 	svccc	0x0013490b
    14c4:	00180219 	andseq	r0, r8, r9, lsl r2
    14c8:	00211100 	eoreq	r1, r1, r0, lsl #2
    14cc:	0b2f1349 	bleq	bc61f8 <startup-0x1f439e08>
    14d0:	2e120000 	cdpcs	0, 1, cr0, cr2, cr0, {0}
    14d4:	03193f01 	tsteq	r9, #1, 30
    14d8:	3b0b3a0e 	blcc	2cfd18 <startup-0x1fd302e8>
    14dc:	1119270b 	tstne	r9, fp, lsl #14
    14e0:	40061201 	andmi	r1, r6, r1, lsl #4
    14e4:	19429618 	stmdbne	r2, {r3, r4, r9, sl, ip, pc}^
    14e8:	00001301 	andeq	r1, r0, r1, lsl #6
    14ec:	03000513 	movweq	r0, #1299	; 0x513
    14f0:	3b0b3a0e 	blcc	2cfd30 <startup-0x1fd302d0>
    14f4:	0213490b 	andseq	r4, r3, #180224	; 0x2c000
    14f8:	14000018 	strne	r0, [r0], #-24	; 0xffffffe8
    14fc:	0e03012e 	adfeqsp	f0, f3, #0.5
    1500:	0b3b0b3a 	bleq	ec41f0 <startup-0x1f13be10>
    1504:	01111927 	tsteq	r1, r7, lsr #18
    1508:	18400612 	stmdane	r0, {r1, r4, r9, sl}^
    150c:	00194296 	mulseq	r9, r6, r2
    1510:	11010000 	mrsne	r0, (UNDEF: 1)
    1514:	130e2501 	movwne	r2, #58625	; 0xe501
    1518:	110e030b 	tstne	lr, fp, lsl #6
    151c:	10061201 	andne	r1, r6, r1, lsl #4
    1520:	02000017 	andeq	r0, r0, #23
    1524:	0b0b0113 	bleq	2c1978 <startup-0x1fd3e688>
    1528:	0b3b0b3a 	bleq	ec4218 <startup-0x1f13bde8>
    152c:	00001301 	andeq	r1, r0, r1, lsl #6
    1530:	03000d03 	movweq	r0, #3331	; 0xd03
    1534:	3b0b3a0e 	blcc	2cfd74 <startup-0x1fd3028c>
    1538:	3813490b 	ldmdacc	r3, {r0, r1, r3, r8, fp, lr}
    153c:	0400000b 	streq	r0, [r0], #-11
    1540:	0b0b0024 	bleq	2c15d8 <startup-0x1fd3ea28>
    1544:	0e030b3e 	vmoveq.16	d3[0], r0
    1548:	0f050000 	svceq	0x00050000
    154c:	490b0b00 	stmdbmi	fp, {r8, r9, fp}
    1550:	06000013 			; <UNDEFINED> instruction: 0x06000013
    1554:	0e030016 	mcreq	0, 0, r0, cr3, cr6, {0}
    1558:	0b3b0b3a 	bleq	ec4248 <startup-0x1f13bdb8>
    155c:	00001349 	andeq	r1, r0, r9, asr #6
    1560:	03011307 	movweq	r1, #4871	; 0x1307
    1564:	3a0b0b0e 	bcc	2c41a4 <startup-0x1fd3be5c>
    1568:	010b3b0b 	tsteq	fp, fp, lsl #22
    156c:	08000013 	stmdaeq	r0, {r0, r1, r4}
    1570:	0b0b0024 	bleq	2c1608 <startup-0x1fd3e9f8>
    1574:	08030b3e 	stmdaeq	r3, {r1, r2, r3, r4, r5, r8, r9, fp}
    1578:	15090000 	strne	r0, [r9, #-0]
    157c:	01192701 	tsteq	r9, r1, lsl #14
    1580:	0a000013 	beq	15d4 <startup-0x1fffea2c>
    1584:	13490005 	movtne	r0, #36869	; 0x9005
    1588:	010b0000 	mrseq	r0, (UNDEF: 11)
    158c:	01134901 	tsteq	r3, r1, lsl #18
    1590:	0c000013 	stceq	0, cr0, [r0], {19}
    1594:	00000021 	andeq	r0, r0, r1, lsr #32
    1598:	0300340d 	movweq	r3, #1037	; 0x40d
    159c:	3b0b3a0e 	blcc	2cfddc <startup-0x1fd30224>
    15a0:	3f13490b 	svccc	0x0013490b
    15a4:	00193c19 	andseq	r3, r9, r9, lsl ip
    15a8:	00210e00 	eoreq	r0, r1, r0, lsl #28
    15ac:	052f1349 	streq	r1, [pc, #-841]!	; 126b <startup-0x1fffed95>
    15b0:	340f0000 	strcc	r0, [pc], #-0	; 15b8 <startup-0x1fffea48>
    15b4:	3a0e0300 	bcc	3821bc <startup-0x1fc7de44>
    15b8:	490b3b0b 	stmdbmi	fp, {r0, r1, r3, r8, r9, fp, ip, sp}
    15bc:	00180213 	andseq	r0, r8, r3, lsl r2
    15c0:	00341000 	eorseq	r1, r4, r0
    15c4:	0b3a0e03 	bleq	e84dd8 <startup-0x1f17b228>
    15c8:	13490b3b 	movtne	r0, #39739	; 0x9b3b
    15cc:	1802193f 	stmdane	r2, {r0, r1, r2, r3, r4, r5, r8, fp, ip}
    15d0:	21110000 	tstcs	r1, r0
    15d4:	2f134900 	svccs	0x00134900
    15d8:	1200000b 	andne	r0, r0, #11
    15dc:	193f012e 	ldmdbne	pc!, {r1, r2, r3, r5, r8}	; <UNPREDICTABLE>
    15e0:	0b3a0e03 	bleq	e84df4 <startup-0x1f17b20c>
    15e4:	1927053b 	stmdbne	r7!, {r0, r1, r3, r4, r5, r8, sl}
    15e8:	06120111 			; <UNDEFINED> instruction: 0x06120111
    15ec:	42961840 	addsmi	r1, r6, #64, 16	; 0x400000
    15f0:	00130119 	andseq	r0, r3, r9, lsl r1
    15f4:	00051300 	andeq	r1, r5, r0, lsl #6
    15f8:	0b3a0e03 	bleq	e84e0c <startup-0x1f17b1f4>
    15fc:	1349053b 	movtne	r0, #38203	; 0x953b
    1600:	00001802 	andeq	r1, r0, r2, lsl #16
    1604:	03003414 	movweq	r3, #1044	; 0x414
    1608:	3b0b3a0e 	blcc	2cfe48 <startup-0x1fd301b8>
    160c:	02134905 	andseq	r4, r3, #81920	; 0x14000
    1610:	15000018 	strne	r0, [r0, #-24]	; 0xffffffe8
    1614:	0e03012e 	adfeqsp	f0, f3, #0.5
    1618:	0b3b0b3a 	bleq	ec4308 <startup-0x1f13bcf8>
    161c:	01111927 	tsteq	r1, r7, lsr #18
    1620:	18400612 	stmdane	r0, {r1, r4, r9, sl}^
    1624:	00194296 	mulseq	r9, r6, r2
    1628:	11010000 	mrsne	r0, (UNDEF: 1)
    162c:	130e2501 	movwne	r2, #58625	; 0xe501
    1630:	110e030b 	tstne	lr, fp, lsl #6
    1634:	10061201 	andne	r1, r6, r1, lsl #4
    1638:	02000017 	andeq	r0, r0, #23
    163c:	0b0b0113 	bleq	2c1a90 <startup-0x1fd3e570>
    1640:	0b3b0b3a 	bleq	ec4330 <startup-0x1f13bcd0>
    1644:	00001301 	andeq	r1, r0, r1, lsl #6
    1648:	03000d03 	movweq	r0, #3331	; 0xd03
    164c:	3b0b3a0e 	blcc	2cfe8c <startup-0x1fd30174>
    1650:	3813490b 	ldmdacc	r3, {r0, r1, r3, r8, fp, lr}
    1654:	0400000b 	streq	r0, [r0], #-11
    1658:	0b0b0024 	bleq	2c16f0 <startup-0x1fd3e910>
    165c:	0e030b3e 	vmoveq.16	d3[0], r0
    1660:	0f050000 	svceq	0x00050000
    1664:	490b0b00 	stmdbmi	fp, {r8, r9, fp}
    1668:	06000013 			; <UNDEFINED> instruction: 0x06000013
    166c:	0e030016 	mcreq	0, 0, r0, cr3, cr6, {0}
    1670:	0b3b0b3a 	bleq	ec4360 <startup-0x1f13bca0>
    1674:	00001349 	andeq	r1, r0, r9, asr #6
    1678:	03011307 	movweq	r1, #4871	; 0x1307
    167c:	3a0b0b0e 	bcc	2c42bc <startup-0x1fd3bd44>
    1680:	010b3b0b 	tsteq	fp, fp, lsl #22
    1684:	08000013 	stmdaeq	r0, {r0, r1, r4}
    1688:	0b0b0024 	bleq	2c1720 <startup-0x1fd3e8e0>
    168c:	08030b3e 	stmdaeq	r3, {r1, r2, r3, r4, r5, r8, r9, fp}
    1690:	15090000 	strne	r0, [r9, #-0]
    1694:	01192701 	tsteq	r9, r1, lsl #14
    1698:	0a000013 	beq	16ec <startup-0x1fffe914>
    169c:	13490005 	movtne	r0, #36869	; 0x9005
    16a0:	010b0000 	mrseq	r0, (UNDEF: 11)
    16a4:	01134901 	tsteq	r3, r1, lsl #18
    16a8:	0c000013 	stceq	0, cr0, [r0], {19}
    16ac:	00000021 	andeq	r0, r0, r1, lsr #32
    16b0:	0300340d 	movweq	r3, #1037	; 0x40d
    16b4:	3b0b3a0e 	blcc	2cfef4 <startup-0x1fd3010c>
    16b8:	3f13490b 	svccc	0x0013490b
    16bc:	00193c19 	andseq	r3, r9, r9, lsl ip
    16c0:	00210e00 	eoreq	r0, r1, r0, lsl #28
    16c4:	0b2f1349 	bleq	bc63f0 <startup-0x1f439c10>
    16c8:	340f0000 	strcc	r0, [pc], #-0	; 16d0 <startup-0x1fffe930>
    16cc:	3a0e0300 	bcc	3822d4 <startup-0x1fc7dd2c>
    16d0:	490b3b0b 	stmdbmi	fp, {r0, r1, r3, r8, r9, fp, ip, sp}
    16d4:	00180213 	andseq	r0, r8, r3, lsl r2
    16d8:	00341000 	eorseq	r1, r4, r0
    16dc:	0b3a0e03 	bleq	e84ef0 <startup-0x1f17b110>
    16e0:	13490b3b 	movtne	r0, #39739	; 0x9b3b
    16e4:	1802193f 	stmdane	r2, {r0, r1, r2, r3, r4, r5, r8, fp, ip}
    16e8:	2e110000 	cdpcs	0, 1, cr0, cr1, cr0, {0}
    16ec:	03193f01 	tsteq	r9, #1, 30
    16f0:	3b0b3a0e 	blcc	2cff30 <startup-0x1fd300d0>
    16f4:	1119270b 	tstne	r9, fp, lsl #14
    16f8:	40061201 	andmi	r1, r6, r1, lsl #4
    16fc:	19429618 	stmdbne	r2, {r3, r4, r9, sl, ip, pc}^
    1700:	00001301 	andeq	r1, r0, r1, lsl #6
    1704:	03000512 	movweq	r0, #1298	; 0x512
    1708:	3b0b3a0e 	blcc	2cff48 <startup-0x1fd300b8>
    170c:	0213490b 	andseq	r4, r3, #180224	; 0x2c000
    1710:	13000018 	movwne	r0, #24
    1714:	193f002e 	ldmdbne	pc!, {r1, r2, r3, r5}	; <UNPREDICTABLE>
    1718:	0b3a0e03 	bleq	e84f2c <startup-0x1f17b0d4>
    171c:	19270b3b 	stmdbne	r7!, {r0, r1, r3, r4, r5, r8, r9, fp}
    1720:	06120111 			; <UNDEFINED> instruction: 0x06120111
    1724:	42971840 	addsmi	r1, r7, #64, 16	; 0x400000
    1728:	14000019 	strne	r0, [r0], #-25	; 0xffffffe7
    172c:	0e03012e 	adfeqsp	f0, f3, #0.5
    1730:	0b3b0b3a 	bleq	ec4420 <startup-0x1f13bbe0>
    1734:	01111927 	tsteq	r1, r7, lsr #18
    1738:	18400612 	stmdane	r0, {r1, r4, r9, sl}^
    173c:	00194296 	mulseq	r9, r6, r2
	...

Disassembly of section .debug_aranges:

00000000 <.debug_aranges>:
   0:	00000024 	andeq	r0, r0, r4, lsr #32
   4:	00000002 	andeq	r0, r0, r2
   8:	00040000 	andeq	r0, r4, r0
   c:	00000000 	andeq	r0, r0, r0
  10:	20000010 	andcs	r0, r0, r0, lsl r0
  14:	00001e66 	andeq	r1, r0, r6, ror #28
  18:	20000000 	andcs	r0, r0, r0
  1c:	0000000c 	andeq	r0, r0, ip
	...
  28:	0000001c 	andeq	r0, r0, ip, lsl r0
  2c:	0b710002 	bleq	1c4003c <startup-0x1e3bffc4>
  30:	00040000 	andeq	r0, r4, r0
  34:	00000000 	andeq	r0, r0, r0
  38:	20001e78 	andcs	r1, r0, r8, ror lr
  3c:	00000056 	andeq	r0, r0, r6, asr r0
	...
  48:	0000001c 	andeq	r0, r0, ip, lsl r0
  4c:	0d550002 	ldcleq	0, cr0, [r5, #-8]
  50:	00040000 	andeq	r0, r4, r0
  54:	00000000 	andeq	r0, r0, r0
  58:	20001ed0 	ldrdcs	r1, [r0], -r0
  5c:	000002a8 	andeq	r0, r0, r8, lsr #5
	...
  68:	0000001c 	andeq	r0, r0, ip, lsl r0
  6c:	12840002 	addne	r0, r4, #2
  70:	00040000 	andeq	r0, r4, r0
  74:	00000000 	andeq	r0, r0, r0
  78:	20002178 	andcs	r2, r0, r8, ror r1
  7c:	00000240 	andeq	r0, r0, r0, asr #4
	...
  88:	0000001c 	andeq	r0, r0, ip, lsl r0
  8c:	14940002 	ldrne	r0, [r4], #2
  90:	00040000 	andeq	r0, r4, r0
  94:	00000000 	andeq	r0, r0, r0
  98:	200023b8 			; <UNDEFINED> instruction: 0x200023b8
  9c:	00000364 	andeq	r0, r0, r4, ror #6
	...
  a8:	0000001c 	andeq	r0, r0, ip, lsl r0
  ac:	1ad90002 	bne	ff6400bc <firstTime.4108+0xdf62ab64>
  b0:	00040000 	andeq	r0, r4, r0
  b4:	00000000 	andeq	r0, r0, r0
  b8:	2000271c 	andcs	r2, r0, ip, lsl r7
  bc:	00000238 	andeq	r0, r0, r8, lsr r2
	...
  c8:	0000001c 	andeq	r0, r0, ip, lsl r0
  cc:	1f750002 	svcne	0x00750002
  d0:	00040000 	andeq	r0, r4, r0
  d4:	00000000 	andeq	r0, r0, r0
  d8:	20002954 	andcs	r2, r0, r4, asr r9
  dc:	000003b0 			; <UNDEFINED> instruction: 0x000003b0
	...
  e8:	0000001c 	andeq	r0, r0, ip, lsl r0
  ec:	24d00002 	ldrbcs	r0, [r0], #2
  f0:	00040000 	andeq	r0, r4, r0
  f4:	00000000 	andeq	r0, r0, r0
  f8:	20002d04 	andcs	r2, r0, r4, lsl #26
  fc:	000002ac 	andeq	r0, r0, ip, lsr #5
	...
 108:	0000001c 	andeq	r0, r0, ip, lsl r0
 10c:	2a2f0002 	bcs	bc011c <startup-0x1f43fee4>
 110:	00040000 	andeq	r0, r4, r0
 114:	00000000 	andeq	r0, r0, r0
 118:	20002fb0 			; <UNDEFINED> instruction: 0x20002fb0
 11c:	0000052c 	andeq	r0, r0, ip, lsr #10
	...
 128:	0000001c 	andeq	r0, r0, ip, lsl r0
 12c:	31d40002 	bicscc	r0, r4, r2
 130:	00040000 	andeq	r0, r4, r0
 134:	00000000 	andeq	r0, r0, r0
 138:	200034dc 	ldrdcs	r3, [r0], -ip
 13c:	00000238 	andeq	r0, r0, r8, lsr r2
	...
 148:	0000001c 	andeq	r0, r0, ip, lsl r0
 14c:	36700002 	ldrbtcc	r0, [r0], -r2
 150:	00040000 	andeq	r0, r4, r0
 154:	00000000 	andeq	r0, r0, r0
 158:	20003714 	andcs	r3, r0, r4, lsl r7
 15c:	00000e90 	muleq	r0, r0, lr
	...
 168:	0000001c 	andeq	r0, r0, ip, lsl r0
 16c:	3f590002 	svccc	0x00590002
 170:	00040000 	andeq	r0, r4, r0
 174:	00000000 	andeq	r0, r0, r0
 178:	200045a4 	andcs	r4, r0, r4, lsr #11
 17c:	00000028 	andeq	r0, r0, r8, lsr #32
	...
 188:	0000001c 	andeq	r0, r0, ip, lsl r0
 18c:	405d0002 	subsmi	r0, sp, r2
 190:	00040000 	andeq	r0, r4, r0
 194:	00000000 	andeq	r0, r0, r0
 198:	200045cc 	andcs	r4, r0, ip, asr #11
 19c:	00000028 	andeq	r0, r0, r8, lsr #32
	...
 1a8:	0000001c 	andeq	r0, r0, ip, lsl r0
 1ac:	41240002 			; <UNDEFINED> instruction: 0x41240002
 1b0:	00040000 	andeq	r0, r4, r0
 1b4:	00000000 	andeq	r0, r0, r0
 1b8:	200045f4 	strdcs	r4, [r0], -r4	; <UNPREDICTABLE>
 1bc:	0000006c 	andeq	r0, r0, ip, rrx
	...
 1c8:	0000001c 	andeq	r0, r0, ip, lsl r0
 1cc:	425d0002 	subsmi	r0, sp, #2
 1d0:	00040000 	andeq	r0, r4, r0
 1d4:	00000000 	andeq	r0, r0, r0
 1d8:	20004660 	andcs	r4, r0, r0, ror #12
 1dc:	00000520 	andeq	r0, r0, r0, lsr #10
	...
 1e8:	0000001c 	andeq	r0, r0, ip, lsl r0
 1ec:	474e0002 	strbmi	r0, [lr, -r2]
 1f0:	00040000 	andeq	r0, r4, r0
 1f4:	00000000 	andeq	r0, r0, r0
 1f8:	20004b80 	andcs	r4, r0, r0, lsl #23
 1fc:	00000094 	muleq	r0, r4, r0
	...
 208:	0000001c 	andeq	r0, r0, ip, lsl r0
 20c:	48920002 	ldmmi	r2, {r1}
 210:	00040000 	andeq	r0, r4, r0
 214:	00000000 	andeq	r0, r0, r0
 218:	20004c14 	andcs	r4, r0, r4, lsl ip
 21c:	000000e8 	andeq	r0, r0, r8, ror #1
	...
 228:	0000001c 	andeq	r0, r0, ip, lsl r0
 22c:	4b760002 	blmi	1d8023c <startup-0x1e27fdc4>
 230:	00040000 	andeq	r0, r4, r0
 234:	00000000 	andeq	r0, r0, r0
 238:	20004cfc 	strdcs	r4, [r0], -ip
 23c:	000000e8 	andeq	r0, r0, r8, ror #1
	...
 248:	0000001c 	andeq	r0, r0, ip, lsl r0
 24c:	4e5a0002 	cdpmi	0, 5, cr0, cr10, cr2, {0}
 250:	00040000 	andeq	r0, r4, r0
 254:	00000000 	andeq	r0, r0, r0
 258:	20004de4 	andcs	r4, r0, r4, ror #27
 25c:	000000e8 	andeq	r0, r0, r8, ror #1
	...
 268:	0000001c 	andeq	r0, r0, ip, lsl r0
 26c:	513d0002 	teqpl	sp, r2
 270:	00040000 	andeq	r0, r4, r0
 274:	00000000 	andeq	r0, r0, r0
 278:	20004ecc 	andcs	r4, r0, ip, asr #29
 27c:	000000e8 	andeq	r0, r0, r8, ror #1
	...
 288:	0000001c 	andeq	r0, r0, ip, lsl r0
 28c:	54210002 	strtpl	r0, [r1], #-2
 290:	00040000 	andeq	r0, r4, r0
 294:	00000000 	andeq	r0, r0, r0
 298:	20004fb4 			; <UNDEFINED> instruction: 0x20004fb4
 29c:	000003d8 	ldrdeq	r0, [r0], -r8
	...
 2a8:	0000001c 	andeq	r0, r0, ip, lsl r0
 2ac:	5b1f0002 	blpl	7c02bc <startup-0x1f83fd44>
 2b0:	00040000 	andeq	r0, r4, r0
 2b4:	00000000 	andeq	r0, r0, r0
 2b8:	2000538c 	andcs	r5, r0, ip, lsl #7
 2bc:	000001d8 	ldrdeq	r0, [r0], -r8
	...

Disassembly of section .debug_ranges:

00000000 <.debug_ranges>:
   0:	20000010 	andcs	r0, r0, r0, lsl r0
   4:	20001e76 	andcs	r1, r0, r6, ror lr
   8:	20000000 	andcs	r0, r0, r0
   c:	2000000c 	andcs	r0, r0, ip
	...

Disassembly of section .debug_line:

00000000 <.debug_line>:
       0:	00000465 	andeq	r0, r0, r5, ror #8
       4:	017d0002 	cmneq	sp, r2
       8:	01020000 	mrseq	r0, (UNDEF: 2)
       c:	000d0efb 	strdeq	r0, [sp], -fp
      10:	01010101 	tsteq	r1, r1, lsl #2
      14:	01000000 	mrseq	r0, (UNDEF: 0)
      18:	43010000 	movwmi	r0, #4096	; 0x1000
      1c:	6f6d2f3a 	svcvs	0x006d2f3a
      20:	2f632f70 	svccs	0x00632f70
      24:	6c706f4d 	ldclvs	15, cr6, [r0], #-308	; 0xfffffecc
      28:	726f6261 	rsbvc	r6, pc, #268435462	; 0x10000006
      2c:	6f697461 	svcvs	0x00697461
      30:	2f72656e 	svccs	0x0072656e
      34:	73504944 	cmpvc	r0, #68, 18	; 0x110000
      38:	7469572d 	strbtvc	r5, [r9], #-1837	; 0xfffff8d3
      3c:	432f6863 			; <UNDEFINED> instruction: 0x432f6863
      40:	74730000 	ldrbtvc	r0, [r3], #-0
      44:	75747261 	ldrbvc	r7, [r4, #-609]!	; 0xfffffd9f
      48:	00632e70 	rsbeq	r2, r3, r0, ror lr
      4c:	73000001 	movwvc	r0, #1
      50:	74697270 	strbtvc	r7, [r9], #-624	; 0xfffffd90
      54:	00682e65 	rsbeq	r2, r8, r5, ror #28
      58:	69000001 	stmdbvs	r0, {r0}
      5c:	6567616d 	strbvs	r6, [r7, #-365]!	; 0xfffffe93
      60:	0100682e 	tsteq	r0, lr, lsr #16
      64:	61670000 	cmnvs	r7, r0
      68:	626f656d 	rsbvs	r6, pc, #457179136	; 0x1b400000
      6c:	7463656a 	strbtvc	r6, [r3], #-1386	; 0xfffffa96
      70:	0100682e 	tsteq	r0, lr, lsr #16
      74:	72670000 	rsbvc	r0, r7, #0
      78:	69687061 	stmdbvs	r8!, {r0, r5, r6, ip, sp, lr}^
      7c:	682e7363 	stmdavs	lr!, {r0, r1, r5, r6, r8, r9, ip, sp, lr}
      80:	00000100 	andeq	r0, r0, r0, lsl #2
      84:	736e6f6d 	cmnvc	lr, #436	; 0x1b4
      88:	5f726574 	svcpl	0x00726574
      8c:	63616c62 	cmnvs	r1, #25088	; 0x6200
      90:	62782e6b 	rsbsvs	r2, r8, #1712	; 0x6b0
      94:	0001006d 	andeq	r0, r1, sp, rrx
      98:	6e6f6d00 	cdpvs	13, 6, cr6, cr15, cr0, {0}
      9c:	72657473 	rsbvc	r7, r5, #1929379840	; 0x73000000
      a0:	67696c5f 			; <UNDEFINED> instruction: 0x67696c5f
      a4:	782e7468 	stmdavc	lr!, {r3, r5, r6, sl, ip, sp, lr}
      a8:	01006d62 	tsteq	r0, r2, ror #26
      ac:	6f6d0000 	svcvs	0x006d0000
      b0:	6574736e 	ldrbvs	r7, [r4, #-878]!	; 0xfffffc92
      b4:	72675f72 	rsbvc	r5, r7, #456	; 0x1c8
      b8:	782e7961 	stmdavc	lr!, {r0, r5, r6, r8, fp, ip, sp, lr}
      bc:	01006d62 	tsteq	r0, r2, ror #26
      c0:	72700000 	rsbsvc	r0, r0, #0
      c4:	5f737365 	svcpl	0x00737365
      c8:	63616c62 	cmnvs	r1, #25088	; 0x6200
      cc:	62782e6b 	rsbsvs	r2, r8, #1712	; 0x6b0
      d0:	0001006d 	andeq	r0, r1, sp, rrx
      d4:	65727000 	ldrbvs	r7, [r2, #-0]!
      d8:	6c5f7373 	mrrcvs	3, 7, r7, pc, cr3	; <UNPREDICTABLE>
      dc:	74686769 	strbtvc	r6, [r8], #-1897	; 0xfffff897
      e0:	6d62782e 	stclvs	8, cr7, [r2, #-184]!	; 0xffffff48
      e4:	00000100 	andeq	r0, r0, r0, lsl #2
      e8:	73657270 	cmnvc	r5, #112, 4
      ec:	72675f73 	rsbvc	r5, r7, #460	; 0x1cc
      f0:	782e7961 	stmdavc	lr!, {r0, r5, r6, r8, fp, ip, sp, lr}
      f4:	01006d62 	tsteq	r0, r2, ror #26
      f8:	61630000 	cmnvs	r3, r0
      fc:	656c7473 	strbvs	r7, [ip, #-1139]!	; 0xfffffb8d
     100:	616c625f 	cmnvs	ip, pc, asr r2
     104:	782e6b63 	stmdavc	lr!, {r0, r1, r5, r6, r8, r9, fp, sp, lr}
     108:	01006d62 	tsteq	r0, r2, ror #26
     10c:	61630000 	cmnvs	r3, r0
     110:	656c7473 	strbvs	r7, [ip, #-1139]!	; 0xfffffb8d
     114:	6172675f 	cmnvs	r2, pc, asr r7
     118:	62782e79 	rsbsvs	r2, r8, #1936	; 0x790
     11c:	0001006d 	andeq	r0, r1, sp, rrx
     120:	73616300 	cmnvc	r1, #0, 6
     124:	5f656c74 	svcpl	0x00656c74
     128:	6867696c 	stmdavs	r7!, {r2, r3, r5, r6, r8, fp, sp, lr}^
     12c:	62782e74 	rsbsvs	r2, r8, #116, 28	; 0x740
     130:	0001006d 	andeq	r0, r1, sp, rrx
     134:	74697400 	strbtvc	r7, [r9], #-1024	; 0xfffffc00
     138:	6c5f656c 	cfldr64vs	mvdx6, [pc], {108}	; 0x6c
     13c:	74686769 	strbtvc	r6, [r8], #-1897	; 0xfffff897
     140:	6d62782e 	stclvs	8, cr7, [r2, #-184]!	; 0xffffff48
     144:	00000100 	andeq	r0, r0, r0, lsl #2
     148:	6c746974 			; <UNDEFINED> instruction: 0x6c746974
     14c:	72675f65 	rsbvc	r5, r7, #404	; 0x194
     150:	782e7961 	stmdavc	lr!, {r0, r5, r6, r8, fp, ip, sp, lr}
     154:	01006d62 	tsteq	r0, r2, ror #26
     158:	69740000 	ldmdbvs	r4!, {}^	; <UNPREDICTABLE>
     15c:	5f656c74 	svcpl	0x00656c74
     160:	63616c62 	cmnvs	r1, #25088	; 0x6200
     164:	62782e6b 	rsbsvs	r2, r8, #1712	; 0x6b0
     168:	0001006d 	andeq	r0, r1, sp, rrx
     16c:	6f6c7300 	svcvs	0x006c7300
     170:	65745f77 	ldrbvs	r5, [r4, #-3959]!	; 0xfffff089
     174:	682e7478 	stmdavs	lr!, {r3, r4, r5, r6, sl, ip, sp, lr}
     178:	00000100 	andeq	r0, r0, r0, lsl #2
     17c:	782e6762 	stmdavc	lr!, {r1, r5, r6, r8, r9, sl, sp, lr}
     180:	01006d62 	tsteq	r0, r2, ror #26
     184:	00000000 	andeq	r0, r0, r0
     188:	00000205 	andeq	r0, r0, r5, lsl #4
     18c:	33032000 	movwcc	r2, #12288	; 0x3000
     190:	025e1301 	subseq	r1, lr, #67108864	; 0x4000000
     194:	01010003 	tsteq	r1, r3
     198:	10020500 	andne	r0, r2, r0, lsl #10
     19c:	03200000 	nopeq	{0}	; <UNPREDICTABLE>
     1a0:	3d2f0128 	stfccs	f0, [pc, #-160]!	; 108 <startup-0x1ffffef8>
     1a4:	03303030 	teqeq	r0, #48	; 0x30
     1a8:	2f3d742c 	svccs	0x003d742c
     1ac:	672f3e67 	strvs	r3, [pc, -r7, ror #28]!
     1b0:	3e672f3e 	mcrcc	15, 3, r2, cr7, cr14, {1}
     1b4:	2f3e672f 	svccs	0x003e672f
     1b8:	672f3e67 	strvs	r3, [pc, -r7, ror #28]!
     1bc:	3e672f3e 	mcrcc	15, 3, r2, cr7, cr14, {1}
     1c0:	2f3d672f 	svccs	0x003d672f
     1c4:	672f3d67 	strvs	r3, [pc, -r7, ror #26]!
     1c8:	3d672f3e 	stclcc	15, cr2, [r7, #-248]!	; 0xffffff08
     1cc:	2f3d672f 	svccs	0x003d672f
     1d0:	52023f67 	andpl	r3, r2, #412	; 0x19c
     1d4:	322f4c17 	eorcc	r4, pc, #5888	; 0x1700
     1d8:	4bad5975 	blmi	feb567b4 <firstTime.4108+0xdeb4125c>
     1dc:	754e4b4b 	strbvc	r4, [lr, #-2891]	; 0xfffff4b5
     1e0:	6759bb75 			; <UNDEFINED> instruction: 0x6759bb75
     1e4:	ad59755c 	cfldr64ge	mvdx7, [r9, #-368]	; 0xfffffe90
     1e8:	c94e4b4b 	stmdbgt	lr, {r0, r1, r3, r6, r8, r9, fp, lr}^
     1ec:	8383e59f 	orrhi	lr, r3, #666894336	; 0x27c00000
     1f0:	85835985 	strhi	r5, [r3, #2437]	; 0x985
     1f4:	83838367 	orrhi	r8, r3, #-1677721599	; 0x9c000001
     1f8:	85836785 	strhi	r6, [r3, #1925]	; 0x785
     1fc:	69858367 	stmibvs	r5, {r0, r1, r2, r5, r6, r8, r9, pc}
     200:	86918367 	ldrhi	r8, [r1], r7, ror #6
     204:	85838367 	strhi	r8, [r3, #871]	; 0x367
     208:	85838367 	strhi	r8, [r3, #871]	; 0x367
     20c:	85838367 	strhi	r8, [r3, #871]	; 0x367
     210:	85678567 	strbhi	r8, [r7, #-1383]!	; 0xfffffa99
     214:	85838367 	strhi	r8, [r3, #871]	; 0x367
     218:	69686868 	stmdbvs	r8!, {r3, r5, r6, fp, sp, lr}^
     21c:	13570267 	cmpne	r7, #1879048198	; 0x70000006
     220:	84678483 	strbthi	r8, [r7], #-1155	; 0xfffffb7d
     224:	37028367 	strcc	r8, [r2, -r7, ror #6]
     228:	83838315 	orrhi	r8, r3, #1409286144	; 0x54000000
     22c:	83838384 	orrhi	r8, r3, #132, 6	; 0x10000002
     230:	83838385 	orrhi	r8, r3, #335544322	; 0x14000002
     234:	83838384 	orrhi	r8, r3, #132, 6	; 0x10000002
     238:	75821103 	strvc	r1, [r2, #259]	; 0x103
     23c:	75757575 	ldrbvc	r7, [r5, #-1397]!	; 0xfffffa8b
     240:	75757575 	ldrbvc	r7, [r5, #-1397]!	; 0xfffffa8b
     244:	75756775 	ldrbvc	r6, [r5, #-1909]!	; 0xfffff88b
     248:	2f2f8483 	svccs	0x002f8483
     24c:	4b594b30 	blmi	1652f14 <startup-0x1e9ad0ec>
     250:	4b594b59 	blmi	1652fbc <startup-0x1e9ad044>
     254:	59594b59 	ldmdbpl	r9, {r0, r3, r4, r6, r8, r9, fp, lr}^
     258:	5995415a 	ldmibpl	r5, {r1, r3, r4, r6, r8, lr}
     25c:	3d3d4f3a 	ldccc	15, cr4, [sp, #-232]!	; 0xffffff18
     260:	5a175d02 	bpl	5d7670 <startup-0x1fa28990>
     264:	67679367 	strbvs	r9, [r7, -r7, ror #6]!
     268:	67676767 	strbvs	r6, [r7, -r7, ror #14]!
     26c:	02004267 	andeq	r4, r0, #1879048198	; 0x70000006
     270:	82060104 	andhi	r0, r6, #4, 2
     274:	83bb8306 			; <UNDEFINED> instruction: 0x83bb8306
     278:	c9917530 	ldmibgt	r1, {r4, r5, r8, sl, ip, sp, lr}
     27c:	c9c9c9bb 	stmibgt	r9, {r0, r1, r3, r4, r5, r7, r8, fp, lr, pc}^
     280:	c9f3c9d7 	ldmibgt	r3!, {r0, r1, r2, r4, r6, r7, r8, fp, lr, pc}^
     284:	08c92108 	stmiaeq	r9, {r3, r8, sp}^
     288:	2f08c913 	svccs	0x0008c913
     28c:	c91308c9 	ldmdbgt	r3, {r0, r3, r6, r7, fp}
     290:	08c92f08 	stmiaeq	r9, {r3, r8, r9, sl, fp, sp}^
     294:	2f08bb4b 	svccs	0x0008bb4b
     298:	4b143002 	blmi	50c2a8 <startup-0x1faf3d58>
     29c:	6a3d4b3d 	bvs	f52f98 <startup-0x1f0ad068>
     2a0:	3d4b3d59 	stclcc	13, cr3, [fp, #-356]	; 0xfffffe9c
     2a4:	bbbbbb6a 	bllt	feeef054 <firstTime.4108+0xdeed9afc>
     2a8:	83e5bbbb 	mvnhi	fp, #191488	; 0x2ec00
     2ac:	595932e7 	ldmdbpl	r9, {r0, r1, r2, r5, r6, r7, r9, ip, sp}^
     2b0:	69677667 	stmdbvs	r7!, {r0, r1, r2, r5, r6, r9, sl, ip, sp, lr}^
     2b4:	00686767 	rsbeq	r6, r8, r7, ror #14
     2b8:	08030402 	stmdaeq	r3, {r1, sl}
     2bc:	040200c9 	streq	r0, [r2], #-201	; 0xffffff37
     2c0:	0200c903 	andeq	ip, r0, #49152	; 0xc000
     2c4:	8e080304 	cdphi	3, 0, cr0, cr8, cr4, {0}
     2c8:	01040200 	mrseq	r0, R12_usr
     2cc:	4e065806 	cdpmi	8, 0, cr5, cr6, cr6, {0}
     2d0:	f3675967 	vmls.i32	<illegal reg q10.5>, <illegal reg q3.5>, <illegal reg q11.5>
     2d4:	5a9191f3 	bpl	fe464aa8 <firstTime.4108+0xde44f550>
     2d8:	68bc9167 	ldmvs	ip!, {r0, r1, r2, r5, r6, r8, ip, pc}
     2dc:	01040200 	mrseq	r0, R12_usr
     2e0:	91066606 	tstls	r6, r6, lsl #12
     2e4:	0402005b 	streq	r0, [r2], #-91	; 0xffffffa5
     2e8:	06740601 	ldrbteq	r0, [r4], -r1, lsl #12
     2ec:	91bc6775 			; <UNDEFINED> instruction: 0x91bc6775
     2f0:	085a914c 	ldmdaeq	sl, {r2, r3, r6, r8, ip, pc}^
     2f4:	04020023 	streq	r0, [r2], #-35	; 0xffffffdd
     2f8:	06900601 	ldreq	r0, [r0], r1, lsl #12
     2fc:	674b2108 	strbvs	r2, [fp, -r8, lsl #2]
     300:	0402004d 	streq	r0, [r2], #-77	; 0xffffffb3
     304:	3c080601 	stccc	6, cr0, [r8], {1}
     308:	02040200 	andeq	r0, r4, #0, 4
     30c:	003d0806 	eorseq	r0, sp, r6, lsl #16
     310:	73020402 	movwvc	r0, #9218	; 0x2402
     314:	28556730 	ldmdacs	r5, {r4, r5, r8, r9, sl, sp, lr}^
     318:	76036767 	strvc	r6, [r3], -r7, ror #14
     31c:	03012802 	movweq	r2, #6146	; 0x1802
     320:	003f200d 	eorseq	r2, pc, sp
     324:	06010402 	streq	r0, [r1], -r2, lsl #8
     328:	04020082 	streq	r0, [r2], #-130	; 0xffffff7e
     32c:	02009002 	andeq	r9, r0, #2
     330:	06900304 	ldreq	r0, [r0], r4, lsl #6
     334:	68845959 	stmvs	r4, {r0, r3, r4, r6, r8, fp, ip, lr}
     338:	76c96767 	strbvc	r6, [r9], r7, ror #14
     33c:	f49168d7 			; <UNDEFINED> instruction: 0xf49168d7
     340:	5b598383 	blpl	1661154 <startup-0x1e99eeac>
     344:	040200bd 	streq	r0, [r2], #-189	; 0xffffff43
     348:	00f20601 	rscseq	r0, r2, r1, lsl #12
     34c:	08020402 	stmdaeq	r2, {r1, sl}
     350:	13080620 	movwne	r0, #34336	; 0x8620
     354:	02005969 	andeq	r5, r0, #1720320	; 0x1a4000
     358:	f2060104 	vrhadd.s8	d0, d6, d4
     35c:	02040200 	andeq	r0, r4, #0, 4
     360:	08062008 	stmdaeq	r6, {r3, sp}
     364:	4b4e3d13 	blmi	138f7b8 <startup-0x1ec70848>
     368:	59bb5167 	ldmibpl	fp!, {r0, r1, r2, r5, r6, r8, ip, lr}
     36c:	08d76859 	ldmeq	r7, {r0, r3, r4, r6, fp, sp, lr}^
     370:	00959114 	addseq	r9, r5, r4, lsl r1
     374:	06010402 	streq	r0, [r1], -r2, lsl #8
     378:	04020066 	streq	r0, [r2], #-102	; 0xffffff9a
     37c:	0200f202 	andeq	pc, r0, #536870912	; 0x20000000
     380:	20080304 	andcs	r0, r8, r4, lsl #6
     384:	4b130806 	blmi	4c23a4 <startup-0x1fb3dc5c>
     388:	132d0267 			; <UNDEFINED> instruction: 0x132d0267
     38c:	bf210867 	svclt	0x00210867
     390:	009f084b 	addseq	r0, pc, fp, asr #16
     394:	08010402 	stmdaeq	r1, {r1, sl}
     398:	04020075 	streq	r0, [r2], #-117	; 0xffffff8b
     39c:	2f490801 	svccs	0x00490801
     3a0:	01040200 	mrseq	r0, R12_usr
     3a4:	4b064a06 	blmi	192bc4 <startup-0x1fe6d43c>
     3a8:	0200674b 	andeq	r6, r0, #19660800	; 0x12c0000
     3ac:	7a030204 	bvc	c0bc4 <startup-0x1ff3f43c>
     3b0:	0402004a 	streq	r0, [r2], #-74	; 0xffffffb6
     3b4:	06580601 	ldrbeq	r0, [r8], -r1, lsl #12
     3b8:	084a0d03 	stmdaeq	sl, {r0, r1, r8, sl, fp}^
     3bc:	0402003d 	streq	r0, [r2], #-61	; 0xffffffc3
     3c0:	3c080601 	stccc	6, cr0, [r8], {1}
     3c4:	02040200 	andeq	r0, r4, #0, 4
     3c8:	4b063c08 	blmi	18f3f0 <startup-0x1fe70c10>
     3cc:	50674b4b 	rsbpl	r4, r7, fp, asr #22
     3d0:	02003d08 	andeq	r3, r0, #8, 26	; 0x200
     3d4:	4a060104 	bmi	1807ec <startup-0x1fe7f814>
     3d8:	02040200 	andeq	r0, r4, #0, 4
     3dc:	3d4b064a 	stclcc	6, cr0, [fp, #-296]	; 0xfffffed8
     3e0:	6b91e5d7 	blvs	fe479b44 <firstTime.4108+0xde4645ec>
     3e4:	02003d08 	andeq	r3, r0, #8, 26	; 0x200
     3e8:	4a060104 	bmi	180800 <startup-0x1fe7f800>
     3ec:	02040200 	andeq	r0, r4, #0, 4
     3f0:	04020058 	streq	r0, [r2], #-88	; 0xffffffa8
     3f4:	02009003 	andeq	r9, r0, #3
     3f8:	064a0404 	strbeq	r0, [sl], -r4, lsl #8
     3fc:	d73d674b 	ldrle	r6, [sp, -fp, asr #14]!
     400:	bc765be5 			; <UNDEFINED> instruction: 0xbc765be5
     404:	bc3f3d67 	ldclt	13, cr3, [pc], #-412	; 270 <startup-0x1ffffd90>
     408:	3d163402 	cfldrscc	mvf3, [r6, #-8]
     40c:	5a404b3d 	bpl	1013108 <startup-0x1efecef8>
     410:	8359592f 	cmphi	r9, #770048	; 0xbc000
     414:	834b8391 	movthi	r8, #45969	; 0xb391
     418:	4b594b59 	blmi	1653184 <startup-0x1e9ace7c>
     41c:	83834b59 	orrhi	r4, r3, #91136	; 0x16400
     420:	91919191 			; <UNDEFINED> instruction: 0x91919191
     424:	83838683 	orrhi	r8, r3, #137363456	; 0x8300000
     428:	5a83833e 	bpl	fe0e1128 <firstTime.4108+0xde0cbbd0>
     42c:	3d83832f 	stccc	3, cr8, [r3, #188]	; 0xbc
     430:	832f4c5a 			; <UNDEFINED> instruction: 0x832f4c5a
     434:	59246784 	stmdbpl	r4!, {r2, r7, r8, r9, sl, sp, lr}
     438:	593de691 	ldmdbpl	sp!, {r0, r4, r7, r9, sl, sp, lr, pc}
     43c:	6723764b 	strvs	r7, [r3, -fp, asr #12]!
     440:	5975bc3d 	ldmdbpl	r5!, {r0, r2, r3, r4, r5, sl, fp, ip, sp, pc}^
     444:	033e59cb 	teqeq	lr, #3325952	; 0x32c000
     448:	03207de0 			; <UNDEFINED> instruction: 0x03207de0
     44c:	033c0291 	teqeq	ip, #268435465	; 0x10000009
     450:	02003c0f 	andeq	r3, r0, #3840	; 0xf00
     454:	84030104 	strhi	r0, [r3], #-260	; 0xfffffefc
     458:	8503207d 	strhi	r2, [r3, #-125]	; 0xffffff83
     45c:	01320203 	teqeq	r2, r3, lsl #4
     460:	213e3d4b 	teqcs	lr, fp, asr #26
     464:	01000402 	tsteq	r0, r2, lsl #8
     468:	00008a01 	andeq	r8, r0, r1, lsl #20
     46c:	70000200 	andvc	r0, r0, r0, lsl #4
     470:	02000000 	andeq	r0, r0, #0
     474:	0d0efb01 	vstreq	d15, [lr, #-4]
     478:	01010100 	mrseq	r0, (UNDEF: 17)
     47c:	00000001 	andeq	r0, r0, r1
     480:	01000001 	tsteq	r0, r1
     484:	6d2f3a43 	vstmdbvs	pc!, {s6-s72}
     488:	632f706f 			; <UNDEFINED> instruction: 0x632f706f
     48c:	706f4d2f 	rsbvc	r4, pc, pc, lsr #26
     490:	6f62616c 	svcvs	0x0062616c
     494:	69746172 	ldmdbvs	r4!, {r1, r4, r5, r6, r8, sp, lr}^
     498:	72656e6f 	rsbvc	r6, r5, #1776	; 0x6f0
     49c:	5049442f 	subpl	r4, r9, pc, lsr #8
     4a0:	69572d73 	ldmdbvs	r7, {r0, r1, r4, r5, r6, r8, sl, fp, sp}^
     4a4:	2f686374 	svccs	0x00686374
     4a8:	67000043 	strvs	r0, [r0, -r3, asr #32]
     4ac:	6f656d61 	svcvs	0x00656d61
     4b0:	63656a62 	cmnvs	r5, #401408	; 0x62000
     4b4:	00632e74 	rsbeq	r2, r3, r4, ror lr
     4b8:	73000001 	movwvc	r0, #1
     4bc:	74697270 	strbtvc	r7, [r9], #-624	; 0xfffffd90
     4c0:	00682e65 	rsbeq	r2, r8, r5, ror #28
     4c4:	69000001 	stmdbvs	r0, {r0}
     4c8:	6567616d 	strbvs	r6, [r7, #-365]!	; 0xfffffe93
     4cc:	0100682e 	tsteq	r0, lr, lsr #16
     4d0:	61670000 	cmnvs	r7, r0
     4d4:	626f656d 	rsbvs	r6, pc, #457179136	; 0x1b400000
     4d8:	7463656a 	strbtvc	r6, [r3], #-1386	; 0xfffffa96
     4dc:	0100682e 	tsteq	r0, lr, lsr #16
     4e0:	00000000 	andeq	r0, r0, r0
     4e4:	1e780205 	cdpne	2, 7, cr0, cr8, cr5, {0}
     4e8:	4c192000 	ldcmi	0, cr2, [r9], {-0}
     4ec:	67594b4c 	ldrbvs	r4, [r9, -ip, asr #22]
     4f0:	0402ca3d 	streq	ip, [r2], #-2621	; 0xfffff5c3
     4f4:	84010100 	strhi	r0, [r1], #-256	; 0xffffff00
     4f8:	02000001 	andeq	r0, r0, #1
     4fc:	00013700 	andeq	r3, r1, r0, lsl #14
     500:	fb010200 	blx	40d0a <startup-0x1ffbf2f6>
     504:	01000d0e 	tsteq	r0, lr, lsl #26
     508:	00010101 	andeq	r0, r1, r1, lsl #2
     50c:	00010000 	andeq	r0, r1, r0
     510:	3a430100 	bcc	10c0918 <startup-0x1ef3f6e8>
     514:	706f6d2f 	rsbvc	r6, pc, pc, lsr #26
     518:	4d2f632f 	stcmi	3, cr6, [pc, #-188]!	; 464 <startup-0x1ffffb9c>
     51c:	616c706f 	cmnvs	ip, pc, rrx
     520:	61726f62 	cmnvs	r2, r2, ror #30
     524:	6e6f6974 			; <UNDEFINED> instruction: 0x6e6f6974
     528:	442f7265 	strtmi	r7, [pc], #-613	; 530 <startup-0x1ffffad0>
     52c:	2d735049 	ldclcs	0, cr5, [r3, #-292]!	; 0xfffffedc
     530:	63746957 	cmnvs	r4, #1425408	; 0x15c000
     534:	00432f68 	subeq	r2, r3, r8, ror #30
     538:	72696600 	rsbvc	r6, r9, #0, 12
     53c:	00632e65 	rsbeq	r2, r3, r5, ror #28
     540:	73000001 	movwvc	r0, #1
     544:	74697270 	strbtvc	r7, [r9], #-624	; 0xfffffd90
     548:	00682e65 	rsbeq	r2, r8, r5, ror #28
     54c:	69000001 	stmdbvs	r0, {r0}
     550:	6567616d 	strbvs	r6, [r7, #-365]!	; 0xfffffe93
     554:	0100682e 	tsteq	r0, lr, lsr #16
     558:	61670000 	cmnvs	r7, r0
     55c:	626f656d 	rsbvs	r6, pc, #457179136	; 0x1b400000
     560:	7463656a 	strbtvc	r6, [r3], #-1386	; 0xfffffa96
     564:	0100682e 	tsteq	r0, lr, lsr #16
     568:	69660000 	stmdbvs	r6!, {}^	; <UNPREDICTABLE>
     56c:	625f6572 	subsvs	r6, pc, #478150656	; 0x1c800000
     570:	6b63616c 	blvs	18d8b28 <startup-0x1e7274d8>
     574:	782e325f 	stmdavc	lr!, {r0, r1, r2, r3, r4, r6, r9, ip, sp}
     578:	01006d62 	tsteq	r0, r2, ror #26
     57c:	69660000 	stmdbvs	r6!, {}^	; <UNPREDICTABLE>
     580:	5f316572 	svcpl	0x00316572
     584:	79617267 	stmdbvc	r1!, {r0, r1, r2, r5, r6, r9, ip, sp, lr}^
     588:	6d62782e 	stclvs	8, cr7, [r2, #-184]!	; 0xffffff48
     58c:	00000100 	andeq	r0, r0, r0, lsl #2
     590:	65726966 	ldrbvs	r6, [r2, #-2406]!	; 0xfffff69a
     594:	696c5f31 	stmdbvs	ip!, {r0, r4, r5, r8, r9, sl, fp, ip, lr}^
     598:	2e746867 	cdpcs	8, 7, cr6, cr4, cr7, {3}
     59c:	006d6278 	rsbeq	r6, sp, r8, ror r2
     5a0:	66000001 	strvs	r0, [r0], -r1
     5a4:	32657269 	rsbcc	r7, r5, #-1879048186	; 0x90000006
     5a8:	6172675f 	cmnvs	r2, pc, asr r7
     5ac:	62782e79 	rsbsvs	r2, r8, #1936	; 0x790
     5b0:	0001006d 	andeq	r0, r1, sp, rrx
     5b4:	72696600 	rsbvc	r6, r9, #0, 12
     5b8:	6c5f3265 	lfmvs	f3, 2, [pc], {101}	; 0x65
     5bc:	74686769 	strbtvc	r6, [r8], #-1897	; 0xfffff897
     5c0:	6d62782e 	stclvs	8, cr7, [r2, #-184]!	; 0xffffff48
     5c4:	00000100 	andeq	r0, r0, r0, lsl #2
     5c8:	65726966 	ldrbvs	r6, [r2, #-2406]!	; 0xfffff69a
     5cc:	72675f33 	rsbvc	r5, r7, #51, 30	; 0xcc
     5d0:	782e7961 	stmdavc	lr!, {r0, r5, r6, r8, fp, ip, sp, lr}
     5d4:	01006d62 	tsteq	r0, r2, ror #26
     5d8:	69660000 	stmdbvs	r6!, {}^	; <UNPREDICTABLE>
     5dc:	5f336572 	svcpl	0x00336572
     5e0:	6867696c 	stmdavs	r7!, {r2, r3, r5, r6, r8, fp, sp, lr}^
     5e4:	62782e74 	rsbsvs	r2, r8, #116, 28	; 0x740
     5e8:	0001006d 	andeq	r0, r1, sp, rrx
     5ec:	72696600 	rsbvc	r6, r9, #0, 12
     5f0:	675f3465 	ldrbvs	r3, [pc, -r5, ror #8]
     5f4:	2e796172 	mrccs	1, 3, r6, cr9, cr2, {3}
     5f8:	006d6278 	rsbeq	r6, sp, r8, ror r2
     5fc:	66000001 	strvs	r0, [r0], -r1
     600:	34657269 	strbtcc	r7, [r5], #-617	; 0xfffffd97
     604:	67696c5f 			; <UNDEFINED> instruction: 0x67696c5f
     608:	782e7468 	stmdavc	lr!, {r3, r5, r6, sl, ip, sp, lr}
     60c:	01006d62 	tsteq	r0, r2, ror #26
     610:	69660000 	stmdbvs	r6!, {}^	; <UNPREDICTABLE>
     614:	5f356572 	svcpl	0x00356572
     618:	79617267 	stmdbvc	r1!, {r0, r1, r2, r5, r6, r9, ip, sp, lr}^
     61c:	6d62782e 	stclvs	8, cr7, [r2, #-184]!	; 0xffffff48
     620:	00000100 	andeq	r0, r0, r0, lsl #2
     624:	65726966 	ldrbvs	r6, [r2, #-2406]!	; 0xfffff69a
     628:	696c5f35 	stmdbvs	ip!, {r0, r2, r4, r5, r8, r9, sl, fp, ip, lr}^
     62c:	2e746867 	cdpcs	8, 7, cr6, cr4, cr7, {3}
     630:	006d6278 	rsbeq	r6, sp, r8, ror r2
     634:	00000001 	andeq	r0, r0, r1
     638:	d0020500 	andle	r0, r2, r0, lsl #10
     63c:	0320001e 			; <UNDEFINED> instruction: 0x0320001e
     640:	2f3d0130 	svccs	0x003d0130
     644:	672f3e67 	strvs	r3, [pc, -r7, ror #28]!
     648:	3e672f3e 	mcrcc	15, 3, r2, cr7, cr14, {1}
     64c:	2f3e672f 	svccs	0x003e672f
     650:	672f3e67 	strvs	r3, [pc, -r7, ror #28]!
     654:	3e672f3e 	mcrcc	15, 3, r2, cr7, cr14, {1}
     658:	2f3e672f 	svccs	0x003e672f
     65c:	672f3e67 	strvs	r3, [pc, -r7, ror #28]!
     660:	3d672f3e 	stclcc	15, cr2, [r7, #-248]!	; 0xffffff08
     664:	4c144602 	ldcmi	6, cr4, [r4], {2}
     668:	4b3e2f4b 	blmi	f8c39c <startup-0x1f073c64>
     66c:	5a595959 	bpl	1656bd8 <startup-0x1e9a9428>
     670:	91919191 			; <UNDEFINED> instruction: 0x91919191
     674:	3d3d3e93 	ldccc	14, cr3, [sp, #-588]!	; 0xfffffdb4
     678:	31023d3d 	tstcc	r2, sp, lsr sp
     67c:	ee010100 	adfs	f0, f1, f0
     680:	02000000 	andeq	r0, r0, #0
     684:	00006c00 	andeq	r6, r0, r0, lsl #24
     688:	fb010200 	blx	40e92 <startup-0x1ffbf16e>
     68c:	01000d0e 	tsteq	r0, lr, lsl #26
     690:	00010101 	andeq	r0, r1, r1, lsl #2
     694:	00010000 	andeq	r0, r1, r0
     698:	3a430100 	bcc	10c0aa0 <startup-0x1ef3f560>
     69c:	706f6d2f 	rsbvc	r6, pc, pc, lsr #26
     6a0:	4d2f632f 	stcmi	3, cr6, [pc, #-188]!	; 5ec <startup-0x1ffffa14>
     6a4:	616c706f 	cmnvs	ip, pc, rrx
     6a8:	61726f62 	cmnvs	r2, r2, ror #30
     6ac:	6e6f6974 			; <UNDEFINED> instruction: 0x6e6f6974
     6b0:	442f7265 	strtmi	r7, [pc], #-613	; 6b8 <startup-0x1ffff948>
     6b4:	2d735049 	ldclcs	0, cr5, [r3, #-292]!	; 0xfffffedc
     6b8:	63746957 	cmnvs	r4, #1425408	; 0x15c000
     6bc:	00432f68 	subeq	r2, r3, r8, ror #30
     6c0:	616c7000 	cmnvs	ip, r0
     6c4:	2e726579 	mrccs	5, 3, r6, cr2, cr9, {3}
     6c8:	00010063 	andeq	r0, r1, r3, rrx
     6cc:	72707300 	rsbsvc	r7, r0, #0, 6
     6d0:	2e657469 	cdpcs	4, 6, cr7, cr5, cr9, {3}
     6d4:	00010068 	andeq	r0, r1, r8, rrx
     6d8:	616d6900 	cmnvs	sp, r0, lsl #18
     6dc:	682e6567 	stmdavs	lr!, {r0, r1, r2, r5, r6, r8, sl, sp, lr}
     6e0:	00000100 	andeq	r0, r0, r0, lsl #2
     6e4:	656d6167 	strbvs	r6, [sp, #-359]!	; 0xfffffe99
     6e8:	656a626f 	strbvs	r6, [sl, #-623]!	; 0xfffffd91
     6ec:	682e7463 	stmdavs	lr!, {r0, r1, r5, r6, sl, ip, sp, lr}
     6f0:	00000100 	andeq	r0, r0, r0, lsl #2
     6f4:	02050000 	andeq	r0, r5, #0
     6f8:	20002178 	andcs	r2, r0, r8, ror r1
     6fc:	2f010d03 	svccs	0x00010d03
     700:	3d3d3d3d 	ldccc	13, cr3, [sp, #-244]!	; 0xffffff0c
     704:	594dca3d 	stmdbpl	sp, {r0, r2, r3, r4, r5, r9, fp, lr, pc}^
     708:	00cd3d67 	sbceq	r3, sp, r7, ror #26
     70c:	06010402 	streq	r0, [r1], -r2, lsl #8
     710:	04020082 	streq	r0, [r2], #-130	; 0xffffff7e
     714:	4b064a02 	blmi	192f24 <startup-0x1fe6d0dc>
     718:	4b3d754d 	blmi	f5dc54 <startup-0x1f0a23ac>
     71c:	02004c68 	andeq	r4, r0, #104, 24	; 0x6800
     720:	74060104 	strvc	r0, [r6], #-260	; 0xfffffefc
     724:	4b3d7506 	blmi	f5db44 <startup-0x1f0a24bc>
     728:	5d754d68 	ldclpl	13, cr4, [r5, #-416]!	; 0xfffffe60
     72c:	01040200 	mrseq	r0, R12_usr
     730:	59064a06 	stmdbpl	r6, {r1, r2, r9, fp, lr}
     734:	0402005b 	streq	r0, [r2], #-91	; 0xffffffa5
     738:	064a0601 	strbeq	r0, [sl], -r1, lsl #12
     73c:	02005b59 	andeq	r5, r0, #91136	; 0x16400
     740:	4a060104 	bmi	180b58 <startup-0x1fe7f4a8>
     744:	04040200 	streq	r0, [r4], #-512	; 0xfffffe00
     748:	04020058 	streq	r0, [r2], #-88	; 0xffffffa8
     74c:	02004a05 	andeq	r4, r0, #20480	; 0x5000
     750:	00580604 	subseq	r0, r8, r4, lsl #12
     754:	4a070402 	bmi	1c1764 <startup-0x1fe3e89c>
     758:	005b4b06 	subseq	r4, fp, r6, lsl #22
     75c:	06010402 	streq	r0, [r1], -r2, lsl #8
     760:	5b750674 	blpl	1d42138 <startup-0x1e2bdec8>
     764:	4b684b76 	blmi	1a13544 <startup-0x1e5ecabc>
     768:	6867675c 	stmdavs	r7!, {r2, r3, r4, r6, r8, r9, sl, sp, lr}^
     76c:	01001202 	tsteq	r0, r2, lsl #4
     770:	0001dd01 	andeq	sp, r1, r1, lsl #26
     774:	82000200 	andhi	r0, r0, #0, 4
     778:	02000001 	andeq	r0, r0, #1
     77c:	0d0efb01 	vstreq	d15, [lr, #-4]
     780:	01010100 	mrseq	r0, (UNDEF: 17)
     784:	00000001 	andeq	r0, r0, r1
     788:	01000001 	tsteq	r0, r1
     78c:	6d2f3a43 	vstmdbvs	pc!, {s6-s72}
     790:	632f706f 			; <UNDEFINED> instruction: 0x632f706f
     794:	706f4d2f 	rsbvc	r4, pc, pc, lsr #26
     798:	6f62616c 	svcvs	0x0062616c
     79c:	69746172 	ldmdbvs	r4!, {r1, r4, r5, r6, r8, sp, lr}^
     7a0:	72656e6f 	rsbvc	r6, r5, #1776	; 0x6f0
     7a4:	5049442f 	subpl	r4, r9, pc, lsr #8
     7a8:	69572d73 	ldmdbvs	r7, {r0, r1, r4, r5, r6, r8, sl, fp, sp}^
     7ac:	2f686374 	svccs	0x00686374
     7b0:	62000043 	andvs	r0, r0, #67	; 0x43
     7b4:	2e647269 	cdpcs	2, 6, cr7, cr4, cr9, {3}
     7b8:	00010063 	andeq	r0, r1, r3, rrx
     7bc:	72707300 	rsbsvc	r7, r0, #0, 6
     7c0:	2e657469 	cdpcs	4, 6, cr7, cr5, cr9, {3}
     7c4:	00010068 	andeq	r0, r1, r8, rrx
     7c8:	616d6900 	cmnvs	sp, r0, lsl #18
     7cc:	682e6567 	stmdavs	lr!, {r0, r1, r2, r5, r6, r8, sl, sp, lr}
     7d0:	00000100 	andeq	r0, r0, r0, lsl #2
     7d4:	656d6167 	strbvs	r6, [sp, #-359]!	; 0xfffffe99
     7d8:	656a626f 	strbvs	r6, [sl, #-623]!	; 0xfffffd91
     7dc:	682e7463 	stmdavs	lr!, {r0, r1, r5, r6, sl, ip, sp, lr}
     7e0:	00000100 	andeq	r0, r0, r0, lsl #2
     7e4:	64726962 	ldrbtvs	r6, [r2], #-2402	; 0xfffff69e
     7e8:	6c625f31 	stclvs	15, cr5, [r2], #-196	; 0xffffff3c
     7ec:	2e6b6361 	cdpcs	3, 6, cr6, cr11, cr1, {3}
     7f0:	006d6278 	rsbeq	r6, sp, r8, ror r2
     7f4:	62000001 	andvs	r0, r0, #1
     7f8:	31647269 	cmncc	r4, r9, ror #4
     7fc:	6172675f 	cmnvs	r2, pc, asr r7
     800:	62782e79 	rsbsvs	r2, r8, #1936	; 0x790
     804:	0001006d 	andeq	r0, r1, sp, rrx
     808:	72696200 	rsbvc	r6, r9, #0, 4
     80c:	6c5f3164 	ldfvse	f3, [pc], {100}	; 0x64
     810:	74686769 	strbtvc	r6, [r8], #-1897	; 0xfffff897
     814:	6d62782e 	stclvs	8, cr7, [r2, #-184]!	; 0xffffff48
     818:	00000100 	andeq	r0, r0, r0, lsl #2
     81c:	64726962 	ldrbtvs	r6, [r2], #-2402	; 0xfffff69e
     820:	6c625f32 	stclvs	15, cr5, [r2], #-200	; 0xffffff38
     824:	2e6b6361 	cdpcs	3, 6, cr6, cr11, cr1, {3}
     828:	006d6278 	rsbeq	r6, sp, r8, ror r2
     82c:	62000001 	andvs	r0, r0, #1
     830:	32647269 	rsbcc	r7, r4, #-1879048186	; 0x90000006
     834:	6172675f 	cmnvs	r2, pc, asr r7
     838:	62782e79 	rsbsvs	r2, r8, #1936	; 0x790
     83c:	0001006d 	andeq	r0, r1, sp, rrx
     840:	72696200 	rsbvc	r6, r9, #0, 4
     844:	6c5f3264 	lfmvs	f3, 2, [pc], {100}	; 0x64
     848:	74686769 	strbtvc	r6, [r8], #-1897	; 0xfffff897
     84c:	6d62782e 	stclvs	8, cr7, [r2, #-184]!	; 0xffffff48
     850:	00000100 	andeq	r0, r0, r0, lsl #2
     854:	64726962 	ldrbtvs	r6, [r2], #-2402	; 0xfffff69e
     858:	6c625f33 	stclvs	15, cr5, [r2], #-204	; 0xffffff34
     85c:	2e6b6361 	cdpcs	3, 6, cr6, cr11, cr1, {3}
     860:	006d6278 	rsbeq	r6, sp, r8, ror r2
     864:	62000001 	andvs	r0, r0, #1
     868:	33647269 	cmncc	r4, #-1879048186	; 0x90000006
     86c:	6172675f 	cmnvs	r2, pc, asr r7
     870:	62782e79 	rsbsvs	r2, r8, #1936	; 0x790
     874:	0001006d 	andeq	r0, r1, sp, rrx
     878:	72696200 	rsbvc	r6, r9, #0, 4
     87c:	6c5f3364 	mrrcvs	3, 6, r3, pc, cr4	; <UNPREDICTABLE>
     880:	74686769 	strbtvc	r6, [r8], #-1897	; 0xfffff897
     884:	6d62782e 	stclvs	8, cr7, [r2, #-184]!	; 0xffffff48
     888:	00000100 	andeq	r0, r0, r0, lsl #2
     88c:	64726962 	ldrbtvs	r6, [r2], #-2402	; 0xfffff69e
     890:	6c625f34 	stclvs	15, cr5, [r2], #-208	; 0xffffff30
     894:	2e6b6361 	cdpcs	3, 6, cr6, cr11, cr1, {3}
     898:	006d6278 	rsbeq	r6, sp, r8, ror r2
     89c:	62000001 	andvs	r0, r0, #1
     8a0:	34647269 	strbtcc	r7, [r4], #-617	; 0xfffffd97
     8a4:	6172675f 	cmnvs	r2, pc, asr r7
     8a8:	62782e79 	rsbsvs	r2, r8, #1936	; 0x790
     8ac:	0001006d 	andeq	r0, r1, sp, rrx
     8b0:	72696200 	rsbvc	r6, r9, #0, 4
     8b4:	6c5f3464 	cfldrdvs	mvd3, [pc], {100}	; 0x64
     8b8:	74686769 	strbtvc	r6, [r8], #-1897	; 0xfffff897
     8bc:	6d62782e 	stclvs	8, cr7, [r2, #-184]!	; 0xffffff48
     8c0:	00000100 	andeq	r0, r0, r0, lsl #2
     8c4:	64726962 	ldrbtvs	r6, [r2], #-2402	; 0xfffff69e
     8c8:	6c625f35 	stclvs	15, cr5, [r2], #-212	; 0xffffff2c
     8cc:	2e6b6361 	cdpcs	3, 6, cr6, cr11, cr1, {3}
     8d0:	006d6278 	rsbeq	r6, sp, r8, ror r2
     8d4:	62000001 	andvs	r0, r0, #1
     8d8:	35647269 	strbcc	r7, [r4, #-617]!	; 0xfffffd97
     8dc:	6172675f 	cmnvs	r2, pc, asr r7
     8e0:	62782e79 	rsbsvs	r2, r8, #1936	; 0x790
     8e4:	0001006d 	andeq	r0, r1, sp, rrx
     8e8:	72696200 	rsbvc	r6, r9, #0, 4
     8ec:	6c5f3564 	cfldr64vs	mvdx3, [pc], {100}	; 0x64
     8f0:	74686769 	strbtvc	r6, [r8], #-1897	; 0xfffff897
     8f4:	6d62782e 	stclvs	8, cr7, [r2, #-184]!	; 0xffffff48
     8f8:	00000100 	andeq	r0, r0, r0, lsl #2
     8fc:	02050000 	andeq	r0, r5, #0
     900:	200023b8 			; <UNDEFINED> instruction: 0x200023b8
     904:	3e013f03 	cdpcc	15, 0, cr3, cr1, cr3, {0}
     908:	2f3d672f 	svccs	0x003d672f
     90c:	672f3d67 	strvs	r3, [pc, -r7, ror #26]!
     910:	3d672f3e 	stclcc	15, cr2, [r7, #-248]!	; 0xffffff08
     914:	2f3d672f 	svccs	0x003d672f
     918:	672f3f67 	strvs	r3, [pc, -r7, ror #30]!
     91c:	3d672f3d 	stclcc	15, cr2, [r7, #-244]!	; 0xffffff0c
     920:	2f3e672f 	svccs	0x003e672f
     924:	672f3d67 	strvs	r3, [pc, -r7, ror #26]!
     928:	3e672f3d 	mcrcc	15, 3, r2, cr7, cr13, {1}
     92c:	2f3d672f 	svccs	0x003d672f
     930:	672f3d67 	strvs	r3, [pc, -r7, ror #26]!
     934:	145e023d 	ldrbne	r0, [lr], #-573	; 0xfffffdc3
     938:	3e2f4b4c 	vnmulcc.f64	d4, d15, d12
     93c:	5959594b 	ldmdbpl	r9, {r0, r1, r3, r6, r8, fp, ip, lr}^
     940:	91915c59 	orrsls	r5, r1, r9, asr ip
     944:	94939191 	ldrls	r9, [r3], #401	; 0x191
     948:	3d3d3d3e 	ldccc	13, cr3, [sp, #-248]!	; 0xffffff08
     94c:	003d023d 	eorseq	r0, sp, sp, lsr r2
     950:	01610101 	cmneq	r1, r1, lsl #2
     954:	00020000 	andeq	r0, r2, r0
     958:	0000011c 	andeq	r0, r0, ip, lsl r1
     95c:	0efb0102 	cdpeq	1, 15, cr0, cr11, cr2, {0}
     960:	0101000d 	tsteq	r1, sp
     964:	00000101 	andeq	r0, r0, r1, lsl #2
     968:	00000100 	andeq	r0, r0, r0, lsl #2
     96c:	2f3a4301 	svccs	0x003a4301
     970:	2f706f6d 	svccs	0x00706f6d
     974:	6f4d2f63 	svcvs	0x004d2f63
     978:	62616c70 	rsbvs	r6, r1, #112, 24	; 0x7000
     97c:	7461726f 	strbtvc	r7, [r1], #-623	; 0xfffffd91
     980:	656e6f69 	strbvs	r6, [lr, #-3945]!	; 0xfffff097
     984:	49442f72 	stmdbmi	r4, {r1, r4, r5, r6, r8, r9, sl, fp, sp}^
     988:	572d7350 			; <UNDEFINED> instruction: 0x572d7350
     98c:	68637469 	stmdavs	r3!, {r0, r3, r5, r6, sl, ip, sp, lr}^
     990:	0000432f 	andeq	r4, r0, pc, lsr #6
     994:	63746977 	cmnvs	r4, #1949696	; 0x1dc000
     998:	00632e68 	rsbeq	r2, r3, r8, ror #28
     99c:	73000001 	movwvc	r0, #1
     9a0:	74697270 	strbtvc	r7, [r9], #-624	; 0xfffffd90
     9a4:	00682e65 	rsbeq	r2, r8, r5, ror #28
     9a8:	69000001 	stmdbvs	r0, {r0}
     9ac:	6567616d 	strbvs	r6, [r7, #-365]!	; 0xfffffe93
     9b0:	0100682e 	tsteq	r0, lr, lsr #16
     9b4:	61670000 	cmnvs	r7, r0
     9b8:	626f656d 	rsbvs	r6, pc, #457179136	; 0x1b400000
     9bc:	7463656a 	strbtvc	r6, [r3], #-1386	; 0xfffffa96
     9c0:	0100682e 	tsteq	r0, lr, lsr #16
     9c4:	69770000 	ldmdbvs	r7!, {}^	; <UNPREDICTABLE>
     9c8:	31686374 	smccc	34356	; 0x8634
     9cc:	616c625f 	cmnvs	ip, pc, asr r2
     9d0:	782e6b63 	stmdavc	lr!, {r0, r1, r5, r6, r8, r9, fp, sp, lr}
     9d4:	01006d62 	tsteq	r0, r2, ror #26
     9d8:	69770000 	ldmdbvs	r7!, {}^	; <UNPREDICTABLE>
     9dc:	31686374 	smccc	34356	; 0x8634
     9e0:	6172675f 	cmnvs	r2, pc, asr r7
     9e4:	62782e79 	rsbsvs	r2, r8, #1936	; 0x790
     9e8:	0001006d 	andeq	r0, r1, sp, rrx
     9ec:	74697700 	strbtvc	r7, [r9], #-1792	; 0xfffff900
     9f0:	5f316863 	svcpl	0x00316863
     9f4:	6867696c 	stmdavs	r7!, {r2, r3, r5, r6, r8, fp, sp, lr}^
     9f8:	62782e74 	rsbsvs	r2, r8, #116, 28	; 0x740
     9fc:	0001006d 	andeq	r0, r1, sp, rrx
     a00:	74697700 	strbtvc	r7, [r9], #-1792	; 0xfffff900
     a04:	5f326863 	svcpl	0x00326863
     a08:	63616c62 	cmnvs	r1, #25088	; 0x6200
     a0c:	62782e6b 	rsbsvs	r2, r8, #1712	; 0x6b0
     a10:	0001006d 	andeq	r0, r1, sp, rrx
     a14:	74697700 	strbtvc	r7, [r9], #-1792	; 0xfffff900
     a18:	5f326863 	svcpl	0x00326863
     a1c:	79617267 	stmdbvc	r1!, {r0, r1, r2, r5, r6, r9, ip, sp, lr}^
     a20:	6d62782e 	stclvs	8, cr7, [r2, #-184]!	; 0xffffff48
     a24:	00000100 	andeq	r0, r0, r0, lsl #2
     a28:	63746977 	cmnvs	r4, #1949696	; 0x1dc000
     a2c:	6c5f3268 	lfmvs	f3, 2, [pc], {104}	; 0x68
     a30:	74686769 	strbtvc	r6, [r8], #-1897	; 0xfffff897
     a34:	6d62782e 	stclvs	8, cr7, [r2, #-184]!	; 0xffffff48
     a38:	00000100 	andeq	r0, r0, r0, lsl #2
     a3c:	63746977 	cmnvs	r4, #1949696	; 0x1dc000
     a40:	625f3368 	subsvs	r3, pc, #104, 6	; 0xa0000001
     a44:	6b63616c 	blvs	18d8ffc <startup-0x1e727004>
     a48:	6d62782e 	stclvs	8, cr7, [r2, #-184]!	; 0xffffff48
     a4c:	00000100 	andeq	r0, r0, r0, lsl #2
     a50:	63746977 	cmnvs	r4, #1949696	; 0x1dc000
     a54:	675f3368 	ldrbvs	r3, [pc, -r8, ror #6]
     a58:	2e796172 	mrccs	1, 3, r6, cr9, cr2, {3}
     a5c:	006d6278 	rsbeq	r6, sp, r8, ror r2
     a60:	77000001 	strvc	r0, [r0, -r1]
     a64:	68637469 	stmdavs	r3!, {r0, r3, r5, r6, sl, ip, sp, lr}^
     a68:	696c5f33 	stmdbvs	ip!, {r0, r1, r4, r5, r8, r9, sl, fp, ip, lr}^
     a6c:	2e746867 	cdpcs	8, 7, cr6, cr4, cr7, {3}
     a70:	006d6278 	rsbeq	r6, sp, r8, ror r2
     a74:	00000001 	andeq	r0, r0, r1
     a78:	1c020500 	cfstr32ne	mvfx0, [r2], {-0}
     a7c:	03200027 			; <UNDEFINED> instruction: 0x03200027
     a80:	2f3e0128 	svccs	0x003e0128
     a84:	672f3d67 	strvs	r3, [pc, -r7, ror #26]!
     a88:	3e672f3d 	mcrcc	15, 3, r2, cr7, cr13, {1}
     a8c:	2f3d672f 	svccs	0x003d672f
     a90:	672f3d67 	strvs	r3, [pc, -r7, ror #26]!
     a94:	3d672f3f 	stclcc	15, cr2, [r7, #-252]!	; 0xffffff04
     a98:	2f3d672f 	svccs	0x003d672f
     a9c:	3a023e67 	bcc	90440 <startup-0x1ff6fbc0>
     aa0:	2f4b4c14 	svccs	0x004b4c14
     aa4:	59594b3e 	ldmdbpl	r9, {r1, r2, r3, r4, r5, r8, r9, fp, lr}^
     aa8:	9191915b 	orrsls	r9, r1, fp, asr r1
     aac:	3d3d3e94 	ldccc	14, cr3, [sp, #-592]!	; 0xfffffdb0
     ab0:	29023d3d 	stmdbcs	r2, {r0, r2, r3, r4, r5, r8, sl, fp, ip, sp}
     ab4:	8a010100 	bhi	40ebc <startup-0x1ffbf144>
     ab8:	02000001 	andeq	r0, r0, #1
     abc:	00011a00 	andeq	r1, r1, r0, lsl #20
     ac0:	fb010200 	blx	412ca <startup-0x1ffbed36>
     ac4:	01000d0e 	tsteq	r0, lr, lsl #26
     ac8:	00010101 	andeq	r0, r1, r1, lsl #2
     acc:	00010000 	andeq	r0, r1, r0
     ad0:	3a430100 	bcc	10c0ed8 <startup-0x1ef3f128>
     ad4:	706f6d2f 	rsbvc	r6, pc, pc, lsr #26
     ad8:	4d2f632f 	stcmi	3, cr6, [pc, #-188]!	; a24 <startup-0x1ffff5dc>
     adc:	616c706f 	cmnvs	ip, pc, rrx
     ae0:	61726f62 	cmnvs	r2, r2, ror #30
     ae4:	6e6f6974 			; <UNDEFINED> instruction: 0x6e6f6974
     ae8:	442f7265 	strtmi	r7, [pc], #-613	; af0 <startup-0x1ffff510>
     aec:	2d735049 	ldclcs	0, cr5, [r3, #-292]!	; 0xfffffedc
     af0:	63746957 	cmnvs	r4, #1425408	; 0x15c000
     af4:	00432f68 	subeq	r2, r3, r8, ror #30
     af8:	50494400 	subpl	r4, r9, r0, lsl #8
     afc:	0100632e 	tsteq	r0, lr, lsr #6
     b00:	70730000 	rsbsvc	r0, r3, r0
     b04:	65746972 	ldrbvs	r6, [r4, #-2418]!	; 0xfffff68e
     b08:	0100682e 	tsteq	r0, lr, lsr #16
     b0c:	6d690000 	stclvs	0, cr0, [r9, #-0]
     b10:	2e656761 	cdpcs	7, 6, cr6, cr5, cr1, {3}
     b14:	00010068 	andeq	r0, r1, r8, rrx
     b18:	6d616700 	stclvs	7, cr6, [r1, #-0]
     b1c:	6a626f65 	bvs	189c8b8 <startup-0x1e763748>
     b20:	2e746365 	cdpcs	3, 7, cr6, cr4, cr5, {3}
     b24:	00010068 	andeq	r0, r1, r8, rrx
     b28:	74697700 	strbtvc	r7, [r9], #-1792	; 0xfffff900
     b2c:	5f316863 	svcpl	0x00316863
     b30:	63616c62 	cmnvs	r1, #25088	; 0x6200
     b34:	62782e6b 	rsbsvs	r2, r8, #1712	; 0x6b0
     b38:	0001006d 	andeq	r0, r1, sp, rrx
     b3c:	74697700 	strbtvc	r7, [r9], #-1792	; 0xfffff900
     b40:	5f316863 	svcpl	0x00316863
     b44:	79617267 	stmdbvc	r1!, {r0, r1, r2, r5, r6, r9, ip, sp, lr}^
     b48:	6d62782e 	stclvs	8, cr7, [r2, #-184]!	; 0xffffff48
     b4c:	00000100 	andeq	r0, r0, r0, lsl #2
     b50:	63746977 	cmnvs	r4, #1949696	; 0x1dc000
     b54:	6c5f3168 	ldfvse	f3, [pc], {104}	; 0x68
     b58:	74686769 	strbtvc	r6, [r8], #-1897	; 0xfffff897
     b5c:	6d62782e 	stclvs	8, cr7, [r2, #-184]!	; 0xffffff48
     b60:	00000100 	andeq	r0, r0, r0, lsl #2
     b64:	63746977 	cmnvs	r4, #1949696	; 0x1dc000
     b68:	625f3268 	subsvs	r3, pc, #104, 4	; 0x80000006
     b6c:	6b63616c 	blvs	18d9124 <startup-0x1e726edc>
     b70:	6d62782e 	stclvs	8, cr7, [r2, #-184]!	; 0xffffff48
     b74:	00000100 	andeq	r0, r0, r0, lsl #2
     b78:	63746977 	cmnvs	r4, #1949696	; 0x1dc000
     b7c:	675f3268 	ldrbvs	r3, [pc, -r8, ror #4]
     b80:	2e796172 	mrccs	1, 3, r6, cr9, cr2, {3}
     b84:	006d6278 	rsbeq	r6, sp, r8, ror r2
     b88:	77000001 	strvc	r0, [r0, -r1]
     b8c:	68637469 	stmdavs	r3!, {r0, r3, r5, r6, sl, ip, sp, lr}^
     b90:	696c5f32 	stmdbvs	ip!, {r1, r4, r5, r8, r9, sl, fp, ip, lr}^
     b94:	2e746867 	cdpcs	8, 7, cr6, cr4, cr7, {3}
     b98:	006d6278 	rsbeq	r6, sp, r8, ror r2
     b9c:	77000001 	strvc	r0, [r0, -r1]
     ba0:	68637469 	stmdavs	r3!, {r0, r3, r5, r6, sl, ip, sp, lr}^
     ba4:	6c625f33 	stclvs	15, cr5, [r2], #-204	; 0xffffff34
     ba8:	2e6b6361 	cdpcs	3, 6, cr6, cr11, cr1, {3}
     bac:	006d6278 	rsbeq	r6, sp, r8, ror r2
     bb0:	77000001 	strvc	r0, [r0, -r1]
     bb4:	68637469 	stmdavs	r3!, {r0, r3, r5, r6, sl, ip, sp, lr}^
     bb8:	72675f33 	rsbvc	r5, r7, #51, 30	; 0xcc
     bbc:	782e7961 	stmdavc	lr!, {r0, r5, r6, r8, fp, ip, sp, lr}
     bc0:	01006d62 	tsteq	r0, r2, ror #26
     bc4:	69770000 	ldmdbvs	r7!, {}^	; <UNPREDICTABLE>
     bc8:	33686374 	cmncc	r8, #116, 6	; 0xd0000001
     bcc:	67696c5f 			; <UNDEFINED> instruction: 0x67696c5f
     bd0:	782e7468 	stmdavc	lr!, {r3, r5, r6, sl, ip, sp, lr}
     bd4:	01006d62 	tsteq	r0, r2, ror #26
     bd8:	00000000 	andeq	r0, r0, r0
     bdc:	29540205 	ldmdbcs	r4, {r0, r2, r9}^
     be0:	2c032000 	stccs	0, cr2, [r3], {-0}
     be4:	672f3e01 	strvs	r3, [pc, -r1, lsl #28]!
     be8:	3d672f3d 	stclcc	15, cr2, [r7, #-244]!	; 0xffffff0c
     bec:	2f3e672f 	svccs	0x003e672f
     bf0:	672f3d67 	strvs	r3, [pc, -r7, ror #26]!
     bf4:	3f672f3d 	svccc	0x00672f3d
     bf8:	2f3d672f 	svccs	0x003d672f
     bfc:	672f3d67 	strvs	r3, [pc, -r7, ror #26]!
     c00:	143a023e 	ldrtne	r0, [sl], #-574	; 0xfffffdc2
     c04:	3e2f4b4c 	vnmulcc.f64	d4, d15, d12
     c08:	5b59594b 	blpl	165713c <startup-0x1e9a8ec4>
     c0c:	94919191 	ldrls	r9, [r1], #401	; 0x191
     c10:	3d3d3d3e 	ldccc	13, cr3, [sp, #-248]!	; 0xffffff08
     c14:	1a29023d 	bne	a41510 <startup-0x1f5beaf0>
     c18:	923d3d59 	eorsls	r3, sp, #5696	; 0x1640
     c1c:	3d3d3d2f 	ldccc	13, cr3, [sp, #-188]!	; 0xffffff44
     c20:	4bd83d4b 	blmi	ff610154 <firstTime.4108+0xdf5fabfc>
     c24:	675a5a4b 	ldrbvs	r5, [sl, -fp, asr #20]
     c28:	0402004c 	streq	r0, [r2], #-76	; 0xffffffb4
     c2c:	06820601 	streq	r0, [r2], r1, lsl #12
     c30:	4d913d83 	ldcmi	13, cr3, [r1, #524]	; 0x20c
     c34:	08ae4b50 	stmiaeq	lr!, {r4, r6, r8, r9, fp, lr}
     c38:	503d4b31 	eorspl	r4, sp, r1, lsr fp
     c3c:	3f3d4b1b 	svccc	0x003d4b1b
     c40:	01001002 	tsteq	r0, r2
     c44:	0001a501 	andeq	sl, r1, r1, lsl #10
     c48:	57000200 	strpl	r0, [r0, -r0, lsl #4]
     c4c:	02000001 	andeq	r0, r0, #1
     c50:	0d0efb01 	vstreq	d15, [lr, #-4]
     c54:	01010100 	mrseq	r0, (UNDEF: 17)
     c58:	00000001 	andeq	r0, r0, r1
     c5c:	01000001 	tsteq	r0, r1
     c60:	6d2f3a43 	vstmdbvs	pc!, {s6-s72}
     c64:	632f706f 			; <UNDEFINED> instruction: 0x632f706f
     c68:	706f4d2f 	rsbvc	r4, pc, pc, lsr #26
     c6c:	6f62616c 	svcvs	0x0062616c
     c70:	69746172 	ldmdbvs	r4!, {r1, r4, r5, r6, r8, sp, lr}^
     c74:	72656e6f 	rsbvc	r6, r5, #1776	; 0x6f0
     c78:	5049442f 	subpl	r4, r9, pc, lsr #8
     c7c:	69572d73 	ldmdbvs	r7, {r0, r1, r4, r5, r6, r8, sl, fp, sp}^
     c80:	2f686374 	svccs	0x00686374
     c84:	66000043 	strvs	r0, [r0], -r3, asr #32
     c88:	656d616c 	strbvs	r6, [sp, #-364]!	; 0xfffffe94
     c8c:	0100632e 	tsteq	r0, lr, lsr #6
     c90:	70730000 	rsbsvc	r0, r3, r0
     c94:	65746972 	ldrbvs	r6, [r4, #-2418]!	; 0xfffff68e
     c98:	0100682e 	tsteq	r0, lr, lsr #16
     c9c:	6d690000 	stclvs	0, cr0, [r9, #-0]
     ca0:	2e656761 	cdpcs	7, 6, cr6, cr5, cr1, {3}
     ca4:	00010068 	andeq	r0, r1, r8, rrx
     ca8:	6d616700 	stclvs	7, cr6, [r1, #-0]
     cac:	6a626f65 	bvs	189ca48 <startup-0x1e7635b8>
     cb0:	2e746365 	cdpcs	3, 7, cr6, cr4, cr5, {3}
     cb4:	00010068 	andeq	r0, r1, r8, rrx
     cb8:	616c6600 	cmnvs	ip, r0, lsl #12
     cbc:	5f31656d 	svcpl	0x0031656d
     cc0:	63616c62 	cmnvs	r1, #25088	; 0x6200
     cc4:	62782e6b 	rsbsvs	r2, r8, #1712	; 0x6b0
     cc8:	0001006d 	andeq	r0, r1, sp, rrx
     ccc:	616c6600 	cmnvs	ip, r0, lsl #12
     cd0:	5f31656d 	svcpl	0x0031656d
     cd4:	79617267 	stmdbvc	r1!, {r0, r1, r2, r5, r6, r9, ip, sp, lr}^
     cd8:	6d62782e 	stclvs	8, cr7, [r2, #-184]!	; 0xffffff48
     cdc:	00000100 	andeq	r0, r0, r0, lsl #2
     ce0:	6d616c66 	stclvs	12, cr6, [r1, #-408]!	; 0xfffffe68
     ce4:	6c5f3165 	ldfvse	f3, [pc], {101}	; 0x65
     ce8:	74686769 	strbtvc	r6, [r8], #-1897	; 0xfffff897
     cec:	6d62782e 	stclvs	8, cr7, [r2, #-184]!	; 0xffffff48
     cf0:	00000100 	andeq	r0, r0, r0, lsl #2
     cf4:	6d616c66 	stclvs	12, cr6, [r1, #-408]!	; 0xfffffe68
     cf8:	625f3265 	subsvs	r3, pc, #1342177286	; 0x50000006
     cfc:	6b63616c 	blvs	18d92b4 <startup-0x1e726d4c>
     d00:	6d62782e 	stclvs	8, cr7, [r2, #-184]!	; 0xffffff48
     d04:	00000100 	andeq	r0, r0, r0, lsl #2
     d08:	6d616c66 	stclvs	12, cr6, [r1, #-408]!	; 0xfffffe68
     d0c:	675f3265 	ldrbvs	r3, [pc, -r5, ror #4]
     d10:	2e796172 	mrccs	1, 3, r6, cr9, cr2, {3}
     d14:	006d6278 	rsbeq	r6, sp, r8, ror r2
     d18:	66000001 	strvs	r0, [r0], -r1
     d1c:	656d616c 	strbvs	r6, [sp, #-364]!	; 0xfffffe94
     d20:	696c5f32 	stmdbvs	ip!, {r1, r4, r5, r8, r9, sl, fp, ip, lr}^
     d24:	2e746867 	cdpcs	8, 7, cr6, cr4, cr7, {3}
     d28:	006d6278 	rsbeq	r6, sp, r8, ror r2
     d2c:	66000001 	strvs	r0, [r0], -r1
     d30:	656d616c 	strbvs	r6, [sp, #-364]!	; 0xfffffe94
     d34:	6c625f33 	stclvs	15, cr5, [r2], #-204	; 0xffffff34
     d38:	2e6b6361 	cdpcs	3, 6, cr6, cr11, cr1, {3}
     d3c:	006d6278 	rsbeq	r6, sp, r8, ror r2
     d40:	66000001 	strvs	r0, [r0], -r1
     d44:	656d616c 	strbvs	r6, [sp, #-364]!	; 0xfffffe94
     d48:	72675f33 	rsbvc	r5, r7, #51, 30	; 0xcc
     d4c:	782e7961 	stmdavc	lr!, {r0, r5, r6, r8, fp, ip, sp, lr}
     d50:	01006d62 	tsteq	r0, r2, ror #26
     d54:	6c660000 	stclvs	0, cr0, [r6], #-0
     d58:	33656d61 	cmncc	r5, #6208	; 0x1840
     d5c:	67696c5f 			; <UNDEFINED> instruction: 0x67696c5f
     d60:	782e7468 	stmdavc	lr!, {r3, r5, r6, sl, ip, sp, lr}
     d64:	01006d62 	tsteq	r0, r2, ror #26
     d68:	6c660000 	stclvs	0, cr0, [r6], #-0
     d6c:	34656d61 	strbtcc	r6, [r5], #-3425	; 0xfffff29f
     d70:	616c625f 	cmnvs	ip, pc, asr r2
     d74:	782e6b63 	stmdavc	lr!, {r0, r1, r5, r6, r8, r9, fp, sp, lr}
     d78:	01006d62 	tsteq	r0, r2, ror #26
     d7c:	6c660000 	stclvs	0, cr0, [r6], #-0
     d80:	34656d61 	strbtcc	r6, [r5], #-3425	; 0xfffff29f
     d84:	6172675f 	cmnvs	r2, pc, asr r7
     d88:	62782e79 	rsbsvs	r2, r8, #1936	; 0x790
     d8c:	0001006d 	andeq	r0, r1, sp, rrx
     d90:	616c6600 	cmnvs	ip, r0, lsl #12
     d94:	5f34656d 	svcpl	0x0034656d
     d98:	6867696c 	stmdavs	r7!, {r2, r3, r5, r6, r8, fp, sp, lr}^
     d9c:	62782e74 	rsbsvs	r2, r8, #116, 28	; 0x740
     da0:	0001006d 	andeq	r0, r1, sp, rrx
     da4:	05000000 	streq	r0, [r0, #-0]
     da8:	002d0402 	eoreq	r0, sp, r2, lsl #8
     dac:	01310320 	teqeq	r1, r0, lsr #6
     db0:	3d672f3e 	stclcc	15, cr2, [r7, #-248]!	; 0xffffff08
     db4:	2f3d672f 	svccs	0x003d672f
     db8:	672f3e67 	strvs	r3, [pc, -r7, ror #28]!
     dbc:	3d672f3d 	stclcc	15, cr2, [r7, #-244]!	; 0xffffff0c
     dc0:	2f3f672f 	svccs	0x003f672f
     dc4:	672f3d67 	strvs	r3, [pc, -r7, ror #26]!
     dc8:	3e672f3d 	mcrcc	15, 3, r2, cr7, cr13, {1}
     dcc:	2f3d672f 	svccs	0x003d672f
     dd0:	672f3d67 	strvs	r3, [pc, -r7, ror #26]!
     dd4:	144d023e 	strbne	r0, [sp], #-574	; 0xfffffdc2
     dd8:	3e2f4b4c 	vnmulcc.f64	d4, d15, d12
     ddc:	5a59594b 	bpl	1657310 <startup-0x1e9a8cf0>
     de0:	93919191 	orrsls	r9, r1, #1073741860	; 0x40000024
     de4:	3d3d3d3e 	ldccc	13, cr3, [sp, #-248]!	; 0xffffff08
     de8:	002f023d 	eoreq	r0, pc, sp, lsr r2	; <UNPREDICTABLE>
     dec:	02310101 	eorseq	r0, r1, #1073741824	; 0x40000000
     df0:	00020000 	andeq	r0, r2, r0
     df4:	000001ba 			; <UNDEFINED> instruction: 0x000001ba
     df8:	0efb0102 	cdpeq	1, 15, cr0, cr11, cr2, {0}
     dfc:	0101000d 	tsteq	r1, sp
     e00:	00000101 	andeq	r0, r0, r1, lsl #2
     e04:	00000100 	andeq	r0, r0, r0, lsl #2
     e08:	2f3a4301 	svccs	0x003a4301
     e0c:	2f706f6d 	svccs	0x00706f6d
     e10:	6f4d2f63 	svcvs	0x004d2f63
     e14:	62616c70 	rsbvs	r6, r1, #112, 24	; 0x7000
     e18:	7461726f 	strbtvc	r7, [r1], #-623	; 0xfffffd91
     e1c:	656e6f69 	strbvs	r6, [lr, #-3945]!	; 0xfffff097
     e20:	49442f72 	stmdbmi	r4, {r1, r4, r5, r6, r8, r9, sl, fp, sp}^
     e24:	572d7350 			; <UNDEFINED> instruction: 0x572d7350
     e28:	68637469 	stmdavs	r3!, {r0, r3, r5, r6, sl, ip, sp, lr}^
     e2c:	0000432f 	andeq	r4, r0, pc, lsr #6
     e30:	6d6f6f62 	stclvs	15, cr6, [pc, #-392]!	; cb0 <startup-0x1ffff350>
     e34:	0100632e 	tsteq	r0, lr, lsr #6
     e38:	70730000 	rsbsvc	r0, r3, r0
     e3c:	65746972 	ldrbvs	r6, [r4, #-2418]!	; 0xfffff68e
     e40:	0100682e 	tsteq	r0, lr, lsr #16
     e44:	6d690000 	stclvs	0, cr0, [r9, #-0]
     e48:	2e656761 	cdpcs	7, 6, cr6, cr5, cr1, {3}
     e4c:	00010068 	andeq	r0, r1, r8, rrx
     e50:	6d616700 	stclvs	7, cr6, [r1, #-0]
     e54:	6a626f65 	bvs	189cbf0 <startup-0x1e763410>
     e58:	2e746365 	cdpcs	3, 7, cr6, cr4, cr5, {3}
     e5c:	00010068 	andeq	r0, r1, r8, rrx
     e60:	6f6f6200 	svcvs	0x006f6200
     e64:	625f316d 	subsvs	r3, pc, #1073741851	; 0x4000001b
     e68:	6b63616c 	blvs	18d9420 <startup-0x1e726be0>
     e6c:	6d62782e 	stclvs	8, cr7, [r2, #-184]!	; 0xffffff48
     e70:	00000100 	andeq	r0, r0, r0, lsl #2
     e74:	6d6f6f62 	stclvs	15, cr6, [pc, #-392]!	; cf4 <startup-0x1ffff30c>
     e78:	72675f31 	rsbvc	r5, r7, #49, 30	; 0xc4
     e7c:	782e7961 	stmdavc	lr!, {r0, r5, r6, r8, fp, ip, sp, lr}
     e80:	01006d62 	tsteq	r0, r2, ror #26
     e84:	6f620000 	svcvs	0x00620000
     e88:	5f316d6f 	svcpl	0x00316d6f
     e8c:	6867696c 	stmdavs	r7!, {r2, r3, r5, r6, r8, fp, sp, lr}^
     e90:	62782e74 	rsbsvs	r2, r8, #116, 28	; 0x740
     e94:	0001006d 	andeq	r0, r1, sp, rrx
     e98:	6f6f6200 	svcvs	0x006f6200
     e9c:	625f326d 	subsvs	r3, pc, #-805306362	; 0xd0000006
     ea0:	6b63616c 	blvs	18d9458 <startup-0x1e726ba8>
     ea4:	6d62782e 	stclvs	8, cr7, [r2, #-184]!	; 0xffffff48
     ea8:	00000100 	andeq	r0, r0, r0, lsl #2
     eac:	6d6f6f62 	stclvs	15, cr6, [pc, #-392]!	; d2c <startup-0x1ffff2d4>
     eb0:	72675f32 	rsbvc	r5, r7, #50, 30	; 0xc8
     eb4:	782e7961 	stmdavc	lr!, {r0, r5, r6, r8, fp, ip, sp, lr}
     eb8:	01006d62 	tsteq	r0, r2, ror #26
     ebc:	6f620000 	svcvs	0x00620000
     ec0:	5f326d6f 	svcpl	0x00326d6f
     ec4:	6867696c 	stmdavs	r7!, {r2, r3, r5, r6, r8, fp, sp, lr}^
     ec8:	62782e74 	rsbsvs	r2, r8, #116, 28	; 0x740
     ecc:	0001006d 	andeq	r0, r1, sp, rrx
     ed0:	6f6f6200 	svcvs	0x006f6200
     ed4:	625f336d 	subsvs	r3, pc, #-1275068415	; 0xb4000001
     ed8:	6b63616c 	blvs	18d9490 <startup-0x1e726b70>
     edc:	6d62782e 	stclvs	8, cr7, [r2, #-184]!	; 0xffffff48
     ee0:	00000100 	andeq	r0, r0, r0, lsl #2
     ee4:	6d6f6f62 	stclvs	15, cr6, [pc, #-392]!	; d64 <startup-0x1ffff29c>
     ee8:	72675f33 	rsbvc	r5, r7, #51, 30	; 0xcc
     eec:	782e7961 	stmdavc	lr!, {r0, r5, r6, r8, fp, ip, sp, lr}
     ef0:	01006d62 	tsteq	r0, r2, ror #26
     ef4:	6f620000 	svcvs	0x00620000
     ef8:	5f336d6f 	svcpl	0x00336d6f
     efc:	6867696c 	stmdavs	r7!, {r2, r3, r5, r6, r8, fp, sp, lr}^
     f00:	62782e74 	rsbsvs	r2, r8, #116, 28	; 0x740
     f04:	0001006d 	andeq	r0, r1, sp, rrx
     f08:	6f6f6200 	svcvs	0x006f6200
     f0c:	625f346d 	subsvs	r3, pc, #1828716544	; 0x6d000000
     f10:	6b63616c 	blvs	18d94c8 <startup-0x1e726b38>
     f14:	6d62782e 	stclvs	8, cr7, [r2, #-184]!	; 0xffffff48
     f18:	00000100 	andeq	r0, r0, r0, lsl #2
     f1c:	6d6f6f62 	stclvs	15, cr6, [pc, #-392]!	; d9c <startup-0x1ffff264>
     f20:	72675f34 	rsbvc	r5, r7, #52, 30	; 0xd0
     f24:	782e7961 	stmdavc	lr!, {r0, r5, r6, r8, fp, ip, sp, lr}
     f28:	01006d62 	tsteq	r0, r2, ror #26
     f2c:	6f620000 	svcvs	0x00620000
     f30:	5f346d6f 	svcpl	0x00346d6f
     f34:	6867696c 	stmdavs	r7!, {r2, r3, r5, r6, r8, fp, sp, lr}^
     f38:	62782e74 	rsbsvs	r2, r8, #116, 28	; 0x740
     f3c:	0001006d 	andeq	r0, r1, sp, rrx
     f40:	6f6f6200 	svcvs	0x006f6200
     f44:	625f356d 	subsvs	r3, pc, #457179136	; 0x1b400000
     f48:	6b63616c 	blvs	18d9500 <startup-0x1e726b00>
     f4c:	6d62782e 	stclvs	8, cr7, [r2, #-184]!	; 0xffffff48
     f50:	00000100 	andeq	r0, r0, r0, lsl #2
     f54:	6d6f6f62 	stclvs	15, cr6, [pc, #-392]!	; dd4 <startup-0x1ffff22c>
     f58:	72675f35 	rsbvc	r5, r7, #53, 30	; 0xd4
     f5c:	782e7961 	stmdavc	lr!, {r0, r5, r6, r8, fp, ip, sp, lr}
     f60:	01006d62 	tsteq	r0, r2, ror #26
     f64:	6f620000 	svcvs	0x00620000
     f68:	5f356d6f 	svcpl	0x00356d6f
     f6c:	6867696c 	stmdavs	r7!, {r2, r3, r5, r6, r8, fp, sp, lr}^
     f70:	62782e74 	rsbsvs	r2, r8, #116, 28	; 0x740
     f74:	0001006d 	andeq	r0, r1, sp, rrx
     f78:	6f6f6200 	svcvs	0x006f6200
     f7c:	625f366d 	subsvs	r3, pc, #114294784	; 0x6d00000
     f80:	6b63616c 	blvs	18d9538 <startup-0x1e726ac8>
     f84:	6d62782e 	stclvs	8, cr7, [r2, #-184]!	; 0xffffff48
     f88:	00000100 	andeq	r0, r0, r0, lsl #2
     f8c:	6d6f6f62 	stclvs	15, cr6, [pc, #-392]!	; e0c <startup-0x1ffff1f4>
     f90:	72675f36 	rsbvc	r5, r7, #54, 30	; 0xd8
     f94:	782e7961 	stmdavc	lr!, {r0, r5, r6, r8, fp, ip, sp, lr}
     f98:	01006d62 	tsteq	r0, r2, ror #26
     f9c:	6f620000 	svcvs	0x00620000
     fa0:	5f366d6f 	svcpl	0x00366d6f
     fa4:	6867696c 	stmdavs	r7!, {r2, r3, r5, r6, r8, fp, sp, lr}^
     fa8:	62782e74 	rsbsvs	r2, r8, #116, 28	; 0x740
     fac:	0001006d 	andeq	r0, r1, sp, rrx
     fb0:	05000000 	streq	r0, [r0, #-0]
     fb4:	002fb002 	eoreq	fp, pc, r2
     fb8:	00cf0320 	sbceq	r0, pc, r0, lsr #6
     fbc:	672f3e01 	strvs	r3, [pc, -r1, lsl #28]!
     fc0:	3d672f3d 	stclcc	15, cr2, [r7, #-244]!	; 0xffffff0c
     fc4:	2f3e672f 	svccs	0x003e672f
     fc8:	672f3d67 	strvs	r3, [pc, -r7, ror #26]!
     fcc:	3f672f3d 	svccc	0x00672f3d
     fd0:	2f3d672f 	svccs	0x003d672f
     fd4:	672f3d67 	strvs	r3, [pc, -r7, ror #26]!
     fd8:	3d672f3e 	stclcc	15, cr2, [r7, #-248]!	; 0xffffff08
     fdc:	2f3d672f 	svccs	0x003d672f
     fe0:	672f3e67 	strvs	r3, [pc, -r7, ror #28]!
     fe4:	3d672f3d 	stclcc	15, cr2, [r7, #-244]!	; 0xffffff0c
     fe8:	2f3e672f 	svccs	0x003e672f
     fec:	672f3d67 	strvs	r3, [pc, -r7, ror #26]!
     ff0:	3d672f3d 	stclcc	15, cr2, [r7, #-244]!	; 0xffffff0c
     ff4:	4c147102 	ldfmis	f7, [r4], {2}
     ff8:	4b3e2f59 	blmi	f8cd64 <startup-0x1f07329c>
     ffc:	59595959 	ldmdbpl	r9, {r0, r3, r4, r6, r8, fp, ip, lr}^
    1000:	59595959 	ldmdbpl	r9, {r0, r3, r4, r6, r8, fp, ip, lr}^
    1004:	75755959 	ldrbvc	r5, [r5, #-2393]!	; 0xfffff6a7
    1008:	91917675 	orrsls	r7, r1, r5, ror r6
    100c:	91919191 			; <UNDEFINED> instruction: 0x91919191
    1010:	91919191 			; <UNDEFINED> instruction: 0x91919191
    1014:	91919191 			; <UNDEFINED> instruction: 0x91919191
    1018:	3d3d3e93 	ldccc	14, cr3, [sp, #-588]!	; 0xfffffdb4
    101c:	66023d3d 			; <UNDEFINED> instruction: 0x66023d3d
    1020:	6b010100 	blvs	41428 <startup-0x1ffbebd8>
    1024:	02000001 	andeq	r0, r0, #1
    1028:	00012600 	andeq	r2, r1, r0, lsl #12
    102c:	fb010200 	blx	41836 <startup-0x1ffbe7ca>
    1030:	01000d0e 	tsteq	r0, lr, lsl #26
    1034:	00010101 	andeq	r0, r1, r1, lsl #2
    1038:	00010000 	andeq	r0, r1, r0
    103c:	3a430100 	bcc	10c1444 <startup-0x1ef3ebbc>
    1040:	706f6d2f 	rsbvc	r6, pc, pc, lsr #26
    1044:	4d2f632f 	stcmi	3, cr6, [pc, #-188]!	; f90 <startup-0x1ffff070>
    1048:	616c706f 	cmnvs	ip, pc, rrx
    104c:	61726f62 	cmnvs	r2, r2, ror #30
    1050:	6e6f6974 			; <UNDEFINED> instruction: 0x6e6f6974
    1054:	442f7265 	strtmi	r7, [pc], #-613	; 105c <startup-0x1fffefa4>
    1058:	2d735049 	ldclcs	0, cr5, [r3, #-292]!	; 0xfffffedc
    105c:	63746957 	cmnvs	r4, #1425408	; 0x15c000
    1060:	00432f68 	subeq	r2, r3, r8, ror #30
    1064:	61726400 	cmnvs	r2, r0, lsl #8
    1068:	2e6e6f67 	cdpcs	15, 6, cr6, cr14, cr7, {3}
    106c:	00010063 	andeq	r0, r1, r3, rrx
    1070:	72707300 	rsbsvc	r7, r0, #0, 6
    1074:	2e657469 	cdpcs	4, 6, cr7, cr5, cr9, {3}
    1078:	00010068 	andeq	r0, r1, r8, rrx
    107c:	616d6900 	cmnvs	sp, r0, lsl #18
    1080:	682e6567 	stmdavs	lr!, {r0, r1, r2, r5, r6, r8, sl, sp, lr}
    1084:	00000100 	andeq	r0, r0, r0, lsl #2
    1088:	656d6167 	strbvs	r6, [sp, #-359]!	; 0xfffffe99
    108c:	656a626f 	strbvs	r6, [sl, #-623]!	; 0xfffffd91
    1090:	682e7463 	stmdavs	lr!, {r0, r1, r5, r6, sl, ip, sp, lr}
    1094:	00000100 	andeq	r0, r0, r0, lsl #2
    1098:	67617264 	strbvs	r7, [r1, -r4, ror #4]!
    109c:	5f316e6f 	svcpl	0x00316e6f
    10a0:	63616c62 	cmnvs	r1, #25088	; 0x6200
    10a4:	62782e6b 	rsbsvs	r2, r8, #1712	; 0x6b0
    10a8:	0001006d 	andeq	r0, r1, sp, rrx
    10ac:	61726400 	cmnvs	r2, r0, lsl #8
    10b0:	316e6f67 	cmncc	lr, r7, ror #30
    10b4:	6172675f 	cmnvs	r2, pc, asr r7
    10b8:	62782e79 	rsbsvs	r2, r8, #1936	; 0x790
    10bc:	0001006d 	andeq	r0, r1, sp, rrx
    10c0:	61726400 	cmnvs	r2, r0, lsl #8
    10c4:	316e6f67 	cmncc	lr, r7, ror #30
    10c8:	67696c5f 			; <UNDEFINED> instruction: 0x67696c5f
    10cc:	782e7468 	stmdavc	lr!, {r3, r5, r6, sl, ip, sp, lr}
    10d0:	01006d62 	tsteq	r0, r2, ror #26
    10d4:	72640000 	rsbvc	r0, r4, #0
    10d8:	6e6f6761 	cdpvs	7, 6, cr6, cr15, cr1, {3}
    10dc:	6c625f32 	stclvs	15, cr5, [r2], #-200	; 0xffffff38
    10e0:	2e6b6361 	cdpcs	3, 6, cr6, cr11, cr1, {3}
    10e4:	006d6278 	rsbeq	r6, sp, r8, ror r2
    10e8:	64000001 	strvs	r0, [r0], #-1
    10ec:	6f676172 	svcvs	0x00676172
    10f0:	675f326e 	ldrbvs	r3, [pc, -lr, ror #4]
    10f4:	2e796172 	mrccs	1, 3, r6, cr9, cr2, {3}
    10f8:	006d6278 	rsbeq	r6, sp, r8, ror r2
    10fc:	64000001 	strvs	r0, [r0], #-1
    1100:	6f676172 	svcvs	0x00676172
    1104:	6c5f326e 	lfmvs	f3, 2, [pc], {110}	; 0x6e
    1108:	74686769 	strbtvc	r6, [r8], #-1897	; 0xfffff897
    110c:	6d62782e 	stclvs	8, cr7, [r2, #-184]!	; 0xffffff48
    1110:	00000100 	andeq	r0, r0, r0, lsl #2
    1114:	67617264 	strbvs	r7, [r1, -r4, ror #4]!
    1118:	5f336e6f 	svcpl	0x00336e6f
    111c:	63616c62 	cmnvs	r1, #25088	; 0x6200
    1120:	62782e6b 	rsbsvs	r2, r8, #1712	; 0x6b0
    1124:	0001006d 	andeq	r0, r1, sp, rrx
    1128:	61726400 	cmnvs	r2, r0, lsl #8
    112c:	336e6f67 	cmncc	lr, #412	; 0x19c
    1130:	6172675f 	cmnvs	r2, pc, asr r7
    1134:	62782e79 	rsbsvs	r2, r8, #1936	; 0x790
    1138:	0001006d 	andeq	r0, r1, sp, rrx
    113c:	61726400 	cmnvs	r2, r0, lsl #8
    1140:	336e6f67 	cmncc	lr, #412	; 0x19c
    1144:	67696c5f 			; <UNDEFINED> instruction: 0x67696c5f
    1148:	782e7468 	stmdavc	lr!, {r3, r5, r6, sl, ip, sp, lr}
    114c:	01006d62 	tsteq	r0, r2, ror #26
    1150:	00000000 	andeq	r0, r0, r0
    1154:	34dc0205 	ldrbcc	r0, [ip], #517	; 0x205
    1158:	29032000 	stmdbcs	r3, {sp}
    115c:	672f3e01 	strvs	r3, [pc, -r1, lsl #28]!
    1160:	3d672f3d 	stclcc	15, cr2, [r7, #-244]!	; 0xffffff0c
    1164:	2f3e672f 	svccs	0x003e672f
    1168:	672f3d67 	strvs	r3, [pc, -r7, ror #26]!
    116c:	3f672f3d 	svccc	0x00672f3d
    1170:	2f3d672f 	svccs	0x003d672f
    1174:	672f3d67 	strvs	r3, [pc, -r7, ror #26]!
    1178:	143a023e 	ldrtne	r0, [sl], #-574	; 0xfffffdc2
    117c:	3e2f4b4c 	vnmulcc.f64	d4, d15, d12
    1180:	5a59594b 	bpl	16576b4 <startup-0x1e9a894c>
    1184:	94919191 	ldrls	r9, [r1], #401	; 0x191
    1188:	3d3d3d3e 	ldccc	13, cr3, [sp, #-248]!	; 0xffffff08
    118c:	0029023d 	eoreq	r0, r9, sp, lsr r2
    1190:	03720101 	cmneq	r2, #1073741824	; 0x40000000
    1194:	00020000 	andeq	r0, r2, r0
    1198:	0000007c 	andeq	r0, r0, ip, ror r0
    119c:	0efb0102 	cdpeq	1, 15, cr0, cr11, cr2, {0}
    11a0:	0101000d 	tsteq	r1, sp
    11a4:	00000101 	andeq	r0, r0, r1, lsl #2
    11a8:	00000100 	andeq	r0, r0, r0, lsl #2
    11ac:	2f3a4301 	svccs	0x003a4301
    11b0:	2f706f6d 	svccs	0x00706f6d
    11b4:	6f4d2f63 	svcvs	0x004d2f63
    11b8:	62616c70 	rsbvs	r6, r1, #112, 24	; 0x7000
    11bc:	7461726f 	strbtvc	r7, [r1], #-623	; 0xfffffd91
    11c0:	656e6f69 	strbvs	r6, [lr, #-3945]!	; 0xfffff097
    11c4:	49442f72 	stmdbmi	r4, {r1, r4, r5, r6, r8, r9, sl, fp, sp}^
    11c8:	572d7350 			; <UNDEFINED> instruction: 0x572d7350
    11cc:	68637469 	stmdavs	r3!, {r0, r3, r5, r6, sl, ip, sp, lr}^
    11d0:	0000432f 	andeq	r4, r0, pc, lsr #6
    11d4:	70617267 	rsbvc	r7, r1, r7, ror #4
    11d8:	73636968 	cmnvc	r3, #104, 18	; 0x1a0000
    11dc:	0100632e 	tsteq	r0, lr, lsr #6
    11e0:	70730000 	rsbsvc	r0, r3, r0
    11e4:	65746972 	ldrbvs	r6, [r4, #-2418]!	; 0xfffff68e
    11e8:	0100682e 	tsteq	r0, lr, lsr #16
    11ec:	6d690000 	stclvs	0, cr0, [r9, #-0]
    11f0:	2e656761 	cdpcs	7, 6, cr6, cr5, cr1, {3}
    11f4:	00010068 	andeq	r0, r1, r8, rrx
    11f8:	6d616700 	stclvs	7, cr6, [r1, #-0]
    11fc:	6a626f65 	bvs	189cf98 <startup-0x1e763068>
    1200:	2e746365 	cdpcs	3, 7, cr6, cr4, cr5, {3}
    1204:	00010068 	andeq	r0, r1, r8, rrx
    1208:	61726700 	cmnvs	r2, r0, lsl #14
    120c:	63696870 	cmnvs	r9, #112, 16	; 0x700000
    1210:	00682e73 	rsbeq	r2, r8, r3, ror lr
    1214:	00000001 	andeq	r0, r0, r1
    1218:	14020500 	strne	r0, [r2], #-1280	; 0xfffffb00
    121c:	15200037 	strne	r0, [r0, #-55]!	; 0xffffffc9
    1220:	3d3d3d30 	ldccc	13, cr3, [sp, #-192]!	; 0xffffff40
    1224:	0402003d 	streq	r0, [r2], #-61	; 0xffffffc3
    1228:	06200601 	strteq	r0, [r0], -r1, lsl #12
    122c:	30a03d67 	adccc	r3, r0, r7, ror #26
    1230:	3d3d3d3d 	ldccc	13, cr3, [sp, #-244]!	; 0xffffff0c
    1234:	01040200 	mrseq	r0, R12_usr
    1238:	67062006 	strvs	r2, [r6, -r6]
    123c:	214ba03d 	cmpcs	fp, sp, lsr r0
    1240:	2a2f2f2f 	bcs	bccf04 <startup-0x1f4330fc>
    1244:	214f4c5e 	cmpcs	pc, lr, asr ip	; <UNPREDICTABLE>
    1248:	09035b57 	stmdbeq	r3, {r0, r1, r2, r4, r6, r8, r9, fp, ip, lr}
    124c:	02004c4a 	andeq	r4, r0, #18944	; 0x4a00
    1250:	003d0304 	eorseq	r0, sp, r4, lsl #6
    1254:	57030402 	strpl	r0, [r3, -r2, lsl #8]
    1258:	01040200 	mrseq	r0, R12_usr
    125c:	4c063c06 	stcmi	12, cr3, [r6], {6}
    1260:	674b2f67 	strbvs	r2, [fp, -r7, ror #30]
    1264:	4b4b4b2f 	blmi	12d3f28 <startup-0x1ed2c0d8>
    1268:	915968a1 	cmpls	r9, r1, lsr #17
    126c:	68765983 	ldmdavs	r6!, {r0, r1, r7, r8, fp, ip, lr}^
    1270:	5983d759 	stmibpl	r3, {r0, r3, r4, r6, r8, r9, sl, ip, lr, pc}
    1274:	12036767 	andne	r6, r3, #27000832	; 0x19c0000
    1278:	206e0374 	rsbcs	r0, lr, r4, ror r3
    127c:	034a1203 	movteq	r1, #41475	; 0xa203
    1280:	3d3d2070 	ldccc	0, cr2, [sp, #-448]!	; 0xfffffe40
    1284:	223d3d22 	eorscs	r3, sp, #2176	; 0x880
    1288:	3d223d3d 	stccc	13, cr3, [r2, #-244]!	; 0xffffff0c
    128c:	3e4c223d 	mcrcc	2, 2, r2, cr12, cr13, {1}
    1290:	3d3d3d3d 	ldccc	13, cr3, [sp, #-244]!	; 0xffffff0c
    1294:	752f3d31 	strvc	r3, [pc, #-3377]!	; 56b <startup-0x1ffffa95>
    1298:	7903313d 	stmdbvc	r3, {r0, r2, r3, r4, r5, r8, ip, sp}
    129c:	3d23274a 	stccc	7, cr2, [r3, #-296]!	; 0xfffffed8
    12a0:	3d3d67bc 	ldccc	7, cr6, [sp, #-752]!	; 0xfffffd10
    12a4:	2f593d3d 	svccs	0x00593d3d
    12a8:	3d592f3d 	ldclcc	15, cr2, [r9, #-244]	; 0xffffff0c
    12ac:	303d4b3e 	eorscc	r4, sp, lr, lsr fp
    12b0:	3d313d4b 	ldccc	13, cr3, [r1, #-300]!	; 0xfffffed4
    12b4:	595967bc 	ldmdbpl	r9, {r2, r3, r4, r5, r7, r8, r9, sl, sp, lr}^
    12b8:	594b915a 	stmdbpl	fp, {r1, r3, r4, r6, r8, ip, pc}^
    12bc:	3e2f3d2f 	cdpcc	13, 2, cr3, cr15, cr15, {1}
    12c0:	59303d59 	ldmdbpl	r0!, {r0, r3, r4, r6, r8, sl, fp, ip, sp}
    12c4:	3d3d313d 	ldfccs	f3, [sp, #-244]!	; 0xffffff0c
    12c8:	3d91673d 	ldccc	7, cr6, [r1, #244]	; 0xf4
    12cc:	833d3d59 	teqhi	sp, #5696	; 0x1640
    12d0:	593d914b 	ldmdbpl	sp!, {r0, r1, r3, r6, r8, ip, pc}
    12d4:	4c833d3d 	stcmi	13, cr3, [r3], {61}	; 0x3d
    12d8:	3d3e3d2f 	ldccc	13, cr3, [lr, #-188]!	; 0xffffff44
    12dc:	3d3e3d3d 	ldccc	13, cr3, [lr, #-244]!	; 0xffffff0c
    12e0:	4b4b3e3d 	blmi	12d0bdc <startup-0x1ed2f424>
    12e4:	3d4b4b4b 	vstrcc	d20, [fp, #-300]	; 0xfffffed4
    12e8:	9f4b3e3d 	svcls	0x004b3e3d
    12ec:	0402004c 	streq	r0, [r2], #-76	; 0xffffffb4
    12f0:	02004b03 	andeq	r4, r0, #3072	; 0xc00
    12f4:	00490304 	subeq	r0, r9, r4, lsl #6
    12f8:	06010402 	streq	r0, [r1], -r2, lsl #8
    12fc:	04020058 	streq	r0, [r2], #-88	; 0xffffffa8
    1300:	00460602 	subeq	r0, r6, r2, lsl #12
    1304:	06010402 	streq	r0, [r1], -r2, lsl #8
    1308:	4d520658 	ldclmi	6, cr0, [r2, #-352]	; 0xfffffea0
    130c:	02002f76 	andeq	r2, r0, #472	; 0x1d8
    1310:	4a060104 	bmi	181728 <startup-0x1fe7e8d8>
    1314:	02040200 	andeq	r0, r4, #0, 4
    1318:	0402004a 	streq	r0, [r2], #-74	; 0xffffffb6
    131c:	4c064a03 			; <UNDEFINED> instruction: 0x4c064a03
    1320:	3d3d1308 	ldccc	3, cr1, [sp, #-32]!	; 0xffffffe0
    1324:	763dbc3e 			; <UNDEFINED> instruction: 0x763dbc3e
    1328:	1fd93d76 	svcne	0x00d93d76
    132c:	d93d23d7 	ldmdble	sp!, {r0, r1, r2, r4, r6, r7, r8, r9, sp}
    1330:	3d23d71f 	stccc	7, cr13, [r3, #-124]!	; 0xffffff84
    1334:	03d71fd9 	bicseq	r1, r7, #868	; 0x364
    1338:	23032e61 	movwcs	r2, #15969	; 0x3e61
    133c:	3d4cae20 	stclcc	14, cr10, [ip, #-128]	; 0xffffff80
    1340:	0200673d 	andeq	r6, r0, #15990784	; 0xf40000
    1344:	003e0204 	eorseq	r0, lr, r4, lsl #4
    1348:	38020402 	stmdacc	r2, {r1, sl}
    134c:	01040200 	mrseq	r0, R12_usr
    1350:	02003c06 	andeq	r3, r0, #1536	; 0x600
    1354:	3b060204 	blcc	181b6c <startup-0x1fe7e494>
    1358:	01040200 	mrseq	r0, R12_usr
    135c:	4e063c06 	cdpmi	12, 0, cr3, cr6, cr6, {0}
    1360:	00693e24 	rsbeq	r3, r9, r4, lsr #28
    1364:	06010402 	streq	r0, [r1], -r2, lsl #8
    1368:	0402004a 	streq	r0, [r2], #-74	; 0xffffffb6
    136c:	02004a02 	andeq	r4, r0, #8192	; 0x2000
    1370:	064a0304 	strbeq	r0, [sl], -r4, lsl #6
    1374:	1308754b 	movwne	r7, #34123	; 0x854b
    1378:	59595959 	ldmdbpl	r9, {r0, r3, r4, r6, r8, fp, ip, lr}^
    137c:	5b595959 	blpl	16578e8 <startup-0x1e9a8718>
    1380:	4b3d763d 	blmi	f5ec7c <startup-0x1f0a1384>
    1384:	c93e4b4c 	ldmdbgt	lr!, {r2, r3, r6, r8, r9, fp, lr}
    1388:	3dca9fd8 	stclcc	15, cr9, [sl, #864]	; 0x360
    138c:	5e03a0ae 	cdppl	0, 0, cr10, cr3, cr14, {5}
    1390:	202303ac 	eorcs	r0, r3, ip, lsr #7
    1394:	592f4c76 	stmdbpl	pc!, {r1, r2, r4, r5, r6, sl, fp, lr}	; <UNPREDICTABLE>
    1398:	01040200 	mrseq	r0, R12_usr
    139c:	02005806 	andeq	r5, r0, #393216	; 0x60000
    13a0:	002e0204 	eoreq	r0, lr, r4, lsl #4
    13a4:	20040402 	andcs	r0, r4, r2, lsl #8
    13a8:	04040200 	streq	r0, [r4], #-512	; 0xfffffe00
    13ac:	d7593d06 	ldrble	r3, [r9, -r6, lsl #26]
    13b0:	04020075 	streq	r0, [r2], #-117	; 0xffffff8b
    13b4:	02005903 	andeq	r5, r0, #49152	; 0xc000
    13b8:	00ab0304 	adceq	r0, fp, r4, lsl #6
    13bc:	06010402 	streq	r0, [r1], -r2, lsl #8
    13c0:	0402009e 	streq	r0, [r2], #-158	; 0xffffff62
    13c4:	00550602 	subseq	r0, r5, r2, lsl #12
    13c8:	06010402 	streq	r0, [r1], -r2, lsl #8
    13cc:	04020074 	streq	r0, [r2], #-116	; 0xffffff8c
    13d0:	00560602 	subseq	r0, r6, r2, lsl #12
    13d4:	06010402 	streq	r0, [r1], -r2, lsl #8
    13d8:	0a030674 	beq	c2db0 <startup-0x1ff3d250>
    13dc:	59765258 	ldmdbpl	r6!, {r3, r4, r6, r9, ip, lr}^
    13e0:	3d3d595a 			; <UNDEFINED> instruction: 0x3d3d595a
    13e4:	e6913dbb 			; <UNDEFINED> instruction: 0xe6913dbb
    13e8:	0067083d 	rsbeq	r0, r7, sp, lsr r8
    13ec:	03020402 	movweq	r0, #9218	; 0x2402
    13f0:	0066087a 	rsbeq	r0, r6, sl, ror r8
    13f4:	06010402 	streq	r0, [r1], -r2, lsl #8
    13f8:	0402003c 	streq	r0, [r2], #-60	; 0xffffffc4
    13fc:	003a0602 	eorseq	r0, sl, r2, lsl #12
    1400:	06010402 	streq	r0, [r1], -r2, lsl #8
    1404:	0402003c 	streq	r0, [r2], #-60	; 0xffffffc4
    1408:	00490602 	subeq	r0, r9, r2, lsl #12
    140c:	06010402 	streq	r0, [r1], -r2, lsl #8
    1410:	0e03063c 	mcreq	6, 0, r0, cr3, cr12, {1}
    1414:	3d774c58 	ldclcc	12, cr4, [r7, #-352]!	; 0xfffffea0
    1418:	03040200 	movweq	r0, #16896	; 0x4200
    141c:	0402003d 	streq	r0, [r2], #-61	; 0xffffffc3
    1420:	02006503 	andeq	r6, r0, #12582912	; 0xc00000
    1424:	3c060104 	stfccs	f0, [r6], {4}
    1428:	02040200 	andeq	r0, r4, #0, 4
    142c:	02006506 	andeq	r6, r0, #25165824	; 0x1800000
    1430:	3c060104 	stfccs	f0, [r6], {4}
    1434:	774c6b06 	strbvc	r6, [ip, -r6, lsl #22]
    1438:	0402003d 	streq	r0, [r2], #-61	; 0xffffffc3
    143c:	02003d03 	andeq	r3, r0, #3, 26	; 0xc0
    1440:	00650304 	rsbeq	r0, r5, r4, lsl #6
    1444:	06010402 	streq	r0, [r1], -r2, lsl #8
    1448:	0402003c 	streq	r0, [r2], #-60	; 0xffffffc4
    144c:	00650602 	rsbeq	r0, r5, r2, lsl #12
    1450:	06010402 	streq	r0, [r1], -r2, lsl #8
    1454:	4d6b063c 	stclmi	6, cr0, [fp, #-240]!	; 0xffffff10
    1458:	2f2f2f3d 	svccs	0x002f2f3d
    145c:	00693030 	rsbeq	r3, r9, r0, lsr r0
    1460:	30010402 	andcc	r0, r1, r2, lsl #8
    1464:	01040200 	mrseq	r0, R12_usr
    1468:	0402002f 	streq	r0, [r2], #-47	; 0xffffffd1
    146c:	02006701 	andeq	r6, r0, #262144	; 0x40000
    1470:	00c90104 	sbceq	r0, r9, r4, lsl #2
    1474:	08010402 	stmdaeq	r1, {r1, sl}
    1478:	04020013 	streq	r0, [r2], #-19	; 0xffffffed
    147c:	02004b01 	andeq	r4, r0, #1024	; 0x400
    1480:	002f0104 	eoreq	r0, pc, r4, lsl #2
    1484:	68010402 	stmdavs	r1, {r1, sl}
    1488:	01040200 	mrseq	r0, R12_usr
    148c:	040200c9 	streq	r0, [r2], #-201	; 0xffffff37
    1490:	00130801 	andseq	r0, r3, r1, lsl #16
    1494:	92010402 	andls	r0, r1, #33554432	; 0x2000000
    1498:	01040200 	mrseq	r0, R12_usr
    149c:	0402004b 	streq	r0, [r2], #-75	; 0xffffffb5
    14a0:	02003e01 	andeq	r3, r0, #1, 28
    14a4:	002f0104 	eoreq	r0, pc, r4, lsl #2
    14a8:	67010402 	strvs	r0, [r1, -r2, lsl #8]
    14ac:	01040200 	mrseq	r0, R12_usr
    14b0:	02001308 	andeq	r1, r0, #8, 6	; 0x20000000
    14b4:	004c0104 	subeq	r0, ip, r4, lsl #2
    14b8:	03010402 	movweq	r0, #5122	; 0x1402
    14bc:	19033c6c 	stmdbne	r3, {r2, r3, r5, r6, sl, fp, ip, sp}
    14c0:	02003e3c 	andeq	r3, r0, #60, 28	; 0x3c0
    14c4:	003d0304 	eorseq	r0, sp, r4, lsl #6
    14c8:	08030402 	stmdaeq	r3, {r1, sl}
    14cc:	04020091 	streq	r0, [r2], #-145	; 0xffffff6f
    14d0:	00910803 	addseq	r0, r1, r3, lsl #16
    14d4:	08030402 	stmdaeq	r3, {r1, sl}
    14d8:	04020091 	streq	r0, [r2], #-145	; 0xffffff6f
    14dc:	00460803 	subeq	r0, r6, r3, lsl #16
    14e0:	06010402 	streq	r0, [r1], -r2, lsl #8
    14e4:	0850063c 	ldmdaeq	r0, {r2, r3, r4, r5, r9, sl}^
    14e8:	083d4b3e 	ldmdaeq	sp!, {r1, r2, r3, r4, r5, r8, r9, fp, lr}
    14ec:	08210821 	stmdaeq	r1!, {r0, r5, fp}
    14f0:	304b4d21 	subcc	r4, fp, r1, lsr #26
    14f4:	4b3e4b21 	blmi	f94180 <startup-0x1f06be80>
    14f8:	4b3e4b3e 	blmi	f941f8 <startup-0x1f06be08>
    14fc:	033c7503 	teqeq	ip, #12582912	; 0xc00000
    1500:	0230580e 	eorseq	r5, r0, #917504	; 0xe0000
    1504:	0101000b 	tsteq	r1, fp
    1508:	00000072 	andeq	r0, r0, r2, ror r0
    150c:	005b0002 	subseq	r0, fp, r2
    1510:	01020000 	mrseq	r0, (UNDEF: 2)
    1514:	000d0efb 	strdeq	r0, [sp], -fp
    1518:	01010101 	tsteq	r1, r1, lsl #2
    151c:	01000000 	mrseq	r0, (UNDEF: 0)
    1520:	43010000 	movwmi	r0, #4096	; 0x1000
    1524:	6f6d2f3a 	svcvs	0x006d2f3a
    1528:	2f632f70 	svccs	0x00632f70
    152c:	6c706f4d 	ldclvs	15, cr6, [r0], #-308	; 0xfffffecc
    1530:	726f6261 	rsbvc	r6, pc, #268435462	; 0x10000006
    1534:	6f697461 	svcvs	0x00697461
    1538:	2f72656e 	svccs	0x0072656e
    153c:	73504944 	cmpvc	r0, #68, 18	; 0x110000
    1540:	7469572d 	strbtvc	r5, [r9], #-1837	; 0xfffff8d3
    1544:	432f6863 			; <UNDEFINED> instruction: 0x432f6863
    1548:	6d690000 	stclvs	0, cr0, [r9, #-0]
    154c:	2e656761 	cdpcs	7, 6, cr6, cr5, cr1, {3}
    1550:	00010063 	andeq	r0, r1, r3, rrx
    1554:	72707300 	rsbsvc	r7, r0, #0, 6
    1558:	2e657469 	cdpcs	4, 6, cr7, cr5, cr9, {3}
    155c:	00010068 	andeq	r0, r1, r8, rrx
    1560:	616d6900 	cmnvs	sp, r0, lsl #18
    1564:	682e6567 	stmdavs	lr!, {r0, r1, r2, r5, r6, r8, sl, sp, lr}
    1568:	00000100 	andeq	r0, r0, r0, lsl #2
    156c:	02050000 	andeq	r0, r5, #0
    1570:	200045a4 	andcs	r4, r0, r4, lsr #11
    1574:	3d3d7514 	cfldr32cc	mvfx7, [sp, #-80]!	; 0xffffffb0
    1578:	0004023d 	andeq	r0, r4, sp, lsr r2
    157c:	00680101 	rsbeq	r0, r8, r1, lsl #2
    1580:	00020000 	andeq	r0, r2, r0
    1584:	00000051 	andeq	r0, r0, r1, asr r0
    1588:	0efb0102 	cdpeq	1, 15, cr0, cr11, cr2, {0}
    158c:	0101000d 	tsteq	r1, sp
    1590:	00000101 	andeq	r0, r0, r1, lsl #2
    1594:	00000100 	andeq	r0, r0, r0, lsl #2
    1598:	2f3a4301 	svccs	0x003a4301
    159c:	2f706f6d 	svccs	0x00706f6d
    15a0:	6f4d2f63 	svcvs	0x004d2f63
    15a4:	62616c70 	rsbvs	r6, r1, #112, 24	; 0x7000
    15a8:	7461726f 	strbtvc	r7, [r1], #-623	; 0xfffffd91
    15ac:	656e6f69 	strbvs	r6, [lr, #-3945]!	; 0xfffff097
    15b0:	49442f72 	stmdbmi	r4, {r1, r4, r5, r6, r8, r9, sl, fp, sp}^
    15b4:	572d7350 			; <UNDEFINED> instruction: 0x572d7350
    15b8:	68637469 	stmdavs	r3!, {r0, r3, r5, r6, sl, ip, sp, lr}^
    15bc:	0000432f 	andeq	r4, r0, pc, lsr #6
    15c0:	69727073 	ldmdbvs	r2!, {r0, r1, r4, r5, r6, ip, sp, lr}^
    15c4:	632e6574 			; <UNDEFINED> instruction: 0x632e6574
    15c8:	00000100 	andeq	r0, r0, r0, lsl #2
    15cc:	69727073 	ldmdbvs	r2!, {r0, r1, r4, r5, r6, ip, sp, lr}^
    15d0:	682e6574 	stmdavs	lr!, {r2, r4, r5, r6, r8, sl, sp, lr}
    15d4:	00000100 	andeq	r0, r0, r0, lsl #2
    15d8:	02050000 	andeq	r0, r5, #0
    15dc:	200045cc 	andcs	r4, r0, ip, asr #11
    15e0:	3d3d7515 	cfldr32cc	mvfx7, [sp, #-84]!	; 0xffffffac
    15e4:	0004023d 	andeq	r0, r4, sp, lsr r2
    15e8:	006c0101 	rsbeq	r0, ip, r1, lsl #2
    15ec:	00020000 	andeq	r0, r2, r0
    15f0:	0000004d 	andeq	r0, r0, sp, asr #32
    15f4:	0efb0102 	cdpeq	1, 15, cr0, cr11, cr2, {0}
    15f8:	0101000d 	tsteq	r1, sp
    15fc:	00000101 	andeq	r0, r0, r1, lsl #2
    1600:	00000100 	andeq	r0, r0, r0, lsl #2
    1604:	2f3a4301 	svccs	0x003a4301
    1608:	2f706f6d 	svccs	0x00706f6d
    160c:	6f4d2f63 	svcvs	0x004d2f63
    1610:	62616c70 	rsbvs	r6, r1, #112, 24	; 0x7000
    1614:	7461726f 	strbtvc	r7, [r1], #-623	; 0xfffffd91
    1618:	656e6f69 	strbvs	r6, [lr, #-3945]!	; 0xfffff097
    161c:	49442f72 	stmdbmi	r4, {r1, r4, r5, r6, r8, r9, sl, fp, sp}^
    1620:	572d7350 			; <UNDEFINED> instruction: 0x572d7350
    1624:	68637469 	stmdavs	r3!, {r0, r3, r5, r6, sl, ip, sp, lr}^
    1628:	0000432f 	andeq	r4, r0, pc, lsr #6
    162c:	6f697067 	svcvs	0x00697067
    1630:	0100632e 	tsteq	r0, lr, lsr #6
    1634:	70670000 	rsbvc	r0, r7, r0
    1638:	682e6f69 	stmdavs	lr!, {r0, r3, r5, r6, r8, r9, sl, fp, sp, lr}
    163c:	00000100 	andeq	r0, r0, r0, lsl #2
    1640:	02050000 	andeq	r0, r5, #0
    1644:	200045f4 	strdcs	r4, [r0], -r4	; <UNPREDICTABLE>
    1648:	763d2f15 	shadd16vc	r2, sp, r5
    164c:	693d592f 	ldmdbvs	sp!, {r0, r1, r2, r3, r5, r8, fp, ip, lr}
    1650:	3091674b 	addscc	r6, r1, fp, asr #14
    1654:	00040222 	andeq	r0, r4, r2, lsr #4
    1658:	015a0101 	cmpeq	sl, r1, lsl #2
    165c:	00020000 	andeq	r0, r2, r0
    1660:	00000081 	andeq	r0, r0, r1, lsl #1
    1664:	0efb0102 	cdpeq	1, 15, cr0, cr11, cr2, {0}
    1668:	0101000d 	tsteq	r1, sp
    166c:	00000101 	andeq	r0, r0, r1, lsl #2
    1670:	00000100 	andeq	r0, r0, r0, lsl #2
    1674:	2f3a4301 	svccs	0x003a4301
    1678:	2f706f6d 	svccs	0x00706f6d
    167c:	6f4d2f63 	svcvs	0x004d2f63
    1680:	62616c70 	rsbvs	r6, r1, #112, 24	; 0x7000
    1684:	7461726f 	strbtvc	r7, [r1], #-623	; 0xfffffd91
    1688:	656e6f69 	strbvs	r6, [lr, #-3945]!	; 0xfffff097
    168c:	49442f72 	stmdbmi	r4, {r1, r4, r5, r6, r8, r9, sl, fp, sp}^
    1690:	572d7350 			; <UNDEFINED> instruction: 0x572d7350
    1694:	68637469 	stmdavs	r3!, {r0, r3, r5, r6, sl, ip, sp, lr}^
    1698:	0000432f 	andeq	r4, r0, pc, lsr #6
    169c:	69637361 	stmdbvs	r3!, {r0, r5, r6, r8, r9, ip, sp, lr}^
    16a0:	69645f69 	stmdbvs	r4!, {r0, r3, r5, r6, r8, r9, sl, fp, ip, lr}^
    16a4:	616c7073 	smcvs	50947	; 0xc703
    16a8:	00632e79 	rsbeq	r2, r3, r9, ror lr
    16ac:	73000001 	movwvc	r0, #1
    16b0:	74697270 	strbtvc	r7, [r9], #-624	; 0xfffffd90
    16b4:	00682e65 	rsbeq	r2, r8, r5, ror #28
    16b8:	69000001 	stmdbvs	r0, {r0}
    16bc:	6567616d 	strbvs	r6, [r7, #-365]!	; 0xfffffe93
    16c0:	0100682e 	tsteq	r0, lr, lsr #16
    16c4:	61670000 	cmnvs	r7, r0
    16c8:	626f656d 	rsbvs	r6, pc, #457179136	; 0x1b400000
    16cc:	7463656a 	strbtvc	r6, [r3], #-1386	; 0xfffffa96
    16d0:	0100682e 	tsteq	r0, lr, lsr #16
    16d4:	72670000 	rsbvc	r0, r7, #0
    16d8:	69687061 	stmdbvs	r8!, {r0, r5, r6, ip, sp, lr}^
    16dc:	682e7363 	stmdavs	lr!, {r0, r1, r5, r6, r8, r9, ip, sp, lr}
    16e0:	00000100 	andeq	r0, r0, r0, lsl #2
    16e4:	02050000 	andeq	r0, r5, #0
    16e8:	20004660 	andcs	r4, r0, r0, ror #12
    16ec:	69012e03 	stmdbvs	r1, {r0, r1, r9, sl, fp, sp}
    16f0:	6859bb59 	ldmdavs	r9, {r0, r3, r4, r6, r8, r9, fp, ip, sp, pc}^
    16f4:	13085969 	movwne	r5, #35177	; 0x8969
    16f8:	3d677659 	stclcc	6, cr7, [r7, #-356]!	; 0xfffffe9c
    16fc:	674c593d 	smlaldxvs	r5, ip, sp, r9
    1700:	4c593d3d 	mrrcmi	13, 3, r3, r9, cr13
    1704:	3d3d673e 	ldccc	7, cr6, [sp, #-248]!	; 0xffffff08
    1708:	2f67675a 	svccs	0x0067675a
    170c:	3d673e84 	stclcc	14, cr3, [r7, #-528]!	; 0xfffffdf0
    1710:	67675a3d 			; <UNDEFINED> instruction: 0x67675a3d
    1714:	3d67842f 	cfstrdcc	mvd8, [r7, #-188]!	; 0xffffff44
    1718:	683d2f4b 	ldmdavs	sp!, {r0, r1, r3, r6, r8, r9, sl, fp, sp}
    171c:	2f2f3d3e 	svccs	0x002f3d3e
    1720:	762f3d4b 	strtvc	r3, [pc], -fp, asr #26
    1724:	04020067 	streq	r0, [r2], #-103	; 0xffffff99
    1728:	06200601 	strteq	r0, [r0], -r1, lsl #12
    172c:	3d593d83 	ldclcc	13, cr3, [r9, #-524]	; 0xfffffdf4
    1730:	4b67914c 	blmi	19e5c68 <startup-0x1e61a398>
    1734:	304c9f76 	subcc	r9, ip, r6, ror pc
    1738:	01040200 	mrseq	r0, R12_usr
    173c:	83062006 	movwhi	r2, #24582	; 0x6006
    1740:	003f3d3d 	eorseq	r3, pc, sp, lsr sp	; <UNPREDICTABLE>
    1744:	06010402 	streq	r0, [r1], -r2, lsl #8
    1748:	3d830620 	stccc	6, cr0, [r3, #128]	; 0x80
    174c:	02003f3d 	andeq	r3, r0, #61, 30	; 0xf4
    1750:	20060104 	andcs	r0, r6, r4, lsl #2
    1754:	3d3d8306 	ldccc	3, cr8, [sp, #-24]!	; 0xffffffe8
    1758:	0402003f 	streq	r0, [r2], #-63	; 0xffffffc1
    175c:	06200601 	strteq	r0, [r0], -r1, lsl #12
    1760:	3f3d3d83 	svccc	0x003d3d83
    1764:	843d343e 	ldrthi	r3, [sp], #-1086	; 0xfffffbc2
    1768:	3e2f2f2f 	cdpcc	15, 2, cr2, cr15, cr15, {1}
    176c:	4b2f843e 	blmi	be286c <startup-0x1f41d794>
    1770:	2f4d7321 	svccs	0x004d7321
    1774:	4d73214b 	ldfmie	f2, [r3, #-300]!	; 0xfffffed4
    1778:	4b305968 	blmi	c17d20 <startup-0x1f3e82e0>
    177c:	4b4d7321 	blmi	135e408 <startup-0x1eca1bf8>
    1780:	4b4e7321 	blmi	139e40c <startup-0x1ec61bf4>
    1784:	4b30754c 	blmi	c1ecbc <startup-0x1f3e1344>
    1788:	73213d2f 			; <UNDEFINED> instruction: 0x73213d2f
    178c:	01040200 	mrseq	r0, R12_usr
    1790:	6b064a06 	blvs	193fb0 <startup-0x1fe6c050>
    1794:	213d2f4b 	teqcs	sp, fp, asr #30
    1798:	04020073 	streq	r0, [r2], #-115	; 0xffffff8d
    179c:	064a0601 	strbeq	r0, [sl], -r1, lsl #12
    17a0:	3e4e4b6b 	vmlscc.f64	d20, d14, d27
    17a4:	2f2f6875 	svccs	0x002f6875
    17a8:	73213d4b 			; <UNDEFINED> instruction: 0x73213d4b
    17ac:	212f4b4d 			; <UNDEFINED> instruction: 0x212f4b4d
    17b0:	02214d73 	eoreq	r4, r1, #7360	; 0x1cc0
    17b4:	01010008 	tsteq	r1, r8
    17b8:	00000076 	andeq	r0, r0, r6, ror r0
    17bc:	00570002 	subseq	r0, r7, r2
    17c0:	01020000 	mrseq	r0, (UNDEF: 2)
    17c4:	000d0efb 	strdeq	r0, [sp], -fp
    17c8:	01010101 	tsteq	r1, r1, lsl #2
    17cc:	01000000 	mrseq	r0, (UNDEF: 0)
    17d0:	43010000 	movwmi	r0, #4096	; 0x1000
    17d4:	6f6d2f3a 	svcvs	0x006d2f3a
    17d8:	2f632f70 	svccs	0x00632f70
    17dc:	6c706f4d 	ldclvs	15, cr6, [r0], #-308	; 0xfffffecc
    17e0:	726f6261 	rsbvc	r6, pc, #268435462	; 0x10000006
    17e4:	6f697461 	svcvs	0x00697461
    17e8:	2f72656e 	svccs	0x0072656e
    17ec:	73504944 	cmpvc	r0, #68, 18	; 0x110000
    17f0:	7469572d 	strbtvc	r5, [r9], #-1837	; 0xfffff8d3
    17f4:	432f6863 			; <UNDEFINED> instruction: 0x432f6863
    17f8:	6c730000 	ldclvs	0, cr0, [r3], #-0
    17fc:	745f776f 	ldrbvc	r7, [pc], #-1903	; 1804 <startup-0x1fffe7fc>
    1800:	2e747865 	cdpcs	8, 7, cr7, cr4, cr5, {3}
    1804:	00010063 	andeq	r0, r1, r3, rrx
    1808:	6f6c7300 	svcvs	0x006c7300
    180c:	65745f77 	ldrbvs	r5, [r4, #-3959]!	; 0xfffff089
    1810:	682e7478 	stmdavs	lr!, {r3, r4, r5, r6, sl, ip, sp, lr}
    1814:	00000100 	andeq	r0, r0, r0, lsl #2
    1818:	02050000 	andeq	r0, r5, #0
    181c:	20004b80 	andcs	r4, r0, r0, lsl #23
    1820:	c99f5915 	ldmibgt	pc, {r0, r2, r4, r8, fp, ip, lr}	; <UNPREDICTABLE>
    1824:	754c5984 	strbvc	r5, [ip, #-2436]	; 0xfffff67c
    1828:	3d3d3d3d 	ldccc	13, cr3, [sp, #-244]!	; 0xffffff0c
    182c:	0007023d 	andeq	r0, r7, sp, lsr r2
    1830:	00d60101 	sbcseq	r0, r6, r1, lsl #2
    1834:	00020000 	andeq	r0, r2, r0
    1838:	000000ab 	andeq	r0, r0, fp, lsr #1
    183c:	0efb0102 	cdpeq	1, 15, cr0, cr11, cr2, {0}
    1840:	0101000d 	tsteq	r1, sp
    1844:	00000101 	andeq	r0, r0, r1, lsl #2
    1848:	00000100 	andeq	r0, r0, r0, lsl #2
    184c:	2f3a4301 	svccs	0x003a4301
    1850:	2f706f6d 	svccs	0x00706f6d
    1854:	6f4d2f63 	svcvs	0x004d2f63
    1858:	62616c70 	rsbvs	r6, r1, #112, 24	; 0x7000
    185c:	7461726f 	strbtvc	r7, [r1], #-623	; 0xfffffd91
    1860:	656e6f69 	strbvs	r6, [lr, #-3945]!	; 0xfffff097
    1864:	49442f72 	stmdbmi	r4, {r1, r4, r5, r6, r8, r9, sl, fp, sp}^
    1868:	572d7350 			; <UNDEFINED> instruction: 0x572d7350
    186c:	68637469 	stmdavs	r3!, {r0, r3, r5, r6, sl, ip, sp, lr}^
    1870:	0000432f 	andeq	r4, r0, pc, lsr #6
    1874:	6f646e69 	svcvs	0x00646e69
    1878:	2e73726f 	cdpcs	2, 7, cr7, cr3, cr15, {3}
    187c:	00010063 	andeq	r0, r1, r3, rrx
    1880:	72707300 	rsbsvc	r7, r0, #0, 6
    1884:	2e657469 	cdpcs	4, 6, cr7, cr5, cr9, {3}
    1888:	00010068 	andeq	r0, r1, r8, rrx
    188c:	616d6900 	cmnvs	sp, r0, lsl #18
    1890:	682e6567 	stmdavs	lr!, {r0, r1, r2, r5, r6, r8, sl, sp, lr}
    1894:	00000100 	andeq	r0, r0, r0, lsl #2
    1898:	656d6167 	strbvs	r6, [sp, #-359]!	; 0xfffffe99
    189c:	656a626f 	strbvs	r6, [sl, #-623]!	; 0xfffffd91
    18a0:	682e7463 	stmdavs	lr!, {r0, r1, r5, r6, sl, ip, sp, lr}
    18a4:	00000100 	andeq	r0, r0, r0, lsl #2
    18a8:	6f646e69 	svcvs	0x00646e69
    18ac:	5f73726f 	svcpl	0x0073726f
    18b0:	63616c62 	cmnvs	r1, #25088	; 0x6200
    18b4:	62782e6b 	rsbsvs	r2, r8, #1712	; 0x6b0
    18b8:	0001006d 	andeq	r0, r1, sp, rrx
    18bc:	646e6900 	strbtvs	r6, [lr], #-2304	; 0xfffff700
    18c0:	73726f6f 	cmnvc	r2, #444	; 0x1bc
    18c4:	6172675f 	cmnvs	r2, pc, asr r7
    18c8:	62782e79 	rsbsvs	r2, r8, #1936	; 0x790
    18cc:	0001006d 	andeq	r0, r1, sp, rrx
    18d0:	646e6900 	strbtvs	r6, [lr], #-2304	; 0xfffff700
    18d4:	73726f6f 	cmnvc	r2, #444	; 0x1bc
    18d8:	67696c5f 			; <UNDEFINED> instruction: 0x67696c5f
    18dc:	782e7468 	stmdavc	lr!, {r3, r5, r6, sl, ip, sp, lr}
    18e0:	01006d62 	tsteq	r0, r2, ror #26
    18e4:	00000000 	andeq	r0, r0, r0
    18e8:	4c140205 	lfmmi	f0, 4, [r4], {5}
    18ec:	13032000 	movwne	r2, #12288	; 0x3000
    18f0:	672f3e01 	strvs	r3, [pc, -r1, lsl #28]!
    18f4:	3d672f3d 	stclcc	15, cr2, [r7, #-244]!	; 0xffffff0c
    18f8:	083e672f 	ldmdaeq	lr!, {r0, r1, r2, r3, r5, r8, r9, sl, sp, lr}
    18fc:	2f4b4c5a 	svccs	0x004b4c5a
    1900:	3e934c3e 	mrccc	12, 4, r4, cr3, cr14, {1}
    1904:	3d3d3d3d 	ldccc	13, cr3, [sp, #-244]!	; 0xffffff0c
    1908:	01010008 	tsteq	r1, r8
    190c:	000000da 	ldrdeq	r0, [r0], -sl
    1910:	00af0002 	adceq	r0, pc, r2
    1914:	01020000 	mrseq	r0, (UNDEF: 2)
    1918:	000d0efb 	strdeq	r0, [sp], -fp
    191c:	01010101 	tsteq	r1, r1, lsl #2
    1920:	01000000 	mrseq	r0, (UNDEF: 0)
    1924:	43010000 	movwmi	r0, #4096	; 0x1000
    1928:	6f6d2f3a 	svcvs	0x006d2f3a
    192c:	2f632f70 	svccs	0x00632f70
    1930:	6c706f4d 	ldclvs	15, cr6, [r0], #-308	; 0xfffffecc
    1934:	726f6261 	rsbvc	r6, pc, #268435462	; 0x10000006
    1938:	6f697461 	svcvs	0x00697461
    193c:	2f72656e 	svccs	0x0072656e
    1940:	73504944 	cmpvc	r0, #68, 18	; 0x110000
    1944:	7469572d 	strbtvc	r5, [r9], #-1837	; 0xfffff8d3
    1948:	432f6863 			; <UNDEFINED> instruction: 0x432f6863
    194c:	6e690000 	cdpvs	0, 6, cr0, cr9, cr0, {0}
    1950:	726f6f64 	rsbvc	r6, pc, #100, 30	; 0x190
    1954:	632e3273 			; <UNDEFINED> instruction: 0x632e3273
    1958:	00000100 	andeq	r0, r0, r0, lsl #2
    195c:	69727073 	ldmdbvs	r2!, {r0, r1, r4, r5, r6, ip, sp, lr}^
    1960:	682e6574 	stmdavs	lr!, {r2, r4, r5, r6, r8, sl, sp, lr}
    1964:	00000100 	andeq	r0, r0, r0, lsl #2
    1968:	67616d69 	strbvs	r6, [r1, -r9, ror #26]!
    196c:	00682e65 	rsbeq	r2, r8, r5, ror #28
    1970:	67000001 	strvs	r0, [r0, -r1]
    1974:	6f656d61 	svcvs	0x00656d61
    1978:	63656a62 	cmnvs	r5, #401408	; 0x62000
    197c:	00682e74 	rsbeq	r2, r8, r4, ror lr
    1980:	69000001 	stmdbvs	r0, {r0}
    1984:	6f6f646e 	svcvs	0x006f646e
    1988:	5f327372 	svcpl	0x00327372
    198c:	63616c62 	cmnvs	r1, #25088	; 0x6200
    1990:	62782e6b 	rsbsvs	r2, r8, #1712	; 0x6b0
    1994:	0001006d 	andeq	r0, r1, sp, rrx
    1998:	646e6900 	strbtvs	r6, [lr], #-2304	; 0xfffff700
    199c:	73726f6f 	cmnvc	r2, #444	; 0x1bc
    19a0:	72675f32 	rsbvc	r5, r7, #50, 30	; 0xc8
    19a4:	782e7961 	stmdavc	lr!, {r0, r5, r6, r8, fp, ip, sp, lr}
    19a8:	01006d62 	tsteq	r0, r2, ror #26
    19ac:	6e690000 	cdpvs	0, 6, cr0, cr9, cr0, {0}
    19b0:	726f6f64 	rsbvc	r6, pc, #100, 30	; 0x190
    19b4:	6c5f3273 	lfmvs	f3, 2, [pc], {115}	; 0x73
    19b8:	74686769 	strbtvc	r6, [r8], #-1897	; 0xfffff897
    19bc:	6d62782e 	stclvs	8, cr7, [r2, #-184]!	; 0xffffff48
    19c0:	00000100 	andeq	r0, r0, r0, lsl #2
    19c4:	02050000 	andeq	r0, r5, #0
    19c8:	20004cfc 	strdcs	r4, [r0], -ip
    19cc:	3e011303 	cdpcc	3, 0, cr1, cr1, cr3, {0}
    19d0:	2f3d672f 	svccs	0x003d672f
    19d4:	672f3d67 	strvs	r3, [pc, -r7, ror #26]!
    19d8:	4c5a083e 	mrrcmi	8, 3, r0, sl, cr14
    19dc:	4c3e2f4b 	ldcmi	15, cr2, [lr], #-300	; 0xfffffed4
    19e0:	3d3d3e93 	ldccc	14, cr3, [sp, #-588]!	; 0xfffffdb4
    19e4:	00083d3d 	andeq	r3, r8, sp, lsr sp
    19e8:	00d20101 	sbcseq	r0, r2, r1, lsl #2
    19ec:	00020000 	andeq	r0, r2, r0
    19f0:	000000a7 	andeq	r0, r0, r7, lsr #1
    19f4:	0efb0102 	cdpeq	1, 15, cr0, cr11, cr2, {0}
    19f8:	0101000d 	tsteq	r1, sp
    19fc:	00000101 	andeq	r0, r0, r1, lsl #2
    1a00:	00000100 	andeq	r0, r0, r0, lsl #2
    1a04:	2f3a4301 	svccs	0x003a4301
    1a08:	2f706f6d 	svccs	0x00706f6d
    1a0c:	6f4d2f63 	svcvs	0x004d2f63
    1a10:	62616c70 	rsbvs	r6, r1, #112, 24	; 0x7000
    1a14:	7461726f 	strbtvc	r7, [r1], #-623	; 0xfffffd91
    1a18:	656e6f69 	strbvs	r6, [lr, #-3945]!	; 0xfffff097
    1a1c:	49442f72 	stmdbmi	r4, {r1, r4, r5, r6, r8, r9, sl, fp, sp}^
    1a20:	572d7350 			; <UNDEFINED> instruction: 0x572d7350
    1a24:	68637469 	stmdavs	r3!, {r0, r3, r5, r6, sl, ip, sp, lr}^
    1a28:	0000432f 	andeq	r4, r0, pc, lsr #6
    1a2c:	706f7274 	rsbvc	r7, pc, r4, ror r2	; <UNPREDICTABLE>
    1a30:	632e7968 			; <UNDEFINED> instruction: 0x632e7968
    1a34:	00000100 	andeq	r0, r0, r0, lsl #2
    1a38:	69727073 	ldmdbvs	r2!, {r0, r1, r4, r5, r6, ip, sp, lr}^
    1a3c:	682e6574 	stmdavs	lr!, {r2, r4, r5, r6, r8, sl, sp, lr}
    1a40:	00000100 	andeq	r0, r0, r0, lsl #2
    1a44:	67616d69 	strbvs	r6, [r1, -r9, ror #26]!
    1a48:	00682e65 	rsbeq	r2, r8, r5, ror #28
    1a4c:	67000001 	strvs	r0, [r0, -r1]
    1a50:	6f656d61 	svcvs	0x00656d61
    1a54:	63656a62 	cmnvs	r5, #401408	; 0x62000
    1a58:	00682e74 	rsbeq	r2, r8, r4, ror lr
    1a5c:	74000001 	strvc	r0, [r0], #-1
    1a60:	68706f72 	ldmdavs	r0!, {r1, r4, r5, r6, r8, r9, sl, fp, sp, lr}^
    1a64:	6c625f79 	stclvs	15, cr5, [r2], #-484	; 0xfffffe1c
    1a68:	2e6b6361 	cdpcs	3, 6, cr6, cr11, cr1, {3}
    1a6c:	006d6278 	rsbeq	r6, sp, r8, ror r2
    1a70:	74000001 	strvc	r0, [r0], #-1
    1a74:	68706f72 	ldmdavs	r0!, {r1, r4, r5, r6, r8, r9, sl, fp, sp, lr}^
    1a78:	72675f79 	rsbvc	r5, r7, #484	; 0x1e4
    1a7c:	782e7961 	stmdavc	lr!, {r0, r5, r6, r8, fp, ip, sp, lr}
    1a80:	01006d62 	tsteq	r0, r2, ror #26
    1a84:	72740000 	rsbsvc	r0, r4, #0
    1a88:	7968706f 	stmdbvc	r8!, {r0, r1, r2, r3, r5, r6, ip, sp, lr}^
    1a8c:	67696c5f 			; <UNDEFINED> instruction: 0x67696c5f
    1a90:	782e7468 	stmdavc	lr!, {r3, r5, r6, sl, ip, sp, lr}
    1a94:	01006d62 	tsteq	r0, r2, ror #26
    1a98:	00000000 	andeq	r0, r0, r0
    1a9c:	4de40205 	sfmmi	f0, 2, [r4, #20]!
    1aa0:	13032000 	movwne	r2, #12288	; 0x3000
    1aa4:	672f3e01 	strvs	r3, [pc, -r1, lsl #28]!
    1aa8:	3d672f3d 	stclcc	15, cr2, [r7, #-244]!	; 0xffffff0c
    1aac:	083e672f 	ldmdaeq	lr!, {r0, r1, r2, r3, r5, r8, r9, sl, sp, lr}
    1ab0:	2f4b4c5a 	svccs	0x004b4c5a
    1ab4:	3e934c3e 	mrccc	12, 4, r4, cr3, cr14, {1}
    1ab8:	3d3d3d3d 	ldccc	13, cr3, [sp, #-244]!	; 0xffffff0c
    1abc:	01010008 	tsteq	r1, r8
    1ac0:	000000ce 	andeq	r0, r0, lr, asr #1
    1ac4:	00a30002 	adceq	r0, r3, r2
    1ac8:	01020000 	mrseq	r0, (UNDEF: 2)
    1acc:	000d0efb 	strdeq	r0, [sp], -fp
    1ad0:	01010101 	tsteq	r1, r1, lsl #2
    1ad4:	01000000 	mrseq	r0, (UNDEF: 0)
    1ad8:	43010000 	movwmi	r0, #4096	; 0x1000
    1adc:	6f6d2f3a 	svcvs	0x006d2f3a
    1ae0:	2f632f70 	svccs	0x00632f70
    1ae4:	6c706f4d 	ldclvs	15, cr6, [r0], #-308	; 0xfffffecc
    1ae8:	726f6261 	rsbvc	r6, pc, #268435462	; 0x10000006
    1aec:	6f697461 	svcvs	0x00697461
    1af0:	2f72656e 	svccs	0x0072656e
    1af4:	73504944 	cmpvc	r0, #68, 18	; 0x110000
    1af8:	7469572d 	strbtvc	r5, [r9], #-1837	; 0xfffff8d3
    1afc:	432f6863 			; <UNDEFINED> instruction: 0x432f6863
    1b00:	6f720000 	svcvs	0x00720000
    1b04:	2e726567 	cdpcs	5, 7, cr6, cr2, cr7, {3}
    1b08:	00010063 	andeq	r0, r1, r3, rrx
    1b0c:	72707300 	rsbsvc	r7, r0, #0, 6
    1b10:	2e657469 	cdpcs	4, 6, cr7, cr5, cr9, {3}
    1b14:	00010068 	andeq	r0, r1, r8, rrx
    1b18:	616d6900 	cmnvs	sp, r0, lsl #18
    1b1c:	682e6567 	stmdavs	lr!, {r0, r1, r2, r5, r6, r8, sl, sp, lr}
    1b20:	00000100 	andeq	r0, r0, r0, lsl #2
    1b24:	656d6167 	strbvs	r6, [sp, #-359]!	; 0xfffffe99
    1b28:	656a626f 	strbvs	r6, [sl, #-623]!	; 0xfffffd91
    1b2c:	682e7463 	stmdavs	lr!, {r0, r1, r5, r6, sl, ip, sp, lr}
    1b30:	00000100 	andeq	r0, r0, r0, lsl #2
    1b34:	65676f72 	strbvs	r6, [r7, #-3954]!	; 0xfffff08e
    1b38:	6c625f72 	stclvs	15, cr5, [r2], #-456	; 0xfffffe38
    1b3c:	2e6b6361 	cdpcs	3, 6, cr6, cr11, cr1, {3}
    1b40:	006d6278 	rsbeq	r6, sp, r8, ror r2
    1b44:	72000001 	andvc	r0, r0, #1
    1b48:	7265676f 	rsbvc	r6, r5, #29097984	; 0x1bc0000
    1b4c:	6172675f 	cmnvs	r2, pc, asr r7
    1b50:	62782e79 	rsbsvs	r2, r8, #1936	; 0x790
    1b54:	0001006d 	andeq	r0, r1, sp, rrx
    1b58:	676f7200 	strbvs	r7, [pc, -r0, lsl #4]!
    1b5c:	6c5f7265 	lfmvs	f7, 2, [pc], {101}	; 0x65
    1b60:	74686769 	strbtvc	r6, [r8], #-1897	; 0xfffff897
    1b64:	6d62782e 	stclvs	8, cr7, [r2, #-184]!	; 0xffffff48
    1b68:	00000100 	andeq	r0, r0, r0, lsl #2
    1b6c:	02050000 	andeq	r0, r5, #0
    1b70:	20004ecc 	andcs	r4, r0, ip, asr #29
    1b74:	3e011303 	cdpcc	3, 0, cr1, cr1, cr3, {0}
    1b78:	2f3d672f 	svccs	0x003d672f
    1b7c:	672f3d67 	strvs	r3, [pc, -r7, ror #26]!
    1b80:	4c5a083e 	mrrcmi	8, 3, r0, sl, cr14
    1b84:	4c3e2f4b 	ldcmi	15, cr2, [lr], #-300	; 0xfffffed4
    1b88:	3d3d3e93 	ldccc	14, cr3, [sp, #-588]!	; 0xfffffdb4
    1b8c:	00083d3d 	andeq	r3, r8, sp, lsr sp
    1b90:	02f40101 	rscseq	r0, r4, #1073741824	; 0x40000000
    1b94:	00020000 	andeq	r0, r2, r0
    1b98:	0000028b 	andeq	r0, r0, fp, lsl #5
    1b9c:	0efb0102 	cdpeq	1, 15, cr0, cr11, cr2, {0}
    1ba0:	0101000d 	tsteq	r1, sp
    1ba4:	00000101 	andeq	r0, r0, r1, lsl #2
    1ba8:	00000100 	andeq	r0, r0, r0, lsl #2
    1bac:	2f3a4301 	svccs	0x003a4301
    1bb0:	2f706f6d 	svccs	0x00706f6d
    1bb4:	6f4d2f63 	svcvs	0x004d2f63
    1bb8:	62616c70 	rsbvs	r6, r1, #112, 24	; 0x7000
    1bbc:	7461726f 	strbtvc	r7, [r1], #-623	; 0xfffffd91
    1bc0:	656e6f69 	strbvs	r6, [lr, #-3945]!	; 0xfffff097
    1bc4:	49442f72 	stmdbmi	r4, {r1, r4, r5, r6, r8, r9, sl, fp, sp}^
    1bc8:	572d7350 			; <UNDEFINED> instruction: 0x572d7350
    1bcc:	68637469 	stmdavs	r3!, {r0, r3, r5, r6, sl, ip, sp, lr}^
    1bd0:	0000432f 	andeq	r4, r0, pc, lsr #6
    1bd4:	656d6167 	strbvs	r6, [sp, #-359]!	; 0xfffffe99
    1bd8:	65766f5f 	ldrbvs	r6, [r6, #-3935]!	; 0xfffff0a1
    1bdc:	69775f72 	ldmdbvs	r7!, {r1, r4, r5, r6, r8, r9, sl, fp, ip, lr}^
    1be0:	2e686374 	mcrcs	3, 3, r6, cr8, cr4, {3}
    1be4:	00010063 	andeq	r0, r1, r3, rrx
    1be8:	72707300 	rsbsvc	r7, r0, #0, 6
    1bec:	2e657469 	cdpcs	4, 6, cr7, cr5, cr9, {3}
    1bf0:	00010068 	andeq	r0, r1, r8, rrx
    1bf4:	616d6900 	cmnvs	sp, r0, lsl #18
    1bf8:	682e6567 	stmdavs	lr!, {r0, r1, r2, r5, r6, r8, sl, sp, lr}
    1bfc:	00000100 	andeq	r0, r0, r0, lsl #2
    1c00:	656d6167 	strbvs	r6, [sp, #-359]!	; 0xfffffe99
    1c04:	656a626f 	strbvs	r6, [sl, #-623]!	; 0xfffffd91
    1c08:	682e7463 	stmdavs	lr!, {r0, r1, r5, r6, sl, ip, sp, lr}
    1c0c:	00000100 	andeq	r0, r0, r0, lsl #2
    1c10:	656d6167 	strbvs	r6, [sp, #-359]!	; 0xfffffe99
    1c14:	65766f5f 	ldrbvs	r6, [r6, #-3935]!	; 0xfffff0a1
    1c18:	69775f72 	ldmdbvs	r7!, {r1, r4, r5, r6, r8, r9, sl, fp, ip, lr}^
    1c1c:	31686374 	smccc	34356	; 0x8634
    1c20:	616c625f 	cmnvs	ip, pc, asr r2
    1c24:	782e6b63 	stmdavc	lr!, {r0, r1, r5, r6, r8, r9, fp, sp, lr}
    1c28:	01006d62 	tsteq	r0, r2, ror #26
    1c2c:	61670000 	cmnvs	r7, r0
    1c30:	6f5f656d 	svcvs	0x005f656d
    1c34:	5f726576 	svcpl	0x00726576
    1c38:	63746977 	cmnvs	r4, #1949696	; 0x1dc000
    1c3c:	675f3168 	ldrbvs	r3, [pc, -r8, ror #2]
    1c40:	2e796172 	mrccs	1, 3, r6, cr9, cr2, {3}
    1c44:	006d6278 	rsbeq	r6, sp, r8, ror r2
    1c48:	67000001 	strvs	r0, [r0, -r1]
    1c4c:	5f656d61 	svcpl	0x00656d61
    1c50:	7265766f 	rsbvc	r7, r5, #116391936	; 0x6f00000
    1c54:	7469775f 	strbtvc	r7, [r9], #-1887	; 0xfffff8a1
    1c58:	5f316863 	svcpl	0x00316863
    1c5c:	6867696c 	stmdavs	r7!, {r2, r3, r5, r6, r8, fp, sp, lr}^
    1c60:	62782e74 	rsbsvs	r2, r8, #116, 28	; 0x740
    1c64:	0001006d 	andeq	r0, r1, sp, rrx
    1c68:	6d616700 	stclvs	7, cr6, [r1, #-0]
    1c6c:	766f5f65 	strbtvc	r5, [pc], -r5, ror #30
    1c70:	775f7265 	ldrbvc	r7, [pc, -r5, ror #4]
    1c74:	68637469 	stmdavs	r3!, {r0, r3, r5, r6, sl, ip, sp, lr}^
    1c78:	6c625f32 	stclvs	15, cr5, [r2], #-200	; 0xffffff38
    1c7c:	2e6b6361 	cdpcs	3, 6, cr6, cr11, cr1, {3}
    1c80:	006d6278 	rsbeq	r6, sp, r8, ror r2
    1c84:	67000001 	strvs	r0, [r0, -r1]
    1c88:	5f656d61 	svcpl	0x00656d61
    1c8c:	7265766f 	rsbvc	r7, r5, #116391936	; 0x6f00000
    1c90:	7469775f 	strbtvc	r7, [r9], #-1887	; 0xfffff8a1
    1c94:	5f326863 	svcpl	0x00326863
    1c98:	79617267 	stmdbvc	r1!, {r0, r1, r2, r5, r6, r9, ip, sp, lr}^
    1c9c:	6d62782e 	stclvs	8, cr7, [r2, #-184]!	; 0xffffff48
    1ca0:	00000100 	andeq	r0, r0, r0, lsl #2
    1ca4:	656d6167 	strbvs	r6, [sp, #-359]!	; 0xfffffe99
    1ca8:	65766f5f 	ldrbvs	r6, [r6, #-3935]!	; 0xfffff0a1
    1cac:	69775f72 	ldmdbvs	r7!, {r1, r4, r5, r6, r8, r9, sl, fp, ip, lr}^
    1cb0:	32686374 	rsbcc	r6, r8, #116, 6	; 0xd0000001
    1cb4:	67696c5f 			; <UNDEFINED> instruction: 0x67696c5f
    1cb8:	782e7468 	stmdavc	lr!, {r3, r5, r6, sl, ip, sp, lr}
    1cbc:	01006d62 	tsteq	r0, r2, ror #26
    1cc0:	61670000 	cmnvs	r7, r0
    1cc4:	6f5f656d 	svcvs	0x005f656d
    1cc8:	5f726576 	svcpl	0x00726576
    1ccc:	63746977 	cmnvs	r4, #1949696	; 0x1dc000
    1cd0:	625f3368 	subsvs	r3, pc, #104, 6	; 0xa0000001
    1cd4:	6b63616c 	blvs	18da28c <startup-0x1e725d74>
    1cd8:	6d62782e 	stclvs	8, cr7, [r2, #-184]!	; 0xffffff48
    1cdc:	00000100 	andeq	r0, r0, r0, lsl #2
    1ce0:	656d6167 	strbvs	r6, [sp, #-359]!	; 0xfffffe99
    1ce4:	65766f5f 	ldrbvs	r6, [r6, #-3935]!	; 0xfffff0a1
    1ce8:	69775f72 	ldmdbvs	r7!, {r1, r4, r5, r6, r8, r9, sl, fp, ip, lr}^
    1cec:	33686374 	cmncc	r8, #116, 6	; 0xd0000001
    1cf0:	6172675f 	cmnvs	r2, pc, asr r7
    1cf4:	62782e79 	rsbsvs	r2, r8, #1936	; 0x790
    1cf8:	0001006d 	andeq	r0, r1, sp, rrx
    1cfc:	6d616700 	stclvs	7, cr6, [r1, #-0]
    1d00:	766f5f65 	strbtvc	r5, [pc], -r5, ror #30
    1d04:	775f7265 	ldrbvc	r7, [pc, -r5, ror #4]
    1d08:	68637469 	stmdavs	r3!, {r0, r3, r5, r6, sl, ip, sp, lr}^
    1d0c:	696c5f33 	stmdbvs	ip!, {r0, r1, r4, r5, r8, r9, sl, fp, ip, lr}^
    1d10:	2e746867 	cdpcs	8, 7, cr6, cr4, cr7, {3}
    1d14:	006d6278 	rsbeq	r6, sp, r8, ror r2
    1d18:	67000001 	strvs	r0, [r0, -r1]
    1d1c:	5f656d61 	svcpl	0x00656d61
    1d20:	7265766f 	rsbvc	r7, r5, #116391936	; 0x6f00000
    1d24:	7469775f 	strbtvc	r7, [r9], #-1887	; 0xfffff8a1
    1d28:	5f346863 	svcpl	0x00346863
    1d2c:	63616c62 	cmnvs	r1, #25088	; 0x6200
    1d30:	62782e6b 	rsbsvs	r2, r8, #1712	; 0x6b0
    1d34:	0001006d 	andeq	r0, r1, sp, rrx
    1d38:	6d616700 	stclvs	7, cr6, [r1, #-0]
    1d3c:	766f5f65 	strbtvc	r5, [pc], -r5, ror #30
    1d40:	775f7265 	ldrbvc	r7, [pc, -r5, ror #4]
    1d44:	68637469 	stmdavs	r3!, {r0, r3, r5, r6, sl, ip, sp, lr}^
    1d48:	72675f34 	rsbvc	r5, r7, #52, 30	; 0xd0
    1d4c:	782e7961 	stmdavc	lr!, {r0, r5, r6, r8, fp, ip, sp, lr}
    1d50:	01006d62 	tsteq	r0, r2, ror #26
    1d54:	61670000 	cmnvs	r7, r0
    1d58:	6f5f656d 	svcvs	0x005f656d
    1d5c:	5f726576 	svcpl	0x00726576
    1d60:	63746977 	cmnvs	r4, #1949696	; 0x1dc000
    1d64:	6c5f3468 	cfldrdvs	mvd3, [pc], {104}	; 0x68
    1d68:	74686769 	strbtvc	r6, [r8], #-1897	; 0xfffff897
    1d6c:	6d62782e 	stclvs	8, cr7, [r2, #-184]!	; 0xffffff48
    1d70:	00000100 	andeq	r0, r0, r0, lsl #2
    1d74:	656d6167 	strbvs	r6, [sp, #-359]!	; 0xfffffe99
    1d78:	65766f5f 	ldrbvs	r6, [r6, #-3935]!	; 0xfffff0a1
    1d7c:	69775f72 	ldmdbvs	r7!, {r1, r4, r5, r6, r8, r9, sl, fp, ip, lr}^
    1d80:	35686374 	strbcc	r6, [r8, #-884]!	; 0xfffffc8c
    1d84:	616c625f 	cmnvs	ip, pc, asr r2
    1d88:	782e6b63 	stmdavc	lr!, {r0, r1, r5, r6, r8, r9, fp, sp, lr}
    1d8c:	01006d62 	tsteq	r0, r2, ror #26
    1d90:	61670000 	cmnvs	r7, r0
    1d94:	6f5f656d 	svcvs	0x005f656d
    1d98:	5f726576 	svcpl	0x00726576
    1d9c:	63746977 	cmnvs	r4, #1949696	; 0x1dc000
    1da0:	675f3568 	ldrbvs	r3, [pc, -r8, ror #10]
    1da4:	2e796172 	mrccs	1, 3, r6, cr9, cr2, {3}
    1da8:	006d6278 	rsbeq	r6, sp, r8, ror r2
    1dac:	67000001 	strvs	r0, [r0, -r1]
    1db0:	5f656d61 	svcpl	0x00656d61
    1db4:	7265766f 	rsbvc	r7, r5, #116391936	; 0x6f00000
    1db8:	7469775f 	strbtvc	r7, [r9], #-1887	; 0xfffff8a1
    1dbc:	5f356863 	svcpl	0x00356863
    1dc0:	6867696c 	stmdavs	r7!, {r2, r3, r5, r6, r8, fp, sp, lr}^
    1dc4:	62782e74 	rsbsvs	r2, r8, #116, 28	; 0x740
    1dc8:	0001006d 	andeq	r0, r1, sp, rrx
    1dcc:	6d616700 	stclvs	7, cr6, [r1, #-0]
    1dd0:	766f5f65 	strbtvc	r5, [pc], -r5, ror #30
    1dd4:	775f7265 	ldrbvc	r7, [pc, -r5, ror #4]
    1dd8:	68637469 	stmdavs	r3!, {r0, r3, r5, r6, sl, ip, sp, lr}^
    1ddc:	6c625f36 	stclvs	15, cr5, [r2], #-216	; 0xffffff28
    1de0:	2e6b6361 	cdpcs	3, 6, cr6, cr11, cr1, {3}
    1de4:	006d6278 	rsbeq	r6, sp, r8, ror r2
    1de8:	67000001 	strvs	r0, [r0, -r1]
    1dec:	5f656d61 	svcpl	0x00656d61
    1df0:	7265766f 	rsbvc	r7, r5, #116391936	; 0x6f00000
    1df4:	7469775f 	strbtvc	r7, [r9], #-1887	; 0xfffff8a1
    1df8:	5f366863 	svcpl	0x00366863
    1dfc:	79617267 	stmdbvc	r1!, {r0, r1, r2, r5, r6, r9, ip, sp, lr}^
    1e00:	6d62782e 	stclvs	8, cr7, [r2, #-184]!	; 0xffffff48
    1e04:	00000100 	andeq	r0, r0, r0, lsl #2
    1e08:	656d6167 	strbvs	r6, [sp, #-359]!	; 0xfffffe99
    1e0c:	65766f5f 	ldrbvs	r6, [r6, #-3935]!	; 0xfffff0a1
    1e10:	69775f72 	ldmdbvs	r7!, {r1, r4, r5, r6, r8, r9, sl, fp, ip, lr}^
    1e14:	36686374 			; <UNDEFINED> instruction: 0x36686374
    1e18:	67696c5f 			; <UNDEFINED> instruction: 0x67696c5f
    1e1c:	782e7468 	stmdavc	lr!, {r3, r5, r6, sl, ip, sp, lr}
    1e20:	01006d62 	tsteq	r0, r2, ror #26
    1e24:	00000000 	andeq	r0, r0, r0
    1e28:	4fb40205 	svcmi	0x00b40205
    1e2c:	82032000 	andhi	r2, r3, #0
    1e30:	2f3e0101 	svccs	0x003e0101
    1e34:	672f3d67 	strvs	r3, [pc, -r7, ror #26]!
    1e38:	3e672f3d 	mcrcc	15, 3, r2, cr7, cr13, {1}
    1e3c:	2f3d672f 	svccs	0x003d672f
    1e40:	672f3d67 	strvs	r3, [pc, -r7, ror #26]!
    1e44:	3d672f3f 	stclcc	15, cr2, [r7, #-252]!	; 0xffffff04
    1e48:	2f3d672f 	svccs	0x003d672f
    1e4c:	672f3e67 	strvs	r3, [pc, -r7, ror #28]!
    1e50:	3d672f3d 	stclcc	15, cr2, [r7, #-244]!	; 0xffffff0c
    1e54:	2f3e672f 	svccs	0x003e672f
    1e58:	672f3d67 	strvs	r3, [pc, -r7, ror #26]!
    1e5c:	3e672f3d 	mcrcc	15, 3, r2, cr7, cr13, {1}
    1e60:	2f3d672f 	svccs	0x003d672f
    1e64:	672f3d67 	strvs	r3, [pc, -r7, ror #26]!
    1e68:	023c3f03 	eorseq	r3, ip, #3, 30
    1e6c:	4b4c1471 	blmi	1307038 <startup-0x1ecf8fc8>
    1e70:	594b3e2f 	stmdbpl	fp, {r0, r1, r2, r3, r5, r9, sl, fp, ip, sp}^
    1e74:	60595959 	subsvs	r5, r9, r9, asr r9
    1e78:	91919191 			; <UNDEFINED> instruction: 0x91919191
    1e7c:	90090391 	mulls	r9, r1, r3
    1e80:	3d3d3d3e 	ldccc	13, cr3, [sp, #-248]!	; 0xffffff08
    1e84:	0043023d 	subeq	r0, r3, sp, lsr r2
    1e88:	00f00101 	rscseq	r0, r0, r1, lsl #2
    1e8c:	00020000 	andeq	r0, r2, r0
    1e90:	000000a3 	andeq	r0, r0, r3, lsr #1
    1e94:	0efb0102 	cdpeq	1, 15, cr0, cr11, cr2, {0}
    1e98:	0101000d 	tsteq	r1, sp
    1e9c:	00000101 	andeq	r0, r0, r1, lsl #2
    1ea0:	00000100 	andeq	r0, r0, r0, lsl #2
    1ea4:	2f3a4301 	svccs	0x003a4301
    1ea8:	2f706f6d 	svccs	0x00706f6d
    1eac:	6f4d2f63 	svcvs	0x004d2f63
    1eb0:	62616c70 	rsbvs	r6, r1, #112, 24	; 0x7000
    1eb4:	7461726f 	strbtvc	r7, [r1], #-623	; 0xfffffd91
    1eb8:	656e6f69 	strbvs	r6, [lr, #-3945]!	; 0xfffff097
    1ebc:	49442f72 	stmdbmi	r4, {r1, r4, r5, r6, r8, r9, sl, fp, sp}^
    1ec0:	572d7350 			; <UNDEFINED> instruction: 0x572d7350
    1ec4:	68637469 	stmdavs	r3!, {r0, r3, r5, r6, sl, ip, sp, lr}^
    1ec8:	0000432f 	andeq	r4, r0, pc, lsr #6
    1ecc:	6e6f7473 	mcrvs	4, 3, r7, cr15, cr3, {3}
    1ed0:	00632e65 	rsbeq	r2, r3, r5, ror #28
    1ed4:	73000001 	movwvc	r0, #1
    1ed8:	74697270 	strbtvc	r7, [r9], #-624	; 0xfffffd90
    1edc:	00682e65 	rsbeq	r2, r8, r5, ror #28
    1ee0:	69000001 	stmdbvs	r0, {r0}
    1ee4:	6567616d 	strbvs	r6, [r7, #-365]!	; 0xfffffe93
    1ee8:	0100682e 	tsteq	r0, lr, lsr #16
    1eec:	61670000 	cmnvs	r7, r0
    1ef0:	626f656d 	rsbvs	r6, pc, #457179136	; 0x1b400000
    1ef4:	7463656a 	strbtvc	r6, [r3], #-1386	; 0xfffffa96
    1ef8:	0100682e 	tsteq	r0, lr, lsr #16
    1efc:	74730000 	ldrbtvc	r0, [r3], #-0
    1f00:	5f656e6f 	svcpl	0x00656e6f
    1f04:	63616c62 	cmnvs	r1, #25088	; 0x6200
    1f08:	62782e6b 	rsbsvs	r2, r8, #1712	; 0x6b0
    1f0c:	0001006d 	andeq	r0, r1, sp, rrx
    1f10:	6f747300 	svcvs	0x00747300
    1f14:	675f656e 	ldrbvs	r6, [pc, -lr, ror #10]
    1f18:	2e796172 	mrccs	1, 3, r6, cr9, cr2, {3}
    1f1c:	006d6278 	rsbeq	r6, sp, r8, ror r2
    1f20:	73000001 	movwvc	r0, #1
    1f24:	656e6f74 	strbvs	r6, [lr, #-3956]!	; 0xfffff08c
    1f28:	67696c5f 			; <UNDEFINED> instruction: 0x67696c5f
    1f2c:	782e7468 	stmdavc	lr!, {r3, r5, r6, sl, ip, sp, lr}
    1f30:	01006d62 	tsteq	r0, r2, ror #26
    1f34:	00000000 	andeq	r0, r0, r0
    1f38:	538c0205 	orrpl	r0, ip, #1342177280	; 0x50000000
    1f3c:	16032000 	strne	r2, [r3], -r0
    1f40:	672f3e01 	strvs	r3, [pc, -r1, lsl #28]!
    1f44:	3d672f3d 	stclcc	15, cr2, [r7, #-244]!	; 0xffffff0c
    1f48:	083e672f 	ldmdaeq	lr!, {r0, r1, r2, r3, r5, r8, r9, sl, sp, lr}
    1f4c:	2f4b4c5a 	svccs	0x004b4c5a
    1f50:	3e934c3e 	mrccc	12, 4, r4, cr3, cr14, {1}
    1f54:	3d3d3d3d 	ldccc	13, cr3, [sp, #-244]!	; 0xffffff0c
    1f58:	3d2f1a08 	vstmdbcc	pc!, {s2-s9}
    1f5c:	3d3d3d3d 	ldccc	13, cr3, [sp, #-244]!	; 0xffffff0c
    1f60:	02004bcb 	andeq	r4, r0, #207872	; 0x32c00
    1f64:	4a060104 	bmi	18237c <startup-0x1fe7dc84>
    1f68:	593f5906 	ldmdbpl	pc!, {r1, r2, r8, fp, ip, lr}	; <UNPREDICTABLE>
    1f6c:	7530084b 	ldrvc	r0, [r0, #-2123]!	; 0xfffff7b5
    1f70:	01040200 	mrseq	r0, R12_usr
    1f74:	4b064a06 	blmi	194794 <startup-0x1fe6b86c>
    1f78:	00085b91 	muleq	r8, r1, fp
    1f7c:	Address 0x00001f7c is out of bounds.


Disassembly of section .debug_str:

00000000 <.debug_str>:
       0:	7473616c 	ldrbtvc	r6, [r3], #-364	; 0xfffffe94
       4:	65726946 	ldrbvs	r6, [r2, #-2374]!	; 0xfffff6ba
       8:	67697254 			; <UNDEFINED> instruction: 0x67697254
       c:	00726567 	rsbseq	r6, r2, r7, ror #10
      10:	74736163 	ldrbtvc	r6, [r3], #-355	; 0xfffffe9d
      14:	6c5f656c 	cfldr64vs	mvdx6, [pc], {108}	; 0x6c
      18:	74686769 	strbtvc	r6, [r8], #-1897	; 0xfffff897
      1c:	7469625f 	strbtvc	r6, [r9], #-607	; 0xfffffda1
      20:	69660073 	stmdbvs	r6!, {r0, r1, r4, r5, r6}^
      24:	5f336572 	svcpl	0x00336572
      28:	6f646e69 	svcvs	0x00646e69
      2c:	0073726f 	rsbseq	r7, r3, pc, ror #4
      30:	6867696c 	stmdavs	r7!, {r2, r3, r5, r6, r8, fp, sp, lr}^
      34:	616d4974 	smcvs	54420	; 0xd494
      38:	67006567 	strvs	r6, [r0, -r7, ror #10]
      3c:	49796172 	ldmdbmi	r9!, {r1, r4, r5, r6, r8, sp, lr}^
      40:	6567616d 	strbvs	r6, [r7, #-365]!	; 0xfffffe93
      44:	73616300 	cmnvc	r1, #0, 6
      48:	5f656c74 	svcpl	0x00656c74
      4c:	79617267 	stmdbvc	r1!, {r0, r1, r2, r5, r6, r9, ip, sp, lr}^
      50:	7469625f 	strbtvc	r6, [r9], #-607	; 0xfffffda1
      54:	6c700073 	ldclvs	0, cr0, [r0], #-460	; 0xfffffe34
      58:	72657961 	rsbvc	r7, r5, #1589248	; 0x184000
      5c:	78657400 	stmdavc	r5!, {sl, ip, sp, lr}^
      60:	726b5f74 	rsbvc	r5, fp, #116, 30	; 0x1d0
      64:	72640061 	rsbvc	r0, r4, #97	; 0x61
      68:	6e6f6761 	cdpvs	7, 6, cr6, cr15, cr1, {3}
      6c:	65726944 	ldrbvs	r6, [r2, #-2372]!	; 0xfffff6bc
      70:	6f697463 	svcvs	0x00697463
      74:	6167006e 	cmnvs	r7, lr, rrx
      78:	6f5f656d 	svcvs	0x005f656d
      7c:	00726576 	rsbseq	r6, r2, r6, ror r5
      80:	72665f6e 	rsbvc	r5, r6, #440	; 0x1b8
      84:	73656d61 	cmnvc	r5, #6208	; 0x1840
      88:	73616300 	cmnvc	r1, #0, 6
      8c:	4c656c74 	stclmi	12, cr6, [r5], #-464	; 0xfffffe30
      90:	74686769 	strbtvc	r6, [r8], #-1897	; 0xfffff897
      94:	696f7000 	stmdbvs	pc!, {ip, sp, lr}^	; <UNPREDICTABLE>
      98:	7265746e 	rsbvc	r7, r5, #1845493760	; 0x6e000000
      9c:	74003031 	strvc	r3, [r0], #-49	; 0xffffffcf
      a0:	43706d65 	cmnmi	r0, #6464	; 0x1940
      a4:	6c747361 	ldclvs	3, cr7, [r4], #-388	; 0xfffffe7c
      a8:	616c4265 	cmnvs	ip, r5, ror #4
      ac:	47006b63 	strmi	r6, [r0, -r3, ror #22]
      b0:	4320554e 			; <UNDEFINED> instruction: 0x4320554e
      b4:	36203939 			; <UNDEFINED> instruction: 0x36203939
      b8:	312e332e 			; <UNDEFINED> instruction: 0x312e332e
      bc:	31303220 	teqcc	r0, r0, lsr #4
      c0:	31323037 	teqcc	r2, r7, lsr r0
      c4:	72282035 	eorvc	r2, r8, #53	; 0x35
      c8:	61656c65 	cmnvs	r5, r5, ror #24
      cc:	20296573 	eorcs	r6, r9, r3, ror r5
      d0:	4d52415b 	ldfmie	f4, [r2, #-364]	; 0xfffffe94
      d4:	626d652f 	rsbvs	r6, sp, #197132288	; 0xbc00000
      d8:	65646465 	strbvs	r6, [r4, #-1125]!	; 0xfffffb9b
      dc:	2d362d64 	ldccs	13, cr2, [r6, #-400]!	; 0xfffffe70
      e0:	6e617262 	cdpvs	2, 6, cr7, cr1, cr2, {3}
      e4:	72206863 	eorvc	r6, r0, #6488064	; 0x630000
      e8:	73697665 	cmnvc	r9, #105906176	; 0x6500000
      ec:	206e6f69 	rsbcs	r6, lr, r9, ror #30
      f0:	35353432 	ldrcc	r3, [r5, #-1074]!	; 0xfffffbce
      f4:	205d3231 	subscs	r3, sp, r1, lsr r2
      f8:	68746d2d 	ldmdavs	r4!, {r0, r2, r3, r5, r8, sl, fp, sp, lr}^
      fc:	20626d75 	rsbcs	r6, r2, r5, ror sp
     100:	72616d2d 	rsbvc	r6, r1, #2880	; 0xb40
     104:	613d6863 	teqvs	sp, r3, ror #16
     108:	36766d72 			; <UNDEFINED> instruction: 0x36766d72
     10c:	2d206d2d 	stccs	13, cr6, [r0, #-180]!	; 0xffffff4c
     110:	6f6c666d 	svcvs	0x006c666d
     114:	612d7461 			; <UNDEFINED> instruction: 0x612d7461
     118:	733d6962 	teqvc	sp, #1605632	; 0x188000
     11c:	2074666f 	rsbscs	r6, r4, pc, ror #12
     120:	68746d2d 	ldmdavs	r4!, {r0, r2, r3, r5, r8, sl, fp, sp, lr}^
     124:	20626d75 	rsbcs	r6, r2, r5, ror sp
     128:	72616d2d 	rsbvc	r6, r1, #2880	; 0xb40
     12c:	613d6863 	teqvs	sp, r3, ror #16
     130:	36766d72 			; <UNDEFINED> instruction: 0x36766d72
     134:	2d206d2d 	stccs	13, cr6, [r0, #-180]!	; 0xffffff4c
     138:	4f2d2067 	svcmi	0x002d2067
     13c:	732d2030 			; <UNDEFINED> instruction: 0x732d2030
     140:	633d6474 	teqvs	sp, #116, 8	; 0x74000000
     144:	6d003939 	vstrvs.16	s6, [r0, #-114]	; 0xffffff8e	; <UNPREDICTABLE>
     148:	74736e6f 	ldrbtvc	r6, [r3], #-3695	; 0xfffff191
     14c:	69007265 	stmdbvs	r0, {r0, r2, r5, r6, r9, ip, sp, lr}
     150:	6c635f73 	stclvs	15, cr5, [r3], #-460	; 0xfffffe34
     154:	69626d69 	stmdbvs	r2!, {r0, r3, r5, r6, r8, sl, fp, sp, lr}^
     158:	7000676e 	andvc	r6, r0, lr, ror #14
     15c:	746e696f 	strbtvc	r6, [lr], #-2415	; 0xfffff691
     160:	00377265 	eorseq	r7, r7, r5, ror #4
     164:	74736163 	ldrbtvc	r6, [r3], #-355	; 0xfffffe9d
     168:	624f656c 	subvs	r6, pc, #108, 10	; 0x1b000000
     16c:	7274006a 	rsbsvc	r0, r4, #106	; 0x6a
     170:	7968706f 	stmdbvc	r8!, {r0, r1, r2, r3, r5, r6, ip, sp, lr}^
     174:	7275625f 	rsbsvc	r6, r5, #-268435451	; 0xf0000005
     178:	0064656e 	rsbeq	r6, r4, lr, ror #10
     17c:	73657270 	cmnvc	r5, #112, 4
     180:	6c625f73 	stclvs	15, cr5, [r2], #-460	; 0xfffffe34
     184:	5f6b6361 	svcpl	0x006b6361
     188:	73746962 	cmnvc	r4, #1605632	; 0x188000
     18c:	72696600 	rsbvc	r6, r9, #0, 12
     190:	695f3165 	ldmdbvs	pc, {r0, r2, r5, r6, r8, ip, sp}^	; <UNPREDICTABLE>
     194:	6f6f646e 	svcvs	0x006f646e
     198:	63007372 	movwvs	r7, #882	; 0x372
     19c:	6c747361 	ldclvs	3, cr7, [r4], #-388	; 0xfffffe7c
     1a0:	616d4965 	cmnvs	sp, r5, ror #18
     1a4:	00736567 	rsbseq	r6, r3, r7, ror #10
     1a8:	656d6167 	strbvs	r6, [sp, #-359]!	; 0xfffffe99
     1ac:	65766f5f 	ldrbvs	r6, [r6, #-3935]!	; 0xfffff0a1
     1b0:	64615f72 	strbtvs	r5, [r1], #-3954	; 0xfffff08e
     1b4:	00726564 	rsbseq	r6, r2, r4, ror #10
     1b8:	6c746974 			; <UNDEFINED> instruction: 0x6c746974
     1bc:	616d4965 	cmnvs	sp, r5, ror #18
     1c0:	73006567 	movwvc	r6, #1383	; 0x567
     1c4:	74726174 	ldrbtvc	r6, [r2], #-372	; 0xfffffe8c
     1c8:	74007075 	strvc	r7, [r0], #-117	; 0xffffff8b
     1cc:	31747865 	cmncc	r4, r5, ror #16
     1d0:	6e6f6d00 	cdpvs	13, 6, cr6, cr15, cr0, {0}
     1d4:	72657473 	rsbvc	r7, r5, #1929379840	; 0x73000000
     1d8:	6867694c 	stmdavs	r7!, {r2, r3, r6, r8, fp, sp, lr}^
     1dc:	69740074 	ldmdbvs	r4!, {r2, r4, r5, r6}^
     1e0:	5f656c74 	svcpl	0x00656c74
     1e4:	6867696c 	stmdavs	r7!, {r2, r3, r5, r6, r8, fp, sp, lr}^
     1e8:	69625f74 	stmdbvs	r2!, {r2, r4, r5, r6, r8, r9, sl, fp, ip, lr}^
     1ec:	74007374 	strvc	r7, [r0], #-884	; 0xfffffc8c
     1f0:	4d706d65 	ldclmi	13, cr6, [r0, #-404]!	; 0xfffffe6c
     1f4:	74736e6f 	ldrbtvc	r6, [r3], #-3695	; 0xfffff191
     1f8:	72477265 	subvc	r7, r7, #1342177286	; 0x50000006
     1fc:	74007961 	strvc	r7, [r0], #-2401	; 0xfffff69f
     200:	32747865 	rsbscc	r7, r4, #6619136	; 0x650000
     204:	65727000 	ldrbvs	r7, [r2, #-0]!
     208:	72477373 	subvc	r7, r7, #-872415231	; 0xcc000001
     20c:	74007961 	strvc	r7, [r0], #-2401	; 0xfffff69f
     210:	34747865 	ldrbtcc	r7, [r4], #-2149	; 0xfffff79b
     214:	78657400 	stmdavc	r5!, {sl, ip, sp, lr}^
     218:	64003574 	strvs	r3, [r0], #-1396	; 0xfffffa8c
     21c:	61747369 	cmnvs	r4, r9, ror #6
     220:	5f65636e 	svcpl	0x0065636e
     224:	79616c70 	stmdbvc	r1!, {r4, r5, r6, sl, fp, sp, lr}^
     228:	735f7265 	cmpvc	pc, #1342177286	; 0x50000006
     22c:	656e6f74 	strbvs	r6, [lr, #-3956]!	; 0xfffff08c
     230:	72696600 	rsbvc	r6, r9, #0, 12
     234:	68003165 	stmdavs	r0, {r0, r2, r5, r6, r8, ip, sp}
     238:	635f7361 	cmpvs	pc, #-2080374783	; 0x84000001
     23c:	626d696c 	rsbvs	r6, sp, #108, 18	; 0x1b0000
     240:	74006465 	strvc	r6, [r0], #-1125	; 0xfffffb9b
     244:	42706d65 	rsbsmi	r6, r0, #6464	; 0x1940
     248:	65740067 	ldrbvs	r0, [r4, #-103]!	; 0xffffff99
     24c:	00337478 	eorseq	r7, r3, r8, ror r4
     250:	74786574 	ldrbtvc	r6, [r8], #-1396	; 0xfffffa8c
     254:	69740038 	ldmdbvs	r4!, {r3, r4, r5}^
     258:	5f656c74 	svcpl	0x00656c74
     25c:	63616c62 	cmnvs	r1, #25088	; 0x6200
     260:	69625f6b 	stmdbvs	r2!, {r0, r1, r3, r5, r6, r8, r9, sl, fp, ip, lr}^
     264:	74007374 	strvc	r7, [r0], #-884	; 0xfffffc8c
     268:	4d706d65 	ldclmi	13, cr6, [r0, #-404]!	; 0xfffffe6c
     26c:	74736e6f 	ldrbtvc	r6, [r3], #-3695	; 0xfffff191
     270:	694c7265 	stmdbvs	ip, {r0, r2, r5, r6, r9, ip, sp, lr}^
     274:	00746867 	rsbseq	r6, r4, r7, ror #16
     278:	74786574 	ldrbtvc	r6, [r8], #-1396	; 0xfffffa8c
     27c:	72640037 	rsbvc	r0, r4, #55	; 0x37
     280:	625f7761 	subsvs	r7, pc, #25427968	; 0x1840000
     284:	65666675 	strbvs	r6, [r6, #-1653]!	; 0xfffff98b
     288:	6c625f72 	stclvs	15, cr5, [r2], #-456	; 0xfffffe38
     28c:	006b6361 	rsbeq	r6, fp, r1, ror #6
     290:	74786574 	ldrbtvc	r6, [r8], #-1396	; 0xfffffa8c
     294:	65740036 	ldrbvs	r0, [r4, #-54]!	; 0xffffffca
     298:	00397478 	eorseq	r7, r9, r8, ror r4
     29c:	736e6f6d 	cmnvc	lr, #436	; 0x1b4
     2a0:	50726574 	rsbspl	r6, r2, r4, ror r5
     2a4:	746e696f 	strbtvc	r6, [lr], #-2415	; 0xfffff691
     2a8:	00327265 	eorseq	r7, r2, r5, ror #4
     2ac:	736e6f6d 	cmnvc	lr, #436	; 0x1b4
     2b0:	50726574 	rsbspl	r6, r2, r4, ror r5
     2b4:	746e696f 	strbtvc	r6, [lr], #-2415	; 0xfffff691
     2b8:	00337265 	eorseq	r7, r3, r5, ror #4
     2bc:	32776f72 	rsbscc	r6, r7, #456	; 0x1c8
     2c0:	73696400 	cmnvc	r9, #0, 8
     2c4:	79616c70 	stmdbvc	r1!, {r4, r5, r6, sl, fp, sp, lr}^
     2c8:	6e6f6d00 	cdpvs	13, 6, cr6, cr15, cr0, {0}
     2cc:	72657473 	rsbvc	r7, r5, #1929379840	; 0x73000000
     2d0:	616c625f 	cmnvs	ip, pc, asr r2
     2d4:	625f6b63 	subsvs	r6, pc, #101376	; 0x18c00
     2d8:	00737469 	rsbseq	r7, r3, r9, ror #8
     2dc:	74696e69 	strbtvc	r6, [r9], #-3689	; 0xfffff197
     2e0:	7070615f 	rsbsvc	r6, r0, pc, asr r1
     2e4:	6e6f6c00 	cdpvs	12, 6, cr6, cr15, cr0, {0}
     2e8:	65745f67 	ldrbvs	r5, [r4, #-3943]!	; 0xfffff099
     2ec:	70007478 	andvc	r7, r0, r8, ror r4
     2f0:	73736572 	cmnvc	r3, #478150656	; 0x1c800000
     2f4:	006a624f 	rsbeq	r6, sl, pc, asr #4
     2f8:	65726966 	ldrbvs	r6, [r2, #-2406]!	; 0xfffff69a
     2fc:	6e695f32 	mcrvs	15, 3, r5, cr9, cr2, {1}
     300:	726f6f64 	rsbvc	r6, pc, #100, 30	; 0x190
     304:	72640073 	rsbvc	r0, r4, #115	; 0x73
     308:	625f7761 	subsvs	r7, pc, #25427968	; 0x1840000
     30c:	65666675 	strbvs	r6, [r6, #-1653]!	; 0xfffff98b
     310:	6c625f72 	stclvs	15, cr5, [r2], #-456	; 0xfffffe38
     314:	5f6b6361 	svcpl	0x006b6361
     318:	79617267 	stmdbvc	r1!, {r0, r1, r2, r5, r6, r9, ip, sp, lr}^
     31c:	67696c5f 			; <UNDEFINED> instruction: 0x67696c5f
     320:	69007468 	stmdbvs	r0, {r3, r5, r6, sl, ip, sp, lr}
     324:	5f74696e 	svcpl	0x0074696e
     328:	706f7274 	rsbvc	r7, pc, r4, ror r2	; <UNPREDICTABLE>
     32c:	70007968 	andvc	r7, r0, r8, ror #18
     330:	746e696f 	strbtvc	r6, [lr], #-2415	; 0xfffff691
     334:	00357265 	eorseq	r7, r5, r5, ror #4
     338:	6e696f70 	mcrvs	15, 3, r6, cr9, cr0, {3}
     33c:	36726574 			; <UNDEFINED> instruction: 0x36726574
     340:	73696400 	cmnvc	r9, #0, 8
     344:	636e6174 	cmnvs	lr, #116, 2
     348:	61685f65 	cmnvs	r8, r5, ror #30
     34c:	745f7269 	ldrbvc	r7, [pc], #-617	; 354 <startup-0x1ffffcac>
     350:	68706f72 	ldmdavs	r0!, {r1, r4, r5, r6, r8, r9, sl, fp, sp, lr}^
     354:	6f700079 	svcvs	0x00700079
     358:	65746e69 	ldrbvs	r6, [r4, #-3689]!	; 0xfffff197
     35c:	70003872 	andvc	r3, r0, r2, ror r8
     360:	746e696f 	strbtvc	r6, [lr], #-2415	; 0xfffff691
     364:	00397265 	eorseq	r7, r9, r5, ror #4
     368:	706d6574 	rsbvc	r6, sp, r4, ror r5
     36c:	74736143 	ldrbtvc	r6, [r3], #-323	; 0xfffffebd
     370:	694c656c 	stmdbvs	ip, {r2, r3, r5, r6, r8, sl, sp, lr}^
     374:	00746867 	rsbseq	r6, r4, r7, ror #16
     378:	646e6572 	strbtvs	r6, [lr], #-1394	; 0xfffffa8e
     37c:	64007265 	strvs	r7, [r0], #-613	; 0xfffffd9b
     380:	61747369 	cmnvs	r4, r9, ror #6
     384:	5f65636e 	svcpl	0x0065636e
     388:	72696168 	rsbvc	r6, r9, #104, 2
     38c:	5049445f 	subpl	r4, r9, pc, asr r4
     390:	64697700 	strbtvs	r7, [r9], #-1792	; 0xfffff900
     394:	69006874 	stmdbvs	r0, {r2, r4, r5, r6, fp, sp, lr}
     398:	5f74696e 	svcpl	0x0074696e
     39c:	6d6f6f62 	stclvs	15, cr6, [pc, #-392]!	; 21c <startup-0x1ffffde4>
     3a0:	61726400 	cmnvs	r2, r0, lsl #8
     3a4:	75625f77 	strbvc	r5, [r2, #-3959]!	; 0xfffff089
     3a8:	72656666 	rsbvc	r6, r5, #106954752	; 0x6600000
     3ac:	616c625f 	cmnvs	ip, pc, asr r2
     3b0:	6c5f6b63 	mrrcvs	11, 6, r6, pc, cr3	; <UNPREDICTABLE>
     3b4:	74686769 	strbtvc	r6, [r8], #-1897	; 0xfffff897
     3b8:	6f687300 	svcvs	0x00687300
     3bc:	75207472 	strvc	r7, [r0, #-1138]!	; 0xfffffb8e
     3c0:	6769736e 	strbvs	r7, [r9, -lr, ror #6]!
     3c4:	2064656e 	rsbcs	r6, r4, lr, ror #10
     3c8:	00746e69 	rsbseq	r6, r4, r9, ror #28
     3cc:	616c6564 	cmnvs	ip, r4, ror #10
     3d0:	6e755f79 	mrcvs	15, 3, r5, cr5, cr9, {3}
     3d4:	5f6c6974 	svcpl	0x006c6974
     3d8:	74786574 	ldrbtvc	r6, [r8], #-1396	; 0xfffffa8c
     3dc:	6d657400 	cfstrdvs	mvd7, [r5, #-0]
     3e0:	6e6f4d70 	mcrvs	13, 3, r4, cr15, cr0, {3}
     3e4:	72657473 	rsbvc	r7, r5, #1929379840	; 0x73000000
     3e8:	74697400 	strbtvc	r7, [r9], #-1024	; 0xfffffc00
     3ec:	6c42656c 	cfstr64vs	mvdx6, [r2], {108}	; 0x6c
     3f0:	006b6361 	rsbeq	r6, fp, r1, ror #6
     3f4:	73657270 	cmnvc	r5, #112, 4
     3f8:	72675f73 	rsbvc	r5, r7, #460	; 0x1cc
     3fc:	625f7961 	subsvs	r7, pc, #1589248	; 0x184000
     400:	00737469 	rsbseq	r7, r3, r9, ror #8
     404:	74696e69 	strbtvc	r6, [r9], #-3689	; 0xfffff197
     408:	616c665f 	cmnvs	ip, pc, asr r6
     40c:	6100656d 	tstvs	r0, sp, ror #10
     410:	616d696e 	cmnvs	sp, lr, ror #18
     414:	6e6f6974 			; <UNDEFINED> instruction: 0x6e6f6974
     418:	6570735f 	ldrbvs	r7, [r0, #-863]!	; 0xfffffca1
     41c:	61006465 	tstvs	r0, r5, ror #8
     420:	616d696e 	cmnvs	sp, lr, ror #18
     424:	6e6f6974 			; <UNDEFINED> instruction: 0x6e6f6974
     428:	756f635f 	strbvc	r6, [pc, #-863]!	; d1 <startup-0x1fffff2f>
     42c:	7265746e 	rsbvc	r7, r5, #1845493760	; 0x6e000000
     430:	6e6f6d00 	cdpvs	13, 6, cr6, cr15, cr0, {0}
     434:	72657473 	rsbvc	r7, r5, #1929379840	; 0x73000000
     438:	006a624f 	rsbeq	r6, sl, pc, asr #4
     43c:	657a6973 	ldrbvs	r6, [sl, #-2419]!	; 0xfffff68d
     440:	65707974 	ldrbvs	r7, [r0, #-2420]!	; 0xfffff68c
     444:	74697400 	strbtvc	r7, [r9], #-1024	; 0xfffffc00
     448:	675f656c 	ldrbvs	r6, [pc, -ip, ror #10]
     44c:	5f796172 	svcpl	0x00796172
     450:	73746962 	cmnvc	r4, #1605632	; 0x188000
     454:	69616800 	stmdbvs	r1!, {fp, sp, lr}^
     458:	476e0072 			; <UNDEFINED> instruction: 0x476e0072
     45c:	4f656d61 	svcmi	0x00656d61
     460:	63656a62 	cmnvs	r5, #401408	; 0x62000
     464:	70007374 	andvc	r7, r0, r4, ror r3
     468:	73736572 	cmnvc	r3, #478150656	; 0x1c800000
     46c:	67696c5f 			; <UNDEFINED> instruction: 0x67696c5f
     470:	625f7468 	subsvs	r7, pc, #104, 8	; 0x68000000
     474:	00737469 	rsbseq	r7, r3, r9, ror #8
     478:	7473616c 	ldrbtvc	r6, [r3], #-364	; 0xfffffe94
     47c:	696c635f 	stmdbvs	ip!, {r0, r1, r2, r3, r4, r6, r8, r9, sp, lr}^
     480:	765f626d 	ldrbvc	r6, [pc], -sp, ror #4
     484:	65756c61 	ldrbvs	r6, [r5, #-3169]!	; 0xfffff39f
     488:	78657400 	stmdavc	r5!, {sl, ip, sp, lr}^
     48c:	6e695774 	mcrvs	7, 3, r5, cr9, cr4, {3}
     490:	696f7000 	stmdbvs	pc!, {ip, sp, lr}^	; <UNPREDICTABLE>
     494:	7265746e 	rsbvc	r7, r5, #1845493760	; 0x6e000000
     498:	72700034 	rsbsvc	r0, r0, #52	; 0x34
     49c:	49737365 	ldmdbmi	r3!, {r0, r2, r5, r6, r8, r9, ip, sp, lr}^
     4a0:	6567616d 	strbvs	r6, [r7, #-365]!	; 0xfffffe93
     4a4:	616d6900 	cmnvs	sp, r0, lsl #18
     4a8:	00736567 	rsbseq	r6, r3, r7, ror #10
     4ac:	726f6873 	rsbvc	r6, pc, #7536640	; 0x730000
     4b0:	65745f74 	ldrbvs	r5, [r4, #-3956]!	; 0xfffff08c
     4b4:	63007478 	movwvs	r7, #1144	; 0x478
     4b8:	65727275 	ldrbvs	r7, [r2, #-629]!	; 0xfffffd8b
     4bc:	665f746e 	ldrbvs	r7, [pc], -lr, ror #8
     4c0:	656d6172 	strbvs	r6, [sp, #-370]!	; 0xfffffe8e
     4c4:	74697400 	strbtvc	r7, [r9], #-1024	; 0xfffffc00
     4c8:	694c656c 	stmdbvs	ip, {r2, r3, r5, r6, r8, sl, sp, lr}^
     4cc:	00746867 	rsbseq	r6, r4, r7, ror #16
     4d0:	706d6574 	rsbvc	r6, sp, r4, ror r5
     4d4:	73657250 	cmnvc	r5, #80, 4
     4d8:	61724773 	cmnvs	r2, r3, ror r7
     4dc:	6f6d0079 	svcvs	0x006d0079
     4e0:	6574736e 	ldrbvs	r7, [r4, #-878]!	; 0xfffffc92
     4e4:	696f5072 	stmdbvs	pc!, {r1, r4, r5, r6, ip, lr}^	; <UNPREDICTABLE>
     4e8:	7265746e 	rsbvc	r7, r5, #1845493760	; 0x6e000000
     4ec:	696e6900 	stmdbvs	lr!, {r8, fp, sp, lr}^
     4f0:	72705374 	rsbsvc	r5, r0, #116, 6	; 0xd0000001
     4f4:	73657469 	cmnvc	r5, #1761607680	; 0x69000000
     4f8:	6d657400 	cfstrdvs	mvd7, [r5, #-0]
     4fc:	73614370 	cmnvc	r1, #112, 6	; 0xc0000001
     500:	47656c74 			; <UNDEFINED> instruction: 0x47656c74
     504:	00796172 	rsbseq	r6, r9, r2, ror r1
     508:	706d6574 	rsbvc	r6, sp, r4, ror r5
     50c:	6c746954 			; <UNDEFINED> instruction: 0x6c746954
     510:	616c4265 	cmnvs	ip, r5, ror #4
     514:	75006b63 	strvc	r6, [r0, #-2915]	; 0xfffff49d
     518:	6769736e 	strbvs	r7, [r9, -lr, ror #6]!
     51c:	2064656e 	rsbcs	r6, r4, lr, ror #10
     520:	72616863 	rsbvc	r6, r1, #6488064	; 0x630000
     524:	61726400 	cmnvs	r2, r0, lsl #8
     528:	75625f77 	strbvc	r5, [r2, #-3959]!	; 0xfffff089
     52c:	72656666 	rsbvc	r6, r5, #106954752	; 0x6600000
     530:	616c625f 	cmnvs	ip, pc, asr r2
     534:	675f6b63 	ldrbvs	r6, [pc, -r3, ror #22]
     538:	00796172 	rsbseq	r6, r9, r2, ror r1
     53c:	736e6f6d 	cmnvc	lr, #436	; 0x1b4
     540:	5f726574 	svcpl	0x00726574
     544:	6867696c 	stmdavs	r7!, {r2, r3, r5, r6, r8, fp, sp, lr}^
     548:	69625f74 	stmdbvs	r2!, {r2, r4, r5, r6, r8, r9, sl, fp, ip, lr}^
     54c:	63007374 	movwvs	r7, #884	; 0x374
     550:	6c747361 	ldclvs	3, cr7, [r4], #-388	; 0xfffffe7c
     554:	6c625f65 	stclvs	15, cr5, [r2], #-404	; 0xfffffe6c
     558:	5f6b6361 	svcpl	0x006b6361
     55c:	73746962 	cmnvc	r4, #1605632	; 0x188000
     560:	74697400 	strbtvc	r7, [r9], #-1024	; 0xfffffc00
     564:	624f656c 	subvs	r6, pc, #108, 10	; 0x1b000000
     568:	3a43006a 	bcc	10c0718 <startup-0x1ef3f8e8>
     56c:	706f6d2f 	rsbvc	r6, pc, pc, lsr #26
     570:	4d2f632f 	stcmi	3, cr6, [pc, #-188]!	; 4bc <startup-0x1ffffb44>
     574:	616c706f 	cmnvs	ip, pc, rrx
     578:	61726f62 	cmnvs	r2, r2, ror #30
     57c:	6e6f6974 			; <UNDEFINED> instruction: 0x6e6f6974
     580:	442f7265 	strtmi	r7, [pc], #-613	; 588 <startup-0x1ffffa78>
     584:	2d735049 	ldclcs	0, cr5, [r3, #-292]!	; 0xfffffedc
     588:	63746957 	cmnvs	r4, #1425408	; 0x15c000
     58c:	2f432f68 	svccs	0x00432f68
     590:	72617473 	rsbvc	r7, r1, #1929379840	; 0x73000000
     594:	2e707574 	mrccs	5, 3, r7, cr0, cr4, {3}
     598:	61670063 	cmnvs	r7, r3, rrx
     59c:	624f656d 	subvs	r6, pc, #457179136	; 0x1b400000
     5a0:	7463656a 	strbtvc	r6, [r3], #-1386	; 0xfffffa96
     5a4:	61630073 	smcvs	12291	; 0x3003
     5a8:	656c7473 	strbvs	r7, [ip, #-1139]!	; 0xfffffb8d
     5ac:	79617247 	stmdbvc	r1!, {r0, r1, r2, r6, r9, ip, sp, lr}^
     5b0:	6e6f6d00 	cdpvs	13, 6, cr6, cr15, cr0, {0}
     5b4:	72657473 	rsbvc	r7, r5, #1929379840	; 0x73000000
     5b8:	79617247 	stmdbvc	r1!, {r0, r1, r2, r6, r9, ip, sp, lr}^
     5bc:	74697400 	strbtvc	r7, [r9], #-1024	; 0xfffffc00
     5c0:	7247656c 	subvc	r6, r7, #108, 10	; 0x1b000000
     5c4:	44007961 	strmi	r7, [r0], #-2401	; 0xfffff69f
     5c8:	625f5049 	subsvs	r5, pc, #73	; 0x49
     5cc:	656e7275 	strbvs	r7, [lr, #-629]!	; 0xfffffd8b
     5d0:	75630064 	strbvc	r0, [r3, #-100]!	; 0xffffff9c
     5d4:	6e657272 	mcrvs	2, 3, r7, cr5, cr2, {3}
     5d8:	63735f74 	cmnvs	r3, #116, 30	; 0x1d0
     5dc:	6e656572 	mcrvs	5, 3, r6, cr5, cr2, {3}
     5e0:	73696400 	cmnvc	r9, #0, 8
     5e4:	636e6174 	cmnvs	lr, #116, 2
     5e8:	6c705f65 	ldclvs	15, cr5, [r0], #-404	; 0xfffffe6c
     5ec:	72657961 	rsbvc	r7, r5, #1589248	; 0x184000
     5f0:	7269665f 	rsbvc	r6, r9, #99614720	; 0x5f00000
     5f4:	65740065 	ldrbvs	r0, [r4, #-101]!	; 0xffffff9b
     5f8:	7250706d 	subsvc	r7, r0, #109	; 0x6d
     5fc:	42737365 	rsbsmi	r7, r3, #-1811939327	; 0x94000001
     600:	6b63616c 	blvs	18d8bb8 <startup-0x1e727448>
     604:	5f676200 	svcpl	0x00676200
     608:	73746962 	cmnvc	r4, #1605632	; 0x188000
     60c:	616c6200 	cmnvs	ip, r0, lsl #4
     610:	6d496b63 	vstrvs	d22, [r9, #-396]	; 0xfffffe74
     614:	00656761 	rsbeq	r6, r5, r1, ror #14
     618:	736e6f6d 	cmnvc	lr, #436	; 0x1b4
     61c:	5f726574 	svcpl	0x00726574
     620:	79617267 	stmdbvc	r1!, {r0, r1, r2, r5, r6, r9, ip, sp, lr}^
     624:	7469625f 	strbtvc	r6, [r9], #-607	; 0xfffffda1
     628:	61630073 	smcvs	12291	; 0x3003
     62c:	656c7473 	strbvs	r7, [ip, #-1139]!	; 0xfffffb8d
     630:	67616d49 	strbvs	r6, [r1, -r9, asr #26]!
     634:	69660065 	stmdbvs	r6!, {r0, r2, r5, r6}^
     638:	00747372 	rsbseq	r7, r4, r2, ror r3
     63c:	74696e69 	strbtvc	r6, [r9], #-3689	; 0xfffff197
     640:	6172645f 	cmnvs	r2, pc, asr r4
     644:	006e6f67 	rsbeq	r6, lr, r7, ror #30
     648:	67617264 	strbvs	r7, [r1, -r4, ror #4]!
     64c:	6c416e6f 	mcrrvs	14, 6, r6, r1, cr15
     650:	00657669 	rsbeq	r7, r5, r9, ror #12
     654:	6c746974 			; <UNDEFINED> instruction: 0x6c746974
     658:	616d4965 	cmnvs	sp, r5, ror #18
     65c:	00736567 	rsbseq	r6, r3, r7, ror #10
     660:	646e6172 	strbtvs	r6, [lr], #-370	; 0xfffffe8e
     664:	735f6d6f 	cmpvc	pc, #7104	; 0x1bc0
     668:	00646565 	rsbeq	r6, r4, r5, ror #10
     66c:	65726966 	ldrbvs	r6, [r2, #-2406]!	; 0xfffff69a
     670:	69660032 	stmdbvs	r6!, {r1, r4, r5}^
     674:	00336572 	eorseq	r6, r3, r2, ror r5
     678:	65726966 	ldrbvs	r6, [r2, #-2406]!	; 0xfffff69a
     67c:	72700034 	rsbsvc	r0, r0, #52	; 0x34
     680:	42737365 	rsbsmi	r7, r3, #-1811939327	; 0x94000001
     684:	6b63616c 	blvs	18d8c3c <startup-0x1e7273c4>
     688:	6e6f6d00 	cdpvs	13, 6, cr6, cr15, cr0, {0}
     68c:	72657473 	rsbvc	r7, r5, #1929379840	; 0x73000000
     690:	67616d49 	strbvs	r6, [r1, -r9, asr #26]!
     694:	50790065 	rsbspl	r0, r9, r5, rrx
     698:	6400736f 	strvs	r7, [r0], #-879	; 0xfffffc91
     69c:	6f676172 	svcvs	0x00676172
     6a0:	6174536e 	cmnvs	r4, lr, ror #6
     6a4:	64657472 	strbtvs	r7, [r5], #-1138	; 0xfffffb8e
     6a8:	78657400 	stmdavc	r5!, {sl, ip, sp, lr}^
     6ac:	00323174 	eorseq	r3, r2, r4, ror r1
     6b0:	706d6574 	rsbvc	r6, sp, r4, ror r5
     6b4:	6c746954 			; <UNDEFINED> instruction: 0x6c746954
     6b8:	67694c65 	strbvs	r4, [r9, -r5, ror #24]!
     6bc:	75007468 	strvc	r7, [r0, #-1128]	; 0xfffffb98
     6c0:	74616470 	strbtvc	r6, [r1], #-1136	; 0xfffffb90
     6c4:	6f6e0065 	svcvs	0x006e0065
     6c8:	5049445f 	subpl	r4, r9, pc, asr r4
     6cc:	65727000 	ldrbvs	r7, [r2, #-0]!
     6d0:	6d497373 	stclvs	3, cr7, [r9, #-460]	; 0xfffffe34
     6d4:	73656761 	cmnvc	r5, #25427968	; 0x1840000
     6d8:	70786500 	rsbsvc	r6, r8, r0, lsl #10
     6dc:	69646f6c 	stmdbvs	r4!, {r2, r3, r5, r6, r8, r9, sl, fp, sp, lr}^
     6e0:	7400676e 	strvc	r6, [r0], #-1902	; 0xfffff892
     6e4:	54706d65 	ldrbtpl	r6, [r0], #-3429	; 0xfffff29b
     6e8:	656c7469 	strbvs	r7, [ip, #-1129]!	; 0xfffffb97
     6ec:	79617247 	stmdbvc	r1!, {r0, r1, r2, r6, r9, ip, sp, lr}^
     6f0:	6c537400 	cfldrdvs	mvd7, [r3], {-0}
     6f4:	6554776f 	ldrbvs	r7, [r4, #-1903]	; 0xfffff891
     6f8:	75007478 	strvc	r7, [r0, #-1144]	; 0xfffffb88
     6fc:	38746e69 	ldmdacc	r4!, {r0, r3, r5, r6, r9, sl, fp, sp, lr}^
     700:	6600745f 			; <UNDEFINED> instruction: 0x6600745f
     704:	73657269 	cmnvc	r5, #-1879048186	; 0x90000006
     708:	63616200 	cmnvs	r1, #0, 4
     70c:	6675426b 	ldrbtvs	r4, [r5], -fp, ror #4
     710:	4c726566 	cfldr64mi	mvdx6, [r2], #-408	; 0xfffffe68
     714:	74686769 	strbtvc	r6, [r8], #-1897	; 0xfffff897
     718:	63616200 	cmnvs	r1, #0, 4
     71c:	6675426b 	ldrbtvs	r4, [r5], -fp, ror #4
     720:	47726566 	ldrbmi	r6, [r2, -r6, ror #10]!
     724:	00796172 	rsbseq	r6, r9, r2, ror r1
     728:	706d6574 	rsbvc	r6, sp, r4, ror r5
     72c:	73657250 	cmnvc	r5, #80, 4
     730:	67694c73 			; <UNDEFINED> instruction: 0x67694c73
     734:	74007468 	strvc	r7, [r0], #-1128	; 0xfffffb98
     738:	656d6147 	strbvs	r6, [sp, #-327]!	; 0xfffffeb9
     73c:	656a624f 	strbvs	r6, [sl, #-591]!	; 0xfffffdb1
     740:	78007463 	stmdavc	r0, {r0, r1, r5, r6, sl, ip, sp, lr}
     744:	00736f50 	rsbseq	r6, r3, r0, asr pc
     748:	74736163 	ldrbtvc	r6, [r3], #-355	; 0xfffffe9d
     74c:	6c42656c 	cfstr64vs	mvdx6, [r2], {108}	; 0x6c
     750:	006b6361 	rsbeq	r6, fp, r1, ror #6
     754:	656d6167 	strbvs	r6, [sp, #-359]!	; 0xfffffe99
     758:	65766f5f 	ldrbvs	r6, [r6, #-3935]!	; 0xfffff0a1
     75c:	6f635f72 	svcvs	0x00635f72
     760:	65746e75 	ldrbvs	r6, [r4, #-3701]!	; 0xfffff18b
     764:	65740072 	ldrbvs	r0, [r4, #-114]!	; 0xffffff8e
     768:	30317478 	eorscc	r7, r1, r8, ror r4
     76c:	78657400 	stmdavc	r5!, {sl, ip, sp, lr}^
     770:	00313174 	eorseq	r3, r1, r4, ror r1
     774:	67696568 	strbvs	r6, [r9, -r8, ror #10]!
     778:	74007468 	strvc	r7, [r0], #-1128	; 0xfffffb98
     77c:	47747865 	ldrbmi	r7, [r4, -r5, ror #16]!
     780:	4f656d61 	svcmi	0x00656d61
     784:	00726576 	rsbseq	r6, r2, r6, ror r5
     788:	6e69616d 	powvsez	f6, f1, #5.0
     78c:	65727000 	ldrbvs	r7, [r2, #-0]!
     790:	694c7373 	stmdbvs	ip, {r0, r1, r4, r5, r6, r8, r9, ip, sp, lr}^
     794:	00746867 	rsbseq	r6, r4, r7, ror #16
     798:	736e6f6d 	cmnvc	lr, #436	; 0x1b4
     79c:	49726574 	ldmdbmi	r2!, {r2, r4, r5, r6, r8, sl, sp, lr}^
     7a0:	6567616d 	strbvs	r6, [r7, #-365]!	; 0xfffffe93
     7a4:	61670073 	smcvs	28675	; 0x7003
     7a8:	624f656d 	subvs	r6, pc, #457179136	; 0x1b400000
     7ac:	7463656a 	strbtvc	r6, [r3], #-1386	; 0xfffffa96
     7b0:	61647055 	qdsubvs	r7, r5, r4
     7b4:	43006574 	movwmi	r6, #1396	; 0x574
     7b8:	6f6d2f3a 	svcvs	0x006d2f3a
     7bc:	2f632f70 	svccs	0x00632f70
     7c0:	6c706f4d 	ldclvs	15, cr6, [r0], #-308	; 0xfffffecc
     7c4:	726f6261 	rsbvc	r6, pc, #268435462	; 0x10000006
     7c8:	6f697461 	svcvs	0x00697461
     7cc:	2f72656e 	svccs	0x0072656e
     7d0:	73504944 	cmpvc	r0, #68, 18	; 0x110000
     7d4:	7469572d 	strbtvc	r5, [r9], #-1837	; 0xfffff8d3
     7d8:	432f6863 			; <UNDEFINED> instruction: 0x432f6863
     7dc:	6d61672f 	stclvs	7, cr6, [r1, #-188]!	; 0xffffff44
     7e0:	6a626f65 	bvs	189c57c <startup-0x1e763a84>
     7e4:	2e746365 	cdpcs	3, 7, cr6, cr4, cr5, {3}
     7e8:	68740063 	ldmdavs	r4!, {r0, r1, r5, r6}^
     7ec:	66007369 	strvs	r7, [r0], -r9, ror #6
     7f0:	35657269 	strbcc	r7, [r5, #-617]!	; 0xfffffd97
     7f4:	79617247 	stmdbvc	r1!, {r0, r1, r2, r6, r9, ip, sp, lr}^
     7f8:	72696600 	rsbvc	r6, r9, #0, 12
     7fc:	72473165 	subvc	r3, r7, #1073741849	; 0x40000019
     800:	74007961 	strvc	r7, [r0], #-2401	; 0xfffff69f
     804:	46706d65 	ldrbtmi	r6, [r0], -r5, ror #26
     808:	32657269 	rsbcc	r7, r5, #-1879048186	; 0x90000006
     80c:	79617247 	stmdbvc	r1!, {r0, r1, r2, r6, r9, ip, sp, lr}^
     810:	72696600 	rsbvc	r6, r9, #0, 12
     814:	72473365 	subvc	r3, r7, #-1811939327	; 0x94000001
     818:	74007961 	strvc	r7, [r0], #-2401	; 0xfffff69f
     81c:	46706d65 	ldrbtmi	r6, [r0], -r5, ror #26
     820:	34657269 	strbtcc	r7, [r5], #-617	; 0xfffffd97
     824:	79617247 	stmdbvc	r1!, {r0, r1, r2, r6, r9, ip, sp, lr}^
     828:	72696600 	rsbvc	r6, r9, #0, 12
     82c:	616c4265 	cmnvs	ip, r5, ror #4
     830:	74006b63 	strvc	r6, [r0], #-2915	; 0xfffff49d
     834:	46706d65 	ldrbtmi	r6, [r0], -r5, ror #26
     838:	33657269 	cmncc	r5, #-1879048186	; 0x90000006
     83c:	79617247 	stmdbvc	r1!, {r0, r1, r2, r6, r9, ip, sp, lr}^
     840:	6d657400 	cfstrdvs	mvd7, [r5, #-0]
     844:	72694670 	rsbvc	r4, r9, #112, 12	; 0x7000000
     848:	616c4265 	cmnvs	ip, r5, ror #4
     84c:	66006b63 	strvs	r6, [r0], -r3, ror #22
     850:	31657269 	cmncc	r5, r9, ror #4
     854:	6867694c 	stmdavs	r7!, {r2, r3, r6, r8, fp, sp, lr}^
     858:	69660074 	stmdbvs	r6!, {r2, r4, r5, r6}^
     85c:	4c346572 	cfldr32mi	mvfx6, [r4], #-456	; 0xfffffe38
     860:	74686769 	strbtvc	r6, [r8], #-1897	; 0xfffff897
     864:	72696600 	rsbvc	r6, r9, #0, 12
     868:	675f3265 	ldrbvs	r3, [pc, -r5, ror #4]
     86c:	5f796172 	svcpl	0x00796172
     870:	73746962 	cmnvc	r4, #1605632	; 0x188000
     874:	72696600 	rsbvc	r6, r9, #0, 12
     878:	6c5f3465 	cfldrdvs	mvd3, [pc], {101}	; 0x65
     87c:	74686769 	strbtvc	r6, [r8], #-1897	; 0xfffff897
     880:	7469625f 	strbtvc	r6, [r9], #-607	; 0xfffffda1
     884:	69660073 	stmdbvs	r6!, {r0, r1, r4, r5, r6}^
     888:	4c336572 	cfldr32mi	mvfx6, [r3], #-456	; 0xfffffe38
     88c:	74686769 	strbtvc	r6, [r8], #-1897	; 0xfffff897
     890:	696f7000 	stmdbvs	pc!, {ip, sp, lr}^	; <UNPREDICTABLE>
     894:	7265746e 	rsbvc	r7, r5, #1845493760	; 0x6e000000
     898:	6f700031 	svcvs	0x00700031
     89c:	65746e69 	ldrbvs	r6, [r4, #-3689]!	; 0xfffff197
     8a0:	66003372 			; <UNDEFINED> instruction: 0x66003372
     8a4:	35657269 	strbcc	r7, [r5, #-617]!	; 0xfffffd97
     8a8:	6172675f 	cmnvs	r2, pc, asr r7
     8ac:	69625f79 	stmdbvs	r2!, {r0, r3, r4, r5, r6, r8, r9, sl, fp, ip, lr}^
     8b0:	66007374 			; <UNDEFINED> instruction: 0x66007374
     8b4:	33657269 	cmncc	r5, #-1879048186	; 0x90000006
     8b8:	67616d49 	strbvs	r6, [r1, -r9, asr #26]!
     8bc:	6f700065 	svcvs	0x00700065
     8c0:	65746e69 	ldrbvs	r6, [r4, #-3689]!	; 0xfffff197
     8c4:	66003072 			; <UNDEFINED> instruction: 0x66003072
     8c8:	35657269 	strbcc	r7, [r5, #-617]!	; 0xfffffd97
     8cc:	6867694c 	stmdavs	r7!, {r2, r3, r6, r8, fp, sp, lr}^
     8d0:	6f700074 	svcvs	0x00700074
     8d4:	65746e69 	ldrbvs	r6, [r4, #-3689]!	; 0xfffff197
     8d8:	74003272 	strvc	r3, [r0], #-626	; 0xfffffd8e
     8dc:	46706d65 	ldrbtmi	r6, [r0], -r5, ror #26
     8e0:	35657269 	strbcc	r7, [r5, #-617]!	; 0xfffffd97
     8e4:	79617247 	stmdbvc	r1!, {r0, r1, r2, r6, r9, ip, sp, lr}^
     8e8:	72696600 	rsbvc	r6, r9, #0, 12
     8ec:	675f3165 	ldrbvs	r3, [pc, -r5, ror #2]
     8f0:	5f796172 	svcpl	0x00796172
     8f4:	73746962 	cmnvc	r4, #1605632	; 0x188000
     8f8:	72696600 	rsbvc	r6, r9, #0, 12
     8fc:	694c3265 	stmdbvs	ip, {r0, r2, r5, r6, r9, ip, sp}^
     900:	00746867 	rsbseq	r6, r4, r7, ror #16
     904:	65726966 	ldrbvs	r6, [r2, #-2406]!	; 0xfffff69a
     908:	696c5f31 	stmdbvs	ip!, {r0, r4, r5, r8, r9, sl, fp, ip, lr}^
     90c:	5f746867 	svcpl	0x00746867
     910:	73746962 	cmnvc	r4, #1605632	; 0x188000
     914:	72696600 	rsbvc	r6, r9, #0, 12
     918:	6c5f3265 	lfmvs	f3, 2, [pc], {101}	; 0x65
     91c:	74686769 	strbtvc	r6, [r8], #-1897	; 0xfffff897
     920:	7469625f 	strbtvc	r6, [r9], #-607	; 0xfffffda1
     924:	69660073 	stmdbvs	r6!, {r0, r1, r4, r5, r6}^
     928:	624f6572 	subvs	r6, pc, #478150656	; 0x1c800000
     92c:	6966006a 	stmdbvs	r6!, {r1, r3, r5, r6}^
     930:	47326572 			; <UNDEFINED> instruction: 0x47326572
     934:	00796172 	rsbseq	r6, r9, r2, ror r1
     938:	65726966 	ldrbvs	r6, [r2, #-2406]!	; 0xfffff69a
     93c:	72675f34 	rsbvc	r5, r7, #52, 30	; 0xd0
     940:	625f7961 	subsvs	r7, pc, #1589248	; 0x184000
     944:	00737469 	rsbseq	r7, r3, r9, ror #8
     948:	706d6574 	rsbvc	r6, sp, r4, ror r5
     94c:	65726946 	ldrbvs	r6, [r2, #-2374]!	; 0xfffff6ba
     950:	67694c33 			; <UNDEFINED> instruction: 0x67694c33
     954:	66007468 	strvs	r7, [r0], -r8, ror #8
     958:	34657269 	strbtcc	r7, [r5], #-617	; 0xfffffd97
     95c:	67616d49 	strbvs	r6, [r1, -r9, asr #26]!
     960:	65740065 	ldrbvs	r0, [r4, #-101]!	; 0xffffff9b
     964:	6946706d 	stmdbvs	r6, {r0, r2, r3, r5, r6, ip, sp, lr}^
     968:	4c316572 	cfldr32mi	mvfx6, [r1], #-456	; 0xfffffe38
     96c:	74686769 	strbtvc	r6, [r8], #-1897	; 0xfffff897
     970:	72696600 	rsbvc	r6, r9, #0, 12
     974:	69547473 	ldmdbvs	r4, {r0, r1, r4, r5, r6, sl, ip, sp, lr}^
     978:	6900656d 	stmdbvs	r0, {r0, r2, r3, r5, r6, r8, sl, sp, lr}
     97c:	5f74696e 	svcpl	0x0074696e
     980:	65726966 	ldrbvs	r6, [r2, #-2406]!	; 0xfffff69a
     984:	72696600 	rsbvc	r6, r9, #0, 12
     988:	6c5f3565 	cfldr64vs	mvdx3, [pc], {101}	; 0x65
     98c:	74686769 	strbtvc	r6, [r8], #-1897	; 0xfffff897
     990:	7469625f 	strbtvc	r6, [r9], #-607	; 0xfffffda1
     994:	69660073 	stmdbvs	r6!, {r0, r1, r4, r5, r6}^
     998:	6d496572 	cfstr64vs	mvdx6, [r9, #-456]	; 0xfffffe38
     99c:	73656761 	cmnvc	r5, #25427968	; 0x1840000
     9a0:	72696600 	rsbvc	r6, r9, #0, 12
     9a4:	6d493165 	stfvse	f3, [r9, #-404]	; 0xfffffe6c
     9a8:	00656761 	rsbeq	r6, r5, r1, ror #14
     9ac:	65726966 	ldrbvs	r6, [r2, #-2406]!	; 0xfffff69a
     9b0:	61724734 	cmnvs	r2, r4, lsr r7
     9b4:	65740079 	ldrbvs	r0, [r4, #-121]!	; 0xffffff87
     9b8:	6946706d 	stmdbvs	r6, {r0, r2, r3, r5, r6, ip, sp, lr}^
     9bc:	47316572 			; <UNDEFINED> instruction: 0x47316572
     9c0:	00796172 	rsbseq	r6, r9, r2, ror r1
     9c4:	706d6574 	rsbvc	r6, sp, r4, ror r5
     9c8:	65726946 	ldrbvs	r6, [r2, #-2374]!	; 0xfffff6ba
     9cc:	67694c34 			; <UNDEFINED> instruction: 0x67694c34
     9d0:	66007468 	strvs	r7, [r0], -r8, ror #8
     9d4:	33657269 	cmncc	r5, #-1879048186	; 0x90000006
     9d8:	67696c5f 			; <UNDEFINED> instruction: 0x67696c5f
     9dc:	625f7468 	subsvs	r7, pc, #104, 8	; 0x68000000
     9e0:	00737469 	rsbseq	r7, r3, r9, ror #8
     9e4:	65726966 	ldrbvs	r6, [r2, #-2406]!	; 0xfffff69a
     9e8:	616d4935 	cmnvs	sp, r5, lsr r9
     9ec:	66006567 	strvs	r6, [r0], -r7, ror #10
     9f0:	5f657269 	svcpl	0x00657269
     9f4:	63616c62 	cmnvs	r1, #25088	; 0x6200
     9f8:	5f325f6b 	svcpl	0x00325f6b
     9fc:	73746962 	cmnvc	r4, #1605632	; 0x188000
     a00:	6d657400 	cfstrdvs	mvd7, [r5, #-0]
     a04:	72694670 	rsbvc	r4, r9, #112, 12	; 0x7000000
     a08:	694c3265 	stmdbvs	ip, {r0, r2, r5, r6, r9, ip, sp}^
     a0c:	00746867 	rsbseq	r6, r4, r7, ror #16
     a10:	65726966 	ldrbvs	r6, [r2, #-2406]!	; 0xfffff69a
     a14:	616d4932 	cmnvs	sp, r2, lsr r9
     a18:	74006567 	strvc	r6, [r0], #-1383	; 0xfffffa99
     a1c:	46706d65 	ldrbtmi	r6, [r0], -r5, ror #26
     a20:	35657269 	strbcc	r7, [r5, #-617]!	; 0xfffffd97
     a24:	6867694c 	stmdavs	r7!, {r2, r3, r6, r8, fp, sp, lr}^
     a28:	3a430074 	bcc	10c0c00 <startup-0x1ef3f400>
     a2c:	706f6d2f 	rsbvc	r6, pc, pc, lsr #26
     a30:	4d2f632f 	stcmi	3, cr6, [pc, #-188]!	; 97c <startup-0x1ffff684>
     a34:	616c706f 	cmnvs	ip, pc, rrx
     a38:	61726f62 	cmnvs	r2, r2, ror #30
     a3c:	6e6f6974 			; <UNDEFINED> instruction: 0x6e6f6974
     a40:	442f7265 	strtmi	r7, [pc], #-613	; a48 <startup-0x1ffff5b8>
     a44:	2d735049 	ldclcs	0, cr5, [r3, #-292]!	; 0xfffffedc
     a48:	63746957 	cmnvs	r4, #1425408	; 0x15c000
     a4c:	2f432f68 	svccs	0x00432f68
     a50:	65726966 	ldrbvs	r6, [r2, #-2406]!	; 0xfffff69a
     a54:	6600632e 	strvs	r6, [r0], -lr, lsr #6
     a58:	33657269 	cmncc	r5, #-1879048186	; 0x90000006
     a5c:	6172675f 	cmnvs	r2, pc, asr r7
     a60:	69625f79 	stmdbvs	r2!, {r0, r3, r4, r5, r6, r8, r9, sl, fp, ip, lr}^
     a64:	6c007374 	stcvs	3, cr7, [r0], {116}	; 0x74
     a68:	52747361 	rsbspl	r7, r4, #-2080374783	; 0x84000001
     a6c:	74686769 	strbtvc	r6, [r8], #-1897	; 0xfffff897
     a70:	756c6156 	strbvc	r6, [ip, #-342]!	; 0xfffffeaa
     a74:	616c0065 	cmnvs	ip, r5, rrx
     a78:	754a7473 	strbvc	r7, [sl, #-1139]	; 0xfffffb8d
     a7c:	6156706d 	cmpvs	r6, sp, rrx
     a80:	0065756c 	rsbeq	r7, r5, ip, ror #10
     a84:	65705379 	ldrbvs	r5, [r0, #-889]!	; 0xfffffc87
     a88:	78006465 	stmdavc	r0, {r0, r2, r5, r6, sl, sp, lr}
     a8c:	65657053 	strbvs	r7, [r5, #-83]!	; 0xffffffad
     a90:	616c0064 	cmnvs	ip, r4, rrx
     a94:	654c7473 	strbvs	r7, [ip, #-1139]	; 0xfffffb8d
     a98:	61567466 	cmpvs	r6, r6, ror #8
     a9c:	0065756c 	rsbeq	r7, r5, ip, ror #10
     aa0:	6d2f3a43 	vstmdbvs	pc!, {s6-s72}
     aa4:	632f706f 			; <UNDEFINED> instruction: 0x632f706f
     aa8:	706f4d2f 	rsbvc	r4, pc, pc, lsr #26
     aac:	6f62616c 	svcvs	0x0062616c
     ab0:	69746172 	ldmdbvs	r4!, {r1, r4, r5, r6, r8, sp, lr}^
     ab4:	72656e6f 	rsbvc	r6, r5, #1776	; 0x6f0
     ab8:	5049442f 	subpl	r4, r9, pc, lsr #8
     abc:	69572d73 	ldmdbvs	r7, {r0, r1, r4, r5, r6, r8, sl, fp, sp}^
     ac0:	2f686374 	svccs	0x00686374
     ac4:	6c702f43 	ldclvs	15, cr2, [r0], #-268	; 0xfffffef4
     ac8:	72657961 	rsbvc	r7, r5, #1589248	; 0x184000
     acc:	7000632e 	andvc	r6, r0, lr, lsr #6
     ad0:	6579616c 	ldrbvs	r6, [r9, #-364]!	; 0xfffffe94
     ad4:	73655272 	cmnvc	r5, #536870919	; 0x20000007
     ad8:	70007465 	andvc	r7, r0, r5, ror #8
     adc:	6579616c 	ldrbvs	r6, [r9, #-364]!	; 0xfffffe94
     ae0:	64705572 	ldrbtvs	r5, [r0], #-1394	; 0xfffffa8e
     ae4:	00657461 	rsbeq	r7, r5, r1, ror #8
     ae8:	706d6574 	rsbvc	r6, sp, r4, ror r5
     aec:	64726942 	ldrbtvs	r6, [r2], #-2370	; 0xfffff6be
     af0:	67694c32 			; <UNDEFINED> instruction: 0x67694c32
     af4:	62007468 	andvs	r7, r0, #104, 8	; 0x68000000
     af8:	33647269 	cmncc	r4, #-1879048186	; 0x90000006
     afc:	67696c5f 			; <UNDEFINED> instruction: 0x67696c5f
     b00:	625f7468 	subsvs	r7, pc, #104, 8	; 0x68000000
     b04:	00737469 	rsbseq	r7, r3, r9, ror #8
     b08:	64726962 	ldrbtvs	r6, [r2], #-2402	; 0xfffff69e
     b0c:	616d4934 	cmnvs	sp, r4, lsr r9
     b10:	62006567 	andvs	r6, r0, #432013312	; 0x19c00000
     b14:	34647269 	strbtcc	r7, [r4], #-617	; 0xfffffd97
     b18:	67696c5f 			; <UNDEFINED> instruction: 0x67696c5f
     b1c:	625f7468 	subsvs	r7, pc, #104, 8	; 0x68000000
     b20:	00737469 	rsbseq	r7, r3, r9, ror #8
     b24:	706d6574 	rsbvc	r6, sp, r4, ror r5
     b28:	64726942 	ldrbtvs	r6, [r2], #-2370	; 0xfffff6be
     b2c:	67694c35 			; <UNDEFINED> instruction: 0x67694c35
     b30:	70007468 	andvc	r7, r0, r8, ror #8
     b34:	746e696f 	strbtvc	r6, [lr], #-2415	; 0xfffff691
     b38:	34317265 	ldrtcc	r7, [r1], #-613	; 0xfffffd9b
     b3c:	72696200 	rsbvc	r6, r9, #0, 4
     b40:	6c5f3564 	cfldr64vs	mvdx3, [pc], {100}	; 0x64
     b44:	74686769 	strbtvc	r6, [r8], #-1897	; 0xfffff897
     b48:	7469625f 	strbtvc	r6, [r9], #-607	; 0xfffffda1
     b4c:	69620073 	stmdbvs	r2!, {r0, r1, r4, r5, r6}^
     b50:	4c336472 	cfldrsmi	mvf6, [r3], #-456	; 0xfffffe38
     b54:	74686769 	strbtvc	r6, [r8], #-1897	; 0xfffff897
     b58:	696f7000 	stmdbvs	pc!, {ip, sp, lr}^	; <UNPREDICTABLE>
     b5c:	7265746e 	rsbvc	r7, r5, #1845493760	; 0x6e000000
     b60:	62003931 	andvs	r3, r0, #802816	; 0xc4000
     b64:	31647269 	cmncc	r4, r9, ror #4
     b68:	6867694c 	stmdavs	r7!, {r2, r3, r6, r8, fp, sp, lr}^
     b6c:	69620074 	stmdbvs	r2!, {r2, r4, r5, r6}^
     b70:	42336472 	eorsmi	r6, r3, #1912602624	; 0x72000000
     b74:	6b63616c 	blvs	18d912c <startup-0x1e726ed4>
     b78:	72696200 	rsbvc	r6, r9, #0, 4
     b7c:	72473164 	subvc	r3, r7, #100, 2
     b80:	74007961 	strvc	r7, [r0], #-2401	; 0xfffff69f
     b84:	42706d65 	rsbsmi	r6, r0, #6464	; 0x1940
     b88:	34647269 	strbtcc	r7, [r4], #-617	; 0xfffffd97
     b8c:	63616c42 	cmnvs	r1, #16896	; 0x4200
     b90:	6962006b 	stmdbvs	r2!, {r0, r1, r3, r5, r6}^
     b94:	42356472 	eorsmi	r6, r5, #1912602624	; 0x72000000
     b98:	6b63616c 	blvs	18d9150 <startup-0x1e726eb0>
     b9c:	696f7000 	stmdbvs	pc!, {ip, sp, lr}^	; <UNPREDICTABLE>
     ba0:	7265746e 	rsbvc	r7, r5, #1845493760	; 0x6e000000
     ba4:	70003032 	andvc	r3, r0, r2, lsr r0
     ba8:	746e696f 	strbtvc	r6, [lr], #-2415	; 0xfffff691
     bac:	31327265 	teqcc	r2, r5, ror #4
     bb0:	72696200 	rsbvc	r6, r9, #0, 4
     bb4:	72473464 	subvc	r3, r7, #100, 8	; 0x64000000
     bb8:	62007961 	andvs	r7, r0, #1589248	; 0x184000
     bbc:	32647269 	rsbcc	r7, r4, #-1879048186	; 0x90000006
     bc0:	63616c42 	cmnvs	r1, #16896	; 0x4200
     bc4:	6f70006b 	svcvs	0x0070006b
     bc8:	65746e69 	ldrbvs	r6, [r4, #-3689]!	; 0xfffff197
     bcc:	00343272 	eorseq	r3, r4, r2, ror r2
     bd0:	6e696f70 	mcrvs	15, 3, r6, cr9, cr0, {3}
     bd4:	31726574 	cmncc	r2, r4, ror r5
     bd8:	65740036 	ldrbvs	r0, [r4, #-54]!	; 0xffffffca
     bdc:	6942706d 	stmdbvs	r2, {r0, r2, r3, r5, r6, ip, sp, lr}^
     be0:	47326472 			; <UNDEFINED> instruction: 0x47326472
     be4:	00796172 	rsbseq	r6, r9, r2, ror r1
     be8:	706d6574 	rsbvc	r6, sp, r4, ror r5
     bec:	64726942 	ldrbtvs	r6, [r2], #-2370	; 0xfffff6be
     bf0:	61724734 	cmnvs	r2, r4, lsr r7
     bf4:	65740079 	ldrbvs	r0, [r4, #-121]!	; 0xffffff87
     bf8:	6942706d 	stmdbvs	r2, {r0, r2, r3, r5, r6, ip, sp, lr}^
     bfc:	694c6472 	stmdbvs	ip, {r1, r4, r5, r6, sl, sp, lr}^
     c00:	00746867 	rsbseq	r6, r4, r7, ror #16
     c04:	706d6574 	rsbvc	r6, sp, r4, ror r5
     c08:	64726942 	ldrbtvs	r6, [r2], #-2370	; 0xfffff6be
     c0c:	61724735 	cmnvs	r2, r5, lsr r7
     c10:	6f700079 	svcvs	0x00700079
     c14:	65746e69 	ldrbvs	r6, [r4, #-3689]!	; 0xfffff197
     c18:	00333172 	eorseq	r3, r3, r2, ror r1
     c1c:	64726962 	ldrbtvs	r6, [r2], #-2402	; 0xfffff69e
     c20:	6c625f32 	stclvs	15, cr5, [r2], #-200	; 0xffffff38
     c24:	5f6b6361 	svcpl	0x006b6361
     c28:	73746962 	cmnvc	r4, #1605632	; 0x188000
     c2c:	72696200 	rsbvc	r6, r9, #0, 4
     c30:	675f3164 	ldrbvs	r3, [pc, -r4, ror #2]
     c34:	5f796172 	svcpl	0x00796172
     c38:	73746962 	cmnvc	r4, #1605632	; 0x188000
     c3c:	72696200 	rsbvc	r6, r9, #0, 4
     c40:	6d493664 	stclvs	6, cr3, [r9, #-400]	; 0xfffffe70
     c44:	00656761 	rsbeq	r6, r5, r1, ror #14
     c48:	64726962 	ldrbtvs	r6, [r2], #-2402	; 0xfffff69e
     c4c:	6c625f33 	stclvs	15, cr5, [r2], #-204	; 0xffffff34
     c50:	5f6b6361 	svcpl	0x006b6361
     c54:	73746962 	cmnvc	r4, #1605632	; 0x188000
     c58:	72696200 	rsbvc	r6, r9, #0, 4
     c5c:	625f3464 	subsvs	r3, pc, #100, 8	; 0x64000000
     c60:	6b63616c 	blvs	18d9218 <startup-0x1e726de8>
     c64:	7469625f 	strbtvc	r6, [r9], #-607	; 0xfffffda1
     c68:	69620073 	stmdbvs	r2!, {r0, r1, r4, r5, r6}^
     c6c:	49336472 	ldmdbmi	r3!, {r1, r4, r5, r6, sl, sp, lr}
     c70:	6567616d 	strbvs	r6, [r7, #-365]!	; 0xfffffe93
     c74:	72696200 	rsbvc	r6, r9, #0, 4
     c78:	6c5f3164 	ldfvse	f3, [pc], {100}	; 0x64
     c7c:	74686769 	strbtvc	r6, [r8], #-1897	; 0xfffff897
     c80:	7469625f 	strbtvc	r6, [r9], #-607	; 0xfffffda1
     c84:	69620073 	stmdbvs	r2!, {r0, r1, r4, r5, r6}^
     c88:	5f356472 	svcpl	0x00356472
     c8c:	63616c62 	cmnvs	r1, #25088	; 0x6200
     c90:	69625f6b 	stmdbvs	r2!, {r0, r1, r3, r5, r6, r8, r9, sl, fp, ip, lr}^
     c94:	74007374 	strvc	r7, [r0], #-884	; 0xfffffc8c
     c98:	42706d65 	rsbsmi	r6, r0, #6464	; 0x1940
     c9c:	33647269 	cmncc	r4, #-1879048186	; 0x90000006
     ca0:	6867694c 	stmdavs	r7!, {r2, r3, r6, r8, fp, sp, lr}^
     ca4:	69620074 	stmdbvs	r2!, {r2, r4, r5, r6}^
     ca8:	5f356472 	svcpl	0x00356472
     cac:	79617267 	stmdbvc	r1!, {r0, r1, r2, r5, r6, r9, ip, sp, lr}^
     cb0:	7469625f 	strbtvc	r6, [r9], #-607	; 0xfffffda1
     cb4:	69620073 	stmdbvs	r2!, {r0, r1, r4, r5, r6}^
     cb8:	47326472 			; <UNDEFINED> instruction: 0x47326472
     cbc:	00796172 	rsbseq	r6, r9, r2, ror r1
     cc0:	706d6574 	rsbvc	r6, sp, r4, ror r5
     cc4:	64726942 	ldrbtvs	r6, [r2], #-2370	; 0xfffff6be
     cc8:	67694c34 			; <UNDEFINED> instruction: 0x67694c34
     ccc:	74007468 	strvc	r7, [r0], #-1128	; 0xfffffb98
     cd0:	42706d65 	rsbsmi	r6, r0, #6464	; 0x1940
     cd4:	33647269 	cmncc	r4, #-1879048186	; 0x90000006
     cd8:	79617247 	stmdbvc	r1!, {r0, r1, r2, r6, r9, ip, sp, lr}^
     cdc:	72696200 	rsbvc	r6, r9, #0, 4
     ce0:	675f3464 	ldrbvs	r3, [pc, -r4, ror #8]
     ce4:	5f796172 	svcpl	0x00796172
     ce8:	73746962 	cmnvc	r4, #1605632	; 0x188000
     cec:	696f7000 	stmdbvs	pc!, {ip, sp, lr}^	; <UNPREDICTABLE>
     cf0:	7265746e 	rsbvc	r7, r5, #1845493760	; 0x6e000000
     cf4:	62003332 	andvs	r3, r0, #-939524096	; 0xc8000000
     cf8:	35647269 	strbcc	r7, [r4, #-617]!	; 0xfffffd97
     cfc:	6867694c 	stmdavs	r7!, {r2, r3, r6, r8, fp, sp, lr}^
     d00:	69620074 	stmdbvs	r2!, {r2, r4, r5, r6}^
     d04:	6d496472 	cfstrdvs	mvd6, [r9, #-456]	; 0xfffffe38
     d08:	73656761 	cmnvc	r5, #25427968	; 0x1840000
     d0c:	6d657400 	cfstrdvs	mvd7, [r5, #-0]
     d10:	72694270 	rsbvc	r4, r9, #112, 4
     d14:	6c423564 	cfstr64vs	mvdx3, [r2], {100}	; 0x64
     d18:	006b6361 	rsbeq	r6, fp, r1, ror #6
     d1c:	64726962 	ldrbtvs	r6, [r2], #-2402	; 0xfffff69e
     d20:	616c4234 	cmnvs	ip, r4, lsr r2
     d24:	74006b63 	strvc	r6, [r0], #-2915	; 0xfffff49d
     d28:	42706d65 	rsbsmi	r6, r0, #6464	; 0x1940
     d2c:	32647269 	rsbcc	r7, r4, #-1879048186	; 0x90000006
     d30:	63616c42 	cmnvs	r1, #16896	; 0x4200
     d34:	6962006b 	stmdbvs	r2!, {r0, r1, r3, r5, r6}^
     d38:	5f336472 	svcpl	0x00336472
     d3c:	79617267 	stmdbvc	r1!, {r0, r1, r2, r5, r6, r9, ip, sp, lr}^
     d40:	7469625f 	strbtvc	r6, [r9], #-607	; 0xfffffda1
     d44:	69620073 	stmdbvs	r2!, {r0, r1, r4, r5, r6}^
     d48:	42316472 	eorsmi	r6, r1, #1912602624	; 0x72000000
     d4c:	6b63616c 	blvs	18d9304 <startup-0x1e726cfc>
     d50:	72696200 	rsbvc	r6, r9, #0, 4
     d54:	694c3264 	stmdbvs	ip, {r2, r5, r6, r9, ip, sp}^
     d58:	00746867 	rsbseq	r6, r4, r7, ror #16
     d5c:	6d2f3a43 	vstmdbvs	pc!, {s6-s72}
     d60:	632f706f 			; <UNDEFINED> instruction: 0x632f706f
     d64:	706f4d2f 	rsbvc	r4, pc, pc, lsr #26
     d68:	6f62616c 	svcvs	0x0062616c
     d6c:	69746172 	ldmdbvs	r4!, {r1, r4, r5, r6, r8, sp, lr}^
     d70:	72656e6f 	rsbvc	r6, r5, #1776	; 0x6f0
     d74:	5049442f 	subpl	r4, r9, pc, lsr #8
     d78:	69572d73 	ldmdbvs	r7, {r0, r1, r4, r5, r6, r8, sl, fp, sp}^
     d7c:	2f686374 	svccs	0x00686374
     d80:	69622f43 	stmdbvs	r2!, {r0, r1, r6, r8, r9, sl, fp, sp}^
     d84:	632e6472 			; <UNDEFINED> instruction: 0x632e6472
     d88:	696e6900 	stmdbvs	lr!, {r8, fp, sp, lr}^
     d8c:	69625f74 	stmdbvs	r2!, {r2, r4, r5, r6, r8, r9, sl, fp, ip, lr}^
     d90:	62006472 	andvs	r6, r0, #1912602624	; 0x72000000
     d94:	4f647269 	svcmi	0x00647269
     d98:	62006a62 	andvs	r6, r0, #401408	; 0x62000
     d9c:	32647269 	rsbcc	r7, r4, #-1879048186	; 0x90000006
     da0:	6172675f 	cmnvs	r2, pc, asr r7
     da4:	69625f79 	stmdbvs	r2!, {r0, r3, r4, r5, r6, r8, r9, sl, fp, ip, lr}^
     da8:	74007374 	strvc	r7, [r0], #-884	; 0xfffffc8c
     dac:	42706d65 	rsbsmi	r6, r0, #6464	; 0x1940
     db0:	47647269 	strbmi	r7, [r4, -r9, ror #4]!
     db4:	00796172 	rsbseq	r6, r9, r2, ror r1
     db8:	64726962 	ldrbtvs	r6, [r2], #-2402	; 0xfffff69e
     dbc:	61724735 	cmnvs	r2, r5, lsr r7
     dc0:	69620079 	stmdbvs	r2!, {r0, r3, r4, r5, r6}^
     dc4:	5f316472 	svcpl	0x00316472
     dc8:	63616c62 	cmnvs	r1, #25088	; 0x6200
     dcc:	69625f6b 	stmdbvs	r2!, {r0, r1, r3, r5, r6, r8, r9, sl, fp, ip, lr}^
     dd0:	62007374 	andvs	r7, r0, #116, 6	; 0xd0000001
     dd4:	31647269 	cmncc	r4, r9, ror #4
     dd8:	67616d49 	strbvs	r6, [r1, -r9, asr #26]!
     ddc:	69620065 	stmdbvs	r2!, {r0, r2, r5, r6}^
     de0:	47336472 			; <UNDEFINED> instruction: 0x47336472
     de4:	00796172 	rsbseq	r6, r9, r2, ror r1
     de8:	616e6966 	cmnvs	lr, r6, ror #18
     dec:	696f506c 	stmdbvs	pc!, {r2, r3, r5, r6, ip, lr}^	; <UNPREDICTABLE>
     df0:	7265746e 	rsbvc	r7, r5, #1845493760	; 0x6e000000
     df4:	6d657400 	cfstrdvs	mvd7, [r5, #-0]
     df8:	72694270 	rsbvc	r4, r9, #112, 4
     dfc:	616c4264 	cmnvs	ip, r4, ror #4
     e00:	74006b63 	strvc	r6, [r0], #-2915	; 0xfffff49d
     e04:	42706d65 	rsbsmi	r6, r0, #6464	; 0x1940
     e08:	33647269 	cmncc	r4, #-1879048186	; 0x90000006
     e0c:	63616c42 	cmnvs	r1, #16896	; 0x4200
     e10:	6f70006b 	svcvs	0x0070006b
     e14:	65746e69 	ldrbvs	r6, [r4, #-3689]!	; 0xfffff197
     e18:	00313172 	eorseq	r3, r1, r2, ror r1
     e1c:	6e696f70 	mcrvs	15, 3, r6, cr9, cr0, {3}
     e20:	31726574 	cmncc	r2, r4, ror r5
     e24:	69620032 	stmdbvs	r2!, {r1, r4, r5}^
     e28:	4c346472 	cfldrsmi	mvf6, [r4], #-456	; 0xfffffe38
     e2c:	74686769 	strbtvc	r6, [r8], #-1897	; 0xfffff897
     e30:	72696200 	rsbvc	r6, r9, #0, 4
     e34:	6d493564 	cfstr64vs	mvdx3, [r9, #-400]	; 0xfffffe70
     e38:	00656761 	rsbeq	r6, r5, r1, ror #14
     e3c:	6e696f70 	mcrvs	15, 3, r6, cr9, cr0, {3}
     e40:	31726574 	cmncc	r2, r4, ror r5
     e44:	6f700035 	svcvs	0x00700035
     e48:	65746e69 	ldrbvs	r6, [r4, #-3689]!	; 0xfffff197
     e4c:	00373172 	eorseq	r3, r7, r2, ror r1
     e50:	6e696f70 	mcrvs	15, 3, r6, cr9, cr0, {3}
     e54:	31726574 	cmncc	r2, r4, ror r5
     e58:	69620038 	stmdbvs	r2!, {r3, r4, r5}^
     e5c:	49326472 	ldmdbmi	r2!, {r1, r4, r5, r6, sl, sp, lr}
     e60:	6567616d 	strbvs	r6, [r7, #-365]!	; 0xfffffe93
     e64:	696f7000 	stmdbvs	pc!, {ip, sp, lr}^	; <UNPREDICTABLE>
     e68:	7265746e 	rsbvc	r7, r5, #1845493760	; 0x6e000000
     e6c:	62003232 	andvs	r3, r0, #536870915	; 0x20000003
     e70:	32647269 	rsbcc	r7, r4, #-1879048186	; 0x90000006
     e74:	67696c5f 			; <UNDEFINED> instruction: 0x67696c5f
     e78:	625f7468 	subsvs	r7, pc, #104, 8	; 0x68000000
     e7c:	00737469 	rsbseq	r7, r3, r9, ror #8
     e80:	706d6574 	rsbvc	r6, sp, r4, ror r5
     e84:	63746957 	cmnvs	r4, #1425408	; 0x15c000
     e88:	67694c68 	strbvs	r4, [r9, -r8, ror #24]!
     e8c:	74007468 	strvc	r7, [r0], #-1128	; 0xfffffb98
     e90:	57706d65 	ldrbpl	r6, [r0, -r5, ror #26]!
     e94:	68637469 	stmdavs	r3!, {r0, r3, r5, r6, sl, ip, sp, lr}^
     e98:	67694c33 			; <UNDEFINED> instruction: 0x67694c33
     e9c:	74007468 	strvc	r7, [r0], #-1128	; 0xfffffb98
     ea0:	57706d65 	ldrbpl	r6, [r0, -r5, ror #26]!
     ea4:	68637469 	stmdavs	r3!, {r0, r3, r5, r6, sl, ip, sp, lr}^
     ea8:	67694c32 			; <UNDEFINED> instruction: 0x67694c32
     eac:	74007468 	strvc	r7, [r0], #-1128	; 0xfffffb98
     eb0:	57706d65 	ldrbpl	r6, [r0, -r5, ror #26]!
     eb4:	68637469 	stmdavs	r3!, {r0, r3, r5, r6, sl, ip, sp, lr}^
     eb8:	616c4232 	cmnvs	ip, r2, lsr r2
     ebc:	69006b63 	stmdbvs	r0, {r0, r1, r5, r6, r8, r9, fp, sp, lr}
     ec0:	5f74696e 	svcpl	0x0074696e
     ec4:	63746977 	cmnvs	r4, #1949696	; 0x1dc000
     ec8:	65740068 	ldrbvs	r0, [r4, #-104]!	; 0xffffff98
     ecc:	6957706d 	ldmdbvs	r7, {r0, r2, r3, r5, r6, ip, sp, lr}^
     ed0:	42686374 	rsbmi	r6, r8, #116, 6	; 0xd0000001
     ed4:	6b63616c 	blvs	18d948c <startup-0x1e726b74>
     ed8:	6d657400 	cfstrdvs	mvd7, [r5, #-0]
     edc:	74695770 	strbtvc	r5, [r9], #-1904	; 0xfffff890
     ee0:	72476863 	subvc	r6, r7, #6488064	; 0x630000
     ee4:	74007961 	strvc	r7, [r0], #-2401	; 0xfffff69f
     ee8:	57706d65 	ldrbpl	r6, [r0, -r5, ror #26]!
     eec:	68637469 	stmdavs	r3!, {r0, r3, r5, r6, sl, ip, sp, lr}^
     ef0:	61724732 	cmnvs	r2, r2, lsr r7
     ef4:	65740079 	ldrbvs	r0, [r4, #-121]!	; 0xffffff87
     ef8:	6957706d 	ldmdbvs	r7, {r0, r2, r3, r5, r6, ip, sp, lr}^
     efc:	33686374 	cmncc	r8, #116, 6	; 0xd0000001
     f00:	63616c42 	cmnvs	r1, #16896	; 0x4200
     f04:	6574006b 	ldrbvs	r0, [r4, #-107]!	; 0xffffff95
     f08:	6957706d 	ldmdbvs	r7, {r0, r2, r3, r5, r6, ip, sp, lr}^
     f0c:	33686374 	cmncc	r8, #116, 6	; 0xd0000001
     f10:	79617247 	stmdbvc	r1!, {r0, r1, r2, r6, r9, ip, sp, lr}^
     f14:	2f3a4300 	svccs	0x003a4300
     f18:	2f706f6d 	svccs	0x00706f6d
     f1c:	6f4d2f63 	svcvs	0x004d2f63
     f20:	62616c70 	rsbvs	r6, r1, #112, 24	; 0x7000
     f24:	7461726f 	strbtvc	r7, [r1], #-623	; 0xfffffd91
     f28:	656e6f69 	strbvs	r6, [lr, #-3945]!	; 0xfffff097
     f2c:	49442f72 	stmdbmi	r4, {r1, r4, r5, r6, r8, r9, sl, fp, sp}^
     f30:	572d7350 			; <UNDEFINED> instruction: 0x572d7350
     f34:	68637469 	stmdavs	r3!, {r0, r3, r5, r6, sl, ip, sp, lr}^
     f38:	772f432f 	strvc	r4, [pc, -pc, lsr #6]!
     f3c:	68637469 	stmdavs	r3!, {r0, r3, r5, r6, sl, ip, sp, lr}^
     f40:	6400632e 	strvs	r6, [r0], #-814	; 0xfffffcd2
     f44:	63657269 	cmnvs	r5, #-1879048186	; 0x90000006
     f48:	6e6f6974 			; <UNDEFINED> instruction: 0x6e6f6974
     f4c:	50494400 	subpl	r4, r9, r0, lsl #8
     f50:	616d4934 	cmnvs	sp, r4, lsr r9
     f54:	44006567 	strmi	r6, [r0], #-1383	; 0xfffffa99
     f58:	49315049 	ldmdbmi	r1!, {r0, r3, r6, ip, lr}
     f5c:	6567616d 	strbvs	r6, [r7, #-365]!	; 0xfffffe93
     f60:	6d657400 	cfstrdvs	mvd7, [r5, #-0]
     f64:	50494470 	subpl	r4, r9, r0, ror r4
     f68:	67694c32 			; <UNDEFINED> instruction: 0x67694c32
     f6c:	72007468 	andvc	r7, r0, #104, 8	; 0x68000000
     f70:	74657365 	strbtvc	r7, [r5], #-869	; 0xfffffc9b
     f74:	00504944 	subseq	r4, r0, r4, asr #18
     f78:	75527369 	ldrbvc	r7, [r2, #-873]	; 0xfffffc97
     f7c:	6e696e6e 	cdpvs	14, 6, cr6, cr9, cr14, {3}
     f80:	65740067 	ldrbvs	r0, [r4, #-103]!	; 0xffffff99
     f84:	4944706d 	stmdbmi	r4, {r0, r2, r3, r5, r6, ip, sp, lr}^
     f88:	6c423350 	mcrrvs	3, 5, r3, r2, cr0
     f8c:	006b6361 	rsbeq	r6, fp, r1, ror #6
     f90:	706d6574 	rsbvc	r6, sp, r4, ror r5
     f94:	32504944 	subscc	r4, r0, #68, 18	; 0x110000
     f98:	79617247 	stmdbvc	r1!, {r0, r1, r2, r6, r9, ip, sp, lr}^
     f9c:	50494400 	subpl	r4, r9, r0, lsl #8
     fa0:	61724731 	cmnvs	r2, r1, lsr r7
     fa4:	65740079 	ldrbvs	r0, [r4, #-121]!	; 0xffffff87
     fa8:	4944706d 	stmdbmi	r4, {r0, r2, r3, r5, r6, ip, sp, lr}^
     fac:	67694c50 			; <UNDEFINED> instruction: 0x67694c50
     fb0:	44007468 	strmi	r7, [r0], #-1128	; 0xfffffb98
     fb4:	6d495049 	stclvs	0, cr5, [r9, #-292]	; 0xfffffedc
     fb8:	73656761 	cmnvc	r5, #25427968	; 0x1840000
     fbc:	696e6900 	stmdbvs	lr!, {r8, fp, sp, lr}^
     fc0:	49445f74 	stmdbmi	r4, {r2, r4, r5, r6, r8, r9, sl, fp, ip, lr}^
     fc4:	65740050 	ldrbvs	r0, [r4, #-80]!	; 0xffffffb0
     fc8:	4944706d 	stmdbmi	r4, {r0, r2, r3, r5, r6, ip, sp, lr}^
     fcc:	61724750 	cmnvs	r2, r0, asr r7
     fd0:	49440079 	stmdbmi	r4, {r0, r3, r4, r5, r6}^
     fd4:	6c423150 	stfvse	f3, [r2], {80}	; 0x50
     fd8:	006b6361 	rsbeq	r6, fp, r1, ror #6
     fdc:	79616c70 	stmdbvc	r1!, {r4, r5, r6, sl, fp, sp, lr}^
     fe0:	6f507265 	svcvs	0x00507265
     fe4:	69746973 	ldmdbvs	r4!, {r0, r1, r4, r5, r6, r8, fp, sp, lr}^
     fe8:	00596e6f 	subseq	r6, r9, pc, ror #28
     fec:	706d6574 	rsbvc	r6, sp, r4, ror r5
     ff0:	33504944 	cmpcc	r0, #68, 18	; 0x110000
     ff4:	79617247 	stmdbvc	r1!, {r0, r1, r2, r6, r9, ip, sp, lr}^
     ff8:	50494400 	subpl	r4, r9, r0, lsl #8
     ffc:	616d4933 	cmnvs	sp, r3, lsr r9
    1000:	74006567 	strvc	r6, [r0], #-1383	; 0xfffffa99
    1004:	44706d65 	ldrbtmi	r6, [r0], #-3429	; 0xfffff29b
    1008:	4c335049 	ldcmi	0, cr5, [r3], #-292	; 0xfffffedc
    100c:	74686769 	strbtvc	r6, [r8], #-1897	; 0xfffff897
    1010:	50494400 	subpl	r4, r9, r0, lsl #8
    1014:	61647055 	qdsubvs	r7, r5, r4
    1018:	74006574 	strvc	r6, [r0], #-1396	; 0xfffffa8c
    101c:	44706d65 	ldrbtmi	r6, [r0], #-3429	; 0xfffff29b
    1020:	42325049 	eorsmi	r5, r2, #73	; 0x49
    1024:	6b63616c 	blvs	18d95dc <startup-0x1e726a24>
    1028:	50494400 	subpl	r4, r9, r0, lsl #8
    102c:	616d4932 	cmnvs	sp, r2, lsr r9
    1030:	43006567 	movwmi	r6, #1383	; 0x567
    1034:	6f6d2f3a 	svcvs	0x006d2f3a
    1038:	2f632f70 	svccs	0x00632f70
    103c:	6c706f4d 	ldclvs	15, cr6, [r0], #-308	; 0xfffffecc
    1040:	726f6261 	rsbvc	r6, pc, #268435462	; 0x10000006
    1044:	6f697461 	svcvs	0x00697461
    1048:	2f72656e 	svccs	0x0072656e
    104c:	73504944 	cmpvc	r0, #68, 18	; 0x110000
    1050:	7469572d 	strbtvc	r5, [r9], #-1837	; 0xfffff8d3
    1054:	432f6863 			; <UNDEFINED> instruction: 0x432f6863
    1058:	5049442f 	subpl	r4, r9, pc, lsr #8
    105c:	4400632e 	strmi	r6, [r0], #-814	; 0xfffffcd2
    1060:	4c315049 	ldcmi	0, cr5, [r1], #-292	; 0xfffffedc
    1064:	74686769 	strbtvc	r6, [r8], #-1897	; 0xfffff897
    1068:	50494400 	subpl	r4, r9, r0, lsl #8
    106c:	006a624f 	rsbeq	r6, sl, pc, asr #4
    1070:	706d6574 	rsbvc	r6, sp, r4, ror r5
    1074:	42504944 	subsmi	r4, r0, #68, 18	; 0x110000
    1078:	6b63616c 	blvs	18d9630 <startup-0x1e7269d0>
    107c:	616c7000 	cmnvs	ip, r0
    1080:	50726579 	rsbspl	r6, r2, r9, ror r5
    1084:	7469736f 	strbtvc	r7, [r9], #-879	; 0xfffffc91
    1088:	586e6f69 	stmdapl	lr!, {r0, r3, r5, r6, r8, r9, sl, fp, sp, lr}^
    108c:	74657300 	strbtvc	r7, [r5], #-768	; 0xfffffd00
    1090:	79616c50 	stmdbvc	r1!, {r4, r6, sl, fp, sp, lr}^
    1094:	6f507265 	svcvs	0x00507265
    1098:	69746973 	ldmdbvs	r4!, {r0, r1, r4, r5, r6, r8, fp, sp, lr}^
    109c:	66006e6f 	strvs	r6, [r0], -pc, ror #28
    10a0:	656d616c 	strbvs	r6, [sp, #-364]!	; 0xfffffe94
    10a4:	72675f31 	rsbvc	r5, r7, #49, 30	; 0xc4
    10a8:	625f7961 	subsvs	r7, pc, #1589248	; 0x184000
    10ac:	00737469 	rsbseq	r7, r3, r9, ror #8
    10b0:	6d616c66 	stclvs	12, cr6, [r1, #-408]!	; 0xfffffe68
    10b4:	6c423165 	stfvse	f3, [r2], {101}	; 0x65
    10b8:	006b6361 	rsbeq	r6, fp, r1, ror #6
    10bc:	6d616c66 	stclvs	12, cr6, [r1, #-408]!	; 0xfffffe68
    10c0:	675f3265 	ldrbvs	r3, [pc, -r5, ror #4]
    10c4:	5f796172 	svcpl	0x00796172
    10c8:	73746962 	cmnvc	r4, #1605632	; 0x188000
    10cc:	6d657400 	cfstrdvs	mvd7, [r5, #-0]
    10d0:	616c4670 	smcvs	50272	; 0xc460
    10d4:	694c656d 	stmdbvs	ip, {r0, r2, r3, r5, r6, r8, sl, sp, lr}^
    10d8:	00746867 	rsbseq	r6, r4, r7, ror #16
    10dc:	6d616c66 	stclvs	12, cr6, [r1, #-408]!	; 0xfffffe68
    10e0:	6c5f3265 	lfmvs	f3, 2, [pc], {101}	; 0x65
    10e4:	74686769 	strbtvc	r6, [r8], #-1897	; 0xfffff897
    10e8:	7469625f 	strbtvc	r6, [r9], #-607	; 0xfffffda1
    10ec:	6c660073 	stclvs	0, cr0, [r6], #-460	; 0xfffffe34
    10f0:	33656d61 	cmncc	r5, #6208	; 0x1840
    10f4:	6867694c 	stmdavs	r7!, {r2, r3, r6, r8, fp, sp, lr}^
    10f8:	6c660074 	stclvs	0, cr0, [r6], #-464	; 0xfffffe30
    10fc:	32656d61 	rsbcc	r6, r5, #6208	; 0x1840
    1100:	63616c42 	cmnvs	r1, #16896	; 0x4200
    1104:	6574006b 	ldrbvs	r0, [r4, #-107]!	; 0xffffff95
    1108:	6c46706d 	mcrrvs	0, 6, r7, r6, cr13
    110c:	32656d61 	rsbcc	r6, r5, #6208	; 0x1840
    1110:	63616c42 	cmnvs	r1, #16896	; 0x4200
    1114:	6574006b 	ldrbvs	r0, [r4, #-107]!	; 0xffffff95
    1118:	6c46706d 	mcrrvs	0, 6, r7, r6, cr13
    111c:	32656d61 	rsbcc	r6, r5, #6208	; 0x1840
    1120:	6867694c 	stmdavs	r7!, {r2, r3, r6, r8, fp, sp, lr}^
    1124:	6c660074 	stclvs	0, cr0, [r6], #-464	; 0xfffffe30
    1128:	33656d61 	cmncc	r5, #6208	; 0x1840
    112c:	67696c5f 			; <UNDEFINED> instruction: 0x67696c5f
    1130:	625f7468 	subsvs	r7, pc, #104, 8	; 0x68000000
    1134:	00737469 	rsbseq	r7, r3, r9, ror #8
    1138:	6d616c66 	stclvs	12, cr6, [r1, #-408]!	; 0xfffffe68
    113c:	6a624f65 	bvs	1894ed8 <startup-0x1e76b128>
    1140:	6d657400 	cfstrdvs	mvd7, [r5, #-0]
    1144:	616c4670 	smcvs	50272	; 0xc460
    1148:	4732656d 	ldrmi	r6, [r2, -sp, ror #10]!
    114c:	00796172 	rsbseq	r6, r9, r2, ror r1
    1150:	6d616c66 	stclvs	12, cr6, [r1, #-408]!	; 0xfffffe68
    1154:	6d493465 	cfstrdvs	mvd3, [r9, #-404]	; 0xfffffe6c
    1158:	00656761 	rsbeq	r6, r5, r1, ror #14
    115c:	6d616c66 	stclvs	12, cr6, [r1, #-408]!	; 0xfffffe68
    1160:	6c5f3165 	ldfvse	f3, [pc], {101}	; 0x65
    1164:	74686769 	strbtvc	r6, [r8], #-1897	; 0xfffff897
    1168:	7469625f 	strbtvc	r6, [r9], #-607	; 0xfffffda1
    116c:	6c660073 	stclvs	0, cr0, [r6], #-460	; 0xfffffe34
    1170:	31656d61 	cmncc	r5, r1, ror #26
    1174:	67616d49 	strbvs	r6, [r1, -r9, asr #26]!
    1178:	6c660065 	stclvs	0, cr0, [r6], #-404	; 0xfffffe6c
    117c:	33656d61 	cmncc	r5, #6208	; 0x1840
    1180:	63616c42 	cmnvs	r1, #16896	; 0x4200
    1184:	6574006b 	ldrbvs	r0, [r4, #-107]!	; 0xffffff95
    1188:	6c46706d 	mcrrvs	0, 6, r7, r6, cr13
    118c:	33656d61 	cmncc	r5, #6208	; 0x1840
    1190:	6867694c 	stmdavs	r7!, {r2, r3, r6, r8, fp, sp, lr}^
    1194:	6c660074 	stclvs	0, cr0, [r6], #-464	; 0xfffffe30
    1198:	33656d61 	cmncc	r5, #6208	; 0x1840
    119c:	79617247 	stmdbvc	r1!, {r0, r1, r2, r6, r9, ip, sp, lr}^
    11a0:	6d657400 	cfstrdvs	mvd7, [r5, #-0]
    11a4:	616c4670 	smcvs	50272	; 0xc460
    11a8:	4234656d 	eorsmi	r6, r4, #457179136	; 0x1b400000
    11ac:	6b63616c 	blvs	18d9764 <startup-0x1e72689c>
    11b0:	6d657400 	cfstrdvs	mvd7, [r5, #-0]
    11b4:	616c4670 	smcvs	50272	; 0xc460
    11b8:	4c34656d 	cfldr32mi	mvfx6, [r4], #-436	; 0xfffffe4c
    11bc:	74686769 	strbtvc	r6, [r8], #-1897	; 0xfffff897
    11c0:	616c6600 	cmnvs	ip, r0, lsl #12
    11c4:	4933656d 	ldmdbmi	r3!, {r0, r2, r3, r5, r6, r8, sl, sp, lr}
    11c8:	6567616d 	strbvs	r6, [r7, #-365]!	; 0xfffffe93
    11cc:	616c6600 	cmnvs	ip, r0, lsl #12
    11d0:	5f33656d 	svcpl	0x0033656d
    11d4:	63616c62 	cmnvs	r1, #25088	; 0x6200
    11d8:	69625f6b 	stmdbvs	r2!, {r0, r1, r3, r5, r6, r8, r9, sl, fp, ip, lr}^
    11dc:	66007374 			; <UNDEFINED> instruction: 0x66007374
    11e0:	656d616c 	strbvs	r6, [sp, #-364]!	; 0xfffffe94
    11e4:	696c5f34 	stmdbvs	ip!, {r2, r4, r5, r8, r9, sl, fp, ip, lr}^
    11e8:	5f746867 	svcpl	0x00746867
    11ec:	73746962 	cmnvc	r4, #1605632	; 0x188000
    11f0:	616c6600 	cmnvs	ip, r0, lsl #12
    11f4:	5f33656d 	svcpl	0x0033656d
    11f8:	79617267 	stmdbvc	r1!, {r0, r1, r2, r5, r6, r9, ip, sp, lr}^
    11fc:	7469625f 	strbtvc	r6, [r9], #-607	; 0xfffffda1
    1200:	65740073 	ldrbvs	r0, [r4, #-115]!	; 0xffffff8d
    1204:	6c46706d 	mcrrvs	0, 6, r7, r6, cr13
    1208:	34656d61 	strbtcc	r6, [r5], #-3425	; 0xfffff29f
    120c:	79617247 	stmdbvc	r1!, {r0, r1, r2, r6, r9, ip, sp, lr}^
    1210:	616c6600 	cmnvs	ip, r0, lsl #12
    1214:	4932656d 	ldmdbmi	r2!, {r0, r2, r3, r5, r6, r8, sl, sp, lr}
    1218:	6567616d 	strbvs	r6, [r7, #-365]!	; 0xfffffe93
    121c:	616c6600 	cmnvs	ip, r0, lsl #12
    1220:	4731656d 	ldrmi	r6, [r1, -sp, ror #10]!
    1224:	00796172 	rsbseq	r6, r9, r2, ror r1
    1228:	6d616c66 	stclvs	12, cr6, [r1, #-408]!	; 0xfffffe68
    122c:	625f3265 	subsvs	r3, pc, #1342177286	; 0x50000006
    1230:	6b63616c 	blvs	18d97e8 <startup-0x1e726818>
    1234:	7469625f 	strbtvc	r6, [r9], #-607	; 0xfffffda1
    1238:	65740073 	ldrbvs	r0, [r4, #-115]!	; 0xffffff8d
    123c:	6c46706d 	mcrrvs	0, 6, r7, r6, cr13
    1240:	42656d61 	rsbmi	r6, r5, #6208	; 0x1840
    1244:	6b63616c 	blvs	18d97fc <startup-0x1e726804>
    1248:	616c6600 	cmnvs	ip, r0, lsl #12
    124c:	5f34656d 	svcpl	0x0034656d
    1250:	63616c62 	cmnvs	r1, #25088	; 0x6200
    1254:	69625f6b 	stmdbvs	r2!, {r0, r1, r3, r5, r6, r8, r9, sl, fp, ip, lr}^
    1258:	66007374 			; <UNDEFINED> instruction: 0x66007374
    125c:	656d616c 	strbvs	r6, [sp, #-364]!	; 0xfffffe94
    1260:	61724734 	cmnvs	r2, r4, lsr r7
    1264:	6c660079 	stclvs	0, cr0, [r6], #-484	; 0xfffffe1c
    1268:	31656d61 	cmncc	r5, r1, ror #26
    126c:	616c625f 	cmnvs	ip, pc, asr r2
    1270:	625f6b63 	subsvs	r6, pc, #101376	; 0x18c00
    1274:	00737469 	rsbseq	r7, r3, r9, ror #8
    1278:	6d616c66 	stclvs	12, cr6, [r1, #-408]!	; 0xfffffe68
    127c:	694c3165 	stmdbvs	ip, {r0, r2, r5, r6, r8, ip, sp}^
    1280:	00746867 	rsbseq	r6, r4, r7, ror #16
    1284:	6d616c66 	stclvs	12, cr6, [r1, #-408]!	; 0xfffffe68
    1288:	675f3465 	ldrbvs	r3, [pc, -r5, ror #8]
    128c:	5f796172 	svcpl	0x00796172
    1290:	73746962 	cmnvc	r4, #1605632	; 0x188000
    1294:	616c6600 	cmnvs	ip, r0, lsl #12
    1298:	4c34656d 	cfldr32mi	mvfx6, [r4], #-436	; 0xfffffe4c
    129c:	74686769 	strbtvc	r6, [r8], #-1897	; 0xfffff897
    12a0:	6d657400 	cfstrdvs	mvd7, [r5, #-0]
    12a4:	616c4670 	smcvs	50272	; 0xc460
    12a8:	4733656d 	ldrmi	r6, [r3, -sp, ror #10]!
    12ac:	00796172 	rsbseq	r6, r9, r2, ror r1
    12b0:	6d616c66 	stclvs	12, cr6, [r1, #-408]!	; 0xfffffe68
    12b4:	616d4965 	cmnvs	sp, r5, ror #18
    12b8:	00736567 	rsbseq	r6, r3, r7, ror #10
    12bc:	706d6574 	rsbvc	r6, sp, r4, ror r5
    12c0:	6d616c46 	stclvs	12, cr6, [r1, #-280]!	; 0xfffffee8
    12c4:	6c423365 	mcrrvs	3, 6, r3, r2, cr5
    12c8:	006b6361 	rsbeq	r6, fp, r1, ror #6
    12cc:	6d616c66 	stclvs	12, cr6, [r1, #-408]!	; 0xfffffe68
    12d0:	72473265 	subvc	r3, r7, #1342177286	; 0x50000006
    12d4:	43007961 	movwmi	r7, #2401	; 0x961
    12d8:	6f6d2f3a 	svcvs	0x006d2f3a
    12dc:	2f632f70 	svccs	0x00632f70
    12e0:	6c706f4d 	ldclvs	15, cr6, [r0], #-308	; 0xfffffecc
    12e4:	726f6261 	rsbvc	r6, pc, #268435462	; 0x10000006
    12e8:	6f697461 	svcvs	0x00697461
    12ec:	2f72656e 	svccs	0x0072656e
    12f0:	73504944 	cmpvc	r0, #68, 18	; 0x110000
    12f4:	7469572d 	strbtvc	r5, [r9], #-1837	; 0xfffff8d3
    12f8:	432f6863 			; <UNDEFINED> instruction: 0x432f6863
    12fc:	616c662f 	cmnvs	ip, pc, lsr #12
    1300:	632e656d 			; <UNDEFINED> instruction: 0x632e656d
    1304:	6d657400 	cfstrdvs	mvd7, [r5, #-0]
    1308:	616c4670 	smcvs	50272	; 0xc460
    130c:	7247656d 	subvc	r6, r7, #457179136	; 0x1b400000
    1310:	66007961 	strvs	r7, [r0], -r1, ror #18
    1314:	656d616c 	strbvs	r6, [sp, #-364]!	; 0xfffffe94
    1318:	616c4234 	cmnvs	ip, r4, lsr r2
    131c:	66006b63 	strvs	r6, [r0], -r3, ror #22
    1320:	656d616c 	strbvs	r6, [sp, #-364]!	; 0xfffffe94
    1324:	67694c32 			; <UNDEFINED> instruction: 0x67694c32
    1328:	62007468 	andvs	r7, r0, #104, 8	; 0x68000000
    132c:	386d6f6f 	stmdacc	sp!, {r0, r1, r2, r3, r5, r6, r8, r9, sl, fp, sp, lr}^
    1330:	67616d49 	strbvs	r6, [r1, -r9, asr #26]!
    1334:	6f620065 	svcvs	0x00620065
    1338:	49316d6f 	ldmdbmi	r1!, {r0, r1, r2, r3, r5, r6, r8, sl, fp, sp, lr}
    133c:	6567616d 	strbvs	r6, [r7, #-365]!	; 0xfffffe93
    1340:	6f6f6200 	svcvs	0x006f6200
    1344:	6d49396d 	vstrvs.16	s7, [r9, #-218]	; 0xffffff26	; <UNPREDICTABLE>
    1348:	00656761 	rsbeq	r6, r5, r1, ror #14
    134c:	6d6f6f62 	stclvs	15, cr6, [pc, #-392]!	; 11cc <startup-0x1fffee34>
    1350:	616d4935 	cmnvs	sp, r5, lsr r9
    1354:	74006567 	strvc	r6, [r0], #-1383	; 0xfffffa99
    1358:	42706d65 	rsbsmi	r6, r0, #6464	; 0x1940
    135c:	366d6f6f 	strbtcc	r6, [sp], -pc, ror #30
    1360:	79617247 	stmdbvc	r1!, {r0, r1, r2, r6, r9, ip, sp, lr}^
    1364:	6f6f6200 	svcvs	0x006f6200
    1368:	675f316d 	ldrbvs	r3, [pc, -sp, ror #2]
    136c:	5f796172 	svcpl	0x00796172
    1370:	73746962 	cmnvc	r4, #1605632	; 0x188000
    1374:	6f6f6200 	svcvs	0x006f6200
    1378:	6a624f6d 	bvs	1895134 <startup-0x1e76aecc>
    137c:	2f3a4300 	svccs	0x003a4300
    1380:	2f706f6d 	svccs	0x00706f6d
    1384:	6f4d2f63 	svcvs	0x004d2f63
    1388:	62616c70 	rsbvs	r6, r1, #112, 24	; 0x7000
    138c:	7461726f 	strbtvc	r7, [r1], #-623	; 0xfffffd91
    1390:	656e6f69 	strbvs	r6, [lr, #-3945]!	; 0xfffff097
    1394:	49442f72 	stmdbmi	r4, {r1, r4, r5, r6, r8, r9, sl, fp, sp}^
    1398:	572d7350 			; <UNDEFINED> instruction: 0x572d7350
    139c:	68637469 	stmdavs	r3!, {r0, r3, r5, r6, sl, ip, sp, lr}^
    13a0:	622f432f 	eorvs	r4, pc, #-1140850688	; 0xbc000000
    13a4:	2e6d6f6f 	cdpcs	15, 6, cr6, cr13, cr15, {3}
    13a8:	65740063 	ldrbvs	r0, [r4, #-99]!	; 0xffffff9d
    13ac:	6f42706d 	svcvs	0x0042706d
    13b0:	47356d6f 	ldrmi	r6, [r5, -pc, ror #26]!
    13b4:	00796172 	rsbseq	r6, r9, r2, ror r1
    13b8:	6d6f6f62 	stclvs	15, cr6, [pc, #-392]!	; 1238 <startup-0x1fffedc8>
    13bc:	61724731 	cmnvs	r2, r1, lsr r7
    13c0:	6f700079 	svcvs	0x00700079
    13c4:	65746e69 	ldrbvs	r6, [r4, #-3689]!	; 0xfffff197
    13c8:	00373272 	eorseq	r3, r7, r2, ror r2
    13cc:	6d6f6f62 	stclvs	15, cr6, [pc, #-392]!	; 124c <startup-0x1fffedb4>
    13d0:	616d4936 	cmnvs	sp, r6, lsr r9
    13d4:	62006567 	andvs	r6, r0, #432013312	; 0x19c00000
    13d8:	346d6f6f 	strbtcc	r6, [sp], #-3951	; 0xfffff091
    13dc:	616c625f 	cmnvs	ip, pc, asr r2
    13e0:	625f6b63 	subsvs	r6, pc, #101376	; 0x18c00
    13e4:	00737469 	rsbseq	r7, r3, r9, ror #8
    13e8:	6d6f6f62 	stclvs	15, cr6, [pc, #-392]!	; 1268 <startup-0x1fffed98>
    13ec:	72675f35 	rsbvc	r5, r7, #53, 30	; 0xd4
    13f0:	625f7961 	subsvs	r7, pc, #1589248	; 0x184000
    13f4:	00737469 	rsbseq	r7, r3, r9, ror #8
    13f8:	706d6574 	rsbvc	r6, sp, r4, ror r5
    13fc:	6d6f6f42 	stclvs	15, cr6, [pc, #-264]!	; 12fc <startup-0x1fffed04>
    1400:	67694c36 			; <UNDEFINED> instruction: 0x67694c36
    1404:	62007468 	andvs	r7, r0, #104, 8	; 0x68000000
    1408:	336d6f6f 	cmncc	sp, #444	; 0x1bc
    140c:	63616c42 	cmnvs	r1, #16896	; 0x4200
    1410:	6574006b 	ldrbvs	r0, [r4, #-107]!	; 0xffffff95
    1414:	6f42706d 	svcvs	0x0042706d
    1418:	4c336d6f 	ldcmi	13, cr6, [r3], #-444	; 0xfffffe44
    141c:	74686769 	strbtvc	r6, [r8], #-1897	; 0xfffff897
    1420:	6f6f6200 	svcvs	0x006f6200
    1424:	694c346d 	stmdbvs	ip, {r0, r2, r3, r5, r6, sl, ip, sp}^
    1428:	00746867 	rsbseq	r6, r4, r7, ror #16
    142c:	6d6f6f62 	stclvs	15, cr6, [pc, #-392]!	; 12ac <startup-0x1fffed54>
    1430:	6d493231 	sfmvs	f3, 2, [r9, #-196]	; 0xffffff3c
    1434:	00656761 	rsbeq	r6, r5, r1, ror #14
    1438:	6d6f6f62 	stclvs	15, cr6, [pc, #-392]!	; 12b8 <startup-0x1fffed48>
    143c:	6d493531 	cfstr64vs	mvdx3, [r9, #-196]	; 0xffffff3c
    1440:	00656761 	rsbeq	r6, r5, r1, ror #14
    1444:	6d6f6f62 	stclvs	15, cr6, [pc, #-392]!	; 12c4 <startup-0x1fffed3c>
    1448:	67694c31 			; <UNDEFINED> instruction: 0x67694c31
    144c:	62007468 	andvs	r7, r0, #104, 8	; 0x68000000
    1450:	316d6f6f 	cmncc	sp, pc, ror #30
    1454:	616c625f 	cmnvs	ip, pc, asr r2
    1458:	625f6b63 	subsvs	r6, pc, #101376	; 0x18c00
    145c:	00737469 	rsbseq	r7, r3, r9, ror #8
    1460:	6d6f6f62 	stclvs	15, cr6, [pc, #-392]!	; 12e0 <startup-0x1fffed20>
    1464:	616d4933 	cmnvs	sp, r3, lsr r9
    1468:	74006567 	strvc	r6, [r0], #-1383	; 0xfffffa99
    146c:	42706d65 	rsbsmi	r6, r0, #6464	; 0x1940
    1470:	476d6f6f 	strbmi	r6, [sp, -pc, ror #30]!
    1474:	00796172 	rsbseq	r6, r9, r2, ror r1
    1478:	6d6f6f62 	stclvs	15, cr6, [pc, #-392]!	; 12f8 <startup-0x1fffed08>
    147c:	72675f34 	rsbvc	r5, r7, #52, 30	; 0xd0
    1480:	625f7961 	subsvs	r7, pc, #1589248	; 0x184000
    1484:	00737469 	rsbseq	r7, r3, r9, ror #8
    1488:	6d6f6f62 	stclvs	15, cr6, [pc, #-392]!	; 1308 <startup-0x1fffecf8>
    148c:	6c625f32 	stclvs	15, cr5, [r2], #-200	; 0xffffff38
    1490:	5f6b6361 	svcpl	0x006b6361
    1494:	73746962 	cmnvc	r4, #1605632	; 0x188000
    1498:	6d657400 	cfstrdvs	mvd7, [r5, #-0]
    149c:	6f6f4270 	svcvs	0x006f4270
    14a0:	616c426d 	cmnvs	ip, sp, ror #4
    14a4:	62006b63 	andvs	r6, r0, #101376	; 0x18c00
    14a8:	356d6f6f 	strbcc	r6, [sp, #-3951]!	; 0xfffff091
    14ac:	63616c42 	cmnvs	r1, #16896	; 0x4200
    14b0:	6574006b 	ldrbvs	r0, [r4, #-107]!	; 0xffffff95
    14b4:	6f42706d 	svcvs	0x0042706d
    14b8:	42326d6f 	eorsmi	r6, r2, #7104	; 0x1bc0
    14bc:	6b63616c 	blvs	18d9a74 <startup-0x1e72658c>
    14c0:	6f6f6200 	svcvs	0x006f6200
    14c4:	6c42326d 	sfmvs	f3, 2, [r2], {109}	; 0x6d
    14c8:	006b6361 	rsbeq	r6, fp, r1, ror #6
    14cc:	6d6f6f62 	stclvs	15, cr6, [pc, #-392]!	; 134c <startup-0x1fffecb4>
    14d0:	67694c36 			; <UNDEFINED> instruction: 0x67694c36
    14d4:	74007468 	strvc	r7, [r0], #-1128	; 0xfffffb98
    14d8:	42706d65 	rsbsmi	r6, r0, #6464	; 0x1940
    14dc:	346d6f6f 	strbtcc	r6, [sp], #-3951	; 0xfffff091
    14e0:	79617247 	stmdbvc	r1!, {r0, r1, r2, r6, r9, ip, sp, lr}^
    14e4:	6f6f6200 	svcvs	0x006f6200
    14e8:	675f336d 	ldrbvs	r3, [pc, -sp, ror #6]
    14ec:	5f796172 	svcpl	0x00796172
    14f0:	73746962 	cmnvc	r4, #1605632	; 0x188000
    14f4:	6f6f6200 	svcvs	0x006f6200
    14f8:	6c5f336d 	mrrcvs	3, 6, r3, pc, cr13	; <UNPREDICTABLE>
    14fc:	74686769 	strbtvc	r6, [r8], #-1897	; 0xfffff897
    1500:	7469625f 	strbtvc	r6, [r9], #-607	; 0xfffffda1
    1504:	6f700073 	svcvs	0x00700073
    1508:	65746e69 	ldrbvs	r6, [r4, #-3689]!	; 0xfffff197
    150c:	00353272 	eorseq	r3, r5, r2, ror r2
    1510:	6d6f6f62 	stclvs	15, cr6, [pc, #-392]!	; 1390 <startup-0x1fffec70>
    1514:	67694c33 			; <UNDEFINED> instruction: 0x67694c33
    1518:	62007468 	andvs	r7, r0, #104, 8	; 0x68000000
    151c:	366d6f6f 	strbtcc	r6, [sp], -pc, ror #30
    1520:	6172675f 	cmnvs	r2, pc, asr r7
    1524:	69625f79 	stmdbvs	r2!, {r0, r3, r4, r5, r6, r8, r9, sl, fp, ip, lr}^
    1528:	62007374 	andvs	r7, r0, #116, 6	; 0xd0000001
    152c:	356d6f6f 	strbcc	r6, [sp, #-3951]!	; 0xfffff091
    1530:	79617247 	stmdbvc	r1!, {r0, r1, r2, r6, r9, ip, sp, lr}^
    1534:	6f6f6200 	svcvs	0x006f6200
    1538:	6c5f356d 	cfldr64vs	mvdx3, [pc], {109}	; 0x6d
    153c:	74686769 	strbtvc	r6, [r8], #-1897	; 0xfffff897
    1540:	7469625f 	strbtvc	r6, [r9], #-607	; 0xfffffda1
    1544:	6f620073 	svcvs	0x00620073
    1548:	33316d6f 	teqcc	r1, #7104	; 0x1bc0
    154c:	67616d49 	strbvs	r6, [r1, -r9, asr #26]!
    1550:	6f620065 	svcvs	0x00620065
    1554:	30316d6f 	eorscc	r6, r1, pc, ror #26
    1558:	67616d49 	strbvs	r6, [r1, -r9, asr #26]!
    155c:	6f620065 	svcvs	0x00620065
    1560:	5f366d6f 	svcpl	0x00366d6f
    1564:	6867696c 	stmdavs	r7!, {r2, r3, r5, r6, r8, fp, sp, lr}^
    1568:	69625f74 	stmdbvs	r2!, {r2, r4, r5, r6, r8, r9, sl, fp, ip, lr}^
    156c:	62007374 	andvs	r7, r0, #116, 6	; 0xd0000001
    1570:	376d6f6f 	strbcc	r6, [sp, -pc, ror #30]!
    1574:	67616d49 	strbvs	r6, [r1, -r9, asr #26]!
    1578:	6f620065 	svcvs	0x00620065
    157c:	49346d6f 	ldmdbmi	r4!, {r0, r1, r2, r3, r5, r6, r8, sl, fp, sp, lr}
    1580:	6567616d 	strbvs	r6, [r7, #-365]!	; 0xfffffe93
    1584:	6d657400 	cfstrdvs	mvd7, [r5, #-0]
    1588:	6f6f4270 	svcvs	0x006f4270
    158c:	7247326d 	subvc	r3, r7, #-805306362	; 0xd0000006
    1590:	70007961 	andvc	r7, r0, r1, ror #18
    1594:	746e696f 	strbtvc	r6, [lr], #-2415	; 0xfffff691
    1598:	36327265 	ldrtcc	r7, [r2], -r5, ror #4
    159c:	6f6f6200 	svcvs	0x006f6200
    15a0:	7247326d 	subvc	r3, r7, #-805306362	; 0xd0000006
    15a4:	62007961 	andvs	r7, r0, #1589248	; 0x184000
    15a8:	496d6f6f 	stmdbmi	sp!, {r0, r1, r2, r3, r5, r6, r8, r9, sl, fp, sp, lr}^
    15ac:	6567616d 	strbvs	r6, [r7, #-365]!	; 0xfffffe93
    15b0:	65740073 	ldrbvs	r0, [r4, #-115]!	; 0xffffff8d
    15b4:	6f42706d 	svcvs	0x0042706d
    15b8:	4c346d6f 	ldcmi	13, cr6, [r4], #-444	; 0xfffffe44
    15bc:	74686769 	strbtvc	r6, [r8], #-1897	; 0xfffff897
    15c0:	6d657400 	cfstrdvs	mvd7, [r5, #-0]
    15c4:	6f6f4270 	svcvs	0x006f4270
    15c8:	6c42356d 	cfstr64vs	mvdx3, [r2], {109}	; 0x6d
    15cc:	006b6361 	rsbeq	r6, fp, r1, ror #6
    15d0:	706d6574 	rsbvc	r6, sp, r4, ror r5
    15d4:	6d6f6f42 	stclvs	15, cr6, [pc, #-264]!	; 14d4 <startup-0x1fffeb2c>
    15d8:	6867694c 	stmdavs	r7!, {r2, r3, r6, r8, fp, sp, lr}^
    15dc:	6f620074 	svcvs	0x00620074
    15e0:	4c356d6f 	ldcmi	13, cr6, [r5], #-444	; 0xfffffe44
    15e4:	74686769 	strbtvc	r6, [r8], #-1897	; 0xfffff897
    15e8:	6d657400 	cfstrdvs	mvd7, [r5, #-0]
    15ec:	6f6f4270 	svcvs	0x006f4270
    15f0:	694c326d 	stmdbvs	ip, {r0, r2, r3, r5, r6, r9, ip, sp}^
    15f4:	00746867 	rsbseq	r6, r4, r7, ror #16
    15f8:	6d6f6f62 	stclvs	15, cr6, [pc, #-392]!	; 1478 <startup-0x1fffeb88>
    15fc:	616d4932 	cmnvs	sp, r2, lsr r9
    1600:	62006567 	andvs	r6, r0, #432013312	; 0x19c00000
    1604:	326d6f6f 	rsbcc	r6, sp, #444	; 0x1bc
    1608:	6867694c 	stmdavs	r7!, {r2, r3, r6, r8, fp, sp, lr}^
    160c:	6f620074 	svcvs	0x00620074
    1610:	47346d6f 	ldrmi	r6, [r4, -pc, ror #26]!
    1614:	00796172 	rsbseq	r6, r9, r2, ror r1
    1618:	706d6574 	rsbvc	r6, sp, r4, ror r5
    161c:	6d6f6f42 	stclvs	15, cr6, [pc, #-264]!	; 151c <startup-0x1fffeae4>
    1620:	616c4236 	cmnvs	ip, r6, lsr r2
    1624:	62006b63 	andvs	r6, r0, #101376	; 0x18c00
    1628:	336d6f6f 	cmncc	sp, #444	; 0x1bc
    162c:	79617247 	stmdbvc	r1!, {r0, r1, r2, r6, r9, ip, sp, lr}^
    1630:	6d657400 	cfstrdvs	mvd7, [r5, #-0]
    1634:	6f6f4270 	svcvs	0x006f4270
    1638:	6c42336d 	mcrrvs	3, 6, r3, r2, cr13
    163c:	006b6361 	rsbeq	r6, fp, r1, ror #6
    1640:	6d6f6f62 	stclvs	15, cr6, [pc, #-392]!	; 14c0 <startup-0x1fffeb40>
    1644:	6c625f33 	stclvs	15, cr5, [r2], #-204	; 0xffffff34
    1648:	5f6b6361 	svcpl	0x006b6361
    164c:	73746962 	cmnvc	r4, #1605632	; 0x188000
    1650:	6f6f6200 	svcvs	0x006f6200
    1654:	6c42316d 	stfvse	f3, [r2], {109}	; 0x6d
    1658:	006b6361 	rsbeq	r6, fp, r1, ror #6
    165c:	6d6f6f62 	stclvs	15, cr6, [pc, #-392]!	; 14dc <startup-0x1fffeb24>
    1660:	61724736 	cmnvs	r2, r6, lsr r7
    1664:	6f620079 	svcvs	0x00620079
    1668:	42366d6f 	eorsmi	r6, r6, #7104	; 0x1bc0
    166c:	6b63616c 	blvs	18d9c24 <startup-0x1e7263dc>
    1670:	6f6f6200 	svcvs	0x006f6200
    1674:	6c5f346d 	cfldrdvs	mvd3, [pc], {109}	; 0x6d
    1678:	74686769 	strbtvc	r6, [r8], #-1897	; 0xfffff897
    167c:	7469625f 	strbtvc	r6, [r9], #-607	; 0xfffffda1
    1680:	6f620073 	svcvs	0x00620073
    1684:	5f316d6f 	svcpl	0x00316d6f
    1688:	6867696c 	stmdavs	r7!, {r2, r3, r5, r6, r8, fp, sp, lr}^
    168c:	69625f74 	stmdbvs	r2!, {r2, r4, r5, r6, r8, r9, sl, fp, ip, lr}^
    1690:	62007374 	andvs	r7, r0, #116, 6	; 0xd0000001
    1694:	356d6f6f 	strbcc	r6, [sp, #-3951]!	; 0xfffff091
    1698:	616c625f 	cmnvs	ip, pc, asr r2
    169c:	625f6b63 	subsvs	r6, pc, #101376	; 0x18c00
    16a0:	00737469 	rsbseq	r7, r3, r9, ror #8
    16a4:	6d6f6f62 	stclvs	15, cr6, [pc, #-392]!	; 1524 <startup-0x1fffeadc>
    16a8:	696c5f32 	stmdbvs	ip!, {r1, r4, r5, r8, r9, sl, fp, ip, lr}^
    16ac:	5f746867 	svcpl	0x00746867
    16b0:	73746962 	cmnvc	r4, #1605632	; 0x188000
    16b4:	6f6f6200 	svcvs	0x006f6200
    16b8:	625f366d 	subsvs	r3, pc, #114294784	; 0x6d00000
    16bc:	6b63616c 	blvs	18d9c74 <startup-0x1e72638c>
    16c0:	7469625f 	strbtvc	r6, [r9], #-607	; 0xfffffda1
    16c4:	6f620073 	svcvs	0x00620073
    16c8:	42346d6f 	eorsmi	r6, r4, #7104	; 0x1bc0
    16cc:	6b63616c 	blvs	18d9c84 <startup-0x1e72637c>
    16d0:	6f6f6200 	svcvs	0x006f6200
    16d4:	675f326d 	ldrbvs	r3, [pc, -sp, ror #4]
    16d8:	5f796172 	svcpl	0x00796172
    16dc:	73746962 	cmnvc	r4, #1605632	; 0x188000
    16e0:	6d657400 	cfstrdvs	mvd7, [r5, #-0]
    16e4:	6f6f4270 	svcvs	0x006f4270
    16e8:	694c356d 	stmdbvs	ip, {r0, r2, r3, r5, r6, r8, sl, ip, sp}^
    16ec:	00746867 	rsbseq	r6, r4, r7, ror #16
    16f0:	6d6f6f62 	stclvs	15, cr6, [pc, #-392]!	; 1570 <startup-0x1fffea90>
    16f4:	6d493431 	cfstrdvs	mvd3, [r9, #-196]	; 0xffffff3c
    16f8:	00656761 	rsbeq	r6, r5, r1, ror #14
    16fc:	706d6574 	rsbvc	r6, sp, r4, ror r5
    1700:	6d6f6f42 	stclvs	15, cr6, [pc, #-264]!	; 1600 <startup-0x1fffea00>
    1704:	61724733 	cmnvs	r2, r3, lsr r7
    1708:	65740079 	ldrbvs	r0, [r4, #-121]!	; 0xffffff87
    170c:	6f42706d 	svcvs	0x0042706d
    1710:	42346d6f 	eorsmi	r6, r4, #7104	; 0x1bc0
    1714:	6b63616c 	blvs	18d9ccc <startup-0x1e726334>
    1718:	6f6f6200 	svcvs	0x006f6200
    171c:	4931316d 	ldmdbmi	r1!, {r0, r2, r3, r5, r6, r8, ip, sp}
    1720:	6567616d 	strbvs	r6, [r7, #-365]!	; 0xfffffe93
    1724:	61726400 	cmnvs	r2, r0, lsl #8
    1728:	496e6f67 	stmdbmi	lr!, {r0, r1, r2, r5, r6, r8, r9, sl, fp, sp, lr}^
    172c:	6567616d 	strbvs	r6, [r7, #-365]!	; 0xfffffe93
    1730:	72640073 	rsbvc	r0, r4, #115	; 0x73
    1734:	6e6f6761 	cdpvs	7, 6, cr6, cr15, cr1, {3}
    1738:	67694c33 			; <UNDEFINED> instruction: 0x67694c33
    173c:	43007468 	movwmi	r7, #1128	; 0x468
    1740:	6f6d2f3a 	svcvs	0x006d2f3a
    1744:	2f632f70 	svccs	0x00632f70
    1748:	6c706f4d 	ldclvs	15, cr6, [r0], #-308	; 0xfffffecc
    174c:	726f6261 	rsbvc	r6, pc, #268435462	; 0x10000006
    1750:	6f697461 	svcvs	0x00697461
    1754:	2f72656e 	svccs	0x0072656e
    1758:	73504944 	cmpvc	r0, #68, 18	; 0x110000
    175c:	7469572d 	strbtvc	r5, [r9], #-1837	; 0xfffff8d3
    1760:	432f6863 			; <UNDEFINED> instruction: 0x432f6863
    1764:	6172642f 	cmnvs	r2, pc, lsr #8
    1768:	2e6e6f67 	cdpcs	15, 6, cr6, cr14, cr7, {3}
    176c:	72640063 	rsbvc	r0, r4, #99	; 0x63
    1770:	6e6f6761 	cdpvs	7, 6, cr6, cr15, cr1, {3}
    1774:	616d4932 	cmnvs	sp, r2, lsr r9
    1778:	64006567 	strvs	r6, [r0], #-1383	; 0xfffffa99
    177c:	6f676172 	svcvs	0x00676172
    1780:	6c5f316e 	ldfvse	f3, [pc], {110}	; 0x6e
    1784:	74686769 	strbtvc	r6, [r8], #-1897	; 0xfffff897
    1788:	7469625f 	strbtvc	r6, [r9], #-607	; 0xfffffda1
    178c:	72640073 	rsbvc	r0, r4, #115	; 0x73
    1790:	6e6f6761 	cdpvs	7, 6, cr6, cr15, cr1, {3}
    1794:	6c625f32 	stclvs	15, cr5, [r2], #-200	; 0xffffff38
    1798:	5f6b6361 	svcpl	0x006b6361
    179c:	73746962 	cmnvc	r4, #1605632	; 0x188000
    17a0:	61726400 	cmnvs	r2, r0, lsl #8
    17a4:	336e6f67 	cmncc	lr, #412	; 0x19c
    17a8:	67696c5f 			; <UNDEFINED> instruction: 0x67696c5f
    17ac:	625f7468 	subsvs	r7, pc, #104, 8	; 0x68000000
    17b0:	00737469 	rsbseq	r7, r3, r9, ror #8
    17b4:	706d6574 	rsbvc	r6, sp, r4, ror r5
    17b8:	67617244 	strbvs	r7, [r1, -r4, asr #4]!
    17bc:	42336e6f 	eorsmi	r6, r3, #1776	; 0x6f0
    17c0:	6b63616c 	blvs	18d9d78 <startup-0x1e726288>
    17c4:	6d657400 	cfstrdvs	mvd7, [r5, #-0]
    17c8:	61724470 	cmnvs	r2, r0, ror r4
    17cc:	336e6f67 	cmncc	lr, #412	; 0x19c
    17d0:	79617247 	stmdbvc	r1!, {r0, r1, r2, r6, r9, ip, sp, lr}^
    17d4:	61726400 	cmnvs	r2, r0, lsl #8
    17d8:	326e6f67 	rsbcc	r6, lr, #412	; 0x19c
    17dc:	79617247 	stmdbvc	r1!, {r0, r1, r2, r6, r9, ip, sp, lr}^
    17e0:	61726400 	cmnvs	r2, r0, lsl #8
    17e4:	326e6f67 	rsbcc	r6, lr, #412	; 0x19c
    17e8:	63616c42 	cmnvs	r1, #16896	; 0x4200
    17ec:	6574006b 	ldrbvs	r0, [r4, #-107]!	; 0xffffff95
    17f0:	7244706d 	subvc	r7, r4, #109	; 0x6d
    17f4:	6e6f6761 	cdpvs	7, 6, cr6, cr15, cr1, {3}
    17f8:	63616c42 	cmnvs	r1, #16896	; 0x4200
    17fc:	6574006b 	ldrbvs	r0, [r4, #-107]!	; 0xffffff95
    1800:	7244706d 	subvc	r7, r4, #109	; 0x6d
    1804:	6e6f6761 	cdpvs	7, 6, cr6, cr15, cr1, {3}
    1808:	616c4232 	cmnvs	ip, r2, lsr r2
    180c:	64006b63 	strvs	r6, [r0], #-2915	; 0xfffff49d
    1810:	6f676172 	svcvs	0x00676172
    1814:	6d49346e 	cfstrdvs	mvd3, [r9, #-440]	; 0xfffffe48
    1818:	00656761 	rsbeq	r6, r5, r1, ror #14
    181c:	67617264 	strbvs	r7, [r1, -r4, ror #4]!
    1820:	47336e6f 	ldrmi	r6, [r3, -pc, ror #28]!
    1824:	00796172 	rsbseq	r6, r9, r2, ror r1
    1828:	67617264 	strbvs	r7, [r1, -r4, ror #4]!
    182c:	42336e6f 	eorsmi	r6, r3, #1776	; 0x6f0
    1830:	6b63616c 	blvs	18d9de8 <startup-0x1e726218>
    1834:	61726400 	cmnvs	r2, r0, lsl #8
    1838:	336e6f67 	cmncc	lr, #412	; 0x19c
    183c:	6172675f 	cmnvs	r2, pc, asr r7
    1840:	69625f79 	stmdbvs	r2!, {r0, r3, r4, r5, r6, r8, r9, sl, fp, ip, lr}^
    1844:	74007374 	strvc	r7, [r0], #-884	; 0xfffffc8c
    1848:	44706d65 	ldrbtmi	r6, [r0], #-3429	; 0xfffff29b
    184c:	6f676172 	svcvs	0x00676172
    1850:	7247326e 	subvc	r3, r7, #-536870906	; 0xe0000006
    1854:	74007961 	strvc	r7, [r0], #-2401	; 0xfffff69f
    1858:	44706d65 	ldrbtmi	r6, [r0], #-3429	; 0xfffff29b
    185c:	6f676172 	svcvs	0x00676172
    1860:	6172476e 	cmnvs	r2, lr, ror #14
    1864:	72640079 	rsbvc	r0, r4, #121	; 0x79
    1868:	6e6f6761 	cdpvs	7, 6, cr6, cr15, cr1, {3}
    186c:	67694c31 			; <UNDEFINED> instruction: 0x67694c31
    1870:	64007468 	strvs	r7, [r0], #-1128	; 0xfffffb98
    1874:	6f676172 	svcvs	0x00676172
    1878:	6a624f6e 	bvs	1895638 <startup-0x1e76a9c8>
    187c:	61726400 	cmnvs	r2, r0, lsl #8
    1880:	336e6f67 	cmncc	lr, #412	; 0x19c
    1884:	616c625f 	cmnvs	ip, pc, asr r2
    1888:	625f6b63 	subsvs	r6, pc, #101376	; 0x18c00
    188c:	00737469 	rsbseq	r7, r3, r9, ror #8
    1890:	706d6574 	rsbvc	r6, sp, r4, ror r5
    1894:	67617244 	strbvs	r7, [r1, -r4, asr #4]!
    1898:	4c326e6f 	ldcmi	14, cr6, [r2], #-444	; 0xfffffe44
    189c:	74686769 	strbtvc	r6, [r8], #-1897	; 0xfffff897
    18a0:	61726400 	cmnvs	r2, r0, lsl #8
    18a4:	316e6f67 	cmncc	lr, r7, ror #30
    18a8:	616c625f 	cmnvs	ip, pc, asr r2
    18ac:	625f6b63 	subsvs	r6, pc, #101376	; 0x18c00
    18b0:	00737469 	rsbseq	r7, r3, r9, ror #8
    18b4:	67617264 	strbvs	r7, [r1, -r4, ror #4]!
    18b8:	5f326e6f 	svcpl	0x00326e6f
    18bc:	6867696c 	stmdavs	r7!, {r2, r3, r5, r6, r8, fp, sp, lr}^
    18c0:	69625f74 	stmdbvs	r2!, {r2, r4, r5, r6, r8, r9, sl, fp, ip, lr}^
    18c4:	64007374 	strvs	r7, [r0], #-884	; 0xfffffc8c
    18c8:	6f676172 	svcvs	0x00676172
    18cc:	675f326e 	ldrbvs	r3, [pc, -lr, ror #4]
    18d0:	5f796172 	svcpl	0x00796172
    18d4:	73746962 	cmnvc	r4, #1605632	; 0x188000
    18d8:	6d657400 	cfstrdvs	mvd7, [r5, #-0]
    18dc:	61724470 	cmnvs	r2, r0, ror r4
    18e0:	336e6f67 	cmncc	lr, #412	; 0x19c
    18e4:	6867694c 	stmdavs	r7!, {r2, r3, r6, r8, fp, sp, lr}^
    18e8:	65740074 	ldrbvs	r0, [r4, #-116]!	; 0xffffff8c
    18ec:	7244706d 	subvc	r7, r4, #109	; 0x6d
    18f0:	6e6f6761 	cdpvs	7, 6, cr6, cr15, cr1, {3}
    18f4:	6867694c 	stmdavs	r7!, {r2, r3, r6, r8, fp, sp, lr}^
    18f8:	72640074 	rsbvc	r0, r4, #116	; 0x74
    18fc:	6e6f6761 	cdpvs	7, 6, cr6, cr15, cr1, {3}
    1900:	67694c32 			; <UNDEFINED> instruction: 0x67694c32
    1904:	64007468 	strvs	r7, [r0], #-1128	; 0xfffffb98
    1908:	6f676172 	svcvs	0x00676172
    190c:	6d49316e 	stfvse	f3, [r9, #-440]	; 0xfffffe48
    1910:	00656761 	rsbeq	r6, r5, r1, ror #14
    1914:	67617264 	strbvs	r7, [r1, -r4, ror #4]!
    1918:	42316e6f 	eorsmi	r6, r1, #1776	; 0x6f0
    191c:	6b63616c 	blvs	18d9ed4 <startup-0x1e72612c>
    1920:	61726400 	cmnvs	r2, r0, lsl #8
    1924:	316e6f67 	cmncc	lr, r7, ror #30
    1928:	79617247 	stmdbvc	r1!, {r0, r1, r2, r6, r9, ip, sp, lr}^
    192c:	61726400 	cmnvs	r2, r0, lsl #8
    1930:	336e6f67 	cmncc	lr, #412	; 0x19c
    1934:	67616d49 	strbvs	r6, [r1, -r9, asr #26]!
    1938:	72640065 	rsbvc	r0, r4, #101	; 0x65
    193c:	6e6f6761 	cdpvs	7, 6, cr6, cr15, cr1, {3}
    1940:	72675f31 	rsbvc	r5, r7, #49, 30	; 0xc4
    1944:	625f7961 	subsvs	r7, pc, #1589248	; 0x184000
    1948:	00737469 	rsbseq	r7, r3, r9, ror #8
    194c:	65676170 	strbvs	r6, [r7, #-368]!	; 0xfffffe90
    1950:	61726700 	cmnvs	r2, r0, lsl #14
    1954:	63696870 	cmnvs	r9, #112, 16	; 0x700000
    1958:	6165725f 	cmnvs	r5, pc, asr r2
    195c:	75620064 	strbvc	r0, [r2, #-100]!	; 0xffffff9c
    1960:	72656666 	rsbvc	r6, r5, #106954752	; 0x6600000
    1964:	78697000 	stmdavc	r9!, {ip, sp, lr}^
    1968:	00326c65 	eorseq	r6, r2, r5, ror #24
    196c:	77617264 	strbvc	r7, [r1, -r4, ror #4]!
    1970:	6d61675f 	stclvs	7, cr6, [r1, #-380]!	; 0xfffffe84
    1974:	626f5f65 	rsbvs	r5, pc, #404	; 0x194
    1978:	7463656a 	strbtvc	r6, [r3], #-1386	; 0xfffffa96
    197c:	61726700 	cmnvs	r2, r0, lsl #14
    1980:	63696870 	cmnvs	r9, #112, 16	; 0x700000
    1984:	6972775f 	ldmdbvs	r2!, {r0, r1, r2, r3, r4, r6, r8, r9, sl, ip, sp, lr}^
    1988:	635f6574 	cmpvs	pc, #116, 10	; 0x1d000000
    198c:	616d6d6f 	cmnvs	sp, pc, ror #26
    1990:	6300646e 	movwvs	r6, #1134	; 0x46e
    1994:	7261656c 	rsbvc	r6, r1, #108, 10	; 0x1b000000
    1998:	6361625f 	cmnvs	r1, #-268435451	; 0xf0000005
    199c:	6675426b 	ldrbtvs	r4, [r5], -fp, ror #4
    19a0:	00726566 	rsbseq	r6, r2, r6, ror #10
    19a4:	65786970 	ldrbvs	r6, [r8, #-2416]!	; 0xfffff690
    19a8:	4f67006c 	svcmi	0x0067006c
    19ac:	67006a62 	strvs	r6, [r0, -r2, ror #20]
    19b0:	68706172 	ldmdavs	r0!, {r1, r4, r5, r6, r8, sp, lr}^
    19b4:	645f6369 	ldrbvs	r6, [pc], #-873	; 19bc <startup-0x1fffe644>
    19b8:	5f776172 	svcpl	0x00776172
    19bc:	65726373 	ldrbvs	r6, [r2, #-883]!	; 0xfffffc8d
    19c0:	64006e65 	strvs	r6, [r0], #-3685	; 0xfffff19b
    19c4:	79616c65 	stmdbvc	r1!, {r0, r2, r5, r6, sl, fp, sp, lr}^
    19c8:	6c696d5f 	stclvs	13, cr6, [r9], #-380	; 0xfffffe84
    19cc:	7300696c 	movwvc	r6, #2412	; 0x96c
    19d0:	5f776f68 	svcpl	0x00776f68
    19d4:	6d617266 	sfmvs	f7, 2, [r1, #-408]!	; 0xfffffe68
    19d8:	72640065 	rsbvc	r0, r4, #101	; 0x65
    19dc:	735f7761 	cmpvc	pc, #25427968	; 0x1840000
    19e0:	74697270 	strbtvc	r7, [r9], #-624	; 0xfffffd90
    19e4:	65640065 	strbvs	r0, [r4, #-101]!	; 0xffffff9b
    19e8:	5f79616c 	svcpl	0x0079616c
    19ec:	6e303035 	mrcvs	0, 1, r3, cr0, cr5, {1}
    19f0:	72670073 	rsbvc	r0, r7, #115	; 0x73
    19f4:	69687061 	stmdbvs	r8!, {r0, r5, r6, ip, sp, lr}^
    19f8:	72775f63 	rsbsvc	r5, r7, #396	; 0x18c
    19fc:	00657469 	rsbeq	r7, r5, r9, ror #8
    1a00:	65786970 	ldrbvs	r6, [r8, #-2416]!	; 0xfffff690
    1a04:	6700736c 	strvs	r7, [r0, -ip, ror #6]
    1a08:	53796172 	cmnpl	r9, #-2147483620	; 0x8000001c
    1a0c:	656c6163 	strbvs	r6, [ip, #-355]!	; 0xfffffe9d
    1a10:	74736554 	ldrbtvc	r6, [r3], #-1364	; 0xfffffaac
    1a14:	61726700 	cmnvs	r2, r0, lsl #14
    1a18:	63696870 	cmnvs	r9, #112, 16	; 0x700000
    1a1c:	7274635f 	rsbsvc	r6, r4, #2080374785	; 0x7c000001
    1a20:	69625f6c 	stmdbvs	r2!, {r2, r3, r5, r6, r8, r9, sl, fp, ip, lr}^
    1a24:	6c635f74 	stclvs	15, cr5, [r3], #-464	; 0xfffffe30
    1a28:	00726165 	rsbseq	r6, r2, r5, ror #2
    1a2c:	6d2f3a43 	vstmdbvs	pc!, {s6-s72}
    1a30:	632f706f 			; <UNDEFINED> instruction: 0x632f706f
    1a34:	706f4d2f 	rsbvc	r4, pc, pc, lsr #26
    1a38:	6f62616c 	svcvs	0x0062616c
    1a3c:	69746172 	ldmdbvs	r4!, {r1, r4, r5, r6, r8, sp, lr}^
    1a40:	72656e6f 	rsbvc	r6, r5, #1776	; 0x6f0
    1a44:	5049442f 	subpl	r4, r9, pc, lsr #8
    1a48:	69572d73 	ldmdbvs	r7, {r0, r1, r4, r5, r6, r8, sl, fp, sp}^
    1a4c:	2f686374 	svccs	0x00686374
    1a50:	72672f43 	rsbvc	r2, r7, #268	; 0x10c
    1a54:	69687061 	stmdbvs	r8!, {r0, r5, r6, ip, sp, lr}^
    1a58:	632e7363 			; <UNDEFINED> instruction: 0x632e7363
    1a5c:	61726700 	cmnvs	r2, r0, lsl #14
    1a60:	63696870 	cmnvs	r9, #112, 16	; 0x700000
    1a64:	6165725f 	cmnvs	r5, pc, asr r2
    1a68:	61645f64 	cmnvs	r4, r4, ror #30
    1a6c:	64006174 	strvs	r6, [r0], #-372	; 0xfffffe8c
    1a70:	79616c65 	stmdbvc	r1!, {r0, r2, r5, r6, sl, fp, sp, lr}^
    1a74:	63696d5f 	cmnvs	r9, #6080	; 0x17c0
    1a78:	63006f72 	movwvs	r6, #3954	; 0xf72
    1a7c:	726f6c6f 	rsbvc	r6, pc, #28416	; 0x6f00
    1a80:	74657300 	strbtvc	r7, [r5], #-768	; 0xfffffd00
    1a84:	5f70755f 	svcpl	0x0070755f
    1a88:	77617264 	strbvc	r7, [r1, -r4, ror #4]!
    1a8c:	6675625f 			; <UNDEFINED> instruction: 0x6675625f
    1a90:	73726566 	cmnvc	r2, #427819008	; 0x19800000
    1a94:	61726700 	cmnvs	r2, r0, lsl #14
    1a98:	63696870 	cmnvs	r9, #112, 16	; 0x700000
    1a9c:	7274635f 	rsbsvc	r6, r4, #2080374785	; 0x7c000001
    1aa0:	69625f6c 	stmdbvs	r2!, {r2, r3, r5, r6, r8, r9, sl, fp, ip, lr}^
    1aa4:	65735f74 	ldrbvs	r5, [r3, #-3956]!	; 0xfffff08c
    1aa8:	65640074 	strbvs	r0, [r4, #-116]!	; 0xffffff8c
    1aac:	5f79616c 	svcpl	0x0079616c
    1ab0:	6e303532 	mrcvs	5, 1, r3, cr0, cr2, {1}
    1ab4:	69660073 	stmdbvs	r6!, {r0, r1, r4, r5, r6}^
    1ab8:	65526c6c 	ldrbvs	r6, [r2, #-3180]	; 0xfffff394
    1abc:	6e617463 	cdpvs	4, 6, cr7, cr1, cr3, {3}
    1ac0:	00656c67 	rsbeq	r6, r5, r7, ror #24
    1ac4:	6b73616d 	blvs	1cda080 <startup-0x1e325f80>
    1ac8:	61726600 	cmnvs	r2, r0, lsl #12
    1acc:	6c5f656d 	cfldr64vs	mvdx6, [pc], {109}	; 0x6d
    1ad0:	74676e65 	strbtvc	r6, [r7], #-3685	; 0xfffff19b
    1ad4:	72670068 	rsbvc	r0, r7, #104	; 0x68
    1ad8:	69687061 	stmdbvs	r8!, {r0, r5, r6, ip, sp, lr}^
    1adc:	72775f63 	rsbsvc	r5, r7, #396	; 0x18c
    1ae0:	5f657469 	svcpl	0x00657469
    1ae4:	61746164 	cmnvs	r4, r4, ror #2
    1ae8:	74796200 	ldrbtvc	r6, [r9], #-512	; 0xfffffe00
    1aec:	69770065 	ldmdbvs	r7!, {r0, r2, r5, r6}^
    1af0:	5f687464 	svcpl	0x00687464
    1af4:	625f6e69 	subsvs	r6, pc, #1680	; 0x690
    1af8:	73657479 	cmnvc	r5, #2030043136	; 0x79000000
    1afc:	656c6300 	strbvs	r6, [ip, #-768]!	; 0xfffffd00
    1b00:	615f7261 	cmpvs	pc, r1, ror #4
    1b04:	625f6c6c 	subsvs	r6, pc, #108, 24	; 0x6c00
    1b08:	426b6361 	rsbmi	r6, fp, #-2080374783	; 0x84000001
    1b0c:	65666675 	strbvs	r6, [r6, #-1653]!	; 0xfffff98b
    1b10:	63007372 	movwvs	r7, #882	; 0x372
    1b14:	7261656c 	rsbvc	r6, r1, #108, 10	; 0x1b000000
    1b18:	74636552 	strbtvc	r6, [r3], #-1362	; 0xfffffaae
    1b1c:	6c676e61 	stclvs	14, cr6, [r7], #-388	; 0xfffffe7c
    1b20:	6e690065 	cdpvs	0, 6, cr0, cr9, cr5, {3}
    1b24:	00786564 	rsbseq	r6, r8, r4, ror #10
    1b28:	656c6573 	strbvs	r6, [ip, #-1395]!	; 0xfffffa8d
    1b2c:	635f7463 	cmpvs	pc, #1660944384	; 0x63000000
    1b30:	72746e6f 	rsbsvc	r6, r4, #1776	; 0x6f0
    1b34:	656c6c6f 	strbvs	r6, [ip, #-3183]!	; 0xfffff391
    1b38:	69660072 	stmdbvs	r6!, {r1, r4, r5, r6}^
    1b3c:	735f6c6c 	cmpvc	pc, #108, 24	; 0x6c00
    1b40:	65657263 	strbvs	r7, [r5, #-611]!	; 0xfffffd9d
    1b44:	7267006e 	rsbvc	r0, r7, #110	; 0x6e
    1b48:	69687061 	stmdbvs	r8!, {r0, r5, r6, ip, sp, lr}^
    1b4c:	61775f63 	cmnvs	r7, r3, ror #30
    1b50:	725f7469 	subsvc	r7, pc, #1761607680	; 0x69000000
    1b54:	79646165 	stmdbvc	r4!, {r0, r2, r5, r6, r8, sp, lr}^
    1b58:	656c6300 	strbvs	r6, [ip, #-768]!	; 0xfffffd00
    1b5c:	745f7261 	ldrbvc	r7, [pc], #-609	; 1b64 <startup-0x1fffe49c>
    1b60:	42736968 	rsbsmi	r6, r3, #104, 18	; 0x1a0000
    1b64:	426b6361 	rsbmi	r6, fp, #-2080374783	; 0x84000001
    1b68:	65666675 	strbvs	r6, [r6, #-1653]!	; 0xfffff98b
    1b6c:	72670072 	rsbvc	r0, r7, #114	; 0x72
    1b70:	69687061 	stmdbvs	r8!, {r0, r5, r6, ip, sp, lr}^
    1b74:	6e695f63 	cdpvs	15, 6, cr5, cr9, cr3, {3}
    1b78:	61697469 	cmnvs	r9, r9, ror #8
    1b7c:	657a696c 	ldrbvs	r6, [sl, #-2412]!	; 0xfffff694
    1b80:	61726700 	cmnvs	r2, r0, lsl #14
    1b84:	63696870 	cmnvs	r9, #112, 16	; 0x700000
    1b88:	656c635f 	strbvs	r6, [ip, #-863]!	; 0xfffffca1
    1b8c:	735f7261 	cmpvc	pc, #268435462	; 0x10000006
    1b90:	65657263 	strbvs	r7, [r5, #-611]!	; 0xfffffd9d
    1b94:	6f6c006e 	svcvs	0x006c006e
    1b98:	695f6461 	ldmdbvs	pc, {r0, r5, r6, sl, sp, lr}^	; <UNPREDICTABLE>
    1b9c:	6567616d 	strbvs	r6, [r7, #-365]!	; 0xfffffe93
    1ba0:	2f3a4300 	svccs	0x003a4300
    1ba4:	2f706f6d 	svccs	0x00706f6d
    1ba8:	6f4d2f63 	svcvs	0x004d2f63
    1bac:	62616c70 	rsbvs	r6, r1, #112, 24	; 0x7000
    1bb0:	7461726f 	strbtvc	r7, [r1], #-623	; 0xfffffd91
    1bb4:	656e6f69 	strbvs	r6, [lr, #-3945]!	; 0xfffff097
    1bb8:	49442f72 	stmdbmi	r4, {r1, r4, r5, r6, r8, r9, sl, fp, sp}^
    1bbc:	572d7350 			; <UNDEFINED> instruction: 0x572d7350
    1bc0:	68637469 	stmdavs	r3!, {r0, r3, r5, r6, sl, ip, sp, lr}^
    1bc4:	692f432f 	stmdbvs	pc!, {r0, r1, r2, r3, r5, r8, r9, lr}	; <UNPREDICTABLE>
    1bc8:	6567616d 	strbvs	r6, [r7, #-365]!	; 0xfffffe93
    1bcc:	6c00632e 	stcvs	3, cr6, [r0], {46}	; 0x2e
    1bd0:	5f64616f 	svcpl	0x0064616f
    1bd4:	69727073 	ldmdbvs	r2!, {r0, r1, r4, r5, r6, ip, sp, lr}^
    1bd8:	43006574 	movwmi	r6, #1396	; 0x574
    1bdc:	6f6d2f3a 	svcvs	0x006d2f3a
    1be0:	2f632f70 	svccs	0x00632f70
    1be4:	6c706f4d 	ldclvs	15, cr6, [r0], #-308	; 0xfffffecc
    1be8:	726f6261 	rsbvc	r6, pc, #268435462	; 0x10000006
    1bec:	6f697461 	svcvs	0x00697461
    1bf0:	2f72656e 	svccs	0x0072656e
    1bf4:	73504944 	cmpvc	r0, #68, 18	; 0x110000
    1bf8:	7469572d 	strbtvc	r5, [r9], #-1837	; 0xfffff8d3
    1bfc:	432f6863 			; <UNDEFINED> instruction: 0x432f6863
    1c00:	7270732f 	rsbsvc	r7, r0, #-1140850688	; 0xbc000000
    1c04:	2e657469 	cdpcs	4, 6, cr7, cr5, cr9, {3}
    1c08:	6f4d0063 	svcvs	0x004d0063
    1c0c:	00726564 	rsbseq	r6, r2, r4, ror #10
    1c10:	5f746573 	svcpl	0x00746573
    1c14:	445f7075 	ldrbmi	r7, [pc], #-117	; 1c1c <startup-0x1fffe3e4>
    1c18:	6f004c49 	svcvs	0x00004c49
    1c1c:	69487264 	stmdbvs	r8, {r2, r5, r6, r9, ip, sp, lr}^
    1c20:	6f006867 	svcvs	0x00006867
    1c24:	65707954 	ldrbvs	r7, [r0, #-2388]!	; 0xfffff6ac
    1c28:	50470072 	subpl	r0, r7, r2, ror r0
    1c2c:	50004f49 	andpl	r4, r0, r9, asr #30
    1c30:	72645075 	rsbvc	r5, r4, #117	; 0x75
    1c34:	72646900 	rsbvc	r6, r4, #0, 18
    1c38:	65736552 	ldrbvs	r6, [r3, #-1362]!	; 0xfffffaae
    1c3c:	64657672 	strbtvs	r7, [r5], #-1650	; 0xfffff98e
    1c40:	2f3a4300 	svccs	0x003a4300
    1c44:	2f706f6d 	svccs	0x00706f6d
    1c48:	6f4d2f63 	svcvs	0x004d2f63
    1c4c:	62616c70 	rsbvs	r6, r1, #112, 24	; 0x7000
    1c50:	7461726f 	strbtvc	r7, [r1], #-623	; 0xfffffd91
    1c54:	656e6f69 	strbvs	r6, [lr, #-3945]!	; 0xfffff097
    1c58:	49442f72 	stmdbmi	r4, {r1, r4, r5, r6, r8, r9, sl, fp, sp}^
    1c5c:	572d7350 			; <UNDEFINED> instruction: 0x572d7350
    1c60:	68637469 	stmdavs	r3!, {r0, r3, r5, r6, sl, ip, sp, lr}^
    1c64:	672f432f 	strvs	r4, [pc, -pc, lsr #6]!
    1c68:	2e6f6970 			; <UNDEFINED> instruction: 0x2e6f6970
    1c6c:	746f0063 	strbtvc	r0, [pc], #-99	; 1c74 <startup-0x1fffe38c>
    1c70:	65736552 	ldrbvs	r6, [r3, #-1362]!	; 0xfffffaae
    1c74:	64657672 	strbtvs	r7, [r5], #-1650	; 0xfffff98e
    1c78:	61657200 	cmnvs	r5, r0, lsl #4
    1c7c:	49445f64 	stmdbmi	r4, {r2, r5, r6, r8, r9, sl, fp, ip, lr}^
    1c80:	69735f4c 	ldmdbvs	r3!, {r2, r3, r6, r8, r9, sl, fp, ip, lr}^
    1c84:	656c676e 	strbvs	r6, [ip, #-1902]!	; 0xfffff892
    1c88:	72646f00 	rsbvc	r6, r4, #0, 30
    1c8c:	00776f4c 	rsbseq	r6, r7, ip, asr #30
    1c90:	6570536f 	ldrbvs	r5, [r0, #-879]!	; 0xfffffc91
    1c94:	00726465 	rsbseq	r6, r2, r5, ror #8
    1c98:	48726469 	ldmdami	r2!, {r0, r3, r5, r6, sl, sp, lr}^
    1c9c:	00686769 	rsbeq	r6, r8, r9, ror #14
    1ca0:	4c726469 	cfldrdmi	mvd6, [r2], #-420	; 0xfffffe5c
    1ca4:	6f00776f 	svcvs	0x0000776f
    1ca8:	65527264 	ldrbvs	r7, [r2, #-612]	; 0xfffffd9c
    1cac:	76726573 			; <UNDEFINED> instruction: 0x76726573
    1cb0:	72006465 	andvc	r6, r0, #1694498816	; 0x65000000
    1cb4:	5f646165 	svcpl	0x00646165
    1cb8:	004c4944 	subeq	r4, ip, r4, asr #18
    1cbc:	74696e69 	strbtvc	r6, [r9], #-3689	; 0xfffff197
    1cc0:	7070615f 	rsbsvc	r6, r0, pc, asr r1
    1cc4:	6163696c 	cmnvs	r3, ip, ror #18
    1cc8:	6e6f6974 			; <UNDEFINED> instruction: 0x6e6f6974
    1ccc:	6d696c00 	stclvs	12, cr6, [r9, #-0]
    1cd0:	00327469 	eorseq	r7, r2, r9, ror #8
    1cd4:	69637361 	stmdbvs	r3!, {r0, r5, r6, r8, r9, ip, sp, lr}^
    1cd8:	65725f69 	ldrbvs	r5, [r2, #-3945]!	; 0xfffff097
    1cdc:	645f6461 	ldrbvs	r6, [pc], #-1121	; 1ce4 <startup-0x1fffe31c>
    1ce0:	00617461 	rsbeq	r7, r1, r1, ror #8
    1ce4:	5f746573 	svcpl	0x00746573
    1ce8:	615f7075 	cmpvs	pc, r5, ror r0	; <UNPREDICTABLE>
    1cec:	69696373 	stmdbvs	r9!, {r0, r1, r4, r5, r6, r8, r9, sp, lr}^
    1cf0:	63736100 	cmnvs	r3, #0, 2
    1cf4:	695f6969 	ldmdbvs	pc, {r0, r3, r5, r6, r8, fp, sp, lr}^	; <UNPREDICTABLE>
    1cf8:	0074696e 	rsbseq	r6, r4, lr, ror #18
    1cfc:	756c6f63 	strbvc	r6, [ip, #-3939]!	; 0xfffff09d
    1d00:	63006e6d 	movwvs	r6, #3693	; 0xe6d
    1d04:	7261656c 	rsbvc	r6, r1, #108, 10	; 0x1b000000
    1d08:	6373615f 	cmnvs	r3, #-1073741801	; 0xc0000017
    1d0c:	61006969 	tstvs	r0, r9, ror #18
    1d10:	69696373 	stmdbvs	r9!, {r0, r1, r4, r5, r6, r8, r9, sp, lr}^
    1d14:	6972775f 	ldmdbvs	r2!, {r0, r1, r2, r3, r4, r6, r8, r9, sl, ip, sp, lr}^
    1d18:	705f6574 	subsvc	r6, pc, r4, ror r5	; <UNPREDICTABLE>
    1d1c:	00747261 	rsbseq	r7, r4, r1, ror #4
    1d20:	69637361 	stmdbvs	r3!, {r0, r5, r6, r8, r9, ip, sp, lr}^
    1d24:	65725f69 	ldrbvs	r5, [r2, #-3945]!	; 0xfffff097
    1d28:	635f6461 	cmpvs	pc, #1627389952	; 0x61000000
    1d2c:	72746e6f 	rsbsvc	r6, r4, #1776	; 0x6f0
    1d30:	656c6c6f 	strbvs	r6, [ip, #-3183]!	; 0xfffff391
    1d34:	73610072 	cmnvc	r1, #114	; 0x72
    1d38:	5f696963 	svcpl	0x00696963
    1d3c:	6c727463 	cfldrdvs	mvd7, [r2], #-396	; 0xfffffe74
    1d40:	7469625f 	strbtvc	r6, [r9], #-607	; 0xfffffda1
    1d44:	7465735f 	strbtvc	r7, [r5], #-863	; 0xfffffca1
    1d48:	63736100 	cmnvs	r3, #0, 2
    1d4c:	775f6969 	ldrbvc	r6, [pc, -r9, ror #18]
    1d50:	65746972 	ldrbvs	r6, [r4, #-2418]!	; 0xfffff68e
    1d54:	646d635f 	strbtvs	r6, [sp], #-863	; 0xfffffca1
    1d58:	73657400 	cmnvc	r5, #0, 8
    1d5c:	74003174 	strvc	r3, [r0], #-372	; 0xfffffe8c
    1d60:	32747365 	rsbscc	r7, r4, #-1811939327	; 0x94000001
    1d64:	64646100 	strbtvs	r6, [r4], #-256	; 0xffffff00
    1d68:	73736572 	cmnvc	r3, #478150656	; 0x1c800000
    1d6c:	63736100 	cmnvs	r3, #0, 2
    1d70:	775f6969 	ldrbvc	r6, [pc, -r9, ror #18]
    1d74:	65746972 	ldrbvs	r6, [r4, #-2418]!	; 0xfffff68e
    1d78:	7461645f 	strbtvc	r6, [r1], #-1119	; 0xfffffba1
    1d7c:	73610061 	cmnvc	r1, #97	; 0x61
    1d80:	5f696963 	svcpl	0x00696963
    1d84:	74736574 	ldrbtvc	r6, [r3], #-1396	; 0xfffffa8c
    1d88:	63736100 	cmnvs	r3, #0, 2
    1d8c:	725f6969 	subsvc	r6, pc, #1720320	; 0x1a4000
    1d90:	5f646165 	svcpl	0x00646165
    1d94:	74617473 	strbtvc	r7, [r1], #-1139	; 0xfffffb8d
    1d98:	61007375 	tstvs	r0, r5, ror r3
    1d9c:	69696373 	stmdbvs	r9!, {r0, r1, r4, r5, r6, r8, r9, sp, lr}^
    1da0:	7274635f 	rsbsvc	r6, r4, #2080374785	; 0x7c000001
    1da4:	69625f6c 	stmdbvs	r2!, {r2, r3, r5, r6, r8, r9, sl, fp, ip, lr}^
    1da8:	6c635f74 	stclvs	15, cr5, [r3], #-464	; 0xfffffe30
    1dac:	00726165 	rsbseq	r6, r2, r5, ror #2
    1db0:	69637361 	stmdbvs	r3!, {r0, r5, r6, r8, r9, ip, sp, lr}^
    1db4:	72775f69 	rsbsvc	r5, r7, #420	; 0x1a4
    1db8:	00657469 	rsbeq	r7, r5, r9, ror #8
    1dbc:	69637361 	stmdbvs	r3!, {r0, r5, r6, r8, r9, ip, sp, lr}^
    1dc0:	6f675f69 	svcvs	0x00675f69
    1dc4:	59586f54 	ldmdbpl	r8, {r2, r4, r6, r8, r9, sl, fp, sp, lr}^
    1dc8:	63736100 	cmnvs	r3, #0, 2
    1dcc:	775f6969 	ldrbvc	r6, [pc, -r9, ror #18]
    1dd0:	65746972 	ldrbvs	r6, [r4, #-2418]!	; 0xfffff68e
    1dd4:	6e6f635f 	mcrvs	3, 3, r6, cr15, cr15, {2}
    1dd8:	6c6f7274 	sfmvs	f7, 2, [pc], #-464	; 1c10 <startup-0x1fffe3f0>
    1ddc:	0072656c 	rsbseq	r6, r2, ip, ror #10
    1de0:	69637361 	stmdbvs	r3!, {r0, r5, r6, r8, r9, ip, sp, lr}^
    1de4:	72775f69 	rsbsvc	r5, r7, #420	; 0x1a4
    1de8:	5f657469 	svcpl	0x00657469
    1dec:	72616863 	rsbvc	r6, r1, #6488064	; 0x630000
    1df0:	6d696c00 	stclvs	12, cr6, [r9, #-0]
    1df4:	00317469 	eorseq	r7, r1, r9, ror #8
    1df8:	6d2f3a43 	vstmdbvs	pc!, {s6-s72}
    1dfc:	632f706f 			; <UNDEFINED> instruction: 0x632f706f
    1e00:	706f4d2f 	rsbvc	r4, pc, pc, lsr #26
    1e04:	6f62616c 	svcvs	0x0062616c
    1e08:	69746172 	ldmdbvs	r4!, {r1, r4, r5, r6, r8, sp, lr}^
    1e0c:	72656e6f 	rsbvc	r6, r5, #1776	; 0x6f0
    1e10:	5049442f 	subpl	r4, r9, pc, lsr #8
    1e14:	69572d73 	ldmdbvs	r7, {r0, r1, r4, r5, r6, r8, sl, fp, sp}^
    1e18:	2f686374 	svccs	0x00686374
    1e1c:	73612f43 	cmnvc	r1, #268	; 0x10c
    1e20:	5f696963 	svcpl	0x00696963
    1e24:	70736964 	rsbsvc	r6, r3, r4, ror #18
    1e28:	2e79616c 	rpwcsez	f6, f1, #4.0
    1e2c:	6e690063 	cdpvs	0, 6, cr0, cr9, cr3, {3}
    1e30:	735f7469 	cmpvc	pc, #1761607680	; 0x69000000
    1e34:	5f776f6c 	svcpl	0x00776f6c
    1e38:	74786574 	ldrbtvc	r6, [r8], #-1396	; 0xfffffa8c
    1e3c:	6e656c00 	cdpvs	12, 6, cr6, cr5, cr0, {0}
    1e40:	5f687467 	svcpl	0x00687467
    1e44:	725f666f 	subsvc	r6, pc, #116391936	; 0x6f00000
    1e48:	0031776f 	eorseq	r7, r1, pc, ror #14
    1e4c:	6d2f3a43 	vstmdbvs	pc!, {s6-s72}
    1e50:	632f706f 			; <UNDEFINED> instruction: 0x632f706f
    1e54:	706f4d2f 	rsbvc	r4, pc, pc, lsr #26
    1e58:	6f62616c 	svcvs	0x0062616c
    1e5c:	69746172 	ldmdbvs	r4!, {r1, r4, r5, r6, r8, sp, lr}^
    1e60:	72656e6f 	rsbvc	r6, r5, #1776	; 0x6f0
    1e64:	5049442f 	subpl	r4, r9, pc, lsr #8
    1e68:	69572d73 	ldmdbvs	r7, {r0, r1, r4, r5, r6, r8, sl, fp, sp}^
    1e6c:	2f686374 	svccs	0x00686374
    1e70:	6c732f43 	ldclvs	15, cr2, [r3], #-268	; 0xfffffef4
    1e74:	745f776f 	ldrbvc	r7, [pc], #-1903	; 1e7c <startup-0x1fffe184>
    1e78:	2e747865 	cdpcs	8, 7, cr7, cr4, cr5, {3}
    1e7c:	6e690063 	cdpvs	0, 6, cr0, cr9, cr3, {3}
    1e80:	726f6f64 	rsbvc	r6, pc, #100, 30	; 0x190
    1e84:	616d4973 	smcvs	54419	; 0xd493
    1e88:	69006567 	stmdbvs	r0, {r0, r1, r2, r5, r6, r8, sl, sp, lr}
    1e8c:	6f6f646e 	svcvs	0x006f646e
    1e90:	6c427372 	mcrrvs	3, 7, r7, r2, cr2
    1e94:	006b6361 	rsbeq	r6, fp, r1, ror #6
    1e98:	6f646e69 	svcvs	0x00646e69
    1e9c:	4973726f 	ldmdbmi	r3!, {r0, r1, r2, r3, r5, r6, r9, ip, sp, lr}^
    1ea0:	6567616d 	strbvs	r6, [r7, #-365]!	; 0xfffffe93
    1ea4:	6e690073 	mcrvs	0, 3, r0, cr9, cr3, {3}
    1ea8:	726f6f64 	rsbvc	r6, pc, #100, 30	; 0x190
    1eac:	696c5f73 	stmdbvs	ip!, {r0, r1, r4, r5, r6, r8, r9, sl, fp, ip, lr}^
    1eb0:	5f746867 	svcpl	0x00746867
    1eb4:	73746962 	cmnvc	r4, #1605632	; 0x188000
    1eb8:	6d657400 	cfstrdvs	mvd7, [r5, #-0]
    1ebc:	646e4970 	strbtvs	r4, [lr], #-2416	; 0xfffff690
    1ec0:	73726f6f 	cmnvc	r2, #444	; 0x1bc
    1ec4:	79617247 	stmdbvc	r1!, {r0, r1, r2, r6, r9, ip, sp, lr}^
    1ec8:	646e6900 	strbtvs	r6, [lr], #-2304	; 0xfffff700
    1ecc:	73726f6f 	cmnvc	r2, #444	; 0x1bc
    1ed0:	6172675f 	cmnvs	r2, pc, asr r7
    1ed4:	69625f79 	stmdbvs	r2!, {r0, r3, r4, r5, r6, r8, r9, sl, fp, ip, lr}^
    1ed8:	74007374 	strvc	r7, [r0], #-884	; 0xfffffc8c
    1edc:	49706d65 	ldmdbmi	r0!, {r0, r2, r5, r6, r8, sl, fp, sp, lr}^
    1ee0:	6f6f646e 	svcvs	0x006f646e
    1ee4:	694c7372 	stmdbvs	ip, {r1, r4, r5, r6, r8, r9, ip, sp, lr}^
    1ee8:	00746867 	rsbseq	r6, r4, r7, ror #16
    1eec:	6f646e69 	svcvs	0x00646e69
    1ef0:	4c73726f 	lfmmi	f7, 2, [r3], #-444	; 0xfffffe44
    1ef4:	74686769 	strbtvc	r6, [r8], #-1897	; 0xfffff897
    1ef8:	2f3a4300 	svccs	0x003a4300
    1efc:	2f706f6d 	svccs	0x00706f6d
    1f00:	6f4d2f63 	svcvs	0x004d2f63
    1f04:	62616c70 	rsbvs	r6, r1, #112, 24	; 0x7000
    1f08:	7461726f 	strbtvc	r7, [r1], #-623	; 0xfffffd91
    1f0c:	656e6f69 	strbvs	r6, [lr, #-3945]!	; 0xfffff097
    1f10:	49442f72 	stmdbmi	r4, {r1, r4, r5, r6, r8, r9, sl, fp, sp}^
    1f14:	572d7350 			; <UNDEFINED> instruction: 0x572d7350
    1f18:	68637469 	stmdavs	r3!, {r0, r3, r5, r6, sl, ip, sp, lr}^
    1f1c:	692f432f 	stmdbvs	pc!, {r0, r1, r2, r3, r5, r8, r9, lr}	; <UNPREDICTABLE>
    1f20:	6f6f646e 	svcvs	0x006f646e
    1f24:	632e7372 			; <UNDEFINED> instruction: 0x632e7372
    1f28:	646e6900 	strbtvs	r6, [lr], #-2304	; 0xfffff700
    1f2c:	73726f6f 	cmnvc	r2, #444	; 0x1bc
    1f30:	616c625f 	cmnvs	ip, pc, asr r2
    1f34:	625f6b63 	subsvs	r6, pc, #101376	; 0x18c00
    1f38:	00737469 	rsbseq	r7, r3, r9, ror #8
    1f3c:	706d6574 	rsbvc	r6, sp, r4, ror r5
    1f40:	6f646e49 	svcvs	0x00646e49
    1f44:	4273726f 	rsbsmi	r7, r3, #-268435450	; 0xf0000006
    1f48:	6b63616c 	blvs	18da500 <startup-0x1e725b00>
    1f4c:	696e6900 	stmdbvs	lr!, {r8, fp, sp, lr}^
    1f50:	6e695f74 	mcrvs	15, 3, r5, cr9, cr4, {3}
    1f54:	726f6f64 	rsbvc	r6, pc, #100, 30	; 0x190
    1f58:	6e690073 	mcrvs	0, 3, r0, cr9, cr3, {3}
    1f5c:	726f6f64 	rsbvc	r6, pc, #100, 30	; 0x190
    1f60:	6a624f73 	bvs	1895d34 <startup-0x1e76a2cc>
    1f64:	646e6900 	strbtvs	r6, [lr], #-2304	; 0xfffff700
    1f68:	73726f6f 	cmnvc	r2, #444	; 0x1bc
    1f6c:	79617247 	stmdbvc	r1!, {r0, r1, r2, r6, r9, ip, sp, lr}^
    1f70:	646e6900 	strbtvs	r6, [lr], #-2304	; 0xfffff700
    1f74:	73726f6f 	cmnvc	r2, #444	; 0x1bc
    1f78:	67694c32 			; <UNDEFINED> instruction: 0x67694c32
    1f7c:	69007468 	stmdbvs	r0, {r3, r5, r6, sl, ip, sp, lr}
    1f80:	6f6f646e 	svcvs	0x006f646e
    1f84:	5f327372 	svcpl	0x00327372
    1f88:	63616c62 	cmnvs	r1, #25088	; 0x6200
    1f8c:	69625f6b 	stmdbvs	r2!, {r0, r1, r3, r5, r6, r8, r9, sl, fp, ip, lr}^
    1f90:	74007374 	strvc	r7, [r0], #-884	; 0xfffffc8c
    1f94:	49706d65 	ldmdbmi	r0!, {r0, r2, r5, r6, r8, sl, fp, sp, lr}^
    1f98:	6f6f646e 	svcvs	0x006f646e
    1f9c:	4c327372 	ldcmi	3, cr7, [r2], #-456	; 0xfffffe38
    1fa0:	74686769 	strbtvc	r6, [r8], #-1897	; 0xfffff897
    1fa4:	646e6900 	strbtvs	r6, [lr], #-2304	; 0xfffff700
    1fa8:	73726f6f 	cmnvc	r2, #444	; 0x1bc
    1fac:	61724732 	cmnvs	r2, r2, lsr r7
    1fb0:	3a430079 	bcc	10c219c <startup-0x1ef3de64>
    1fb4:	706f6d2f 	rsbvc	r6, pc, pc, lsr #26
    1fb8:	4d2f632f 	stcmi	3, cr6, [pc, #-188]!	; 1f04 <startup-0x1fffe0fc>
    1fbc:	616c706f 	cmnvs	ip, pc, rrx
    1fc0:	61726f62 	cmnvs	r2, r2, ror #30
    1fc4:	6e6f6974 			; <UNDEFINED> instruction: 0x6e6f6974
    1fc8:	442f7265 	strtmi	r7, [pc], #-613	; 1fd0 <startup-0x1fffe030>
    1fcc:	2d735049 	ldclcs	0, cr5, [r3, #-292]!	; 0xfffffedc
    1fd0:	63746957 	cmnvs	r4, #1425408	; 0x15c000
    1fd4:	2f432f68 	svccs	0x00432f68
    1fd8:	6f646e69 	svcvs	0x00646e69
    1fdc:	3273726f 	rsbscc	r7, r3, #-268435450	; 0xf0000006
    1fe0:	7400632e 	strvc	r6, [r0], #-814	; 0xfffffcd2
    1fe4:	49706d65 	ldmdbmi	r0!, {r0, r2, r5, r6, r8, sl, fp, sp, lr}^
    1fe8:	6f6f646e 	svcvs	0x006f646e
    1fec:	42327372 	eorsmi	r7, r2, #-939524095	; 0xc8000001
    1ff0:	6b63616c 	blvs	18da5a8 <startup-0x1e725a58>
    1ff4:	646e6900 	strbtvs	r6, [lr], #-2304	; 0xfffff700
    1ff8:	73726f6f 	cmnvc	r2, #444	; 0x1bc
    1ffc:	616c4232 	cmnvs	ip, r2, lsr r2
    2000:	69006b63 	stmdbvs	r0, {r0, r1, r5, r6, r8, r9, fp, sp, lr}
    2004:	6f6f646e 	svcvs	0x006f646e
    2008:	49327372 	ldmdbmi	r2!, {r1, r4, r5, r6, r8, r9, ip, sp, lr}
    200c:	6567616d 	strbvs	r6, [r7, #-365]!	; 0xfffffe93
    2010:	696e6900 	stmdbvs	lr!, {r8, fp, sp, lr}^
    2014:	6e695f74 	mcrvs	15, 3, r5, cr9, cr4, {3}
    2018:	726f6f64 	rsbvc	r6, pc, #100, 30	; 0x190
    201c:	69003273 	stmdbvs	r0, {r0, r1, r4, r5, r6, r9, ip, sp}
    2020:	6f6f646e 	svcvs	0x006f646e
    2024:	5f327372 	svcpl	0x00327372
    2028:	6867696c 	stmdavs	r7!, {r2, r3, r5, r6, r8, fp, sp, lr}^
    202c:	69625f74 	stmdbvs	r2!, {r2, r4, r5, r6, r8, r9, sl, fp, ip, lr}^
    2030:	69007374 	stmdbvs	r0, {r2, r4, r5, r6, r8, r9, ip, sp, lr}
    2034:	6f6f646e 	svcvs	0x006f646e
    2038:	49327372 	ldmdbmi	r2!, {r1, r4, r5, r6, r8, r9, ip, sp, lr}
    203c:	6567616d 	strbvs	r6, [r7, #-365]!	; 0xfffffe93
    2040:	6e690073 	mcrvs	0, 3, r0, cr9, cr3, {3}
    2044:	726f6f64 	rsbvc	r6, pc, #100, 30	; 0x190
    2048:	675f3273 			; <UNDEFINED> instruction: 0x675f3273
    204c:	5f796172 	svcpl	0x00796172
    2050:	73746962 	cmnvc	r4, #1605632	; 0x188000
    2054:	646e6900 	strbtvs	r6, [lr], #-2304	; 0xfffff700
    2058:	73726f6f 	cmnvc	r2, #444	; 0x1bc
    205c:	6a624f32 	bvs	1895d2c <startup-0x1e76a2d4>
    2060:	6d657400 	cfstrdvs	mvd7, [r5, #-0]
    2064:	646e4970 	strbtvs	r4, [lr], #-2416	; 0xfffff690
    2068:	73726f6f 	cmnvc	r2, #444	; 0x1bc
    206c:	61724732 	cmnvs	r2, r2, lsr r7
    2070:	3a430079 	bcc	10c225c <startup-0x1ef3dda4>
    2074:	706f6d2f 	rsbvc	r6, pc, pc, lsr #26
    2078:	4d2f632f 	stcmi	3, cr6, [pc, #-188]!	; 1fc4 <startup-0x1fffe03c>
    207c:	616c706f 	cmnvs	ip, pc, rrx
    2080:	61726f62 	cmnvs	r2, r2, ror #30
    2084:	6e6f6974 			; <UNDEFINED> instruction: 0x6e6f6974
    2088:	442f7265 	strtmi	r7, [pc], #-613	; 2090 <startup-0x1fffdf70>
    208c:	2d735049 	ldclcs	0, cr5, [r3, #-292]!	; 0xfffffedc
    2090:	63746957 	cmnvs	r4, #1425408	; 0x15c000
    2094:	2f432f68 	svccs	0x00432f68
    2098:	706f7274 	rsbvc	r7, pc, r4, ror r2	; <UNPREDICTABLE>
    209c:	632e7968 			; <UNDEFINED> instruction: 0x632e7968
    20a0:	6f727400 	svcvs	0x00727400
    20a4:	5f796870 	svcpl	0x00796870
    20a8:	63616c62 	cmnvs	r1, #25088	; 0x6200
    20ac:	69625f6b 	stmdbvs	r2!, {r0, r1, r3, r5, r6, r8, r9, sl, fp, ip, lr}^
    20b0:	74007374 	strvc	r7, [r0], #-884	; 0xfffffc8c
    20b4:	68706f72 	ldmdavs	r0!, {r1, r4, r5, r6, r8, r9, sl, fp, sp, lr}^
    20b8:	67694c79 			; <UNDEFINED> instruction: 0x67694c79
    20bc:	74007468 	strvc	r7, [r0], #-1128	; 0xfffffb98
    20c0:	68706f72 	ldmdavs	r0!, {r1, r4, r5, r6, r8, r9, sl, fp, sp, lr}^
    20c4:	6a624f79 	bvs	1895eb0 <startup-0x1e76a150>
    20c8:	6f727400 	svcvs	0x00727400
    20cc:	5f796870 	svcpl	0x00796870
    20d0:	6867696c 	stmdavs	r7!, {r2, r3, r5, r6, r8, fp, sp, lr}^
    20d4:	69625f74 	stmdbvs	r2!, {r2, r4, r5, r6, r8, r9, sl, fp, ip, lr}^
    20d8:	74007374 	strvc	r7, [r0], #-884	; 0xfffffc8c
    20dc:	54706d65 	ldrbtpl	r6, [r0], #-3429	; 0xfffff29b
    20e0:	68706f72 	ldmdavs	r0!, {r1, r4, r5, r6, r8, r9, sl, fp, sp, lr}^
    20e4:	616c4279 	smcvs	50217	; 0xc429
    20e8:	74006b63 	strvc	r6, [r0], #-2915	; 0xfffff49d
    20ec:	68706f72 	ldmdavs	r0!, {r1, r4, r5, r6, r8, r9, sl, fp, sp, lr}^
    20f0:	72675f79 	rsbvc	r5, r7, #484	; 0x1e4
    20f4:	625f7961 	subsvs	r7, pc, #1589248	; 0x184000
    20f8:	00737469 	rsbseq	r7, r3, r9, ror #8
    20fc:	706d6574 	rsbvc	r6, sp, r4, ror r5
    2100:	706f7254 	rsbvc	r7, pc, r4, asr r2	; <UNPREDICTABLE>
    2104:	694c7968 	stmdbvs	ip, {r3, r5, r6, r8, fp, ip, sp, lr}^
    2108:	00746867 	rsbseq	r6, r4, r7, ror #16
    210c:	706f7274 	rsbvc	r7, pc, r4, ror r2	; <UNPREDICTABLE>
    2110:	72477968 	subvc	r7, r7, #104, 18	; 0x1a0000
    2114:	74007961 	strvc	r7, [r0], #-2401	; 0xfffff69f
    2118:	68706f72 	ldmdavs	r0!, {r1, r4, r5, r6, r8, r9, sl, fp, sp, lr}^
    211c:	616d4979 	smcvs	54425	; 0xd499
    2120:	00736567 	rsbseq	r6, r3, r7, ror #10
    2124:	706f7274 	rsbvc	r7, pc, r4, ror r2	; <UNPREDICTABLE>
    2128:	6d497968 	vstrvs.16	s15, [r9, #-208]	; 0xffffff30	; <UNPREDICTABLE>
    212c:	00656761 	rsbeq	r6, r5, r1, ror #14
    2130:	706f7274 	rsbvc	r7, pc, r4, ror r2	; <UNPREDICTABLE>
    2134:	6c427968 	mcrrvs	9, 6, r7, r2, cr8	; <UNPREDICTABLE>
    2138:	006b6361 	rsbeq	r6, fp, r1, ror #6
    213c:	706d6574 	rsbvc	r6, sp, r4, ror r5
    2140:	706f7254 	rsbvc	r7, pc, r4, asr r2	; <UNPREDICTABLE>
    2144:	72477968 	subvc	r7, r7, #104, 18	; 0x1a0000
    2148:	72007961 	andvc	r7, r0, #1589248	; 0x184000
    214c:	7265676f 	rsbvc	r6, r5, #29097984	; 0x1bc0000
    2150:	616c625f 	cmnvs	ip, pc, asr r2
    2154:	625f6b63 	subsvs	r6, pc, #101376	; 0x18c00
    2158:	00737469 	rsbseq	r7, r3, r9, ror #8
    215c:	74696e69 	strbtvc	r6, [r9], #-3689	; 0xfffff197
    2160:	676f725f 			; <UNDEFINED> instruction: 0x676f725f
    2164:	72007265 	andvc	r7, r0, #1342177286	; 0x50000006
    2168:	7265676f 	rsbvc	r6, r5, #29097984	; 0x1bc0000
    216c:	006a624f 	rsbeq	r6, sl, pc, asr #4
    2170:	6d2f3a43 	vstmdbvs	pc!, {s6-s72}
    2174:	632f706f 			; <UNDEFINED> instruction: 0x632f706f
    2178:	706f4d2f 	rsbvc	r4, pc, pc, lsr #26
    217c:	6f62616c 	svcvs	0x0062616c
    2180:	69746172 	ldmdbvs	r4!, {r1, r4, r5, r6, r8, sp, lr}^
    2184:	72656e6f 	rsbvc	r6, r5, #1776	; 0x6f0
    2188:	5049442f 	subpl	r4, r9, pc, lsr #8
    218c:	69572d73 	ldmdbvs	r7, {r0, r1, r4, r5, r6, r8, sl, fp, sp}^
    2190:	2f686374 	svccs	0x00686374
    2194:	6f722f43 	svcvs	0x00722f43
    2198:	2e726567 	cdpcs	5, 7, cr6, cr2, cr7, {3}
    219c:	65740063 	ldrbvs	r0, [r4, #-99]!	; 0xffffff9d
    21a0:	6f52706d 	svcvs	0x0052706d
    21a4:	47726567 	ldrbmi	r6, [r2, -r7, ror #10]!
    21a8:	00796172 	rsbseq	r6, r9, r2, ror r1
    21ac:	706d6574 	rsbvc	r6, sp, r4, ror r5
    21b0:	65676f52 	strbvs	r6, [r7, #-3922]!	; 0xfffff0ae
    21b4:	616c4272 	smcvs	50210	; 0xc422
    21b8:	72006b63 	andvc	r6, r0, #101376	; 0x18c00
    21bc:	7265676f 	rsbvc	r6, r5, #29097984	; 0x1bc0000
    21c0:	6172675f 	cmnvs	r2, pc, asr r7
    21c4:	69625f79 	stmdbvs	r2!, {r0, r3, r4, r5, r6, r8, r9, sl, fp, ip, lr}^
    21c8:	72007374 	andvc	r7, r0, #116, 6	; 0xd0000001
    21cc:	7265676f 	rsbvc	r6, r5, #29097984	; 0x1bc0000
    21d0:	67616d49 	strbvs	r6, [r1, -r9, asr #26]!
    21d4:	72007365 	andvc	r7, r0, #-1811939327	; 0x94000001
    21d8:	7265676f 	rsbvc	r6, r5, #29097984	; 0x1bc0000
    21dc:	79617247 	stmdbvc	r1!, {r0, r1, r2, r6, r9, ip, sp, lr}^
    21e0:	676f7200 	strbvs	r7, [pc, -r0, lsl #4]!
    21e4:	694c7265 	stmdbvs	ip, {r0, r2, r5, r6, r9, ip, sp, lr}^
    21e8:	00746867 	rsbseq	r6, r4, r7, ror #16
    21ec:	65676f72 	strbvs	r6, [r7, #-3954]!	; 0xfffff08e
    21f0:	696c5f72 	stmdbvs	ip!, {r1, r4, r5, r6, r8, r9, sl, fp, ip, lr}^
    21f4:	5f746867 	svcpl	0x00746867
    21f8:	73746962 	cmnvc	r4, #1605632	; 0x188000
    21fc:	676f7200 	strbvs	r7, [pc, -r0, lsl #4]!
    2200:	6d497265 	sfmvs	f7, 2, [r9, #-404]	; 0xfffffe6c
    2204:	00656761 	rsbeq	r6, r5, r1, ror #14
    2208:	65676f72 	strbvs	r6, [r7, #-3954]!	; 0xfffff08e
    220c:	616c4272 	smcvs	50210	; 0xc422
    2210:	74006b63 	strvc	r6, [r0], #-2915	; 0xfffff49d
    2214:	52706d65 	rsbspl	r6, r0, #6464	; 0x1940
    2218:	7265676f 	rsbvc	r6, r5, #29097984	; 0x1bc0000
    221c:	6867694c 	stmdavs	r7!, {r2, r3, r6, r8, fp, sp, lr}^
    2220:	61670074 	smcvs	28676	; 0x7004
    2224:	6f5f656d 	svcvs	0x005f656d
    2228:	5f726576 	svcpl	0x00726576
    222c:	63746977 	cmnvs	r4, #1949696	; 0x1dc000
    2230:	6d493468 	cfstrdvs	mvd3, [r9, #-416]	; 0xfffffe60
    2234:	00656761 	rsbeq	r6, r5, r1, ror #14
    2238:	656d6167 	strbvs	r6, [sp, #-359]!	; 0xfffffe99
    223c:	65766f5f 	ldrbvs	r6, [r6, #-3935]!	; 0xfffff0a1
    2240:	69775f72 	ldmdbvs	r7!, {r1, r4, r5, r6, r8, r9, sl, fp, ip, lr}^
    2244:	36686374 			; <UNDEFINED> instruction: 0x36686374
    2248:	67696c5f 			; <UNDEFINED> instruction: 0x67696c5f
    224c:	625f7468 	subsvs	r7, pc, #104, 8	; 0x68000000
    2250:	00737469 	rsbseq	r7, r3, r9, ror #8
    2254:	74696e69 	strbtvc	r6, [r9], #-3689	; 0xfffff197
    2258:	6d61675f 	stclvs	7, cr6, [r1, #-380]!	; 0xfffffe84
    225c:	766f5f65 	strbtvc	r5, [pc], -r5, ror #30
    2260:	775f7265 	ldrbvc	r7, [pc, -r5, ror #4]
    2264:	68637469 	stmdavs	r3!, {r0, r3, r5, r6, sl, ip, sp, lr}^
    2268:	6d616700 	stclvs	7, cr6, [r1, #-0]
    226c:	766f5f65 	strbtvc	r5, [pc], -r5, ror #30
    2270:	775f7265 	ldrbvc	r7, [pc, -r5, ror #4]
    2274:	68637469 	stmdavs	r3!, {r0, r3, r5, r6, sl, ip, sp, lr}^
    2278:	6c625f31 	stclvs	15, cr5, [r2], #-196	; 0xffffff3c
    227c:	5f6b6361 	svcpl	0x006b6361
    2280:	73746962 	cmnvc	r4, #1605632	; 0x188000
    2284:	2f3a4300 	svccs	0x003a4300
    2288:	2f706f6d 	svccs	0x00706f6d
    228c:	6f4d2f63 	svcvs	0x004d2f63
    2290:	62616c70 	rsbvs	r6, r1, #112, 24	; 0x7000
    2294:	7461726f 	strbtvc	r7, [r1], #-623	; 0xfffffd91
    2298:	656e6f69 	strbvs	r6, [lr, #-3945]!	; 0xfffff097
    229c:	49442f72 	stmdbmi	r4, {r1, r4, r5, r6, r8, r9, sl, fp, sp}^
    22a0:	572d7350 			; <UNDEFINED> instruction: 0x572d7350
    22a4:	68637469 	stmdavs	r3!, {r0, r3, r5, r6, sl, ip, sp, lr}^
    22a8:	672f432f 	strvs	r4, [pc, -pc, lsr #6]!
    22ac:	5f656d61 	svcpl	0x00656d61
    22b0:	7265766f 	rsbvc	r7, r5, #116391936	; 0x6f00000
    22b4:	7469775f 	strbtvc	r7, [r9], #-1887	; 0xfffff8a1
    22b8:	632e6863 			; <UNDEFINED> instruction: 0x632e6863
    22bc:	6d616700 	stclvs	7, cr6, [r1, #-0]
    22c0:	766f5f65 	strbtvc	r5, [pc], -r5, ror #30
    22c4:	775f7265 	ldrbvc	r7, [pc, -r5, ror #4]
    22c8:	68637469 	stmdavs	r3!, {r0, r3, r5, r6, sl, ip, sp, lr}^
    22cc:	72675f32 	rsbvc	r5, r7, #50, 30	; 0xc8
    22d0:	625f7961 	subsvs	r7, pc, #1589248	; 0x184000
    22d4:	00737469 	rsbseq	r7, r3, r9, ror #8
    22d8:	656d6167 	strbvs	r6, [sp, #-359]!	; 0xfffffe99
    22dc:	65766f5f 	ldrbvs	r6, [r6, #-3935]!	; 0xfffff0a1
    22e0:	69775f72 	ldmdbvs	r7!, {r1, r4, r5, r6, r8, r9, sl, fp, ip, lr}^
    22e4:	32686374 	rsbcc	r6, r8, #116, 6	; 0xd0000001
    22e8:	616c625f 	cmnvs	ip, pc, asr r2
    22ec:	625f6b63 	subsvs	r6, pc, #101376	; 0x18c00
    22f0:	00737469 	rsbseq	r7, r3, r9, ror #8
    22f4:	656d6167 	strbvs	r6, [sp, #-359]!	; 0xfffffe99
    22f8:	65766f5f 	ldrbvs	r6, [r6, #-3935]!	; 0xfffff0a1
    22fc:	69775f72 	ldmdbvs	r7!, {r1, r4, r5, r6, r8, r9, sl, fp, ip, lr}^
    2300:	31686374 	smccc	34356	; 0x8634
    2304:	67616d49 	strbvs	r6, [r1, -r9, asr #26]!
    2308:	61670065 	cmnvs	r7, r5, rrx
    230c:	6f5f656d 	svcvs	0x005f656d
    2310:	5f726576 	svcpl	0x00726576
    2314:	63746977 	cmnvs	r4, #1949696	; 0x1dc000
    2318:	625f3368 	subsvs	r3, pc, #104, 6	; 0xa0000001
    231c:	6b63616c 	blvs	18da8d4 <startup-0x1e72572c>
    2320:	7469625f 	strbtvc	r6, [r9], #-607	; 0xfffffda1
    2324:	61670073 	smcvs	28675	; 0x7003
    2328:	6f5f656d 	svcvs	0x005f656d
    232c:	5f726576 	svcpl	0x00726576
    2330:	63746977 	cmnvs	r4, #1949696	; 0x1dc000
    2334:	625f3468 	subsvs	r3, pc, #104, 8	; 0x68000000
    2338:	6b63616c 	blvs	18da8f0 <startup-0x1e725710>
    233c:	7469625f 	strbtvc	r6, [r9], #-607	; 0xfffffda1
    2340:	65740073 	ldrbvs	r0, [r4, #-115]!	; 0xffffff8d
    2344:	6167706d 	cmnvs	r7, sp, rrx
    2348:	6f5f656d 	svcvs	0x005f656d
    234c:	5f726576 	svcpl	0x00726576
    2350:	63746977 	cmnvs	r4, #1949696	; 0x1dc000
    2354:	616c4268 	cmnvs	ip, r8, ror #4
    2358:	74006b63 	strvc	r6, [r0], #-2915	; 0xfffff49d
    235c:	67706d65 	ldrbvs	r6, [r0, -r5, ror #26]!
    2360:	5f656d61 	svcpl	0x00656d61
    2364:	7265766f 	rsbvc	r7, r5, #116391936	; 0x6f00000
    2368:	7469775f 	strbtvc	r7, [r9], #-1887	; 0xfffff8a1
    236c:	47346863 	ldrmi	r6, [r4, -r3, ror #16]!
    2370:	00796172 	rsbseq	r6, r9, r2, ror r1
    2374:	656d6167 	strbvs	r6, [sp, #-359]!	; 0xfffffe99
    2378:	65766f5f 	ldrbvs	r6, [r6, #-3935]!	; 0xfffff0a1
    237c:	69775f72 	ldmdbvs	r7!, {r1, r4, r5, r6, r8, r9, sl, fp, ip, lr}^
    2380:	35686374 	strbcc	r6, [r8, #-884]!	; 0xfffffc8c
    2384:	6172675f 	cmnvs	r2, pc, asr r7
    2388:	69625f79 	stmdbvs	r2!, {r0, r3, r4, r5, r6, r8, r9, sl, fp, ip, lr}^
    238c:	74007374 	strvc	r7, [r0], #-884	; 0xfffffc8c
    2390:	67706d65 	ldrbvs	r6, [r0, -r5, ror #26]!
    2394:	5f656d61 	svcpl	0x00656d61
    2398:	7265766f 	rsbvc	r7, r5, #116391936	; 0x6f00000
    239c:	7469775f 	strbtvc	r7, [r9], #-1887	; 0xfffff8a1
    23a0:	694c6863 	stmdbvs	ip, {r0, r1, r5, r6, fp, sp, lr}^
    23a4:	00746867 	rsbseq	r6, r4, r7, ror #16
    23a8:	656d6167 	strbvs	r6, [sp, #-359]!	; 0xfffffe99
    23ac:	65766f5f 	ldrbvs	r6, [r6, #-3935]!	; 0xfffff0a1
    23b0:	69775f72 	ldmdbvs	r7!, {r1, r4, r5, r6, r8, r9, sl, fp, ip, lr}^
    23b4:	35686374 	strbcc	r6, [r8, #-884]!	; 0xfffffc8c
    23b8:	67696c5f 			; <UNDEFINED> instruction: 0x67696c5f
    23bc:	625f7468 	subsvs	r7, pc, #104, 8	; 0x68000000
    23c0:	00737469 	rsbseq	r7, r3, r9, ror #8
    23c4:	656d6167 	strbvs	r6, [sp, #-359]!	; 0xfffffe99
    23c8:	65766f5f 	ldrbvs	r6, [r6, #-3935]!	; 0xfffff0a1
    23cc:	69775f72 	ldmdbvs	r7!, {r1, r4, r5, r6, r8, r9, sl, fp, ip, lr}^
    23d0:	36686374 			; <UNDEFINED> instruction: 0x36686374
    23d4:	6172675f 	cmnvs	r2, pc, asr r7
    23d8:	69625f79 	stmdbvs	r2!, {r0, r3, r4, r5, r6, r8, r9, sl, fp, ip, lr}^
    23dc:	67007374 	smlsdxvs	r0, r4, r3, r7
    23e0:	5f656d61 	svcpl	0x00656d61
    23e4:	7265766f 	rsbvc	r7, r5, #116391936	; 0x6f00000
    23e8:	7469775f 	strbtvc	r7, [r9], #-1887	; 0xfffff8a1
    23ec:	42316863 	eorsmi	r6, r1, #6488064	; 0x630000
    23f0:	6b63616c 	blvs	18da9a8 <startup-0x1e725658>
    23f4:	6d657400 	cfstrdvs	mvd7, [r5, #-0]
    23f8:	6d616770 	stclvs	7, cr6, [r1, #-448]!	; 0xfffffe40
    23fc:	766f5f65 	strbtvc	r5, [pc], -r5, ror #30
    2400:	775f7265 	ldrbvc	r7, [pc, -r5, ror #4]
    2404:	68637469 	stmdavs	r3!, {r0, r3, r5, r6, sl, ip, sp, lr}^
    2408:	67694c34 			; <UNDEFINED> instruction: 0x67694c34
    240c:	67007468 	strvs	r7, [r0, -r8, ror #8]
    2410:	5f656d61 	svcpl	0x00656d61
    2414:	7265766f 	rsbvc	r7, r5, #116391936	; 0x6f00000
    2418:	7469775f 	strbtvc	r7, [r9], #-1887	; 0xfffff8a1
    241c:	49366863 	ldmdbmi	r6!, {r0, r1, r5, r6, fp, sp, lr}
    2420:	6567616d 	strbvs	r6, [r7, #-365]!	; 0xfffffe93
    2424:	6d657400 	cfstrdvs	mvd7, [r5, #-0]
    2428:	6d616770 	stclvs	7, cr6, [r1, #-448]!	; 0xfffffe40
    242c:	766f5f65 	strbtvc	r5, [pc], -r5, ror #30
    2430:	775f7265 	ldrbvc	r7, [pc, -r5, ror #4]
    2434:	68637469 	stmdavs	r3!, {r0, r3, r5, r6, sl, ip, sp, lr}^
    2438:	67694c32 			; <UNDEFINED> instruction: 0x67694c32
    243c:	74007468 	strvc	r7, [r0], #-1128	; 0xfffffb98
    2440:	67706d65 	ldrbvs	r6, [r0, -r5, ror #26]!
    2444:	5f656d61 	svcpl	0x00656d61
    2448:	7265766f 	rsbvc	r7, r5, #116391936	; 0x6f00000
    244c:	7469775f 	strbtvc	r7, [r9], #-1887	; 0xfffff8a1
    2450:	4c356863 	ldcmi	8, cr6, [r5], #-396	; 0xfffffe74
    2454:	74686769 	strbtvc	r6, [r8], #-1897	; 0xfffff897
    2458:	6d657400 	cfstrdvs	mvd7, [r5, #-0]
    245c:	6d616770 	stclvs	7, cr6, [r1, #-448]!	; 0xfffffe40
    2460:	766f5f65 	strbtvc	r5, [pc], -r5, ror #30
    2464:	775f7265 	ldrbvc	r7, [pc, -r5, ror #4]
    2468:	68637469 	stmdavs	r3!, {r0, r3, r5, r6, sl, ip, sp, lr}^
    246c:	616c4235 	cmnvs	ip, r5, lsr r2
    2470:	74006b63 	strvc	r6, [r0], #-2915	; 0xfffff49d
    2474:	67706d65 	ldrbvs	r6, [r0, -r5, ror #26]!
    2478:	5f656d61 	svcpl	0x00656d61
    247c:	7265766f 	rsbvc	r7, r5, #116391936	; 0x6f00000
    2480:	7469775f 	strbtvc	r7, [r9], #-1887	; 0xfffff8a1
    2484:	47326863 	ldrmi	r6, [r2, -r3, ror #16]!
    2488:	00796172 	rsbseq	r6, r9, r2, ror r1
    248c:	656d6167 	strbvs	r6, [sp, #-359]!	; 0xfffffe99
    2490:	65766f5f 	ldrbvs	r6, [r6, #-3935]!	; 0xfffff0a1
    2494:	69775f72 	ldmdbvs	r7!, {r1, r4, r5, r6, r8, r9, sl, fp, ip, lr}^
    2498:	35686374 	strbcc	r6, [r8, #-884]!	; 0xfffffc8c
    249c:	67616d49 	strbvs	r6, [r1, -r9, asr #26]!
    24a0:	65740065 	ldrbvs	r0, [r4, #-101]!	; 0xffffff9b
    24a4:	6167706d 	cmnvs	r7, sp, rrx
    24a8:	6f5f656d 	svcvs	0x005f656d
    24ac:	5f726576 	svcpl	0x00726576
    24b0:	63746977 	cmnvs	r4, #1949696	; 0x1dc000
    24b4:	72473568 	subvc	r3, r7, #104, 10	; 0x1a000000
    24b8:	67007961 	strvs	r7, [r0, -r1, ror #18]
    24bc:	5f656d61 	svcpl	0x00656d61
    24c0:	7265766f 	rsbvc	r7, r5, #116391936	; 0x6f00000
    24c4:	7469775f 	strbtvc	r7, [r9], #-1887	; 0xfffff8a1
    24c8:	49326863 	ldmdbmi	r2!, {r0, r1, r5, r6, fp, sp, lr}
    24cc:	6567616d 	strbvs	r6, [r7, #-365]!	; 0xfffffe93
    24d0:	6d657400 	cfstrdvs	mvd7, [r5, #-0]
    24d4:	6d616770 	stclvs	7, cr6, [r1, #-448]!	; 0xfffffe40
    24d8:	766f5f65 	strbtvc	r5, [pc], -r5, ror #30
    24dc:	775f7265 	ldrbvc	r7, [pc, -r5, ror #4]
    24e0:	68637469 	stmdavs	r3!, {r0, r3, r5, r6, sl, ip, sp, lr}^
    24e4:	616c4234 	cmnvs	ip, r4, lsr r2
    24e8:	67006b63 	strvs	r6, [r0, -r3, ror #22]
    24ec:	5f656d61 	svcpl	0x00656d61
    24f0:	7265766f 	rsbvc	r7, r5, #116391936	; 0x6f00000
    24f4:	7469775f 	strbtvc	r7, [r9], #-1887	; 0xfffff8a1
    24f8:	5f346863 	svcpl	0x00346863
    24fc:	6867696c 	stmdavs	r7!, {r2, r3, r5, r6, r8, fp, sp, lr}^
    2500:	69625f74 	stmdbvs	r2!, {r2, r4, r5, r6, r8, r9, sl, fp, ip, lr}^
    2504:	67007374 	smlsdxvs	r0, r4, r3, r7
    2508:	5f656d61 	svcpl	0x00656d61
    250c:	7265766f 	rsbvc	r7, r5, #116391936	; 0x6f00000
    2510:	7469775f 	strbtvc	r7, [r9], #-1887	; 0xfffff8a1
    2514:	5f316863 	svcpl	0x00316863
    2518:	79617267 	stmdbvc	r1!, {r0, r1, r2, r5, r6, r9, ip, sp, lr}^
    251c:	7469625f 	strbtvc	r6, [r9], #-607	; 0xfffffda1
    2520:	61670073 	smcvs	28675	; 0x7003
    2524:	6f5f656d 	svcvs	0x005f656d
    2528:	5f726576 	svcpl	0x00726576
    252c:	63746977 	cmnvs	r4, #1949696	; 0x1dc000
    2530:	6c5f3168 	ldfvse	f3, [pc], {104}	; 0x68
    2534:	74686769 	strbtvc	r6, [r8], #-1897	; 0xfffff897
    2538:	7469625f 	strbtvc	r6, [r9], #-607	; 0xfffffda1
    253c:	61670073 	smcvs	28675	; 0x7003
    2540:	6f5f656d 	svcvs	0x005f656d
    2544:	5f726576 	svcpl	0x00726576
    2548:	63746977 	cmnvs	r4, #1949696	; 0x1dc000
    254c:	625f3568 	subsvs	r3, pc, #104, 10	; 0x1a000000
    2550:	6b63616c 	blvs	18dab08 <startup-0x1e7254f8>
    2554:	7469625f 	strbtvc	r6, [r9], #-607	; 0xfffffda1
    2558:	61670073 	smcvs	28675	; 0x7003
    255c:	6f5f656d 	svcvs	0x005f656d
    2560:	5f726576 	svcpl	0x00726576
    2564:	63746977 	cmnvs	r4, #1949696	; 0x1dc000
    2568:	6c5f3268 	lfmvs	f3, 2, [pc], {104}	; 0x68
    256c:	74686769 	strbtvc	r6, [r8], #-1897	; 0xfffff897
    2570:	7469625f 	strbtvc	r6, [r9], #-607	; 0xfffffda1
    2574:	61670073 	smcvs	28675	; 0x7003
    2578:	6f5f656d 	svcvs	0x005f656d
    257c:	5f726576 	svcpl	0x00726576
    2580:	63746977 	cmnvs	r4, #1949696	; 0x1dc000
    2584:	625f3668 	subsvs	r3, pc, #104, 12	; 0x6800000
    2588:	6b63616c 	blvs	18dab40 <startup-0x1e7254c0>
    258c:	7469625f 	strbtvc	r6, [r9], #-607	; 0xfffffda1
    2590:	61670073 	smcvs	28675	; 0x7003
    2594:	6f5f656d 	svcvs	0x005f656d
    2598:	5f726576 	svcpl	0x00726576
    259c:	63746977 	cmnvs	r4, #1949696	; 0x1dc000
    25a0:	6c5f3368 	mrrcvs	3, 6, r3, pc, cr8	; <UNPREDICTABLE>
    25a4:	74686769 	strbtvc	r6, [r8], #-1897	; 0xfffff897
    25a8:	7469625f 	strbtvc	r6, [r9], #-607	; 0xfffffda1
    25ac:	61670073 	smcvs	28675	; 0x7003
    25b0:	6f5f656d 	svcvs	0x005f656d
    25b4:	5f726576 	svcpl	0x00726576
    25b8:	63746977 	cmnvs	r4, #1949696	; 0x1dc000
    25bc:	694c3168 	stmdbvs	ip, {r3, r5, r6, r8, ip, sp}^
    25c0:	00746867 	rsbseq	r6, r4, r7, ror #16
    25c4:	656d6167 	strbvs	r6, [sp, #-359]!	; 0xfffffe99
    25c8:	65766f5f 	ldrbvs	r6, [r6, #-3935]!	; 0xfffff0a1
    25cc:	69775f72 	ldmdbvs	r7!, {r1, r4, r5, r6, r8, r9, sl, fp, ip, lr}^
    25d0:	31686374 	smccc	34356	; 0x8634
    25d4:	79617247 	stmdbvc	r1!, {r0, r1, r2, r6, r9, ip, sp, lr}^
    25d8:	6d657400 	cfstrdvs	mvd7, [r5, #-0]
    25dc:	6d616770 	stclvs	7, cr6, [r1, #-448]!	; 0xfffffe40
    25e0:	766f5f65 	strbtvc	r5, [pc], -r5, ror #30
    25e4:	775f7265 	ldrbvc	r7, [pc, -r5, ror #4]
    25e8:	68637469 	stmdavs	r3!, {r0, r3, r5, r6, sl, ip, sp, lr}^
    25ec:	79617247 	stmdbvc	r1!, {r0, r1, r2, r6, r9, ip, sp, lr}^
    25f0:	6d657400 	cfstrdvs	mvd7, [r5, #-0]
    25f4:	6d616770 	stclvs	7, cr6, [r1, #-448]!	; 0xfffffe40
    25f8:	766f5f65 	strbtvc	r5, [pc], -r5, ror #30
    25fc:	775f7265 	ldrbvc	r7, [pc, -r5, ror #4]
    2600:	68637469 	stmdavs	r3!, {r0, r3, r5, r6, sl, ip, sp, lr}^
    2604:	616c4236 	cmnvs	ip, r6, lsr r2
    2608:	74006b63 	strvc	r6, [r0], #-2915	; 0xfffff49d
    260c:	67706d65 	ldrbvs	r6, [r0, -r5, ror #26]!
    2610:	5f656d61 	svcpl	0x00656d61
    2614:	7265766f 	rsbvc	r7, r5, #116391936	; 0x6f00000
    2618:	7469775f 	strbtvc	r7, [r9], #-1887	; 0xfffff8a1
    261c:	4c366863 	ldcmi	8, cr6, [r6], #-396	; 0xfffffe74
    2620:	74686769 	strbtvc	r6, [r8], #-1897	; 0xfffff897
    2624:	6d616700 	stclvs	7, cr6, [r1, #-0]
    2628:	766f5f65 	strbtvc	r5, [pc], -r5, ror #30
    262c:	775f7265 	ldrbvc	r7, [pc, -r5, ror #4]
    2630:	68637469 	stmdavs	r3!, {r0, r3, r5, r6, sl, ip, sp, lr}^
    2634:	72675f34 	rsbvc	r5, r7, #52, 30	; 0xd0
    2638:	625f7961 	subsvs	r7, pc, #1589248	; 0x184000
    263c:	00737469 	rsbseq	r7, r3, r9, ror #8
    2640:	706d6574 	rsbvc	r6, sp, r4, ror r5
    2644:	656d6167 	strbvs	r6, [sp, #-359]!	; 0xfffffe99
    2648:	65766f5f 	ldrbvs	r6, [r6, #-3935]!	; 0xfffff0a1
    264c:	69775f72 	ldmdbvs	r7!, {r1, r4, r5, r6, r8, r9, sl, fp, ip, lr}^
    2650:	33686374 	cmncc	r8, #116, 6	; 0xd0000001
    2654:	6867694c 	stmdavs	r7!, {r2, r3, r6, r8, fp, sp, lr}^
    2658:	61670074 	smcvs	28676	; 0x7004
    265c:	6f5f656d 	svcvs	0x005f656d
    2660:	5f726576 	svcpl	0x00726576
    2664:	63746977 	cmnvs	r4, #1949696	; 0x1dc000
    2668:	6d493368 	stclvs	3, cr3, [r9, #-416]	; 0xfffffe60
    266c:	00656761 	rsbeq	r6, r5, r1, ror #14
    2670:	656d6167 	strbvs	r6, [sp, #-359]!	; 0xfffffe99
    2674:	65766f5f 	ldrbvs	r6, [r6, #-3935]!	; 0xfffff0a1
    2678:	69775f72 	ldmdbvs	r7!, {r1, r4, r5, r6, r8, r9, sl, fp, ip, lr}^
    267c:	4f686374 	svcmi	0x00686374
    2680:	74006a62 	strvc	r6, [r0], #-2658	; 0xfffff59e
    2684:	67706d65 	ldrbvs	r6, [r0, -r5, ror #26]!
    2688:	5f656d61 	svcpl	0x00656d61
    268c:	7265766f 	rsbvc	r7, r5, #116391936	; 0x6f00000
    2690:	7469775f 	strbtvc	r7, [r9], #-1887	; 0xfffff8a1
    2694:	47336863 	ldrmi	r6, [r3, -r3, ror #16]!
    2698:	00796172 	rsbseq	r6, r9, r2, ror r1
    269c:	656d6167 	strbvs	r6, [sp, #-359]!	; 0xfffffe99
    26a0:	65766f5f 	ldrbvs	r6, [r6, #-3935]!	; 0xfffff0a1
    26a4:	69775f72 	ldmdbvs	r7!, {r1, r4, r5, r6, r8, r9, sl, fp, ip, lr}^
    26a8:	49686374 	stmdbmi	r8!, {r2, r4, r5, r6, r8, r9, sp, lr}^
    26ac:	6567616d 	strbvs	r6, [r7, #-365]!	; 0xfffffe93
    26b0:	65740073 	ldrbvs	r0, [r4, #-115]!	; 0xffffff8d
    26b4:	6167706d 	cmnvs	r7, sp, rrx
    26b8:	6f5f656d 	svcvs	0x005f656d
    26bc:	5f726576 	svcpl	0x00726576
    26c0:	63746977 	cmnvs	r4, #1949696	; 0x1dc000
    26c4:	72473668 	subvc	r3, r7, #104, 12	; 0x6800000
    26c8:	74007961 	strvc	r7, [r0], #-2401	; 0xfffff69f
    26cc:	67706d65 	ldrbvs	r6, [r0, -r5, ror #26]!
    26d0:	5f656d61 	svcpl	0x00656d61
    26d4:	7265766f 	rsbvc	r7, r5, #116391936	; 0x6f00000
    26d8:	7469775f 	strbtvc	r7, [r9], #-1887	; 0xfffff8a1
    26dc:	42336863 	eorsmi	r6, r3, #6488064	; 0x630000
    26e0:	6b63616c 	blvs	18dac98 <startup-0x1e725368>
    26e4:	6d616700 	stclvs	7, cr6, [r1, #-0]
    26e8:	766f5f65 	strbtvc	r5, [pc], -r5, ror #30
    26ec:	775f7265 	ldrbvc	r7, [pc, -r5, ror #4]
    26f0:	68637469 	stmdavs	r3!, {r0, r3, r5, r6, sl, ip, sp, lr}^
    26f4:	72675f33 	rsbvc	r5, r7, #51, 30	; 0xcc
    26f8:	625f7961 	subsvs	r7, pc, #1589248	; 0x184000
    26fc:	00737469 	rsbseq	r7, r3, r9, ror #8
    2700:	706d6574 	rsbvc	r6, sp, r4, ror r5
    2704:	656d6167 	strbvs	r6, [sp, #-359]!	; 0xfffffe99
    2708:	65766f5f 	ldrbvs	r6, [r6, #-3935]!	; 0xfffff0a1
    270c:	69775f72 	ldmdbvs	r7!, {r1, r4, r5, r6, r8, r9, sl, fp, ip, lr}^
    2710:	32686374 	rsbcc	r6, r8, #116, 6	; 0xd0000001
    2714:	63616c42 	cmnvs	r1, #16896	; 0x4200
    2718:	7473006b 	ldrbtvc	r0, [r3], #-107	; 0xffffff95
    271c:	5f656e6f 	svcpl	0x00656e6f
    2720:	76617267 	strbtvc	r7, [r1], -r7, ror #4
    2724:	00797469 	rsbseq	r7, r9, r9, ror #8
    2728:	6e6f7473 	mcrvs	4, 3, r7, cr15, cr3, {3}
    272c:	6c625f65 	stclvs	15, cr5, [r2], #-404	; 0xfffffe6c
    2730:	5f6b6361 	svcpl	0x006b6361
    2734:	73746962 	cmnvc	r4, #1605632	; 0x188000
    2738:	6f747300 	svcvs	0x00747300
    273c:	6d49656e 	cfstr64vs	mvdx6, [r9, #-440]	; 0xfffffe48
    2740:	73656761 	cmnvc	r5, #25427968	; 0x1840000
    2744:	6f747300 	svcvs	0x00747300
    2748:	665f656e 	ldrbvs	r6, [pc], -lr, ror #10
    274c:	5f6c6c61 	svcpl	0x006c6c61
    2750:	74730031 	ldrbtvc	r0, [r3], #-49	; 0xffffffcf
    2754:	49656e6f 	stmdbmi	r5!, {r0, r1, r2, r3, r5, r6, r9, sl, fp, sp, lr}^
    2758:	6567616d 	strbvs	r6, [r7, #-365]!	; 0xfffffe93
    275c:	6d657400 	cfstrdvs	mvd7, [r5, #-0]
    2760:	6f745370 	svcvs	0x00745370
    2764:	694c656e 	stmdbvs	ip, {r1, r2, r3, r5, r6, r8, sl, sp, lr}^
    2768:	00746867 	rsbseq	r6, r4, r7, ror #16
    276c:	65736572 	ldrbvs	r6, [r3, #-1394]!	; 0xfffffa8e
    2770:	74535f74 	ldrbvc	r5, [r3], #-3956	; 0xfffff08c
    2774:	00656e6f 	rsbeq	r6, r5, pc, ror #28
    2778:	6e6f7473 	mcrvs	4, 3, r7, cr15, cr3, {3}
    277c:	64705565 	ldrbtvs	r5, [r0], #-1381	; 0xfffffa9b
    2780:	00657461 	rsbeq	r7, r5, r1, ror #8
    2784:	74696e69 	strbtvc	r6, [r9], #-3689	; 0xfffff197
    2788:	6f74735f 	svcvs	0x0074735f
    278c:	7300656e 	movwvc	r6, #1390	; 0x56e
    2790:	656e6f74 	strbvs	r6, [lr, #-3956]!	; 0xfffff08c
    2794:	006a624f 	rsbeq	r6, sl, pc, asr #4
    2798:	6d2f3a43 	vstmdbvs	pc!, {s6-s72}
    279c:	632f706f 			; <UNDEFINED> instruction: 0x632f706f
    27a0:	706f4d2f 	rsbvc	r4, pc, pc, lsr #26
    27a4:	6f62616c 	svcvs	0x0062616c
    27a8:	69746172 	ldmdbvs	r4!, {r1, r4, r5, r6, r8, sp, lr}^
    27ac:	72656e6f 	rsbvc	r6, r5, #1776	; 0x6f0
    27b0:	5049442f 	subpl	r4, r9, pc, lsr #8
    27b4:	69572d73 	ldmdbvs	r7, {r0, r1, r4, r5, r6, r8, sl, fp, sp}^
    27b8:	2f686374 	svccs	0x00686374
    27bc:	74732f43 	ldrbtvc	r2, [r3], #-3907	; 0xfffff0bd
    27c0:	2e656e6f 	cdpcs	14, 6, cr6, cr5, cr15, {3}
    27c4:	74730063 	ldrbtvc	r0, [r3], #-99	; 0xffffff9d
    27c8:	5f656e6f 	svcpl	0x00656e6f
    27cc:	65657073 	strbvs	r7, [r5, #-115]!	; 0xffffff8d
    27d0:	74730064 	ldrbtvc	r0, [r3], #-100	; 0xffffff9c
    27d4:	47656e6f 	strbmi	r6, [r5, -pc, ror #28]!
    27d8:	00796172 	rsbseq	r6, r9, r2, ror r1
    27dc:	6e6f7473 	mcrvs	4, 3, r7, cr15, cr3, {3}
    27e0:	72675f65 	rsbvc	r5, r7, #404	; 0x194
    27e4:	625f7961 	subsvs	r7, pc, #1589248	; 0x184000
    27e8:	00737469 	rsbseq	r7, r3, r9, ror #8
    27ec:	6e6f7473 	mcrvs	4, 3, r7, cr15, cr3, {3}
    27f0:	696c5f65 	stmdbvs	ip!, {r0, r2, r5, r6, r8, r9, sl, fp, ip, lr}^
    27f4:	5f746867 	svcpl	0x00746867
    27f8:	73746962 	cmnvc	r4, #1605632	; 0x188000
    27fc:	6f747300 	svcvs	0x00747300
    2800:	6c42656e 	cfstr64vs	mvdx6, [r2], {110}	; 0x6e
    2804:	006b6361 	rsbeq	r6, fp, r1, ror #6
    2808:	706d6574 	rsbvc	r6, sp, r4, ror r5
    280c:	6e6f7453 	mcrvs	4, 3, r7, cr15, cr3, {2}
    2810:	61724765 	cmnvs	r2, r5, ror #14
    2814:	74730079 	ldrbtvc	r0, [r3], #-121	; 0xffffff87
    2818:	4c656e6f 	stclmi	14, cr6, [r5], #-444	; 0xfffffe44
    281c:	74686769 	strbtvc	r6, [r8], #-1897	; 0xfffff897
    2820:	6f747300 	svcvs	0x00747300
    2824:	625f656e 	subsvs	r6, pc, #461373440	; 0x1b800000
    2828:	636e756f 	cmnvs	lr, #465567744	; 0x1bc00000
    282c:	73007365 	movwvc	r7, #869	; 0x365
    2830:	656e6f74 	strbvs	r6, [lr, #-3956]!	; 0xfffff08c
    2834:	6f74735f 	svcvs	0x0074735f
    2838:	6f43656e 	svcvs	0x0043656e
    283c:	00746e75 	rsbseq	r6, r4, r5, ror lr
    2840:	706d6574 	rsbvc	r6, sp, r4, ror r5
    2844:	6e6f7453 	mcrvs	4, 3, r7, cr15, cr3, {2}
    2848:	616c4265 	cmnvs	ip, r5, ror #4
    284c:	Address 0x0000284c is out of bounds.


Disassembly of section .comment:

00000000 <.comment>:
   0:	3a434347 	bcc	10d0d24 <startup-0x1ef2f2dc>
   4:	4e472820 	cdpmi	8, 4, cr2, cr7, cr0, {1}
   8:	6f542055 	svcvs	0x00542055
   c:	20736c6f 	rsbscs	r6, r3, pc, ror #24
  10:	20726f66 	rsbscs	r6, r2, r6, ror #30
  14:	204d5241 	subcs	r5, sp, r1, asr #4
  18:	65626d45 	strbvs	r6, [r2, #-3397]!	; 0xfffff2bb
  1c:	64656464 	strbtvs	r6, [r5], #-1124	; 0xfffffb9c
  20:	6f725020 	svcvs	0x00725020
  24:	73736563 	cmnvc	r3, #415236096	; 0x18c00000
  28:	2073726f 	rsbscs	r7, r3, pc, ror #4
  2c:	30322d36 	eorscc	r2, r2, r6, lsr sp
  30:	712d3731 			; <UNDEFINED> instruction: 0x712d3731
  34:	70752d31 	rsbsvc	r2, r5, r1, lsr sp
  38:	65746164 	ldrbvs	r6, [r4, #-356]!	; 0xfffffe9c
  3c:	2e362029 	cdpcs	0, 3, cr2, cr6, cr9, {1}
  40:	20312e33 	eorscs	r2, r1, r3, lsr lr
  44:	37313032 			; <UNDEFINED> instruction: 0x37313032
  48:	35313230 	ldrcc	r3, [r1, #-560]!	; 0xfffffdd0
  4c:	65722820 	ldrbvs	r2, [r2, #-2080]!	; 0xfffff7e0
  50:	7361656c 	cmnvc	r1, #108, 10	; 0x1b000000
  54:	5b202965 	blpl	80a5f0 <startup-0x1f7f5a10>
  58:	2f4d5241 	svccs	0x004d5241
  5c:	65626d65 	strbvs	r6, [r2, #-3429]!	; 0xfffff29b
  60:	64656464 	strbtvs	r6, [r5], #-1124	; 0xfffffb9c
  64:	622d362d 	eorvs	r3, sp, #47185920	; 0x2d00000
  68:	636e6172 	cmnvs	lr, #-2147483620	; 0x8000001c
  6c:	65722068 	ldrbvs	r2, [r2, #-104]!	; 0xffffff98
  70:	69736976 	ldmdbvs	r3!, {r1, r2, r4, r5, r6, r8, fp, sp, lr}^
  74:	32206e6f 	eorcc	r6, r0, #1776	; 0x6f0
  78:	31353534 	teqcc	r5, r4, lsr r5
  7c:	Address 0x0000007c is out of bounds.


Disassembly of section .ARM.attributes:

00000000 <.ARM.attributes>:
   0:	00002b41 	andeq	r2, r0, r1, asr #22
   4:	61656100 	cmnvs	r5, r0, lsl #2
   8:	01006962 	tsteq	r0, r2, ror #18
   c:	00000021 	andeq	r0, r0, r1, lsr #32
  10:	2d533605 	ldclcs	6, cr3, [r3, #-20]	; 0xffffffec
  14:	0c06004d 	stceq	0, cr0, [r6], {77}	; 0x4d
  18:	01094d07 	tsteq	r9, r7, lsl #26
  1c:	01140412 	tsteq	r4, r2, lsl r4
  20:	03170115 	tsteq	r7, #1073741829	; 0x40000005
  24:	01190118 	tsteq	r9, r8, lsl r1
  28:	061e011a 			; <UNDEFINED> instruction: 0x061e011a

Disassembly of section .debug_frame:

00000000 <.debug_frame>:
   0:	0000000c 	andeq	r0, r0, ip
   4:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
   8:	7c020001 	stcvc	0, cr0, [r2], {1}
   c:	000d0c0e 	andeq	r0, sp, lr, lsl #24
  10:	0000000c 	andeq	r0, r0, ip
  14:	00000000 	andeq	r0, r0, r0
  18:	20000000 	andcs	r0, r0, r0
  1c:	0000000c 	andeq	r0, r0, ip
  20:	00000018 	andeq	r0, r0, r8, lsl r0
  24:	00000000 	andeq	r0, r0, r0
  28:	20000010 	andcs	r0, r0, r0, lsl r0
  2c:	00000024 	andeq	r0, r0, r4, lsr #32
  30:	40080e41 	andmi	r0, r8, r1, asr #28
  34:	8e400287 	cdphi	2, 4, cr0, cr0, cr7, {4}
  38:	070d4101 	streq	r4, [sp, -r1, lsl #2]
  3c:	0000001c 	andeq	r0, r0, ip, lsl r0
  40:	00000000 	andeq	r0, r0, r0
  44:	20000034 	andcs	r0, r0, r4, lsr r0
  48:	000001c8 	andeq	r0, r0, r8, asr #3
  4c:	40080e41 	andmi	r0, r8, r1, asr #28
  50:	8e400287 	cdphi	2, 4, cr0, cr0, cr7, {4}
  54:	300e4101 	andcc	r4, lr, r1, lsl #2
  58:	00070d41 	andeq	r0, r7, r1, asr #26
  5c:	00000020 	andeq	r0, r0, r0, lsr #32
  60:	00000000 	andeq	r0, r0, r0
  64:	200001fc 	strdcs	r0, [r0], -ip
  68:	00001c5c 	andeq	r1, r0, ip, asr ip
  6c:	400c0e41 	andmi	r0, ip, r1, asr #28
  70:	87400384 	strbhi	r0, [r0, -r4, lsl #7]
  74:	018e4002 	orreq	r4, lr, r2
  78:	0af80e42 	beq	ffe03988 <firstTime.4108+0xdfdee430>
  7c:	00070d41 	andeq	r0, r7, r1, asr #26
  80:	0000001c 	andeq	r0, r0, ip, lsl r0
  84:	00000000 	andeq	r0, r0, r0
  88:	20001e58 	andcs	r1, r0, r8, asr lr
  8c:	0000001e 	andeq	r0, r0, lr, lsl r0
  90:	40080e41 	andmi	r0, r8, r1, asr #28
  94:	8e400287 	cdphi	2, 4, cr0, cr0, cr7, {4}
  98:	100e4101 	andne	r4, lr, r1, lsl #2
  9c:	00070d41 	andeq	r0, r7, r1, asr #26
  a0:	0000000c 	andeq	r0, r0, ip
  a4:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
  a8:	7c020001 	stcvc	0, cr0, [r2], {1}
  ac:	000d0c0e 	andeq	r0, sp, lr, lsl #24
  b0:	0000001c 	andeq	r0, r0, ip, lsl r0
  b4:	000000a0 	andeq	r0, r0, r0, lsr #1
  b8:	20001e78 	andcs	r1, r0, r8, ror lr
  bc:	00000010 	andeq	r0, r0, r0, lsl r0
  c0:	40080e41 	andmi	r0, r8, r1, asr #28
  c4:	8e400287 	cdphi	2, 4, cr0, cr0, cr7, {4}
  c8:	100e4101 	andne	r4, lr, r1, lsl #2
  cc:	00070d41 	andeq	r0, r7, r1, asr #26
  d0:	0000001c 	andeq	r0, r0, ip, lsl r0
  d4:	000000a0 	andeq	r0, r0, r0, lsr #1
  d8:	20001e88 	andcs	r1, r0, r8, lsl #29
  dc:	00000046 	andeq	r0, r0, r6, asr #32
  e0:	40080e41 	andmi	r0, r8, r1, asr #28
  e4:	8e400287 	cdphi	2, 4, cr0, cr0, cr7, {4}
  e8:	100e4101 	andne	r4, lr, r1, lsl #2
  ec:	00070d41 	andeq	r0, r7, r1, asr #26
  f0:	0000000c 	andeq	r0, r0, ip
  f4:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
  f8:	7c020001 	stcvc	0, cr0, [r2], {1}
  fc:	000d0c0e 	andeq	r0, sp, lr, lsl #24
 100:	0000001c 	andeq	r0, r0, ip, lsl r0
 104:	000000f0 	strdeq	r0, [r0], -r0	; <UNPREDICTABLE>
 108:	20001ed0 	ldrdcs	r1, [r0], -r0
 10c:	00000184 	andeq	r0, r0, r4, lsl #3
 110:	40080e41 	andmi	r0, r8, r1, asr #28
 114:	8e400287 	cdphi	2, 4, cr0, cr0, cr7, {4}
 118:	380e4101 	stmdacc	lr, {r0, r8, lr}
 11c:	00070d41 	andeq	r0, r7, r1, asr #26
 120:	00000020 	andeq	r0, r0, r0, lsr #32
 124:	000000f0 	strdeq	r0, [r0], -r0	; <UNPREDICTABLE>
 128:	20002054 	andcs	r2, r0, r4, asr r0
 12c:	00000124 	andeq	r0, r0, r4, lsr #2
 130:	400c0e41 	andmi	r0, ip, r1, asr #28
 134:	87400384 	strbhi	r0, [r0, -r4, lsl #7]
 138:	018e4002 	orreq	r4, lr, r2
 13c:	41180e41 	tstmi	r8, r1, asr #28
 140:	0000070d 	andeq	r0, r0, sp, lsl #14
 144:	0000000c 	andeq	r0, r0, ip
 148:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
 14c:	7c020001 	stcvc	0, cr0, [r2], {1}
 150:	000d0c0e 	andeq	r0, sp, lr, lsl #24
 154:	00000018 	andeq	r0, r0, r8, lsl r0
 158:	00000144 	andeq	r0, r0, r4, asr #2
 15c:	20002178 	andcs	r2, r0, r8, ror r1
 160:	0000003c 	andeq	r0, r0, ip, lsr r0
 164:	40080e41 	andmi	r0, r8, r1, asr #28
 168:	8e400287 	cdphi	2, 4, cr0, cr0, cr7, {4}
 16c:	070d4101 	streq	r4, [sp, -r1, lsl #2]
 170:	0000001c 	andeq	r0, r0, ip, lsl r0
 174:	00000144 	andeq	r0, r0, r4, asr #2
 178:	200021b4 			; <UNDEFINED> instruction: 0x200021b4
 17c:	00000204 	andeq	r0, r0, r4, lsl #4
 180:	40080e41 	andmi	r0, r8, r1, asr #28
 184:	8e400287 	cdphi	2, 4, cr0, cr0, cr7, {4}
 188:	100e4101 	andne	r4, lr, r1, lsl #2
 18c:	00070d41 	andeq	r0, r7, r1, asr #26
 190:	0000000c 	andeq	r0, r0, ip
 194:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
 198:	7c020001 	stcvc	0, cr0, [r2], {1}
 19c:	000d0c0e 	andeq	r0, sp, lr, lsl #24
 1a0:	0000001c 	andeq	r0, r0, ip, lsl r0
 1a4:	00000190 	muleq	r0, r0, r1
 1a8:	200023b8 			; <UNDEFINED> instruction: 0x200023b8
 1ac:	0000020c 	andeq	r0, r0, ip, lsl #4
 1b0:	40080e41 	andmi	r0, r8, r1, asr #28
 1b4:	8e400287 	cdphi	2, 4, cr0, cr0, cr7, {4}
 1b8:	480e4101 	stmdami	lr, {r0, r8, lr}
 1bc:	00070d41 	andeq	r0, r7, r1, asr #26
 1c0:	00000020 	andeq	r0, r0, r0, lsr #32
 1c4:	00000190 	muleq	r0, r0, r1
 1c8:	200025c4 	andcs	r2, r0, r4, asr #11
 1cc:	00000158 	andeq	r0, r0, r8, asr r1
 1d0:	400c0e41 	andmi	r0, ip, r1, asr #28
 1d4:	87400384 	strbhi	r0, [r0, -r4, lsl #7]
 1d8:	018e4002 	orreq	r4, lr, r2
 1dc:	41180e41 	tstmi	r8, r1, asr #28
 1e0:	0000070d 	andeq	r0, r0, sp, lsl #14
 1e4:	0000000c 	andeq	r0, r0, ip
 1e8:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
 1ec:	7c020001 	stcvc	0, cr0, [r2], {1}
 1f0:	000d0c0e 	andeq	r0, sp, lr, lsl #24
 1f4:	0000001c 	andeq	r0, r0, ip, lsl r0
 1f8:	000001e4 	andeq	r0, r0, r4, ror #3
 1fc:	2000271c 	andcs	r2, r0, ip, lsl r7
 200:	00000140 	andeq	r0, r0, r0, asr #2
 204:	40080e41 	andmi	r0, r8, r1, asr #28
 208:	8e400287 	cdphi	2, 4, cr0, cr0, cr7, {4}
 20c:	300e4101 	andcc	r4, lr, r1, lsl #2
 210:	00070d41 	andeq	r0, r7, r1, asr #26
 214:	00000020 	andeq	r0, r0, r0, lsr #32
 218:	000001e4 	andeq	r0, r0, r4, ror #3
 21c:	2000285c 	andcs	r2, r0, ip, asr r8
 220:	000000f8 	strdeq	r0, [r0], -r8
 224:	400c0e41 	andmi	r0, ip, r1, asr #28
 228:	87400384 	strbhi	r0, [r0, -r4, lsl #7]
 22c:	018e4002 	orreq	r4, lr, r2
 230:	41180e41 	tstmi	r8, r1, asr #28
 234:	0000070d 	andeq	r0, r0, sp, lsl #14
 238:	0000000c 	andeq	r0, r0, ip
 23c:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
 240:	7c020001 	stcvc	0, cr0, [r2], {1}
 244:	000d0c0e 	andeq	r0, sp, lr, lsl #24
 248:	0000001c 	andeq	r0, r0, ip, lsl r0
 24c:	00000238 	andeq	r0, r0, r8, lsr r2
 250:	20002954 	andcs	r2, r0, r4, asr r9
 254:	00000140 	andeq	r0, r0, r0, asr #2
 258:	40080e41 	andmi	r0, r8, r1, asr #28
 25c:	8e400287 	cdphi	2, 4, cr0, cr0, cr7, {4}
 260:	300e4101 	andcc	r4, lr, r1, lsl #2
 264:	00070d41 	andeq	r0, r7, r1, asr #26
 268:	00000020 	andeq	r0, r0, r0, lsr #32
 26c:	00000238 	andeq	r0, r0, r8, lsr r2
 270:	20002a94 	mulcs	r0, r4, sl
 274:	000000f8 	strdeq	r0, [r0], -r8
 278:	400c0e41 	andmi	r0, ip, r1, asr #28
 27c:	87400384 	strbhi	r0, [r0, -r4, lsl #7]
 280:	018e4002 	orreq	r4, lr, r2
 284:	41180e41 	tstmi	r8, r1, asr #28
 288:	0000070d 	andeq	r0, r0, sp, lsl #14
 28c:	0000001c 	andeq	r0, r0, ip, lsl r0
 290:	00000238 	andeq	r0, r0, r8, lsr r2
 294:	20002b8c 	andcs	r2, r0, ip, lsl #23
 298:	00000028 	andeq	r0, r0, r8, lsr #32
 29c:	40080e41 	andmi	r0, r8, r1, asr #28
 2a0:	8e400287 	cdphi	2, 4, cr0, cr0, cr7, {4}
 2a4:	100e4101 	andne	r4, lr, r1, lsl #2
 2a8:	00070d41 	andeq	r0, r7, r1, asr #26
 2ac:	00000018 	andeq	r0, r0, r8, lsl r0
 2b0:	00000238 	andeq	r0, r0, r8, lsr r2
 2b4:	20002bb4 			; <UNDEFINED> instruction: 0x20002bb4
 2b8:	00000040 	andeq	r0, r0, r0, asr #32
 2bc:	40080e41 	andmi	r0, r8, r1, asr #28
 2c0:	8e400287 	cdphi	2, 4, cr0, cr0, cr7, {4}
 2c4:	070d4101 	streq	r4, [sp, -r1, lsl #2]
 2c8:	0000001c 	andeq	r0, r0, ip, lsl r0
 2cc:	00000238 	andeq	r0, r0, r8, lsr r2
 2d0:	20002bf4 	strdcs	r2, [r0], -r4
 2d4:	00000110 	andeq	r0, r0, r0, lsl r1
 2d8:	40080e41 	andmi	r0, r8, r1, asr #28
 2dc:	8e400287 	cdphi	2, 4, cr0, cr0, cr7, {4}
 2e0:	100e4101 	andne	r4, lr, r1, lsl #2
 2e4:	00070d41 	andeq	r0, r7, r1, asr #26
 2e8:	0000000c 	andeq	r0, r0, ip
 2ec:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
 2f0:	7c020001 	stcvc	0, cr0, [r2], {1}
 2f4:	000d0c0e 	andeq	r0, sp, lr, lsl #24
 2f8:	0000001c 	andeq	r0, r0, ip, lsl r0
 2fc:	000002e8 	andeq	r0, r0, r8, ror #5
 300:	20002d04 	andcs	r2, r0, r4, lsl #26
 304:	000001a8 	andeq	r0, r0, r8, lsr #3
 308:	40080e41 	andmi	r0, r8, r1, asr #28
 30c:	8e400287 	cdphi	2, 4, cr0, cr0, cr7, {4}
 310:	380e4101 	stmdacc	lr, {r0, r8, lr}
 314:	00070d41 	andeq	r0, r7, r1, asr #26
 318:	00000020 	andeq	r0, r0, r0, lsr #32
 31c:	000002e8 	andeq	r0, r0, r8, ror #5
 320:	20002eac 	andcs	r2, r0, ip, lsr #29
 324:	00000104 	andeq	r0, r0, r4, lsl #2
 328:	400c0e41 	andmi	r0, ip, r1, asr #28
 32c:	87400384 	strbhi	r0, [r0, -r4, lsl #7]
 330:	018e4002 	orreq	r4, lr, r2
 334:	41180e41 	tstmi	r8, r1, asr #28
 338:	0000070d 	andeq	r0, r0, sp, lsl #14
 33c:	0000000c 	andeq	r0, r0, ip
 340:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
 344:	7c020001 	stcvc	0, cr0, [r2], {1}
 348:	000d0c0e 	andeq	r0, sp, lr, lsl #24
 34c:	0000001c 	andeq	r0, r0, ip, lsl r0
 350:	0000033c 	andeq	r0, r0, ip, lsr r3
 354:	20002fb0 			; <UNDEFINED> instruction: 0x20002fb0
 358:	00000274 	andeq	r0, r0, r4, ror r2
 35c:	40080e41 	andmi	r0, r8, r1, asr #28
 360:	8e400287 	cdphi	2, 4, cr0, cr0, cr7, {4}
 364:	500e4101 	andpl	r4, lr, r1, lsl #2
 368:	00070d41 	andeq	r0, r7, r1, asr #26
 36c:	00000020 	andeq	r0, r0, r0, lsr #32
 370:	0000033c 	andeq	r0, r0, ip, lsr r3
 374:	20003224 	andcs	r3, r0, r4, lsr #4
 378:	000002b8 			; <UNDEFINED> instruction: 0x000002b8
 37c:	400c0e41 	andmi	r0, ip, r1, asr #28
 380:	87400384 	strbhi	r0, [r0, -r4, lsl #7]
 384:	018e4002 	orreq	r4, lr, r2
 388:	41180e41 	tstmi	r8, r1, asr #28
 38c:	0000070d 	andeq	r0, r0, sp, lsl #14
 390:	0000000c 	andeq	r0, r0, ip
 394:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
 398:	7c020001 	stcvc	0, cr0, [r2], {1}
 39c:	000d0c0e 	andeq	r0, sp, lr, lsl #24
 3a0:	0000001c 	andeq	r0, r0, ip, lsl r0
 3a4:	00000390 	muleq	r0, r0, r3
 3a8:	200034dc 	ldrdcs	r3, [r0], -ip
 3ac:	00000140 	andeq	r0, r0, r0, asr #2
 3b0:	40080e41 	andmi	r0, r8, r1, asr #28
 3b4:	8e400287 	cdphi	2, 4, cr0, cr0, cr7, {4}
 3b8:	300e4101 	andcc	r4, lr, r1, lsl #2
 3bc:	00070d41 	andeq	r0, r7, r1, asr #26
 3c0:	00000020 	andeq	r0, r0, r0, lsr #32
 3c4:	00000390 	muleq	r0, r0, r3
 3c8:	2000361c 	andcs	r3, r0, ip, lsl r6
 3cc:	000000f8 	strdeq	r0, [r0], -r8
 3d0:	400c0e41 	andmi	r0, ip, r1, asr #28
 3d4:	87400384 	strbhi	r0, [r0, -r4, lsl #7]
 3d8:	018e4002 	orreq	r4, lr, r2
 3dc:	41180e41 	tstmi	r8, r1, asr #28
 3e0:	0000070d 	andeq	r0, r0, sp, lsl #14
 3e4:	0000000c 	andeq	r0, r0, ip
 3e8:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
 3ec:	7c020001 	stcvc	0, cr0, [r2], {1}
 3f0:	000d0c0e 	andeq	r0, sp, lr, lsl #24
 3f4:	00000018 	andeq	r0, r0, r8, lsl r0
 3f8:	000003e4 	andeq	r0, r0, r4, ror #7
 3fc:	20003714 	andcs	r3, r0, r4, lsl r7
 400:	00000044 	andeq	r0, r0, r4, asr #32
 404:	40080e41 	andmi	r0, r8, r1, asr #28
 408:	8e400287 	cdphi	2, 4, cr0, cr0, cr7, {4}
 40c:	070d4101 	streq	r4, [sp, -r1, lsl #2]
 410:	00000018 	andeq	r0, r0, r8, lsl r0
 414:	000003e4 	andeq	r0, r0, r4, ror #7
 418:	20003758 	andcs	r3, r0, r8, asr r7
 41c:	00000044 	andeq	r0, r0, r4, asr #32
 420:	40080e41 	andmi	r0, r8, r1, asr #28
 424:	8e400287 	cdphi	2, 4, cr0, cr0, cr7, {4}
 428:	070d4101 	streq	r4, [sp, -r1, lsl #2]
 42c:	0000001c 	andeq	r0, r0, ip, lsl r0
 430:	000003e4 	andeq	r0, r0, r4, ror #7
 434:	2000379c 	mulcs	r0, ip, r7
 438:	0000002c 	andeq	r0, r0, ip, lsr #32
 43c:	40080e41 	andmi	r0, r8, r1, asr #28
 440:	8e400287 	cdphi	2, 4, cr0, cr0, cr7, {4}
 444:	100e4101 	andne	r4, lr, r1, lsl #2
 448:	00070d41 	andeq	r0, r7, r1, asr #26
 44c:	0000001c 	andeq	r0, r0, ip, lsl r0
 450:	000003e4 	andeq	r0, r0, r4, ror #7
 454:	200037c8 	andcs	r3, r0, r8, asr #15
 458:	00000026 	andeq	r0, r0, r6, lsr #32
 45c:	40080e41 	andmi	r0, r8, r1, asr #28
 460:	8e400287 	cdphi	2, 4, cr0, cr0, cr7, {4}
 464:	100e4101 	andne	r4, lr, r1, lsl #2
 468:	00070d41 	andeq	r0, r7, r1, asr #26
 46c:	0000001c 	andeq	r0, r0, ip, lsl r0
 470:	000003e4 	andeq	r0, r0, r4, ror #7
 474:	200037ee 	andcs	r3, r0, lr, ror #15
 478:	00000032 	andeq	r0, r0, r2, lsr r0
 47c:	40080e41 	andmi	r0, r8, r1, asr #28
 480:	8e400287 	cdphi	2, 4, cr0, cr0, cr7, {4}
 484:	180e4101 	stmdane	lr, {r0, r8, lr}
 488:	00070d41 	andeq	r0, r7, r1, asr #26
 48c:	00000018 	andeq	r0, r0, r8, lsl r0
 490:	000003e4 	andeq	r0, r0, r4, ror #7
 494:	20003820 	andcs	r3, r0, r0, lsr #16
 498:	00000018 	andeq	r0, r0, r8, lsl r0
 49c:	40080e41 	andmi	r0, r8, r1, asr #28
 4a0:	8e400287 	cdphi	2, 4, cr0, cr0, cr7, {4}
 4a4:	070d4101 	streq	r4, [sp, -r1, lsl #2]
 4a8:	00000018 	andeq	r0, r0, r8, lsl r0
 4ac:	000003e4 	andeq	r0, r0, r4, ror #7
 4b0:	20003838 	andcs	r3, r0, r8, lsr r8
 4b4:	00000030 	andeq	r0, r0, r0, lsr r0
 4b8:	40080e41 	andmi	r0, r8, r1, asr #28
 4bc:	8e400287 	cdphi	2, 4, cr0, cr0, cr7, {4}
 4c0:	070d4101 	streq	r4, [sp, -r1, lsl #2]
 4c4:	0000001c 	andeq	r0, r0, ip, lsl r0
 4c8:	000003e4 	andeq	r0, r0, r4, ror #7
 4cc:	20003868 	andcs	r3, r0, r8, ror #16
 4d0:	00000050 	andeq	r0, r0, r0, asr r0
 4d4:	40080e41 	andmi	r0, r8, r1, asr #28
 4d8:	8e400287 	cdphi	2, 4, cr0, cr0, cr7, {4}
 4dc:	180e4101 	stmdane	lr, {r0, r8, lr}
 4e0:	00070d41 	andeq	r0, r7, r1, asr #26
 4e4:	0000001c 	andeq	r0, r0, ip, lsl r0
 4e8:	000003e4 	andeq	r0, r0, r4, ror #7
 4ec:	200038b8 			; <UNDEFINED> instruction: 0x200038b8
 4f0:	00000058 	andeq	r0, r0, r8, asr r0
 4f4:	40080e41 	andmi	r0, r8, r1, asr #28
 4f8:	8e400287 	cdphi	2, 4, cr0, cr0, cr7, {4}
 4fc:	180e4101 	stmdane	lr, {r0, r8, lr}
 500:	00070d41 	andeq	r0, r7, r1, asr #26
 504:	0000001c 	andeq	r0, r0, ip, lsl r0
 508:	000003e4 	andeq	r0, r0, r4, ror #7
 50c:	20003910 	andcs	r3, r0, r0, lsl r9
 510:	00000066 	andeq	r0, r0, r6, rrx
 514:	40080e41 	andmi	r0, r8, r1, asr #28
 518:	8e400287 	cdphi	2, 4, cr0, cr0, cr7, {4}
 51c:	100e4101 	andne	r4, lr, r1, lsl #2
 520:	00070d41 	andeq	r0, r7, r1, asr #26
 524:	0000001c 	andeq	r0, r0, ip, lsl r0
 528:	000003e4 	andeq	r0, r0, r4, ror #7
 52c:	20003976 	andcs	r3, r0, r6, ror r9
 530:	0000006e 	andeq	r0, r0, lr, rrx
 534:	40080e41 	andmi	r0, r8, r1, asr #28
 538:	8e400287 	cdphi	2, 4, cr0, cr0, cr7, {4}
 53c:	100e4101 	andne	r4, lr, r1, lsl #2
 540:	00070d41 	andeq	r0, r7, r1, asr #26
 544:	0000001c 	andeq	r0, r0, ip, lsl r0
 548:	000003e4 	andeq	r0, r0, r4, ror #7
 54c:	200039e4 	andcs	r3, r0, r4, ror #19
 550:	00000094 	muleq	r0, r4, r0
 554:	40080e41 	andmi	r0, r8, r1, asr #28
 558:	8e400287 	cdphi	2, 4, cr0, cr0, cr7, {4}
 55c:	180e4101 	stmdane	lr, {r0, r8, lr}
 560:	00070d41 	andeq	r0, r7, r1, asr #26
 564:	0000001c 	andeq	r0, r0, ip, lsl r0
 568:	000003e4 	andeq	r0, r0, r4, ror #7
 56c:	20003a78 	andcs	r3, r0, r8, ror sl
 570:	0000002a 	andeq	r0, r0, sl, lsr #32
 574:	40080e41 	andmi	r0, r8, r1, asr #28
 578:	8e400287 	cdphi	2, 4, cr0, cr0, cr7, {4}
 57c:	100e4101 	andne	r4, lr, r1, lsl #2
 580:	00070d41 	andeq	r0, r7, r1, asr #26
 584:	0000001c 	andeq	r0, r0, ip, lsl r0
 588:	000003e4 	andeq	r0, r0, r4, ror #7
 58c:	20003aa2 	andcs	r3, r0, r2, lsr #21
 590:	0000007e 	andeq	r0, r0, lr, ror r0
 594:	40080e41 	andmi	r0, r8, r1, asr #28
 598:	8e400287 	cdphi	2, 4, cr0, cr0, cr7, {4}
 59c:	100e4101 	andne	r4, lr, r1, lsl #2
 5a0:	00070d41 	andeq	r0, r7, r1, asr #26
 5a4:	0000001c 	andeq	r0, r0, ip, lsl r0
 5a8:	000003e4 	andeq	r0, r0, r4, ror #7
 5ac:	20003b20 	andcs	r3, r0, r0, lsr #22
 5b0:	00000046 	andeq	r0, r0, r6, asr #32
 5b4:	40080e41 	andmi	r0, r8, r1, asr #28
 5b8:	8e400287 	cdphi	2, 4, cr0, cr0, cr7, {4}
 5bc:	100e4101 	andne	r4, lr, r1, lsl #2
 5c0:	00070d41 	andeq	r0, r7, r1, asr #26
 5c4:	0000001c 	andeq	r0, r0, ip, lsl r0
 5c8:	000003e4 	andeq	r0, r0, r4, ror #7
 5cc:	20003b66 	andcs	r3, r0, r6, ror #22
 5d0:	00000046 	andeq	r0, r0, r6, asr #32
 5d4:	40080e41 	andmi	r0, r8, r1, asr #28
 5d8:	8e400287 	cdphi	2, 4, cr0, cr0, cr7, {4}
 5dc:	100e4101 	andne	r4, lr, r1, lsl #2
 5e0:	00070d41 	andeq	r0, r7, r1, asr #26
 5e4:	00000018 	andeq	r0, r0, r8, lsl r0
 5e8:	000003e4 	andeq	r0, r0, r4, ror #7
 5ec:	20003bac 	andcs	r3, r0, ip, lsr #23
 5f0:	0000006e 	andeq	r0, r0, lr, rrx
 5f4:	40080e41 	andmi	r0, r8, r1, asr #28
 5f8:	8e400287 	cdphi	2, 4, cr0, cr0, cr7, {4}
 5fc:	070d4101 	streq	r4, [sp, -r1, lsl #2]
 600:	0000001c 	andeq	r0, r0, ip, lsl r0
 604:	000003e4 	andeq	r0, r0, r4, ror #7
 608:	20003c1a 	andcs	r3, r0, sl, lsl ip
 60c:	00000066 	andeq	r0, r0, r6, rrx
 610:	40080e41 	andmi	r0, r8, r1, asr #28
 614:	8e400287 	cdphi	2, 4, cr0, cr0, cr7, {4}
 618:	100e4101 	andne	r4, lr, r1, lsl #2
 61c:	00070d41 	andeq	r0, r7, r1, asr #26
 620:	0000001c 	andeq	r0, r0, ip, lsl r0
 624:	000003e4 	andeq	r0, r0, r4, ror #7
 628:	20003c80 	andcs	r3, r0, r0, lsl #25
 62c:	00000180 	andeq	r0, r0, r0, lsl #3
 630:	40080e41 	andmi	r0, r8, r1, asr #28
 634:	8e400287 	cdphi	2, 4, cr0, cr0, cr7, {4}
 638:	200e4101 	andcs	r4, lr, r1, lsl #2
 63c:	00070d41 	andeq	r0, r7, r1, asr #26
 640:	0000001c 	andeq	r0, r0, ip, lsl r0
 644:	000003e4 	andeq	r0, r0, r4, ror #7
 648:	20003e00 	andcs	r3, r0, r0, lsl #28
 64c:	0000004e 	andeq	r0, r0, lr, asr #32
 650:	40080e41 	andmi	r0, r8, r1, asr #28
 654:	8e400287 	cdphi	2, 4, cr0, cr0, cr7, {4}
 658:	180e4101 	stmdane	lr, {r0, r8, lr}
 65c:	00070d41 	andeq	r0, r7, r1, asr #26
 660:	0000001c 	andeq	r0, r0, ip, lsl r0
 664:	000003e4 	andeq	r0, r0, r4, ror #7
 668:	20003e4e 	andcs	r3, r0, lr, asr #28
 66c:	0000019e 	muleq	r0, lr, r1
 670:	40080e41 	andmi	r0, r8, r1, asr #28
 674:	8e400287 	cdphi	2, 4, cr0, cr0, cr7, {4}
 678:	280e4101 	stmdacs	lr, {r0, r8, lr}
 67c:	00070d41 	andeq	r0, r7, r1, asr #26
 680:	0000001c 	andeq	r0, r0, ip, lsl r0
 684:	000003e4 	andeq	r0, r0, r4, ror #7
 688:	20003fec 	andcs	r3, r0, ip, ror #31
 68c:	000000d6 	ldrdeq	r0, [r0], -r6
 690:	40080e41 	andmi	r0, r8, r1, asr #28
 694:	8e400287 	cdphi	2, 4, cr0, cr0, cr7, {4}
 698:	200e4101 	andcs	r4, lr, r1, lsl #2
 69c:	00070d41 	andeq	r0, r7, r1, asr #26
 6a0:	00000024 	andeq	r0, r0, r4, lsr #32
 6a4:	000003e4 	andeq	r0, r0, r4, ror #7
 6a8:	200040c2 	andcs	r4, r0, r2, asr #1
 6ac:	0000011a 	andeq	r0, r0, sl, lsl r1
 6b0:	40100e41 	andsmi	r0, r0, r1, asr #28
 6b4:	85400484 	strbhi	r0, [r0, #-1156]	; 0xfffffb7c
 6b8:	02874003 	addeq	r4, r7, #3
 6bc:	41018e40 	tstmi	r1, r0, asr #28
 6c0:	0d41380e 	stcleq	8, cr3, [r1, #-56]	; 0xffffffc8
 6c4:	00000007 	andeq	r0, r0, r7
 6c8:	0000001c 	andeq	r0, r0, ip, lsl r0
 6cc:	000003e4 	andeq	r0, r0, r4, ror #7
 6d0:	200041dc 	ldrdcs	r4, [r0], -ip
 6d4:	00000052 	andeq	r0, r0, r2, asr r0
 6d8:	40080e41 	andmi	r0, r8, r1, asr #28
 6dc:	8e400287 	cdphi	2, 4, cr0, cr0, cr7, {4}
 6e0:	200e4101 	andcs	r4, lr, r1, lsl #2
 6e4:	00070d41 	andeq	r0, r7, r1, asr #26
 6e8:	0000001c 	andeq	r0, r0, ip, lsl r0
 6ec:	000003e4 	andeq	r0, r0, r4, ror #7
 6f0:	2000422e 	andcs	r4, r0, lr, lsr #4
 6f4:	00000052 	andeq	r0, r0, r2, asr r0
 6f8:	40080e41 	andmi	r0, r8, r1, asr #28
 6fc:	8e400287 	cdphi	2, 4, cr0, cr0, cr7, {4}
 700:	200e4101 	andcs	r4, lr, r1, lsl #2
 704:	00070d41 	andeq	r0, r7, r1, asr #26
 708:	00000020 	andeq	r0, r0, r0, lsr #32
 70c:	000003e4 	andeq	r0, r0, r4, ror #7
 710:	20004280 	andcs	r4, r0, r0, lsl #5
 714:	00000130 	andeq	r0, r0, r0, lsr r1
 718:	400c0e41 	andmi	r0, ip, r1, asr #28
 71c:	87400384 	strbhi	r0, [r0, -r4, lsl #7]
 720:	018e4002 	orreq	r4, lr, r2
 724:	41280e41 			; <UNDEFINED> instruction: 0x41280e41
 728:	0000070d 	andeq	r0, r0, sp, lsl #14
 72c:	0000001c 	andeq	r0, r0, ip, lsl r0
 730:	000003e4 	andeq	r0, r0, r4, ror #7
 734:	200043b0 			; <UNDEFINED> instruction: 0x200043b0
 738:	00000108 	andeq	r0, r0, r8, lsl #2
 73c:	40080e41 	andmi	r0, r8, r1, asr #28
 740:	8e400287 	cdphi	2, 4, cr0, cr0, cr7, {4}
 744:	100e4101 	andne	r4, lr, r1, lsl #2
 748:	00070d41 	andeq	r0, r7, r1, asr #26
 74c:	0000001c 	andeq	r0, r0, ip, lsl r0
 750:	000003e4 	andeq	r0, r0, r4, ror #7
 754:	200044b8 			; <UNDEFINED> instruction: 0x200044b8
 758:	00000082 	andeq	r0, r0, r2, lsl #1
 75c:	40080e41 	andmi	r0, r8, r1, asr #28
 760:	8e400287 	cdphi	2, 4, cr0, cr0, cr7, {4}
 764:	200e4101 	andcs	r4, lr, r1, lsl #2
 768:	18070c41 	stmdane	r7, {r0, r6, sl, fp}
 76c:	0000001c 	andeq	r0, r0, ip, lsl r0
 770:	000003e4 	andeq	r0, r0, r4, ror #7
 774:	2000453a 	andcs	r4, r0, sl, lsr r5
 778:	0000006a 	andeq	r0, r0, sl, rrx
 77c:	40080e41 	andmi	r0, r8, r1, asr #28
 780:	8e400287 	cdphi	2, 4, cr0, cr0, cr7, {4}
 784:	100e4101 	andne	r4, lr, r1, lsl #2
 788:	00070d41 	andeq	r0, r7, r1, asr #26
 78c:	0000000c 	andeq	r0, r0, ip
 790:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
 794:	7c020001 	stcvc	0, cr0, [r2], {1}
 798:	000d0c0e 	andeq	r0, sp, lr, lsl #24
 79c:	0000001c 	andeq	r0, r0, ip, lsl r0
 7a0:	0000078c 	andeq	r0, r0, ip, lsl #15
 7a4:	200045a4 	andcs	r4, r0, r4, lsr #11
 7a8:	00000028 	andeq	r0, r0, r8, lsr #32
 7ac:	40080e41 	andmi	r0, r8, r1, asr #28
 7b0:	8e400287 	cdphi	2, 4, cr0, cr0, cr7, {4}
 7b4:	180e4101 	stmdane	lr, {r0, r8, lr}
 7b8:	00070d41 	andeq	r0, r7, r1, asr #26
 7bc:	0000000c 	andeq	r0, r0, ip
 7c0:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
 7c4:	7c020001 	stcvc	0, cr0, [r2], {1}
 7c8:	000d0c0e 	andeq	r0, sp, lr, lsl #24
 7cc:	0000001c 	andeq	r0, r0, ip, lsl r0
 7d0:	000007bc 			; <UNDEFINED> instruction: 0x000007bc
 7d4:	200045cc 	andcs	r4, r0, ip, asr #11
 7d8:	00000028 	andeq	r0, r0, r8, lsr #32
 7dc:	40080e41 	andmi	r0, r8, r1, asr #28
 7e0:	8e400287 	cdphi	2, 4, cr0, cr0, cr7, {4}
 7e4:	180e4101 	stmdane	lr, {r0, r8, lr}
 7e8:	00070d41 	andeq	r0, r7, r1, asr #26
 7ec:	0000000c 	andeq	r0, r0, ip
 7f0:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
 7f4:	7c020001 	stcvc	0, cr0, [r2], {1}
 7f8:	000d0c0e 	andeq	r0, sp, lr, lsl #24
 7fc:	00000018 	andeq	r0, r0, r8, lsl r0
 800:	000007ec 	andeq	r0, r0, ip, ror #15
 804:	200045f4 	strdcs	r4, [r0], -r4	; <UNPREDICTABLE>
 808:	00000018 	andeq	r0, r0, r8, lsl r0
 80c:	40080e41 	andmi	r0, r8, r1, asr #28
 810:	8e400287 	cdphi	2, 4, cr0, cr0, cr7, {4}
 814:	070d4101 	streq	r4, [sp, -r1, lsl #2]
 818:	00000018 	andeq	r0, r0, r8, lsl r0
 81c:	000007ec 	andeq	r0, r0, ip, ror #15
 820:	2000460c 	andcs	r4, r0, ip, lsl #12
 824:	00000020 	andeq	r0, r0, r0, lsr #32
 828:	40080e41 	andmi	r0, r8, r1, asr #28
 82c:	8e400287 	cdphi	2, 4, cr0, cr0, cr7, {4}
 830:	070d4101 	streq	r4, [sp, -r1, lsl #2]
 834:	00000020 	andeq	r0, r0, r0, lsr #32
 838:	000007ec 	andeq	r0, r0, ip, ror #15
 83c:	2000462c 	andcs	r4, r0, ip, lsr #12
 840:	00000034 	andeq	r0, r0, r4, lsr r0
 844:	400c0e41 	andmi	r0, ip, r1, asr #28
 848:	87400384 	strbhi	r0, [r0, -r4, lsl #7]
 84c:	018e4002 	orreq	r4, lr, r2
 850:	41200e41 			; <UNDEFINED> instruction: 0x41200e41
 854:	0000070d 	andeq	r0, r0, sp, lsl #14
 858:	0000000c 	andeq	r0, r0, ip
 85c:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
 860:	7c020001 	stcvc	0, cr0, [r2], {1}
 864:	000d0c0e 	andeq	r0, sp, lr, lsl #24
 868:	0000001c 	andeq	r0, r0, ip, lsl r0
 86c:	00000858 	andeq	r0, r0, r8, asr r8
 870:	20004660 	andcs	r4, r0, r0, ror #12
 874:	00000044 	andeq	r0, r0, r4, asr #32
 878:	40080e41 	andmi	r0, r8, r1, asr #28
 87c:	8e400287 	cdphi	2, 4, cr0, cr0, cr7, {4}
 880:	180e4101 	stmdane	lr, {r0, r8, lr}
 884:	00070d41 	andeq	r0, r7, r1, asr #26
 888:	0000001c 	andeq	r0, r0, ip, lsl r0
 88c:	00000858 	andeq	r0, r0, r8, asr r8
 890:	200046a4 	andcs	r4, r0, r4, lsr #13
 894:	00000050 	andeq	r0, r0, r0, asr r0
 898:	40080e41 	andmi	r0, r8, r1, asr #28
 89c:	8e400287 	cdphi	2, 4, cr0, cr0, cr7, {4}
 8a0:	180e4101 	stmdane	lr, {r0, r8, lr}
 8a4:	00070d41 	andeq	r0, r7, r1, asr #26
 8a8:	0000001c 	andeq	r0, r0, ip, lsl r0
 8ac:	00000858 	andeq	r0, r0, r8, asr r8
 8b0:	200046f4 	strdcs	r4, [r0], -r4	; <UNPREDICTABLE>
 8b4:	0000002a 	andeq	r0, r0, sl, lsr #32
 8b8:	40080e41 	andmi	r0, r8, r1, asr #28
 8bc:	8e400287 	cdphi	2, 4, cr0, cr0, cr7, {4}
 8c0:	100e4101 	andne	r4, lr, r1, lsl #2
 8c4:	00070d41 	andeq	r0, r7, r1, asr #26
 8c8:	0000001c 	andeq	r0, r0, ip, lsl r0
 8cc:	00000858 	andeq	r0, r0, r8, asr r8
 8d0:	2000471e 	andcs	r4, r0, lr, lsl r7
 8d4:	0000002a 	andeq	r0, r0, sl, lsr #32
 8d8:	40080e41 	andmi	r0, r8, r1, asr #28
 8dc:	8e400287 	cdphi	2, 4, cr0, cr0, cr7, {4}
 8e0:	100e4101 	andne	r4, lr, r1, lsl #2
 8e4:	00070d41 	andeq	r0, r7, r1, asr #26
 8e8:	00000020 	andeq	r0, r0, r0, lsr #32
 8ec:	00000858 	andeq	r0, r0, r8, asr r8
 8f0:	20004748 	andcs	r4, r0, r8, asr #14
 8f4:	00000054 	andeq	r0, r0, r4, asr r0
 8f8:	400c0e41 	andmi	r0, ip, r1, asr #28
 8fc:	87400384 	strbhi	r0, [r0, -r4, lsl #7]
 900:	018e4002 	orreq	r4, lr, r2
 904:	41180e41 	tstmi	r8, r1, asr #28
 908:	0000070d 	andeq	r0, r0, sp, lsl #14
 90c:	00000020 	andeq	r0, r0, r0, lsr #32
 910:	00000858 	andeq	r0, r0, r8, asr r8
 914:	2000479c 	mulcs	r0, ip, r7
 918:	00000054 	andeq	r0, r0, r4, asr r0
 91c:	400c0e41 	andmi	r0, ip, r1, asr #28
 920:	87400384 	strbhi	r0, [r0, -r4, lsl #7]
 924:	018e4002 	orreq	r4, lr, r2
 928:	41180e41 	tstmi	r8, r1, asr #28
 92c:	0000070d 	andeq	r0, r0, sp, lsl #14
 930:	0000001c 	andeq	r0, r0, ip, lsl r0
 934:	00000858 	andeq	r0, r0, r8, asr r8
 938:	200047f0 	strdcs	r4, [r0], -r0
 93c:	00000030 	andeq	r0, r0, r0, lsr r0
 940:	40080e41 	andmi	r0, r8, r1, asr #28
 944:	8e400287 	cdphi	2, 4, cr0, cr0, cr7, {4}
 948:	100e4101 	andne	r4, lr, r1, lsl #2
 94c:	00070d41 	andeq	r0, r7, r1, asr #26
 950:	0000001c 	andeq	r0, r0, ip, lsl r0
 954:	00000858 	andeq	r0, r0, r8, asr r8
 958:	20004820 	andcs	r4, r0, r0, lsr #16
 95c:	00000034 	andeq	r0, r0, r4, lsr r0
 960:	40080e41 	andmi	r0, r8, r1, asr #28
 964:	8e400287 	cdphi	2, 4, cr0, cr0, cr7, {4}
 968:	100e4101 	andne	r4, lr, r1, lsl #2
 96c:	00070d41 	andeq	r0, r7, r1, asr #26
 970:	0000001c 	andeq	r0, r0, ip, lsl r0
 974:	00000858 	andeq	r0, r0, r8, asr r8
 978:	20004854 	andcs	r4, r0, r4, asr r8
 97c:	0000003c 	andeq	r0, r0, ip, lsr r0
 980:	40080e41 	andmi	r0, r8, r1, asr #28
 984:	8e400287 	cdphi	2, 4, cr0, cr0, cr7, {4}
 988:	100e4101 	andne	r4, lr, r1, lsl #2
 98c:	00070d41 	andeq	r0, r7, r1, asr #26
 990:	0000001c 	andeq	r0, r0, ip, lsl r0
 994:	00000858 	andeq	r0, r0, r8, asr r8
 998:	20004890 	mulcs	r0, r0, r8
 99c:	00000050 	andeq	r0, r0, r0, asr r0
 9a0:	40080e41 	andmi	r0, r8, r1, asr #28
 9a4:	8e400287 	cdphi	2, 4, cr0, cr0, cr7, {4}
 9a8:	180e4101 	stmdane	lr, {r0, r8, lr}
 9ac:	00070d41 	andeq	r0, r7, r1, asr #26
 9b0:	00000018 	andeq	r0, r0, r8, lsl r0
 9b4:	00000858 	andeq	r0, r0, r8, asr r8
 9b8:	200048e0 	andcs	r4, r0, r0, ror #17
 9bc:	0000009a 	muleq	r0, sl, r0
 9c0:	40080e41 	andmi	r0, r8, r1, asr #28
 9c4:	8e400287 	cdphi	2, 4, cr0, cr0, cr7, {4}
 9c8:	070d4101 	streq	r4, [sp, -r1, lsl #2]
 9cc:	00000018 	andeq	r0, r0, r8, lsl r0
 9d0:	00000858 	andeq	r0, r0, r8, asr r8
 9d4:	2000497a 	andcs	r4, r0, sl, ror r9
 9d8:	0000001a 	andeq	r0, r0, sl, lsl r0
 9dc:	40080e41 	andmi	r0, r8, r1, asr #28
 9e0:	8e400287 	cdphi	2, 4, cr0, cr0, cr7, {4}
 9e4:	070d4101 	streq	r4, [sp, -r1, lsl #2]
 9e8:	00000018 	andeq	r0, r0, r8, lsl r0
 9ec:	00000858 	andeq	r0, r0, r8, asr r8
 9f0:	20004994 	mulcs	r0, r4, r9
 9f4:	00000012 	andeq	r0, r0, r2, lsl r0
 9f8:	40080e41 	andmi	r0, r8, r1, asr #28
 9fc:	8e400287 	cdphi	2, 4, cr0, cr0, cr7, {4}
 a00:	070d4101 	streq	r4, [sp, -r1, lsl #2]
 a04:	00000020 	andeq	r0, r0, r0, lsr #32
 a08:	00000858 	andeq	r0, r0, r8, asr r8
 a0c:	200049a6 	andcs	r4, r0, r6, lsr #19
 a10:	0000006a 	andeq	r0, r0, sl, rrx
 a14:	400c0e41 	andmi	r0, ip, r1, asr #28
 a18:	87400384 	strbhi	r0, [r0, -r4, lsl #7]
 a1c:	018e4002 	orreq	r4, lr, r2
 a20:	41300e41 	teqmi	r0, r1, asr #28
 a24:	0000070d 	andeq	r0, r0, sp, lsl #14
 a28:	0000001c 	andeq	r0, r0, ip, lsl r0
 a2c:	00000858 	andeq	r0, r0, r8, asr r8
 a30:	20004a10 	andcs	r4, r0, r0, lsl sl
 a34:	0000005e 	andeq	r0, r0, lr, asr r0
 a38:	40080e41 	andmi	r0, r8, r1, asr #28
 a3c:	8e400287 	cdphi	2, 4, cr0, cr0, cr7, {4}
 a40:	100e4101 	andne	r4, lr, r1, lsl #2
 a44:	00070d41 	andeq	r0, r7, r1, asr #26
 a48:	0000001c 	andeq	r0, r0, ip, lsl r0
 a4c:	00000858 	andeq	r0, r0, r8, asr r8
 a50:	20004a6e 	andcs	r4, r0, lr, ror #20
 a54:	0000008e 	andeq	r0, r0, lr, lsl #1
 a58:	40080e41 	andmi	r0, r8, r1, asr #28
 a5c:	8e400287 	cdphi	2, 4, cr0, cr0, cr7, {4}
 a60:	200e4101 	andcs	r4, lr, r1, lsl #2
 a64:	00070d41 	andeq	r0, r7, r1, asr #26
 a68:	00000020 	andeq	r0, r0, r0, lsr #32
 a6c:	00000858 	andeq	r0, r0, r8, asr r8
 a70:	20004afc 	strdcs	r4, [r0], -ip
 a74:	00000084 	andeq	r0, r0, r4, lsl #1
 a78:	400c0e41 	andmi	r0, ip, r1, asr #28
 a7c:	87400384 	strbhi	r0, [r0, -r4, lsl #7]
 a80:	018e4002 	orreq	r4, lr, r2
 a84:	41380e41 	teqmi	r8, r1, asr #28
 a88:	0000070d 	andeq	r0, r0, sp, lsl #14
 a8c:	0000000c 	andeq	r0, r0, ip
 a90:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
 a94:	7c020001 	stcvc	0, cr0, [r2], {1}
 a98:	000d0c0e 	andeq	r0, sp, lr, lsl #24
 a9c:	0000001c 	andeq	r0, r0, ip, lsl r0
 aa0:	00000a8c 	andeq	r0, r0, ip, lsl #21
 aa4:	20004b80 	andcs	r4, r0, r0, lsl #23
 aa8:	0000005a 	andeq	r0, r0, sl, asr r0
 aac:	40080e41 	andmi	r0, r8, r1, asr #28
 ab0:	8e400287 	cdphi	2, 4, cr0, cr0, cr7, {4}
 ab4:	180e4101 	stmdane	lr, {r0, r8, lr}
 ab8:	00070d41 	andeq	r0, r7, r1, asr #26
 abc:	0000001c 	andeq	r0, r0, ip, lsl r0
 ac0:	00000a8c 	andeq	r0, r0, ip, lsl #21
 ac4:	20004bda 	ldrdcs	r4, [r0], -sl
 ac8:	0000003a 	andeq	r0, r0, sl, lsr r0
 acc:	40080e41 	andmi	r0, r8, r1, asr #28
 ad0:	8e400287 	cdphi	2, 4, cr0, cr0, cr7, {4}
 ad4:	180e4101 	stmdane	lr, {r0, r8, lr}
 ad8:	00070d41 	andeq	r0, r7, r1, asr #26
 adc:	0000000c 	andeq	r0, r0, ip
 ae0:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
 ae4:	7c020001 	stcvc	0, cr0, [r2], {1}
 ae8:	000d0c0e 	andeq	r0, sp, lr, lsl #24
 aec:	0000001c 	andeq	r0, r0, ip, lsl r0
 af0:	00000adc 	ldrdeq	r0, [r0], -ip
 af4:	20004c14 	andcs	r4, r0, r4, lsl ip
 af8:	00000074 	andeq	r0, r0, r4, ror r0
 afc:	40080e41 	andmi	r0, r8, r1, asr #28
 b00:	8e400287 	cdphi	2, 4, cr0, cr0, cr7, {4}
 b04:	180e4101 	stmdane	lr, {r0, r8, lr}
 b08:	00070d41 	andeq	r0, r7, r1, asr #26
 b0c:	00000020 	andeq	r0, r0, r0, lsr #32
 b10:	00000adc 	ldrdeq	r0, [r0], -ip
 b14:	20004c88 	andcs	r4, r0, r8, lsl #25
 b18:	00000074 	andeq	r0, r0, r4, ror r0
 b1c:	400c0e41 	andmi	r0, ip, r1, asr #28
 b20:	87400384 	strbhi	r0, [r0, -r4, lsl #7]
 b24:	018e4002 	orreq	r4, lr, r2
 b28:	41180e41 	tstmi	r8, r1, asr #28
 b2c:	0000070d 	andeq	r0, r0, sp, lsl #14
 b30:	0000000c 	andeq	r0, r0, ip
 b34:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
 b38:	7c020001 	stcvc	0, cr0, [r2], {1}
 b3c:	000d0c0e 	andeq	r0, sp, lr, lsl #24
 b40:	0000001c 	andeq	r0, r0, ip, lsl r0
 b44:	00000b30 	andeq	r0, r0, r0, lsr fp
 b48:	20004cfc 	strdcs	r4, [r0], -ip
 b4c:	00000074 	andeq	r0, r0, r4, ror r0
 b50:	40080e41 	andmi	r0, r8, r1, asr #28
 b54:	8e400287 	cdphi	2, 4, cr0, cr0, cr7, {4}
 b58:	180e4101 	stmdane	lr, {r0, r8, lr}
 b5c:	00070d41 	andeq	r0, r7, r1, asr #26
 b60:	00000020 	andeq	r0, r0, r0, lsr #32
 b64:	00000b30 	andeq	r0, r0, r0, lsr fp
 b68:	20004d70 	andcs	r4, r0, r0, ror sp
 b6c:	00000074 	andeq	r0, r0, r4, ror r0
 b70:	400c0e41 	andmi	r0, ip, r1, asr #28
 b74:	87400384 	strbhi	r0, [r0, -r4, lsl #7]
 b78:	018e4002 	orreq	r4, lr, r2
 b7c:	41180e41 	tstmi	r8, r1, asr #28
 b80:	0000070d 	andeq	r0, r0, sp, lsl #14
 b84:	0000000c 	andeq	r0, r0, ip
 b88:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
 b8c:	7c020001 	stcvc	0, cr0, [r2], {1}
 b90:	000d0c0e 	andeq	r0, sp, lr, lsl #24
 b94:	0000001c 	andeq	r0, r0, ip, lsl r0
 b98:	00000b84 	andeq	r0, r0, r4, lsl #23
 b9c:	20004de4 	andcs	r4, r0, r4, ror #27
 ba0:	00000074 	andeq	r0, r0, r4, ror r0
 ba4:	40080e41 	andmi	r0, r8, r1, asr #28
 ba8:	8e400287 	cdphi	2, 4, cr0, cr0, cr7, {4}
 bac:	180e4101 	stmdane	lr, {r0, r8, lr}
 bb0:	00070d41 	andeq	r0, r7, r1, asr #26
 bb4:	00000020 	andeq	r0, r0, r0, lsr #32
 bb8:	00000b84 	andeq	r0, r0, r4, lsl #23
 bbc:	20004e58 	andcs	r4, r0, r8, asr lr
 bc0:	00000074 	andeq	r0, r0, r4, ror r0
 bc4:	400c0e41 	andmi	r0, ip, r1, asr #28
 bc8:	87400384 	strbhi	r0, [r0, -r4, lsl #7]
 bcc:	018e4002 	orreq	r4, lr, r2
 bd0:	41180e41 	tstmi	r8, r1, asr #28
 bd4:	0000070d 	andeq	r0, r0, sp, lsl #14
 bd8:	0000000c 	andeq	r0, r0, ip
 bdc:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
 be0:	7c020001 	stcvc	0, cr0, [r2], {1}
 be4:	000d0c0e 	andeq	r0, sp, lr, lsl #24
 be8:	0000001c 	andeq	r0, r0, ip, lsl r0
 bec:	00000bd8 	ldrdeq	r0, [r0], -r8
 bf0:	20004ecc 	andcs	r4, r0, ip, asr #29
 bf4:	00000074 	andeq	r0, r0, r4, ror r0
 bf8:	40080e41 	andmi	r0, r8, r1, asr #28
 bfc:	8e400287 	cdphi	2, 4, cr0, cr0, cr7, {4}
 c00:	180e4101 	stmdane	lr, {r0, r8, lr}
 c04:	00070d41 	andeq	r0, r7, r1, asr #26
 c08:	00000020 	andeq	r0, r0, r0, lsr #32
 c0c:	00000bd8 	ldrdeq	r0, [r0], -r8
 c10:	20004f40 	andcs	r4, r0, r0, asr #30
 c14:	00000074 	andeq	r0, r0, r4, ror r0
 c18:	400c0e41 	andmi	r0, ip, r1, asr #28
 c1c:	87400384 	strbhi	r0, [r0, -r4, lsl #7]
 c20:	018e4002 	orreq	r4, lr, r2
 c24:	41180e41 	tstmi	r8, r1, asr #28
 c28:	0000070d 	andeq	r0, r0, sp, lsl #14
 c2c:	0000000c 	andeq	r0, r0, ip
 c30:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
 c34:	7c020001 	stcvc	0, cr0, [r2], {1}
 c38:	000d0c0e 	andeq	r0, sp, lr, lsl #24
 c3c:	0000001c 	andeq	r0, r0, ip, lsl r0
 c40:	00000c2c 	andeq	r0, r0, ip, lsr #24
 c44:	20004fb4 			; <UNDEFINED> instruction: 0x20004fb4
 c48:	00000274 	andeq	r0, r0, r4, ror r2
 c4c:	40080e41 	andmi	r0, r8, r1, asr #28
 c50:	8e400287 	cdphi	2, 4, cr0, cr0, cr7, {4}
 c54:	500e4101 	andpl	r4, lr, r1, lsl #2
 c58:	00070d41 	andeq	r0, r7, r1, asr #26
 c5c:	00000020 	andeq	r0, r0, r0, lsr #32
 c60:	00000c2c 	andeq	r0, r0, ip, lsr #24
 c64:	20005228 	andcs	r5, r0, r8, lsr #4
 c68:	00000164 	andeq	r0, r0, r4, ror #2
 c6c:	400c0e41 	andmi	r0, ip, r1, asr #28
 c70:	87400384 	strbhi	r0, [r0, -r4, lsl #7]
 c74:	018e4002 	orreq	r4, lr, r2
 c78:	41180e41 	tstmi	r8, r1, asr #28
 c7c:	0000070d 	andeq	r0, r0, sp, lsl #14
 c80:	0000000c 	andeq	r0, r0, ip
 c84:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
 c88:	7c020001 	stcvc	0, cr0, [r2], {1}
 c8c:	000d0c0e 	andeq	r0, sp, lr, lsl #24
 c90:	0000001c 	andeq	r0, r0, ip, lsl r0
 c94:	00000c80 	andeq	r0, r0, r0, lsl #25
 c98:	2000538c 	andcs	r5, r0, ip, lsl #7
 c9c:	00000074 	andeq	r0, r0, r4, ror r0
 ca0:	40080e41 	andmi	r0, r8, r1, asr #28
 ca4:	8e400287 	cdphi	2, 4, cr0, cr0, cr7, {4}
 ca8:	180e4101 	stmdane	lr, {r0, r8, lr}
 cac:	00070d41 	andeq	r0, r7, r1, asr #26
 cb0:	00000020 	andeq	r0, r0, r0, lsr #32
 cb4:	00000c80 	andeq	r0, r0, r0, lsl #25
 cb8:	20005400 	andcs	r5, r0, r0, lsl #8
 cbc:	00000074 	andeq	r0, r0, r4, ror r0
 cc0:	400c0e41 	andmi	r0, ip, r1, asr #28
 cc4:	87400384 	strbhi	r0, [r0, -r4, lsl #7]
 cc8:	018e4002 	orreq	r4, lr, r2
 ccc:	41180e41 	tstmi	r8, r1, asr #28
 cd0:	0000070d 	andeq	r0, r0, sp, lsl #14
 cd4:	00000018 	andeq	r0, r0, r8, lsl r0
 cd8:	00000c80 	andeq	r0, r0, r0, lsl #25
 cdc:	20005474 	andcs	r5, r0, r4, ror r4
 ce0:	0000003c 	andeq	r0, r0, ip, lsr r0
 ce4:	40080e41 	andmi	r0, r8, r1, asr #28
 ce8:	8e400287 	cdphi	2, 4, cr0, cr0, cr7, {4}
 cec:	070d4101 	streq	r4, [sp, -r1, lsl #2]
 cf0:	0000001c 	andeq	r0, r0, ip, lsl r0
 cf4:	00000c80 	andeq	r0, r0, r0, lsl #25
 cf8:	200054b0 			; <UNDEFINED> instruction: 0x200054b0
 cfc:	000000b4 	strheq	r0, [r0], -r4
 d00:	40080e41 	andmi	r0, r8, r1, asr #28
 d04:	8e400287 	cdphi	2, 4, cr0, cr0, cr7, {4}
 d08:	100e4101 	andne	r4, lr, r1, lsl #2
 d0c:	00070d41 	andeq	r0, r7, r1, asr #26
 d10:	0000000c 	andeq	r0, r0, ip
 d14:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
 d18:	7c010001 	stcvc	0, cr0, [r1], {1}
 d1c:	000d0c0e 	andeq	r0, sp, lr, lsl #24
 d20:	0000000c 	andeq	r0, r0, ip
 d24:	00000d10 	andeq	r0, r0, r0, lsl sp
 d28:	20005565 	andcs	r5, r0, r5, ror #10
 d2c:	000001cc 	andeq	r0, r0, ip, asr #3
